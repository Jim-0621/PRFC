File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -291,7 +291,7 @@ private void logPullEvent(String dataId, String group, String tenant, String req
             ConfigTraceService.logPullEvent(dataId, group, tenant, requestIpApp, -1, pullEvent,
                     ConfigTraceService.PULL_TYPE_NOTFOUND, -1, clientIp, notify, "http");
         } else {
-            long delayed = notify ? -1 : System.currentTimeMillis() - chainResponse.getLastModified();
+            long delayed = System.currentTimeMillis() - chainResponse.getLastModified();
             ConfigTraceService.logPullEvent(dataId, group, tenant, requestIpApp, chainResponse.getLastModified(),
                     pullEvent, ConfigTraceService.PULL_TYPE_OK, delayed, clientIp, notify, "http");
         }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -127,7 +127,7 @@ public ConfigQueryResponse handle(ConfigQueryRequest request, RequestMeta meta)
             
             String pullEvent = resolvePullEventType(chainResponse, request.getTag());
             LogUtil.PULL_CHECK_LOG.warn("{}|{}|{}|{}", groupKey, clientIp, response.getMd5(), TimeUtils.getCurrentTimeStr());
-            final long delayed = notify ? -1 : System.currentTimeMillis() - response.getLastModified();
+            final long delayed = System.currentTimeMillis() - response.getLastModified();
             ConfigTraceService.logPullEvent(dataId, group, tenant, requestIpApp, response.getLastModified(), pullEvent, pullType,
                     delayed, clientIp, notify, "grpc");
             

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/ServiceControllerTest.java
Patch:
@@ -150,7 +150,7 @@ void testUpdate() throws Exception {
             e.printStackTrace();
             fail(e.getMessage());
         }
-        TimeUnit.SECONDS.sleep(1);
+        TimeUnit.MILLISECONDS.sleep(1200);
         assertEquals(UpdateServiceTraceEvent.class, eventReceivedClass);
     }
     

File: sys/src/test/java/com/alibaba/nacos/sys/env/EnvUtilTest.java
Patch:
@@ -197,7 +197,6 @@ void testGetLocalAddress() {
         System.setProperty(NACOS_SERVER_IP, "1.1.1.1");
         System.setProperty(Constants.AUTO_REFRESH_TIME, "100");
         try {
-            assertEquals("1.1.1.1:8848", EnvUtil.getLocalAddress());
             EnvUtil.setLocalAddress("testLocalAddress:8848");
             assertEquals("testLocalAddress:8848", EnvUtil.getLocalAddress());
         } finally {
@@ -227,6 +226,7 @@ void testGetContextPath() {
     
     @Test
     void testGetStandaloneMode() {
+        EnvUtil.setIsStandalone(false);
         assertFalse(EnvUtil.getStandaloneMode());
         EnvUtil.setIsStandalone(true);
         assertTrue(EnvUtil.getStandaloneMode());

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -36,7 +36,7 @@
 public class ServiceInfo {
     
     /**
-     * file name pattern: groupName@@name@clusters.
+     * file name pattern: groupName@@name@@clusters.
      */
     private static final int GROUP_POSITION = 0;
     
@@ -83,7 +83,7 @@ public void setAllIPs(boolean allIPs) {
     }
     
     /**
-     * There is only one form of the key:groupName@@name@clusters. This constructor used by DiskCache.read(String) and
+     * There is only one form of the key:groupName@@name@@clusters. This constructor used by DiskCache.read(String) and
      * FailoverReactor.FailoverFileReader,you should know that 'groupName' must not be null,and 'clusters' can be null.
      */
     public ServiceInfo(final String key) {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -114,6 +114,7 @@ public ConfigQueryResponse handle(ConfigQueryRequest request, RequestMeta meta)
             response.setMd5(chainResponse.getMd5());
             response.setEncryptedDataKey(chainResponse.getEncryptedDataKey());
             response.setContent(chainResponse.getContent());
+            response.setContentType(chainResponse.getConfigType());
             response.setLastModified(chainResponse.getLastModified());
             
             String pullType = ConfigTraceService.PULL_TYPE_OK;

File: config/src/main/java/com/alibaba/nacos/config/server/service/query/DefaultConfigQueryHandlerChainBuilder.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.service.query;
 
 import com.alibaba.nacos.config.server.service.query.handler.ConfigChainEntryHandler;
+import com.alibaba.nacos.config.server.service.query.handler.ConfigContentTypeHandler;
 import com.alibaba.nacos.config.server.service.query.handler.FormalHandler;
 import com.alibaba.nacos.config.server.service.query.handler.GrayRuleMatchHandler;
 import com.alibaba.nacos.config.server.service.query.handler.SpecialTagNotFoundHandler;
@@ -32,6 +33,7 @@ public class DefaultConfigQueryHandlerChainBuilder implements ConfigQueryHandler
     public ConfigQueryHandlerChain build() {
         ConfigQueryHandlerChain chain = new ConfigQueryHandlerChain();
         chain.addHandler(new ConfigChainEntryHandler())
+                .addHandler(new ConfigContentTypeHandler())
                 .addHandler(new GrayRuleMatchHandler())
                 .addHandler(new SpecialTagNotFoundHandler())
                 .addHandler(new FormalHandler());

File: config/src/test/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandlerTest.java
Patch:
@@ -26,10 +26,10 @@
 import com.alibaba.nacos.config.server.model.gray.ConfigGrayPersistInfo;
 import com.alibaba.nacos.config.server.model.gray.GrayRuleManager;
 import com.alibaba.nacos.config.server.model.gray.TagGrayRule;
-import com.alibaba.nacos.config.server.service.query.ConfigQueryChainService;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.service.dump.disk.ConfigDiskServiceFactory;
 import com.alibaba.nacos.config.server.service.dump.disk.ConfigRocksDbDiskService;
+import com.alibaba.nacos.config.server.service.query.ConfigQueryChainService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -205,9 +205,9 @@ void testGetTagNotFound() throws Exception {
         
         //check content&md5
         assertNull(response.getContent());
-        assertEquals(MD5Utils.md5Hex(content, "UTF-8"), response.getMd5());
+        assertNull(response.getMd5());
         assertEquals(CONFIG_NOT_FOUND, response.getErrorCode());
-        assertEquals("key_testGetTag_NotFound", response.getEncryptedDataKey());
+        assertNull(response.getEncryptedDataKey());
         
         //check flags.
         assertFalse(response.isBeta());

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/ClientInfoControllerV2.java
Patch:
@@ -269,7 +269,9 @@ public Result<List<ObjectNode>> getSubscribeClientList(
         for (String clientId : allClientsSubscribeService) {
             Client client = clientManager.getClient(clientId);
             Subscriber subscriber = client.getSubscriber(service);
-            if (!Objects.equals(subscriber.getIp(), ip) || !Objects.equals(port, subscriber.getPort())) {
+            boolean ipMatch = Objects.isNull(ip) || Objects.equals(ip, subscriber.getIp());
+            boolean portMatch = Objects.isNull(port) || Objects.equals(port, subscriber.getPort());
+            if (!ipMatch || !portMatch) {
                 continue;
             }
             ObjectNode item = JacksonUtils.createEmptyJsonNode();

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataManager.java
Patch:
@@ -151,7 +151,7 @@ public void removeInstanceMetadata(Service service, String metadataId) {
         if (null != instanceMetadataMapForService) {
             instanceMetadataMapForService.remove(metadataId);
             if (instanceMetadataMapForService.isEmpty()) {
-                serviceMetadataMap.remove(service);
+                instanceMetadataMap.remove(service);
             }
         }
         expiredMetadataInfos.remove(ExpiredMetadataInfo.newExpiredInstanceMetadata(service, metadataId));

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/HistoryConfigInfoMapper.java
Patch:
@@ -137,7 +137,7 @@ default MapperResult getNextHistoryInfo(MapperContext context) {
         String sql = "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,publish_type,"
                 + "gray_name,ext_info,gmt_create,gmt_modified,encrypted_data_key FROM his_config_info "
                 + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? AND publish_type = ? "
-                + (StringUtils.isEmpty(context.getContextParameter(FieldConstant.GRAY_NAME)) ? "" : "AND gray_name = ? ")
+                + (StringUtils.isBlank(context.getContextParameter(FieldConstant.GRAY_NAME)) ? "" : "AND gray_name = ? ")
                 + "AND nid > ? ORDER BY nid LIMIT 1";
 
         List<Object> paramList = CollectionUtils.list(

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalConfigInfoPersistServiceImpl.java
Patch:
@@ -177,6 +177,7 @@ public ConfigOperateResult addConfigInfo(final String srcIp, final String srcUse
      * @param configAdvanceInfo advance info
      * @return
      */
+    @Override
     public ConfigOperateResult insertOrUpdate(String srcIp, String srcUser, ConfigInfo configInfo,
             Map<String, Object> configAdvanceInfo) {
         try {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/constants/FieldConstant.java
Patch:
@@ -43,6 +43,8 @@ public class FieldConstant {
     public static final String PAGE_SIZE = "pageSize";
     
     public static final String ID = "id";
+
+    public static final String NID = "nid";
     
     public static final String START_TIME = "startTime";
     

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoGrayMapperByMySql.java
Patch:
@@ -33,9 +33,8 @@ public class ConfigInfoGrayMapperByMySql extends AbstractMapperByMysql implement
     
     @Override
     public MapperResult findAllConfigInfoGrayForDumpAllFetchRows(MapperContext context) {
-        String sql = " SELECT t.id,data_id,group_id,tenant_id,gray_name,gray_rule,app_name,content,md5,gmt_modified "
-                + " FROM (  SELECT id FROM config_info_gray  ORDER BY id LIMIT " + context.getStartRow() + ","
-                + context.getPageSize() + " ) " + "g, config_info_gray t  WHERE g.id = t.id  ";
+        String sql = " SELECT id,data_id,group_id,tenant_id,gray_name,gray_rule,app_name,content,md5,gmt_modified "
+                + " FROM  config_info_gray  ORDER BY id LIMIT " + context.getStartRow() + "," + context.getPageSize();
         return new MapperResult(sql, Collections.emptyList());
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigRowMapperInjector.java
Patch:
@@ -550,6 +550,7 @@ public ConfigHistoryInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
             configHistoryInfo.setSrcUser(rs.getString("src_user"));
             configHistoryInfo.setOpType(rs.getString("op_type"));
             configHistoryInfo.setPublishType(rs.getString("publish_type"));
+            configHistoryInfo.setGrayName(rs.getString("gray_name"));
             configHistoryInfo.setExtInfo(rs.getString("ext_info"));
             configHistoryInfo.setCreatedTime(rs.getTimestamp("gmt_create"));
             configHistoryInfo.setLastModifiedTime(rs.getTimestamp("gmt_modified"));
@@ -573,6 +574,7 @@ public ConfigHistoryInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
             configHistoryInfo.setSrcIp(rs.getString("src_ip"));
             configHistoryInfo.setOpType(rs.getString("op_type"));
             configHistoryInfo.setPublishType(rs.getString("publish_type"));
+            configHistoryInfo.setGrayName(rs.getString("gray_name"));
             configHistoryInfo.setExtInfo(rs.getString("ext_info"));
             configHistoryInfo.setCreatedTime(rs.getTimestamp("gmt_create"));
             configHistoryInfo.setLastModifiedTime(rs.getTimestamp("gmt_modified"));

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerby.java
Patch:
@@ -42,7 +42,7 @@ public MapperResult removeConfigHistory(MapperContext context) {
     @Override
     public MapperResult pageFindConfigHistoryFetchRows(MapperContext context) {
         String sql =
-                "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,ext_info,publish_type,gmt_create,gmt_modified "
+                "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gray_name,ext_info,publish_type,gmt_create,gmt_modified "
                         + "FROM his_config_info "
                         + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC  OFFSET "
                         + context.getStartRow() + " ROWS FETCH NEXT " + context.getPageSize() + " ROWS ONLY";
@@ -59,7 +59,7 @@ public String getDataSource() {
     public MapperResult findDeletedConfig(MapperContext context) {
         return new MapperResult(
                 "SELECT id, nid, data_id, group_id, app_name, content, md5, gmt_create, gmt_modified, src_user, src_ip, op_type, tenant_id, "
-                        + "publish_type, ext_info, encrypted_data_key FROM his_config_info WHERE op_type = 'D' AND "
+                        + "publish_type,gray_name, ext_info, encrypted_data_key FROM his_config_info WHERE op_type = 'D' AND "
                         + "publish_type = ? and gmt_modified >= ? and nid > ? order by nid OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY",
                 CollectionUtils.list(context.getWhereParameter(FieldConstant.PUBLISH_TYPE),
                         context.getWhereParameter(FieldConstant.START_TIME),

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/HistoryConfigInfoMapperByMySql.java
Patch:
@@ -41,7 +41,7 @@ public MapperResult removeConfigHistory(MapperContext context) {
     @Override
     public MapperResult pageFindConfigHistoryFetchRows(MapperContext context) {
         String sql =
-                "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,ext_info,publish_type,gmt_create,gmt_modified "
+                "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,ext_info,publish_type,gray_name,gmt_create,gmt_modified "
                         + "FROM his_config_info " + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC  LIMIT "
                         + context.getStartRow() + "," + context.getPageSize();
         return new MapperResult(sql, CollectionUtils.list(context.getWhereParameter(FieldConstant.DATA_ID),

File: common/src/test/java/com/alibaba/nacos/common/notify/DefaultSharePublisherTest.java
Patch:
@@ -106,7 +106,7 @@ void testIgnoreExpiredEvent() throws InterruptedException {
         defaultSharePublisher.addSubscriber(smartSubscriber2, MockSlowEvent2.class);
         defaultSharePublisher.publish(mockSlowEvent1);
         defaultSharePublisher.publish(mockSlowEvent2);
-        TimeUnit.MILLISECONDS.sleep(1100);
+        TimeUnit.MILLISECONDS.sleep(1500);
         verify(smartSubscriber1).onEvent(mockSlowEvent1);
         verify(smartSubscriber2).onEvent(mockSlowEvent2);
         reset(smartSubscriber1);

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/NacosConfigConfiguration.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.config.server.filter.CircuitFilter;
 import com.alibaba.nacos.config.server.filter.NacosWebFilter;
 import com.alibaba.nacos.persistence.configuration.condition.ConditionDistributedEmbedStorage;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Conditional;
@@ -34,6 +35,7 @@
 public class NacosConfigConfiguration {
     
     @Bean
+    @ConditionalOnProperty(name = "nacos.web.charset.filter", havingValue = "nacos", matchIfMissing = true)
     public FilterRegistrationBean<NacosWebFilter> nacosWebFilterRegistration() {
         FilterRegistrationBean<NacosWebFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(nacosWebFilter());

File: config/src/main/java/com/alibaba/nacos/config/server/model/CacheItem.java
Patch:
@@ -35,7 +35,7 @@ public class CacheItem {
 
     public String type;
 
-    ConfigCache configCache = new ConfigCache();
+    ConfigCache configCache = ConfigCacheFactoryDelegate.getInstance().createConfigCache();
 
     /**
      * Use for gray.
@@ -92,7 +92,7 @@ public void initConfigGrayIfEmpty() {
     public void initConfigGrayIfEmpty(String grayName) {
         initConfigGrayIfEmpty();
         if (!this.configCacheGray.containsKey(grayName)) {
-            this.configCacheGray.put(grayName, new ConfigCacheGray(grayName));
+            this.configCacheGray.put(grayName, ConfigCacheFactoryDelegate.getInstance().createConfigCacheGray(grayName));
         }
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/query/handler/FormalHandler.java
Patch:
@@ -23,8 +23,6 @@
 
 import java.io.IOException;
 
-import static com.alibaba.nacos.config.server.constant.Constants.ENCODE_UTF8;
-
 /**
  * Formal Handler.
  * This class represents a formal handler in the configuration query processing chain.
@@ -49,7 +47,7 @@ public ConfigQueryChainResponse handle(ConfigQueryChainRequest request) throws I
         String tenant = request.getTenant();
         
         CacheItem cacheItem = ConfigChainEntryHandler.getThreadLocalCacheItem();
-        String md5 = cacheItem.getConfigCache().getMd5(ENCODE_UTF8);
+        String md5 = cacheItem.getConfigCache().getMd5();
         long lastModified = cacheItem.getConfigCache().getLastModifiedTs();
         String encryptedDataKey = cacheItem.getConfigCache().getEncryptedDataKey();
         String contentType = cacheItem.getType();

File: config/src/main/java/com/alibaba/nacos/config/server/service/query/handler/GrayRuleMatchHandler.java
Patch:
@@ -24,8 +24,6 @@
 
 import java.io.IOException;
 
-import static com.alibaba.nacos.config.server.constant.Constants.ENCODE_UTF8;
-
 /**
  * GrayRuleMatchHandler.
  * This class represents a gray rule handler in the configuration query processing chain.
@@ -60,7 +58,7 @@ public ConfigQueryChainResponse handle(ConfigQueryChainRequest request) throws I
             ConfigQueryChainResponse response = new ConfigQueryChainResponse();
             
             long lastModified = matchedGray.getLastModifiedTs();
-            String md5 = matchedGray.getMd5(ENCODE_UTF8);
+            String md5 = matchedGray.getMd5();
             String encryptedDataKey = matchedGray.getEncryptedDataKey();
             String content = ConfigDiskServiceFactory.getInstance()
                     .getGrayContent(request.getDataId(), request.getGroup(), request.getTenant(),

File: config/src/main/java/com/alibaba/nacos/config/server/service/query/handler/SpecialTagNotFoundHandler.java
Patch:
@@ -24,8 +24,6 @@
 
 import java.io.IOException;
 
-import static com.alibaba.nacos.config.server.constant.Constants.ENCODE_UTF8;
-
 /**
  * SpecialTagNotFound Handler.
  * This class represents special tag not found handler in the configuration query processing chain.
@@ -51,7 +49,7 @@ public ConfigQueryChainResponse handle(ConfigQueryChainRequest request) throws I
             String tenant = request.getTenant();
             
             CacheItem cacheItem = ConfigChainEntryHandler.getThreadLocalCacheItem();
-            String md5 = cacheItem.getConfigCache().getMd5(ENCODE_UTF8);
+            String md5 = cacheItem.getConfigCache().getMd5();
             long lastModified = cacheItem.getConfigCache().getLastModifiedTs();
             String encryptedDataKey = cacheItem.getConfigCache().getEncryptedDataKey();
             String contentType = cacheItem.getType();

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpProcessorTest.java
Patch:
@@ -138,7 +138,7 @@ void testDumpNormalAndRemove() throws IOException {
         
         //Check cache
         CacheItem contentCache = ConfigCacheService.getContentCache(GroupKey2.getKey(dataId, group, tenant));
-        assertEquals(MD5Utils.md5Hex(content, "UTF-8"), contentCache.getConfigCache().getMd5Utf8());
+        assertEquals(MD5Utils.md5Hex(content, "UTF-8"), contentCache.getConfigCache().getMd5());
         assertEquals(time, contentCache.getConfigCache().getLastModifiedTs());
         //check disk
         String contentFromDisk = ConfigDiskServiceFactory.getInstance().getContent(dataId, group, tenant);

File: config/src/test/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalConfigInfoPersistServiceImplTest.java
Patch:
@@ -1307,8 +1307,7 @@ void testBuildFindConfigInfoStateSql() {
                 TableConstant.CONFIG_INFO);
         String select = configInfoMapper.select(Arrays.asList("id", "data_id", "group_id", "tenant_id", "gmt_modified"),
                 Arrays.asList("data_id", "group_id", "tenant_id"));
-        assertEquals(
-                "SELECT id,data_id,group_id,tenant_id,gmt_modified FROM config_info WHERE data_id = ? AND group_id = ? AND tenant_id = ?",
+        assertEquals("SELECT id,data_id,group_id,tenant_id,gmt_modified FROM config_info WHERE data_id = ? AND group_id = ? AND tenant_id = ?",
                 select);
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/mapper/AbstractMapperTest.java
Patch:
@@ -71,7 +71,7 @@ void testUpdate() {
     @Test
     void testDelete() {
         String sql = abstractMapper.delete(Arrays.asList("id"));
-        assertEquals("DELETE FROM tenant_info WHERE id = ? ", sql);
+        assertEquals("DELETE FROM tenant_info WHERE id = ?", sql);
     }
     
     @Test

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -79,7 +79,7 @@ public ConfigTransportClient(NacosClientProperties properties, ConfigServerListM
         this.tenant = properties.getProperty(PropertyKeyConst.NAMESPACE);
         this.serverListManager = serverListManager;
         this.properties = properties.asProperties();
-        this.securityProxy = new SecurityProxy(serverListManager.getServerList(),
+        this.securityProxy = new SecurityProxy(serverListManager,
                 ConfigHttpClientManager.getInstance().getNacosRestTemplate());
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -81,7 +81,7 @@ private void init(Properties properties) throws NacosException {
         InitUtils.initWebRootContext(nacosClientProperties);
         serverListManager = new NamingServerListManager(nacosClientProperties, namespace);
         serverListManager.start();
-        securityProxy = new SecurityProxy(serverListManager.getServerList(),
+        securityProxy = new SecurityProxy(serverListManager,
                 NamingHttpClientManager.getInstance().getNacosRestTemplate());
         initSecurityProxy(properties);
         serverProxy = new NamingHttpClientProxy(namespace, securityProxy, serverListManager, nacosClientProperties);

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -74,7 +74,7 @@ public NamingClientProxyDelegate(String namespace, ServiceInfoHolder serviceInfo
         this.serverListManager = new NamingServerListManager(properties, namespace);
         this.serverListManager.start();
         this.serviceInfoHolder = serviceInfoHolder;
-        this.securityProxy = new SecurityProxy(this.serverListManager.getServerList(),
+        this.securityProxy = new SecurityProxy(this.serverListManager,
                 NamingHttpClientManager.getInstance().getNacosRestTemplate());
         initSecurityProxy(properties);
         this.httpClientProxy = new NamingHttpClientProxy(namespace, securityProxy, serverListManager, properties);

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/spi/client/AbstractClientAuthService.java
Patch:
@@ -27,7 +27,7 @@
  */
 public abstract class AbstractClientAuthService implements ClientAuthService {
     
-    protected List<String> serverList;
+    protected volatile List<String> serverList;
     
     protected NacosRestTemplate nacosRestTemplate;
     

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -28,6 +28,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.constant.ParametersField;
 import com.alibaba.nacos.config.server.controller.parameters.SameNamespaceCloneConfigBean;
+import com.alibaba.nacos.config.server.enums.ApiVersionEnum;
 import com.alibaba.nacos.config.server.model.ConfigAdvanceInfo;
 import com.alibaba.nacos.config.server.model.ConfigAllInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -244,7 +245,7 @@ public void getConfig(HttpServletRequest request, HttpServletResponse response,
         
         final String clientIp = RequestUtil.getRemoteIp(request);
         String isNotify = request.getHeader("notify");
-        inner.doGetConfig(request, response, dataId, group, tenant, tag, isNotify, clientIp);
+        inner.doGetConfig(request, response, dataId, group, tenant, tag, isNotify, clientIp, ApiVersionEnum.V1);
     }
     
     /**

File: config/src/main/java/com/alibaba/nacos/config/server/controller/v2/ConfigControllerV2.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.controller.ConfigServletInner;
+import com.alibaba.nacos.config.server.enums.ApiVersionEnum;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigRequestInfo;
 import com.alibaba.nacos.config.server.paramcheck.ConfigBlurSearchHttpParamExtractor;
@@ -105,7 +106,7 @@ public void getConfig(HttpServletRequest request, HttpServletResponse response,
         ParamUtils.checkParamV2(tag);
         final String clientIp = RequestUtil.getRemoteIp(request);
         String isNotify = request.getHeader("notify");
-        inner.doGetConfig(request, response, dataId, group, namespaceId, tag, isNotify, clientIp, true);
+        inner.doGetConfig(request, response, dataId, group, namespaceId, tag, isNotify, clientIp, ApiVersionEnum.V2);
     }
     
     /**

File: config/src/test/java/com/alibaba/nacos/config/server/controller/v2/ConfigControllerV2Test.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.controller.ConfigServletInner;
+import com.alibaba.nacos.config.server.enums.ApiVersionEnum;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigRequestInfo;
 import com.alibaba.nacos.config.server.model.form.ConfigForm;
@@ -136,12 +137,12 @@ void testGetConfig() throws Exception {
             x.getArgument(1, HttpServletResponse.class).getWriter().print(JacksonUtils.toJson(stringResult));
             return null;
         }).when(inner).doGetConfig(any(HttpServletRequest.class), any(HttpServletResponse.class), eq(TEST_DATA_ID), eq(TEST_GROUP),
-                eq(TEST_NAMESPACE_ID), eq(TEST_TAG), eq(null), anyString(), eq(true));
+                eq(TEST_NAMESPACE_ID), eq(TEST_TAG), eq(null), anyString(), eq(ApiVersionEnum.V2));
         
         configControllerV2.getConfig(request, response, TEST_DATA_ID, TEST_GROUP, TEST_NAMESPACE_ID, TEST_TAG);
         
         verify(inner).doGetConfig(eq(request), eq(response), eq(TEST_DATA_ID), eq(TEST_GROUP), eq(TEST_NAMESPACE_ID), eq(TEST_TAG),
-                eq(null), anyString(), eq(true));
+                eq(null), anyString(), eq(ApiVersionEnum.V2));
         JsonNode resNode = JacksonUtils.toObj(response.getContentAsString());
         Integer errCode = JacksonUtils.toObj(resNode.get("code").toString(), Integer.class);
         String actContent = JacksonUtils.toObj(resNode.get("data").toString(), String.class);

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySql.java
Patch:
@@ -250,7 +250,7 @@ public MapperResult findConfigInfoLike4PageFetchRows(MapperContext context) {
             where.and().like("content", content);
         }
         if (!ArrayUtils.isEmpty(types)) {
-            where.in("type", types);
+            where.and().in("type", types);
         }
         where.limit(context.getStartRow(), context.getPageSize());
         return where.build();

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/HistoryConfigInfoMapper.java
Patch:
@@ -107,8 +107,8 @@ default MapperResult findConfigHistoryFetchRows(MapperContext context) {
      */
     default MapperResult detailPreviousConfigHistory(MapperContext context) {
         return new MapperResult(
-                "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,gmt_modified,encrypted_data_key "
-                        + "FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)",
+                "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,publish_type,ext_info,gmt_create"
+                        + ",gmt_modified,encrypted_data_key FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)",
                 Collections.singletonList(context.getWhereParameter(FieldConstant.ID)));
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerbyTest.java
Patch:
@@ -109,8 +109,9 @@ void testDetailPreviousConfigHistory() {
         Object id = "1";
         context.putWhereParameter(FieldConstant.ID, id);
         MapperResult mapperResult = historyConfigInfoMapperByDerby.detailPreviousConfigHistory(context);
-        assertEquals(mapperResult.getSql(), "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,"
-                + "gmt_modified,encrypted_data_key FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
+        assertEquals(mapperResult.getSql(), "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,publish_type"
+                + ",ext_info,gmt_create,gmt_modified,encrypted_data_key "
+                + "FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
         assertArrayEquals(new Object[] {id}, mapperResult.getParamList().toArray());
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/HistoryConfigInfoMapperByMySqlTest.java
Patch:
@@ -107,8 +107,9 @@ void testDetailPreviousConfigHistory() {
         Object id = "1";
         context.putWhereParameter(FieldConstant.ID, id);
         MapperResult mapperResult = historyConfigInfoMapperByMySql.detailPreviousConfigHistory(context);
-        assertEquals(mapperResult.getSql(), "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,"
-                + "gmt_modified,encrypted_data_key FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
+        assertEquals(mapperResult.getSql(), "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,publish_type"
+                + ",ext_info,gmt_create,gmt_modified,encrypted_data_key "
+                + "FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
         assertArrayEquals(new Object[] {id}, mapperResult.getParamList().toArray());
     }
     

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java
Patch:
@@ -30,6 +30,8 @@ public class ConfigQueryResponse extends Response {
     
     public static final int CONFIG_QUERY_CONFLICT = 400;
     
+    public static final int NO_RIGHT = 403;
+    
     String content;
     
     String encryptedDataKey;

File: client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java
Patch:
@@ -37,5 +37,5 @@ public class NacosAuthLoginConstant {
     
     public static final String SERVER = "server";
     
-    
+    public static final String RELOGINFLAG = "reLoginFlag";
 }

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerby.java
Patch:
@@ -33,8 +33,8 @@ public class HistoryConfigInfoMapperByDerby extends AbstractMapperByDerby implem
 
     @Override
     public MapperResult removeConfigHistory(MapperContext context) {
-        String sql = "DELETE FROM his_config_info WHERE id IN( "
-                + "SELECT id FROM his_config_info WHERE gmt_modified < ? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY)";
+        String sql = "DELETE FROM his_config_info WHERE nid IN( "
+                + "SELECT nid FROM his_config_info WHERE gmt_modified < ? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY)";
         return new MapperResult(sql, CollectionUtils.list(context.getWhereParameter(FieldConstant.START_TIME),
                 context.getWhereParameter(FieldConstant.LIMIT_SIZE)));
     }

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerbyTest.java
Patch:
@@ -63,7 +63,7 @@ void setUp() throws Exception {
     void testRemoveConfigHistory() {
         MapperResult mapperResult = historyConfigInfoMapperByDerby.removeConfigHistory(context);
         assertEquals(mapperResult.getSql(),
-                "DELETE FROM his_config_info WHERE id IN( SELECT id FROM his_config_info WHERE gmt_modified < ? "
+                "DELETE FROM his_config_info WHERE nid IN( SELECT nid FROM his_config_info WHERE gmt_modified < ? "
                         + "OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY)");
         assertArrayEquals(new Object[] {startTime, limitSize}, mapperResult.getParamList().toArray());
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigHttpClientManager.java
Patch:
@@ -56,7 +56,7 @@ public class ConfigHttpClientManager implements Closeable {
     
     private static final int CON_TIME_OUT_MILLIS = ParamUtil.getConnectTimeout();
     
-    private static final int READ_TIME_OUT_MILLIS = 3000;
+    private static final int READ_TIME_OUT_MILLIS = ParamUtil.getReadTimeout();
     
     private final LimiterHttpClientRequestInterceptor limiterHttpClientRequestInterceptor = new LimiterHttpClientRequestInterceptor();
     

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -97,6 +97,8 @@ public class PropertyKeyConst {
     
     public static final String LOG_ALL_PROPERTIES = "logAllProperties";
     
+    public static final String CLIENT_MODULE_TYPE = "clientModuleType";
+    
     /**
      * Since 2.3.3, For some situation like java agent using nacos-client which can't use env ram info.
      */

File: client/src/main/java/com/alibaba/nacos/client/address/ServerListChangeEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.impl;
+package com.alibaba.nacos.client.address;
 
 import com.alibaba.nacos.common.notify.SlowEvent;
 

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -28,9 +28,9 @@
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.config.http.ServerHttpAgent;
 import com.alibaba.nacos.client.config.impl.ClientWorker;
+import com.alibaba.nacos.client.config.impl.ConfigServerListManager;
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
 import com.alibaba.nacos.client.config.impl.LocalEncryptedDataKeyProcessor;
-import com.alibaba.nacos.client.config.impl.ServerListManager;
 import com.alibaba.nacos.client.config.utils.ParamUtils;
 import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.LogUtils;
@@ -80,7 +80,7 @@ public NacosConfigService(Properties properties) throws NacosException {
         
         initNamespace(clientProperties);
         this.configFilterChainManager = new ConfigFilterChainManager(clientProperties.asProperties());
-        ServerListManager serverListManager = new ServerListManager(clientProperties);
+        ConfigServerListManager serverListManager = new ConfigServerListManager(clientProperties);
         serverListManager.start();
         
         this.worker = new ClientWorker(this.configFilterChainManager, serverListManager, clientProperties);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -53,7 +53,7 @@ public abstract class ConfigTransportClient {
     
     ScheduledExecutorService executor;
     
-    final ServerListManager serverListManager;
+    final ConfigServerListManager serverListManager;
     
     final Properties properties;
     
@@ -67,7 +67,7 @@ public void shutdown() throws NacosException {
         securityProxy.shutdown();
     }
     
-    public ConfigTransportClient(NacosClientProperties properties, ServerListManager serverListManager) {
+    public ConfigTransportClient(NacosClientProperties properties, ConfigServerListManager serverListManager) {
         
         String encodeTmp = properties.getProperty(PropertyKeyConst.ENCODE);
         if (StringUtils.isBlank(encodeTmp)) {
@@ -79,7 +79,7 @@ public ConfigTransportClient(NacosClientProperties properties, ServerListManager
         this.tenant = properties.getProperty(PropertyKeyConst.NAMESPACE);
         this.serverListManager = serverListManager;
         this.properties = properties.asProperties();
-        this.securityProxy = new SecurityProxy(serverListManager.getServerUrls(),
+        this.securityProxy = new SecurityProxy(serverListManager.getServerList(),
                 ConfigHttpClientManager.getInstance().getNacosRestTemplate());
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
 import com.alibaba.nacos.client.env.NacosClientProperties;
-import com.alibaba.nacos.client.naming.core.ServerListManager;
+import com.alibaba.nacos.client.naming.core.NamingServerListManager;
 import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientManager;
 import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
@@ -57,7 +57,7 @@ public class NacosNamingMaintainService implements NamingMaintainService {
     
     private NamingHttpClientProxy serverProxy;
     
-    private ServerListManager serverListManager;
+    private NamingServerListManager serverListManager;
     
     private SecurityProxy securityProxy;
     
@@ -79,7 +79,7 @@ private void init(Properties properties) throws NacosException {
         namespace = InitUtils.initNamespaceForNaming(nacosClientProperties);
         InitUtils.initSerialization();
         InitUtils.initWebRootContext(nacosClientProperties);
-        serverListManager = new ServerListManager(nacosClientProperties, namespace);
+        serverListManager = new NamingServerListManager(nacosClientProperties, namespace);
         securityProxy = new SecurityProxy(serverListManager.getServerList(),
                 NamingHttpClientManager.getInstance().getNacosRestTemplate());
         initSecurityProxy(properties);

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxy.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.naming.remote;
 
 import com.alibaba.nacos.plugin.auth.api.RequestResource;
-import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
+import com.alibaba.nacos.client.address.ServerListChangeEvent;
 import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
@@ -30,7 +30,7 @@
  *
  * @author xiweng.yy
  */
-public abstract class AbstractNamingClientProxy extends Subscriber<ServerListChangedEvent>
+public abstract class AbstractNamingClientProxy extends Subscriber<ServerListChangeEvent>
         implements NamingClientProxy {
     
     private static final String APP_FILED = "app";

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
-import com.alibaba.nacos.client.naming.core.ServerListManager;
+import com.alibaba.nacos.client.naming.core.NamingServerListManager;
 import com.alibaba.nacos.client.naming.core.ServiceInfoUpdateService;
 import com.alibaba.nacos.client.naming.event.InstancesChangeNotifier;
 import com.alibaba.nacos.client.naming.remote.gprc.NamingGrpcClientProxy;
@@ -53,7 +53,7 @@
  */
 public class NamingClientProxyDelegate implements NamingClientProxy {
     
-    private final ServerListManager serverListManager;
+    private final NamingServerListManager serverListManager;
     
     private final ServiceInfoUpdateService serviceInfoUpdateService;
     
@@ -71,7 +71,7 @@ public NamingClientProxyDelegate(String namespace, ServiceInfoHolder serviceInfo
             NacosClientProperties properties, InstancesChangeNotifier changeNotifier) throws NacosException {
         this.serviceInfoUpdateService = new ServiceInfoUpdateService(properties, serviceInfoHolder, this,
                 changeNotifier);
-        this.serverListManager = new ServerListManager(properties, namespace);
+        this.serverListManager = new NamingServerListManager(properties, namespace);
         this.serviceInfoHolder = serviceInfoHolder;
         this.securityProxy = new SecurityProxy(this.serverListManager.getServerList(),
                 NamingHttpClientManager.getInstance().getNacosRestTemplate());

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -46,7 +46,7 @@
 import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
-import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
+import com.alibaba.nacos.client.address.ServerListChangeEvent;
 import com.alibaba.nacos.client.naming.remote.AbstractNamingClientProxy;
 import com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService;
 import com.alibaba.nacos.client.naming.remote.gprc.redo.data.BatchInstanceRedoData;
@@ -119,13 +119,13 @@ private void start(ServerListFactory serverListFactory, ServiceInfoHolder servic
     }
     
     @Override
-    public void onEvent(ServerListChangedEvent event) {
+    public void onEvent(ServerListChangeEvent event) {
         rpcClient.onServerListChange();
     }
     
     @Override
     public Class<? extends Event> subscribeType() {
-        return ServerListChangedEvent.class;
+        return ServerListChangeEvent.class;
     }
     
     @Override

File: client/src/test/java/com/alibaba/nacos/client/naming/NacosNamingMaintainServiceTest.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
-import com.alibaba.nacos.client.naming.core.ServerListManager;
+import com.alibaba.nacos.client.naming.core.NamingServerListManager;
 import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy;
 import com.alibaba.nacos.client.security.SecurityProxy;
 import org.junit.jupiter.api.AfterEach;
@@ -52,7 +52,7 @@ class NacosNamingMaintainServiceTest {
     
     private NamingHttpClientProxy serverProxy;
     
-    private ServerListManager serverListManager;
+    private NamingServerListManager serverListManager;
     
     private SecurityProxy securityProxy;
     
@@ -66,7 +66,7 @@ void setUp() throws Exception {
         
         nacosNamingMaintainService = new NacosNamingMaintainService(prop);
         serverProxy = mock(NamingHttpClientProxy.class);
-        serverListManager = mock(ServerListManager.class);
+        serverListManager = mock(NamingServerListManager.class);
         securityProxy = mock(SecurityProxy.class);
         executorService = mock(ScheduledExecutorService.class);
         

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.client.auth.ram.utils.SignUtil;
-import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
+import com.alibaba.nacos.client.address.ServerListChangeEvent;
 import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.common.notify.Event;
@@ -185,7 +185,7 @@ public void shutdown() throws NacosException {
         }
         
         @Override
-        public void onEvent(ServerListChangedEvent event) {
+        public void onEvent(ServerListChangeEvent event) {
         
         }
         

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java
Patch:
@@ -47,7 +47,7 @@
 import com.alibaba.nacos.api.selector.NoneSelector;
 import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
-import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
+import com.alibaba.nacos.client.address.ServerListChangeEvent;
 import com.alibaba.nacos.client.naming.remote.gprc.redo.NamingGrpcRedoService;
 import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.common.notify.NotifyCenter;
@@ -683,7 +683,7 @@ public void close() {
         String newServer = "www.aliyun.com";
         when(factory.genNextServer()).thenReturn(newServer);
         when(factory.getServerList()).thenReturn(Stream.of(newServer, "anotherServer").collect(Collectors.toList()));
-        NotifyCenter.publishEvent(new ServerListChangedEvent());
+        NotifyCenter.publishEvent(new ServerListChangeEvent());
         
         retry = 10;
         while (ORIGIN_SERVER.equals(rpc.getCurrentServer().getServerIp())) {

File: common/src/test/java/com/alibaba/nacos/common/utils/InternetAddressUtilTest.java
Patch:
@@ -213,5 +213,4 @@ void testIllegalIpToInt() {
             InternetAddressUtil.ipToInt("127.0.0.256");
         });
     }
-    
 }

File: sys/src/main/java/com/alibaba/nacos/sys/file/WatchFileCenter.java
Patch:
@@ -154,7 +154,7 @@ public static synchronized boolean deregisterWatcher(final String path, final Fi
         return false;
     }
     
-    private static class WatchDirJob extends Thread {
+    static class WatchDirJob extends Thread {
         
         private final ExecutorService callBackExecutor;
         

File: sys/src/main/java/com/alibaba/nacos/sys/utils/ApplicationUtils.java
Patch:
@@ -88,7 +88,7 @@ public static boolean containsLocalBean(String name) {
     }
     
     public static boolean containsBeanDefinition(String beanName) {
-        return applicationContext.containsLocalBean(beanName);
+        return applicationContext.containsBeanDefinition(beanName);
     }
     
     public static int getBeanDefinitionCount() {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -314,11 +314,11 @@ public RestResult<Boolean> deleteConfigs(HttpServletRequest request, @RequestPar
         String clientIp = RequestUtil.getRemoteIp(request);
         String srcUser = RequestUtil.getSrcUserName(request);
         final Timestamp time = TimeUtils.getCurrentTime();
-        List<ConfigInfo> configInfoList = configInfoPersistService.removeConfigInfoByIds(ids, clientIp, srcUser);
+        List<ConfigAllInfo> configInfoList = configInfoPersistService.removeConfigInfoByIds(ids, clientIp, srcUser);
         if (CollectionUtils.isEmpty(configInfoList)) {
             return RestResultUtils.success(true);
         }
-        for (ConfigInfo configInfo : configInfoList) {
+        for (ConfigAllInfo configInfo : configInfoList) {
             ConfigChangePublisher.notifyConfigChange(
                     new ConfigDataChangeEvent(false, configInfo.getDataId(), configInfo.getGroup(),
                             configInfo.getTenant(), time.getTime()));

File: config/src/main/java/com/alibaba/nacos/config/server/model/gray/ConfigGrayPersistInfo.java
Patch:
@@ -23,7 +23,7 @@
  * @date 2024-03-14 10:57
  */
 public class ConfigGrayPersistInfo {
-    
+
     private String type;
     
     private String version;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigOperationService.java
Patch:
@@ -110,7 +110,7 @@ public Boolean publishConfig(ConfigForm configForm, ConfigRequestInfo configRequ
         configInfo.setEncryptedDataKey(encryptedDataKey);
         ConfigOperateResult configOperateResult;
         
-        //beta public
+        //beta publish
         if (StringUtils.isNotBlank(configRequestInfo.getBetaIps())) {
             configForm.setGrayName(BetaGrayRule.TYPE_BETA);
             configForm.setGrayRuleExp(configRequestInfo.getBetaIps());

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpChangeConfigWorker.java
Patch:
@@ -82,14 +82,14 @@ public void run() {
             
             while (true) {
                 List<ConfigInfoStateWrapper> configDeleted = historyConfigInfoPersistService.findDeletedConfig(startTime,
-                        deleteCursorId, pageSize);
+                        deleteCursorId, pageSize, Constants.FORMAL);
                 for (ConfigInfoStateWrapper configInfo : configDeleted) {
                     if (configInfoPersistService.findConfigInfoState(configInfo.getDataId(), configInfo.getGroup(),
                             configInfo.getTenant()) == null) {
                         ConfigCacheService.remove(configInfo.getDataId(), configInfo.getGroup(),
                                 configInfo.getTenant());
-                        LogUtil.DEFAULT_LOG.info("[dump-delete-ok] {}",
-                                new Object[] {GroupKey2.getKey(configInfo.getDataId(), configInfo.getGroup())});
+                        LogUtil.DEFAULT_LOG.info("[dump-delete-ok], groupKey: {}, tenant: {}",
+                                new Object[] {GroupKey2.getKey(configInfo.getDataId(), configInfo.getGroup())}, configInfo.getTenant());
                     }
                 }
                 if (configDeleted.size() < pageSize) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -267,7 +267,7 @@ protected void dumpOperate() throws NacosException {
                                 currentTime), random.nextInt((int) PropertyUtil.getDumpChangeWorkerInterval()),
                         TimeUnit.MILLISECONDS);
                 ConfigExecutor.scheduleConfigChangeTask(
-                        new DumpChangeGrayConfigWorker(this.configInfoGrayPersistService, currentTime),
+                        new DumpChangeGrayConfigWorker(this.configInfoGrayPersistService, currentTime, this.historyConfigInfoPersistService),
                         random.nextInt((int) PropertyUtil.getDumpChangeWorkerInterval()), TimeUnit.MILLISECONDS);
             }
             

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoPersistService.java
Patch:
@@ -169,10 +169,10 @@ void removeConfigInfo(final String dataId, final String group, final String tena
      * @param ids     id list
      * @param srcIp   remote ip
      * @param srcUser user
-     * @return {@link ConfigInfo} list
+     * @return {@link ConfigAllInfo} list
      * @author klw
      */
-    List<ConfigInfo> removeConfigInfoByIds(final List<Long> ids, final String srcIp, final String srcUser);
+    List<ConfigAllInfo> removeConfigInfoByIds(final List<Long> ids, final String srcIp, final String srcUser);
     
     /**
      * Delete tag.

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpChangeConfigWorkerTest.java
Patch:
@@ -120,7 +120,7 @@ void after() throws IllegalAccessException {
     void testDumpChangeIfOff() {
         PropertyUtil.setDumpChangeOn(false);
         dumpChangeConfigWorker.run();
-        Mockito.verify(historyConfigInfoPersistService, times(0)).findDeletedConfig(any(), anyLong(), anyInt());
+        Mockito.verify(historyConfigInfoPersistService, times(0)).findDeletedConfig(any(), anyLong(), anyInt(), any());
     }
     
     @Test
@@ -140,7 +140,7 @@ void testDumpChangeOfDeleteConfigs() {
         assertEquals("encrykey" + 1,
                 ConfigCacheService.getContentCache(GroupKey.getKeyTenant(dataIdPrefix + 1, "group" + 1, "tenant" + 1)).getConfigCache()
                         .getEncryptedDataKey());
-        Mockito.when(historyConfigInfoPersistService.findDeletedConfig(eq(startTime), eq(0L), eq(3))).thenReturn(firstPageDeleted);
+        Mockito.when(historyConfigInfoPersistService.findDeletedConfig(eq(startTime), eq(0L), eq(3), eq("formal"))).thenReturn(firstPageDeleted);
         //mock delete config query is null
         Mockito.when(configInfoPersistService.findConfigInfoState(eq(dataIdPrefix + 1), eq("group" + 1), eq("tenant" + 1)))
                 .thenReturn(null);
@@ -149,7 +149,7 @@ void testDumpChangeOfDeleteConfigs() {
         dumpChangeConfigWorker.run();
         
         //expect delete page return pagesize and will select second page
-        Mockito.verify(historyConfigInfoPersistService, times(1)).findDeletedConfig(eq(startTime), eq(3L), eq(3));
+        Mockito.verify(historyConfigInfoPersistService, times(1)).findDeletedConfig(eq(startTime), eq(3L), eq(3), eq("formal"));
         //expect cache to be cleared.
         assertNull(ConfigCacheService.getContentCache(GroupKey.getKeyTenant(dataIdPrefix + 1, "group" + 1, "tenant" + 1)));
     }

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/constants/FieldConstant.java
Patch:
@@ -80,6 +80,8 @@ public class FieldConstant {
     
     public static final String TAG_ID = "tagId";
     
+    public static final String PUBLISH_TYPE = "publishType";
+    
     public static final String GRAY_NAME = "grayName";
     
     public static final String GRAY_RULE = "grayRule";

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/HistoryConfigInfoMapperByMySql.java
Patch:
@@ -41,8 +41,8 @@ public MapperResult removeConfigHistory(MapperContext context) {
     @Override
     public MapperResult pageFindConfigHistoryFetchRows(MapperContext context) {
         String sql =
-                "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified FROM his_config_info "
-                        + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC  LIMIT "
+                "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,ext_info,publish_type,gmt_create,gmt_modified "
+                        + "FROM his_config_info " + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC  LIMIT "
                         + context.getStartRow() + "," + context.getPageSize();
         return new MapperResult(sql, CollectionUtils.list(context.getWhereParameter(FieldConstant.DATA_ID),
                 context.getWhereParameter(FieldConstant.GROUP_ID), context.getWhereParameter(FieldConstant.TENANT_ID)));

File: config/src/main/java/com/alibaba/nacos/config/server/constant/ConfigModuleStateBuilder.java
Patch:
@@ -50,7 +50,8 @@ public ModuleState build() {
         moduleState.newState(PropertiesConstant.DEFAULT_MAX_SIZE, PropertyUtil.getDefaultMaxSize());
         moduleState.newState(PropertiesConstant.DEFAULT_MAX_AGGR_COUNT, PropertyUtil.getDefaultMaxAggrCount());
         moduleState.newState(PropertiesConstant.DEFAULT_MAX_AGGR_SIZE, PropertyUtil.getDefaultMaxAggrSize());
-        
+        moduleState.newState(Constants.CONFIG_RENTENTION_DAYS_PROPERTY_STATE, PropertyUtil.getConfigRententionDays());
+
         return moduleState;
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -33,7 +33,9 @@ public class Constants {
     public static final String DEFAULT_GROUP = "DEFAULT_GROUP";
     
     public static final String DATASOURCE_PLATFORM_PROPERTY_STATE = "datasource_platform";
-    
+
+    public static final String CONFIG_RENTENTION_DAYS_PROPERTY_STATE = "config_retention_days";
+
     /**
      * Config file directory in server side.
      */

File: config/src/main/java/com/alibaba/nacos/config/server/constant/PropertiesConstant.java
Patch:
@@ -62,6 +62,7 @@ public class PropertiesConstant {
     public static final String DUMP_CHANGE_ON = "dumpChangeOn";
     
     public static final String DUMP_CHANGE_WORKER_INTERVAL = "dumpChangeWorkerInterval";
-    
-    
+
+    public static final String CONFIG_RENTENTION_DAYS = "nacos.config.retention.days";
+
 }

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -63,6 +63,8 @@ public class PropertyKeyConst {
     
     public static final String CONFIG_RETRY_TIME = "configRetryTime";
     
+    public static final String CONFIG_REQUEST_TIMEOUT = "configRequestTimeout";
+    
     public static final String CLIENT_WORKER_MAX_THREAD_COUNT = "clientWorkerMaxThreadCount";
     
     public static final String CLIENT_WORKER_THREAD_COUNT = "clientWorkerThreadCount";

File: core/src/main/java/com/alibaba/nacos/core/namespace/repository/EmbeddedNamespacePersistServiceImpl.java
Patch:
@@ -162,7 +162,7 @@ public String generateLikeArgument(String s) {
     
     @Override
     public boolean isExistTable(String tableName) {
-        String sql = String.format("SELECT 1 FROM %s FETCH FIRST ROW ONLY", tableName);
+        String sql = String.format("SELECT COUNT(*) FROM %s ", tableName);
         try {
             databaseOperate.queryOne(sql, Integer.class);
             return true;

File: core/src/main/java/com/alibaba/nacos/core/namespace/repository/ExternalNamespacePersistServiceImpl.java
Patch:
@@ -160,7 +160,7 @@ public String generateLikeArgument(String s) {
     
     @Override
     public boolean isExistTable(String tableName) {
-        String sql = String.format("SELECT 1 FROM %s LIMIT 1", tableName);
+        String sql = String.format("SELECT COUNT(*) FROM %s ", tableName);
         try {
             jt.queryForObject(sql, Integer.class);
             return true;

File: core/src/test/java/com/alibaba/nacos/core/namespace/repository/EmbeddedNamespacePersistServiceTest.java
Patch:
@@ -187,7 +187,7 @@ void generateLikeArgumentTest() {
     @Test
     void isExistTableTest() {
         String tableName = "tableName";
-        String sql = String.format("SELECT 1 FROM %s FETCH FIRST ROW ONLY", tableName);
+        String sql = String.format("SELECT COUNT(*) FROM %s ", tableName);
         
         when(databaseOperate.queryOne(sql, Integer.class)).thenReturn(1);
         boolean existTableA = embeddedNamespacePersistService.isExistTable(tableName);

File: core/src/test/java/com/alibaba/nacos/core/namespace/repository/ExternalNamespacePersistServiceTest.java
Patch:
@@ -191,7 +191,7 @@ void generateLikeArgumentTest() {
     @Test
     void isExistTableTest() {
         String tableName = "tableName";
-        String sql = String.format("SELECT 1 FROM %s LIMIT 1", tableName);
+        String sql = String.format("SELECT COUNT(*) FROM %s ", tableName);
         
         when(jt.queryForObject(eq(sql), eq(Integer.class))).thenReturn(1);
         boolean existTableA = externalNamespacePersistService.isExistTable(tableName);

File: naming/src/main/java/com/alibaba/nacos/naming/model/form/UpdateSwitchForm.java
Patch:
@@ -33,7 +33,7 @@ public class UpdateSwitchForm implements Serializable {
     
     private static final long serialVersionUID = -1580959130954136990L;
     
-    private Boolean debug;
+    private boolean debug;
     
     private String entry;
     
@@ -58,11 +58,11 @@ public void validate() throws NacosApiException {
         }
     }
     
-    public Boolean getDebug() {
+    public boolean getDebug() {
         return debug;
     }
     
-    public void setDebug(Boolean debug) {
+    public void setDebug(boolean debug) {
         this.debug = debug;
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
+import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.paramcheck.impl.ConfigBatchListenRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
@@ -55,7 +56,7 @@ public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configCha
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());
         String tag = configChangeListenRequest.getHeader(Constants.VIPSERVER_TAG);
-        
+        ParamUtils.checkParam(tag);
         ConfigChangeBatchListenResponse configChangeBatchListenResponse = new ConfigChangeBatchListenResponse();
         for (ConfigBatchListenRequest.ConfigListenContext listenContext : configChangeListenRequest
                 .getConfigListenContexts()) {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeClusterSyncRequestHandler.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.config.server.service.dump.DumpRequest;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
+import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.paramcheck.impl.ConfigRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
@@ -49,7 +50,7 @@ public ConfigChangeClusterSyncRequestHandler(DumpService dumpService) {
     @ExtractorManager.Extractor(rpcExtractor = ConfigRequestParamExtractor.class)
     public ConfigChangeClusterSyncResponse handle(ConfigChangeClusterSyncRequest configChangeSyncRequest,
             RequestMeta meta) throws NacosException {
-    
+        ParamUtils.checkParam(configChangeSyncRequest.getTag());
         DumpRequest dumpRequest = DumpRequest.create(configChangeSyncRequest.getDataId(),
                 configChangeSyncRequest.getGroup(), configChangeSyncRequest.getTenant(),
                 configChangeSyncRequest.getLastModified(), meta.getClientIp());

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -29,6 +29,7 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
+import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.paramcheck.ExtractorManager;
@@ -83,7 +84,8 @@ private ConfigQueryResponse getContext(ConfigQueryRequest configQueryRequest, Re
         String autoTag = configQueryRequest.getHeader(com.alibaba.nacos.api.common.Constants.VIPSERVER_TAG);
         String requestIpApp = meta.getLabels().get(CLIENT_APPNAME_HEADER);
         String acceptCharset = ENCODE_UTF8;
-        
+        ParamUtils.checkParam(tag);
+        ParamUtils.checkParam(autoTag);
         int lockResult = ConfigCacheService.tryConfigReadLock(groupKey);
         String pullEvent = ConfigTraceService.PULL_EVENT;
         String pullType = ConfigTraceService.PULL_TYPE_OK;

File: core/src/main/java/com/alibaba/nacos/core/paramcheck/CheckConfiguration.java
Patch:
@@ -35,7 +35,7 @@ public FilterRegistrationBean<ParamCheckerFilter> checkerFilterRegistration(Para
         FilterRegistrationBean<ParamCheckerFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(checkerFilter);
         registration.addUrlPatterns("/*");
-        registration.setName("requestContextFilter");
+        registration.setName("checkerFilter");
         registration.setOrder(8);
         return registration;
     }

File: config/src/test/java/com/alibaba/nacos/config/server/paramcheck/ParamExtractorTest.java
Patch:
@@ -56,7 +56,7 @@ class ParamExtractorTest {
     void testBlurFilter() throws Exception {
         MockedStatic<EnvUtil> mockedStatic = Mockito.mockStatic(EnvUtil.class);
         final Method check = ConfigController.class.getMethod("fuzzySearchConfig", String.class, String.class, String.class, String.class,
-                String.class, int.class, int.class);
+                String.class, String.class, int.class, int.class);
         ExtractorManager.Extractor annotation = check.getAnnotation(ExtractorManager.Extractor.class);
         AbstractHttpParamExtractor httpExtractor = Mockito.spy(ExtractorManager.getHttpExtractor(annotation));
         

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/ConfigInfoMapperByDerbyTest.java
Patch:
@@ -263,15 +263,15 @@ void testFindConfigInfoBaseByGroupFetchRows() {
     @Test
     void testFindConfigInfoLike4PageCountRows() {
         MapperResult mapperResult = configInfoMapperByDerby.findConfigInfoLike4PageCountRows(context);
-        assertEquals("SELECT count(*) FROM config_info WHERE  tenant_id LIKE ?  AND app_name = ? ", mapperResult.getSql());
+        assertEquals("SELECT count(*) FROM config_info WHERE tenant_id LIKE ?  AND app_name = ? ", mapperResult.getSql());
         assertArrayEquals(new Object[] {tenantId, appName}, mapperResult.getParamList().toArray());
     }
     
     @Test
     void testFindConfigInfoLike4PageFetchRows() {
         MapperResult mapperResult = configInfoMapperByDerby.findConfigInfoLike4PageFetchRows(context);
-        assertEquals(mapperResult.getSql(), "SELECT id,data_id,group_id,tenant_id,app_name,content,encrypted_data_key FROM config_info "
-                + "WHERE  tenant_id LIKE ?  AND app_name = ?  OFFSET " + startRow + " ROWS FETCH NEXT " + pageSize + " ROWS ONLY");
+        assertEquals(mapperResult.getSql(), "SELECT id,data_id,group_id,tenant_id,app_name,content,encrypted_data_key,type FROM config_info "
+                + "WHERE tenant_id LIKE ?  AND app_name = ?  OFFSET " + startRow + " ROWS FETCH NEXT " + pageSize + " ROWS ONLY");
         assertArrayEquals(new Object[] {tenantId, appName}, mapperResult.getParamList().toArray());
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySqlTest.java
Patch:
@@ -261,15 +261,15 @@ void testFindConfigInfoBaseByGroupFetchRows() {
     @Test
     void testFindConfigInfoLike4PageCountRows() {
         MapperResult mapperResult = configInfoMapperByMySql.findConfigInfoLike4PageCountRows(context);
-        assertEquals("SELECT count(*) FROM config_info WHERE  tenant_id LIKE ?  AND app_name = ? ", mapperResult.getSql());
+        assertEquals("SELECT count(*) FROM config_info WHERE tenant_id LIKE ?  AND app_name = ? ", mapperResult.getSql());
         assertArrayEquals(new Object[] {tenantId, appName}, mapperResult.getParamList().toArray());
     }
     
     @Test
     void testFindConfigInfoLike4PageFetchRows() {
         MapperResult mapperResult = configInfoMapperByMySql.findConfigInfoLike4PageFetchRows(context);
-        assertEquals(mapperResult.getSql(), "SELECT id,data_id,group_id,tenant_id,app_name,content,encrypted_data_key FROM config_info "
-                + "WHERE  tenant_id LIKE ?  AND app_name = ?  LIMIT " + startRow + "," + pageSize);
+        assertEquals(mapperResult.getSql(), "SELECT id,data_id,group_id,tenant_id,app_name,content,encrypted_data_key,type FROM config_info "
+                + "WHERE tenant_id LIKE ?  AND app_name = ?  LIMIT " + startRow + "," + pageSize);
         assertArrayEquals(new Object[] {tenantId, appName}, mapperResult.getParamList().toArray());
     }
     

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/jwt/NacosSignatureAlgorithm.java
Patch:
@@ -203,7 +203,9 @@ private Mac getMacInstance(Key key) {
             Mac instance = Mac.getInstance(jcaName);
             instance.init(key);
             return instance;
-        } catch (NoSuchAlgorithmException | InvalidKeyException e) {
+        } catch (NoSuchAlgorithmException e) {
+            throw new IllegalArgumentException("No Such Algorithm: " + jcaName);
+        } catch (InvalidKeyException e) {
             throw new IllegalArgumentException("Invalid key: " + key);
         }
     }

File: sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java
Patch:
@@ -328,7 +328,7 @@ public static float getCpu() {
     
     public static float getMem() {
         return (float) (1
-                - OperatingSystemBeanManager.getFreePhysicalMem() / OperatingSystemBeanManager.getTotalPhysicalMem());
+                - (double) OperatingSystemBeanManager.getFreePhysicalMem() / (double) OperatingSystemBeanManager.getTotalPhysicalMem());
     }
     
     public static String getConfPath() {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/TcpHealthCheckProcessor.java
Patch:
@@ -102,7 +102,7 @@ public void process(HealthCheckTaskV2 task, Service service, ClusterMetadata met
         // TODO handle marked(white list) logic like v1.x.
         if (!instance.tryStartCheck()) {
             SRV_LOG.warn("[HEALTH-CHECK-V2] tcp check started before last one finished, service: {} : {} : {}:{}",
-                    service.getGroupedServiceName(), instance.getCluster(), instance.getIp(), instance.getPort());
+                    service.getNameSpaceGroupedServiceName(), instance.getCluster(), instance.getIp(), instance.getPort());
             healthCheckCommon
                     .reEvaluateCheckRT(task.getCheckRtNormalized() * 2, task, switchDomain.getTcpHealthParams());
             return;
@@ -287,7 +287,7 @@ public void finishCheck(boolean success, boolean now, long rt, String msg) {
         
         @Override
         public String toString() {
-            return service.getGroupedServiceName() + ":" + instance.getCluster() + ":" + instance.getIp() + ":"
+            return service.getNameSpaceGroupedServiceName() + ":" + instance.getCluster() + ":" + instance.getIp() + ":"
                     + instance.getPort();
         }
         

File: api/src/main/java/com/alibaba/nacos/api/ability/constant/AbilityKey.java
Patch:
@@ -47,6 +47,8 @@ public enum AbilityKey {
      */
     SERVER_TEST_2("test_2", "just for junit test", AbilityMode.SERVER),
     
+    SUPPORT_NEW_GRAY_MODEL("support_new_gray_model", "support_new_gray_model", AbilityMode.SERVER),
+    
     /**
      * For Test temporarily.
      */

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -35,6 +35,8 @@ public class Constants {
     
     public static final String CLIENT_VERSION_KEY = "ClientVersion";
     
+    public static final String CLIENT_IP = "ClientIp";
+    
     public static final String UNKNOWN_APP = "UnknownApp";
     
     public static final String DEFAULT_DOMAINNAME = "commonconfig.config-host.taobao.com";

File: api/src/test/java/com/alibaba/nacos/api/utils/AbilityKeyTest.java
Patch:
@@ -97,7 +97,7 @@ void testMapEnum() {
     @Test
     void testGetAllValues() {
         Collection<AbilityKey> actual = AbilityKey.getAllValues(AbilityMode.SERVER);
-        assertEquals(3, actual.size());
+        assertEquals(4, actual.size());
         actual = AbilityKey.getAllValues(AbilityMode.SDK_CLIENT);
         assertEquals(1, actual.size());
         actual = AbilityKey.getAllValues(AbilityMode.CLUSTER_CLIENT);
@@ -107,7 +107,7 @@ void testGetAllValues() {
     @Test
     void testGetAllNames() {
         Collection<String> actual = AbilityKey.getAllNames(AbilityMode.SERVER);
-        assertEquals(3, actual.size());
+        assertEquals(4, actual.size());
         actual = AbilityKey.getAllNames(AbilityMode.SDK_CLIENT);
         assertEquals(1, actual.size());
         actual = AbilityKey.getAllNames(AbilityMode.CLUSTER_CLIENT);

File: config/src/main/java/com/alibaba/nacos/config/server/constant/PropertiesConstant.java
Patch:
@@ -63,5 +63,8 @@ public class PropertiesConstant {
     
     public static final String DUMP_CHANGE_WORKER_INTERVAL = "dumpChangeWorkerInterval";
     
+    public static final String GRAY_CAPATIBEL_MODEL = "nacos.config.gray.compatible.model";
+    
+    
     
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -160,12 +160,13 @@ public T call() throws Exception {
         List<T> runJobs() {
             Collection<Member> ipList = serverMemberManager.allMembers();
             List<T> collectionResult = new ArrayList<>(ipList.size());
+            
             // Submit query task.
             for (Member ip : ipList) {
                 try {
                     completionService.submit(new Job<T>(ip.getAddress()) {
                     });
-                } catch (Exception e) { // Send request failed.
+                } catch (Throwable e) { // Send request failed.
                     LogUtil.DEFAULT_LOG.warn("invoke to {} with exception: {} during submit job", ip, e.getMessage());
                 }
             }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/MD5Util.java
Patch:
@@ -35,6 +35,7 @@
 import java.util.List;
 import java.util.Map;
 
+import static com.alibaba.nacos.api.common.Constants.VIPSERVER_TAG;
 import static com.alibaba.nacos.config.server.constant.Constants.LINE_SEPARATOR;
 import static com.alibaba.nacos.config.server.constant.Constants.WORD_SEPARATOR;
 
@@ -52,7 +53,7 @@ public class MD5Util {
     public static List<String> compareMd5(HttpServletRequest request, HttpServletResponse response,
             Map<String, String> clientMd5Map) {
         List<String> changedGroupKeys = new ArrayList<>();
-        String tag = request.getHeader("Vipserver-Tag");
+        String tag = request.getHeader(VIPSERVER_TAG);
         for (Map.Entry<String, String> entry : clientMd5Map.entrySet()) {
             String groupKey = entry.getKey();
             String clientMd5 = entry.getValue();

File: config/src/test/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifierTest.java
Patch:
@@ -131,7 +131,7 @@ void testOnDataEvent() throws InterruptedException {
         //mock push tps passed
         Mockito.when(tpsControlManager.check(any(TpsCheckRequest.class))).thenReturn(new TpsCheckResponse(true, 200, "success"));
         
-        rpcConfigChangeNotifier.onEvent(new LocalDataChangeEvent(groupKey, true, betaIps));
+        rpcConfigChangeNotifier.onEvent(new LocalDataChangeEvent(groupKey));
         //wait rpc push executed.
         Thread.sleep(50L);
         //expect rpc push task run.

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpChangeConfigWorkerTest.java
Patch:
@@ -105,8 +105,7 @@ void after() throws IllegalAccessException {
         dynamicDataSourceMockedStatic.close();
         envUtilMockedStatic.close();
         ConfigDiskServiceFactory.getInstance().clearAll();
-        ConfigDiskServiceFactory.getInstance().clearAllBeta();
-        ConfigDiskServiceFactory.getInstance().clearAllTag();
+        ConfigDiskServiceFactory.getInstance().clearAllGray();
         
         Field[] declaredFields = ConfigDiskServiceFactory.class.getDeclaredFields();
         for (Field filed : declaredFields) {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/constants/TableConstant.java
Patch:
@@ -32,6 +32,8 @@ public class TableConstant {
     
     public static final String CONFIG_INFO_TAG = "config_info_tag";
     
+    public static final String CONFIG_INFO_GRAY = "config_info_gray";
+    
     public static final String CONFIG_TAGS_RELATION = "config_tags_relation";
     
     public static final String GROUP_CAPACITY = "group_capacity";

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthenticationProvider.java
Patch:
@@ -94,11 +94,10 @@ public Authentication authenticate(Authentication authentication) throws Authent
         try {
             userDetails = userDetailsService.loadUserByUsername(AuthConstants.LDAP_PREFIX + username);
         } catch (UsernameNotFoundException exception) {
-            String nacosPassword = PasswordEncoderUtil.encode(AuthConstants.LDAP_DEFAULT_PASSWORD);
-            userDetailsService.createUser(AuthConstants.LDAP_PREFIX + username, nacosPassword);
+            userDetailsService.createUser(AuthConstants.LDAP_PREFIX + username, AuthConstants.LDAP_DEFAULT_ENCODED_PASSWORD);
             User user = new User();
             user.setUsername(AuthConstants.LDAP_PREFIX + username);
-            user.setPassword(nacosPassword);
+            user.setPassword(AuthConstants.LDAP_DEFAULT_ENCODED_PASSWORD);
             userDetails = new NacosUserDetails(user);
         }
         return new UsernamePasswordAuthenticationToken(userDetails, password, userDetails.getAuthorities());

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthenticationProviderTest.java
Patch:
@@ -81,7 +81,7 @@ class LdapAuthenticationProviderTest {
     
     private List<RoleInfo> roleInfos = new ArrayList<>();
     
-    private String defaultPassWord = "nacos";
+    private String defaultPassWord = System.getProperty("ldap.default.password", "nacos");
     
     @BeforeEach
     void setUp() throws NoSuchMethodException {

File: test/config-test/src/test/java/com/alibaba/nacos/test/base/BaseClusterTest.java
Patch:
@@ -79,6 +79,7 @@ public class BaseClusterTest extends HttpClient4Test {
     static {
         System.getProperties().setProperty("nacos.core.auth.enabled", "false");
         System.getProperties().setProperty("embeddedStorage", "true");
+        System.getProperties().setProperty("nacos.config.derby.ops.enabled", "true");
         String ip = InetUtils.getSelfIP();
         clusterInfo = "nacos.member.list=" + ip + ":8847," + ip + ":8848," + ip + ":8849";
         

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -37,7 +37,6 @@
 import com.alibaba.nacos.test.base.BaseClusterTest;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.MethodOrderer.MethodName;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.TestMethodOrder;

File: auth/src/main/java/com/alibaba/nacos/auth/parser/grpc/ConfigGrpcResourceParser.java
Patch:
@@ -67,7 +67,7 @@ protected String getResourceName(Request request) {
             dataId = ((AbstractConfigRequest) request).getDataId();
         } else {
             dataId = (String) ReflectUtils
-                    .getFieldValue(request, com.alibaba.nacos.api.common.Constants.DATAID, StringUtils.EMPTY);
+                    .getFieldValue(request, com.alibaba.nacos.api.common.Constants.DATA_ID, StringUtils.EMPTY);
         }
         return StringUtils.isBlank(dataId) ? StringUtils.EMPTY : dataId;
     }

File: auth/src/test/java/com/alibaba/nacos/auth/HttpProtocolAuthServiceTest.java
Patch:
@@ -67,7 +67,7 @@ void setUp() throws Exception {
         Mockito.when(request.getParameter(eq(CommonParams.SERVICE_NAME))).thenReturn("testS");
         Mockito.when(request.getParameter(eq("tenant"))).thenReturn("testCNs");
         Mockito.when(request.getParameter(eq(Constants.GROUP))).thenReturn("testCG");
-        Mockito.when(request.getParameter(eq(Constants.DATAID))).thenReturn("testD");
+        Mockito.when(request.getParameter(eq(Constants.DATA_ID))).thenReturn("testD");
     }
     
     @Test
@@ -109,7 +109,7 @@ void testParseResourceWithConfigType() throws NoSuchMethodException {
         Resource actual = httpProtocolAuthService.parseResource(request, secured);
         assertEquals(SignType.CONFIG, actual.getType());
         assertEquals("testD", actual.getName());
-        assertEquals("testCNs", actual.getNamespaceId());
+        assertEquals("testNNs", actual.getNamespaceId());
         assertEquals("testCG", actual.getGroup());
         assertNotNull(actual.getProperties());
     }

File: logger-adapter-impl/logback-adapter-12/src/main/java/com/alibaba/nacos/logger/adapter/logback12/LogbackNacosLoggingAdapter.java
Patch:
@@ -109,7 +109,9 @@ private LoggerContext loadConfigurationOnStart(final String location) {
         configurator.setContext(loggerContext);
         if (StringUtils.isNotBlank(location)) {
             try {
+                boolean isPackagingDataEnabled = loggerContext.isPackagingDataEnabled();
                 configurator.configure(ResourceUtils.getResourceUrl(location));
+                loggerContext.setPackagingDataEnabled(isPackagingDataEnabled);
             } catch (Exception e) {
                 throw new IllegalStateException("Could not initialize Logback Nacos logging from " + location, e);
             }

File: test/core-test/src/test/java/com/alibaba/nacos/test/ability/component/TestServerAbilityControlManager.java
Patch:
@@ -30,7 +30,7 @@ protected Map<AbilityMode, Map<AbilityKey, Boolean>> initCurrentNodeAbilities()
         Map<AbilityKey, Boolean> map = new HashMap<>();
         map.put(AbilityKey.SERVER_TEST_1, true);
         map.put(AbilityKey.SERVER_TEST_2, false);
-        HashMap res = new HashMap<>();
+        HashMap<AbilityMode, Map<AbilityKey, Boolean>> res = new HashMap<>();
         res.put(AbilityMode.SERVER, map);
         
         Map<AbilityKey, Boolean> map1 = new HashMap<>();

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/derby/TenantInfoMapperByDerby.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.plugin.datasource.impl.derby;
 
 import com.alibaba.nacos.plugin.datasource.constants.DataSourceConstant;
-import com.alibaba.nacos.plugin.datasource.mapper.AbstractMapper;
 import com.alibaba.nacos.plugin.datasource.mapper.TenantInfoMapper;
 
 /**
@@ -26,7 +25,7 @@
  * @author hyx
  **/
 
-public class TenantInfoMapperByDerby extends AbstractMapper implements TenantInfoMapper {
+public class TenantInfoMapperByDerby extends AbstractMapperByDerby implements TenantInfoMapper {
 
     @Override
     public String getDataSource() {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoBetaMapperByMySql.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.plugin.datasource.impl.mysql;
 
 import com.alibaba.nacos.plugin.datasource.constants.DataSourceConstant;
-import com.alibaba.nacos.plugin.datasource.mapper.AbstractMapper;
 import com.alibaba.nacos.plugin.datasource.mapper.ConfigInfoBetaMapper;
 import com.alibaba.nacos.plugin.datasource.model.MapperContext;
 import com.alibaba.nacos.plugin.datasource.model.MapperResult;
@@ -31,7 +30,7 @@
  * @author hyx
  **/
 
-public class ConfigInfoBetaMapperByMySql extends AbstractMapper implements ConfigInfoBetaMapper {
+public class ConfigInfoBetaMapperByMySql extends AbstractMapperByMysql implements ConfigInfoBetaMapper {
 
     @Override
     public MapperResult findAllConfigInfoBetaForDumpAllFetchRows(MapperContext context) {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/TenantInfoMapperByMySql.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.plugin.datasource.impl.mysql;
 
 import com.alibaba.nacos.plugin.datasource.constants.DataSourceConstant;
-import com.alibaba.nacos.plugin.datasource.mapper.AbstractMapper;
 import com.alibaba.nacos.plugin.datasource.mapper.TenantInfoMapper;
 
 /**
@@ -26,7 +25,7 @@
  * @author hyx
  **/
 
-public class TenantInfoMapperByMySql extends AbstractMapper implements TenantInfoMapper {
+public class TenantInfoMapperByMySql extends AbstractMapperByMysql implements TenantInfoMapper {
 
     @Override
     public String getDataSource() {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoMapper.java
Patch:
@@ -492,7 +492,6 @@ default MapperResult updateConfigInfoAtomicCas(MapperContext context) {
         paramList.add(context.getUpdateParameter(FieldConstant.MD5));
         paramList.add(context.getUpdateParameter(FieldConstant.SRC_IP));
         paramList.add(context.getUpdateParameter(FieldConstant.SRC_USER));
-        paramList.add(context.getUpdateParameter(FieldConstant.GMT_MODIFIED));
         paramList.add(context.getUpdateParameter(FieldConstant.APP_NAME));
         paramList.add(context.getUpdateParameter(FieldConstant.C_DESC));
         paramList.add(context.getUpdateParameter(FieldConstant.C_USE));
@@ -504,8 +503,9 @@ default MapperResult updateConfigInfoAtomicCas(MapperContext context) {
         paramList.add(context.getWhereParameter(FieldConstant.GROUP_ID));
         paramList.add(context.getWhereParameter(FieldConstant.TENANT_ID));
         paramList.add(context.getWhereParameter(FieldConstant.MD5));
-        String sql = "UPDATE config_info SET " + "content=?, md5 = ?, src_ip=?,src_user=?,gmt_modified=?,"
-                + " app_name=?,c_desc=?,c_use=?,effect=?,type=?,c_schema=?,encrypted_data_key=? "
+        String sql = "UPDATE config_info SET " + "content=?, md5=?, src_ip=?, src_user=?, gmt_modified="
+                + getFunction("NOW()")
+                + ", app_name=?, c_desc=?, c_use=?, effect=?, type=?, c_schema=?, encrypted_data_key=? "
                 + "WHERE data_id=? AND group_id=? AND tenant_id=? AND (md5=? OR md5 IS NULL OR md5='')";
         return new MapperResult(sql, paramList);
     }

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/MapperManagerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.plugin.datasource;
 
 import com.alibaba.nacos.plugin.datasource.constants.DataSourceConstant;
-import com.alibaba.nacos.plugin.datasource.mapper.AbstractMapper;
+import com.alibaba.nacos.plugin.datasource.impl.mysql.AbstractMapperByMysql;
 import com.alibaba.nacos.plugin.datasource.mapper.ConfigInfoAggrMapper;
 import com.alibaba.nacos.plugin.datasource.mapper.Mapper;
 import com.alibaba.nacos.plugin.datasource.mapper.TestMapper;
@@ -50,12 +50,12 @@ void testLoadInitial() throws NoSuchFieldException, IllegalAccessException {
     
     @Test
     void testJoin() {
-        MapperManager.join(new AbstractMapper() {
+        MapperManager.join(new AbstractMapperByMysql() {
             @Override
             public String getTableName() {
                 return "test";
             }
-            
+
             @Override
             public String getDataSource() {
                 return DataSourceConstant.MYSQL;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -318,7 +318,7 @@ private void initEndpoint(final NacosClientProperties properties) {
             if (StringUtils.isNotBlank(endpointUrl)) {
                 this.serverAddrsStr = "";
             }
-            this.endpoint = endpointUrl;
+            endpointTmp = endpointUrl;
         }
         this.endpoint = StringUtils.isNotBlank(endpointTmp) ? endpointTmp : "";
     }

File: client/src/test/java/com/alibaba/nacos/client/naming/selector/DefaultNamingSelectorTest.java
Patch:
@@ -19,14 +19,14 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.selector.NamingContext;
 import com.alibaba.nacos.api.naming.selector.NamingResult;
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 

File: client/src/test/java/com/alibaba/nacos/client/naming/selector/NamingListenerInvokerTest.java
Patch:
@@ -22,12 +22,12 @@
 import com.alibaba.nacos.client.naming.event.InstancesDiff;
 import com.alibaba.nacos.client.naming.listener.AbstractNamingChangeListener;
 import com.alibaba.nacos.client.naming.listener.NamingChangeEvent;
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.Collections;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotEquals;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertNotEquals;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.verify;

File: client/src/test/java/com/alibaba/nacos/client/selector/SelectorManagerTest.java
Patch:
@@ -17,15 +17,15 @@
 package com.alibaba.nacos.client.selector;
 
 import com.alibaba.nacos.client.naming.selector.NamingSelectorWrapper;
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
 import java.util.Set;
 
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.Mockito.mock;
 
 public class SelectorManagerTest {

File: sys/src/test/java/com/alibaba/nacos/sys/env/EnvUtilWithConfigTest.java
Patch:
@@ -18,17 +18,14 @@
 
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
-import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.core.env.ConfigurableEnvironment;
 import org.springframework.core.env.Environment;
 import org.springframework.test.context.ActiveProfiles;
-import org.springframework.test.context.junit4.SpringRunner;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
-@RunWith(SpringRunner.class)
 @ActiveProfiles("test")
 @SpringBootTest(classes = EnvUtilWithConfigTest.class)
 class EnvUtilWithConfigTest {

File: sys/src/test/java/com/alibaba/nacos/sys/env/EnvUtilWithoutConfigTest.java
Patch:
@@ -19,17 +19,14 @@
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
-import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.core.env.ConfigurableEnvironment;
 import org.springframework.core.env.Environment;
 import org.springframework.test.context.ActiveProfiles;
-import org.springframework.test.context.junit4.SpringRunner;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
-@RunWith(SpringRunner.class)
 @ActiveProfiles("empty")
 @SpringBootTest(classes = EnvUtilWithConfigTest.class)
 class EnvUtilWithoutConfigTest {

File: sys/src/test/java/com/alibaba/nacos/sys/utils/PropertiesUtilTest.java
Patch:
@@ -17,19 +17,16 @@
 package com.alibaba.nacos.sys.utils;
 
 import org.junit.jupiter.api.Test;
-import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.core.env.ConfigurableEnvironment;
 import org.springframework.test.context.ActiveProfiles;
-import org.springframework.test.context.junit4.SpringRunner;
 
 import java.util.Map;
 import java.util.Properties;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
-@RunWith(SpringRunner.class)
 @ActiveProfiles("prefix")
 @SpringBootTest(classes = PropertiesUtilTest.class)
 class PropertiesUtilTest {

File: test/core-test/src/test/java/com/alibaba/nacos/test/ability/component/TestServerAbilityControlManager.java
Patch:
@@ -24,19 +24,19 @@
 import java.util.Map;
 
 public class TestServerAbilityControlManager extends ServerAbilityControlManager {
-
+    
     @Override
     protected Map<AbilityMode, Map<AbilityKey, Boolean>> initCurrentNodeAbilities() {
         Map<AbilityKey, Boolean> map = new HashMap<>();
         map.put(AbilityKey.SERVER_TEST_1, true);
         map.put(AbilityKey.SERVER_TEST_2, false);
         HashMap res = new HashMap<>();
         res.put(AbilityMode.SERVER, map);
-
+        
         Map<AbilityKey, Boolean> map1 = new HashMap<>();
         map1.put(AbilityKey.SDK_CLIENT_TEST_1, true);
         res.put(AbilityMode.SDK_CLIENT, map1);
-
+        
         Map<AbilityKey, Boolean> map2 = new HashMap<>();
         map2.put(AbilityKey.CLUSTER_CLIENT_TEST_1, true);
         res.put(AbilityMode.CLUSTER_CLIENT, map2);

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/Starter_ITCase.java
Patch:
@@ -13,10 +13,12 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.test.naming;
 
 /**
  * @author nkorange
  */
 public class Starter_ITCase {
+
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/CacheDirUtil.java
Patch:
@@ -49,7 +49,7 @@ public class CacheDirUtil {
      */
     public static String initCacheDir(String namespace, NacosClientProperties properties) {
         
-        String jmSnapshotPath = System.getProperty(JM_SNAPSHOT_PATH_PROPERTY);
+        String jmSnapshotPath = properties.getProperty(JM_SNAPSHOT_PATH_PROPERTY);
         
         String namingCacheRegistryDir = "";
         if (properties.getProperty(PropertyKeyConst.NAMING_CACHE_REGISTRY_DIR) != null) {
@@ -62,7 +62,7 @@ public static String initCacheDir(String namespace, NacosClientProperties proper
                     + FILE_PATH_NAMING + File.separator + namespace;
         } else {
             cacheDir =
-                    System.getProperty(USER_HOME_PROPERTY) + File.separator + FILE_PATH_NACOS + namingCacheRegistryDir
+                    properties.getProperty(USER_HOME_PROPERTY) + File.separator + FILE_PATH_NACOS + namingCacheRegistryDir
                             + File.separator + FILE_PATH_NAMING + File.separator + namespace;
         }
         

File: client/src/main/java/com/alibaba/nacos/client/selector/SelectorManager.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
 
+import java.util.Collections;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
@@ -56,7 +57,7 @@ public void addSelectorWrapper(String subId, S wrapper) {
      * @return the set of SelectorWrappers
      */
     public Set<S> getSelectorWrappers(String subId) {
-        return selectorMap.get(subId);
+        return selectorMap.getOrDefault(subId, Collections.emptySet());
     }
     
     /**

File: client/src/test/java/com/alibaba/nacos/client/selector/SelectorManagerTest.java
Patch:
@@ -25,7 +25,6 @@
 import java.util.Set;
 
 import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 import static org.mockito.Mockito.mock;
 
@@ -39,7 +38,7 @@ public void testCurd() {
         selectorManager.addSelectorWrapper(subId, sw);
         assertTrue(selectorManager.getSelectorWrappers(subId).contains(sw));
         selectorManager.removeSelectorWrapper(subId, sw);
-        assertNull(selectorManager.getSelectorWrappers(subId));
+        assertTrue(selectorManager.getSelectorWrappers(subId).isEmpty());
     }
     
     @Test

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/task/FixturePushExecutor.java
Patch:
@@ -31,8 +31,7 @@ public void doPush(String clientId, Subscriber subscriber, PushDataWrapper data)
     }
     
     @Override
-    public void doPushWithCallback(String clientId, Subscriber subscriber, PushDataWrapper data,
-            NamingPushCallback callBack) {
+    public void doPushWithCallback(String clientId, Subscriber subscriber, PushDataWrapper data, NamingPushCallback callBack) {
         if (shouldSuccess) {
             callBack.onSuccess();
         } else {

File: client/src/test/java/com/alibaba/nacos/client/utils/PreInitUtilsTest.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.client.utils;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.concurrent.TimeUnit;
 
-public class PreInitUtilsTest {
+class PreInitUtilsTest {
     
     @Test
-    public void testAsyncPreLoadCostComponent() throws InterruptedException {
+    void testAsyncPreLoadCostComponent() throws InterruptedException {
         // There is no things need to be assert.
         // The method will called when nacos-client init to async to load some components to reduce the sync load time.
         PreInitUtils.asyncPreLoadCostComponent();

File: auth/src/test/java/com/alibaba/nacos/auth/config/AuthModuleStateBuilderTest.java
Patch:
@@ -29,6 +29,7 @@
 import static com.alibaba.nacos.auth.config.AuthModuleStateBuilder.AUTH_ENABLED;
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.Mockito.when;
 
 @ExtendWith(MockitoExtension.class)
@@ -57,5 +58,6 @@ void testBuild() {
         assertFalse((Boolean) actual.getStates().get(AUTH_ENABLED));
         assertFalse((Boolean) actual.getStates().get("login_page_enabled"));
         assertEquals("nacos", actual.getStates().get("auth_system_type"));
+        assertTrue((Boolean) actual.getStates().get("auth_admin_request"));
     }
 }
\ No newline at end of file

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/UserControllerTest.java
Patch:
@@ -90,7 +90,6 @@ public void setUp() throws Exception {
     public void testLoginWithAuthedUser() throws AccessException, IOException {
         when(authenticationManager.authenticate(request)).thenReturn(user);
         when(authenticationManager.hasGlobalAdminRole(user)).thenReturn(true);
-        when(authenticationManager.hasGlobalAdminRole()).thenReturn(true);
         when(authConfigs.getNacosAuthSystemType()).thenReturn(AuthSystemTypes.NACOS.name());
         when(tokenManagerDelegate.getTokenTtlInSeconds(anyString())).thenReturn(18000L);
         Object actual = userController.login("nacos", "nacos", response, request);

File: api/src/test/java/com/alibaba/nacos/api/remote/request/BasicRequestTest.java
Patch:
@@ -19,13 +19,13 @@
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import org.junit.Before;
+import org.junit.jupiter.api.BeforeEach;
 
 public abstract class BasicRequestTest {
     
     protected ObjectMapper mapper;
     
-    @Before
+    @BeforeEach
     public void setUp() throws Exception {
         mapper = new ObjectMapper();
         mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);

File: common/src/test/java/ClassUtilsTestMockClass.java
Patch:
@@ -15,4 +15,5 @@
  */
 
 public class ClassUtilsTestMockClass {
+
 }

File: common/src/test/java/com/alibaba/nacos/common/trace/event/naming/NamingTraceEventTest.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.common.trace.event.naming;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
 
 public class NamingTraceEventTest {
     

File: common/src/test/java/com/alibaba/nacos/common/trace/publisher/TraceTestEvent.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.notify.Event;
 
 public class TraceTestEvent extends Event {
+    
     private static final long serialVersionUID = 8568231862586636388L;
     
     static class TraceTestEvent1 extends TraceTestEvent {

File: common/src/test/java/com/alibaba/nacos/common/utils/UuidUtilsTest.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.common.utils;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.UUID;
 
-public class UuidUtilsTest {
+class UuidUtilsTest {
     
     @Test
-    public void testGenerateUuid() {
+    void testGenerateUuid() {
         String uuid = UuidUtils.generateUuid();
         // try parse to UUID.
         UUID.fromString(uuid);

File: common/src/test/java/com/alibaba/nacos/common/utils/to/User.java
Patch:
@@ -17,8 +17,9 @@
 package com.alibaba.nacos.common.utils.to;
 
 public class User {
+    
     private Integer id;
-
+    
     private String name;
     
     public User(Integer id, String name) {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -58,7 +58,7 @@
 import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import com.alibaba.nacos.common.remote.client.RpcClientFactory;
-import com.alibaba.nacos.common.remote.client.RpcClientTlsConfig;
+import com.alibaba.nacos.common.remote.client.RpcClientTlsConfigFactory;
 import com.alibaba.nacos.common.remote.client.ServerListFactory;
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
@@ -104,7 +104,7 @@ public NamingGrpcClientProxy(String namespaceId, SecurityProxy securityProxy, Se
         labels.put(RemoteConstants.LABEL_MODULE, RemoteConstants.LABEL_MODULE_NAMING);
         labels.put(Constants.APPNAME, AppNameUtils.getAppName());
         this.rpcClient = RpcClientFactory.createClient(uuid, ConnectionType.GRPC, labels,
-                RpcClientTlsConfig.properties(properties.asProperties()));
+                RpcClientTlsConfigFactory.getInstance().createSdkConfig(properties.asProperties()));
         this.redoService = new NamingGrpcRedoService(this, properties);
         NAMING_LOGGER.info("Create naming rpc client for uuid->{}", uuid);
         start(serverListFactory, serviceInfoHolder);

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcConstantsTest.java
Patch:
@@ -26,8 +26,7 @@ public class RpcConstantsTest {
     
     @Test
     public void testGetRpcParams() {
-        Class clazz = RpcConstants.class;
-        Field[] declaredFields = clazz.getDeclaredFields();
+        Field[] declaredFields = RpcConstants.class.getDeclaredFields();
         int i = 0;
         for (Field declaredField : declaredFields) {
             declaredField.setAccessible(true);

File: common/src/test/java/com/alibaba/nacos/common/remote/client/grpc/DefaultGrpcClientConfigTest.java
Patch:
@@ -84,7 +84,7 @@ public void testFromProperties() {
         properties.setProperty(GrpcConstants.GRPC_CHANNEL_CAPABILITY_NEGOTIATION_TIMEOUT, "5000");
         
         DefaultGrpcClientConfig config = (DefaultGrpcClientConfig) DefaultGrpcClientConfig.newBuilder()
-                .fromProperties(properties).build();
+                .fromProperties(properties, null).build();
         
         assertEquals("test", config.name());
         assertEquals(3, config.retryTimes());

File: common/src/test/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClusterClientTest.java
Patch:
@@ -46,7 +46,9 @@ public void testAbilityMode() {
     
     @Test
     public void testRpcPortOffsetDefault() {
-        grpcClusterClient = new GrpcClusterClient(new Properties());
+        DefaultGrpcClientConfig.Builder builder = DefaultGrpcClientConfig.newBuilder()
+                .buildClusterFromProperties(new Properties());
+        grpcClusterClient = new  GrpcClusterClient(builder.build());
         assertEquals(1001, grpcClusterClient.rpcPortOffset());
     }
     

File: common/src/test/java/com/alibaba/nacos/common/remote/client/grpc/GrpcSdkClientTest.java
Patch:
@@ -22,7 +22,6 @@
 import org.junit.Test;
 
 import java.util.Collections;
-import java.util.Properties;
 
 import static org.junit.Assert.assertEquals;
 
@@ -46,7 +45,7 @@ public void testAbilityMode() {
     
     @Test
     public void testRpcPortOffsetDefault() {
-        grpcSdkClient = new GrpcSdkClient(new Properties());
+        grpcSdkClient = new GrpcSdkClient("test");
         assertEquals(1000, grpcSdkClient.rpcPortOffset());
     }
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -529,8 +529,9 @@ protected void reconnect(final ServerInfo recommendServerInfo, boolean onRequest
                     
                     lastException = null;
                     
-                } catch (Exception e) {
-                    lastException = e;
+                } catch (Throwable throwable) {
+                    LoggerUtils.printIfErrorEnabled(LOGGER, "Fail to connect server, error = {}", throwable.getMessage());
+                    lastException = new Exception(throwable);
                 } finally {
                     recommendServer.set(null);
                 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigDumpApplyHook.java
Patch:
@@ -58,7 +58,7 @@ private void handleExtendInfo(Map<String, String> extendInfo) {
             return;
         }
         if (extendInfo.containsKey(Constants.EXTEND_INFOS_CONFIG_DUMP_EVENT)) {
-            String jsonVal = extendInfo.get(Constants.EXTEND_INFO_CONFIG_DUMP_EVENT);
+            String jsonVal = extendInfo.get(Constants.EXTEND_INFOS_CONFIG_DUMP_EVENT);
             if (StringUtils.isNotBlank(jsonVal)) {
                 List<ConfigDumpEvent> list = JacksonUtils.toObj(jsonVal, new GenericType<List<ConfigDumpEvent>>() {
                 }.getType());

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -139,7 +139,7 @@ public static boolean dumpWithMd5(String dataId, String group, String tenant, St
             DUMP_LOG.error("[dump-exception] save disk error. " + groupKey + ", " + ioe);
             if (ioe.getMessage() != null) {
                 String errMsg = ioe.getMessage();
-                if (NO_SPACE_CN.equals(errMsg) || NO_SPACE_EN.equals(errMsg) || errMsg.contains(DISK_QUOTA_CN)
+                if (errMsg.contains(NO_SPACE_CN) || errMsg.contains(NO_SPACE_EN) || errMsg.contains(DISK_QUOTA_CN)
                         || errMsg.contains(DISK_QUOTA_EN)) {
                     // Protect from disk full.
                     FATAL_LOG.error("Local Disk Full,Exit", ioe);

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -35,6 +35,8 @@ public class AuthConstants {
     
     public static final String TOKEN_PREFIX = "Bearer ";
     
+    public static final String DEFAULT_USER = "nacos";
+    
     public static final String PARAM_USERNAME = "username";
     
     public static final String PARAM_PASSWORD = "password";

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.utils.StringUtils;
+
 import com.alibaba.nacos.plugin.auth.impl.persistence.UserPersistService;
 import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.impl.persistence.User;
@@ -116,7 +117,7 @@ public void createUser(String username, String password) {
     public void deleteUser(String username) {
         userPersistService.deleteUser(username);
     }
-
+    
     public Page<User> findUsersLike4Page(String username, int pageNo, int pageSize) {
         return userPersistService.findUsersLike4Page(username, pageNo, pageSize);
     }

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/UserControllerTest.java
Patch:
@@ -34,6 +34,7 @@
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
 import java.lang.reflect.Field;
 import java.nio.charset.StandardCharsets;
 import java.util.Base64;
@@ -86,9 +87,10 @@ public void setUp() throws Exception {
     }
     
     @Test
-    public void testLoginWithAuthedUser() throws AccessException {
+    public void testLoginWithAuthedUser() throws AccessException, IOException {
         when(authenticationManager.authenticate(request)).thenReturn(user);
         when(authenticationManager.hasGlobalAdminRole(user)).thenReturn(true);
+        when(authenticationManager.hasGlobalAdminRole()).thenReturn(true);
         when(authConfigs.getNacosAuthSystemType()).thenReturn(AuthSystemTypes.NACOS.name());
         when(tokenManagerDelegate.getTokenTtlInSeconds(anyString())).thenReturn(18000L);
         Object actual = userController.login("nacos", "nacos", response, request);

File: logger-adapter-impl/log4j2-adapter/src/test/java/com/alibaba/nacos/logger/adapter/log4j2/Log4J2NacosLoggingAdapterTest.java
Patch:
@@ -106,7 +106,7 @@ public void testLoadConfiguration() {
         loggerContext = (LoggerContext) LogManager.getContext(false);
         contextConfiguration = loggerContext.getConfiguration();
         Map<String, LoggerConfig> nacosClientLoggers = contextConfiguration.getLoggers();
-        assertEquals(5, nacosClientLoggers.size());
+        assertEquals(6, nacosClientLoggers.size());
         for (Map.Entry<String, LoggerConfig> loggerEntry : nacosClientLoggers.entrySet()) {
             String loggerName = loggerEntry.getKey();
             Assert.assertTrue(loggerName.startsWith(NACOS_LOGGER_PREFIX));

File: logger-adapter-impl/logback-adapter-12/src/main/java/com/alibaba/nacos/logger/adapter/logback12/LogbackNacosLoggingAdapter.java
Patch:
@@ -20,7 +20,6 @@
 import ch.qos.logback.classic.Logger;
 import ch.qos.logback.classic.LoggerContext;
 import ch.qos.logback.classic.spi.LoggerContextListener;
-import ch.qos.logback.core.CoreConstants;
 import com.alibaba.nacos.common.logging.NacosLoggingAdapter;
 import com.alibaba.nacos.common.logging.NacosLoggingProperties;
 import com.alibaba.nacos.common.utils.ResourceUtils;
@@ -91,7 +90,7 @@ public void loadConfiguration(NacosLoggingProperties loggingProperties) {
         String location = loggingProperties.getLocation();
         configurator.setLoggingProperties(loggingProperties);
         LoggerContext loggerContext = loadConfigurationOnStart(location);
-        if (loggerContext.getObject(CoreConstants.RECONFIGURE_ON_CHANGE_TASK) != null && hasNoListener(loggerContext)) {
+        if (hasNoListener(loggerContext)) {
             addListener(loggerContext, location);
         }
     }

File: common/src/main/java/com/alibaba/nacos/common/logging/NacosLoggingAdapter.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.logging;
+package com.alibaba.nacos.common.logging;
 
 /**
  * Nacos client logging adapter.

File: core/src/test/java/com/alibaba/nacos/core/remote/ConnectionManagerTest.java
Patch:
@@ -35,6 +35,7 @@
 import org.mockito.MockedStatic;
 import org.mockito.Mockito;
 import org.mockito.junit.MockitoJUnitRunner;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.io.File;
 import java.util.HashMap;
@@ -87,6 +88,7 @@ public static void afterClass() {
     
     @Before
     public void setUp() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         // create base file path
         File baseDir = new File(EnvUtil.getNacosHome(), "data");
         if (!baseDir.exists()) {

File: logger-adapter-impl/logback-adapter-12/src/test/java/com/alibaba/nacos/logger/adapter/logback12/NacosLogbackConfiguratorAdapterV1Test.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.logging.logback;
+package com.alibaba.nacos.logger.adapter.logback12;
 
 import ch.qos.logback.core.ContextBase;
 import ch.qos.logback.core.joran.spi.JoranException;

File: naming/src/test/java/com/alibaba/nacos/naming/pojo/instance/HttpRequestInstanceBuilderTest.java
Patch:
@@ -21,12 +21,14 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.common.spi.NacosServiceLoader;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
+import org.springframework.core.env.StandardEnvironment;
 
 import javax.servlet.http.HttpServletRequest;
 
@@ -54,6 +56,7 @@ public class HttpRequestInstanceBuilderTest {
     @BeforeClass
     public static void setUpBeforeClass() {
         NacosServiceLoader.load(InstanceExtensionHandler.class);
+        EnvUtil.setEnvironment(new StandardEnvironment());
     }
     
     @Before

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/ConfigChangeAspect.java
Patch:
@@ -311,7 +311,7 @@ private Object configChangeServiceHandle(ProceedingJoinPoint pjp,
         for (ConfigChangePluginService ccs : beforeExecutePluginServices) {
             final String serviceType = ccs.getServiceType().toLowerCase(Locale.ROOT);
             final Properties properties = configChangeConfigs.getPluginProperties(serviceType);
-            configChangeRequest.setArg("pluginProperties", properties);
+            configChangeRequest.setArg(ConfigChangeConstants.PLUGIN_PROPERTIES, properties);
             ccs.execute(configChangeRequest, configChangeResponse);
             if (null != configChangeResponse.getArgs()) {
                 // update args by filter with whitelist

File: plugin/config/src/main/java/com/alibaba/nacos/plugin/config/model/ConfigChangeRequest.java
Patch:
@@ -40,7 +40,7 @@ public ConfigChangePointCutTypes getRequestType() {
     }
 
     public void setArg(String key, Object value) {
-        requestArgs.putIfAbsent(key, value);
+        requestArgs.put(key, value);
     }
 
     public Object getArg(String key) {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -131,7 +131,8 @@ public String remove(@RequestParam(defaultValue = Constants.DEFAULT_NAMESPACE_ID
         
         getServiceOperator().delete(namespaceId, serviceName);
         NotifyCenter.publishEvent(
-                new DeregisterServiceTraceEvent(System.currentTimeMillis(), namespaceId, "", serviceName));
+                new DeregisterServiceTraceEvent(System.currentTimeMillis(), namespaceId,
+                        NamingUtils.getGroupName(serviceName), NamingUtils.getServiceName(serviceName)));
         return "ok";
     }
     

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySql.java
Patch:
@@ -85,8 +85,8 @@ public MapperResult findAllConfigKey(MapperContext context) {
     @Override
     public MapperResult findAllConfigInfoBaseFetchRows(MapperContext context) {
         String sql = "SELECT t.id,data_id,group_id,content,md5"
-                + " FROM ( SELECT id FROM config_info ORDER BY id LIMIT ?,?  ) "
-                + " g, config_info t  WHERE g.id = t.id ";
+                + " FROM ( SELECT id FROM config_info ORDER BY id LIMIT " + context.getStartRow() + ","
+                + context.getPageSize() + " )" + " g, config_info t  WHERE g.id = t.id ";
         return new MapperResult(sql, Collections.emptyList());
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySqlTest.java
Patch:
@@ -143,8 +143,8 @@ public void testFindAllConfigKey() {
     public void testFindAllConfigInfoBaseFetchRows() {
         MapperResult mapperResult = configInfoMapperByMySql.findAllConfigInfoBaseFetchRows(context);
         Assert.assertEquals(mapperResult.getSql(),
-                "SELECT t.id,data_id,group_id,content,md5 FROM ( SELECT id FROM config_info ORDER BY id LIMIT ?,?"
-                        + "  )  g, config_info t  WHERE g.id = t.id ");
+                "SELECT t.id,data_id,group_id,content,md5 FROM ( SELECT id FROM config_info ORDER BY id LIMIT " + context.getStartRow() + ","
+                        + context.getPageSize() + " ) g, config_info t  WHERE g.id = t.id ");
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(), emptyObjs);
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImpl.java
Patch:
@@ -614,7 +614,7 @@ private ConfigOperateResult updateConfigInfoAtomicCas(final ConfigInfo configInf
         context.putWhereParameter(FieldConstant.MD5, configInfo.getMd5());
         MapperResult mapperResult = configInfoMapper.updateConfigInfoAtomicCas(context);
         
-        EmbeddedStorageContextHolder.addSqlContext(mapperResult.getSql(), mapperResult.getParamList().toArray());
+        EmbeddedStorageContextHolder.addSqlContext(Boolean.TRUE, mapperResult.getSql(), mapperResult.getParamList().toArray());
         return getConfigInfoOperateResult(configInfo.getDataId(), configInfo.getGroup(), tenantTmp);
         
     }

File: config/src/test/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImplTest.java
Patch:
@@ -351,7 +351,7 @@ public void testInsertOrUpdateCasOfUpdateConfigSuccess() {
         embeddedConfigInfoPersistService.insertOrUpdateCas(srcIp, srcUser, configInfo, configAdvanceInfo);
         //expect update config info invoked.
         embeddedStorageContextHolderMockedStatic.verify(
-                () -> EmbeddedStorageContextHolder.addSqlContext(anyString(), eq(content),
+                () -> EmbeddedStorageContextHolder.addSqlContext(eq(Boolean.TRUE), anyString(), eq(content),
                         eq(MD5Utils.md5Hex(content, Constants.PERSIST_ENCODE)), eq(srcIp), eq(srcUser),
                         any(Timestamp.class), eq(appName), eq(desc), eq(use), eq(effect), eq(type), eq(schema),
                         eq(encryptedDataKey), eq(dataId), eq(group), eq(tenant), eq(casMd5)), times(1));

File: api/src/main/java/com/alibaba/nacos/api/remote/response/ErrorResponse.java
Patch:
@@ -57,6 +57,7 @@ public static Response build(Throwable exception) {
         }
         ErrorResponse response = new ErrorResponse();
         response.setErrorInfo(errorCode, exception.getMessage());
+        response.setResultCode(errorCode);
         return response;
     }
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -693,7 +693,8 @@ private void initRpcClientHandler(final RpcClient rpcClientInner) {
              */
             rpcClientInner.registerServerRequestHandler((request, connection) -> {
                 if (request instanceof ConfigChangeNotifyRequest) {
-                    handleConfigChangeNotifyRequest((ConfigChangeNotifyRequest) request, rpcClientInner.getName());
+                    return handleConfigChangeNotifyRequest((ConfigChangeNotifyRequest) request,
+                            rpcClientInner.getName());
                 }
                 return null;
             });

File: client/src/test/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLoggingTest.java
Patch:
@@ -82,7 +82,7 @@ public void testLoadConfiguration() {
         loggerContext = (LoggerContext) LogManager.getContext(false);
         contextConfiguration = loggerContext.getConfiguration();
         Map<String, LoggerConfig> nacosClientLoggers = contextConfiguration.getLoggers();
-        assertEquals(4, nacosClientLoggers.size());
+        assertEquals(5, nacosClientLoggers.size());
         for (Map.Entry<String, LoggerConfig> loggerEntry : nacosClientLoggers.entrySet()) {
             String loggerName = loggerEntry.getKey();
             Assert.assertTrue(loggerName.startsWith(NACOS_LOGGER_PREFIX));

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpChangeConfigWorkerTest.java
Patch:
@@ -105,7 +105,6 @@ public void after() throws IllegalAccessException {
         dynamicDataSourceMockedStatic.close();
         envUtilMockedStatic.close();
         ConfigDiskServiceFactory.getInstance().clearAll();
-        ConfigDiskServiceFactory.getInstance().clearAllBatch();
         ConfigDiskServiceFactory.getInstance().clearAllBeta();
         ConfigDiskServiceFactory.getInstance().clearAllTag();
         

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpProcessorTest.java
Patch:
@@ -112,7 +112,6 @@ public void after() {
         dynamicDataSourceMockedStatic.close();
         envUtilMockedStatic.close();
         ConfigDiskServiceFactory.getInstance().clearAll();
-        ConfigDiskServiceFactory.getInstance().clearAllBatch();
         ConfigDiskServiceFactory.getInstance().clearAllBeta();
         ConfigDiskServiceFactory.getInstance().clearAllTag();
         

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -1071,7 +1071,7 @@ private RpcClient ensureRpcClient(String taskId) throws NacosException {
                 Map<String, String> newLabels = new HashMap<>(labels);
                 newLabels.put("taskId", taskId);
                 RpcClient rpcClient = RpcClientFactory.createClient(uuid + "_config-" + taskId, getConnectionType(),
-                        newLabels, RpcClientTlsConfig.properties(this.properties));
+                        newLabels, this.properties, RpcClientTlsConfig.properties(this.properties));
                 if (rpcClient.isWaitInitiated()) {
                     initRpcClientHandler(rpcClient);
                     rpcClient.setTenant(getTenant());

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataManager.java
Patch:
@@ -189,7 +189,8 @@ public Map<Service, ConcurrentMap<String, InstanceMetadata>> getInstanceMetadata
      */
     public void loadServiceMetadataSnapshot(ConcurrentMap<Service, ServiceMetadata> snapshot) {
         for (Service each : snapshot.keySet()) {
-            ServiceManager.getInstance().getSingleton(each);
+            Service  service = Service.newService(each.getNamespace(), each.getGroup(), each.getName(), each.isEphemeral());
+            ServiceManager.getInstance().getSingleton(service);
         }
         ConcurrentMap<Service, ServiceMetadata> oldSnapshot = serviceMetadataMap;
         serviceMetadataMap = snapshot;

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -48,11 +48,11 @@ private StringUtils() {
     
     private static final String[] EMPTY_STRING_ARRAY = {};
     
-    private static final String TOP_PATH = "..";
+    public static final String TOP_PATH = "..";
     
-    private static final String FOLDER_SEPARATOR = "/";
+    public static final String FOLDER_SEPARATOR = "/";
     
-    private static final String WINDOWS_FOLDER_SEPARATOR = "\\";
+    public static final String WINDOWS_FOLDER_SEPARATOR = "\\";
     
     /**
      * <p>Create a string with encoding format as utf8.</p>

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ServiceInfoHolder.java
Patch:
@@ -143,7 +143,7 @@ public ServiceInfo processServiceInfo(ServiceInfo serviceInfo) {
         if (changed) {
             NAMING_LOGGER.info("current ips:({}) service: {} -> {}", serviceInfo.ipCount(), serviceInfo.getKey(),
                     JacksonUtils.toJson(serviceInfo.getHosts()));
-            if (!failoverReactor.isFailoverSwitch()) {
+            if (!failoverReactor.isFailoverSwitch(serviceKey)) {
                 NotifyCenter.publishEvent(
                         new InstancesChangeEvent(notifierEventScope, serviceInfo.getName(), serviceInfo.getGroupName(),
                                 serviceInfo.getClusters(), serviceInfo.getHosts()));

File: client/src/test/java/com/alibaba/nacos/client/naming/backups/FailoverReactorTest.java
Patch:
@@ -135,9 +135,9 @@ public void testRefreshFromEnabledToDisabled()
     @Test
     public void testFailoverServiceCntMetrics()
             throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
-        Method method = FailoverReactor.class.getDeclaredMethod("failoverServiceCntMetrics", Map.class);
+        Method method = FailoverReactor.class.getDeclaredMethod("failoverServiceCntMetrics");
         method.setAccessible(true);
-        method.invoke(failoverReactor, new Object[1]);
+        method.invoke(failoverReactor);
         // No exception
     }
     
@@ -152,4 +152,4 @@ public void testFailoverServiceCntMetricsClear()
         method.invoke(failoverReactor);
         // No exception
     }
-}
\ No newline at end of file
+}

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/MapperManager.java
Patch:
@@ -99,7 +99,9 @@ private static void putMapper(Mapper mapper) {
      * @return mapper.
      */
     public <R extends Mapper> R findMapper(String dataSource, String tableName) {
-        LOGGER.info("[MapperManager] findMapper dataSource: {}, tableName: {}", dataSource, tableName);
+        if (LOGGER.isDebugEnabled()) {
+            LOGGER.debug("[MapperManager] findMapper dataSource: {}, tableName: {}", dataSource, tableName);
+        }
         if (StringUtils.isBlank(dataSource) || StringUtils.isBlank(tableName)) {
             throw new NacosRuntimeException(FIND_DATASOURCE_ERROR_CODE, "dataSource or tableName is null");
         }

File: auth/src/main/java/com/alibaba/nacos/auth/GrpcProtocolAuthService.java
Patch:
@@ -61,11 +61,12 @@ public Resource parseResource(Request request, Secured secured) {
             return parseSpecifiedResource(secured);
         }
         String type = secured.signType();
-        if (!resourceParserMap.containsKey(type)) {
+        AbstractGrpcResourceParser parser = resourceParserMap.get(type);
+        if (parser == null) {
             Loggers.AUTH.warn("Can't find Grpc request resourceParser for type {}", type);
             return useSpecifiedParserToParse(secured, request);
         }
-        return resourceParserMap.get(type).parse(request, secured);
+        return parser.parse(request, secured);
     }
     
     @Override

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisher.java
Patch:
@@ -80,8 +80,7 @@ public void addSubscriber(Subscriber subscriber) {
 
     @Override
     public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {
-        subscribes.computeIfAbsent(subscribeType, inputType -> new ConcurrentHashSet<>());
-        subscribes.get(subscribeType).add(subscriber);
+        subscribes.computeIfAbsent(subscribeType, inputType -> new ConcurrentHashSet<>()).add(subscriber);
     }
 
     @Override

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisherFactory.java
Patch:
@@ -59,12 +59,11 @@ public EventPublisher apply(final Class<? extends Event> eventType, final Intege
             }
         }
         
-        publisher.computeIfAbsent(cachedEventType, eventClass -> {
+        return publisher.computeIfAbsent(cachedEventType, eventClass -> {
             TraceEventPublisher result = new TraceEventPublisher();
             result.init(eventClass, maxQueueSize);
             return result;
         });
-        return publisher.get(cachedEventType);
     }
 
     public String getAllPublisherStatues() {

File: consistency/src/main/java/com/alibaba/nacos/consistency/Serializer.java
Patch:
@@ -68,15 +68,13 @@ public interface Serializer {
      */
     default <T> T deserialize(byte[] data, String classFullName) {
         try {
-            Class<?> cls;
-            CLASS_CACHE.computeIfAbsent(classFullName, name -> {
+            Class<?> cls = CLASS_CACHE.computeIfAbsent(classFullName, name -> {
                 try {
                     return Class.forName(classFullName);
                 } catch (ClassNotFoundException e) {
                     throw new RuntimeException(e);
                 }
             });
-            cls = CLASS_CACHE.get(classFullName);
             return (T) deserialize(data, cls);
         } catch (Exception ignore) {
             return null;

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/monitor/DistroRecordsHolder.java
Patch:
@@ -46,8 +46,7 @@ public Optional<DistroRecord> getRecordIfExist(String type) {
     }
     
     public DistroRecord getRecord(String type) {
-        distroRecords.computeIfAbsent(type, s -> new DistroRecord(type));
-        return distroRecords.get(type);
+        return distroRecords.computeIfAbsent(type, s -> new DistroRecord(type));
     }
     
     public long getTotalSyncCount() {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/PersistentNotifier.java
Patch:
@@ -51,8 +51,7 @@ public PersistentNotifier(Function<String, Record> find) {
      * @param listener {@link RecordListener}
      */
     public void registerListener(final String key, final RecordListener listener) {
-        listenerMap.computeIfAbsent(key, s -> new ConcurrentHashSet<>());
-        listenerMap.get(key).add(listener);
+        listenerMap.computeIfAbsent(key, s -> new ConcurrentHashSet<>()).add(listener);
     }
     
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/publisher/NamingEventPublisher.java
Patch:
@@ -77,8 +77,7 @@ public void addSubscriber(Subscriber subscriber) {
     
     @Override
     public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscribeType) {
-        subscribes.computeIfAbsent(subscribeType, inputType -> new ConcurrentHashSet<>());
-        subscribes.get(subscribeType).add(subscriber);
+        subscribes.computeIfAbsent(subscribeType, inputType -> new ConcurrentHashSet<>()).add(subscriber);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/publisher/NamingEventPublisherFactory.java
Patch:
@@ -51,12 +51,11 @@ public EventPublisher apply(final Class<? extends Event> eventType, final Intege
         // Like ClientEvent$ClientChangeEvent cache by ClientEvent
         Class<? extends Event> cachedEventType =
                 eventType.isMemberClass() ? (Class<? extends Event>) eventType.getEnclosingClass() : eventType;
-        publisher.computeIfAbsent(cachedEventType, eventClass -> {
+        return publisher.computeIfAbsent(cachedEventType, eventClass -> {
             NamingEventPublisher result = new NamingEventPublisher();
             result.init(eventClass, maxQueueSize);
             return result;
         });
-        return publisher.get(cachedEventType);
     }
     
     public String getAllPublisherStatues() {

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java
Patch:
@@ -96,7 +96,7 @@ private String[] generateIpAndPort(String ip) {
     /**
      * Generate response ips.
      *
-     * @param instanceList a instance set will generate string response to client.
+     * @param instanceList an instance set will generate string response to client.
      * @return the result of response to client
      */
     public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList) {
@@ -113,7 +113,7 @@ public String generateResponseIps(List<com.alibaba.nacos.api.naming.pojo.Instanc
     /**
      * Generate nacos service name.
      *
-     * @param rawServiceName the raw service name will not contains the {@link Constants#DEFAULT_GROUP}.
+     * @param rawServiceName the raw service name will not contain the {@link Constants#DEFAULT_GROUP}.
      * @return the nacos service name
      */
     public String generateNacosServiceName(String rawServiceName) {

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/HealthCheckerFactory.java
Patch:
@@ -69,7 +69,7 @@ public static None createNoneHealthChecker() {
     }
     
     /**
-     * Deserialize and create a instance of health checker.
+     * Deserialize and create an instance of health checker.
      *
      * @param jsonString json string of health checker
      * @return new instance
@@ -83,7 +83,7 @@ public static AbstractHealthChecker deserialize(String jsonString) {
     }
     
     /**
-     * Serialize a instance of health checker to json.
+     * Serialize an instance of health checker to json.
      *
      * @param healthChecker health checker instance
      * @return son string after serializing

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxy.java
Patch:
@@ -34,7 +34,7 @@
 public interface NamingClientProxy extends Closeable {
     
     /**
-     * Register a instance to service with specified instance properties.
+     * Register an instance to service with specified instance properties.
      *
      * @param serviceName name of service
      * @param groupName   group of service

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/PageHandlerAdapterFactory.java
Patch:
@@ -47,8 +47,8 @@ public Map<String, PageHandlerAdapter> getHandlerAdapterMap() {
     }
     
     private PageHandlerAdapterFactory() {
-        handlerAdapters = new ArrayList<>(2);
-        handlerAdapterMap = new HashMap<>(2);
+        handlerAdapters = new ArrayList<>(3);
+        handlerAdapterMap = new HashMap<>(3);
         initHandlerAdapters();
     }
     

File: api/src/main/java/com/alibaba/nacos/api/model/v2/ErrorCode.java
Patch:
@@ -178,7 +178,7 @@ public enum ErrorCode {
     /**
      *  node down failure.
      */
-    NODE_DOWN_FAILURE(23001, "node down failure"),
+    NODE_DOWN_FAILURE(23002, "node down failure"),
     
     /**
      *  server error.

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.config.utils.ConcurrentDiskUtil;
+import com.alibaba.nacos.client.utils.ConcurrentDiskUtil;
 import com.alibaba.nacos.client.config.utils.JvmUtil;
 import com.alibaba.nacos.client.config.utils.SnapShotSwitch;
 import com.alibaba.nacos.client.env.NacosClientProperties;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalEncryptedDataKeyProcessor.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.utils.StringUtils;
-import com.alibaba.nacos.client.config.utils.ConcurrentDiskUtil;
+import com.alibaba.nacos.client.utils.ConcurrentDiskUtil;
 import com.alibaba.nacos.client.config.utils.JvmUtil;
 import com.alibaba.nacos.client.config.utils.SnapShotSwitch;
 import com.alibaba.nacos.client.utils.LogUtils;

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/datasource/DiskFailoverDataSource.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.client.naming.backups.FailoverDataSource;
 import com.alibaba.nacos.client.naming.backups.FailoverSwitch;
 import com.alibaba.nacos.client.naming.backups.NamingFailoverData;
-import com.alibaba.nacos.client.naming.cache.ConcurrentDiskUtil;
+import com.alibaba.nacos.client.utils.ConcurrentDiskUtil;
 import com.alibaba.nacos.client.naming.cache.DiskCache;
 import com.alibaba.nacos.client.naming.utils.CacheDirUtil;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/DiskCache.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
+import com.alibaba.nacos.client.utils.ConcurrentDiskUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: naming/src/test/java/com/alibaba/nacos/naming/utils/InstanceUtilTest.java
Patch:
@@ -21,8 +21,10 @@
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.pojo.instance.InstanceIdGeneratorManager;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Before;
 import org.junit.Test;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -41,6 +43,7 @@ public class InstanceUtilTest {
     
     @Before
     public void init() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         service = Service.newService("namespace", "group", "serviceName");
         instancePublishInfo = new InstancePublishInfo("1.1.1.1", 8080);
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -175,8 +175,10 @@ public String getTenant() {
     
     /**
      * listen change .
+     *
+     * @throws NacosException nacos exception throws, should retry.
      */
-    public abstract void executeConfigListen();
+    public abstract void executeConfigListen() throws NacosException;
     
     /**
      * remove cache implements.

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHook.java
Patch:
@@ -44,6 +44,7 @@ public void pushSuccess(PushResult result) {
     
     @Override
     public void pushFailed(PushResult result) {
+        MetricsMonitor.incrementPush();
         MetricsMonitor.incrementFailPush();
         if (isRpc(result.getSubscriber())) {
             NamingTpsMonitor.rpcPushFail(result.getSubscribeClientId(), result.getSubscriber().getIp());

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHookTest.java
Patch:
@@ -101,5 +101,6 @@ public void testPushSuccessForNoEmptyPush() {
     public void testPushFailed() {
         new NacosMonitorPushResultHook().pushFailed(pushResult);
         assertEquals(1, MetricsMonitor.getFailedPushMonitor().get());
+        assertEquals(1, MetricsMonitor.getTotalPushMonitor().get());
     }
 }

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/HistoryConfigInfoMapper.java
Patch:
@@ -105,7 +105,7 @@ default MapperResult findConfigHistoryFetchRows(MapperContext context) {
      */
     default MapperResult detailPreviousConfigHistory(MapperContext context) {
         return new MapperResult(
-                "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,gmt_modified "
+                "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,gmt_modified,encrypted_data_key "
                         + "FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)",
                 Collections.singletonList(context.getWhereParameter(FieldConstant.ID)));
     }

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerbyTest.java
Patch:
@@ -107,7 +107,7 @@ public void testDetailPreviousConfigHistory() {
         MapperResult mapperResult = historyConfigInfoMapperByDerby.detailPreviousConfigHistory(context);
         Assert.assertEquals(mapperResult.getSql(),
                 "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,"
-                        + "gmt_modified FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
+                        + "gmt_modified,encrypted_data_key FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(), new Object[] {id});
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/HistoryConfigInfoMapperByMySqlTest.java
Patch:
@@ -104,7 +104,7 @@ public void testDetailPreviousConfigHistory() {
         MapperResult mapperResult = historyConfigInfoMapperByMySql.detailPreviousConfigHistory(context);
         Assert.assertEquals(mapperResult.getSql(),
                 "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,"
-                        + "gmt_modified FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
+                        + "gmt_modified,encrypted_data_key FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(), new Object[] {id});
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -37,6 +37,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 
 import static com.alibaba.nacos.config.server.constant.Constants.ENCODE_UTF8;
+import static com.alibaba.nacos.config.server.constant.Constants.PERSIST_ENCODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.DEFAULT_LOG;
 import static com.alibaba.nacos.config.server.utils.LogUtil.DUMP_LOG;
 import static com.alibaba.nacos.config.server.utils.LogUtil.FATAL_LOG;
@@ -72,6 +73,7 @@ public static int groupCount() {
      * @param group          group string value.
      * @param tenant         tenant string value.
      * @param content        content string value.
+     * @param md5            md5 of persist.
      * @param lastModifiedTs lastModifiedTs.
      * @param type           file type.
      * @return dumpChange success or not.
@@ -100,7 +102,7 @@ public static boolean dumpWithMd5(String dataId, String group, String tenant, St
             boolean newLastModified = lastModifiedTs > ConfigCacheService.getLastModifiedTs(groupKey);
             
             if (md5 == null) {
-                md5 = MD5Utils.md5Hex(content, ENCODE_UTF8);
+                md5 = MD5Utils.md5Hex(content, PERSIST_ENCODE);
             }
             
             //check md5 & update local disk cache.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoMapper.java
Patch:
@@ -135,7 +135,7 @@ default MapperResult configInfoLikeTenantCount(MapperContext context) {
      * id,data_id,group_id,tenant_id,app_name,content,md5,gmt_modified,type,encrypted_data_key FROM config_info WHERE id
      * > ? ORDER BY id ASC LIMIT startRow,pageSize
      *
-     * @param context The context of startRow, pageSize
+     * @param context     The context of startRow, pageSize
      * @return The sql of querying all config info.
      */
     MapperResult findAllConfigInfoFragment(MapperContext context);

File: auth/src/main/java/com/alibaba/nacos/auth/config/AuthConfigs.java
Patch:
@@ -98,6 +98,9 @@ public void validate() throws NacosException {
         if (StringUtils.isEmpty(nacosAuthSystemType)) {
             throw new NacosException(AuthErrorCode.INVALID_TYPE.getCode(), AuthErrorCode.INVALID_TYPE.getMsg());
         }
+        if (EnvUtil.getStandaloneMode()) {
+            return;
+        }
         if (StringUtils.isEmpty(serverIdentityKey) || StringUtils.isEmpty(serverIdentityValue)) {
             throw new NacosException(AuthErrorCode.EMPTY_IDENTITY.getCode(), AuthErrorCode.EMPTY_IDENTITY.getMsg());
         }

File: plugin-default-impl/nacos-default-control-plugin/src/main/java/com/alibaba/nacos/plugin/control/impl/NacosConnectionControlManager.java
Patch:
@@ -62,7 +62,7 @@ public ConnectionCheckResponse check(ConnectionCheckRequest connectionCheckReque
         Map<String, Integer> metricsTotalCount = metricsCollectorList.stream().collect(
                 Collectors.toMap(ConnectionMetricsCollector::getName, ConnectionMetricsCollector::getTotalCount));
         int totalCount = metricsTotalCount.values().stream().mapToInt(Integer::intValue).sum();
-        if (totalCount > totalCountLimit) {
+        if (totalCount >= totalCountLimit) {
             connectionCheckResponse.setSuccess(false);
             connectionCheckResponse.setCode(ConnectionCheckCode.DENY_BY_TOTAL_OVER);
         }

File: auth/src/main/java/com/alibaba/nacos/auth/config/AuthConfigs.java
Patch:
@@ -92,7 +92,7 @@ public AuthConfigs() {
      */
     @PostConstruct
     public void validate() throws NacosException {
-        if (!authEnabled || EnvUtil.getStandaloneMode()) {
+        if (!authEnabled) {
             return;
         }
         if (StringUtils.isEmpty(nacosAuthSystemType)) {

File: auth/src/main/java/com/alibaba/nacos/auth/config/AuthConfigs.java
Patch:
@@ -92,7 +92,7 @@ public AuthConfigs() {
      */
     @PostConstruct
     public void validate() throws NacosException {
-        if (!authEnabled) {
+        if (!authEnabled || EnvUtil.getStandaloneMode()) {
             return;
         }
         if (StringUtils.isEmpty(nacosAuthSystemType)) {

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftConfig.java
Patch:
@@ -98,7 +98,7 @@ public String getValOfDefault(String key, String defaultVal) {
     @Override
     public String toString() {
         try {
-            return JacksonUtils.toJson(data);
+            return JacksonUtils.toJson(this);
         } catch (Exception e) {
             return String.valueOf(data);
         }

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/rule/storage/LocalDiskRuleStorage.java
Patch:
@@ -59,7 +59,7 @@ private static String defaultBaseDir() {
     private File getConnectionRuleFile() {
         File baseDir = new File(localRuleBaseDir, "data" + File.separator + "connection" + File.separator);
         if (!baseDir.exists()) {
-            baseDir.mkdir();
+            baseDir.mkdirs();
         }
         return new File(baseDir, "limitRule");
     }

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/ConfigChangeAspect.java
Patch:
@@ -332,8 +332,8 @@ private Object configChangeServiceHandle(ProceedingJoinPoint pjp,
                 retVal = pjp.proceed(args);
             }
         } catch (Throwable e) {
-            LOGGER.warn("config change plugin proceed failed {}", e.getMessage());
-            configChangeResponse.setMsg("config change plugin proceed failed " + e.getMessage());
+            LOGGER.warn("config change join point failed {}", e.getMessage());
+            configChangeResponse.setMsg("config change join point fail" + e.getMessage());
             retVal = wrapErrorResp(configChangeResponse);
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -79,7 +79,7 @@ public void init() {
         this.mapperManager = MapperManager.instance(isDataSourceLogEnable);
     }
     
-    private static final class GroupCapacityRowMapper implements RowMapper<GroupCapacity> {
+    static final class GroupCapacityRowMapper implements RowMapper<GroupCapacity> {
         
         @Override
         public GroupCapacity mapRow(ResultSet rs, int rowNum) throws SQLException {

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -76,7 +76,7 @@ public void init() {
         this.mapperManager = MapperManager.instance(isDataSourceLogEnable);
     }
     
-    private static final class TenantCapacityRowMapper implements RowMapper<TenantCapacity> {
+    static final class TenantCapacityRowMapper implements RowMapper<TenantCapacity> {
         
         @Override
         public TenantCapacity mapRow(ResultSet rs, int rowNum) throws SQLException {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalConfigInfoPersistServiceImpl.java
Patch:
@@ -609,7 +609,8 @@ private int updateConfigInfoAtomicCas(final ConfigInfo configInfo, final String
         String effect = configAdvanceInfo == null ? null : (String) configAdvanceInfo.get("effect");
         String type = configAdvanceInfo == null ? null : (String) configAdvanceInfo.get("type");
         String schema = configAdvanceInfo == null ? null : (String) configAdvanceInfo.get("schema");
-        
+        final String encryptedDataKey =
+                configInfo.getEncryptedDataKey() == null ? StringUtils.EMPTY : configInfo.getEncryptedDataKey();
         try {
             ConfigInfoMapper configInfoMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                     TableConstant.CONFIG_INFO);
@@ -627,7 +628,7 @@ private int updateConfigInfoAtomicCas(final ConfigInfo configInfo, final String
             context.putUpdateParameter(FieldConstant.EFFECT, effect);
             context.putUpdateParameter(FieldConstant.TYPE, type);
             context.putUpdateParameter(FieldConstant.C_SCHEMA, schema);
-            
+            context.putUpdateParameter(FieldConstant.ENCRYPTED_DATA_KEY, encryptedDataKey);
             context.putWhereParameter(FieldConstant.DATA_ID, configInfo.getDataId());
             context.putWhereParameter(FieldConstant.GROUP_ID, configInfo.getGroup());
             context.putWhereParameter(FieldConstant.TENANT_ID, tenantTmp);

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/constants/FieldConstant.java
Patch:
@@ -36,6 +36,8 @@ public class FieldConstant {
     
     public static final String APP_NAME = "app_name";
     
+    public static final String ENCRYPTED_DATA_KEY = "encrypted_data_key";
+    
     public static final String START_ROW = "startRow";
     
     public static final String PAGE_SIZE = "pageSize";

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoMapper.java
Patch:
@@ -499,13 +499,13 @@ default MapperResult updateConfigInfoAtomicCas(MapperContext context) {
         paramList.add(context.getUpdateParameter(FieldConstant.EFFECT));
         paramList.add(context.getUpdateParameter(FieldConstant.TYPE));
         paramList.add(context.getUpdateParameter(FieldConstant.C_SCHEMA));
-        
+        paramList.add(context.getUpdateParameter(FieldConstant.ENCRYPTED_DATA_KEY));
         paramList.add(context.getWhereParameter(FieldConstant.DATA_ID));
         paramList.add(context.getWhereParameter(FieldConstant.GROUP_ID));
         paramList.add(context.getWhereParameter(FieldConstant.TENANT_ID));
         paramList.add(context.getWhereParameter(FieldConstant.MD5));
-        String sql = "UPDATE config_info SET "
-                + "content=?, md5 = ?, src_ip=?,src_user=?,gmt_modified=?, app_name=?,c_desc=?,c_use=?,effect=?,type=?,c_schema=? "
+        String sql = "UPDATE config_info SET " + "content=?, md5 = ?, src_ip=?,src_user=?,gmt_modified=?,"
+                + " app_name=?,c_desc=?,c_use=?,effect=?,type=?,c_schema=?,encrypted_data_key=? "
                 + "WHERE data_id=? AND group_id=? AND tenant_id=? AND (md5=? OR md5 IS NULL OR md5='')";
         return new MapperResult(sql, paramList);
     }

File: core/src/test/java/com/alibaba/nacos/core/distributed/id/SnowFlowerInstanceIdGeneratorTest.java
Patch:
@@ -23,7 +23,7 @@
 
 import java.util.stream.IntStream;
 
-public class SnowFlowerIdGeneratorTest {
+public class SnowFlowerInstanceIdGeneratorTest {
 
     @Test
     public void nextId() {

File: core/src/test/java/com/alibaba/nacos/core/model/vo/InstanceIdGeneratorVOTest.java
Patch:
@@ -19,7 +19,7 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-public class IdGeneratorVOTest {
+public class InstanceIdGeneratorVOTest {
     
     @Test
     public void test() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/disk/ConfigRocksDbDiskService.java
Patch:
@@ -59,11 +59,11 @@ public class ConfigRocksDbDiskService implements ConfigDiskService {
     private void createDirIfNotExist(String dir) {
         File roskDataDir = new File(EnvUtil.getNacosHome(), "rocksdata");
         if (!roskDataDir.exists()) {
-            roskDataDir.mkdir();
+            roskDataDir.mkdirs();
         }
         File baseDir = new File(EnvUtil.getNacosHome(), dir);
         if (!baseDir.exists()) {
-            baseDir.mkdir();
+            baseDir.mkdirs();
         }
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoTagPersistServiceImpl.java
Patch:
@@ -147,7 +147,7 @@ public ConfigOperateResult addConfigInfo4Tag(ConfigInfo configInfo, String tag,
     @Override
     public ConfigOperateResult insertOrUpdateTag(final ConfigInfo configInfo, final String tag, final String srcIp,
             final String srcUser) {
-        if (findConfigInfo4Tag(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant(), tag) == null) {
+        if (findConfigInfo4TagState(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant(), tag) == null) {
             return addConfigInfo4Tag(configInfo, tag, srcIp, srcUser);
         } else {
             return updateConfigInfo4Tag(configInfo, tag, srcIp, srcUser);
@@ -157,7 +157,7 @@ public ConfigOperateResult insertOrUpdateTag(final ConfigInfo configInfo, final
     @Override
     public ConfigOperateResult insertOrUpdateTagCas(final ConfigInfo configInfo, final String tag, final String srcIp,
             final String srcUser) {
-        if (findConfigInfo4Tag(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant(), tag) == null) {
+        if (findConfigInfo4TagState(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant(), tag) == null) {
             return addConfigInfo4Tag(configInfo, tag, srcIp, srcUser);
         } else {
             return updateConfigInfo4TagCas(configInfo, tag, srcIp, srcUser);
@@ -248,7 +248,7 @@ public ConfigOperateResult updateConfigInfo4TagCas(ConfigInfo configInfo, String
             final MapperResult mapperResult = configInfoTagMapper.updateConfigInfo4TagCas(context);
             
             EmbeddedStorageContextUtils.onModifyConfigTagInfo(configInfo, tagTmp, srcIp, time);
-            EmbeddedStorageContextHolder.addSqlContext(mapperResult.getSql(), mapperResult.getParamList());
+            EmbeddedStorageContextHolder.addSqlContext(mapperResult.getSql(), mapperResult.getParamList().toArray());
             
             Boolean success = databaseOperate.blockUpdate();
             if (success) {

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpProcessorTest.java
Patch:
@@ -86,11 +86,11 @@ public void init() throws Exception {
         when(EnvUtil.getProperty(eq(CommonConstant.NACOS_PLUGIN_DATASOURCE_LOG), eq(Boolean.class),
                 eq(false))).thenReturn(false);
         dynamicDataSourceMockedStatic.when(DynamicDataSource::getInstance).thenReturn(dynamicDataSource);
-    
+        
         when(dynamicDataSource.getDataSource()).thenReturn(dataSourceService);
-    
+        
         dumpService = new ExternalDumpService(configInfoPersistService, null, null, null, configInfoBetaPersistService,
-                configInfoTagPersistService, null);
+                configInfoTagPersistService, null, null);
         dumpProcessor = new DumpProcessor(configInfoPersistService, configInfoBetaPersistService,
                 configInfoTagPersistService);
         Field[] declaredFields = ConfigDiskServiceFactory.class.getDeclaredFields();

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -494,7 +494,7 @@ private void batchCheckAndStripGroupNamePrefix(List<Instance> instances, String
     
     private void checkAndStripGroupNamePrefix(Instance instance, String groupName) throws NacosException {
         String serviceName = instance.getServiceName();
-        if (serviceName != null) {
+        if (NamingUtils.isServiceNameCompatibilityMode(serviceName)) {
             String groupNameOfInstance = NamingUtils.getGroupName(serviceName);
             if (!groupName.equals(groupNameOfInstance)) {
                 throw new NacosException(NacosException.CLIENT_INVALID_PARAM, String.format(

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -34,7 +34,6 @@
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoTagPersistService;
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
-import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.paramcheck.impl.ConfigRequestParamExtractor;
@@ -44,7 +43,6 @@
 import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.stereotype.Component;
 
-import java.sql.Timestamp;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -109,7 +107,6 @@ public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta me
                 throw new NacosException(NacosException.NO_RIGHT, "dataId:" + dataId + " is aggr");
             }
             
-            final Timestamp time = TimeUtils.getCurrentTime();
             ConfigInfo configInfo = new ConfigInfo(dataId, group, tenant, appName, content);
             configInfo.setMd5(request.getCasMd5());
             configInfo.setType(type);

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoAggrPersistServiceImpl.java
Patch:
@@ -73,7 +73,7 @@ public class EmbeddedConfigInfoAggrPersistServiceImpl implements ConfigInfoAggrP
     /**
      * The constructor sets the dependency injection order.
      *
-     * @param databaseOperate {@link EmbeddedStoragePersistServiceImpl}
+     * @param  databaseOperate databaseOperate.
      */
     public EmbeddedConfigInfoAggrPersistServiceImpl(DatabaseOperate databaseOperate) {
         this.databaseOperate = databaseOperate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoBetaPersistServiceImpl.java
Patch:
@@ -73,7 +73,7 @@ public class EmbeddedConfigInfoBetaPersistServiceImpl implements ConfigInfoBetaP
     /**
      * The constructor sets the dependency injection order.
      *
-     * @param databaseOperate {@link EmbeddedStoragePersistServiceImpl}
+     * @param databaseOperate databaseOperate.
      */
     public EmbeddedConfigInfoBetaPersistServiceImpl(DatabaseOperate databaseOperate) {
         this.databaseOperate = databaseOperate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImpl.java
Patch:
@@ -139,7 +139,7 @@ public class EmbeddedConfigInfoPersistServiceImpl implements ConfigInfoPersistSe
     /**
      * The constructor sets the dependency injection order.
      *
-     * @param databaseOperate    {@link EmbeddedStoragePersistServiceImpl}
+     * @param databaseOperate databaseOperate.
      * @param idGeneratorManager {@link IdGeneratorManager}
      */
     public EmbeddedConfigInfoPersistServiceImpl(DatabaseOperate databaseOperate, IdGeneratorManager idGeneratorManager,

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoTagPersistServiceImpl.java
Patch:
@@ -73,7 +73,7 @@ public class EmbeddedConfigInfoTagPersistServiceImpl implements ConfigInfoTagPer
     /**
      * The constructor sets the dependency injection order.
      *
-     * @param databaseOperate {@link EmbeddedStoragePersistServiceImpl}
+     * @param databaseOperate databaseOperate.
      */
     public EmbeddedConfigInfoTagPersistServiceImpl(DatabaseOperate databaseOperate) {
         this.databaseOperate = databaseOperate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedHistoryConfigInfoPersistServiceImpl.java
Patch:
@@ -75,7 +75,7 @@ public class EmbeddedHistoryConfigInfoPersistServiceImpl implements HistoryConfi
     /**
      * The constructor sets the dependency injection order.
      *
-     * @param databaseOperate {@link EmbeddedStoragePersistServiceImpl}
+     * @param databaseOperate databaseOperate.
      */
     public EmbeddedHistoryConfigInfoPersistServiceImpl(DatabaseOperate databaseOperate) {
         this.databaseOperate = databaseOperate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalConfigInfoPersistServiceImpl.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.config.server.model.SameConfigPolicy;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;
 import com.alibaba.nacos.config.server.service.repository.HistoryConfigInfoPersistService;
+import com.alibaba.nacos.config.server.service.sql.ExternalStorageUtils;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.persistence.configuration.condition.ConditionOnExternalStorage;
@@ -62,7 +63,6 @@
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.PreparedStatementCreator;
-import org.springframework.jdbc.support.GeneratedKeyHolder;
 import org.springframework.jdbc.support.KeyHolder;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.TransactionStatus;
@@ -229,7 +229,7 @@ public ConfigOperateResult insertOrUpdateCas(String srcIp, String srcUser, Confi
             }
         }
     }
-    
+
     @Override
     public long addConfigInfoAtomic(final long configId, final String srcIp, final String srcUser,
             final ConfigInfo configInfo, Map<String, Object> configAdvanceInfo) {
@@ -246,7 +246,7 @@ public long addConfigInfoAtomic(final long configId, final String srcIp, final S
         
         final String md5Tmp = MD5Utils.md5Hex(configInfo.getContent(), Constants.ENCODE);
         
-        KeyHolder keyHolder = new GeneratedKeyHolder();
+        KeyHolder keyHolder = ExternalStorageUtils.createKeyHolder();
         
         ConfigInfoMapper configInfoMapper = mapperManager
                 .findMapper(dataSourceService.getDataSourceType(), TableConstant.CONFIG_INFO);

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyImport_CITCase.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.ByteUtils;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
+import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;
 import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
-import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.persistence.repository.embedded.operate.DatabaseOperate;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
@@ -82,7 +82,7 @@ public void testDerbyImport() throws Throwable {
             final String queryGroup = "DEFAULT_GROUP";
             final String expectContent = "people.enable=true";
     
-            PersistService persistService = context.getBean(PersistService.class);
+            ConfigInfoPersistService persistService = context.getBean(ConfigInfoPersistService.class);
             ConfigInfo configInfo = persistService.findConfigInfo(queryDataId, queryGroup, "");
             System.out.println(configInfo);
             Assert.assertNotNull(configInfo);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpProcessor.java
Patch:
@@ -68,9 +68,8 @@ public boolean process(NacosTask task) {
         String handleIp = dumpTask.getHandleIp();
         boolean isBeta = dumpTask.isBeta();
         String tag = dumpTask.getTag();
-        boolean isBatch = dumpTask.isBatch();
         ConfigDumpEvent.ConfigDumpEventBuilder build = ConfigDumpEvent.builder().namespaceId(tenant).dataId(dataId)
-                .group(group).isBatch(isBatch).isBeta(isBeta).tag(tag).handleIp(handleIp);
+                .group(group).isBeta(isBeta).tag(tag).handleIp(handleIp);
         String type = "formal";
         if (isBeta) {
             type = "beta";

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySql.java
Patch:
@@ -113,7 +113,7 @@ public MapperResult findChangeConfigFetchRows(MapperContext context) {
         
         List<Object> paramList = new ArrayList<>();
         
-        final String sqlFetchRows = "SELECT id,data_id,group_id,tenant_id,app_name,content,type,md5,gmt_modified FROM config_info WHERE ";
+        final String sqlFetchRows = "SELECT id,data_id,group_id,tenant_id,app_name,type,md5,gmt_modified FROM config_info WHERE ";
         String where = " 1=1 ";
         if (!StringUtils.isBlank(dataId)) {
             where += " AND data_id LIKE ? ";

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoMapper.java
Patch:
@@ -149,7 +149,7 @@ default MapperResult configInfoLikeTenantCount(MapperContext context) {
      */
     default MapperResult findChangeConfig(MapperContext context) {
         String sql =
-                "SELECT id, data_id, group_id, tenant_id, app_name, content, gmt_modified, encrypted_data_key FROM config_info WHERE "
+                "SELECT id, data_id, group_id, tenant_id, app_name,md5, gmt_modified, encrypted_data_key FROM config_info WHERE "
                         + "gmt_modified >= ? and id > ? order by id  limit ? ";
         return new MapperResult(sql, CollectionUtils.list(context.getWhereParameter(FieldConstant.START_TIME),
                 context.getWhereParameter(FieldConstant.LAST_MAX_ID),

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySqlTest.java
Patch:
@@ -160,7 +160,7 @@ public void testFindAllConfigInfoFragment() {
     public void testFindChangeConfig() {
         MapperResult mapperResult = configInfoMapperByMySql.findChangeConfig(context);
         Assert.assertEquals(mapperResult.getSql(),
-                "SELECT id, data_id, group_id, tenant_id, app_name, content, gmt_modified, encrypted_data_key FROM config_info"
+                "SELECT id, data_id, group_id, tenant_id, app_name,md5, gmt_modified, encrypted_data_key FROM config_info"
                         + " WHERE gmt_modified >= ? and id > ? order by id  limit ? ");
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(), new Object[] {startTime, lastMaxId, pageSize});
     }
@@ -180,7 +180,7 @@ public void testFindChangeConfigFetchRows() {
         context.putWhereParameter(FieldConstant.LAST_MAX_ID, lastMaxId);
         MapperResult mapperResult = configInfoMapperByMySql.findChangeConfigFetchRows(context);
         Assert.assertEquals(mapperResult.getSql(),
-                "SELECT id,data_id,group_id,tenant_id,app_name,content,type,md5,gmt_modified FROM config_info "
+                "SELECT id,data_id,group_id,tenant_id,app_name,type,md5,gmt_modified FROM config_info "
                         + "WHERE  1=1  AND tenant_id = ?  AND app_name = ?  AND gmt_modified >=?  AND gmt_modified <=?  AND id > "
                         + lastMaxId + " ORDER BY id ASC LIMIT " + startRow + "," + pageSize);
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(),

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/utils/SignUtil.java
Patch:
@@ -50,7 +50,7 @@ public static String sign(String data, String key) throws Exception {
         }
     }
     
-    private static byte[] sign(byte[] data, byte[] key, SignUtil.SigningAlgorithm algorithm) throws Exception {
+    static byte[] sign(byte[] data, byte[] key, SignUtil.SigningAlgorithm algorithm) throws Exception {
         try {
             Mac mac = Mac.getInstance(algorithm.toString());
             mac.init(new SecretKeySpec(key, algorithm.toString()));

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/StsCredentialHolderTest.java
Patch:
@@ -129,6 +129,8 @@ private StsCredential buildMockStsCredential() {
         stsCredential.setAccessKeySecret("test-sts-sk");
         stsCredential.setSecurityToken("test-sts-token");
         stsCredential.setExpiration(new Date(System.currentTimeMillis() + 1000000));
+        stsCredential.setCode("200");
+        stsCredential.setLastUpdated(new Date());
         return stsCredential;
     }
 }
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java
Patch:
@@ -136,7 +136,7 @@ public class NamingGrpcClientProxyTest {
     @Before
     public void setUp() throws NacosException, NoSuchFieldException, IllegalAccessException {
         System.setProperty(GrpcConstants.GRPC_RETRY_TIMES, "1");
-        System.setProperty(GrpcConstants.GRPC_SERVER_CHECK_TIMEOUT, "1000");
+        System.setProperty(GrpcConstants.GRPC_SERVER_CHECK_TIMEOUT, "100");
         List<String> serverList = Stream.of(ORIGIN_SERVER, "anotherServer").collect(Collectors.toList());
         when(factory.getServerList()).thenReturn(serverList);
         when(factory.genNextServer()).thenReturn(ORIGIN_SERVER);

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/proxy/MapperProxy.java
Patch:
@@ -39,7 +39,7 @@ public class MapperProxy implements InvocationHandler {
     
     private Mapper mapper;
     
-    private static final Map<String, MapperProxy> SINGLE_MAPPER_PROXY_MAP = new ConcurrentHashMap<>(16);
+    private static final Map<String, Mapper> SINGLE_MAPPER_PROXY_MAP = new ConcurrentHashMap<>(16);
     
     public <R> R createProxy(Mapper mapper) {
         this.mapper = mapper;

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -166,9 +166,9 @@ public boolean incrementUsageWithDefaultQuotaLimit(GroupCapacity groupCapacity)
         GroupCapacityMapper groupCapacityMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                 TableConstant.GROUP_CAPACITY);
         MapperContext context = new MapperContext();
-        context.putWhereParameter(FieldConstant.GMT_MODIFIED, groupCapacity.getGmtModified());
+        context.putUpdateParameter(FieldConstant.GMT_MODIFIED, groupCapacity.getGmtModified());
         context.putWhereParameter(FieldConstant.GROUP_ID, groupCapacity.getGroup());
-        context.putWhereParameter(FieldConstant.QUOTA, groupCapacity.getQuota());
+        context.putWhereParameter(FieldConstant.USAGE, groupCapacity.getQuota());
         MapperResult mapperResult = groupCapacityMapper.incrementUsageByWhereQuotaEqualZero(context);
         try {
             int affectRow = jdbcTemplate.update(mapperResult.getSql(), mapperResult.getParamList().toArray());
@@ -312,7 +312,7 @@ public boolean correctUsage(String group, Timestamp gmtModified) {
                 TableConstant.GROUP_CAPACITY);
         MapperResult mapperResult;
         MapperContext context = new MapperContext();
-        context.putWhereParameter(FieldConstant.GMT_MODIFIED, gmtModified);
+        context.putUpdateParameter(FieldConstant.GMT_MODIFIED, gmtModified);
         context.putWhereParameter(FieldConstant.GROUP_ID, group);
         if (CLUSTER.equals(group)) {
             mapperResult = groupCapacityMapper.updateUsage(context);

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -146,7 +146,7 @@ public boolean incrementUsageWithDefaultQuotaLimit(TenantCapacity tenantCapacity
         MapperContext context = new MapperContext();
         context.putUpdateParameter(FieldConstant.GMT_MODIFIED, tenantCapacity.getGmtModified());
         context.putWhereParameter(FieldConstant.TENANT_ID, tenantCapacity.getTenant());
-        context.putWhereParameter(FieldConstant.USAGE, tenantCapacity.getUsage());
+        context.putWhereParameter(FieldConstant.USAGE, tenantCapacity.getQuota());
         MapperResult mapperResult = tenantCapacityMapper.incrementUsageWithDefaultQuotaLimit(context);
         
         try {

File: config/src/test/java/com/alibaba/nacos/config/server/configuration/ConfigCommonConfigTest.java
Patch:
@@ -52,8 +52,10 @@ public void getMaxPushRetryTimes() {
     
     @Test
     public void setMaxPushRetryTimes() {
+        int maxPushRetryTimesOld = commonConfig.getMaxPushRetryTimes();
         commonConfig.setMaxPushRetryTimes(100);
         assertEquals(100, commonConfig.getMaxPushRetryTimes());
+        commonConfig.setMaxPushRetryTimes(maxPushRetryTimesOld);
     }
     
     @Test

File: config/src/test/java/com/alibaba/nacos/config/server/controller/v2/ConfigControllerV2Test.java
Patch:
@@ -107,7 +107,6 @@ public class ConfigControllerV2Test {
     @Before
     public void setUp() {
         EnvUtil.setEnvironment(new StandardEnvironment());
-        when(servletContext.getContextPath()).thenReturn("/nacos");
         configDetailService = new ConfigDetailService(configInfoPersistService);
         configControllerV2 = new ConfigControllerV2(inner, configOperationService, configDetailService);
         mockmvc = MockMvcBuilders.standaloneSetup(configControllerV2).addFilter(authFilter).build();
@@ -305,6 +304,5 @@ public void testGetConfigAuthFilter() throws Exception {
         assertEquals(response.getErrorMessage(),
                 "Invalid server identity key or value, Please make sure set `nacos.core.auth.server.identity.key`"
                         + " and `nacos.core.auth.server.identity.value`, or open `nacos.core.auth.enable.userAgentAuthWhite`");
-        when(authConfigs.isAuthEnabled()).thenReturn(false);
     }
 }

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpServiceTest.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
 import org.junit.BeforeClass;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -31,6 +32,7 @@
 @SpringBootTest
 @SpringBootApplication(scanBasePackages = "com.alibaba.nacos")
 @WebAppConfiguration
+@Ignore
 public class DumpServiceTest {
     
     @Autowired

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/GroupCapacityMapper.java
Patch:
@@ -195,7 +195,7 @@ default MapperResult updateUsageByWhere(MapperContext context) {
                 "UPDATE group_capacity SET usage = (SELECT count(*) FROM config_info WHERE group_id=? AND tenant_id = '"
                         + NamespaceUtil.getNamespaceDefaultId() + "')," + " gmt_modified = ? WHERE group_id= ?",
                 CollectionUtils.list(context.getWhereParameter(FieldConstant.GROUP_ID),
-                        context.getWhereParameter(FieldConstant.GMT_MODIFIED),
+                        context.getUpdateParameter(FieldConstant.GMT_MODIFIED),
                         context.getWhereParameter(FieldConstant.GROUP_ID)));
     }
     

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java
Patch:
@@ -49,8 +49,7 @@
 @Component
 public class JwtTokenManager extends Subscriber<ServerConfigChangeEvent> implements TokenManager {
     
-    @Deprecated
-    private static final String AUTHORITIES_KEY = "auth";
+    private static final String AUTH_DISABLED_TOKEN = "AUTH_DISABLED";
     
     /**
      * Token validity time(seconds).
@@ -105,7 +104,7 @@ public String createToken(Authentication authentication) {
      */
     public String createToken(String userName) {
         if (!authConfigs.isAuthEnabled()) {
-            return StringUtils.EMPTY;
+            return AUTH_DISABLED_TOKEN;
         }
         checkJwtParser();
         return jwtParser.jwtBuilder().setUserName(userName).setExpiredTime(this.tokenValidityInSeconds).compact();

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManagerTest.java
Patch:
@@ -110,7 +110,7 @@ public void testGetExpiredTimeInSeconds() throws AccessException {
     public void testCreateTokenWhenDisableAuth() {
         when(authConfigs.isAuthEnabled()).thenReturn(false);
         jwtTokenManager = new JwtTokenManager(authConfigs);
-        assertEquals("", jwtTokenManager.createToken("nacos"));
+        assertEquals("AUTH_DISABLED", jwtTokenManager.createToken("nacos"));
     }
     
     @Test

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/handler/PageHandlerAdapterFactory.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.plugin.auth.impl.persistence.handler;
 
+import com.alibaba.nacos.plugin.auth.impl.persistence.handler.support.DefaultPageHandlerAdapter;
 import com.alibaba.nacos.plugin.auth.impl.persistence.handler.support.DerbyPageHandlerAdapter;
 import com.alibaba.nacos.plugin.auth.impl.persistence.handler.support.MysqlPageHandlerAdapter;
 
@@ -71,7 +72,7 @@ private void initHandlerAdapters() {
         // DerbyPageHandlerAdapter
         addHandlerAdapter(new DerbyPageHandlerAdapter());
         // DefaultPageHandlerAdapter
-        addHandlerAdapter(new DerbyPageHandlerAdapter());
+        addHandlerAdapter(new DefaultPageHandlerAdapter());
     }
     
     private void addHandlerAdapter(PageHandlerAdapter handlerAdapter) {

File: prometheus/src/main/java/com/alibaba/nacos/prometheus/filter/PrometheusAuthFilter.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.prometheus.filter;
 
+import com.alibaba.nacos.plugin.auth.constant.Constants;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -35,6 +37,7 @@
  * @author vividfish
  */
 @Configuration
+@ConditionalOnProperty(value = Constants.Auth.NACOS_CORE_AUTH_ENABLED, havingValue = "true")
 public class PrometheusAuthFilter {
     
     @Bean

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.common.remote.exception.ConnectionAlreadyClosedException;
 import com.alibaba.nacos.common.spi.NacosServiceLoader;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.core.monitor.MetricsMonitor;
 import com.alibaba.nacos.plugin.control.ControlManagerCenter;
 import com.alibaba.nacos.plugin.control.Loggers;
 import com.alibaba.nacos.plugin.control.configs.ControlConfigs;
@@ -249,6 +250,7 @@ public void start() {
         // Start UnHealthy Connection Expel Task.
         RpcScheduledExecutor.COMMON_SERVER_EXECUTOR.scheduleWithFixedDelay(() -> {
             runtimeConnectionEjector.doEject();
+            MetricsMonitor.getLongConnectionMonitor().set(connections.size());
         }, 1000L, 3000L, TimeUnit.MILLISECONDS);
         
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/NacosRuntimeConnectionEjector.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.common.remote.exception.ConnectionAlreadyClosedException;
 import com.alibaba.nacos.common.utils.CollectionUtils;
-import com.alibaba.nacos.core.monitor.MetricsMonitor;
 import com.alibaba.nacos.plugin.control.Loggers;
 
 import java.util.HashSet;
@@ -64,7 +63,6 @@ private void ejectOutdatedConnection() {
     
             Map<String, Connection> connections = connectionManager.connections;
             int totalCount = connections.size();
-            MetricsMonitor.getLongConnectionMonitor().set(totalCount);
             int currentSdkClientCount = connectionManager.currentSdkClientCount();
             
             Loggers.CONNECTION.info("Long connection metrics detail ,Total count ={}, sdkCount={},clusterCount={}",

File: config/src/main/java/com/alibaba/nacos/config/server/paramcheck/ConfigListenerHttpParamExtractor.java
Patch:
@@ -59,7 +59,7 @@ public List<ParamInfo> extractParam(HttpServletRequest request) throws NacosRunt
         for (String line : lines) {
             ParamInfo paramInfo = new ParamInfo();
             String[] words = line.split(Character.toString(WORD_SEPARATOR_CHAR));
-            if (words.length < 3 || words.length > 4) {
+            if (words.length < 2 || words.length > 4) {
                 throw new IllegalArgumentException("invalid probeModify");
             }
             paramInfo.setDataId(words[0]);

File: persistence/src/main/java/com/alibaba/nacos/persistence/constants/PersistenceConstant.java
Patch:
@@ -52,7 +52,4 @@ public class PersistenceConstant {
     
     public static final String CONFIG_MODEL_RAFT_GROUP = "nacos_config";
     
-    public static final String OFFSET = "OFFSET";
-    
-    public static final String LIMIT = "LIMIT";
 }

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionPersistService.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.persistence.model.Page;
-import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 /**
  * Permission CRUD service.
@@ -64,7 +63,7 @@ public interface PermissionPersistService {
      * create Pagination utils.
      *
      * @param <E> Generic object
-     * @return {@link PaginationHelper}
+     * @return {@link AuthPaginationHelper}
      */
-    <E> PaginationHelper<E> createPaginationHelper();
+    <E> AuthPaginationHelper<E> createPaginationHelper();
 }

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/UserPersistService.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.persistence.model.Page;
-import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.util.List;
 
@@ -86,7 +85,7 @@ public interface UserPersistService {
      * create Pagination utils.
      *
      * @param <E> Generic object
-     * @return {@link PaginationHelper}
+     * @return {@link AuthPaginationHelper}
      */
-    <E> PaginationHelper<E> createPaginationHelper();
+    <E> AuthPaginationHelper<E> createPaginationHelper();
 }

File: api/src/test/java/com/alibaba/nacos/api/config/remote/request/BasedConfigRequestTest.java
Patch:
@@ -20,6 +20,7 @@
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.core.JsonProcessingException;
 import com.fasterxml.jackson.databind.DeserializationFeature;
+import com.fasterxml.jackson.databind.MapperFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.BeforeClass;
 
@@ -60,6 +61,7 @@ public static void setUp() throws Exception {
         mapper = new ObjectMapper();
         mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
         mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
+        mapper.enable(MapperFeature.SORT_PROPERTIES_ALPHABETICALLY);
     }
     
     public abstract void testSerialize() throws JsonProcessingException;

File: api/src/test/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequestTest.java
Patch:
@@ -35,7 +35,7 @@ public void testSerialize() throws JsonProcessingException {
         String json = mapper.writeValueAsString(configBatchListenRequest);
         assertTrue(json.contains("\"listen\":" + "true"));
         assertTrue(json.contains(
-                "\"configListenContexts\":[{\"group\":\"group\",\"md5\":\"test_MD5\",\"dataId\":\"test_data\",\"tenant\":\"test_tenant\"}]"));
+                "\"configListenContexts\":[{\"dataId\":\"test_data\",\"group\":\"group\",\"md5\":\"test_MD5\",\"tenant\":\"test_tenant\"}]"));
         assertTrue(json.contains("\"module\":\"" + Constants.Config.CONFIG_MODULE));
         assertTrue(json.contains("\"requestId\":\"" + requestId));
     }

File: api/src/test/java/com/alibaba/nacos/api/config/remote/response/ConfigChangeBatchListenResponseTest.java
Patch:
@@ -44,7 +44,7 @@ public void testSerializeSuccessResponse() throws JsonProcessingException {
         assertTrue(json.contains("\"resultCode\":" + ResponseCode.SUCCESS.getCode()));
         assertTrue(json.contains("\"errorCode\":0"));
         assertTrue(json.contains(
-                "\"changedConfigs\":[{\"group\":\"group\",\"dataId\":\"test_data\",\"tenant\":\"test_tenant\"}]"));
+                "\"changedConfigs\":[{\"dataId\":\"test_data\",\"group\":\"group\",\"tenant\":\"test_tenant\"}]"));
     }
     
     @Override

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainManager.java
Patch:
@@ -80,7 +80,7 @@ public synchronized ConfigFilterChainManager addFilter(IConfigFilter filter) {
     public void doFilter(IConfigRequest request, IConfigResponse response) throws NacosException {
         new VirtualFilterChain(this.filters).doFilter(request, response);
     }
-    
+
     private static class VirtualFilterChain implements IConfigFilterChain {
         
         private final List<? extends IConfigFilter> additionalFilters;
@@ -100,5 +100,5 @@ public void doFilter(final IConfigRequest request, final IConfigResponse respons
             }
         }
     }
-    
+
 }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CapacityController.java
Patch:
@@ -19,8 +19,10 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
 import com.alibaba.nacos.config.server.service.capacity.CapacityService;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -38,6 +40,7 @@
  */
 @RestController
 @RequestMapping(Constants.CAPACITY_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class CapacityController {
     
     private static final Logger LOGGER = LoggerFactory.getLogger(CapacityController.class);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ClientMetricsController.java
Patch:
@@ -28,9 +28,11 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.remote.Connection;
 import com.alibaba.nacos.core.remote.ConnectionManager;
 import com.alibaba.nacos.core.utils.GenericType;
@@ -61,6 +63,7 @@
  */
 @RestController
 @RequestMapping(Constants.METRICS_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class ClientMetricsController {
     
     private final ServerMemberManager serverMemberManager;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CommunicationController.java
Patch:
@@ -20,9 +20,11 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.SampleResult;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
 import com.alibaba.nacos.config.server.remote.ConfigChangeListenContext;
 import com.alibaba.nacos.config.server.service.LongPollingService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.remote.Connection;
 import com.alibaba.nacos.core.remote.ConnectionManager;
 import org.springframework.ui.ModelMap;
@@ -46,6 +48,7 @@
  */
 @RestController
 @RequestMapping(Constants.COMMUNICATION_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class CommunicationController {
     
     private final LongPollingService longPollingService;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -17,6 +17,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.persistence.configuration.DatasourceConfiguration;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
@@ -57,6 +59,7 @@
  */
 @RestController
 @RequestMapping(Constants.OPS_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class ConfigOpsController {
     
     private static final Logger LOGGER = LoggerFactory.getLogger(ConfigOpsController.class);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -17,6 +17,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.persistence.datasource.DataSourceService;
 import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
@@ -35,6 +37,7 @@
  */
 @RestController
 @RequestMapping(Constants.HEALTH_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class HealthController {
     
     private DataSourceService dataSourceService;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -22,6 +22,8 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
@@ -43,6 +45,7 @@
  */
 @RestController
 @RequestMapping(Constants.HISTORY_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class HistoryController {
     
     private final HistoryService historyService;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -21,8 +21,10 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.GroupkeyListenserStatus;
 import com.alibaba.nacos.config.server.model.SampleResult;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
 import com.alibaba.nacos.config.server.service.ConfigSubService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.ui.ModelMap;
@@ -41,6 +43,7 @@
  */
 @RestController
 @RequestMapping(Constants.LISTENER_CONTROLLER_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class ListenerController {
     
     private final ConfigSubService configSubService;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/v2/HistoryControllerV2.java
Patch:
@@ -26,6 +26,8 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
+import com.alibaba.nacos.config.server.paramcheck.ConfigDefaultHttpParamExtractor;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
@@ -51,6 +53,7 @@
 @NacosApi
 @RestController
 @RequestMapping(Constants.HISTORY_CONTROLLER_V2_PATH)
+@ExtractorManager.Extractor(httpExtractor = ConfigDefaultHttpParamExtractor.class)
 public class HistoryControllerV2 {
     
     private final HistoryService historyService;

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -24,6 +24,8 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ConfigBatchListenRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.utils.StringPool;
@@ -48,6 +50,7 @@ public class ConfigChangeBatchListenRequestHandler
     @Override
     @TpsControl(pointName = "ConfigListen")
     @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
+    @ExtractorManager.Extractor(rpcExtractor = ConfigBatchListenRequestParamExtractor.class)
     public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configChangeListenRequest, RequestMeta meta)
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeClusterSyncRequestHandler.java
Patch:
@@ -22,6 +22,8 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ConfigRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.control.TpsControl;
 import org.springframework.stereotype.Component;
@@ -44,6 +46,7 @@ public ConfigChangeClusterSyncRequestHandler(DumpService dumpService) {
     
     @TpsControl(pointName = "ClusterConfigChangeNotify")
     @Override
+    @ExtractorManager.Extractor(rpcExtractor = ConfigRequestParamExtractor.class)
     public ConfigChangeClusterSyncResponse handle(ConfigChangeClusterSyncRequest configChangeSyncRequest,
             RequestMeta meta) throws NacosException {
     

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -36,6 +36,8 @@
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ConfigRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
@@ -72,6 +74,7 @@ public ConfigPublishRequestHandler(ConfigInfoPersistService configInfoPersistSer
     @Override
     @TpsControl(pointName = "ConfigPublish")
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
+    @ExtractorManager.Extractor(rpcExtractor = ConfigRequestParamExtractor.class)
     public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta meta) throws NacosException {
         
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -38,6 +38,8 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ConfigRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;
@@ -78,6 +80,7 @@ public ConfigQueryRequestHandler(ConfigInfoPersistService configInfoPersistServi
     @Override
     @TpsControl(pointName = "ConfigQuery")
     @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
+    @ExtractorManager.Extractor(rpcExtractor = ConfigRequestParamExtractor.class)
     public ConfigQueryResponse handle(ConfigQueryRequest request, RequestMeta meta) throws NacosException {
         
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigRemoveRequestHandler.java
Patch:
@@ -29,6 +29,8 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ConfigRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.utils.Loggers;
@@ -60,6 +62,7 @@ public ConfigRemoveRequestHandler(ConfigInfoPersistService configInfoPersistServ
     @Override
     @TpsControl(pointName = "ConfigRemove")
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
+    @ExtractorManager.Extractor(rpcExtractor = ConfigRequestParamExtractor.class)
     public ConfigRemoveResponse handle(ConfigRemoveRequest configRemoveRequest, RequestMeta meta)
             throws NacosException {
         // check tenant

File: console/src/main/java/com/alibaba/nacos/console/controller/HealthController.java
Patch:
@@ -16,8 +16,10 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.console.paramcheck.ConsoleDefaultHttpParamExtractor;
 import com.alibaba.nacos.core.cluster.health.ModuleHealthCheckerHolder;
 import com.alibaba.nacos.core.cluster.health.ReadinessResult;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -33,6 +35,7 @@
  */
 @RestController("consoleHealth")
 @RequestMapping("/v1/console/health")
+@ExtractorManager.Extractor(httpExtractor = ConsoleDefaultHttpParamExtractor.class)
 public class HealthController {
     
     /**

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -21,8 +21,10 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.console.paramcheck.ConsoleDefaultHttpParamExtractor;
 import com.alibaba.nacos.core.namespace.repository.NamespacePersistService;
 import com.alibaba.nacos.core.namespace.model.Namespace;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.service.NamespaceOperationService;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
@@ -46,6 +48,7 @@
  */
 @RestController
 @RequestMapping("/v1/console/namespaces")
+@ExtractorManager.Extractor(httpExtractor = ConsoleDefaultHttpParamExtractor.class)
 public class NamespaceController {
     
     @Autowired

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -18,6 +18,8 @@
 
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.console.paramcheck.ConsoleDefaultHttpParamExtractor;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.module.ModuleState;
 import com.alibaba.nacos.sys.module.ModuleStateHolder;
@@ -38,6 +40,7 @@
  */
 @RestController
 @RequestMapping("/v1/console/server")
+@ExtractorManager.Extractor(httpExtractor = ConsoleDefaultHttpParamExtractor.class)
 public class ServerStateController {
     
     private static final String ANNOUNCEMENT_FILE = "announcement.conf";

File: console/src/main/java/com/alibaba/nacos/console/controller/v2/HealthControllerV2.java
Patch:
@@ -17,8 +17,10 @@
 package com.alibaba.nacos.console.controller.v2;
 
 import com.alibaba.nacos.api.model.v2.Result;
+import com.alibaba.nacos.console.paramcheck.ConsoleDefaultHttpParamExtractor;
 import com.alibaba.nacos.core.cluster.health.ModuleHealthCheckerHolder;
 import com.alibaba.nacos.core.cluster.health.ReadinessResult;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
@@ -32,6 +34,7 @@
  */
 @RestController("consoleHealthV2")
 @RequestMapping("/v2/console/health")
+@ExtractorManager.Extractor(httpExtractor = ConsoleDefaultHttpParamExtractor.class)
 public class HealthControllerV2 {
     
     /**

File: console/src/main/java/com/alibaba/nacos/console/controller/v2/NamespaceControllerV2.java
Patch:
@@ -23,9 +23,11 @@
 import com.alibaba.nacos.api.model.v2.Result;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.console.paramcheck.ConsoleDefaultHttpParamExtractor;
 import com.alibaba.nacos.core.namespace.model.Namespace;
 import com.alibaba.nacos.core.namespace.model.form.NamespaceForm;
 import com.alibaba.nacos.core.namespace.repository.NamespacePersistService;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.service.NamespaceOperationService;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;
@@ -52,6 +54,7 @@
 @NacosApi
 @RestController
 @RequestMapping("/v2/console/namespace")
+@ExtractorManager.Extractor(httpExtractor = ConsoleDefaultHttpParamExtractor.class)
 public class NamespaceControllerV2 {
     
     private final NamespaceOperationService namespaceOperationService;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -23,9 +23,11 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.naming.core.CatalogService;
 import com.alibaba.nacos.naming.core.CatalogServiceV2Impl;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.fasterxml.jackson.databind.node.ObjectNode;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -43,6 +45,7 @@
  */
 @RestController
 @RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_CATALOG_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class CatalogController {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -24,11 +24,13 @@
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.NumberUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.ClusterOperator;
 import com.alibaba.nacos.naming.core.ClusterOperatorV2Impl;
 import com.alibaba.nacos.naming.core.v2.metadata.ClusterMetadata;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.web.bind.annotation.PutMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -43,6 +45,7 @@
  */
 @RestController
 @RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_CLUSTER_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class ClusterController {
     
     private final ClusterOperatorV2Impl clusterOperatorV2;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -25,12 +25,14 @@
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.HealthOperator;
 import com.alibaba.nacos.naming.core.HealthOperatorV2Impl;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.naming.web.CanDistro;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -61,6 +63,7 @@
  */
 @RestController("namingHealthController")
 @RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_HEALTH_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class HealthController {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.constants.ClientConstants;
@@ -32,6 +33,7 @@
 import com.alibaba.nacos.naming.misc.SwitchManager;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.databind.node.ObjectNode;
@@ -52,6 +54,7 @@
 @RestController
 @RequestMapping({UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_OPERATOR_CONTEXT,
         UtilsAndCommons.NACOS_NAMING_CONTEXT + "/ops"})
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class OperatorController {
     
     private final SwitchManager switchManager;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -32,13 +32,15 @@
 import com.alibaba.nacos.common.utils.NumberUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.ServiceOperator;
 import com.alibaba.nacos.naming.core.ServiceOperatorV2Impl;
 import com.alibaba.nacos.naming.core.SubscribeManager;
 import com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.naming.selector.NoneSelector;
 import com.alibaba.nacos.naming.selector.SelectorManager;
@@ -71,6 +73,7 @@
  */
 @RestController
 @RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_SERVICE_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class ServiceController {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/CatalogControllerV2.java
Patch:
@@ -22,8 +22,10 @@
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.naming.core.CatalogServiceV2Impl;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.fasterxml.jackson.databind.node.ObjectNode;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -43,6 +45,7 @@
  */
 @RestController
 @RequestMapping(UtilsAndCommons.DEFAULT_NACOS_NAMING_CONTEXT_V2 + UtilsAndCommons.NACOS_NAMING_CATALOG_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class CatalogControllerV2 {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/ClientInfoControllerV2.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.api.model.v2.Result;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.core.remote.Connection;
 import com.alibaba.nacos.core.remote.ConnectionManager;
 import com.alibaba.nacos.core.remote.ConnectionMeta;
@@ -34,6 +35,7 @@
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.fasterxml.jackson.databind.node.ObjectNode;
@@ -58,6 +60,7 @@
 @NacosApi
 @RestController
 @RequestMapping(UtilsAndCommons.DEFAULT_NACOS_NAMING_CONTEXT_V2 + UtilsAndCommons.NACOS_NAMING_CLIENT_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class ClientInfoControllerV2 {
     
     private final ClientManager clientManager;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/HealthControllerV2.java
Patch:
@@ -21,9 +21,11 @@
 import com.alibaba.nacos.api.model.v2.Result;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.naming.core.HealthOperatorV2Impl;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.model.form.UpdateHealthForm;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.naming.web.CanDistro;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -39,6 +41,7 @@
 @NacosApi
 @RestController
 @RequestMapping(UtilsAndCommons.DEFAULT_NACOS_NAMING_CONTEXT_V2 + UtilsAndCommons.NACOS_NAMING_HEALTH_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class HealthControllerV2 {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/OperatorControllerV2.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.model.v2.ErrorCode;
 import com.alibaba.nacos.api.model.v2.Result;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.constants.ClientConstants;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
@@ -31,6 +32,7 @@
 import com.alibaba.nacos.naming.model.form.UpdateSwitchForm;
 import com.alibaba.nacos.naming.model.vo.MetricsInfoVo;
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.http.HttpStatus;
@@ -52,6 +54,7 @@
 @RestController
 @RequestMapping({UtilsAndCommons.DEFAULT_NACOS_NAMING_CONTEXT_V2 + UtilsAndCommons.NACOS_NAMING_OPERATOR_CONTEXT,
         UtilsAndCommons.DEFAULT_NACOS_NAMING_CONTEXT_V2 + "/ops"})
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class OperatorControllerV2 {
     
     private final SwitchManager switchManager;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/ServiceControllerV2.java
Patch:
@@ -31,11 +31,13 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
 import com.alibaba.nacos.naming.core.ServiceOperatorV2Impl;
 import com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.model.form.ServiceForm;
+import com.alibaba.nacos.naming.paramcheck.NamingDefaultHttpParamExtractor;
 import com.alibaba.nacos.naming.pojo.ServiceDetailInfo;
 import com.alibaba.nacos.naming.pojo.ServiceNameView;
 import com.alibaba.nacos.naming.selector.NoneSelector;
@@ -65,6 +67,7 @@
 @NacosApi
 @RestController
 @RequestMapping(UtilsAndCommons.DEFAULT_NACOS_NAMING_CONTEXT_V2 + UtilsAndCommons.NACOS_NAMING_SERVICE_CONTEXT)
+@ExtractorManager.Extractor(httpExtractor = NamingDefaultHttpParamExtractor.class)
 public class ServiceControllerV2 {
     
     private final ServiceOperatorV2Impl serviceOperatorV2;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/BatchInstanceRequestHandler.java
Patch:
@@ -23,6 +23,8 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.BatchInstanceRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
@@ -47,6 +49,7 @@ public BatchInstanceRequestHandler(EphemeralClientOperationServiceImpl clientOpe
     @Override
     @TpsControl(pointName = "RemoteNamingInstanceBatchRegister", name = "RemoteNamingInstanceBatchRegister")
     @Secured(action = ActionTypes.WRITE)
+    @ExtractorManager.Extractor(rpcExtractor = BatchInstanceRequestParamExtractor.class)
     public BatchInstanceResponse handle(BatchInstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service.newService(request.getNamespace(), request.getGroupName(), request.getServiceName(),
                 true);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -27,6 +27,8 @@
 import com.alibaba.nacos.common.trace.event.naming.DeregisterInstanceTraceEvent;
 import com.alibaba.nacos.common.trace.event.naming.RegisterInstanceTraceEvent;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.InstanceRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
@@ -51,6 +53,7 @@ public InstanceRequestHandler(EphemeralClientOperationServiceImpl clientOperatio
     @Override
     @TpsControl(pointName = "RemoteNamingInstanceRegisterDeregister", name = "RemoteNamingInstanceRegisterDeregister")
     @Secured(action = ActionTypes.WRITE)
+    @ExtractorManager.Extractor(rpcExtractor = InstanceRequestParamExtractor.class)
     public InstanceResponse handle(InstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service
                 .newService(request.getNamespace(), request.getGroupName(), request.getServiceName(), true);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -22,6 +22,8 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ServiceListRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
@@ -46,6 +48,7 @@ public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest
     @Override
     @TpsControl(pointName = "RemoteNamingServiceListQuery", name = "RemoteNamingServiceListQuery")
     @Secured(action = ActionTypes.READ)
+    @ExtractorManager.Extractor(rpcExtractor = ServiceListRequestParamExtractor.class)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());
         ServiceListResponse result = ServiceListResponse.buildSuccessResponse(0, new LinkedList<>());

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceQueryRequestHandler.java
Patch:
@@ -23,6 +23,8 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.ServiceQueryRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
@@ -52,6 +54,7 @@ public ServiceQueryRequestHandler(ServiceStorage serviceStorage, NamingMetadataM
     @Override
     @TpsControl(pointName = "RemoteNamingServiceQuery", name = "RemoteNamingServiceQuery")
     @Secured(action = ActionTypes.READ)
+    @ExtractorManager.Extractor(rpcExtractor = ServiceQueryRequestParamExtractor.class)
     public QueryServiceResponse handle(ServiceQueryRequest request, RequestMeta meta) throws NacosException {
         String namespaceId = request.getNamespace();
         String groupName = request.getGroupName();

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -28,6 +28,8 @@
 import com.alibaba.nacos.common.trace.event.naming.SubscribeServiceTraceEvent;
 import com.alibaba.nacos.common.trace.event.naming.UnsubscribeServiceTraceEvent;
 import com.alibaba.nacos.core.control.TpsControl;
+import com.alibaba.nacos.core.paramcheck.ExtractorManager;
+import com.alibaba.nacos.core.paramcheck.impl.SubscribeServiceRequestParamExtractor;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
@@ -63,6 +65,7 @@ public SubscribeServiceRequestHandler(ServiceStorage serviceStorage, NamingMetad
     @Override
     @TpsControl(pointName = "RemoteNamingServiceSubscribeUnSubscribe", name = "RemoteNamingServiceSubscribeUnsubscribe")
     @Secured(action = ActionTypes.READ)
+    @ExtractorManager.Extractor(rpcExtractor = SubscribeServiceRequestParamExtractor.class)
     public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestMeta meta) throws NacosException {
         String namespaceId = request.getNamespace();
         String serviceName = request.getServiceName();

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ConfigDynamicMeterRefreshService.java
Patch:
@@ -59,6 +59,6 @@ public void refreshTopnConfigChangeCount() {
      */
     @Scheduled(cron = "0 0 0 ? * 1")
     public void resetTopnConfigChangeCount() {
-        MetricsMonitor.getConfigChangeCount().removeAll();
+        MetricsMonitor.getConfigChangeCount().reset();
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/MetricsMonitor.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.config.server.monitor;
 
-import com.alibaba.nacos.common.utils.TopnCounterMetricsContainer;
 import com.alibaba.nacos.core.monitor.NacosMeterRegistryCenter;
+import com.alibaba.nacos.core.monitor.topn.StringTopNCounter;
 import io.micrometer.core.instrument.Counter;
 import io.micrometer.core.instrument.ImmutableTag;
 import io.micrometer.core.instrument.Tag;
@@ -73,7 +73,7 @@ public class MetricsMonitor {
     /**
      * config change count.
      */
-    private static TopnCounterMetricsContainer configChangeCount = new TopnCounterMetricsContainer();
+    private static StringTopNCounter configChangeCount = new StringTopNCounter();
     
     static {
         ImmutableTag immutableTag = new ImmutableTag("module", "config");
@@ -166,7 +166,7 @@ public static AtomicInteger getConfigSubscriberMonitor(String version) {
         return configSubscriber.get(version);
     }
     
-    public static TopnCounterMetricsContainer getConfigChangeCount() {
+    public static StringTopNCounter getConfigChangeCount() {
         return configChangeCount;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/NamingDynamicMeterRefreshService.java
Patch:
@@ -50,16 +50,16 @@ public void refreshTopnServiceChangeCount() {
         for (Pair<String, AtomicInteger> serviceChangeCount : topnServiceChangeCount) {
             List<Tag> tags = new ArrayList<>();
             tags.add(new ImmutableTag("service", serviceChangeCount.getFirst()));
-            NacosMeterRegistryCenter.gauge(TOPN_SERVICE_CHANGE_REGISTRY, "service_change_count", tags, serviceChangeCount.getSecond());
+            NacosMeterRegistryCenter
+                    .gauge(TOPN_SERVICE_CHANGE_REGISTRY, "service_change_count", tags, serviceChangeCount.getSecond());
         }
-        MetricsMonitor.getServiceChangeCount().removeAll();
     }
     
     /**
      * reset service change count to 0 every week.
      */
     @Scheduled(cron = "0 0 0 ? * 1")
     public void resetTopnServiceChangeCount() {
-        MetricsMonitor.getServiceChangeCount().removeAll();
+        MetricsMonitor.getServiceChangeCount().reset();
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/NamingSubscriberServiceV2Impl.java
Patch:
@@ -118,7 +118,7 @@ public void onEvent(Event event) {
             ServiceEvent.ServiceChangedEvent serviceChangedEvent = (ServiceEvent.ServiceChangedEvent) event;
             Service service = serviceChangedEvent.getService();
             delayTaskEngine.addTask(service, new PushDelayTask(service, PushConfig.getInstance().getPushTaskDelay()));
-            MetricsMonitor.incrementServiceChangeCount(service.getNamespace(), service.getGroup(), service.getName());
+            MetricsMonitor.incrementServiceChangeCount(service);
         } else if (event instanceof ServiceEvent.ServiceSubscribedEvent) {
             // If service is subscribed by one client, only push this client.
             ServiceEvent.ServiceSubscribedEvent subscribedEvent = (ServiceEvent.ServiceSubscribedEvent) event;

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/connection/response/ConnectionCheckCode.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.plugin.control.connection.response;
 
 /**
- * conection check code.
+ * connection check code.
  *
  * @author shiyiyue
  */

File: naming/src/test/java/com/alibaba/nacos/naming/remote/udp/UdpConnectorTest.java
Patch:
@@ -91,7 +91,7 @@ public void tearDown() throws InterruptedException {
     
     @Test
     public void testContainAck() {
-        when(ackMap.containsKey(Mockito.anyString())).thenReturn(true);
+        when(ackMap.containsKey("1111")).thenReturn(true);
         Assert.assertTrue(udpConnector.containAck("1111"));
     }
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigHttpClientManager.java
Patch:
@@ -128,7 +128,7 @@ private static class LimiterHttpClientRequestInterceptor implements HttpClientRe
         
         @Override
         public boolean isIntercept(URI uri, String httpMethod, RequestHttpEntity requestHttpEntity) {
-            final String body = requestHttpEntity.getBody() == null ? "" : JacksonUtils.toJson(requestHttpEntity.getBody());
+            final String body = requestHttpEntity.isEmptyBody() ? "" : JacksonUtils.toJson(requestHttpEntity.getBody());
             return Limiter.isLimit(MD5Utils.md5Hex(uri + body, Constants.ENCODE));
         }
         

File: common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java
Patch:
@@ -42,7 +42,7 @@ public RequestHttpEntity(Header header, Query query) {
     }
     
     public RequestHttpEntity(Header header, Object body) {
-        this(null, header, null, body);
+        this(null, header, body);
     }
     
     public RequestHttpEntity(Header header, Query query, Object body) {

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -113,15 +113,13 @@ public static Map<String, EventPublisher> getPublisherMap() {
         return INSTANCE.publisherMap;
     }
     
-    @JustForTest
     public static EventPublisher getPublisher(Class<? extends Event> topic) {
         if (ClassUtils.isAssignableFrom(SlowEvent.class, topic)) {
             return INSTANCE.sharePublisher;
         }
         return INSTANCE.publisherMap.get(topic.getCanonicalName());
     }
     
-    @JustForTest
     public static EventPublisher getSharePublisher() {
         return INSTANCE.sharePublisher;
     }

File: common/src/main/java/com/alibaba/nacos/common/packagescan/DefaultPackageScan.java
Patch:
@@ -95,10 +95,8 @@ public <T> Set<Class<T>> getTypesAnnotatedWith(String pkg, Class<? extends Annot
                     set.add((Class<T>) scanClass);
                 }
             }
-        } catch (IOException e) {
+        } catch (IOException | ClassNotFoundException e) {
             LOGGER.error("scan path: {} failed", packageSearchPath, e);
-        } catch (ClassNotFoundException e) {
-            e.printStackTrace();
         }
         return set;
     }

File: common/src/main/java/com/alibaba/nacos/common/paramcheck/DefaultParamChecker.java
Patch:
@@ -208,7 +208,7 @@ public ParamCheckResponse checkDataIdFormat(String dataId) {
         if (dataId.length() > paramCheckRule.maxDataIdLength) {
             paramCheckResponse.setSuccess(false);
             paramCheckResponse.setMessage(String.format("Param 'dataId' is illegal, the param length should not exceed %d.",
-                    paramCheckRule.maxNamespaceIdLength));
+                    paramCheckRule.maxDataIdLength));
             return paramCheckResponse;
         }
         if (!dataIdPattern.matcher(dataId).matches()) {
@@ -369,13 +369,13 @@ public ParamCheckResponse checkPortFormat(String port) {
             portInt = Integer.parseInt(port);
         } catch (Exception e) {
             paramCheckResponse.setSuccess(false);
-            paramCheckResponse.setMessage(String.format("Param 'port' is illegal, the value should be between %d and %d",
+            paramCheckResponse.setMessage(String.format("Param 'port' is illegal, the value should be between %d and %d.",
                     paramCheckRule.minPort, paramCheckRule.maxPort));
             return paramCheckResponse;
         }
         if (portInt > paramCheckRule.maxPort || portInt < paramCheckRule.minPort) {
             paramCheckResponse.setSuccess(false);
-            paramCheckResponse.setMessage(String.format("Param 'port' is illegal, the value should be between %d and %d",
+            paramCheckResponse.setMessage(String.format("Param 'port' is illegal, the value should be between %d and %d.",
                     paramCheckRule.minPort, paramCheckRule.maxPort));
             return paramCheckResponse;
         }

File: common/src/main/java/com/alibaba/nacos/common/pathencoder/impl/WindowsEncoder.java
Patch:
@@ -88,7 +88,7 @@ public String name() {
     @Override
     public boolean needEncode(String key) {
         if (key == null) {
-            key = "";
+            return false;
         }
         return !PATTERN.matcher(key).matches();
     }

File: common/src/main/java/com/alibaba/nacos/common/task/engine/TaskExecuteWorker.java
Patch:
@@ -91,7 +91,7 @@ public int pendingTaskCount() {
      * Worker status.
      */
     public String status() {
-        return name + ", pending tasks: " + pendingTaskCount();
+        return getName() + ", pending tasks: " + pendingTaskCount();
     }
     
     @Override

File: common/src/test/java/com/alibaba/nacos/common/pathencoder/WindowsEncoderTest.java
Patch:
@@ -108,6 +108,7 @@ public void testNeedEncode() {
         String case7 = "asdas<da";
         String case8 = "sdasas>a";
         String case9 = "das1|2e";
+        Assert.assertFalse(windowsEncoder.needEncode(null));
         Assert.assertFalse(windowsEncoder.needEncode(case1));
         Assert.assertTrue(windowsEncoder.needEncode(case2));
         Assert.assertTrue(windowsEncoder.needEncode(case3));

File: core/src/test/java/com/alibaba/nacos/core/remote/grpc/RemoteParamCheckFilterTest.java
Patch:
@@ -74,7 +74,7 @@ public void filter() {
         } catch (Exception e) {
             e.printStackTrace();
         }
-        assertEquals(response.getMessage(), "Param check invalid:Param 'port' is illegal, the value should be between 0 and 65535");
+        assertEquals(response.getMessage(), "Param check invalid:Param 'port' is illegal, the value should be between 0 and 65535.");
         
         BatchInstanceRequest batchInstanceRequest = new BatchInstanceRequest();
         batchInstanceRequest.setServiceName("test@@@@");

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -96,6 +96,7 @@ public void batchRegisterInstance(Service service, List<Instance> instances, Str
         batchInstancePublishInfo.setInstancePublishInfos(resultList);
         client.addServiceInstance(singleton, batchInstancePublishInfo);
         client.setLastUpdatedTime();
+        client.recalculateRevision();
         NotifyCenter.publishEvent(new ClientOperationEvent.ClientRegisterServiceEvent(singleton, clientId));
         NotifyCenter.publishEvent(
                 new MetadataEvent.InstanceMetadataEvent(singleton, batchInstancePublishInfo.getMetadataId(), false));

File: api/src/main/java/com/alibaba/nacos/api/ability/ClientAbilities.java
Patch:
@@ -28,6 +28,7 @@
  * @author liuzunfei
  * @version $Id: ClientAbilities.java, v 0.1 2021年01月24日 00:09 AM liuzunfei Exp $
  */
+@Deprecated
 public class ClientAbilities implements Serializable {
     
     private static final long serialVersionUID = -3590789441404549261L;

File: api/src/main/java/com/alibaba/nacos/api/ability/ServerAbilities.java
Patch:
@@ -29,6 +29,7 @@
  * @author liuzunfei
  * @version $Id: ServerAbilities.java, v 0.1 2021年01月24日 00:09 AM liuzunfei Exp $
  */
+@Deprecated
 public class ServerAbilities implements Serializable {
     
     private static final long serialVersionUID = -2120543002911304171L;

File: api/src/main/java/com/alibaba/nacos/api/ability/initializer/AbilityInitializer.java
Patch:
@@ -21,6 +21,7 @@
  *
  * @author xiweng.yy
  */
+@Deprecated
 public interface AbilityInitializer<A> {
     
     /**

File: api/src/test/java/com/alibaba/nacos/api/remote/request/ConnectionSetupRequestTest.java
Patch:
@@ -16,19 +16,19 @@
 
 package com.alibaba.nacos.api.remote.request;
 
-import com.alibaba.nacos.api.ability.ClientAbilities;
 import org.junit.Assert;
 import org.junit.Test;
 
 import java.util.Collections;
+import java.util.HashMap;
 
 public class ConnectionSetupRequestTest extends BasicRequestTest {
     
     @Test
     public void testSerialize() throws Exception {
         ConnectionSetupRequest request = new ConnectionSetupRequest();
         request.setClientVersion("2.2.2");
-        request.setAbilities(new ClientAbilities());
+        request.setAbilityTable(new HashMap<>());
         request.setTenant("testNamespaceId");
         request.setLabels(Collections.singletonMap("labelKey", "labelValue"));
         request.setRequestId("1");
@@ -37,7 +37,7 @@ public void testSerialize() throws Exception {
         Assert.assertTrue(json.contains("\"clientVersion\":\"2.2.2\""));
         Assert.assertTrue(json.contains("\"tenant\":\"testNamespaceId\""));
         Assert.assertTrue(json.contains("\"labels\":{\"labelKey\":\"labelValue\"}"));
-        Assert.assertTrue(json.contains("\"abilities\":{"));
+        Assert.assertTrue(json.contains("\"abilityTable\":{"));
         Assert.assertTrue(json.contains("\"module\":\"internal\""));
         Assert.assertTrue(json.contains("\"requestId\":\"1\""));
     }

File: api/src/test/java/com/alibaba/nacos/api/remote/response/ServerCheckResponseTest.java
Patch:
@@ -38,7 +38,7 @@ public void setUp() throws Exception {
     
     @Test
     public void testSerialization() throws JsonProcessingException {
-        ServerCheckResponse response = new ServerCheckResponse("35643245_1.1.1.1_3306");
+        ServerCheckResponse response = new ServerCheckResponse("35643245_1.1.1.1_3306", false);
         String actual = mapper.writeValueAsString(response);
         assertTrue(actual.contains("\"connectionId\":\"35643245_1.1.1.1_3306\""));
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -23,10 +23,10 @@
 import com.alibaba.nacos.plugin.auth.api.RequestResource;
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.security.SecurityProxy;
-import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.client.utils.ParamUtil;
 
 import java.util.HashMap;
 import java.util.Map;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.client.utils.ContextPathUtil;
 import com.alibaba.nacos.client.utils.EnvUtil;
 import com.alibaba.nacos.client.utils.LogUtils;
-import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
@@ -48,6 +47,7 @@
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.ScheduledThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
+import com.alibaba.nacos.client.utils.ParamUtil;
 
 import static com.alibaba.nacos.common.constant.RequestUrlConstants.HTTPS_PREFIX;
 import static com.alibaba.nacos.common.constant.RequestUrlConstants.HTTP_PREFIX;

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushRequestHandler.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
+import com.alibaba.nacos.common.remote.client.Connection;
 import com.alibaba.nacos.common.remote.client.ServerRequestHandler;
 
 /**
@@ -37,7 +38,7 @@ public NamingPushRequestHandler(ServiceInfoHolder serviceInfoHolder) {
     }
     
     @Override
-    public Response requestReply(Request request) {
+    public Response requestReply(Request request, Connection connection) {
         if (request instanceof NotifySubscriberRequest) {
             NotifySubscriberRequest notifyRequest = (NotifySubscriberRequest) request;
             serviceInfoHolder.processServiceInfo(notifyRequest.getServiceInfo());

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/redo/NamingGrpcRedoService.java
Patch:
@@ -28,6 +28,7 @@
 import com.alibaba.nacos.client.naming.remote.gprc.redo.data.SubscriberRedoData;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.executor.NameThreadFactory;
+import com.alibaba.nacos.common.remote.client.Connection;
 import com.alibaba.nacos.common.remote.client.ConnectionEventListener;
 
 import java.util.HashSet;
@@ -84,13 +85,13 @@ public boolean isConnected() {
     }
     
     @Override
-    public void onConnected() {
+    public void onConnected(Connection connection) {
         connected = true;
         LogUtils.NAMING_LOGGER.info("Grpc connection connect");
     }
     
     @Override
-    public void onDisConnect() {
+    public void onDisConnect(Connection connection) {
         connected = false;
         LogUtils.NAMING_LOGGER.warn("Grpc connection disconnect, mark to redo");
         synchronized (registeredInstances) {

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushRequestHandlerTest.java
Patch:
@@ -24,6 +24,8 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
+import com.alibaba.nacos.client.naming.remote.TestConnection;
+import com.alibaba.nacos.common.remote.client.RpcClient;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -41,7 +43,7 @@ public void testRequestReply() {
         ServiceInfo info = new ServiceInfo("name", "cluster1");
         Request req = NotifySubscriberRequest.buildNotifySubscriberRequest(info);
         //when
-        Response response = handler.requestReply(req);
+        Response response = handler.requestReply(req, new TestConnection(new RpcClient.ServerInfo()));
         //then
         Assert.assertTrue(response instanceof NotifySubscriberResponse);
         verify(holder, times(1)).processServiceInfo(info);

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerRequestHandler.java
Patch:
@@ -31,8 +31,9 @@ public interface ServerRequestHandler {
      * Handle request from server.
      *
      * @param request request
+     * @param connection current connection, it can be used to know server ability
      * @return response.
      */
-    Response requestReply(Request request);
+    Response requestReply(Request request, Connection connection);
     
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConstants.java
Patch:
@@ -79,6 +79,9 @@ public class GrpcConstants {
     @GRpcConfigLabel
     public static final String GRPC_CHANNEL_KEEP_ALIVE_TIMEOUT = NACOS_CLIENT_GRPC + ".channel.keep.alive.timeout";
 
+    @GRpcConfigLabel
+    public static final String GRPC_CHANNEL_CAPABILITY_NEGOTIATION_TIMEOUT = NACOS_CLIENT_GRPC + ".channel.capability.negotiation.timeout";
+
     private static final Set<String> CONFIG_NAMES = new HashSet<>();
     
     @Documented

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java
Patch:
@@ -642,7 +642,7 @@ public String getModule() {
                 return null;
             }
         };
-        rpcClient.serverRequestHandlers.add(req -> {
+        rpcClient.serverRequestHandlers.add((req, conn) -> {
             throw new RuntimeException();
         });
         rpcClient.handleServerRequest(request);

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -275,6 +275,7 @@ public boolean loadSingle(String connectionId, String redirectAddress) {
                     String[] split = redirectAddress.split(Constants.COLON);
                     connectResetRequest.setServerIp(split[0]);
                     connectResetRequest.setServerPort(split[1]);
+                    connectResetRequest.setConnectionId(connectionId);
                 }
                 try {
                     connection.request(connectResetRequest, 3000L);

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java
Patch:
@@ -86,10 +86,10 @@ public void request(Payload grpcRequest, StreamObserver<Payload> responseObserve
             responseObserver.onCompleted();
             return;
         }
-        
+
         // server check.
         if (ServerCheckRequest.class.getSimpleName().equals(type)) {
-            Payload serverCheckResponseP = GrpcUtils.convert(new ServerCheckResponse(GrpcServerConstants.CONTEXT_KEY_CONN_ID.get()));
+            Payload serverCheckResponseP = GrpcUtils.convert(new ServerCheckResponse(GrpcServerConstants.CONTEXT_KEY_CONN_ID.get(), true));
             traceIfNecessary(serverCheckResponseP, false);
             responseObserver.onNext(serverCheckResponseP);
             responseObserver.onCompleted();
@@ -165,6 +165,7 @@ public void request(Payload grpcRequest, StreamObserver<Payload> responseObserve
             requestMeta.setConnectionId(GrpcServerConstants.CONTEXT_KEY_CONN_ID.get());
             requestMeta.setClientVersion(connection.getMetaInfo().getVersion());
             requestMeta.setLabels(connection.getMetaInfo().getLabels());
+            requestMeta.setAbilityTable(connection.getAbilityTable());
             connectionManager.refreshActiveTime(requestMeta.getConnectionId());
             Response response = requestHandler.handleRequest(request, requestMeta);
             Payload payloadResponse = GrpcUtils.convert(response);

File: core/src/test/java/com/alibaba/nacos/core/cluster/MemberUtilTest.java
Patch:
@@ -243,7 +243,7 @@ public void testIsBasicInfoChangedForChangedBasicExtendInfo() {
     @Test
     public void testIsBasicInfoChangedForChangedAbilities() {
         Member newMember = buildMember();
-        newMember.getAbilities().getRemoteAbility().setSupportRemoteConnection(true);
+        newMember.setGrpcReportEnabled(true);
         assertTrue(MemberUtil.isBasicInfoChanged(newMember, originalMember));
     }
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -518,8 +518,9 @@ public Response requestReply(Request request, Connection connection) {
                 SetupAckRequest setupAckRequest = (SetupAckRequest) request;
                 // remove and count down
                 recAbilityContext.release(setupAckRequest.getAbilityTable());
+                return new SetupAckResponse();
             }
-            return new SetupAckResponse();
+            return null;
         }
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateService.java
Patch:
@@ -191,6 +191,8 @@ public void run() {
                 if (serviceObj == null) {
                     serviceObj = namingClientProxy.queryInstancesOfService(serviceName, groupName, clusters, false);
                     serviceInfoHolder.processServiceInfo(serviceObj);
+                    // TODO multiple time can be configured.
+                    delayTime = serviceObj.getCacheMillis() * DEFAULT_UPDATE_CACHE_TIME_MULTIPLE;
                     lastRefTime = serviceObj.getLastRefTime();
                     return;
                 }

File: api/src/main/java/com/alibaba/nacos/api/ability/initializer/AbilityInitializer.java
Patch:
@@ -21,6 +21,7 @@
  *
  * @author xiweng.yy
  */
+@Deprecated
 public interface AbilityInitializer<A> {
     
     /**

File: api/src/main/java/com/alibaba/nacos/api/ability/register/impl/ServerAbilities.java
Patch:
@@ -21,9 +21,10 @@
 
 import java.util.Map;
 
-/**.
+/**
+ * It is used to register server abilities.
+ *
  * @author Daydreamer
- * @description It is used to register server abilities.
  * @date 2022/8/31 12:32
  **/
 public class ServerAbilities extends AbstractAbilityRegistry {

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -138,7 +138,7 @@
     String SERVER_ADDR_PLACEHOLDER = "${" + PREFIX + SERVER_ADDR + ":}";
     
     /**
-     * The placeholder of endpoint, the value is ${nacos.context-path:}".
+     * The placeholder of endpoint, the value is ${nacos.context-path:}.
      */
     String CONTEXT_PATH_PLACEHOLDER = "${" + PREFIX + CONTEXT_PATH + ":}";
     

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/Label.java
Patch:
@@ -19,7 +19,7 @@
 import java.util.Set;
 
 /**
- * CMDB lable.
+ * CMDB label.
  *
  * @author nkorange
  * @since 0.7.0

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/PreservedEntityTypes.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.api.cmdb.pojo;
 
 /**
- * CMDB preserverd entity type.
+ * CMDB preserved entity type.
  *
  * @author nkorange
  * @since 0.7.0

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -181,7 +181,7 @@ public String toString() {
     public static final int RESOURCE_NOT_FOUND = -404;
     
     /**
-     * http client error code, ome exceptions that occurred when the use the Nacos RestTemplate and Nacos
+     * http client error code, ome exceptions that occurred when there use the Nacos RestTemplate and Nacos
      * AsyncRestTemplate.
      */
     public static final int HTTP_CLIENT_ERROR_CODE = -500;

File: api/src/main/java/com/alibaba/nacos/api/grpc/auto/Metadata.java
Patch:
@@ -260,7 +260,7 @@ public String getHeadersOrDefault(
     if (key == null) { throw new NullPointerException(); }
     java.util.Map<String, String> map =
         internalGetHeaders().getMap();
-    return map.containsKey(key) ? map.get(key) : defaultValue;
+    return map.getOrDefault(key, defaultValue);
   }
   /**
    * <code>map&lt;string, string&gt; headers = 7;</code>
@@ -797,7 +797,7 @@ public Builder setClientIpBytes(
     }
     private com.google.protobuf.MapField<String, String>
     internalGetMutableHeaders() {
-      onChanged();;
+      onChanged();
       if (headers_ == null) {
         headers_ = com.google.protobuf.MapField.newMapField(
             HeadersDefaultEntryHolder.defaultEntry);

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingResponseCode.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Business response code of naming module
  *
- * <p>Every code stays between 20001 to 29999.
+ * <p>Every code stays between 20001 and 29999.
  *
  * @author nkorange
  * @author 1.2.0

File: api/src/main/java/com/alibaba/nacos/api/selector/Selector.java
Patch:
@@ -64,7 +64,7 @@ public interface Selector<R, C, E> extends Serializable {
     String getType();
     
     /**
-     * Get the select context which usede by {@link #select(Object)}.
+     * Get the select context which used by {@link #select(Object)}.
      *
      * @return selector context type.
      */

File: auth/src/main/java/com/alibaba/nacos/auth/parser/grpc/NamingGrpcResourceParser.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListChangeEvent.java
Patch:
@@ -23,5 +23,5 @@
  *
  * @author zongtanghu
  */
-public class ServerlistChangeEvent extends SlowEvent {
+public class ServerListChangeEvent extends SlowEvent {
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxy.java
Patch:
@@ -91,13 +91,12 @@ public interface NamingClientProxy extends Closeable {
      * @param serviceName service name
      * @param groupName   group name
      * @param clusters    clusters
-     * @param udpPort     udp port
      * @param healthyOnly healthy only
      * @return service info
      * @throws NacosException nacos exception
      */
-    ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
-            boolean healthyOnly) throws NacosException;
+    ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, boolean healthyOnly)
+            throws NacosException;
     
     /**
      * Query Service.

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -127,7 +127,7 @@ public void updateInstance(String serviceName, String groupName, Instance instan
         }
         
         @Override
-        public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
+        public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters,
                 boolean healthyOnly) throws NacosException {
             return null;
         }

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/JdkHttpClientRequest.java
Patch:
@@ -96,7 +96,7 @@ public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity
         conn.setRequestMethod(httpMethod);
         if (body != null && !"".equals(body)) {
             String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
-            String bodyStr = JacksonUtils.toJson(body);
+            String bodyStr = body instanceof String ? (String) body : JacksonUtils.toJson(body);
             if (MediaType.APPLICATION_FORM_URLENCODED.equals(contentType)) {
                 Map<String, String> map = JacksonUtils.toObj(bodyStr, HashMap.class);
                 bodyStr = HttpUtils.encodingParams(map, headers.getCharset());

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/SmartSubscriber.java
Patch:
@@ -27,7 +27,7 @@
  * @author zongtanghu
  */
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
-public abstract class SmartSubscriber extends Subscriber {
+public abstract class SmartSubscriber extends Subscriber<Event> {
     
     /**
      * Returns which event type are smart subscriber interested in.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientTlsConfig.java
Patch:
@@ -49,7 +49,7 @@ public static RpcClientTlsConfig properties(Properties properties) {
         }
 
         if (properties.containsKey(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS)) {
-            tlsConfig.setProtocols(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS);
+            tlsConfig.setProtocols(properties.getProperty(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS));
         }
 
         if (properties.containsKey(RpcConstants.RPC_CLIENT_TLS_CIPHERS)) {

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConstants.java
Patch:
@@ -79,6 +79,9 @@ public class GrpcConstants {
     @GRpcConfigLabel
     public static final String GRPC_CHANNEL_KEEP_ALIVE_TIMEOUT = NACOS_CLIENT_GRPC + ".channel.keep.alive.timeout";
 
+    @GRpcConfigLabel
+    public static final String GRPC_CHANNEL_CAPABILITY_NEGOTIATION_TIMEOUT = NACOS_CLIENT_GRPC + ".channel.capability.negotiation.timeout";
+
     private static final Set<String> CONFIG_NAMES = new HashSet<>();
     
     @Documented

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/DeregisterInstanceTraceEvent.java
Patch:
@@ -20,6 +20,7 @@
 
 /**
  * Naming deregister instance trace event.
+ *
  * @author yanda
  */
 public class DeregisterInstanceTraceEvent extends NamingTraceEvent {
@@ -30,9 +31,9 @@ public class DeregisterInstanceTraceEvent extends NamingTraceEvent {
     
     private final boolean rpc;
     
-    private String instanceIp;
+    private final String instanceIp;
     
-    private int instancePort;
+    private final int instancePort;
     
     public final DeregisterInstanceReason reason;
     

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/DeregisterServiceTraceEvent.java
Patch:
@@ -18,14 +18,15 @@
 
 /**
  * Naming deregister service trace event.
+ *
  * @author yanda
  */
 public class DeregisterServiceTraceEvent extends NamingTraceEvent {
     
     private static final long serialVersionUID = 7358195336881398548L;
     
-    public DeregisterServiceTraceEvent(long eventTime, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public DeregisterServiceTraceEvent(long eventTime, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("DEREGISTER_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/NamingTraceEvent.java
Patch:
@@ -24,11 +24,11 @@
  * @author yanda
  */
 public class NamingTraceEvent extends TraceEvent {
-
+    
     private static final long serialVersionUID = 2923077640400851816L;
     
-    public NamingTraceEvent(String eventType, long eventTime,
-            String serviceNamespace, String serviceGroup, String name) {
+    public NamingTraceEvent(String eventType, long eventTime, String serviceNamespace, String serviceGroup,
+            String name) {
         super(eventType, eventTime, serviceNamespace, serviceGroup, name);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/PushServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming push service trace event.
+ *
  * @author yanda
  */
 public class PushServiceTraceEvent extends NamingTraceEvent {
@@ -55,8 +56,8 @@ public long getServiceLevelAgreementTime() {
     }
     
     public PushServiceTraceEvent(long eventTime, long pushCostTimeForNetWork, long pushCostTimeForAll,
-            long serviceLevelAgreementTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName, int instanceSize) {
+            long serviceLevelAgreementTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName, int instanceSize) {
         super("PUSH_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
         this.instanceSize = instanceSize;

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/RegisterInstanceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming register instance trace event.
+ *
  * @author yanda
  */
 public class RegisterInstanceTraceEvent extends NamingTraceEvent {
@@ -28,9 +29,9 @@ public class RegisterInstanceTraceEvent extends NamingTraceEvent {
     
     private final boolean rpc;
     
-    private String instanceIp;
+    private final String instanceIp;
     
-    private int instancePort;
+    private final int instancePort;
     
     public String getClientIp() {
         return clientIp;

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/RegisterServiceTraceEvent.java
Patch:
@@ -18,14 +18,14 @@
 
 /**
  * Naming deregister service trace event.
+ *
  * @author yanda
  */
 public class RegisterServiceTraceEvent extends NamingTraceEvent {
     
     private static final long serialVersionUID = -8568231862586636388L;
     
-    public RegisterServiceTraceEvent(long eventTime, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public RegisterServiceTraceEvent(long eventTime, String serviceNamespace, String serviceGroup, String serviceName) {
         super("REGISTER_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/SubscribeServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming subscribe service trace event.
+ *
  * @author yanda
  */
 public class SubscribeServiceTraceEvent extends NamingTraceEvent {
@@ -30,8 +31,8 @@ public String getClientIp() {
         return clientIp;
     }
     
-    public SubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public SubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("SUBSCRIBE_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
     }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/UnsubscribeServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming unsubscribe service trace event.
+ *
  * @author yanda
  */
 public class UnsubscribeServiceTraceEvent extends NamingTraceEvent {
@@ -30,8 +31,8 @@ public String getClientIp() {
         return clientIp;
     }
     
-    public UnsubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public UnsubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("UNSUBSCRIBE_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -299,8 +299,9 @@ public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse resp
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
     public RestResult<Boolean> deleteConfigs(HttpServletRequest request, @RequestParam(value = "ids") List<Long> ids) {
         String clientIp = RequestUtil.getRemoteIp(request);
+        String srcUser = RequestUtil.getSrcUserName(request);
         final Timestamp time = TimeUtils.getCurrentTime();
-        List<ConfigInfo> configInfoList = configInfoPersistService.removeConfigInfoByIds(ids, clientIp, null);
+        List<ConfigInfo> configInfoList = configInfoPersistService.removeConfigInfoByIds(ids, clientIp, srcUser);
         if (CollectionUtils.isEmpty(configInfoList)) {
             return RestResultUtils.success(true);
         }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeListenContext.java
Patch:
@@ -143,6 +143,9 @@ public synchronized void clearContextForConnectionId(final String connectionId)
             Set<String> connectionIds = groupKeyContext.get(groupKey.getKey());
             if (CollectionUtils.isNotEmpty(connectionIds)) {
                 connectionIds.remove(connectionId);
+                if (connectionIds.isEmpty()) {
+                    groupKeyContext.remove(groupKey.getKey());
+                }
             } else {
                 groupKeyContext.remove(groupKey.getKey());
             }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifier.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.config.server.configuration.ConfigCommonConfig;
 import com.alibaba.nacos.config.server.model.event.LocalDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.GroupKey;
@@ -113,7 +114,8 @@ public void configDataChanged(String groupKey, String dataId, String group, Stri
             
             ConfigChangeNotifyRequest notifyRequest = ConfigChangeNotifyRequest.build(dataId, group, tenant);
             
-            RpcPushTask rpcPushRetryTask = new RpcPushTask(notifyRequest, 50, client, clientIp, metaInfo.getAppName());
+            RpcPushTask rpcPushRetryTask = new RpcPushTask(notifyRequest,
+                    ConfigCommonConfig.getInstance().getMaxPushRetryTimes(), client, clientIp, metaInfo.getAppName());
             push(rpcPushRetryTask);
             notifyClientCount++;
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -67,7 +67,7 @@ public static boolean isAggrDataId(String dataId) {
      */
     public static void load(String content) {
         if (StringUtils.isBlank(content)) {
-            FATAL_LOG.error("aggr dataId whitelist is blank.");
+            FATAL_LOG.warn("aggr dataId whitelist is blank.");
             return;
         }
         DEFAULT_LOG.warn("[aggr-dataIds] {}", content);

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -39,7 +39,6 @@
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -345,7 +344,6 @@ class DataChangeTask implements Runnable {
         @Override
         public void run() {
             try {
-                ConfigCacheService.getContentBetaMd5(groupKey);
                 for (Iterator<ClientLongPolling> iter = allSubs.iterator(); iter.hasNext(); ) {
                     ClientLongPolling clientSub = iter.next();
                     if (clientSub.clientMd5Map.containsKey(groupKey)) {
@@ -366,7 +364,7 @@ public void run() {
                                         RequestUtil
                                                 .getRemoteIp((HttpServletRequest) clientSub.asyncContext.getRequest()),
                                         "polling", clientSub.clientMd5Map.size(), clientSub.probeRequestSize, groupKey);
-                        clientSub.sendResponse(Arrays.asList(groupKey));
+                        clientSub.sendResponse(Collections.singletonList(groupKey));
                     }
                 }
                 

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -37,7 +37,7 @@
 @Service
 public class SwitchService {
     
-    public static final String SWITCH_META_DATAID = "com.alibaba.nacos.meta.switch";
+    public static final String SWITCH_META_DATA_ID = "com.alibaba.nacos.meta.switch";
     
     public static final String FIXED_POLLING = "isFixedPolling";
     
@@ -85,7 +85,7 @@ public static String getSwitchString(String key, String defaultValue) {
      */
     public static void load(String config) {
         if (StringUtils.isBlank(config)) {
-            FATAL_LOG.error("switch config is blank.");
+            FATAL_LOG.warn("switch config is blank.");
             return;
         }
         FATAL_LOG.warn("[switch-config] {}", config);
@@ -96,7 +96,7 @@ public static void load(String config) {
                 if (!StringUtils.isBlank(line) && !line.startsWith("#")) {
                     String[] array = line.split("=");
                     
-                    if (array == null || array.length != 2) {
+                    if (array.length != 2) {
                         LogUtil.FATAL_LOG.error("corrupt switch record {}", line);
                         continue;
                     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -43,6 +43,7 @@
 import java.sql.SQLException;
 import java.sql.Timestamp;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import static com.alibaba.nacos.config.server.utils.LogUtil.FATAL_LOG;
@@ -99,7 +100,7 @@ public GroupCapacity getGroupCapacity(String groupId) {
                 TableConstant.GROUP_CAPACITY);
         String sql = groupCapacityMapper.select(
                 Arrays.asList("id", "quota", "`usage`", "`max_size`", "max_aggr_count", "max_aggr_size", "group_id"),
-                Arrays.asList("group_id"));
+                Collections.singletonList("group_id"));
         List<GroupCapacity> list = jdbcTemplate.query(sql, new Object[] {groupId}, GROUP_CAPACITY_ROW_MAPPER);
         if (list.isEmpty()) {
             return null;
@@ -374,7 +375,7 @@ public boolean deleteGroupCapacity(final String group) {
                     TableConstant.GROUP_CAPACITY);
             PreparedStatementCreator preparedStatementCreator = connection -> {
                 PreparedStatement ps = connection.prepareStatement(
-                        groupCapacityMapper.delete(Arrays.asList("group_id")));
+                        groupCapacityMapper.delete(Collections.singletonList("group_id")));
                 ps.setString(1, group);
                 return ps;
             };

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java
Patch:
@@ -102,7 +102,7 @@ public static boolean configDump(ConfigDumpEvent event) {
             ClientIpWhiteList.load(content);
         }
         
-        if (dataId.equals(SwitchService.SWITCH_META_DATAID)) {
+        if (dataId.equals(SwitchService.SWITCH_META_DATA_ID)) {
             SwitchService.load(content);
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -64,7 +64,7 @@ public boolean process(NacosTask task) {
                         ClientIpWhiteList.load(cf.getContent());
                     }
                     
-                    if (cf.getDataId().equals(SwitchService.SWITCH_META_DATAID)) {
+                    if (cf.getDataId().equals(SwitchService.SWITCH_META_DATA_ID)) {
                         SwitchService.load(cf.getContent());
                     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoAggrPersistServiceImpl.java
Patch:
@@ -342,7 +342,7 @@ public Page<ConfigInfoAggr> findConfigInfoAggrByPage(String dataId, String group
         ConfigInfoAggrMapper configInfoAggrMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                 TableConstant.CONFIG_INFO_AGGR);
         final int startRow = (pageNo - 1) * pageSize;
-        final String sqlCountRows = configInfoAggrMapper.select(Arrays.asList("count(*)"),
+        final String sqlCountRows = configInfoAggrMapper.select(Collections.singletonList("count(*)"),
                 Arrays.asList("data_id", "group_id", "tenant_id"));
         
         MapperContext context = new MapperContext();

File: consistency/src/main/java/com/alibaba/nacos/consistency/serialize/HessianSerializer.java
Patch:
@@ -51,6 +51,9 @@ public <T> T deserialize(byte[] data) {
     @Override
     public <T> T deserialize(byte[] data, Class<T> cls) {
         T result = deserialize(data);
+        if (result == null) {
+            return null;
+        }
         if (cls.isAssignableFrom(result.getClass())) {
             return result;
         }

File: core/src/main/java/com/alibaba/nacos/core/control/TpsControlConfig.java
Patch:
@@ -30,7 +30,7 @@ public class TpsControlConfig {
      * tps control is enabled.
      * @return true/false.
      */
-    public static final boolean isTpsControlEnabled() {
+    public static boolean isTpsControlEnabled() {
         return true;
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/control/remote/TpsControlRequestFilter.java
Patch:
@@ -69,7 +69,9 @@ protected Response filter(Request request, RequestMeta meta, Class handlerClazz)
                 if (tpsCheckRequest == null) {
                     tpsCheckRequest = new TpsCheckRequest();
                 }
-                tpsCheckRequest.setPointName(pointName);
+                if (StringUtils.isBlank(tpsCheckRequest.getPointName())) {
+                    tpsCheckRequest.setPointName(pointName);
+                }
                 
                 TpsCheckResponse check = tpsControlManager.check(tpsCheckRequest);
                 

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -150,7 +150,7 @@ public RestResult<String> switchLookup(@RequestParam(name = "type") String type)
     @Secured(resource = Commons.NACOS_CORE_CONTEXT + "/cluster", action = ActionTypes.WRITE, signType = SignType.CONSOLE)
     public RestResult<String> leave(@RequestBody Collection<String> params,
             @RequestParam(defaultValue = "true") Boolean notifyOtherMembers) throws Exception {
-        return RestResultUtils.failed(405, "/v1/core/cluster/server/leave API not allow to use temporarily.");
+        return RestResultUtils.failed(405, null, "/v1/core/cluster/server/leave API not allow to use temporarily.");
     }
     
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/DistroConfig.java
Patch:
@@ -131,7 +131,7 @@ public void setLoadDataTimeoutMillis(long loadDataTimeoutMillis) {
     protected String printConfig() {
         return "DistroConfig{" + "syncDelayMillis=" + syncDelayMillis + ", syncTimeoutMillis=" + syncTimeoutMillis
                 + ", syncRetryDelayMillis=" + syncRetryDelayMillis + ", verifyIntervalMillis=" + verifyIntervalMillis
-                + ", verifyTimeoutMillis=" + verifyTimeoutMillis + ", loadDataRetryDelayMillis="
-                + loadDataRetryDelayMillis + '}';
+                + ", verifyTimeoutMillis=" + verifyTimeoutMillis + ", loadDataRetryDelayMillis=" + loadDataRetryDelayMillis
+                + ", loadDataTimeoutMillis=" + loadDataTimeoutMillis + '}';
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingApplicationListener.java
Patch:
@@ -142,7 +142,6 @@ public void failed(ConfigurableApplicationContext context, Throwable exception)
         ThreadPoolManager.shutdown();
         WatchFileCenter.shutdown();
         NotifyCenter.shutdown();
-        NacosAbilityManagerHolder.getInstance().destroy();
         
         closeExecutor();
         

File: core/src/main/java/com/alibaba/nacos/core/namespace/repository/EmbeddedNamespacePersistServiceImpl.java
Patch:
@@ -73,14 +73,14 @@ public EmbeddedNamespacePersistServiceImpl(DatabaseOperate databaseOperate) {
     
     @Override
     public void insertTenantInfoAtomic(String kp, String tenantId, String tenantName, String tenantDesc,
-            String createResoure, final long time) {
+            String createResource, final long time) {
         
         TenantInfoMapper tenantInfoMapper = mapperManager
                 .findMapper(dataSourceService.getDataSourceType(), TableConstant.TENANT_INFO);
         final String sql = tenantInfoMapper.insert(Arrays
                 .asList("kp", "tenant_id", "tenant_name", "tenant_desc", "create_source", "gmt_create",
                         "gmt_modified"));
-        final Object[] args = new Object[] {kp, tenantId, tenantName, tenantDesc, createResoure, time, time};
+        final Object[] args = new Object[] {kp, tenantId, tenantName, tenantDesc, createResource, time, time};
         
         EmbeddedStorageContextHolder.addSqlContext(sql, args);
         
@@ -178,7 +178,7 @@ public int tenantInfoCountByTenantId(String tenantId) {
         }
         TenantInfoMapper tenantInfoMapper = mapperManager
                 .findMapper(dataSourceService.getDataSourceType(), TableConstant.TENANT_INFO);
-        String sql = tenantInfoMapper.count(Arrays.asList("tenant_id"));
+        String sql = tenantInfoMapper.count(Collections.singletonList("tenant_id"));
         Integer result = databaseOperate.queryOne(sql, new String[] {tenantId}, Integer.class);
         if (result == null) {
             return 0;

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcBiStreamRequestAcceptor.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.remote.grpc;
 
+import com.alibaba.nacos.api.ability.constant.AbilityMode;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.grpc.auto.BiRequestStreamGrpc;
 import com.alibaba.nacos.api.grpc.auto.Payload;
@@ -138,8 +139,7 @@ public void onNext(Payload payload) {
                     } else {
                         try {
                             // finish register, tell client has set up successfully
-                            connection.request(new SetupAckRequest(connectionId,
-                                    NacosAbilityManagerHolder.getInstance().getCurrentNodeAbilities()), 3000L);
+                            connection.request(new SetupAckRequest(NacosAbilityManagerHolder.getInstance().getCurrentNodeAbilities(AbilityMode.SERVER)), 3000L);
                         } catch (Exception e) {
                             // nothing to do
 

File: core/src/test/java/com/alibaba/nacos/core/ability/config/TestAbilityConfig.java
Patch:
@@ -29,7 +29,7 @@ public class TestAbilityConfig extends AbilityConfigs {
     
     public TestAbilityConfig() {
         Set<AbilityKey> serverAbilityKeys = super.getServerAbilityKeys();
-        serverAbilityKeys.add(AbilityKey.TEST_1);
-        serverAbilityKeys.add(AbilityKey.TEST_2);
+        serverAbilityKeys.add(AbilityKey.SERVER_TEST_1);
+        serverAbilityKeys.add(AbilityKey.SERVER_TEST_2);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientDataProcessor.java
Patch:
@@ -34,6 +34,7 @@
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientEvent;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
+import com.alibaba.nacos.naming.core.v2.event.metadata.MetadataEvent;
 import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.pojo.BatchInstanceData;
 import com.alibaba.nacos.naming.core.v2.pojo.BatchInstancePublishInfo;
@@ -181,6 +182,8 @@ private void upgradeClient(Client client, ClientSyncData clientSyncData) {
                 client.addServiceInstance(singleton, instancePublishInfo);
                 NotifyCenter.publishEvent(
                         new ClientOperationEvent.ClientRegisterServiceEvent(singleton, client.getClientId()));
+                NotifyCenter.publishEvent(
+                        new MetadataEvent.InstanceMetadataEvent(singleton, instancePublishInfo.getMetadataId(), false));
             }
         }
         for (Service each : client.getAllPublishedService()) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/BasePersistentServiceProcessor.java
Patch:
@@ -208,7 +208,7 @@ public String group() {
     
     @Override
     public List<SnapshotOperation> loadSnapshotOperate() {
-        return Collections.singletonList(new NamingSnapshotOperation(this.kvStorage, lock));
+        return Collections.singletonList(new NamingSnapshotOperation(this.kvStorage, lock, serializer));
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/NamingDynamicMeterRefreshService.java
Patch:
@@ -43,7 +43,7 @@ public class NamingDynamicMeterRefreshService {
      * refresh service change count top n per 30s.
      */
     @Scheduled(cron = "0/30 * * * * *")
-    public void refreshTopnConfigChangeCount() {
+    public void refreshTopnServiceChangeCount() {
         NacosMeterRegistryCenter.clear(TOPN_SERVICE_CHANGE_REGISTRY);
         List<Pair<String, AtomicInteger>> topnServiceChangeCount = MetricsMonitor.getServiceChangeCount()
                 .getTopNCounter(SERVICE_CHANGE_N);
@@ -52,6 +52,7 @@ public void refreshTopnConfigChangeCount() {
             tags.add(new ImmutableTag("service", serviceChangeCount.getFirst()));
             NacosMeterRegistryCenter.gauge(TOPN_SERVICE_CHANGE_REGISTRY, "service_change_count", tags, serviceChangeCount.getSecond());
         }
+        MetricsMonitor.getServiceChangeCount().removeAll();
     }
     
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
@@ -43,6 +44,7 @@
 public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest, ServiceListResponse> {
     
     @Override
+    @TpsControl(pointName = "RemoteNamingServiceListQuery", name = "RemoteNamingServiceListQuery")
     @Secured(action = ActionTypes.READ)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceQueryRequestHandler.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.naming.remote.response.QueryServiceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
@@ -49,6 +50,7 @@ public ServiceQueryRequestHandler(ServiceStorage serviceStorage, NamingMetadataM
     }
     
     @Override
+    @TpsControl(pointName = "RemoteNamingServiceQuery", name = "RemoteNamingServiceQuery")
     @Secured(action = ActionTypes.READ)
     public QueryServiceResponse handle(ServiceQueryRequest request, RequestMeta meta) throws NacosException {
         String namespaceId = request.getNamespace();

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.trace.event.naming.SubscribeServiceTraceEvent;
 import com.alibaba.nacos.common.trace.event.naming.UnsubscribeServiceTraceEvent;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
@@ -60,6 +61,7 @@ public SubscribeServiceRequestHandler(ServiceStorage serviceStorage, NamingMetad
     }
     
     @Override
+    @TpsControl(pointName = "RemoteNamingServiceSubscribeUnSubscribe", name = "RemoteNamingServiceSubscribeUnsubscribe")
     @Secured(action = ActionTypes.READ)
     public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestMeta meta) throws NacosException {
         String namespaceId = request.getNamespace();

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.impl;
 
+import com.alibaba.nacos.consistency.Serializer;
 import com.alibaba.nacos.consistency.snapshot.Reader;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.RaftConfig;
@@ -28,6 +29,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
+import org.mockito.Mockito;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.mock.env.MockEnvironment;
 
@@ -73,7 +75,7 @@ public void after() {
     @Test
     public void testNamingSnapshot() throws InterruptedException {
         AtomicBoolean result = new AtomicBoolean(false);
-        NamingSnapshotOperation operation = new NamingSnapshotOperation(storage, lock);
+        NamingSnapshotOperation operation = new NamingSnapshotOperation(storage, lock, Mockito.mock(Serializer.class));
         final Writer writer = new Writer(snapshotDir);
         final CountDownLatch latch = new CountDownLatch(1);
         

File: api/src/main/java/com/alibaba/nacos/api/remote/RemoteConstants.java
Patch:
@@ -38,4 +38,6 @@ public class RemoteConstants {
     public static final String LABEL_MODULE_CONFIG = "config";
     
     public static final String LABEL_MODULE_NAMING = "naming";
+    
+    public static final String MONITOR_LABEL_NONE = "none";
 }

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -138,7 +138,7 @@
     String SERVER_ADDR_PLACEHOLDER = "${" + PREFIX + SERVER_ADDR + ":}";
     
     /**
-     * The placeholder of endpoint, the value is ${nacos.context-path:}".
+     * The placeholder of endpoint, the value is ${nacos.context-path:}.
      */
     String CONTEXT_PATH_PLACEHOLDER = "${" + PREFIX + CONTEXT_PATH + ":}";
     

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/Label.java
Patch:
@@ -19,7 +19,7 @@
 import java.util.Set;
 
 /**
- * CMDB lable.
+ * CMDB label.
  *
  * @author nkorange
  * @since 0.7.0

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/PreservedEntityTypes.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.api.cmdb.pojo;
 
 /**
- * CMDB preserverd entity type.
+ * CMDB preserved entity type.
  *
  * @author nkorange
  * @since 0.7.0

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -181,7 +181,7 @@ public String toString() {
     public static final int RESOURCE_NOT_FOUND = -404;
     
     /**
-     * http client error code, ome exceptions that occurred when the use the Nacos RestTemplate and Nacos
+     * http client error code, ome exceptions that occurred when there use the Nacos RestTemplate and Nacos
      * AsyncRestTemplate.
      */
     public static final int HTTP_CLIENT_ERROR_CODE = -500;

File: api/src/main/java/com/alibaba/nacos/api/grpc/auto/Metadata.java
Patch:
@@ -260,7 +260,7 @@ public String getHeadersOrDefault(
     if (key == null) { throw new NullPointerException(); }
     java.util.Map<String, String> map =
         internalGetHeaders().getMap();
-    return map.containsKey(key) ? map.get(key) : defaultValue;
+    return map.getOrDefault(key, defaultValue);
   }
   /**
    * <code>map&lt;string, string&gt; headers = 7;</code>
@@ -797,7 +797,7 @@ public Builder setClientIpBytes(
     }
     private com.google.protobuf.MapField<String, String>
     internalGetMutableHeaders() {
-      onChanged();;
+      onChanged();
       if (headers_ == null) {
         headers_ = com.google.protobuf.MapField.newMapField(
             HeadersDefaultEntryHolder.defaultEntry);

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingResponseCode.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Business response code of naming module
  *
- * <p>Every code stays between 20001 to 29999.
+ * <p>Every code stays between 20001 and 29999.
  *
  * @author nkorange
  * @author 1.2.0

File: api/src/main/java/com/alibaba/nacos/api/selector/Selector.java
Patch:
@@ -64,7 +64,7 @@ public interface Selector<R, C, E> extends Serializable {
     String getType();
     
     /**
-     * Get the select context which usede by {@link #select(Object)}.
+     * Get the select context which used by {@link #select(Object)}.
      *
      * @return selector context type.
      */

File: auth/src/main/java/com/alibaba/nacos/auth/parser/grpc/NamingGrpcResourceParser.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListChangeEvent.java
Patch:
@@ -23,5 +23,5 @@
  *
  * @author zongtanghu
  */
-public class ServerlistChangeEvent extends SlowEvent {
+public class ServerListChangeEvent extends SlowEvent {
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxy.java
Patch:
@@ -91,13 +91,12 @@ public interface NamingClientProxy extends Closeable {
      * @param serviceName service name
      * @param groupName   group name
      * @param clusters    clusters
-     * @param udpPort     udp port
      * @param healthyOnly healthy only
      * @return service info
      * @throws NacosException nacos exception
      */
-    ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
-            boolean healthyOnly) throws NacosException;
+    ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, boolean healthyOnly)
+            throws NacosException;
     
     /**
      * Query Service.

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -127,7 +127,7 @@ public void updateInstance(String serviceName, String groupName, Instance instan
         }
         
         @Override
-        public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
+        public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters,
                 boolean healthyOnly) throws NacosException {
             return null;
         }

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/JdkHttpClientRequest.java
Patch:
@@ -96,7 +96,7 @@ public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity
         conn.setRequestMethod(httpMethod);
         if (body != null && !"".equals(body)) {
             String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
-            String bodyStr = JacksonUtils.toJson(body);
+            String bodyStr = body instanceof String ? (String) body : JacksonUtils.toJson(body);
             if (MediaType.APPLICATION_FORM_URLENCODED.equals(contentType)) {
                 Map<String, String> map = JacksonUtils.toObj(bodyStr, HashMap.class);
                 bodyStr = HttpUtils.encodingParams(map, headers.getCharset());

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/SmartSubscriber.java
Patch:
@@ -27,7 +27,7 @@
  * @author zongtanghu
  */
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
-public abstract class SmartSubscriber extends Subscriber {
+public abstract class SmartSubscriber extends Subscriber<Event> {
     
     /**
      * Returns which event type are smart subscriber interested in.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientTlsConfig.java
Patch:
@@ -49,7 +49,7 @@ public static RpcClientTlsConfig properties(Properties properties) {
         }
 
         if (properties.containsKey(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS)) {
-            tlsConfig.setProtocols(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS);
+            tlsConfig.setProtocols(properties.getProperty(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS));
         }
 
         if (properties.containsKey(RpcConstants.RPC_CLIENT_TLS_CIPHERS)) {

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/DeregisterInstanceTraceEvent.java
Patch:
@@ -20,6 +20,7 @@
 
 /**
  * Naming deregister instance trace event.
+ *
  * @author yanda
  */
 public class DeregisterInstanceTraceEvent extends NamingTraceEvent {
@@ -30,9 +31,9 @@ public class DeregisterInstanceTraceEvent extends NamingTraceEvent {
     
     private final boolean rpc;
     
-    private String instanceIp;
+    private final String instanceIp;
     
-    private int instancePort;
+    private final int instancePort;
     
     public final DeregisterInstanceReason reason;
     

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/DeregisterServiceTraceEvent.java
Patch:
@@ -18,14 +18,15 @@
 
 /**
  * Naming deregister service trace event.
+ *
  * @author yanda
  */
 public class DeregisterServiceTraceEvent extends NamingTraceEvent {
     
     private static final long serialVersionUID = 7358195336881398548L;
     
-    public DeregisterServiceTraceEvent(long eventTime, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public DeregisterServiceTraceEvent(long eventTime, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("DEREGISTER_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/NamingTraceEvent.java
Patch:
@@ -24,11 +24,11 @@
  * @author yanda
  */
 public class NamingTraceEvent extends TraceEvent {
-
+    
     private static final long serialVersionUID = 2923077640400851816L;
     
-    public NamingTraceEvent(String eventType, long eventTime,
-            String serviceNamespace, String serviceGroup, String name) {
+    public NamingTraceEvent(String eventType, long eventTime, String serviceNamespace, String serviceGroup,
+            String name) {
         super(eventType, eventTime, serviceNamespace, serviceGroup, name);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/PushServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming push service trace event.
+ *
  * @author yanda
  */
 public class PushServiceTraceEvent extends NamingTraceEvent {
@@ -55,8 +56,8 @@ public long getServiceLevelAgreementTime() {
     }
     
     public PushServiceTraceEvent(long eventTime, long pushCostTimeForNetWork, long pushCostTimeForAll,
-            long serviceLevelAgreementTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName, int instanceSize) {
+            long serviceLevelAgreementTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName, int instanceSize) {
         super("PUSH_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
         this.instanceSize = instanceSize;

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/RegisterInstanceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming register instance trace event.
+ *
  * @author yanda
  */
 public class RegisterInstanceTraceEvent extends NamingTraceEvent {
@@ -28,9 +29,9 @@ public class RegisterInstanceTraceEvent extends NamingTraceEvent {
     
     private final boolean rpc;
     
-    private String instanceIp;
+    private final String instanceIp;
     
-    private int instancePort;
+    private final int instancePort;
     
     public String getClientIp() {
         return clientIp;

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/RegisterServiceTraceEvent.java
Patch:
@@ -18,14 +18,14 @@
 
 /**
  * Naming deregister service trace event.
+ *
  * @author yanda
  */
 public class RegisterServiceTraceEvent extends NamingTraceEvent {
     
     private static final long serialVersionUID = -8568231862586636388L;
     
-    public RegisterServiceTraceEvent(long eventTime, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public RegisterServiceTraceEvent(long eventTime, String serviceNamespace, String serviceGroup, String serviceName) {
         super("REGISTER_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/SubscribeServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming subscribe service trace event.
+ *
  * @author yanda
  */
 public class SubscribeServiceTraceEvent extends NamingTraceEvent {
@@ -30,8 +31,8 @@ public String getClientIp() {
         return clientIp;
     }
     
-    public SubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public SubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("SUBSCRIBE_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
     }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/UnsubscribeServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming unsubscribe service trace event.
+ *
  * @author yanda
  */
 public class UnsubscribeServiceTraceEvent extends NamingTraceEvent {
@@ -30,8 +31,8 @@ public String getClientIp() {
         return clientIp;
     }
     
-    public UnsubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public UnsubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("UNSUBSCRIBE_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -299,8 +299,9 @@ public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse resp
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
     public RestResult<Boolean> deleteConfigs(HttpServletRequest request, @RequestParam(value = "ids") List<Long> ids) {
         String clientIp = RequestUtil.getRemoteIp(request);
+        String srcUser = RequestUtil.getSrcUserName(request);
         final Timestamp time = TimeUtils.getCurrentTime();
-        List<ConfigInfo> configInfoList = configInfoPersistService.removeConfigInfoByIds(ids, clientIp, null);
+        List<ConfigInfo> configInfoList = configInfoPersistService.removeConfigInfoByIds(ids, clientIp, srcUser);
         if (CollectionUtils.isEmpty(configInfoList)) {
             return RestResultUtils.success(true);
         }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeListenContext.java
Patch:
@@ -143,6 +143,9 @@ public synchronized void clearContextForConnectionId(final String connectionId)
             Set<String> connectionIds = groupKeyContext.get(groupKey.getKey());
             if (CollectionUtils.isNotEmpty(connectionIds)) {
                 connectionIds.remove(connectionId);
+                if (connectionIds.isEmpty()) {
+                    groupKeyContext.remove(groupKey.getKey());
+                }
             } else {
                 groupKeyContext.remove(groupKey.getKey());
             }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifier.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.config.server.configuration.ConfigCommonConfig;
 import com.alibaba.nacos.config.server.model.event.LocalDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.GroupKey;
@@ -113,7 +114,8 @@ public void configDataChanged(String groupKey, String dataId, String group, Stri
             
             ConfigChangeNotifyRequest notifyRequest = ConfigChangeNotifyRequest.build(dataId, group, tenant);
             
-            RpcPushTask rpcPushRetryTask = new RpcPushTask(notifyRequest, 50, client, clientIp, metaInfo.getAppName());
+            RpcPushTask rpcPushRetryTask = new RpcPushTask(notifyRequest,
+                    ConfigCommonConfig.getInstance().getMaxPushRetryTimes(), client, clientIp, metaInfo.getAppName());
             push(rpcPushRetryTask);
             notifyClientCount++;
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -67,7 +67,7 @@ public static boolean isAggrDataId(String dataId) {
      */
     public static void load(String content) {
         if (StringUtils.isBlank(content)) {
-            FATAL_LOG.error("aggr dataId whitelist is blank.");
+            FATAL_LOG.warn("aggr dataId whitelist is blank.");
             return;
         }
         DEFAULT_LOG.warn("[aggr-dataIds] {}", content);

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -39,7 +39,6 @@
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -345,7 +344,6 @@ class DataChangeTask implements Runnable {
         @Override
         public void run() {
             try {
-                ConfigCacheService.getContentBetaMd5(groupKey);
                 for (Iterator<ClientLongPolling> iter = allSubs.iterator(); iter.hasNext(); ) {
                     ClientLongPolling clientSub = iter.next();
                     if (clientSub.clientMd5Map.containsKey(groupKey)) {
@@ -366,7 +364,7 @@ public void run() {
                                         RequestUtil
                                                 .getRemoteIp((HttpServletRequest) clientSub.asyncContext.getRequest()),
                                         "polling", clientSub.clientMd5Map.size(), clientSub.probeRequestSize, groupKey);
-                        clientSub.sendResponse(Arrays.asList(groupKey));
+                        clientSub.sendResponse(Collections.singletonList(groupKey));
                     }
                 }
                 

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -37,7 +37,7 @@
 @Service
 public class SwitchService {
     
-    public static final String SWITCH_META_DATAID = "com.alibaba.nacos.meta.switch";
+    public static final String SWITCH_META_DATA_ID = "com.alibaba.nacos.meta.switch";
     
     public static final String FIXED_POLLING = "isFixedPolling";
     
@@ -85,7 +85,7 @@ public static String getSwitchString(String key, String defaultValue) {
      */
     public static void load(String config) {
         if (StringUtils.isBlank(config)) {
-            FATAL_LOG.error("switch config is blank.");
+            FATAL_LOG.warn("switch config is blank.");
             return;
         }
         FATAL_LOG.warn("[switch-config] {}", config);
@@ -96,7 +96,7 @@ public static void load(String config) {
                 if (!StringUtils.isBlank(line) && !line.startsWith("#")) {
                     String[] array = line.split("=");
                     
-                    if (array == null || array.length != 2) {
+                    if (array.length != 2) {
                         LogUtil.FATAL_LOG.error("corrupt switch record {}", line);
                         continue;
                     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -43,6 +43,7 @@
 import java.sql.SQLException;
 import java.sql.Timestamp;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import static com.alibaba.nacos.config.server.utils.LogUtil.FATAL_LOG;
@@ -99,7 +100,7 @@ public GroupCapacity getGroupCapacity(String groupId) {
                 TableConstant.GROUP_CAPACITY);
         String sql = groupCapacityMapper.select(
                 Arrays.asList("id", "quota", "`usage`", "`max_size`", "max_aggr_count", "max_aggr_size", "group_id"),
-                Arrays.asList("group_id"));
+                Collections.singletonList("group_id"));
         List<GroupCapacity> list = jdbcTemplate.query(sql, new Object[] {groupId}, GROUP_CAPACITY_ROW_MAPPER);
         if (list.isEmpty()) {
             return null;
@@ -374,7 +375,7 @@ public boolean deleteGroupCapacity(final String group) {
                     TableConstant.GROUP_CAPACITY);
             PreparedStatementCreator preparedStatementCreator = connection -> {
                 PreparedStatement ps = connection.prepareStatement(
-                        groupCapacityMapper.delete(Arrays.asList("group_id")));
+                        groupCapacityMapper.delete(Collections.singletonList("group_id")));
                 ps.setString(1, group);
                 return ps;
             };

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java
Patch:
@@ -102,7 +102,7 @@ public static boolean configDump(ConfigDumpEvent event) {
             ClientIpWhiteList.load(content);
         }
         
-        if (dataId.equals(SwitchService.SWITCH_META_DATAID)) {
+        if (dataId.equals(SwitchService.SWITCH_META_DATA_ID)) {
             SwitchService.load(content);
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -64,7 +64,7 @@ public boolean process(NacosTask task) {
                         ClientIpWhiteList.load(cf.getContent());
                     }
                     
-                    if (cf.getDataId().equals(SwitchService.SWITCH_META_DATAID)) {
+                    if (cf.getDataId().equals(SwitchService.SWITCH_META_DATA_ID)) {
                         SwitchService.load(cf.getContent());
                     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoAggrPersistServiceImpl.java
Patch:
@@ -342,7 +342,7 @@ public Page<ConfigInfoAggr> findConfigInfoAggrByPage(String dataId, String group
         ConfigInfoAggrMapper configInfoAggrMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                 TableConstant.CONFIG_INFO_AGGR);
         final int startRow = (pageNo - 1) * pageSize;
-        final String sqlCountRows = configInfoAggrMapper.select(Arrays.asList("count(*)"),
+        final String sqlCountRows = configInfoAggrMapper.select(Collections.singletonList("count(*)"),
                 Arrays.asList("data_id", "group_id", "tenant_id"));
         
         MapperContext context = new MapperContext();

File: consistency/src/main/java/com/alibaba/nacos/consistency/serialize/HessianSerializer.java
Patch:
@@ -51,6 +51,9 @@ public <T> T deserialize(byte[] data) {
     @Override
     public <T> T deserialize(byte[] data, Class<T> cls) {
         T result = deserialize(data);
+        if (result == null) {
+            return null;
+        }
         if (cls.isAssignableFrom(result.getClass())) {
             return result;
         }

File: core/src/main/java/com/alibaba/nacos/core/control/TpsControlConfig.java
Patch:
@@ -30,7 +30,7 @@ public class TpsControlConfig {
      * tps control is enabled.
      * @return true/false.
      */
-    public static final boolean isTpsControlEnabled() {
+    public static boolean isTpsControlEnabled() {
         return true;
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/control/remote/TpsControlRequestFilter.java
Patch:
@@ -69,7 +69,9 @@ protected Response filter(Request request, RequestMeta meta, Class handlerClazz)
                 if (tpsCheckRequest == null) {
                     tpsCheckRequest = new TpsCheckRequest();
                 }
-                tpsCheckRequest.setPointName(pointName);
+                if (StringUtils.isBlank(tpsCheckRequest.getPointName())) {
+                    tpsCheckRequest.setPointName(pointName);
+                }
                 
                 TpsCheckResponse check = tpsControlManager.check(tpsCheckRequest);
                 

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -150,7 +150,7 @@ public RestResult<String> switchLookup(@RequestParam(name = "type") String type)
     @Secured(resource = Commons.NACOS_CORE_CONTEXT + "/cluster", action = ActionTypes.WRITE, signType = SignType.CONSOLE)
     public RestResult<String> leave(@RequestBody Collection<String> params,
             @RequestParam(defaultValue = "true") Boolean notifyOtherMembers) throws Exception {
-        return RestResultUtils.failed(405, "/v1/core/cluster/server/leave API not allow to use temporarily.");
+        return RestResultUtils.failed(405, null, "/v1/core/cluster/server/leave API not allow to use temporarily.");
     }
     
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/DistroConfig.java
Patch:
@@ -131,7 +131,7 @@ public void setLoadDataTimeoutMillis(long loadDataTimeoutMillis) {
     protected String printConfig() {
         return "DistroConfig{" + "syncDelayMillis=" + syncDelayMillis + ", syncTimeoutMillis=" + syncTimeoutMillis
                 + ", syncRetryDelayMillis=" + syncRetryDelayMillis + ", verifyIntervalMillis=" + verifyIntervalMillis
-                + ", verifyTimeoutMillis=" + verifyTimeoutMillis + ", loadDataRetryDelayMillis="
-                + loadDataRetryDelayMillis + '}';
+                + ", verifyTimeoutMillis=" + verifyTimeoutMillis + ", loadDataRetryDelayMillis=" + loadDataRetryDelayMillis
+                + ", loadDataTimeoutMillis=" + loadDataTimeoutMillis + '}';
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/namespace/repository/EmbeddedNamespacePersistServiceImpl.java
Patch:
@@ -73,14 +73,14 @@ public EmbeddedNamespacePersistServiceImpl(DatabaseOperate databaseOperate) {
     
     @Override
     public void insertTenantInfoAtomic(String kp, String tenantId, String tenantName, String tenantDesc,
-            String createResoure, final long time) {
+            String createResource, final long time) {
         
         TenantInfoMapper tenantInfoMapper = mapperManager
                 .findMapper(dataSourceService.getDataSourceType(), TableConstant.TENANT_INFO);
         final String sql = tenantInfoMapper.insert(Arrays
                 .asList("kp", "tenant_id", "tenant_name", "tenant_desc", "create_source", "gmt_create",
                         "gmt_modified"));
-        final Object[] args = new Object[] {kp, tenantId, tenantName, tenantDesc, createResoure, time, time};
+        final Object[] args = new Object[] {kp, tenantId, tenantName, tenantDesc, createResource, time, time};
         
         EmbeddedStorageContextHolder.addSqlContext(sql, args);
         
@@ -178,7 +178,7 @@ public int tenantInfoCountByTenantId(String tenantId) {
         }
         TenantInfoMapper tenantInfoMapper = mapperManager
                 .findMapper(dataSourceService.getDataSourceType(), TableConstant.TENANT_INFO);
-        String sql = tenantInfoMapper.count(Arrays.asList("tenant_id"));
+        String sql = tenantInfoMapper.count(Collections.singletonList("tenant_id"));
         Integer result = databaseOperate.queryOne(sql, new String[] {tenantId}, Integer.class);
         if (result == null) {
             return 0;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientDataProcessor.java
Patch:
@@ -34,6 +34,7 @@
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientEvent;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
+import com.alibaba.nacos.naming.core.v2.event.metadata.MetadataEvent;
 import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.pojo.BatchInstanceData;
 import com.alibaba.nacos.naming.core.v2.pojo.BatchInstancePublishInfo;
@@ -181,6 +182,8 @@ private void upgradeClient(Client client, ClientSyncData clientSyncData) {
                 client.addServiceInstance(singleton, instancePublishInfo);
                 NotifyCenter.publishEvent(
                         new ClientOperationEvent.ClientRegisterServiceEvent(singleton, client.getClientId()));
+                NotifyCenter.publishEvent(
+                        new MetadataEvent.InstanceMetadataEvent(singleton, instancePublishInfo.getMetadataId(), false));
             }
         }
         for (Service each : client.getAllPublishedService()) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/BasePersistentServiceProcessor.java
Patch:
@@ -208,7 +208,7 @@ public String group() {
     
     @Override
     public List<SnapshotOperation> loadSnapshotOperate() {
-        return Collections.singletonList(new NamingSnapshotOperation(this.kvStorage, lock));
+        return Collections.singletonList(new NamingSnapshotOperation(this.kvStorage, lock, serializer));
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/NamingDynamicMeterRefreshService.java
Patch:
@@ -43,7 +43,7 @@ public class NamingDynamicMeterRefreshService {
      * refresh service change count top n per 30s.
      */
     @Scheduled(cron = "0/30 * * * * *")
-    public void refreshTopnConfigChangeCount() {
+    public void refreshTopnServiceChangeCount() {
         NacosMeterRegistryCenter.clear(TOPN_SERVICE_CHANGE_REGISTRY);
         List<Pair<String, AtomicInteger>> topnServiceChangeCount = MetricsMonitor.getServiceChangeCount()
                 .getTopNCounter(SERVICE_CHANGE_N);
@@ -52,6 +52,7 @@ public void refreshTopnConfigChangeCount() {
             tags.add(new ImmutableTag("service", serviceChangeCount.getFirst()));
             NacosMeterRegistryCenter.gauge(TOPN_SERVICE_CHANGE_REGISTRY, "service_change_count", tags, serviceChangeCount.getSecond());
         }
+        MetricsMonitor.getServiceChangeCount().removeAll();
     }
     
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
@@ -43,6 +44,7 @@
 public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest, ServiceListResponse> {
     
     @Override
+    @TpsControl(pointName = "RemoteNamingServiceListQuery", name = "RemoteNamingServiceListQuery")
     @Secured(action = ActionTypes.READ)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceQueryRequestHandler.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.naming.remote.response.QueryServiceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
@@ -49,6 +50,7 @@ public ServiceQueryRequestHandler(ServiceStorage serviceStorage, NamingMetadataM
     }
     
     @Override
+    @TpsControl(pointName = "RemoteNamingServiceQuery", name = "RemoteNamingServiceQuery")
     @Secured(action = ActionTypes.READ)
     public QueryServiceResponse handle(ServiceQueryRequest request, RequestMeta meta) throws NacosException {
         String namespaceId = request.getNamespace();

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.trace.event.naming.SubscribeServiceTraceEvent;
 import com.alibaba.nacos.common.trace.event.naming.UnsubscribeServiceTraceEvent;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
@@ -60,6 +61,7 @@ public SubscribeServiceRequestHandler(ServiceStorage serviceStorage, NamingMetad
     }
     
     @Override
+    @TpsControl(pointName = "RemoteNamingServiceSubscribeUnSubscribe", name = "RemoteNamingServiceSubscribeUnsubscribe")
     @Secured(action = ActionTypes.READ)
     public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestMeta meta) throws NacosException {
         String namespaceId = request.getNamespace();

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.impl;
 
+import com.alibaba.nacos.consistency.Serializer;
 import com.alibaba.nacos.consistency.snapshot.Reader;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.RaftConfig;
@@ -28,6 +29,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
+import org.mockito.Mockito;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.mock.env.MockEnvironment;
 
@@ -73,7 +75,7 @@ public void after() {
     @Test
     public void testNamingSnapshot() throws InterruptedException {
         AtomicBoolean result = new AtomicBoolean(false);
-        NamingSnapshotOperation operation = new NamingSnapshotOperation(storage, lock);
+        NamingSnapshotOperation operation = new NamingSnapshotOperation(storage, lock, Mockito.mock(Serializer.class));
         final Writer writer = new Writer(snapshotDir);
         final CountDownLatch latch = new CountDownLatch(1);
         

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHookTest.java
Patch:
@@ -21,13 +21,15 @@
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.plugin.control.tps.TpsControlManager;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.ArrayList;
 
@@ -63,6 +65,7 @@ public class NacosMonitorPushResultHookTest {
     
     @Before
     public void setUp() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         MetricsMonitor.resetAll();
         serviceInfo.setHosts(new ArrayList<>());
         subscriber.setIp("0.0.0.0");

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTaskTest.java
Patch:
@@ -26,13 +26,15 @@
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.naming.push.v2.NoRequiredRetryException;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.Collections;
 import java.util.Optional;
@@ -79,6 +81,7 @@ public class PushExecuteTaskTest {
     
     @Before
     public void setUp() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         MetricsMonitor.resetAll();
         when(indexesManager.getAllClientsSubscribeService(service)).thenReturn(Collections.singletonList(clientId));
         when(clientManager.getClient(clientId)).thenReturn(client);

File: naming/src/test/java/com/alibaba/nacos/naming/remote/rpc/handler/BatchInstanceRequestHandlerTest.java
Patch:
@@ -53,6 +53,8 @@ public class BatchInstanceRequestHandlerTest {
     public void testHandle() throws NacosException {
         BatchInstanceRequest batchInstanceRequest = new BatchInstanceRequest();
         batchInstanceRequest.setType(NamingRemoteConstants.BATCH_REGISTER_INSTANCE);
+        batchInstanceRequest.setServiceName("service1");
+        batchInstanceRequest.setGroupName("group1");
         List<Instance> instanceList = new ArrayList<>();
         Instance instance = new Instance();
         instanceList.add(instance);

File: naming/src/test/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandlerTest.java
Patch:
@@ -50,12 +50,14 @@ public class InstanceRequestHandlerTest {
     public void testHandle() throws NacosException {
         InstanceRequest instanceRequest = new InstanceRequest();
         instanceRequest.setType(NamingRemoteConstants.REGISTER_INSTANCE);
+        instanceRequest.setServiceName("service1");
+        instanceRequest.setGroupName("group1");
         Instance instance = new Instance();
         instanceRequest.setInstance(instance);
         RequestMeta requestMeta = new RequestMeta();
         instanceRequestHandler.handle(instanceRequest, requestMeta);
         Mockito.verify(clientOperationService).registerInstance(Mockito.any(), Mockito.any(), Mockito.anyString());
-    
+        
         instanceRequest.setType(NamingRemoteConstants.DE_REGISTER_INSTANCE);
         instanceRequestHandler.handle(instanceRequest, requestMeta);
         Mockito.verify(clientOperationService).deregisterInstance(Mockito.any(), Mockito.any(), Mockito.anyString());

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.plugin.auth.impl.authenticate.AuthenticationNamagerDelegator;
+import com.alibaba.nacos.plugin.auth.impl.authenticate.AuthenticationManagerDelegator;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.DefaultAuthenticationManager;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.IAuthenticationManager;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.LdapAuthenticationManager;
@@ -161,7 +161,7 @@ public PasswordEncoder passwordEncoder() {
     public IAuthenticationManager authenticationManager(
             ObjectProvider<LdapAuthenticationManager> ldapAuthenticatoinManagerObjectProvider,
             ObjectProvider<DefaultAuthenticationManager> defaultAuthenticationManagers, AuthConfigs authConfigs) {
-        return new AuthenticationNamagerDelegator(defaultAuthenticationManagers,
+        return new AuthenticationManagerDelegator(defaultAuthenticationManagers,
                 ldapAuthenticatoinManagerObjectProvider, authConfigs);
     }
     

File: core/src/main/java/com/alibaba/nacos/core/control/TpsControlConfig.java
Patch:
@@ -30,7 +30,7 @@ public class TpsControlConfig {
      * tps control is enabled.
      * @return true/false.
      */
-    public static final boolean isTpsControlEnabled() {
+    public static boolean isTpsControlEnabled() {
         return true;
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHookTest.java
Patch:
@@ -21,13 +21,15 @@
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.plugin.control.tps.TpsControlManager;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.ArrayList;
 
@@ -63,6 +65,7 @@ public class NacosMonitorPushResultHookTest {
     
     @Before
     public void setUp() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         MetricsMonitor.resetAll();
         serviceInfo.setHosts(new ArrayList<>());
         subscriber.setIp("0.0.0.0");

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTaskTest.java
Patch:
@@ -26,13 +26,15 @@
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.naming.push.v2.NoRequiredRetryException;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.Collections;
 import java.util.Optional;
@@ -79,6 +81,7 @@ public class PushExecuteTaskTest {
     
     @Before
     public void setUp() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         MetricsMonitor.resetAll();
         when(indexesManager.getAllClientsSubscribeService(service)).thenReturn(Collections.singletonList(clientId));
         when(clientManager.getClient(clientId)).thenReturn(client);

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin-default-impl/nacos-default-auth-plugin/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -77,7 +77,7 @@ public UserDetails loadUserByUsername(String username) throws UsernameNotFoundEx
         }
         
         if (user == null) {
-            throw new UsernameNotFoundException(username);
+            throw new UsernameNotFoundException(String.format("User %s not found", username));
         }
         return new NacosUserDetails(user);
     }

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthenticationProviderTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalUserPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/utils/Base64DecodeTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -26,14 +26,15 @@
  * @date 2023/8/8
  */
 public class Base64DecodeTest {
+    
     @Test
     public void testStandardDecode() {
         String origin = "aGVsbG8sbmFjb3MhdGVzdEJhc2U2NGVuY29kZQ==";
         String expectDecodeOrigin = "hello,nacos!testBase64encode";
         byte[] decodeOrigin = Base64Decode.decode(origin);
         Assert.assertArrayEquals(decodeOrigin, expectDecodeOrigin.getBytes());
     }
-
+    
     @Test
     public void testNotStandardDecode() {
         String notStandardOrigin = "SecretKey012345678901234567890123456789012345678901234567890123456789";

File: plugin-default-impl/nacos-default-auth-plugin/src/test/java/com/alibaba/nacos/plugin/auth/impl/utils/PasswordEncoderUtilTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/rule/storage/ExternalRuleStorage.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.ruleactivator;
+package com.alibaba.nacos.plugin.control.rule.storage;
 
 /**
  * external rule storage.

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/rule/storage/RuleStorage.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.ruleactivator;
+package com.alibaba.nacos.plugin.control.rule.storage;
 
 /**
  * rule storage.

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/tps/barrier/LocalSimpleCountRateCounter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.tps.nacos;
+package com.alibaba.nacos.plugin.control.tps.barrier;
 
 import java.util.ArrayList;
 import java.util.List;

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/tps/barrier/LocalSimpleCountRuleBarrier.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.tps.nacos;
+package com.alibaba.nacos.plugin.control.tps.barrier;
 
 import java.util.concurrent.TimeUnit;
 

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/tps/barrier/RateCounter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.tps.nacos;
+package com.alibaba.nacos.plugin.control.tps.barrier;
 
 import java.util.concurrent.TimeUnit;
 

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/tps/barrier/SimpleCountRuleBarrier.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,8 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.tps.nacos;
+package com.alibaba.nacos.plugin.control.tps.barrier;
 
-import com.alibaba.nacos.plugin.control.tps.RuleBarrier;
 import com.alibaba.nacos.plugin.control.tps.TpsMetrics;
 import com.alibaba.nacos.plugin.control.tps.request.BarrierCheckRequest;
 import com.alibaba.nacos.plugin.control.tps.response.TpsCheckResponse;

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/utils/DiskUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.control.ruleactivator;
+package com.alibaba.nacos.plugin.control.utils;
 
 import com.alibaba.nacos.common.utils.ByteUtils;
 import org.apache.commons.io.FileUtils;

File: plugin/control/src/test/java/com/alibaba/nacos/plugin/control/connection/DefaultConnectionControlManagerTest.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.plugin.control.connection;
 
-import com.alibaba.nacos.plugin.control.connection.nacos.NacosConnectionControlManager;
 import com.alibaba.nacos.plugin.control.connection.request.ConnectionCheckRequest;
 import com.alibaba.nacos.plugin.control.connection.response.ConnectionCheckCode;
 import com.alibaba.nacos.plugin.control.connection.response.ConnectionCheckResponse;
@@ -27,9 +26,9 @@
 /**
  * two fixed metrics, total 30, iptotal 15, detail is testa(total-20,iptotal-10),testb(total-10,iptotal-5).
  */
-public class NacosConnectionControlManagerTest {
+public class DefaultConnectionControlManagerTest {
     
-    NacosConnectionControlManager connectionControlManager = new NacosConnectionControlManager();
+    DefaultConnectionControlManager connectionControlManager = new DefaultConnectionControlManager();
     
     @Test
     public void test() {

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -138,7 +138,7 @@
     String SERVER_ADDR_PLACEHOLDER = "${" + PREFIX + SERVER_ADDR + ":}";
     
     /**
-     * The placeholder of endpoint, the value is ${nacos.context-path:}".
+     * The placeholder of endpoint, the value is ${nacos.context-path:}.
      */
     String CONTEXT_PATH_PLACEHOLDER = "${" + PREFIX + CONTEXT_PATH + ":}";
     

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -181,7 +181,7 @@ public String toString() {
     public static final int RESOURCE_NOT_FOUND = -404;
     
     /**
-     * http client error code, ome exceptions that occurred when the use the Nacos RestTemplate and Nacos
+     * http client error code, ome exceptions that occurred when there use the Nacos RestTemplate and Nacos
      * AsyncRestTemplate.
      */
     public static final int HTTP_CLIENT_ERROR_CODE = -500;

File: api/src/main/java/com/alibaba/nacos/api/grpc/auto/Metadata.java
Patch:
@@ -260,7 +260,7 @@ public String getHeadersOrDefault(
     if (key == null) { throw new NullPointerException(); }
     java.util.Map<String, String> map =
         internalGetHeaders().getMap();
-    return map.containsKey(key) ? map.get(key) : defaultValue;
+    return map.getOrDefault(key, defaultValue);
   }
   /**
    * <code>map&lt;string, string&gt; headers = 7;</code>
@@ -797,7 +797,7 @@ public Builder setClientIpBytes(
     }
     private com.google.protobuf.MapField<String, String>
     internalGetMutableHeaders() {
-      onChanged();;
+      onChanged();
       if (headers_ == null) {
         headers_ = com.google.protobuf.MapField.newMapField(
             HeadersDefaultEntryHolder.defaultEntry);

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingResponseCode.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Business response code of naming module
  *
- * <p>Every code stays between 20001 to 29999.
+ * <p>Every code stays between 20001 and 29999.
  *
  * @author nkorange
  * @author 1.2.0

File: api/src/main/java/com/alibaba/nacos/api/selector/Selector.java
Patch:
@@ -64,7 +64,7 @@ public interface Selector<R, C, E> extends Serializable {
     String getType();
     
     /**
-     * Get the select context which usede by {@link #select(Object)}.
+     * Get the select context which used by {@link #select(Object)}.
      *
      * @return selector context type.
      */

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -37,7 +37,7 @@
 @Service
 public class SwitchService {
     
-    public static final String SWITCH_META_DATAID = "com.alibaba.nacos.meta.switch";
+    public static final String SWITCH_META_DATA_ID = "com.alibaba.nacos.meta.switch";
     
     public static final String FIXED_POLLING = "isFixedPolling";
     
@@ -96,7 +96,7 @@ public static void load(String config) {
                 if (!StringUtils.isBlank(line) && !line.startsWith("#")) {
                     String[] array = line.split("=");
                     
-                    if (array == null || array.length != 2) {
+                    if (array.length != 2) {
                         LogUtil.FATAL_LOG.error("corrupt switch record {}", line);
                         continue;
                     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java
Patch:
@@ -102,7 +102,7 @@ public static boolean configDump(ConfigDumpEvent event) {
             ClientIpWhiteList.load(content);
         }
         
-        if (dataId.equals(SwitchService.SWITCH_META_DATAID)) {
+        if (dataId.equals(SwitchService.SWITCH_META_DATA_ID)) {
             SwitchService.load(content);
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -64,7 +64,7 @@ public boolean process(NacosTask task) {
                         ClientIpWhiteList.load(cf.getContent());
                     }
                     
-                    if (cf.getDataId().equals(SwitchService.SWITCH_META_DATAID)) {
+                    if (cf.getDataId().equals(SwitchService.SWITCH_META_DATA_ID)) {
                         SwitchService.load(cf.getContent());
                     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigRowMapperInjector.java
Patch:
@@ -78,7 +78,7 @@ public class ConfigRowMapperInjector {
     static {
         injectConfigRowMapper();
     }
-
+    
     public ConfigRowMapperInjector() {
     }
 

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/SmartSubscriber.java
Patch:
@@ -27,7 +27,7 @@
  * @author zongtanghu
  */
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
-public abstract class SmartSubscriber extends Subscriber {
+public abstract class SmartSubscriber extends Subscriber<Event> {
     
     /**
      * Returns which event type are smart subscriber interested in.

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/DeregisterInstanceTraceEvent.java
Patch:
@@ -20,6 +20,7 @@
 
 /**
  * Naming deregister instance trace event.
+ *
  * @author yanda
  */
 public class DeregisterInstanceTraceEvent extends NamingTraceEvent {
@@ -30,9 +31,9 @@ public class DeregisterInstanceTraceEvent extends NamingTraceEvent {
     
     private final boolean rpc;
     
-    private String instanceIp;
+    private final String instanceIp;
     
-    private int instancePort;
+    private final int instancePort;
     
     public final DeregisterInstanceReason reason;
     

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/DeregisterServiceTraceEvent.java
Patch:
@@ -18,14 +18,15 @@
 
 /**
  * Naming deregister service trace event.
+ *
  * @author yanda
  */
 public class DeregisterServiceTraceEvent extends NamingTraceEvent {
     
     private static final long serialVersionUID = 7358195336881398548L;
     
-    public DeregisterServiceTraceEvent(long eventTime, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public DeregisterServiceTraceEvent(long eventTime, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("DEREGISTER_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/NamingTraceEvent.java
Patch:
@@ -24,11 +24,11 @@
  * @author yanda
  */
 public class NamingTraceEvent extends TraceEvent {
-
+    
     private static final long serialVersionUID = 2923077640400851816L;
     
-    public NamingTraceEvent(String eventType, long eventTime,
-            String serviceNamespace, String serviceGroup, String name) {
+    public NamingTraceEvent(String eventType, long eventTime, String serviceNamespace, String serviceGroup,
+            String name) {
         super(eventType, eventTime, serviceNamespace, serviceGroup, name);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/PushServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming push service trace event.
+ *
  * @author yanda
  */
 public class PushServiceTraceEvent extends NamingTraceEvent {
@@ -55,8 +56,8 @@ public long getServiceLevelAgreementTime() {
     }
     
     public PushServiceTraceEvent(long eventTime, long pushCostTimeForNetWork, long pushCostTimeForAll,
-            long serviceLevelAgreementTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName, int instanceSize) {
+            long serviceLevelAgreementTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName, int instanceSize) {
         super("PUSH_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
         this.instanceSize = instanceSize;

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/RegisterInstanceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming register instance trace event.
+ *
  * @author yanda
  */
 public class RegisterInstanceTraceEvent extends NamingTraceEvent {
@@ -28,9 +29,9 @@ public class RegisterInstanceTraceEvent extends NamingTraceEvent {
     
     private final boolean rpc;
     
-    private String instanceIp;
+    private final String instanceIp;
     
-    private int instancePort;
+    private final int instancePort;
     
     public String getClientIp() {
         return clientIp;

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/RegisterServiceTraceEvent.java
Patch:
@@ -18,14 +18,14 @@
 
 /**
  * Naming deregister service trace event.
+ *
  * @author yanda
  */
 public class RegisterServiceTraceEvent extends NamingTraceEvent {
     
     private static final long serialVersionUID = -8568231862586636388L;
     
-    public RegisterServiceTraceEvent(long eventTime, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public RegisterServiceTraceEvent(long eventTime, String serviceNamespace, String serviceGroup, String serviceName) {
         super("REGISTER_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/SubscribeServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming subscribe service trace event.
+ *
  * @author yanda
  */
 public class SubscribeServiceTraceEvent extends NamingTraceEvent {
@@ -30,8 +31,8 @@ public String getClientIp() {
         return clientIp;
     }
     
-    public SubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public SubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("SUBSCRIBE_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
     }

File: common/src/main/java/com/alibaba/nacos/common/trace/event/naming/UnsubscribeServiceTraceEvent.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * Naming unsubscribe service trace event.
+ *
  * @author yanda
  */
 public class UnsubscribeServiceTraceEvent extends NamingTraceEvent {
@@ -30,8 +31,8 @@ public String getClientIp() {
         return clientIp;
     }
     
-    public UnsubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace,
-            String serviceGroup, String serviceName) {
+    public UnsubscribeServiceTraceEvent(long eventTime, String clientIp, String serviceNamespace, String serviceGroup,
+            String serviceName) {
         super("UNSUBSCRIBE_SERVICE_TRACE_EVENT", eventTime, serviceNamespace, serviceGroup, serviceName);
         this.clientIp = clientIp;
     }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientTlsConfig.java
Patch:
@@ -49,7 +49,7 @@ public static RpcClientTlsConfig properties(Properties properties) {
         }
 
         if (properties.containsKey(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS)) {
-            tlsConfig.setProtocols(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS);
+            tlsConfig.setProtocols(properties.getProperty(RpcConstants.RPC_CLIENT_TLS_PROTOCOLS));
         }
 
         if (properties.containsKey(RpcConstants.RPC_CLIENT_TLS_CIPHERS)) {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -98,7 +98,7 @@ public NamingGrpcClientProxy(String namespaceId, SecurityProxy securityProxy, Se
         labels.put(Constants.APPNAME, AppNameUtils.getAppName());
         this.rpcClient = RpcClientFactory.createClient(uuid, ConnectionType.GRPC, labels,
                 RpcClientTlsConfig.properties(properties.asProperties()));
-        this.redoService = new NamingGrpcRedoService(this);
+        this.redoService = new NamingGrpcRedoService(this, properties);
         NAMING_LOGGER.info("Create naming rpc client for uuid->{}", uuid);
         start(serverListFactory, serviceInfoHolder);
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateService.java
Patch:
@@ -179,7 +179,7 @@ public void run() {
             long delayTime = DEFAULT_DELAY;
             
             try {
-                if (!changeNotifier.isSubscribed(groupName, serviceName, clusters) && !futureMap.containsKey(
+                if (!changeNotifier.isSubscribed(groupName, serviceName) && !futureMap.containsKey(
                         serviceKey)) {
                     NAMING_LOGGER.info("update task is stopped, service:{}, clusters:{}", groupedServiceName, clusters);
                     isCancel = true;

File: client/src/main/java/com/alibaba/nacos/client/selector/SelectorFactory.java
Patch:
@@ -86,7 +86,7 @@ public static NamingSelector newClusterSelector(Collection<String> clusters) {
         }
     }
 
-    private static String getUniqueClusterString(Collection<String> cluster) {
+    public static String getUniqueClusterString(Collection<String> cluster) {
         TreeSet<String> treeSet = new TreeSet<>(cluster);
         return StringUtils.join(treeSet, ",");
     }

File: client/src/test/java/com/alibaba/nacos/client/selector/SelectorManagerTest.java
Patch:
@@ -22,6 +22,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
+import java.util.Set;
 
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNull;
@@ -54,8 +55,8 @@ public void testSubInfo() {
             assertTrue(selectorManager.isSubscribed(subId));
         }
 
-        List<String> subsList = selectorManager.getSubscriptions();
-        for (String subId : subsList) {
+        Set<String> subsSet = selectorManager.getSubscriptions();
+        for (String subId : subsSet) {
             assertTrue(list.contains(subId));
         }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -729,7 +729,7 @@ public void onEvent(Event event) {
                 
                 @Override
                 public Class<? extends Event> subscribeType() {
-                    return ServerlistChangeEvent.class;
+                    return ServerListChangeEvent.class;
                 }
             };
             NotifyCenter.registerSubscriber(subscriber);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListChangeEvent.java
Patch:
@@ -23,5 +23,5 @@
  *
  * @author zongtanghu
  */
-public class ServerlistChangeEvent extends SlowEvent {
+public class ServerListChangeEvent extends SlowEvent {
 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -408,8 +408,8 @@ private void updateIfChanged(List<String> newList) {
         currentServerAddr = iterator.next();
         
         // Using unified event processor, NotifyCenter
-        NotifyCenter.publishEvent(new ServerlistChangeEvent());
-        LOGGER.info("[{}] [update-serverlist] serverlist updated to {}", name, serverUrls);
+        NotifyCenter.publishEvent(new ServerListChangeEvent());
+        LOGGER.info("[{}] [update-serverList] serverList updated to {}", name, serverUrls);
     }
     
     private List<String> getApacheServerList(String url, String name) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -36,7 +36,6 @@
 import com.google.common.collect.Lists;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-import org.springframework.beans.factory.annotation.Autowired;
 
 import java.io.IOException;
 import java.util.ArrayList;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigRowMapperInjector.java
Patch:
@@ -78,6 +78,7 @@ public class ConfigRowMapperInjector {
     static {
         injectConfigRowMapper();
     }
+
     public ConfigRowMapperInjector() {
     }
 

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/ConfigInfoMapperByDerbyTest.java
Patch:
@@ -162,7 +162,7 @@ public void testFindChangeConfig() {
         MapperResult mapperResult = configInfoMapperByDerby.findChangeConfig(context);
         Assert.assertEquals(mapperResult.getSql(),
                 "SELECT id, data_id, group_id, tenant_id, app_name, content, gmt_modified, encrypted_data_key FROM config_info "
-                        + "WHERE gmt_modified >= ? and id > ? order by id  limit ? ");
+                        + "WHERE gmt_modified >= ? and id > ? order by id OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY");
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(), new Object[] {startTime, lastMaxId, pageSize});
     }
     

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerbyTest.java
Patch:
@@ -78,7 +78,7 @@ public void testFindDeletedConfig() {
         MapperResult mapperResult = historyConfigInfoMapperByDerby.findDeletedConfig(context);
         Assert.assertEquals(mapperResult.getSql(),
                 "SELECT data_id, group_id, tenant_id,gmt_modified,nid FROM his_config_info WHERE op_type = 'D' "
-                        + "AND gmt_modified >= ? and nid > ? order by nid limit ? ");
+                        + "AND gmt_modified >= ? and nid > ? order by nid OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY");
         
         Assert.assertArrayEquals(mapperResult.getParamList().toArray(), new Object[] {startTime, lastMaxId, pageSize});
     }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeListenContext.java
Patch:
@@ -143,6 +143,9 @@ public synchronized void clearContextForConnectionId(final String connectionId)
             Set<String> connectionIds = groupKeyContext.get(groupKey.getKey());
             if (CollectionUtils.isNotEmpty(connectionIds)) {
                 connectionIds.remove(connectionId);
+                if (connectionIds.isEmpty()) {
+                    groupKeyContext.remove(groupKey.getKey());
+                }
             } else {
                 groupKeyContext.remove(groupKey.getKey());
             }

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -345,7 +345,6 @@ class DataChangeTask implements Runnable {
         @Override
         public void run() {
             try {
-                ConfigCacheService.getContentBetaMd5(groupKey);
                 for (Iterator<ClientLongPolling> iter = allSubs.iterator(); iter.hasNext(); ) {
                     ClientLongPolling clientSub = iter.next();
                     if (clientSub.clientMd5Map.containsKey(groupKey)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoBetaPersistServiceImpl.java
Patch:
@@ -277,7 +277,7 @@ public ConfigInfoBetaWrapper findConfigInfo4Beta(final String dataId, final Stri
                 TableConstant.CONFIG_INFO_BETA);
         final String sql = configInfoBetaMapper.select(
                 Arrays.asList("id", "data_id", "group_id", "tenant_id", "app_name", "content", "beta_ips",
-                        "encrypted_data_key"), Arrays.asList("data_id", "group_id", "tenant_id"));
+                        "encrypted_data_key", "gmt_modified"), Arrays.asList("data_id", "group_id", "tenant_id"));
         
         return databaseOperate.queryOne(sql, new Object[] {dataId, group, tenantTmp},
                 CONFIG_INFO_BETA_WRAPPER_ROW_MAPPER);

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImpl.java
Patch:
@@ -718,7 +718,7 @@ public ConfigInfoWrapper findConfigInfo(final String dataId, final String group,
                 TableConstant.CONFIG_INFO);
         final String sql = configInfoMapper.select(
                 Arrays.asList("id", "data_id", "group_id", "tenant_id", "app_name", "content", "md5", "type",
-                        "encrypted_data_key"), Arrays.asList("data_id", "group_id", "tenant_id"));
+                        "encrypted_data_key", "gmt_modified"), Arrays.asList("data_id", "group_id", "tenant_id"));
         final Object[] args = new Object[] {dataId, group, tenantTmp};
         return databaseOperate.queryOne(sql, args, CONFIG_INFO_WRAPPER_ROW_MAPPER);
         
@@ -1353,7 +1353,7 @@ public List<ConfigInfoWrapper> queryConfigInfoByNamespace(String tenantId) {
         ConfigInfoMapper configInfoMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                 TableConstant.CONFIG_INFO);
         final String sql = configInfoMapper.select(
-                Arrays.asList("data_id", "group_id", "tenant_id", "app_name", "type"),
+                Arrays.asList("data_id", "group_id", "tenant_id", "app_name", "type", "gmt_modified"),
                 Collections.singletonList("tenant_id"));
         return databaseOperate.queryMany(sql, new Object[] {tenantTmp}, CONFIG_INFO_WRAPPER_ROW_MAPPER);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoTagPersistServiceImpl.java
Patch:
@@ -270,8 +270,8 @@ public ConfigInfoTagWrapper findConfigInfo4Tag(final String dataId, final String
         ConfigInfoTagMapper configInfoTagMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                 TableConstant.CONFIG_INFO_TAG);
         final String sql = configInfoTagMapper.select(
-                Arrays.asList("id", "data_id", "group_id", "tenant_id", "tag_id", "app_name", "content"),
-                Arrays.asList("data_id", "group_id", "tenant_id", "tag_id"));
+                Arrays.asList("id", "data_id", "group_id", "tenant_id", "tag_id", "app_name", "content",
+                        "gmt_modified"), Arrays.asList("data_id", "group_id", "tenant_id", "tag_id"));
         
         return databaseOperate.queryOne(sql, new Object[] {dataId, group, tenantTmp, tagTmp},
                 CONFIG_INFO_TAG_WRAPPER_ROW_MAPPER);

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalConfigInfoBetaPersistServiceImpl.java
Patch:
@@ -251,7 +251,7 @@ public ConfigInfoBetaWrapper findConfigInfo4Beta(final String dataId, final Stri
                     TableConstant.CONFIG_INFO_BETA);
             return this.jt.queryForObject(configInfoBetaMapper.select(
                             Arrays.asList("id", "data_id", "group_id", "tenant_id", "app_name", "content", "beta_ips",
-                                    "encrypted_data_key"), Arrays.asList("data_id", "group_id", "tenant_id")),
+                                    "encrypted_data_key", "gmt_modified"), Arrays.asList("data_id", "group_id", "tenant_id")),
                     new Object[] {dataId, group, tenantTmp}, CONFIG_INFO_BETA_WRAPPER_ROW_MAPPER);
         } catch (EmptyResultDataAccessException e) { // Indicates that the data does not exist, returns null.
             return null;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalConfigInfoTagPersistServiceImpl.java
Patch:
@@ -240,8 +240,8 @@ public ConfigInfoTagWrapper findConfigInfo4Tag(final String dataId, final String
             ConfigInfoTagMapper configInfoTagMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                     TableConstant.CONFIG_INFO_TAG);
             return this.jt.queryForObject(configInfoTagMapper.select(
-                            Arrays.asList("id", "data_id", "group_id", "tenant_id", "tag_id", "app_name", "content"),
-                            Arrays.asList("data_id", "group_id", "tenant_id", "tag_id")),
+                            Arrays.asList("id", "data_id", "group_id", "tenant_id", "tag_id", "app_name", "content",
+                                    "gmt_modified"), Arrays.asList("data_id", "group_id", "tenant_id", "tag_id")),
                     new Object[] {dataId, group, tenantTmp, tagTmp}, CONFIG_INFO_TAG_WRAPPER_ROW_MAPPER);
         } catch (EmptyResultDataAccessException e) { // Indicates that the data does not exist, returns null.
             return null;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientDataProcessor.java
Patch:
@@ -34,6 +34,7 @@
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientEvent;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
+import com.alibaba.nacos.naming.core.v2.event.metadata.MetadataEvent;
 import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.pojo.BatchInstanceData;
 import com.alibaba.nacos.naming.core.v2.pojo.BatchInstancePublishInfo;
@@ -181,6 +182,8 @@ private void upgradeClient(Client client, ClientSyncData clientSyncData) {
                 client.addServiceInstance(singleton, instancePublishInfo);
                 NotifyCenter.publishEvent(
                         new ClientOperationEvent.ClientRegisterServiceEvent(singleton, client.getClientId()));
+                NotifyCenter.publishEvent(
+                        new MetadataEvent.InstanceMetadataEvent(singleton, instancePublishInfo.getMetadataId(), false));
             }
         }
         for (Service each : client.getAllPublishedService()) {

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -141,7 +141,6 @@ protected int getMaxInboundMessageSize() {
     protected List<ServerInterceptor> getSeverInterceptors() {
         List<ServerInterceptor> result = new LinkedList<>();
         result.add(new GrpcConnectionInterceptor());
-        result.add(new GrpcServerParamCheckInterceptor());
         return result;
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -228,7 +228,7 @@ public int getCurrentConnectionCount() {
     }
     
     /**
-     * regresh connection active time.
+     * refresh connection active time.
      *
      * @param connectionId connectionId.
      */
@@ -259,7 +259,7 @@ public void loadCount(int loadClient, String redirectAddress) {
     }
     
     /**
-     * send load request to spefic connetionId.
+     * send load request to specific connectionId.
      *
      * @param connectionId    connection id of client.
      * @param redirectAddress server address to redirect.

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -400,7 +400,7 @@ private static boolean startsWith(final CharSequence str, final CharSequence pre
         }
         if (ignoreCase) {
             String lowerCaseStr = str.toString().toLowerCase();
-            String lowerCasePrefix = str.toString().toLowerCase();
+            String lowerCasePrefix = prefix.toString().toLowerCase();
             return lowerCaseStr.startsWith(lowerCasePrefix);
         } else {
             return str.toString().startsWith(prefix.toString());

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -716,7 +716,7 @@ public void asyncRequest(Request request, RequestCallBack callback) throws Nacos
             try {
                 if (this.currentConnection == null || !isRunning()) {
                     waitReconnect = true;
-                    throw new NacosException(NacosException.CLIENT_INVALID_PARAM, "Client not connected.");
+                    throw new NacosException(NacosException.CLIENT_DISCONNECT, "Client not connected.");
                 }
                 this.currentConnection.asyncRequest(request, callback);
                 return;
@@ -766,7 +766,7 @@ public RequestFuture requestFuture(Request request) throws NacosException {
             try {
                 if (this.currentConnection == null || !isRunning()) {
                     waitReconnect = true;
-                    throw new NacosException(NacosException.CLIENT_INVALID_PARAM, "Client not connected.");
+                    throw new NacosException(NacosException.CLIENT_DISCONNECT, "Client not connected.");
                 }
                 return this.currentConnection.requestFuture(request);
             } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifier.java
Patch:
@@ -18,9 +18,9 @@
 
 import com.alibaba.nacos.api.naming.listener.AbstractEventListener;
 import com.alibaba.nacos.api.naming.listener.EventListener;
-import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
+import com.alibaba.nacos.client.naming.listener.NamingChangeEvent;
 import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
@@ -130,8 +130,8 @@ public void onEvent(InstancesChangeEvent event) {
     
     private com.alibaba.nacos.api.naming.listener.Event transferToNamingEvent(
             InstancesChangeEvent instancesChangeEvent) {
-        return new NamingEvent(instancesChangeEvent.getServiceName(), instancesChangeEvent.getGroupName(),
-                instancesChangeEvent.getClusters(), instancesChangeEvent.getHosts());
+        return new NamingChangeEvent(instancesChangeEvent.getServiceName(), instancesChangeEvent.getGroupName(),
+                instancesChangeEvent.getClusters(), instancesChangeEvent.getHosts(), instancesChangeEvent.getInstancesDiff());
     }
     
     @Override

File: client/src/test/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifierTest.java
Patch:
@@ -49,7 +49,9 @@ public void testRegisterListener() {
         List<Instance> hosts = new ArrayList<>();
         Instance ins = new Instance();
         hosts.add(ins);
-        InstancesChangeEvent event = new InstancesChangeEvent(eventScope, name, group, clusters, hosts);
+        InstancesDiff diff = new InstancesDiff();
+        diff.setAddedInstances(hosts);
+        InstancesChangeEvent event = new InstancesChangeEvent(eventScope, name, group, clusters, hosts, diff);
         Assert.assertEquals(true, instancesChangeNotifier.scopeMatches(event));
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxy.java
Patch:
@@ -91,13 +91,12 @@ public interface NamingClientProxy extends Closeable {
      * @param serviceName service name
      * @param groupName   group name
      * @param clusters    clusters
-     * @param udpPort     udp port
      * @param healthyOnly healthy only
      * @return service info
      * @throws NacosException nacos exception
      */
-    ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
-            boolean healthyOnly) throws NacosException;
+    ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, boolean healthyOnly)
+            throws NacosException;
     
     /**
      * Query Service.

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -127,7 +127,7 @@ public void updateInstance(String serviceName, String groupName, Instance instan
         }
         
         @Override
-        public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
+        public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters,
                 boolean healthyOnly) throws NacosException {
             return null;
         }

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxyTest.java
Patch:
@@ -339,7 +339,7 @@ public void testQueryInstancesOfService() throws Exception {
         ServiceInfo info = new ServiceInfo(GROUP_NAME + "@@" + SERVICE_NAME + "@@" + CLUSTERS);
         res.setServiceInfo(info);
         when(this.rpcClient.request(any())).thenReturn(res);
-        ServiceInfo actual = client.queryInstancesOfService(SERVICE_NAME, GROUP_NAME, CLUSTERS, 0, false);
+        ServiceInfo actual = client.queryInstancesOfService(SERVICE_NAME, GROUP_NAME, CLUSTERS, false);
         Assert.assertEquals(info, actual);
     }
     

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/DistroConfig.java
Patch:
@@ -131,7 +131,7 @@ public void setLoadDataTimeoutMillis(long loadDataTimeoutMillis) {
     protected String printConfig() {
         return "DistroConfig{" + "syncDelayMillis=" + syncDelayMillis + ", syncTimeoutMillis=" + syncTimeoutMillis
                 + ", syncRetryDelayMillis=" + syncRetryDelayMillis + ", verifyIntervalMillis=" + verifyIntervalMillis
-                + ", verifyTimeoutMillis=" + verifyTimeoutMillis + ", loadDataRetryDelayMillis="
-                + loadDataRetryDelayMillis + '}';
+                + ", verifyTimeoutMillis=" + verifyTimeoutMillis + ", loadDataRetryDelayMillis=" + loadDataRetryDelayMillis
+                + ", loadDataTimeoutMillis=" + loadDataTimeoutMillis + '}';
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/paramcheck/ParamCheckRules.java
Patch:
@@ -37,7 +37,7 @@ public class ParamCheckRules {
     
     public static final int MAX_SERVICE_NAME_LENGTH = 512;
     
-    public static final String SERVICE_NAME_PATTERN_STRING = "^(?!@).((?!@@)[^\\u4E00-\\u9FA5])*$";
+    public static final String SERVICE_NAME_PATTERN_STRING = "^(?!@).((?!@@)[^\\u4E00-\\u9FA5\\s])*$";
     
     public static final int MAX_GROUP_LENGTH = 128;
     
@@ -49,7 +49,7 @@ public class ParamCheckRules {
     
     public static final int MAX_IP_LENGTH = 128;
     
-    public static final String IP_PATTERN_STRING = "^[^\\u4E00-\\u9FA5]*$";
+    public static final String IP_PATTERN_STRING = "^[^\\u4E00-\\u9FA5\\s]*$";
     
     public static final int MAX_PORT = 65535;
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImpl.java
Patch:
@@ -118,7 +118,7 @@ public void registerInstance(Service service, Instance instance, String clientId
         
         try {
             protocol.write(writeRequest);
-            Loggers.RAFT.info("Client registered. service={}, clientId={}, instance={}", service, instance, clientId);
+            Loggers.RAFT.info("Client registered. service={}, clientId={}, instance={}", service, clientId, instance);
         } catch (Exception e) {
             throw new NacosRuntimeException(NacosException.SERVER_ERROR, e);
         }
@@ -165,7 +165,7 @@ public void deregisterInstance(Service service, Instance instance, String client
         
         try {
             protocol.write(writeRequest);
-            Loggers.RAFT.info("Client unregistered. service={}, clientId={}, instance={}", service, instance, clientId);
+            Loggers.RAFT.info("Client unregistered. service={}, clientId={}, instance={}", service, clientId, instance);
         } catch (Exception e) {
             throw new NacosRuntimeException(NacosException.SERVER_ERROR, e);
         }

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoAggrMapperByMySql.java
Patch:
@@ -35,8 +35,8 @@ public class ConfigInfoAggrMapperByMySql extends AbstractMapper implements Confi
     
     @Override
     public MapperResult findConfigInfoAggrByPageFetchRows(MapperContext context) {
-        Integer startRow =  context.getStartRow();
-        Integer pageSize =  context.getPageSize();
+        int startRow =  context.getStartRow();
+        int pageSize =  context.getPageSize();
         String dataId = (String) context.getWhereParameter(FieldConstant.DATA_ID);
         String groupId = (String) context.getWhereParameter(FieldConstant.GROUP_ID);
         String tenantId = (String) context.getWhereParameter(FieldConstant.TENANT_ID);

File: common/src/main/java/com/alibaba/nacos/common/paramcheck/ParamCheckRules.java
Patch:
@@ -31,15 +31,15 @@ public class ParamCheckRules {
     
     public static final String NAMESPACE_ID_PATTERN_STRING = "^[\\w-]+";
     
-    public static final int MAX_DATA_ID_LENGTH = 512;
+    public static final int MAX_DATA_ID_LENGTH = 256;
     
     public static final String DATA_ID_PATTERN_STRING = "^[a-zA-Z0-9-_:\\.]*$";
     
     public static final int MAX_SERVICE_NAME_LENGTH = 512;
     
     public static final String SERVICE_NAME_PATTERN_STRING = "^(?!@).((?!@@)[^\\u4E00-\\u9FA5])*$";
     
-    public static final int MAX_GROUP_LENGTH = 64;
+    public static final int MAX_GROUP_LENGTH = 128;
     
     public static final String GROUP_PATTERN_STRING = "^[a-zA-Z0-9-_:\\.]*$";
     

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/HttpParamExtractorManagerTest.java
Patch:
@@ -43,6 +43,6 @@ public void testGetExtractor() throws Exception {
         request.setRequestURI("/nacos/v1/ns/instance");
         request.setMethod(HttpMethod.POST);
         AbstractHttpParamExtractor extractor = paramExtractorManager.getExtractor(request.getRequestURI(), request.getMethod(), "naming");
-        extractor.extractParamAndCheck(request);
+        extractor.extractParam(request);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/RpcParamExtractorManagerTest.java
Patch:
@@ -40,6 +40,6 @@ public void testGetExtractor() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         ConfigQueryRequest request = new ConfigQueryRequest();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(request.getClass().getSimpleName());
-        extractor.extractParamAndCheck(request);
+        extractor.extractParam(request);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/BatchInstanceRequestParamExtractorTest.java
Patch:
@@ -41,6 +41,6 @@ public void testExtractParamAndCheck() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), BatchInstanceRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigBatchListenRequestParamExtractorTest.java
Patch:
@@ -41,6 +41,6 @@ public void testExtractParamAndCheck() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), ConfigBatchListenRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/InstanceRequestParamExtractorTest.java
Patch:
@@ -41,6 +41,6 @@ public void testExtractParamAndCheck() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), InstanceRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceListRequestParamExtractorTest.java
Patch:
@@ -41,6 +41,6 @@ public void testExtractParamAndCheck() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), ServiceListRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceQueryRequestParamExtractorTest.java
Patch:
@@ -41,6 +41,6 @@ public void testExtractParamAndCheck() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), ServiceQueryRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/SubscribeServiceRequestParamExtractorTest.java
Patch:
@@ -41,7 +41,7 @@ public void testExtractParamAndCheck() throws Exception {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), SubscribeServiceRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
     
 }
\ No newline at end of file

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/AbstractInstanceOperate_ITCase.java
Patch:
@@ -351,7 +351,7 @@ public void regServiceWithTTL() throws Exception {
     public void registerEphemeralInstanceWithInvalidClusterName() throws Exception {
         expectedException.expect(Exception.class);
         expectedException.expectMessage(
-                "Param 'cluster' is illegal, Chinese characters and ',' should not appear in the param");
+                "Param 'cluster' is illegal, illegal characters should not appear in the param.");
         
         String serviceName = NamingBase.randomDomainName();
         Instance instance = new Instance();
@@ -376,7 +376,7 @@ public void registerEphemeralInstanceWithInvalidClusterName() throws Exception {
     public void registerPersistentInstanceWithInvalidClusterName() throws Exception {
         expectedException.expect(NacosException.class);
         expectedException.expectMessage(
-                "Param 'cluster' is illegal, Chinese characters and ',' should not appear in the param");
+                "Param 'cluster' is illegal, illegal characters should not appear in the param.");
         
         String serviceName = NamingBase.randomDomainName();
         Instance instance = new Instance();

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -298,7 +298,7 @@ public List<Instance> selectInstances(String serviceName, String groupName, List
         String clusterString = StringUtils.join(clusters, ",");
         if (subscribe) {
             serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
-            if (null == serviceInfo) {
+            if (null == serviceInfo || !clientProxy.isSubscribed(serviceName, groupName, clusterString)) {
                 serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
             }
         } else {
@@ -368,7 +368,7 @@ public Instance selectOneHealthyInstance(String serviceName, String groupName, L
         String clusterString = StringUtils.join(clusters, ",");
         if (subscribe) {
             ServiceInfo serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
-            if (null == serviceInfo) {
+            if (null == serviceInfo || !clientProxy.isSubscribed(serviceName, groupName, clusterString)) {
                 serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
             }
             return Balancer.RandomByWeight.selectHost(serviceInfo);

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -832,6 +832,7 @@ protected Response handleServerRequest(final Request request) {
             } catch (Exception e) {
                 LoggerUtils.printIfInfoEnabled(LOGGER, "[{}] HandleServerRequest:{}, errorMessage = {}",
                         rpcClientConfig.name(), serverRequestHandler.getClass().getName(), e.getMessage());
+                throw e;
             }
             
         }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthConfig.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.plugin.auth.impl.authenticate.AuthenticationNamagerDelegator;
+import com.alibaba.nacos.plugin.auth.impl.authenticate.AuthenticationManagerDelegator;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.DefaultAuthenticationManager;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.IAuthenticationManager;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.LdapAuthenticationManager;
@@ -161,7 +161,7 @@ public PasswordEncoder passwordEncoder() {
     public IAuthenticationManager authenticationManager(
             ObjectProvider<LdapAuthenticationManager> ldapAuthenticatoinManagerObjectProvider,
             ObjectProvider<DefaultAuthenticationManager> defaultAuthenticationManagers, AuthConfigs authConfigs) {
-        return new AuthenticationNamagerDelegator(defaultAuthenticationManagers,
+        return new AuthenticationManagerDelegator(defaultAuthenticationManagers,
                 ldapAuthenticatoinManagerObjectProvider, authConfigs);
     }
     

File: client/src/test/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateServiceTest.java
Patch:
@@ -54,7 +54,7 @@ public void testScheduleUpdateIfAbsent() throws InterruptedException, NacosExcep
                 notifyer);
         
         serviceInfoUpdateService.scheduleUpdateIfAbsent("aa", "bb", "cc");
-        TimeUnit.SECONDS.sleep(2);
+        TimeUnit.MILLISECONDS.sleep(1500);
         Mockito.verify(proxy).queryInstancesOfService(serviceName, group, clusters, 0, false);
     }
     

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/NacosConfigServiceComTlsGrpcClient_CITCase.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.client.config.NacosConfigService;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
 import com.alibaba.nacos.common.remote.client.RpcConstants;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.*;
 import org.junit.runner.RunWith;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/NacosConfigServiceNoComTlsGrpcClient_CITCase.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.client.config.NacosConfigService;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
 import com.alibaba.nacos.common.remote.client.RpcConstants;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/NacosConfigV2MutualAuth_CITCase.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.client.config.NacosConfigService;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
 import com.alibaba.nacos.common.remote.client.RpcConstants;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.After;
 import org.junit.Assert;

File: test/core-test/src/test/java/com/alibaba/nacos/test/client/ConfigIntegrationV1ServerNonCompatibility_CITCase.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import com.alibaba.nacos.common.remote.client.RpcClientFactory;
 import com.alibaba.nacos.common.remote.client.RpcClientTlsConfig;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import com.alibaba.nacos.test.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/core-test/src/test/java/com/alibaba/nacos/test/client/ConfigIntegrationV2MutualAuth_CITCase.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import com.alibaba.nacos.common.remote.client.RpcClientFactory;
 import com.alibaba.nacos.common.remote.client.RpcClientTlsConfig;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import com.alibaba.nacos.test.ConfigCleanUtils;
 import org.junit.*;
 import org.junit.runner.RunWith;

File: test/core-test/src/test/java/com/alibaba/nacos/test/client/ConfigIntegrationV3_CITCase.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import com.alibaba.nacos.common.remote.client.RpcClientFactory;
 import com.alibaba.nacos.common.remote.client.RpcClientTlsConfig;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.test.ConfigCleanUtils;
 import org.junit.*;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/NamingCompatibilityServiceTls_ITCase.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/NamingTlsServiceAndMutualAuth_ITCase.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.common.remote.client.RpcConstants;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.FixMethodOrder;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/NamingTlsServiceTls_ITCase.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.common.remote.client.RpcConstants;
-import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
+import com.alibaba.nacos.core.remote.tls.RpcServerTlsConfig;
 import org.junit.Assert;
 import org.junit.FixMethodOrder;
 import org.junit.Ignore;

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -67,7 +67,7 @@ public static boolean isAggrDataId(String dataId) {
      */
     public static void load(String content) {
         if (StringUtils.isBlank(content)) {
-            FATAL_LOG.error("aggr dataId whitelist is blank.");
+            FATAL_LOG.warn("aggr dataId whitelist is blank.");
             return;
         }
         DEFAULT_LOG.warn("[aggr-dataIds] {}", content);

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -85,7 +85,7 @@ public static String getSwitchString(String key, String defaultValue) {
      */
     public static void load(String config) {
         if (StringUtils.isBlank(config)) {
-            FATAL_LOG.error("switch config is blank.");
+            FATAL_LOG.warn("switch config is blank.");
             return;
         }
         FATAL_LOG.warn("[switch-config] {}", config);

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/AbstractInstanceOperate_ITCase.java
Patch:
@@ -376,7 +376,7 @@ public void registerEphemeralInstanceWithInvalidClusterName() throws Exception {
     public void registerPersistentInstanceWithInvalidClusterName() throws Exception {
         expectedException.expect(NacosException.class);
         expectedException.expectMessage(
-                "Instance 'clusterName' should be characters with only 0-9a-zA-Z-. (current: cluster1,cluster2)");
+                "Param 'cluster' is illegal, Chinese characters and ',' should not appear in the param");
         
         String serviceName = NamingBase.randomDomainName();
         Instance instance = new Instance();

File: core/src/main/java/com/alibaba/nacos/core/remote/BaseRpcServer.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -87,7 +87,7 @@ public ConnectionType getConnectionType() {
     @Override
     public void startServer() throws Exception {
         final MutableHandlerRegistry handlerRegistry = new MutableHandlerRegistry();
-        addServices(handlerRegistry, new GrpcConnectionInterceptor());
+        addServices(handlerRegistry, new GrpcConnectionInterceptor(), new GrpcServerParamCheckInterceptor());
         NettyServerBuilder builder = NettyServerBuilder.forPort(getServicePort()).executor(getRpcExecutor());
         
         if (rpcServerTlsConfig.getEnableTls()) {

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/AbstractInstanceOperate_ITCase.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -349,9 +349,9 @@ public void regServiceWithTTL() throws Exception {
      */
     @Test
     public void registerEphemeralInstanceWithInvalidClusterName() throws Exception {
-        expectedException.expect(NacosException.class);
+        expectedException.expect(Exception.class);
         expectedException.expectMessage(
-                "Instance 'clusterName' should be characters with only 0-9a-zA-Z-. (current: cluster1,cluster2)");
+                "Param 'cluster' is illegal, Chinese characters and ',' should not appear in the param");
         
         String serviceName = NamingBase.randomDomainName();
         Instance instance = new Instance();

File: address/src/test/java/com/alibaba/nacos/address/component/AddressServerGeneratorManagerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.component;
 
 import com.alibaba.nacos.address.constant.AddressServerConstants;
-import com.alibaba.nacos.naming.core.Instance;
+import com.alibaba.nacos.api.naming.pojo.Instance;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -67,7 +67,7 @@ public void testGenerateInstancesByIps() {
     
     @Test
     public void testGenerateResponseIps() {
-        final List<Instance> instanceList = new ArrayList<>();
+        final List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList = new ArrayList<>();
         Instance instance1 = new Instance();
         instance1.setIp("192.168.3.1");
         instance1.setPort(8848);

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -75,7 +75,7 @@ public class PropertyKeyConst {
     
     public static final String NAMING_PUSH_EMPTY_PROTECTION = "namingPushEmptyProtection";
     
-    public static final String PUSH_RECEIVER_UDP_PORT = "push.receiver.udp.port";
+    public static final String NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE = "namingAsyncQuerySubscribeService";
     
     /**
      * Get the key value of some variable value from the system property.

File: api/src/main/java/com/alibaba/nacos/api/SystemPropertyKeyConst.java
Patch:
@@ -27,8 +27,6 @@ public interface SystemPropertyKeyConst {
     
     String NAMING_SERVER_PORT = "nacos.naming.exposed.port";
     
-    String NAMING_WEB_CONTEXT = "nacos.naming.web.context";
-    
     /**
      * In the cloud (Alibaba Cloud or other cloud vendors) environment, whether to enable namespace resolution in the
      * cloud environment.

File: api/src/main/java/com/alibaba/nacos/api/ability/ClientAbilities.java
Patch:
@@ -28,6 +28,7 @@
  * @author liuzunfei
  * @version $Id: ClientAbilities.java, v 0.1 2021年01月24日 00:09 AM liuzunfei Exp $
  */
+@Deprecated
 public class ClientAbilities implements Serializable {
     
     private static final long serialVersionUID = -3590789441404549261L;

File: api/src/main/java/com/alibaba/nacos/api/ability/ServerAbilities.java
Patch:
@@ -29,6 +29,7 @@
  * @author liuzunfei
  * @version $Id: ServerAbilities.java, v 0.1 2021年01月24日 00:09 AM liuzunfei Exp $
  */
+@Deprecated
 public class ServerAbilities implements Serializable {
     
     private static final long serialVersionUID = -2120543002911304171L;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -25,6 +25,7 @@
 import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * Instance.
@@ -209,7 +210,7 @@ public int hashCode() {
     }
     
     private static boolean strEquals(final String str1, final String str2) {
-        return str1 == null ? str2 == null : str1.equals(str2);
+        return Objects.equals(str1, str2);
     }
     
     public long getInstanceHeartBeatInterval() {

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/response/InstanceResponse.java
Patch:
@@ -38,4 +38,7 @@ public void setType(String type) {
         this.type = type;
     }
     
+    public String getType() {
+        return type;
+    }
 }

File: api/src/main/java/com/alibaba/nacos/api/selector/AbstractCmdbSelector.java
Patch:
@@ -34,6 +34,8 @@
  */
 public abstract class AbstractCmdbSelector<T extends Instance> implements Selector<List<T>, CmdbContext<T>, String> {
     
+    private static final long serialVersionUID = 56587385358330901L;
+    
     /**
      * the labels expression.
      */

File: auth/src/main/java/com/alibaba/nacos/auth/GrpcProtocolAuthService.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.Map;
 
 /**
- * Auth Service for Http protocol.
+ * Auth Service for Grpc protocol.
  *
  * @author xiweng.yy
  */

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/IdentifyConstants.java
Patch:
@@ -27,6 +27,8 @@ public class IdentifyConstants {
     
     public static final String SECRET_KEY = "secretKey";
     
+    public static final String SECURITY_TOKEN_HEADER = "Spas-SecurityToken";
+    
     public static final String TENANT_ID = "tenantId";
     
     public static final String PROPERTIES_FILENAME = "spas.properties";

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.impl.ConfigHttpClientManager;
 import com.alibaba.nacos.client.config.impl.ServerListManager;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.ContextPathUtil;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
@@ -242,7 +243,7 @@ public ServerHttpAgent(ServerListManager mgr, Properties properties) {
     }
     
     public ServerHttpAgent(Properties properties) throws NacosException {
-        this.serverListMgr = new ServerListManager(properties);
+        this.serverListMgr = new ServerListManager(NacosClientProperties.PROTOTYPE.derive(properties));
     }
     
     @Override
@@ -275,6 +276,7 @@ public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         LOGGER.info("{} do shutdown begin", className);
         ConfigHttpClientManager.getInstance().shutdown();
+        serverListMgr.shutdown();
         LOGGER.info("{} do shutdown stop", className);
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/config/utils/JvmUtil.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.config.utils;
 
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.LogUtils;
 import org.slf4j.Logger;
 
@@ -46,7 +47,7 @@ public static Boolean isMultiInstance() {
     private static final String DEFAULT_IS_MULTI_INSTANCE = "false";
     
     static {
-        String multiDeploy = System.getProperty(IS_MULTI_INSTANCE_PROPERTY, DEFAULT_IS_MULTI_INSTANCE);
+        String multiDeploy = NacosClientProperties.PROTOTYPE.getProperty(IS_MULTI_INSTANCE_PROPERTY, DEFAULT_IS_MULTI_INSTANCE);
         if (TRUE.equals(multiDeploy)) {
             isMultiInstance = true;
         }

File: client/src/main/java/com/alibaba/nacos/client/constant/Constants.java
Patch:
@@ -35,7 +35,7 @@ public static class SysEnv {
         
         public static final String JM_SNAPSHOT_PATH = "JM.SNAPSHOT.PATH";
         
-        public static final String NACOS_ENVS_SEARCH = "nacos.envs.search";
+        public static final String NACOS_ENV_FIRST = "nacos.env.first";
         
     }
     

File: client/src/main/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLogging.java
Patch:
@@ -46,6 +46,8 @@ public class Log4J2NacosLogging extends AbstractNacosLogging {
     
     private static final String NACOS_LOGGER_PREFIX = "com.alibaba.nacos";
     
+    private static final String NACOS_LOG4J2_PLUGIN_PACKAGE = "com.alibaba.nacos.client.logging.log4j2";
+    
     private final String location = getLocation(NACOS_LOG4J2_LOCATION);
     
     @Override
@@ -59,6 +61,7 @@ public void loadConfiguration() {
         
         // load and start nacos configuration
         Configuration configuration = loadConfiguration(loggerContext, location);
+        configuration.getPluginPackages().add(NACOS_LOG4J2_PLUGIN_PACKAGE);
         configuration.start();
         
         // append loggers and appenders to contextConfiguration

File: client/src/main/java/com/alibaba/nacos/client/utils/ValidatorUtils.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 
-import java.util.Properties;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -32,7 +32,7 @@ public final class ValidatorUtils {
     
     private static final Pattern CONTEXT_PATH_MATCH = Pattern.compile("(\\/)\\1+");
     
-    public static void checkInitParam(Properties properties) throws NacosException {
+    public static void checkInitParam(NacosClientProperties properties) throws NacosException {
         checkContextPath(properties.getProperty(PropertyKeyConst.CONTEXT_PATH));
     }
     

File: client/src/test/java/com/alibaba/nacos/client/config/NacosConfigServiceTest.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.client.config.impl.ConfigTransportClient;
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
 import com.alibaba.nacos.client.config.impl.ServerListManager;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;
@@ -101,7 +102,8 @@ public void receiveConfigInfo(String configInfo) {
         response.setContent(content);
         response.setConfigType("bb");
         Mockito.when(mockWoker.getServerConfig(dataId, group, "", timeout, false)).thenReturn(response);
-        Mockito.when(mockWoker.getAgent()).thenReturn(new ConfigTransportClient(new Properties(), new ServerListManager()) {
+        final NacosClientProperties properties = NacosClientProperties.PROTOTYPE.derive(new Properties());
+        Mockito.when(mockWoker.getAgent()).thenReturn(new ConfigTransportClient(properties, new ServerListManager()) {
             @Override
             public void startInternal() throws NacosException {
                 // NOOP

File: client/src/test/java/com/alibaba/nacos/client/config/impl/CacheDataTest.java
Patch:
@@ -53,15 +53,15 @@ public void testGetter() {
         Assert.assertTrue(cacheData1.isInitializing());
         Assert.assertNull(cacheData1.getContent());
         Assert.assertEquals(0, cacheData1.getTaskId());
-        Assert.assertFalse(cacheData1.isSyncWithServer());
+        Assert.assertFalse(cacheData1.isConsistentWithServer());
         Assert.assertFalse(cacheData1.isUseLocalConfigInfo());
         Assert.assertEquals(0, cacheData1.getLastModifiedTs().intValue());
         Assert.assertEquals(0, cacheData1.getLocalConfigInfoVersion());
         
         cacheData1.setInitializing(false);
         cacheData1.setContent("123");
         cacheData1.setTaskId(123);
-        cacheData1.setSyncWithServer(true);
+        cacheData1.setConsistentWithServer(true);
         cacheData1.setType("123");
         long timeStamp = new Date().getTime();
         cacheData1.setLastModifiedTs(timeStamp);
@@ -73,7 +73,7 @@ public void testGetter() {
         Assert.assertEquals(MD5Utils.md5Hex("123", "UTF-8"), cacheData1.getMd5());
         
         Assert.assertEquals(123, cacheData1.getTaskId());
-        Assert.assertTrue(cacheData1.isSyncWithServer());
+        Assert.assertTrue(cacheData1.isConsistentWithServer());
         Assert.assertEquals("123", cacheData1.getType());
         Assert.assertTrue(cacheData1.isUseLocalConfigInfo());
         Assert.assertEquals(timeStamp, cacheData1.getLastModifiedTs().longValue());

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: auth/src/main/java/com/alibaba/nacos/auth/parser/grpc/NamingGrpcResourceParser.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/JdkHttpClientRequest.java
Patch:
@@ -96,7 +96,7 @@ public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity
         conn.setRequestMethod(httpMethod);
         if (body != null && !"".equals(body)) {
             String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
-            String bodyStr = JacksonUtils.toJson(body);
+            String bodyStr = body instanceof String ? (String) body : JacksonUtils.toJson(body);
             if (MediaType.APPLICATION_FORM_URLENCODED.equals(contentType)) {
                 Map<String, String> map = JacksonUtils.toObj(bodyStr, HashMap.class);
                 bodyStr = HttpUtils.encodingParams(map, headers.getCharset());

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/Label.java
Patch:
@@ -19,7 +19,7 @@
 import java.util.Set;
 
 /**
- * CMDB lable.
+ * CMDB label.
  *
  * @author nkorange
  * @since 0.7.0

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/PreservedEntityTypes.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.api.cmdb.pojo;
 
 /**
- * CMDB preserverd entity type.
+ * CMDB preserved entity type.
  *
  * @author nkorange
  * @since 0.7.0

File: consistency/src/main/java/com/alibaba/nacos/consistency/serialize/HessianSerializer.java
Patch:
@@ -51,6 +51,9 @@ public <T> T deserialize(byte[] data) {
     @Override
     public <T> T deserialize(byte[] data, Class<T> cls) {
         T result = deserialize(data);
+        if (result == null) {
+            return null;
+        }
         if (cls.isAssignableFrom(result.getClass())) {
             return result;
         }

File: api/src/test/java/com/alibaba/nacos/api/remote/request/ConnectionSetupRequestTest.java
Patch:
@@ -16,19 +16,19 @@
 
 package com.alibaba.nacos.api.remote.request;
 
-import com.alibaba.nacos.api.ability.ClientAbilities;
 import org.junit.Assert;
 import org.junit.Test;
 
 import java.util.Collections;
+import java.util.HashMap;
 
 public class ConnectionSetupRequestTest extends BasicRequestTest {
     
     @Test
     public void testSerialize() throws Exception {
         ConnectionSetupRequest request = new ConnectionSetupRequest();
         request.setClientVersion("2.2.2");
-        request.setAbilities(new ClientAbilities());
+        request.setAbilityTable(new HashMap<>());
         request.setTenant("testNamespaceId");
         request.setLabels(Collections.singletonMap("labelKey", "labelValue"));
         request.setRequestId("1");
@@ -37,7 +37,7 @@ public void testSerialize() throws Exception {
         Assert.assertTrue(json.contains("\"clientVersion\":\"2.2.2\""));
         Assert.assertTrue(json.contains("\"tenant\":\"testNamespaceId\""));
         Assert.assertTrue(json.contains("\"labels\":{\"labelKey\":\"labelValue\"}"));
-        Assert.assertTrue(json.contains("\"abilities\":{"));
+        Assert.assertTrue(json.contains("\"abilityTable\":{"));
         Assert.assertTrue(json.contains("\"module\":\"internal\""));
         Assert.assertTrue(json.contains("\"requestId\":\"1\""));
     }

File: api/src/test/java/com/alibaba/nacos/api/remote/response/ServerCheckResponseTest.java
Patch:
@@ -38,7 +38,7 @@ public void setUp() throws Exception {
     
     @Test
     public void testSerialization() throws JsonProcessingException {
-        ServerCheckResponse response = new ServerCheckResponse("35643245_1.1.1.1_3306");
+        ServerCheckResponse response = new ServerCheckResponse("35643245_1.1.1.1_3306", false);
         String actual = mapper.writeValueAsString(response);
         assertTrue(actual.contains("\"connectionId\":\"35643245_1.1.1.1_3306\""));
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -66,7 +66,6 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.plugin.auth.api.RequestResource;
 import com.google.gson.Gson;
 import com.google.gson.JsonObject;
 import org.slf4j.Logger;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -23,10 +23,10 @@
 import com.alibaba.nacos.plugin.auth.api.RequestResource;
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.security.SecurityProxy;
-import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.client.utils.ParamUtil;
 
 import java.util.HashMap;
 import java.util.Map;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.client.utils.ContextPathUtil;
 import com.alibaba.nacos.client.utils.EnvUtil;
 import com.alibaba.nacos.client.utils.LogUtils;
-import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
@@ -48,6 +47,7 @@
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.ScheduledThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
+import com.alibaba.nacos.client.utils.ParamUtil;
 
 import static com.alibaba.nacos.common.constant.RequestUrlConstants.HTTPS_PREFIX;
 import static com.alibaba.nacos.common.constant.RequestUrlConstants.HTTP_PREFIX;

File: core/src/main/java/com/alibaba/nacos/core/remote/Connection.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.remote;
 
-import com.alibaba.nacos.api.ability.ClientAbilities;
 import com.alibaba.nacos.api.remote.Requester;
 
 import java.util.Map;

File: core/src/test/java/com/alibaba/nacos/core/cluster/MemberUtilTest.java
Patch:
@@ -243,7 +243,7 @@ public void testIsBasicInfoChangedForChangedBasicExtendInfo() {
     @Test
     public void testIsBasicInfoChangedForChangedAbilities() {
         Member newMember = buildMember();
-        newMember.getAbilities().getRemoteAbility().setSupportRemoteConnection(true);
+        newMember.setGrpcReportEnabled(true);
         assertTrue(MemberUtil.isBasicInfoChanged(newMember, originalMember));
     }
     

File: persistence/src/main/java/com/alibaba/nacos/persistence/datasource/ExternalDataSourceProperties.java
Patch:
@@ -92,6 +92,7 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>
             if (StringUtils.isEmpty(ds.getConnectionTestQuery())) {
                 ds.setConnectionTestQuery(TEST_QUERY);
             }
+            
             dataSources.add(ds);
             callback.accept(ds);
         }

File: plugin/control/src/main/java/com/alibaba/nacos/plugin/control/ruleactivator/LocalDiskRuleStorage.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.plugin.control.Loggers;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.slf4j.Logger;
 
 import java.io.File;
@@ -55,7 +56,7 @@ public void setLocalRruleBaseDir(String localRruleBaseDir) {
     }
     
     private static String defaultBaseDir() {
-        return LocalDiskRuleStorage.class.getResource("/").getPath();
+        return EnvUtil.getNacosHome();
     }
     
     private File getConnectionRuleFile() {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -466,5 +466,7 @@ public String getServerStatus() {
     public void shutDown() throws NacosException {
         serviceInfoHolder.shutdown();
         clientProxy.shutdown();
+        NotifyCenter.deregisterSubscriber(changeNotifier);
+    
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -30,6 +30,7 @@
 import com.alibaba.nacos.persistence.repository.embedded.operate.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.core.utils.WebUtils;
+import com.alibaba.nacos.plugin.auth.constant.SignType;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
@@ -70,6 +71,7 @@ public ConfigOpsController(DumpService dumpService) {
      * Manually trigger dump of a local configuration file.
      */
     @PostMapping(value = "/localCache")
+    @Secured(resource = Constants.OPS_CONTROLLER_PATH, action = ActionTypes.WRITE, signType = SignType.CONSOLE)
     public String updateLocalCacheFromStore() {
         LOGGER.info("start to dump all data from store.");
         dumpService.dumpAll();
@@ -78,6 +80,7 @@ public String updateLocalCacheFromStore() {
     }
     
     @PutMapping(value = "/log")
+    @Secured(resource = Constants.OPS_CONTROLLER_PATH, action = ActionTypes.WRITE, signType = SignType.CONSOLE)
     public String setLogLevel(@RequestParam String logName, @RequestParam String logLevel) {
         LogUtil.setLogLevel(logName, logLevel);
         return HttpServletResponse.SC_OK + "";

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
 import com.alibaba.nacos.core.utils.Commons;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.PutMapping;
@@ -80,6 +81,7 @@ public RestResult<Map<String, Map<Object, Object>>> idInfo() {
     }
     
     @PutMapping(value = "/log")
+    @Secured(action = ActionTypes.WRITE, resource = "nacos/admin", signType = SignType.CONSOLE)
     public String setLogLevel(@RequestParam String logName, @RequestParam String logLevel) {
         Loggers.setLogLevel(logName, logLevel);
         return HttpServletResponse.SC_OK + "";

File: client/src/test/java/com/alibaba/nacos/client/config/impl/CacheDataTest.java
Patch:
@@ -53,15 +53,15 @@ public void testGetter() {
         Assert.assertTrue(cacheData1.isInitializing());
         Assert.assertNull(cacheData1.getContent());
         Assert.assertEquals(0, cacheData1.getTaskId());
-        Assert.assertFalse(cacheData1.isSyncWithServer());
+        Assert.assertFalse(cacheData1.isConsistentWithServer());
         Assert.assertFalse(cacheData1.isUseLocalConfigInfo());
         Assert.assertEquals(0, cacheData1.getLastModifiedTs().intValue());
         Assert.assertEquals(0, cacheData1.getLocalConfigInfoVersion());
         
         cacheData1.setInitializing(false);
         cacheData1.setContent("123");
         cacheData1.setTaskId(123);
-        cacheData1.setSyncWithServer(true);
+        cacheData1.setConsistentWithServer(true);
         cacheData1.setType("123");
         long timeStamp = new Date().getTime();
         cacheData1.setLastModifiedTs(timeStamp);
@@ -73,7 +73,7 @@ public void testGetter() {
         Assert.assertEquals(MD5Utils.md5Hex("123", "UTF-8"), cacheData1.getMd5());
         
         Assert.assertEquals(123, cacheData1.getTaskId());
-        Assert.assertTrue(cacheData1.isSyncWithServer());
+        Assert.assertTrue(cacheData1.isConsistentWithServer());
         Assert.assertEquals("123", cacheData1.getType());
         Assert.assertTrue(cacheData1.isUseLocalConfigInfo());
         Assert.assertEquals(timeStamp, cacheData1.getLastModifiedTs().longValue());

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/NacosConfigConfiguration.java
Patch:
@@ -34,7 +34,7 @@
 public class NacosConfigConfiguration {
     
     @Bean
-    public FilterRegistrationBean nacosWebFilterRegistration() {
+    public FilterRegistrationBean<NacosWebFilter> nacosWebFilterRegistration() {
         FilterRegistrationBean<NacosWebFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(nacosWebFilter());
         registration.addUrlPatterns("/v1/cs/*");
@@ -50,7 +50,7 @@ public NacosWebFilter nacosWebFilter() {
     
     @Conditional(ConditionDistributedEmbedStorage.class)
     @Bean
-    public FilterRegistrationBean transferToLeaderRegistration() {
+    public FilterRegistrationBean<CircuitFilter> transferToLeaderRegistration() {
         FilterRegistrationBean<CircuitFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(transferToLeader());
         registration.addUrlPatterns("/v1/cs/*");

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -171,7 +171,7 @@ public void run() {
                     if (datumList.size() > 0) {
                         // merge
                         ConfigInfo cf = MergeTaskProcessor.merge(dataId, group, tenant, datumList);
-                        configInfoPersistService.insertOrUpdate(null, null, cf, time, null, false);
+                        configInfoPersistService.insertOrUpdate(null, null, cf, null);
                         LOGGER.info("[merge-ok] {}, {}, size={}, length={}, md5={}, content={}", dataId, group,
                                 datumList.size(), cf.getContent().length(), cf.getMd5(),
                                 ContentUtils.truncateContent(cf.getContent()));

File: consistency/src/test/java/com/alibaba/nacos/consistency/SerializeFactoryTest.java
Patch:
@@ -22,7 +22,6 @@
 
 import java.util.ArrayList;
 import java.util.HashMap;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -68,7 +67,7 @@ public void testSetSerialize() {
         
         byte[] data = serializer.serialize(logsMap);
         Assert.assertNotEquals(0, data.length);
-        Set<Integer> result = serializer.deserialize(data, HashSet.class);
+        Set<Integer> result = serializer.deserialize(data, CopyOnWriteArraySet.class);
         System.out.println(result);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/InstanceMetadataProcessor.java
Patch:
@@ -79,9 +79,9 @@ public Response onRequest(ReadRequest request) {
     
     @Override
     public Response onApply(WriteRequest request) {
-        MetadataOperation<InstanceMetadata> op = serializer.deserialize(request.getData().toByteArray(), processType);
         readLock.lock();
         try {
+            MetadataOperation<InstanceMetadata> op = serializer.deserialize(request.getData().toByteArray(), processType);
             switch (DataOperation.valueOf(request.getOperation())) {
                 case ADD:
                 case CHANGE:

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadataProcessor.java
Patch:
@@ -83,9 +83,9 @@ public Response onRequest(ReadRequest request) {
     
     @Override
     public Response onApply(WriteRequest request) {
-        MetadataOperation<ServiceMetadata> op = serializer.deserialize(request.getData().toByteArray(), processType);
         readLock.lock();
         try {
+            MetadataOperation<ServiceMetadata> op = serializer.deserialize(request.getData().toByteArray(), processType);
             switch (DataOperation.valueOf(request.getOperation())) {
                 case ADD:
                     addClusterMetadataToService(op);

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImpl.java
Patch:
@@ -475,7 +475,7 @@ public void removeConfigInfoByIdsAtomic(final String ids) {
         MapperContext context = new MapperContext();
         context.putWhereParameter(FieldConstant.IDS, paramList);
         MapperResult result = configInfoMapper.removeConfigInfoByIdsAtomic(context);
-        EmbeddedStorageContextHolder.addSqlContext(result.getSql(), result.getParamList());
+        EmbeddedStorageContextHolder.addSqlContext(result.getSql(), result.getParamList().toArray());
     }
     
     @Override

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConfigChangeConfigs.java
Patch:
@@ -25,7 +25,6 @@
 import com.alibaba.nacos.sys.utils.PropertiesUtil;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-import org.springframework.beans.factory.annotation.Value;
 import org.springframework.context.annotation.Configuration;
 
 import java.util.HashMap;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImpl.java
Patch:
@@ -475,7 +475,7 @@ public void removeConfigInfoByIdsAtomic(final String ids) {
         MapperContext context = new MapperContext();
         context.putWhereParameter(FieldConstant.IDS, paramList);
         MapperResult result = configInfoMapper.removeConfigInfoByIdsAtomic(context);
-        EmbeddedStorageContextHolder.addSqlContext(result.getSql(), result.getParamList());
+        EmbeddedStorageContextHolder.addSqlContext(result.getSql(), result.getParamList().toArray());
     }
     
     @Override

File: plugin/config/src/main/java/com/alibaba/nacos/plugin/config/spi/ConfigChangePluginService.java
Patch:
@@ -69,8 +69,6 @@ public interface ConfigChangePluginService {
      *
      * @return array of pointcut the methods
      */
-    default ConfigChangePointCutTypes[] pointcutMethodNames() {
-        return ConfigChangeConstants.getPointcuts(getServiceType());
-    }
+    ConfigChangePointCutTypes[] pointcutMethodNames();
 
 }

File: api/src/main/java/com/alibaba/nacos/api/model/v2/Result.java
Patch:
@@ -75,7 +75,7 @@ public static <T> Result<T> success(T data) {
      * @return Result
      */
     public static Result<String> failure(String message) {
-        return Result.failure(ErrorCode.SERVER_ERROR, message);
+        return new Result<>(ErrorCode.SERVER_ERROR.getCode(), message);
     }
     
     /**

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -25,6 +25,7 @@
 import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * Instance.
@@ -209,7 +210,7 @@ public int hashCode() {
     }
     
     private static boolean strEquals(final String str1, final String str2) {
-        return str1 == null ? str2 == null : str1.equals(str2);
+        return Objects.equals(str1, str2);
     }
     
     public long getInstanceHeartBeatInterval() {

File: api/src/main/java/com/alibaba/nacos/api/selector/AbstractCmdbSelector.java
Patch:
@@ -34,6 +34,8 @@
  */
 public abstract class AbstractCmdbSelector<T extends Instance> implements Selector<List<T>, CmdbContext<T>, String> {
     
+    private static final long serialVersionUID = 56587385358330901L;
+    
     /**
      * the labels expression.
      */

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/IdentifyConstants.java
Patch:
@@ -27,6 +27,8 @@ public class IdentifyConstants {
     
     public static final String SECRET_KEY = "secretKey";
     
+    public static final String SECURITY_TOKEN_HEADER = "Spas-SecurityToken";
+    
     public static final String TENANT_ID = "tenantId";
     
     public static final String PROPERTIES_FILENAME = "spas.properties";

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -38,6 +38,7 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.client.env.NacosClientProperties;
+import com.alibaba.nacos.common.remote.client.RpcClientTlsConfig;
 import com.alibaba.nacos.plugin.auth.api.RequestResource;
 import com.alibaba.nacos.client.config.common.GroupKey;
 import com.alibaba.nacos.client.config.filter.impl.ConfigFilterChainManager;
@@ -877,13 +878,12 @@ public void executeConfigListen() {
         
         private RpcClient ensureRpcClient(String taskId) throws NacosException {
             synchronized (ClientWorker.this) {
-                
+
                 Map<String, String> labels = getLabels();
                 Map<String, String> newLabels = new HashMap<>(labels);
                 newLabels.put("taskId", taskId);
-                
                 RpcClient rpcClient = RpcClientFactory.createClient(uuid + "_config-" + taskId, getConnectionType(),
-                        newLabels);
+                        newLabels, RpcClientTlsConfig.properties(this.properties));
                 if (rpcClient.isWaitInitiated()) {
                     initRpcClientHandler(rpcClient);
                     rpcClient.setTenant(getTenant());

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Chooser.java
Patch:
@@ -130,7 +130,7 @@ public Ref(List<Pair<T>> itemsWithWeight) {
          * Refresh.
          */
         public void refresh() {
-            Double originWeightSum = (double) 0;
+            double originWeightSum = 0;
             int size = 0;
             for (Pair<T> item : itemsWithWeight) {
                 

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -223,7 +223,7 @@ public static String parsingEndpointRule(String endpointUrl) {
         }
         
         String endpointUrlSource = TemplateUtils
-                .stringBlankAndThenExecute(NacosClientProperties.PROTOTYPE.getProperty(endpointUrl, System.getenv(endpointUrl)),
+                .stringBlankAndThenExecute(NacosClientProperties.PROTOTYPE.getProperty(endpointUrl),
                         () -> NacosClientProperties.PROTOTYPE.getProperty(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_ENDPOINT_URL));
         
         if (StringUtils.isBlank(endpointUrlSource)) {

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -78,8 +78,9 @@ public void testGetSecurityHeadersForRam() throws Exception {
         Map<String, String> mockIdentityContext = new HashMap<>();
         String serviceName = "aaa";
         mockIdentityContext.put("ak", ak);
-        mockIdentityContext.put("data", System.currentTimeMillis() + "@@" + serviceName);
-        mockIdentityContext.put("signature", SignUtil.sign(System.currentTimeMillis() + "@@" + serviceName, sk));
+        String data = System.currentTimeMillis() + "@@" + serviceName;
+        mockIdentityContext.put("data", data);
+        mockIdentityContext.put("signature", SignUtil.sign(data, sk));
         when(sc.getIdentityContext(any(RequestResource.class))).thenReturn(mockIdentityContext);
         AbstractNamingClientProxy proxy = new MockNamingClientProxy(sc);
         Map<String, String> spasHeaders = proxy.getSecurityHeaders("", "", serviceName);

File: common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java
Patch:
@@ -63,7 +63,7 @@ public abstract class AbstractHttpClientFactory implements HttpClientFactory {
     
     private static final String ASYNC_THREAD_NAME = "nacos-http-async-client";
     
-    private static final String AYNC_IO_REACTOR_NAME = ASYNC_THREAD_NAME + "#I/O Reactor";
+    private static final String ASYNC_IO_REACTOR_NAME = ASYNC_THREAD_NAME + "#I/O Reactor";
     
     @Override
     public NacosRestTemplate createNacosRestTemplate() {
@@ -82,7 +82,7 @@ public NacosRestTemplate createNacosRestTemplate() {
     @Override
     public NacosAsyncRestTemplate createNacosAsyncRestTemplate() {
         final HttpClientConfig originalRequestConfig = buildHttpClientConfig();
-        final DefaultConnectingIOReactor ioreactor = getIoReactor(AYNC_IO_REACTOR_NAME);
+        final DefaultConnectingIOReactor ioreactor = getIoReactor(ASYNC_IO_REACTOR_NAME);
         final RequestConfig defaultConfig = getRequestConfig();
         final NHttpClientConnectionManager connectionManager = getConnectionManager(originalRequestConfig, ioreactor);
         monitorAndExtension(connectionManager);

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ConnectionEventListener.java
Patch:
@@ -26,10 +26,10 @@ public interface ConnectionEventListener {
     /**
      * notify when  connected to server.
      */
-    public void onConnected();
+    void onConnected();
 
     /**
      * notify when  disconnected to server.
      */
-    public void onDisConnect();
+    void onDisConnect();
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConstants.java
Patch:
@@ -76,6 +76,9 @@ public class GrpcConstants {
     @GRpcConfigLabel
     public static final String GRPC_CHANNEL_KEEP_ALIVE_TIME = NACOS_CLIENT_GRPC + ".channel.keep.alive";
     
+    @GRpcConfigLabel
+    public static final String GRPC_CHANNEL_KEEP_ALIVE_TIMEOUT = NACOS_CLIENT_GRPC + ".channel.keep.alive.timeout";
+
     private static final Set<String> CONFIG_NAMES = new HashSet<>();
     
     @Documented

File: common/src/main/java/com/alibaba/nacos/common/trace/HealthCheckType.java
Patch:
@@ -41,7 +41,7 @@ public enum HealthCheckType {
     
     private String prefix;
     
-    private HealthCheckType(String prefix) {
+    HealthCheckType(String prefix) {
         this.prefix = prefix;
     }
     

File: common/src/main/java/com/alibaba/nacos/common/utils/AbstractAssert.java
Patch:
@@ -58,6 +58,9 @@
  */
 public abstract class AbstractAssert {
 
+    private AbstractAssert() {
+    }
+
     /**
      * Assert a boolean expression, throwing an {@code IllegalStateException}
      * if the expression evaluates to {@code false}.

File: common/src/main/java/com/alibaba/nacos/common/utils/AbstractObjectUtils.java
Patch:
@@ -41,6 +41,9 @@
  */
 public abstract class AbstractObjectUtils {
 
+    private AbstractObjectUtils() {
+    }
+
     private static final int INITIAL_HASH = 7;
 
     private static final int MULTIPLIER = 31;

File: common/src/main/java/com/alibaba/nacos/common/utils/ArrayUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author zzq
  */
 public class ArrayUtils {
+
+    private ArrayUtils() {
+    }
     
     /**
      * <p>Checks if an array of Objects is empty or {@code null}.</p>

File: common/src/main/java/com/alibaba/nacos/common/utils/ByteUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ByteUtils {
+
+    private ByteUtils() {
+    }
     
     public static final byte[] EMPTY = new byte[0];
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ClassUtils.java
Patch:
@@ -43,6 +43,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ClassUtils {
+
+    private ClassUtils() {
+    }
     
     public static final String ARRAY_SUFFIX = "[]";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ConvertUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ConvertUtils {
+
+    private ConvertUtils() {
+    }
     
     private static final String NULL_STR = "null";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/DateFormatUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author zzq
  */
 public class DateFormatUtils {
+
+    private DateFormatUtils() {
+    }
     
     public static final String YYYYMMDD = "yyyyMMdd";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ExceptionUtil.java
Patch:
@@ -27,6 +27,9 @@
  * @since 1.2.0
  */
 public class ExceptionUtil {
+
+    private ExceptionUtil() {
+    }
     
     /**
      * Represents an empty exception, that is, no exception occurs, only a constant.

File: common/src/main/java/com/alibaba/nacos/common/utils/HttpMethod.java
Patch:
@@ -23,6 +23,9 @@
  * @since 0.8.0
  */
 public class HttpMethod {
+
+    private HttpMethod() {
+    }
     
     public static final String GET = "GET";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/InetAddressValidator.java
Patch:
@@ -22,6 +22,9 @@
  */
 @SuppressWarnings({"checkstyle:AbbreviationAsWordInName", "PMD.ClassNamingShouldBeCamelRule"})
 public class InetAddressValidator {
+
+    private InetAddressValidator() {
+    }
     
     private static final String PERCENT = "%";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -46,6 +46,9 @@
  * @author nacos
  */
 public class IoUtils {
+
+    private IoUtils() {
+    }
     
     /**
      * Try decompress by GZIP from stream.

File: common/src/main/java/com/alibaba/nacos/common/utils/JacksonUtils.java
Patch:
@@ -39,6 +39,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class JacksonUtils {
+
+    private JacksonUtils() {
+    }
     
     static ObjectMapper mapper = new ObjectMapper();
     

File: common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class LoggerUtils {
+
+    private LoggerUtils() {
+    }
     
     public static final String TRACE = "TRACE";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/MD5Utils.java
Patch:
@@ -26,6 +26,9 @@
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public class MD5Utils {
+
+    private MD5Utils() {
+    }
     
     private static final char[] DIGITS_LOWER = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd',
             'e', 'f'};

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtil.java
Patch:
@@ -31,6 +31,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class MapUtil {
+
+    private MapUtil() {
+    }
     
     /**
      * Null-safe check if the specified Dictionary is empty.

File: common/src/main/java/com/alibaba/nacos/common/utils/NumberUtils.java
Patch:
@@ -21,6 +21,9 @@
  * @author zzq
  */
 public class NumberUtils {
+
+    private NumberUtils() {
+    }
     
     /**
      * Convert a <code>String</code> to an <code>int</code>, returning

File: common/src/main/java/com/alibaba/nacos/common/utils/PropertyUtils.java
Patch:
@@ -22,6 +22,9 @@
  * @author Pixy Yuan on 2022/3/24
  */
 public class PropertyUtils {
+
+    private PropertyUtils() {
+    }
     
     private static final String PROCESSORS_ENV_NAME = "NACOS_COMMON_PROCESSORS";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/RandomUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author zzq
  */
 public class RandomUtils {
+
+    private RandomUtils() {
+    }
     
     /**
      * Random Object for random method.

File: common/src/main/java/com/alibaba/nacos/common/utils/ReflectUtils.java
Patch:
@@ -28,6 +28,9 @@
  * @version $Id: ReflectUtils.java, v 0.1 2020年08月20日 12:57 PM liuzunfei Exp $
  */
 public class ReflectUtils {
+
+    private ReflectUtils() {
+    }
     
     /**
      * get filed value of  obj.

File: common/src/main/java/com/alibaba/nacos/common/utils/ResourceUtils.java
Patch:
@@ -32,6 +32,9 @@
  * @author boyan
  */
 public class ResourceUtils {
+
+    private ResourceUtils() {
+    }
     
     private static final String CLASSPATH_PREFIX = "classpath:";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -36,6 +36,9 @@
  * @author zzq
  */
 public class StringUtils {
+
+    private StringUtils() {
+    }
     
     public static final String DOT = ".";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -29,6 +29,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ThreadUtils {
+
+    private ThreadUtils() {
+    }
     
     private static final int THREAD_MULTIPLER = 2;
     

File: common/src/main/java/com/alibaba/nacos/common/utils/TypeUtils.java
Patch:
@@ -25,6 +25,9 @@
  * @author zzq
  */
 public class TypeUtils {
+
+    private TypeUtils() {
+    }
     
     /**
      * Create a parameterized type instance.
@@ -43,7 +46,6 @@ public static ParameterizedType parameterize(final Class<?> raw, final Type... t
      *
      * @param raw           raw class
      * @param typeArguments the types used for parameterization
-     * @return {@link ParameterizedType}
      */
     private static void checkParameterizeMethodParameter(Class<?> raw, final Type... typeArguments) {
         if (raw == null) {

File: common/src/main/java/com/alibaba/nacos/common/utils/UuidUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author nkorange
  */
 public class UuidUtils {
+
+    private UuidUtils() {
+    }
     
     public static String generateUuid() {
         return UUID.randomUUID().toString();

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -27,6 +27,9 @@
  * @author xingxuechao on:2019/2/27 12:32 PM
  */
 public class VersionUtils {
+
+    private VersionUtils() {
+    }
     
     public static String version;
     

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
-import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
+import com.alibaba.nacos.persistence.datasource.DataSourceService;
+import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import org.springframework.web.bind.annotation.GetMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
+import com.alibaba.nacos.persistence.monitor.DatasourceMetrics;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -64,7 +65,7 @@ public ResponseEntity<String> handleNacosException(NacosException ex) throws IOE
      */
     @ExceptionHandler(DataAccessException.class)
     public ResponseEntity<String> handleDataAccessException(DataAccessException ex) throws DataAccessException {
-        MetricsMonitor.getDbException().increment();
+        DatasourceMetrics.getDbException().increment();
         return ResponseEntity.status(500).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/model/HistoryContext.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.config.server.model;
 
+import com.alibaba.nacos.persistence.model.Page;
+
 import java.io.Serializable;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/model/form/ConfigForm.java
Patch:
@@ -38,7 +38,7 @@ public class ConfigForm implements Serializable {
     
     private String group;
     
-    private String namespaceId;
+    private String namespaceId = StringUtils.EMPTY;
     
     private String content;
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
-import com.alibaba.nacos.config.server.utils.PropertyUtil;
+import com.alibaba.nacos.persistence.configuration.DatasourceConfiguration;
 import com.alibaba.nacos.sys.env.EnvUtil;
 
 /**
@@ -34,7 +34,7 @@ public class ConfigChangePublisher {
      * @param event ConfigDataChangeEvent instance.
      */
     public static void notifyConfigChange(ConfigDataChangeEvent event) {
-        if (PropertyUtil.isEmbeddedStorage() && !EnvUtil.getStandaloneMode()) {
+        if (DatasourceConfiguration.isEmbeddedStorage() && !EnvUtil.getStandaloneMode()) {
             return;
         }
         NotifyCenter.publishEvent(event);

File: config/src/main/java/com/alibaba/nacos/config/server/service/HistoryService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.Pair;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;
 import com.alibaba.nacos.config.server.service.repository.HistoryConfigInfoPersistService;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllBetaProcessor.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.task.NacosTask;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfoBetaWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoBetaPersistService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.AggrWhitelist;
 import com.alibaba.nacos.config.server.service.ClientIpWhiteList;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllTagProcessor.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.task.NacosTask;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfoTagWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoTagPersistService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoAggrPersistService;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoAggrPersistService.java
Patch:
@@ -19,7 +19,8 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
 import com.alibaba.nacos.config.server.model.ConfigInfoChanged;
 import com.alibaba.nacos.config.server.model.ConfigKey;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.util.List;
 import java.util.Map;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoBetaPersistService.java
Patch:
@@ -20,7 +20,8 @@
 import com.alibaba.nacos.config.server.model.ConfigInfo4Beta;
 import com.alibaba.nacos.config.server.model.ConfigInfoBetaWrapper;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.sql.Timestamp;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoPersistService.java
Patch:
@@ -23,8 +23,9 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoBase;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.model.ConfigKey;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.SameConfigPolicy;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.io.IOException;
 import java.sql.Timestamp;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoTagPersistService.java
Patch:
@@ -20,7 +20,8 @@
 import com.alibaba.nacos.config.server.model.ConfigInfo4Tag;
 import com.alibaba.nacos.config.server.model.ConfigInfoTagWrapper;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.sql.Timestamp;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/HistoryConfigInfoPersistService.java
Patch:
@@ -18,7 +18,8 @@
 
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.sql.Timestamp;
 import java.util.List;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -30,9 +30,10 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoTagWrapper;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.model.ConfigKey;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.SameConfigPolicy;
-import com.alibaba.nacos.config.server.model.TenantInfo;
+import com.alibaba.nacos.core.namespace.model.TenantInfo;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.io.IOException;
 import java.sql.Timestamp;

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HealthControllerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.persistence.datasource.DataSourceService;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HistoryControllerTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.databind.JsonNode;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientDataProcessor.java
Patch:
@@ -213,7 +213,7 @@ private static void processBatchInstanceDistroData(Set<Service> syncedService, C
                 result = batchInstancePublishInfo.equals(targetInstanceInfo);
             }
             if (!result) {
-                client.addServiceInstance(service, batchInstancePublishInfo);
+                client.addServiceInstance(singleton, batchInstancePublishInfo);
                 NotifyCenter.publishEvent(
                         new ClientOperationEvent.ClientRegisterServiceEvent(singleton, client.getClientId()));
             }

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/NacosConfigConfiguration.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.config.server.filter.NacosWebFilter;
 import com.alibaba.nacos.config.server.filter.CircuitFilter;
+import com.alibaba.nacos.persistence.configuration.condition.ConditionDistributedEmbedStorage;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Conditional;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
-import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
+import com.alibaba.nacos.persistence.datasource.DataSourceService;
+import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import org.springframework.web.bind.annotation.GetMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/v2/ConfigControllerV2.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.config.server.controller.ConfigServletInner;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigRequestInfo;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.form.ConfigForm;
 import com.alibaba.nacos.config.server.service.ConfigDetailService;
 import com.alibaba.nacos.config.server.service.ConfigOperationService;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/v2/HistoryControllerV2.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
+import com.alibaba.nacos.persistence.monitor.DatasourceMetrics;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -64,7 +65,7 @@ public ResponseEntity<String> handleNacosException(NacosException ex) throws IOE
      */
     @ExceptionHandler(DataAccessException.class)
     public ResponseEntity<String> handleDataAccessException(DataAccessException ex) throws DataAccessException {
-        MetricsMonitor.getDbException().increment();
+        DatasourceMetrics.getDbException().increment();
         return ResponseEntity.status(500).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/filter/CircuitFilter.java
Patch:
@@ -21,15 +21,15 @@
 import com.alibaba.nacos.common.notify.listener.SmartSubscriber;
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.model.event.RaftDbErrorEvent;
+import com.alibaba.nacos.persistence.model.event.RaftDbErrorEvent;
 import com.alibaba.nacos.config.server.model.event.RaftDbErrorRecoverEvent;
 import com.alibaba.nacos.consistency.ProtocolMetaData;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
+import com.alibaba.nacos.persistence.constants.PersistenceConstant;
 import org.springframework.beans.factory.annotation.Autowired;
 
 import javax.annotation.PostConstruct;
@@ -108,7 +108,7 @@ public void destroy() {
     }
     
     private void listenerSelfInCluster() {
-        protocol.protocolMetaData().subscribe(Constants.CONFIG_MODEL_RAFT_GROUP, MetadataKey.RAFT_GROUP_MEMBER, o -> {
+        protocol.protocolMetaData().subscribe(PersistenceConstant.CONFIG_MODEL_RAFT_GROUP, MetadataKey.RAFT_GROUP_MEMBER, o -> {
             if (!(o instanceof ProtocolMetaData.ValueItem)) {
                 return;
             }

File: config/src/main/java/com/alibaba/nacos/config/server/model/HistoryContext.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.config.server.model;
 
+import com.alibaba.nacos.persistence.model.Page;
+
 import java.io.Serializable;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
-import com.alibaba.nacos.config.server.utils.PropertyUtil;
+import com.alibaba.nacos.persistence.configuration.DatasourceConfiguration;
 import com.alibaba.nacos.sys.env.EnvUtil;
 
 /**
@@ -34,7 +34,7 @@ public class ConfigChangePublisher {
      * @param event ConfigDataChangeEvent instance.
      */
     public static void notifyConfigChange(ConfigDataChangeEvent event) {
-        if (PropertyUtil.isEmbeddedStorage() && !EnvUtil.getStandaloneMode()) {
+        if (DatasourceConfiguration.isEmbeddedStorage() && !EnvUtil.getStandaloneMode()) {
             return;
         }
         NotifyCenter.publishEvent(event);

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigDetailService.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.constant.PropertiesConstant;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import org.slf4j.Logger;

File: config/src/main/java/com/alibaba/nacos/config/server/service/HistoryService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.Pair;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;
 import com.alibaba.nacos.config.server.service.repository.HistoryConfigInfoPersistService;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllBetaProcessor.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.task.NacosTask;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfoBetaWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoBetaPersistService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.AggrWhitelist;
 import com.alibaba.nacos.config.server.service.ClientIpWhiteList;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllTagProcessor.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.task.NacosTask;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfoTagWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoTagPersistService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoAggrPersistService;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoAggrPersistService.java
Patch:
@@ -19,7 +19,8 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
 import com.alibaba.nacos.config.server.model.ConfigInfoChanged;
 import com.alibaba.nacos.config.server.model.ConfigKey;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.util.List;
 import java.util.Map;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoBetaPersistService.java
Patch:
@@ -20,7 +20,8 @@
 import com.alibaba.nacos.config.server.model.ConfigInfo4Beta;
 import com.alibaba.nacos.config.server.model.ConfigInfoBetaWrapper;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.sql.Timestamp;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoPersistService.java
Patch:
@@ -23,8 +23,9 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoBase;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.model.ConfigKey;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.SameConfigPolicy;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.io.IOException;
 import java.sql.Timestamp;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ConfigInfoTagPersistService.java
Patch:
@@ -20,7 +20,8 @@
 import com.alibaba.nacos.config.server.model.ConfigInfo4Tag;
 import com.alibaba.nacos.config.server.model.ConfigInfoTagWrapper;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.sql.Timestamp;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/HistoryConfigInfoPersistService.java
Patch:
@@ -18,7 +18,8 @@
 
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.sql.Timestamp;
 import java.util.List;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -30,9 +30,10 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoTagWrapper;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.model.ConfigKey;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.SameConfigPolicy;
-import com.alibaba.nacos.config.server.model.TenantInfo;
+import com.alibaba.nacos.core.namespace.model.TenantInfo;
+import com.alibaba.nacos.persistence.repository.PaginationHelper;
 
 import java.io.IOException;
 import java.sql.Timestamp;

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HealthControllerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.persistence.datasource.DataSourceService;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HistoryControllerTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.databind.JsonNode;

File: config/src/test/java/com/alibaba/nacos/config/server/controller/v2/ConfigControllerV2Test.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.config.server.controller.ConfigServletInner;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigRequestInfo;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.model.form.ConfigForm;
 import com.alibaba.nacos.config.server.service.ConfigDetailService;
 import com.alibaba.nacos.config.server.service.ConfigOperationService;

File: config/src/test/java/com/alibaba/nacos/config/server/controller/v2/HistoryControllerV2Test.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.model.v2.Result;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.HistoryService;
 import org.junit.Before;
 import org.junit.Test;

File: config/src/test/java/com/alibaba/nacos/config/server/service/HistoryServiceTest.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.config.server.service.repository.ConfigInfoPersistService;
 import com.alibaba.nacos.config.server.service.repository.HistoryConfigInfoPersistService;
 import org.junit.Before;

File: config/src/test/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistServiceTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
 import com.alibaba.nacos.config.server.model.capacity.GroupCapacity;
-import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.persistence.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.plugin.datasource.MapperManager;
 import com.alibaba.nacos.plugin.datasource.constants.TableConstant;

File: config/src/test/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistServiceTest.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.config.server.model.capacity.TenantCapacity;
-import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.persistence.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.plugin.datasource.MapperManager;
 import com.alibaba.nacos.plugin.datasource.constants.TableConstant;

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpServiceTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.service.dump;
 
-import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
+import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: core/src/main/java/com/alibaba/nacos/core/namespace/model/Namespace.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.model;
+package com.alibaba.nacos.core.namespace.model;
 
 /**
  * Namespace.
@@ -34,7 +34,7 @@ public class Namespace {
     private int configCount;
     
     /**
-     * see {@link com.alibaba.nacos.console.enums.NamespaceTypeEnum}.
+     * see {@link NamespaceTypeEnum}.
      */
     private int type;
     

File: core/src/main/java/com/alibaba/nacos/core/namespace/model/form/NamespaceForm.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2022 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.model.form;
+package com.alibaba.nacos.core.namespace.model.form;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.exception.api.NacosApiException;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/AbstractSnapshotOperation.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.core.utils.TimerContext;
+import com.alibaba.nacos.sys.utils.TimerContext;
 import com.alibaba.nacos.naming.misc.Loggers;
 
 import java.util.concurrent.locks.Lock;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingKvStorage.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.core.storage.StorageFactory;
 import com.alibaba.nacos.core.storage.kv.KvStorage;
 import com.alibaba.nacos.core.storage.kv.MemoryKvStorage;
-import com.alibaba.nacos.core.utils.TimerContext;
+import com.alibaba.nacos.sys.utils.TimerContext;
 import com.alibaba.nacos.naming.misc.Loggers;
 
 import java.util.HashMap;

File: persistence/src/main/java/com/alibaba/nacos/persistence/datasource/DataSourcePoolProperties.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.datasource;
+package com.alibaba.nacos.persistence.datasource;
 
 import com.zaxxer.hikari.HikariDataSource;
 import org.springframework.boot.context.properties.bind.Bindable;

File: persistence/src/main/java/com/alibaba/nacos/persistence/datasource/DataSourceService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.datasource;
+package com.alibaba.nacos.persistence.datasource;
 
 import java.io.IOException;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/exception/NJdbcException.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.exception;
+package com.alibaba.nacos.persistence.exception;
 
 import org.springframework.dao.DataAccessException;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/model/Page.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model;
+package com.alibaba.nacos.persistence.model;
 
 import java.io.Serializable;
 import java.util.ArrayList;

File: persistence/src/main/java/com/alibaba/nacos/persistence/model/event/DerbyImportEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model.event;
+package com.alibaba.nacos.persistence.model.event;
 
 import com.alibaba.nacos.common.notify.SlowEvent;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/model/event/DerbyLoadEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model.event;
+package com.alibaba.nacos.persistence.model.event;
 
 import com.alibaba.nacos.common.notify.SlowEvent;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/model/event/RaftDbErrorEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model.event;
+package com.alibaba.nacos.persistence.model.event;
 
 import com.alibaba.nacos.common.notify.SlowEvent;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/PaginationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.repository;
+package com.alibaba.nacos.persistence.repository;
 
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.datasource.model.MapperResult;
 import org.springframework.jdbc.core.RowMapper;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/sql/ModifyRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.sql;
+package com.alibaba.nacos.persistence.repository.embedded.sql;
 
 import java.io.Serializable;
 import java.util.Arrays;

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/sql/QueryType.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.sql;
+package com.alibaba.nacos.persistence.repository.embedded.sql;
 
 import org.springframework.jdbc.core.RowMapper;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/sql/SelectRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.sql;
+package com.alibaba.nacos.persistence.repository.embedded.sql;
 
 import java.io.Serializable;
 import java.util.Arrays;

File: persistence/src/main/java/com/alibaba/nacos/persistence/utils/DerbyUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.utils;
+package com.alibaba.nacos.persistence.utils;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;

File: persistence/src/test/java/com/alibaba/nacos/persistence/datasource/DataSourcePoolPropertiesTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.datasource;
+package com.alibaba.nacos.persistence.datasource;
 
 import com.zaxxer.hikari.HikariDataSource;
 import org.junit.Before;

File: persistence/src/test/java/com/alibaba/nacos/persistence/datasource/ExternalDataSourcePropertiesTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.datasource;
+package com.alibaba.nacos.persistence.datasource;
 
 import com.zaxxer.hikari.HikariDataSource;
 import org.junit.Assert;
@@ -97,7 +97,7 @@ public void externalDatasourceToAssertMultiPasswordAndUsername() {
         }));
         Assert.assertEquals(dataSources.size(), 2);
     }
-
+    
     @Test
     public void externalDatasourceToAssertMinIdle() {
         MockEnvironment environment = new MockEnvironment();

File: persistence/src/test/java/com/alibaba/nacos/persistence/utils/DerbyUtilsTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.utils;
+package com.alibaba.nacos.persistence.utils;
 
 import org.junit.Assert;
 import org.junit.Test;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.persistence.PermissionInfo;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/RoleController.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/AuthRowMapperManager.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.plugin.auth.impl.persistence;
 
-import com.alibaba.nacos.config.server.service.repository.RowMapperManager;
+import com.alibaba.nacos.persistence.repository.RowMapperManager;
 import org.springframework.jdbc.core.RowMapper;
 
 import java.sql.ResultSet;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImpl.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.api.Permission;
 import com.alibaba.nacos.plugin.auth.api.Resource;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.plugin.auth.impl.persistence.UserPersistService;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.springframework.beans.factory.annotation.Autowired;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.plugin.auth.impl.roles;
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.api.Permission;
 import com.alibaba.nacos.plugin.auth.api.Resource;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;

File: sys/src/main/java/com/alibaba/nacos/sys/utils/TimerContext.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.sys.utils;
 
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import org.slf4j.Logger;

File: test/config-test/src/test/java/com/alibaba/nacos/test/base/BaseClusterTest.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
-import com.alibaba.nacos.config.server.model.event.RaftDbErrorEvent;
-import com.alibaba.nacos.config.server.service.repository.embedded.DistributedDatabaseOperateImpl;
+import com.alibaba.nacos.persistence.model.event.RaftDbErrorEvent;
+import com.alibaba.nacos.core.persistence.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.ProtocolMetaData;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.consistency.cp.MetadataKey;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyImport_CITCase.java
Patch:
@@ -21,9 +21,9 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.ByteUtils;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
-import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
+import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
-import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
+import com.alibaba.nacos.persistence.repository.embedded.operate.DatabaseOperate;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.Assert;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -24,14 +24,15 @@
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.config.server.model.event.RaftDbErrorEvent;
+import com.alibaba.nacos.persistence.model.event.RaftDbErrorEvent;
 import com.alibaba.nacos.config.server.model.event.RaftDbErrorRecoverEvent;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftConstants;
 import com.alibaba.nacos.core.utils.GenericType;
+import com.alibaba.nacos.persistence.constants.PersistenceConstant;
 import com.alibaba.nacos.sys.utils.InetUtils;
 
 import com.alibaba.nacos.test.base.BaseClusterTest;
@@ -347,7 +348,7 @@ public void test_f_id_generator_leader_transfer() throws Exception {
         CPProtocol protocol8 = context8.getBean(CPProtocol.class);
         CPProtocol protocol9 = context9.getBean(CPProtocol.class);
         
-        final String configGroup = com.alibaba.nacos.config.server.constant.Constants.CONFIG_MODEL_RAFT_GROUP;
+        final String configGroup = PersistenceConstant.CONFIG_MODEL_RAFT_GROUP;
         long preId = -1L;
         long currentId = -1L;
         

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.api.Permission;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.persistence.model.Page;
 import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/base/BaseClusterTest.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
-import com.alibaba.nacos.config.server.model.event.RaftDbErrorEvent;
-import com.alibaba.nacos.config.server.service.repository.embedded.DistributedDatabaseOperateImpl;
+import com.alibaba.nacos.persistence.model.event.RaftDbErrorEvent;
+import com.alibaba.nacos.core.persistence.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.ProtocolMetaData;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.consistency.cp.MetadataKey;

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java
Patch:
@@ -96,7 +96,7 @@ public InstanceOperatorClientImpl(ClientManagerDelegate clientManager,
     }
     
     /**
-     * This method creates {@code IpPortBasedClient} if it don't exist.
+     * This method creates {@code IpPortBasedClient} if it doesn't exist.
      */
     @Override
     public void registerInstance(String namespaceId, String serviceName, Instance instance) throws NacosException {

File: api/src/test/java/com/alibaba/nacos/api/remote/RpcScheduledExecutorTest.java
Patch:
@@ -35,8 +35,8 @@ public class RpcScheduledExecutorTest {
     public void testRpcScheduledExecutor() throws InterruptedException {
         RpcScheduledExecutor executor = new RpcScheduledExecutor(2, NAME);
         CountDownLatch latch = new CountDownLatch(2);
-        executor.execute(new TestRunner(1, latch));
-        executor.execute(new TestRunner(2, latch));
+        executor.submit(new TestRunner(1, latch));
+        executor.submit(new TestRunner(2, latch));
         latch.await(1, TimeUnit.SECONDS);
         assertEquals(2, threadNameMap.size());
         assertEquals(NAME + ".0", threadNameMap.get("1"));

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftConfig.java
Patch:
@@ -34,7 +34,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @Component
-@ConfigurationProperties(prefix = "nacos.core.protocol.raft")
+@ConfigurationProperties(prefix = RaftSysConstants.RAFT_CONFIG_PREFIX)
 public class RaftConfig implements Config<RequestProcessor4CP> {
     
     private static final long serialVersionUID = 9174789390266064002L;

File: sys/src/main/java/com/alibaba/nacos/sys/module/ModuleStateHolder.java
Patch:
@@ -43,6 +43,9 @@ public class ModuleStateHolder {
     private ModuleStateHolder() {
         this.moduleStates = new HashMap<>();
         for (ModuleStateBuilder each : NacosServiceLoader.load(ModuleStateBuilder.class)) {
+            if (each.isIgnore()) {
+                continue;
+            }
             try {
                 ModuleState moduleState = each.build();
                 moduleStates.put(moduleState.getModuleName(), moduleState);

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/NacosConfigServiceComTlsGrpcClient_CITCase.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.client.config.NacosConfigService;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
 import com.alibaba.nacos.common.remote.client.RpcConstants;
-import com.alibaba.nacos.common.remote.client.grpc.GrpcConstants;
 import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.*;
@@ -55,7 +54,7 @@
                 RpcServerTlsConfig.PREFIX+".certChainFile=test-server-cert.pem",
                 RpcServerTlsConfig.PREFIX+".certPrivateKey=test-server-key.pem"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
-public class NacosConfigServiceComTlsGrpcClientTest {
+public class NacosConfigServiceComTlsGrpcClient_CITCase {
 
     public static AtomicInteger increment = new AtomicInteger(100);
 
@@ -64,7 +63,7 @@ public class NacosConfigServiceComTlsGrpcClientTest {
 
     @BeforeClass
     public static void beforeClass() throws IOException {
-        ConfigCleanUtils.changeToNewTestNacosHome(NacosConfigServiceComTlsGrpcClientTest.class.getSimpleName());
+        ConfigCleanUtils.changeToNewTestNacosHome(NacosConfigServiceComTlsGrpcClient_CITCase.class.getSimpleName());
 
     }
 

File: test/core-test/src/test/java/com/alibaba/nacos/test/client/ConfigIntegrationV1ServerNonCompatibility_CITCase.java
Patch:
@@ -30,6 +30,7 @@
 import org.junit.AfterClass;
 import org.junit.Assert;
 import org.junit.BeforeClass;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.boot.test.context.SpringBootTest;
@@ -59,6 +60,7 @@
                 RpcServerTlsConfig.PREFIX+".certPrivateKey=test-server-key.pem",
         },
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@Ignore("TODO, Fix cert expired problem")
 public class ConfigIntegrationV1ServerNonCompatibility_CITCase {
 
     public static AtomicInteger increment = new AtomicInteger(100);

File: test/core-test/src/test/java/com/alibaba/nacos/test/client/ConfigIntegrationV2MutualAuth_CITCase.java
Patch:
@@ -57,7 +57,7 @@
 
         },
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
-public class ConfigIntegrationV2MutualAuthTest {
+public class ConfigIntegrationV2MutualAuth_CITCase {
 
     @LocalServerPort
     private int port;
@@ -66,7 +66,7 @@ public class ConfigIntegrationV2MutualAuthTest {
 
     @BeforeClass
     public static   void beforeClass() throws IOException {
-        ConfigCleanUtils.changeToNewTestNacosHome(ConfigIntegrationV2MutualAuthTest.class.getSimpleName());
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigIntegrationV2MutualAuth_CITCase.class.getSimpleName());
 
     }
 
@@ -76,6 +76,7 @@ public  void cleanClientCache() throws Exception {
     }
 
     @Test
+    @Ignore("TODO, fix the cert expired problem")
     public void test_d_MutualAuth() throws Exception {
 
         RpcClientTlsConfig tlsConfig = new RpcClientTlsConfig();

File: test/core-test/src/test/java/com/alibaba/nacos/test/client/ConfigIntegrationV3_CITCase.java
Patch:
@@ -54,7 +54,7 @@
                 RpcServerTlsConfig.PREFIX+".certPrivateKey=test-server-key.pem"
         },
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
-public class ConfigIntegrationV3Test {
+public class ConfigIntegrationV3_CITCase {
 
     @LocalServerPort
     private int port;
@@ -63,7 +63,7 @@ public class ConfigIntegrationV3Test {
 
     @BeforeClass
     public static void beforeClass() throws IOException {
-        ConfigCleanUtils.changeToNewTestNacosHome(ConfigIntegrationV3Test.class.getSimpleName());
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigIntegrationV3_CITCase.class.getSimpleName());
 
     }
 
@@ -117,6 +117,7 @@ public void test_f_ServerTlsTrustAll() throws Exception {
     }
 
     @Test
+    @Ignore("TODO, Fix cert expired problem")
     public void test_g_ServerTlsTrustCa() throws Exception {
 
         RpcClient.ServerInfo serverInfo = new RpcClient.ServerInfo();

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/code/ControllerMethodsCache_ITCase.java
Patch:
@@ -33,7 +33,7 @@
  * @author horizonzy
  * @since 1.3.2
  */
-public class ControllerMethodsCacheTest {
+public class ControllerMethodsCache_ITCase {
 
     private ControllerMethodsCache methodsCache;
 

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/NamingTlsServiceAndMutualAuth_ITCase.java
Patch:
@@ -27,6 +27,7 @@
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.FixMethodOrder;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
@@ -58,6 +59,7 @@
 
 },
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@Ignore("TODO, Fix cert expired problem")
 public class NamingTlsServiceAndMutualAuth_ITCase {
 
 

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/NamingTlsServiceTls_ITCase.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.nacos.core.remote.RpcServerTlsConfig;
 import org.junit.Assert;
 import org.junit.FixMethodOrder;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
@@ -54,6 +55,7 @@
         RpcServerTlsConfig.PREFIX+".certPrivateKey=test-server-key.pem",
 },
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@Ignore("TODO, Fix cert expired problem")
 public class NamingTlsServiceTls_ITCase {
 
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/BaseDatabaseOperate.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.LoggerUtils;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import com.alibaba.nacos.config.server.utils.DerbyUtils;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.springframework.dao.DataAccessException;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DatabaseOperate.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.persistence.repository.embedded.EmbeddedStorageContextHolder;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import org.springframework.jdbc.core.RowMapper;
 
 import java.io.File;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -41,9 +41,9 @@
 import com.alibaba.nacos.config.server.service.dump.DumpConfigHandler;
 import com.alibaba.nacos.config.server.service.repository.RowMapperManager;
 import com.alibaba.nacos.persistence.repository.embedded.EmbeddedStorageContextHolder;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
-import com.alibaba.nacos.config.server.service.sql.QueryType;
-import com.alibaba.nacos.persistence.repository.embedded.SelectRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.QueryType;
+import com.alibaba.nacos.persistence.repository.embedded.sql.SelectRequest;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.consistency.SerializeFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.config.server.configuration.ConditionStandaloneEmbedStorage;
 import com.alibaba.nacos.persistence.datasource.DataSourceService;
 import com.alibaba.nacos.persistence.datasource.DynamicDataSource;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.springframework.context.annotation.Conditional;

File: config/src/test/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImplTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.persistence.repository.embedded.EmbeddedStorageContextHolder;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/EmbeddedStorageContextHolder.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.persistence.repository.embedded;
 
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
+
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/sql/ModifyRequest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.persistence.repository.embedded;
+package com.alibaba.nacos.persistence.repository.embedded.sql;
 
 import java.io.Serializable;
 import java.util.Arrays;

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/sql/QueryType.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.sql;
+package com.alibaba.nacos.persistence.repository.embedded.sql;
 
 import org.springframework.jdbc.core.RowMapper;
 

File: persistence/src/main/java/com/alibaba/nacos/persistence/repository/embedded/sql/SelectRequest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.persistence.repository.embedded;
+package com.alibaba.nacos.persistence.repository.embedded.sql;
 
 import java.io.Serializable;
 import java.util.Arrays;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedPermissionPersistServiceImplTest.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.persistence.repository.embedded.EmbeddedStorageContextHolder;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.persistence.repository.embedded.EmbeddedStorageContextHolder;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/EmbeddedStorageContextUtils_CITCase.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.config;
 
 import com.alibaba.nacos.persistence.repository.embedded.EmbeddedStorageContextHolder;
-import com.alibaba.nacos.persistence.repository.embedded.ModifyRequest;
+import com.alibaba.nacos.persistence.repository.embedded.sql.ModifyRequest;
 import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: naming/src/main/java/com/alibaba/nacos/naming/constants/Constants.java
Patch:
@@ -109,4 +109,5 @@ public final class Constants {
      * Min value of instance weight.
      */
     public static final double MIN_WEIGHT_VALUE = 0.00D;
+    
 }

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -44,7 +44,6 @@ public FilterRegistrationBean distroFilterRegistration() {
         registration.setFilter(distroFilter());
         registration.addUrlPatterns(UTL_PATTERNS);
         registration.setName(DISTRO_FILTER);
-        registration.setAsyncSupported(true);
         registration.setOrder(7);
         return registration;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/constants/Constants.java
Patch:
@@ -109,5 +109,4 @@ public final class Constants {
      * Min value of instance weight.
      */
     public static final double MIN_WEIGHT_VALUE = 0.00D;
-    
 }

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -44,6 +44,7 @@ public FilterRegistrationBean distroFilterRegistration() {
         registration.setFilter(distroFilter());
         registration.addUrlPatterns(UTL_PATTERNS);
         registration.setName(DISTRO_FILTER);
+        registration.setAsyncSupported(true);
         registration.setOrder(7);
         return registration;
     }

File: prometheus/src/main/java/com/alibaba/nacos/prometheus/filter/PrometheusAuthFilter.java
Patch:
@@ -61,7 +61,7 @@ public FilterRegistrationBean<AnonymousAuthenticationFilter> anonymousAuthentica
     @Bean
     public FilterRegistrationBean<AuthorizationFilter> authorizationFilter() {
         FilterRegistrationBean<AuthorizationFilter> registration = new FilterRegistrationBean<>();
-        registration.setFilter(new AuthorizationFilter(new AuthenticatedAuthorizationManager()));
+        registration.setFilter(new AuthorizationFilter(new AuthenticatedAuthorizationManager<>()));
         registration.addUrlPatterns(PROMETHEUS_CONTROLLER_PATH);
         registration.setName("prometheusAuthorizationFilter");
         registration.setOrder(4);

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/token/impl/JwtTokenManager.java
Patch:
@@ -76,6 +76,7 @@ private void processProperties() {
         try {
             this.jwtParser = new NacosJwtParser(encodedSecretKey);
         } catch (Exception e) {
+            this.jwtParser = null;
             if (authConfigs.isAuthEnabled()) {
                 throw new IllegalArgumentException(
                         "the length of secret key must great than or equal 32 bytes; And the secret key  must be encoded by base64."

File: common/src/main/java/com/alibaba/nacos/common/remote/TlsConfig.java
Patch:
@@ -25,7 +25,7 @@ public class TlsConfig {
     /**
      * ssl provider,default OPENSSL,JDK,OPENSSL_REFCNT.
      */
-    private String sslProvider = "OPENSSL";
+    private String sslProvider = "";
 
     /**
      * enable tls.

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.naming.remote.gprc;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.Instance;
@@ -47,6 +48,7 @@
 import com.alibaba.nacos.client.naming.remote.gprc.redo.data.BatchInstanceRedoData;
 import com.alibaba.nacos.client.naming.remote.gprc.redo.data.InstanceRedoData;
 import com.alibaba.nacos.client.security.SecurityProxy;
+import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.remote.ConnectionType;
@@ -93,6 +95,7 @@ public NamingGrpcClientProxy(String namespaceId, SecurityProxy securityProxy, Se
         Map<String, String> labels = new HashMap<>();
         labels.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         labels.put(RemoteConstants.LABEL_MODULE, RemoteConstants.LABEL_MODULE_NAMING);
+        labels.put(Constants.APPNAME, AppNameUtils.getAppName());
         this.rpcClient = RpcClientFactory.createClient(uuid, ConnectionType.GRPC, labels, RpcClientTlsConfig.properties(properties.asProperties()));
         this.redoService = new NamingGrpcRedoService(this);
         start(serverListFactory, serviceInfoHolder);

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/InitUtils.java
Patch:
@@ -105,7 +105,6 @@ public static void initWebRootContext(NacosClientProperties properties) {
      */
     public static String initEndpoint(final NacosClientProperties properties) {
         if (properties == null) {
-            
             return "";
         }
         // Whether to enable domain name resolution rules

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/injector/NamingResourceInjectorTest.java
Patch:
@@ -49,6 +49,7 @@ public void setUp() throws Exception {
         ramContext.setAccessKey(PropertyKeyConst.ACCESS_KEY);
         ramContext.setSecretKey(PropertyKeyConst.SECRET_KEY);
         stsCredential = new StsCredential();
+        StsConfig.getInstance().setRamRoleName(null);
     }
     
     @After

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/injector/NamingResourceInjectorTest.java
Patch:
@@ -49,6 +49,7 @@ public void setUp() throws Exception {
         ramContext.setAccessKey(PropertyKeyConst.ACCESS_KEY);
         ramContext.setSecretKey(PropertyKeyConst.SECRET_KEY);
         stsCredential = new StsCredential();
+        StsConfig.getInstance().setRamRoleName(null);
     }
     
     @After
@@ -141,6 +142,7 @@ private void prepareForSts() throws NoSuchFieldException, IllegalAccessException
     
     private void clearForSts() throws NoSuchFieldException, IllegalAccessException {
         StsConfig.getInstance().setSecurityCredentialsUrl(null);
+        StsConfig.getInstance().setSecurityCredentials(null);
         Field field = StsCredentialHolder.class.getDeclaredField("stsCredential");
         field.setAccessible(true);
         field.set(StsCredentialHolder.getInstance(), null);

File: api/src/main/java/com/alibaba/nacos/api/remote/DefaultRequestFuture.java
Patch:
@@ -167,7 +167,8 @@ public Response get(long timeout) throws TimeoutException, InterruptedException
             if (timeoutInnerTrigger != null) {
                 timeoutInnerTrigger.triggerOnTimeout();
             }
-            throw new TimeoutException("request timeout after " + timeout + " milliseconds, requestId=" + requestId);
+            throw new TimeoutException(
+                "request timeout after " + timeout + " milliseconds, requestId=" + requestId + ", connectionId=" + connectionId);
         }
     }
     
@@ -191,7 +192,7 @@ public TimeoutHandler() {
         @Override
         public void run() {
             setFailResult(new TimeoutException(
-                    "Timeout After " + requestCallBack.getTimeout() + " milliseconds,requestId =" + requestId));
+                    "Timeout After " + requestCallBack.getTimeout() + " milliseconds, requestId=" + requestId + ", connectionId=" + connectionId));
             if (timeoutInnerTrigger != null) {
                 timeoutInnerTrigger.triggerOnTimeout();
             }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -268,7 +268,7 @@ public void onSnapshotSave(SnapshotWriter writer, Closure done) {
                     // components from implementing snapshots
                     
                     final BiConsumer<Boolean, Throwable> callFinally = (result, t) -> {
-                        boolean[] results = new boolean[wCtx.listFiles().size()];
+                        Boolean[] results = new Boolean[wCtx.listFiles().size()];
                         int[] index = new int[] {0};
                         wCtx.listFiles().forEach((file, meta) -> {
                             try {
@@ -278,7 +278,7 @@ public void onSnapshotSave(SnapshotWriter writer, Closure done) {
                             }
                         });
                         final Status status = result
-                                && !Arrays.asList(results).stream().anyMatch(Boolean.FALSE::equals) ? Status.OK()
+                                && Arrays.stream(results).allMatch(Boolean.TRUE::equals) ? Status.OK()
                                 : new Status(RaftError.EIO, "Fail to compress snapshot at %s, error is %s",
                                         writer.getPath(), t == null ? "" : t.getMessage());
                         done.run(status);

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/IdentifyConstants.java
Patch:
@@ -27,6 +27,8 @@ public class IdentifyConstants {
     
     public static final String SECRET_KEY = "secretKey";
     
+    public static final String SECURITY_TOKEN_HEADER = "Spas-SecurityToken";
+    
     public static final String TENANT_ID = "tenantId";
     
     public static final String PROPERTIES_FILENAME = "spas.properties";

File: client/src/test/java/com/alibaba/nacos/client/env/NacosClientPropertiesTest.java
Patch:
@@ -320,7 +320,7 @@ public void testGetPropertyFrom() {
                 "/home/properties_args");
         Assert.assertEquals(
                 NacosClientProperties.PROTOTYPE.getPropertyFrom(null, "nacos.home.default.test"),
-                "/home/jvm_args");
+                NacosClientProperties.PROTOTYPE.getProperty("nacos.home.default.test"));
     }
     
 }

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -223,7 +223,7 @@ public static String parsingEndpointRule(String endpointUrl) {
         }
         
         String endpointUrlSource = TemplateUtils
-                .stringBlankAndThenExecute(NacosClientProperties.PROTOTYPE.getProperty(endpointUrl, System.getenv(endpointUrl)),
+                .stringBlankAndThenExecute(NacosClientProperties.PROTOTYPE.getProperty(endpointUrl),
                         () -> NacosClientProperties.PROTOTYPE.getProperty(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_ENDPOINT_URL));
         
         if (StringUtils.isBlank(endpointUrlSource)) {

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -78,8 +78,9 @@ public void testGetSecurityHeadersForRam() throws Exception {
         Map<String, String> mockIdentityContext = new HashMap<>();
         String serviceName = "aaa";
         mockIdentityContext.put("ak", ak);
-        mockIdentityContext.put("data", System.currentTimeMillis() + "@@" + serviceName);
-        mockIdentityContext.put("signature", SignUtil.sign(System.currentTimeMillis() + "@@" + serviceName, sk));
+        String data = System.currentTimeMillis() + "@@" + serviceName;
+        mockIdentityContext.put("data", data);
+        mockIdentityContext.put("signature", SignUtil.sign(data, sk));
         when(sc.getIdentityContext(any(RequestResource.class))).thenReturn(mockIdentityContext);
         AbstractNamingClientProxy proxy = new MockNamingClientProxy(sc);
         Map<String, String> spasHeaders = proxy.getSecurityHeaders("", "", serviceName);

File: common/src/main/java/com/alibaba/nacos/common/utils/AbstractAssert.java
Patch:
@@ -58,6 +58,9 @@
  */
 public abstract class AbstractAssert {
 
+    private AbstractAssert() {
+    }
+
     /**
      * Assert a boolean expression, throwing an {@code IllegalStateException}
      * if the expression evaluates to {@code false}.

File: common/src/main/java/com/alibaba/nacos/common/utils/AbstractObjectUtils.java
Patch:
@@ -41,6 +41,9 @@
  */
 public abstract class AbstractObjectUtils {
 
+    private AbstractObjectUtils() {
+    }
+
     private static final int INITIAL_HASH = 7;
 
     private static final int MULTIPLIER = 31;

File: common/src/main/java/com/alibaba/nacos/common/utils/ArrayUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author zzq
  */
 public class ArrayUtils {
+
+    private ArrayUtils() {
+    }
     
     /**
      * <p>Checks if an array of Objects is empty or {@code null}.</p>

File: common/src/main/java/com/alibaba/nacos/common/utils/ByteUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ByteUtils {
+
+    private ByteUtils() {
+    }
     
     public static final byte[] EMPTY = new byte[0];
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ClassUtils.java
Patch:
@@ -43,6 +43,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ClassUtils {
+
+    private ClassUtils() {
+    }
     
     public static final String ARRAY_SUFFIX = "[]";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/CollectionUtils.java
Patch:
@@ -35,6 +35,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class CollectionUtils {
+
+    private CollectionUtils() {
+    }
     
     /**
      * Returns the <code>index</code>-th value in <code>object</code>, throwing

File: common/src/main/java/com/alibaba/nacos/common/utils/ConvertUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ConvertUtils {
+
+    private ConvertUtils() {
+    }
     
     private static final String NULL_STR = "null";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/DateFormatUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author zzq
  */
 public class DateFormatUtils {
+
+    private DateFormatUtils() {
+    }
     
     public static final String YYYYMMDD = "yyyyMMdd";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ExceptionUtil.java
Patch:
@@ -27,6 +27,9 @@
  * @since 1.2.0
  */
 public class ExceptionUtil {
+
+    private ExceptionUtil() {
+    }
     
     /**
      * Represents an empty exception, that is, no exception occurs, only a constant.

File: common/src/main/java/com/alibaba/nacos/common/utils/HttpMethod.java
Patch:
@@ -23,6 +23,9 @@
  * @since 0.8.0
  */
 public class HttpMethod {
+
+    private HttpMethod() {
+    }
     
     public static final String GET = "GET";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/InetAddressValidator.java
Patch:
@@ -22,6 +22,9 @@
  */
 @SuppressWarnings({"checkstyle:AbbreviationAsWordInName", "PMD.ClassNamingShouldBeCamelRule"})
 public class InetAddressValidator {
+
+    private InetAddressValidator() {
+    }
     
     private static final String PERCENT = "%";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -46,6 +46,9 @@
  * @author nacos
  */
 public class IoUtils {
+
+    private IoUtils() {
+    }
     
     /**
      * Try decompress by GZIP from stream.

File: common/src/main/java/com/alibaba/nacos/common/utils/JacksonUtils.java
Patch:
@@ -39,6 +39,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class JacksonUtils {
+
+    private JacksonUtils() {
+    }
     
     static ObjectMapper mapper = new ObjectMapper();
     

File: common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class LoggerUtils {
+
+    private LoggerUtils() {
+    }
     
     public static final String TRACE = "TRACE";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/MD5Utils.java
Patch:
@@ -26,6 +26,9 @@
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public class MD5Utils {
+
+    private MD5Utils() {
+    }
     
     private static final char[] DIGITS_LOWER = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd',
             'e', 'f'};

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtil.java
Patch:
@@ -31,6 +31,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class MapUtil {
+
+    private MapUtil() {
+    }
     
     /**
      * Null-safe check if the specified Dictionary is empty.

File: common/src/main/java/com/alibaba/nacos/common/utils/NamespaceUtil.java
Patch:
@@ -24,6 +24,9 @@
  * @date 2020/10/12 17:56
  */
 public class NamespaceUtil {
+
+    private NamespaceUtil() {
+    }
     
     private static final String NAMESPACE_PUBLIC_KEY = "public";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/NumberUtils.java
Patch:
@@ -21,6 +21,9 @@
  * @author zzq
  */
 public class NumberUtils {
+
+    private NumberUtils() {
+    }
     
     /**
      * Convert a <code>String</code> to an <code>int</code>, returning

File: common/src/main/java/com/alibaba/nacos/common/utils/PropertyUtils.java
Patch:
@@ -22,6 +22,9 @@
  * @author Pixy Yuan on 2022/3/24
  */
 public class PropertyUtils {
+
+    private PropertyUtils() {
+    }
     
     private static final String PROCESSORS_ENV_NAME = "NACOS_COMMON_PROCESSORS";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/RandomUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author zzq
  */
 public class RandomUtils {
+
+    private RandomUtils() {
+    }
     
     /**
      * Random Object for random method.

File: common/src/main/java/com/alibaba/nacos/common/utils/ReflectUtils.java
Patch:
@@ -28,6 +28,9 @@
  * @version $Id: ReflectUtils.java, v 0.1 2020年08月20日 12:57 PM liuzunfei Exp $
  */
 public class ReflectUtils {
+
+    private ReflectUtils() {
+    }
     
     /**
      * get filed value of  obj.

File: common/src/main/java/com/alibaba/nacos/common/utils/ResourceUtils.java
Patch:
@@ -32,6 +32,9 @@
  * @author boyan
  */
 public class ResourceUtils {
+
+    private ResourceUtils() {
+    }
     
     private static final String CLASSPATH_PREFIX = "classpath:";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -36,6 +36,9 @@
  * @author zzq
  */
 public class StringUtils {
+
+    private StringUtils() {
+    }
     
     public static final String DOT = ".";
     

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -29,6 +29,9 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class ThreadUtils {
+
+    private ThreadUtils() {
+    }
     
     private static final int THREAD_MULTIPLER = 2;
     

File: common/src/main/java/com/alibaba/nacos/common/utils/TypeUtils.java
Patch:
@@ -25,6 +25,9 @@
  * @author zzq
  */
 public class TypeUtils {
+
+    private TypeUtils() {
+    }
     
     /**
      * Create a parameterized type instance.

File: common/src/main/java/com/alibaba/nacos/common/utils/UuidUtils.java
Patch:
@@ -24,6 +24,9 @@
  * @author nkorange
  */
 public class UuidUtils {
+
+    private UuidUtils() {
+    }
     
     public static String generateUuid() {
         return UUID.randomUUID().toString();

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -27,6 +27,9 @@
  * @author xingxuechao on:2019/2/27 12:32 PM
  */
 public class VersionUtils {
+
+    private VersionUtils() {
+    }
     
     public static String version;
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -1794,7 +1794,7 @@ private void updateConfigInfoAtomicCas(final ConfigInfo configInfo, final String
                 use, effect, type, schema, configInfo.getDataId(), configInfo.getGroup(), tenantTmp,
                 configInfo.getMd5()};
         
-        EmbeddedStorageContextUtils.addSqlContext(sql, args);
+        EmbeddedStorageContextUtils.addSqlContext(true, sql, args);
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthConfig.java
Patch:
@@ -31,7 +31,7 @@
 public class AuthConfig {
     
     @Bean
-    public FilterRegistrationBean authFilterRegistration(AuthFilter authFilter) {
+    public FilterRegistrationBean<AuthFilter> authFilterRegistration(AuthFilter authFilter) {
         FilterRegistrationBean<AuthFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(authFilter);
         registration.addUrlPatterns("/*");
@@ -45,4 +45,4 @@ public FilterRegistrationBean authFilterRegistration(AuthFilter authFilter) {
     public AuthFilter authFilter(AuthConfigs authConfigs, ControllerMethodsCache methodsCache) {
         return new AuthFilter(authConfigs, methodsCache);
     }
-}
+}
\ No newline at end of file

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcServerConstants.java
Patch:
@@ -93,10 +93,10 @@ static class GrpcConfig {
         
         static final int DEFAULT_GRPC_MAX_INBOUND_MSG_SIZE = 10 * 1024 * 1024;
         
-        static final long DEFAULT_GRPC_KEEP_ALIVE_TIME = GrpcUtil.DEFAULT_SERVER_KEEPALIVE_TIME_NANOS;
+        static final long DEFAULT_GRPC_KEEP_ALIVE_TIME = TimeUnit.NANOSECONDS.toMillis(GrpcUtil.DEFAULT_SERVER_KEEPALIVE_TIME_NANOS);
         
-        static final long DEFAULT_GRPC_KEEP_ALIVE_TIMEOUT = GrpcUtil.DEFAULT_SERVER_KEEPALIVE_TIMEOUT_NANOS;
+        static final long DEFAULT_GRPC_KEEP_ALIVE_TIMEOUT = TimeUnit.NANOSECONDS.toMillis(GrpcUtil.DEFAULT_SERVER_KEEPALIVE_TIMEOUT_NANOS);
         
-        static final long DEFAULT_GRPC_PERMIT_KEEP_ALIVE_TIME = TimeUnit.MINUTES.toNanos(5L);
+        static final long DEFAULT_GRPC_PERMIT_KEEP_ALIVE_TIME = TimeUnit.MINUTES.toMillis(5L);
     }
 }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AuthenticationNamagerDelegator.java
Patch:
@@ -77,7 +77,7 @@ public boolean hasGlobalAdminRole(NacosUser nacosUser) {
     }
     
     private IAuthenticationManager getManager() {
-        if (AuthSystemTypes.NACOS.name().equals(authConfigs.getNacosAuthSystemType())) {
+        if (AuthSystemTypes.LDAP.name().equalsIgnoreCase(authConfigs.getNacosAuthSystemType())) {
             return ldapAuthenticatoinManager.getIfAvailable();
         }
         

File: common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java
Patch:
@@ -63,7 +63,7 @@ public abstract class AbstractHttpClientFactory implements HttpClientFactory {
     
     private static final String ASYNC_THREAD_NAME = "nacos-http-async-client";
     
-    private static final String AYNC_IO_REACTOR_NAME = ASYNC_THREAD_NAME + "#I/O Reactor";
+    private static final String ASYNC_IO_REACTOR_NAME = ASYNC_THREAD_NAME + "#I/O Reactor";
     
     @Override
     public NacosRestTemplate createNacosRestTemplate() {
@@ -82,7 +82,7 @@ public NacosRestTemplate createNacosRestTemplate() {
     @Override
     public NacosAsyncRestTemplate createNacosAsyncRestTemplate() {
         final HttpClientConfig originalRequestConfig = buildHttpClientConfig();
-        final DefaultConnectingIOReactor ioreactor = getIoReactor(AYNC_IO_REACTOR_NAME);
+        final DefaultConnectingIOReactor ioreactor = getIoReactor(ASYNC_IO_REACTOR_NAME);
         final RequestConfig defaultConfig = getRequestConfig();
         final NHttpClientConnectionManager connectionManager = getConnectionManager(originalRequestConfig, ioreactor);
         monitorAndExtension(connectionManager);

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthConfig.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.plugin.auth.impl.configuration.ConditionOnLdapAuth;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
@@ -83,7 +84,7 @@ public LdapAuthenticationProvider ldapAuthenticationProvider(LdapTemplate ldapTe
     @Bean
     @Conditional(ConditionOnLdapAuth.class)
     public IAuthenticationManager ldapAuthenticatoinManager(LdapTemplate ldapTemplate,
-            NacosUserDetailsServiceImpl userDetailsService, JwtTokenManager jwtTokenManager,
+            NacosUserDetailsServiceImpl userDetailsService, TokenManagerDelegate jwtTokenManager,
             NacosRoleServiceImpl roleService) {
         return new LdapAuthenticationManager(ldapTemplate, userDetailsService, jwtTokenManager, roleService,
                 filterPrefix, caseSensitive);

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthManager.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationManager;
@@ -48,7 +49,7 @@
 public class NacosAuthManager {
     
     @Autowired
-    private JwtTokenManager tokenManager;
+    private TokenManagerDelegate tokenManager;
     
     @Autowired
     private AuthenticationManager authenticationManager;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/AbstractAuthenticationManager.java
Patch:
@@ -21,9 +21,9 @@
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.api.Permission;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
-import com.alibaba.nacos.plugin.auth.impl.JwtTokenManager;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetails;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
@@ -41,12 +41,12 @@ public class AbstractAuthenticationManager implements IAuthenticationManager {
     
     protected NacosUserDetailsServiceImpl userDetailsService;
     
-    protected JwtTokenManager jwtTokenManager;
+    protected TokenManagerDelegate jwtTokenManager;
     
     protected NacosRoleServiceImpl roleService;
     
     public AbstractAuthenticationManager(NacosUserDetailsServiceImpl userDetailsService,
-            JwtTokenManager jwtTokenManager, NacosRoleServiceImpl roleService) {
+            TokenManagerDelegate jwtTokenManager, NacosRoleServiceImpl roleService) {
         this.userDetailsService = userDetailsService;
         this.jwtTokenManager = jwtTokenManager;
         this.roleService = roleService;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/DefaultAuthenticationManager.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.plugin.auth.impl.authenticate;
 
-import com.alibaba.nacos.plugin.auth.impl.JwtTokenManager;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
 
 /**
@@ -28,8 +28,8 @@
  */
 public class DefaultAuthenticationManager extends AbstractAuthenticationManager {
     
-    public DefaultAuthenticationManager(NacosUserDetailsServiceImpl userDetailsService, JwtTokenManager jwtTokenManager,
-            NacosRoleServiceImpl roleService) {
+    public DefaultAuthenticationManager(NacosUserDetailsServiceImpl userDetailsService,
+            TokenManagerDelegate jwtTokenManager, NacosRoleServiceImpl roleService) {
         super(userDetailsService, jwtTokenManager, roleService);
     }
 }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/authenticate/LdapAuthenticationManager.java
Patch:
@@ -19,10 +19,10 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
-import com.alibaba.nacos.plugin.auth.impl.JwtTokenManager;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetails;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
@@ -46,7 +46,7 @@ public class LdapAuthenticationManager extends AbstractAuthenticationManager {
     private final LdapTemplate ldapTemplate;
     
     public LdapAuthenticationManager(LdapTemplate ldapTemplate, NacosUserDetailsServiceImpl userDetailsService,
-            JwtTokenManager jwtTokenManager, NacosRoleServiceImpl roleService, String filterPrefix,
+            TokenManagerDelegate jwtTokenManager, NacosRoleServiceImpl roleService, String filterPrefix,
             boolean caseSensitive) {
         super(userDetailsService, jwtTokenManager, roleService);
         this.ldapTemplate = ldapTemplate;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java
Patch:
@@ -26,13 +26,13 @@
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
-import com.alibaba.nacos.plugin.auth.impl.JwtTokenManager;
 import com.alibaba.nacos.plugin.auth.impl.authenticate.IAuthenticationManager;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthSystemTypes;
 import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
 import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
 import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
@@ -70,7 +70,7 @@
 public class UserController {
     
     @Autowired
-    private JwtTokenManager jwtTokenManager;
+    private TokenManagerDelegate jwtTokenManager;
     
     @Autowired
     @Deprecated
@@ -232,7 +232,7 @@ public Object login(@RequestParam String username, @RequestParam String password
             
             ObjectNode result = JacksonUtils.createEmptyJsonNode();
             result.put(Constants.ACCESS_TOKEN, user.getToken());
-            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenValidityInSeconds());
+            result.put(Constants.TOKEN_TTL, jwtTokenManager.getTokenTtlInSeconds(user.getToken()));
             result.put(Constants.GLOBAL_ADMIN, iAuthenticationManager.hasGlobalAdminRole(user));
             result.put(Constants.USERNAME, user.getUserName());
             return result;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/filter/JwtAuthenticationTokenFilter.java
Patch:
@@ -19,8 +19,8 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
-import com.alibaba.nacos.plugin.auth.impl.JwtTokenManager;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
+import com.alibaba.nacos.plugin.auth.impl.token.TokenManagerDelegate;
 import org.springframework.security.core.Authentication;
 import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.web.filter.OncePerRequestFilter;
@@ -40,9 +40,9 @@ public class JwtAuthenticationTokenFilter extends OncePerRequestFilter {
     
     private static final String TOKEN_PREFIX = "Bearer ";
     
-    private final JwtTokenManager tokenManager;
+    private final TokenManagerDelegate tokenManager;
     
-    public JwtAuthenticationTokenFilter(JwtTokenManager tokenManager) {
+    public JwtAuthenticationTokenFilter(TokenManagerDelegate tokenManager) {
         this.tokenManager = tokenManager;
     }
     

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/redo/NamingGrpcRedoServiceTest.java
Patch:
@@ -156,6 +156,7 @@ public void testRemoveInstanceForRedo() {
         assertTrue(registeredInstances.isEmpty());
         redoService.cacheInstanceForRedo(SERVICE, GROUP, new Instance());
         assertFalse(registeredInstances.isEmpty());
+        redoService.instanceDeregister(SERVICE, GROUP);
         redoService.removeInstanceForRedo(SERVICE, GROUP);
         assertTrue(registeredInstances.isEmpty());
     }
@@ -221,6 +222,7 @@ public void testRemoveSubscriberForRedo() {
         assertTrue(subscribes.isEmpty());
         redoService.cacheSubscriberForRedo(SERVICE, GROUP, CLUSTER);
         assertFalse(subscribes.isEmpty());
+        redoService.subscriberDeregister(SERVICE, GROUP, CLUSTER);
         redoService.removeSubscriberForRedo(SERVICE, GROUP, CLUSTER);
         assertTrue(subscribes.isEmpty());
     }

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/BatchInstanceRequestHandler.java
Patch:
@@ -21,9 +21,11 @@
 import com.alibaba.nacos.api.naming.remote.request.BatchInstanceRequest;
 import com.alibaba.nacos.api.naming.remote.response.BatchInstanceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
+import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.stereotype.Component;
 
 /**
@@ -41,6 +43,7 @@ public BatchInstanceRequestHandler(EphemeralClientOperationServiceImpl clientOpe
     }
     
     @Override
+    @Secured(action = ActionTypes.WRITE)
     public BatchInstanceResponse handle(BatchInstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service.newService(request.getNamespace(), request.getGroupName(), request.getServiceName(),
                 true);

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedHistoryConfigInfoPersistServiceImpl.java
Patch:
@@ -145,7 +145,7 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
         HistoryConfigInfoMapper historyConfigInfoMapper = mapperManager.findMapper(
                 dataSourceService.getDataSourceType(), TableConstant.HIS_CONFIG_INFO);
         String sqlCountRows = historyConfigInfoMapper.count(Arrays.asList("data_id", "group_id", "tenant_id"));
-        String sqlFetchRows = historyConfigInfoMapper.findConfigHistoryFetchRows();
+        String sqlFetchRows = historyConfigInfoMapper.pageFindConfigHistoryFetchRows(pageNo, pageSize);
         
         PaginationHelper<ConfigHistoryInfo> helper = createPaginationHelper();
         return helper.fetchPage(sqlCountRows, sqlFetchRows, new Object[] {dataId, group, tenantTmp}, pageNo, pageSize,

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalHistoryConfigInfoPersistServiceImpl.java
Patch:
@@ -150,7 +150,7 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
         HistoryConfigInfoMapper historyConfigInfoMapper = mapperManager.findMapper(
                 dataSourceService.getDataSourceType(), TableConstant.HIS_CONFIG_INFO);
         String sqlCountRows = historyConfigInfoMapper.count(Arrays.asList("data_id", "group_id", "tenant_id"));
-        String sqlFetchRows = historyConfigInfoMapper.findConfigHistoryFetchRows();
+        String sqlFetchRows = historyConfigInfoMapper.pageFindConfigHistoryFetchRows(pageNo, pageSize);
         
         Page<ConfigHistoryInfo> page = null;
         try {

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/CustomAuthenticationProvider.java
Patch:
@@ -31,6 +31,7 @@
  * @author wfnuser
  */
 @Component
+@Deprecated
 public class CustomAuthenticationProvider implements AuthenticationProvider {
     
     @Autowired

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/JwtAuthenticationEntryPoint.java
Patch:
@@ -33,6 +33,7 @@
  * @author wfnuser
  */
 @Component
+@Deprecated
 public class JwtAuthenticationEntryPoint implements AuthenticationEntryPoint {
     
     private static final Logger LOGGER = LoggerFactory.getLogger(JwtAuthenticationEntryPoint.class);

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthManager.java
Patch:
@@ -44,6 +44,7 @@
  * @since 1.2.0
  */
 @Component
+@Deprecated
 public class NacosAuthManager {
     
     @Autowired

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -153,7 +153,7 @@ private List<Instance> getRetainInstance(String serviceName, String groupName, L
                             instances));
         }
         String combinedServiceName = NamingUtils.getGroupedName(serviceName, groupName);
-        InstanceRedoData instanceRedoData = redoService.getRegisteredInstancesBykey(combinedServiceName);
+        InstanceRedoData instanceRedoData = redoService.getRegisteredInstancesByKey(combinedServiceName);
         if (!(instanceRedoData instanceof BatchInstanceRedoData)) {
             throw new NacosException(NacosException.INVALID_PARAM, String.format(
                     "[Batch deRegistration] batch deRegister is not BatchInstanceRedoData type , instances: %s,",
@@ -231,7 +231,7 @@ public void doDeregisterService(String serviceName, String groupName, Instance i
         InstanceRequest request = new InstanceRequest(namespaceId, serviceName, groupName,
                 NamingRemoteConstants.DE_REGISTER_INSTANCE, instance);
         requestToServer(request, Response.class);
-        redoService.removeInstanceForRedo(serviceName, groupName);
+        redoService.instanceDeregistered(serviceName, groupName);
     }
     
     @Override

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/controller/UserControllerTest.java
Patch:
@@ -25,7 +25,6 @@
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.databind.JsonNode;
-import io.jsonwebtoken.io.Encoders;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -37,6 +36,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.lang.reflect.Field;
 import java.nio.charset.StandardCharsets;
+import java.util.Base64;
 
 import static org.junit.Assert.assertTrue;
 import static org.mockito.Mockito.when;
@@ -71,7 +71,7 @@ public void setUp() throws Exception {
         injectObject("authManager", authManager);
         
         MockEnvironment mockEnvironment = new MockEnvironment();
-        mockEnvironment.setProperty(AuthConstants.TOKEN_SECRET_KEY, Encoders.BASE64.encode(
+        mockEnvironment.setProperty(AuthConstants.TOKEN_SECRET_KEY, Base64.getEncoder().encodeToString(
                 "SecretKey0123$567890$234567890123456789012345678901234567890123456789".getBytes(
                         StandardCharsets.UTF_8)));
         mockEnvironment.setProperty(AuthConstants.TOKEN_EXPIRE_SECONDS,

File: core/src/test/java/com/alibaba/nacos/core/remote/grpc/GrpcBiStreamRequestAcceptorTest.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.ConnectResetResponse;
 import com.alibaba.nacos.api.remote.response.Response;
+import com.alibaba.nacos.common.remote.PayloadRegistry;
 import com.alibaba.nacos.common.remote.client.grpc.GrpcUtils;
 import com.alibaba.nacos.core.remote.ConnectionManager;
 import io.grpc.Context;
@@ -78,6 +79,7 @@ public class GrpcBiStreamRequestAcceptorTest {
     
     @Before
     public void setUp() throws IOException {
+        PayloadRegistry.init();
         String serverName = InProcessServerBuilder.generateName();
         String remoteIp = "127.0.0.1";
         Server mockServer = InProcessServerBuilder

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -44,7 +44,7 @@ public FilterRegistrationBean distroFilterRegistration() {
         registration.setFilter(distroFilter());
         registration.addUrlPatterns(UTL_PATTERNS);
         registration.setName(DISTRO_FILTER);
-        registration.setOrder(6);
+        registration.setOrder(7);
         return registration;
     }
     
@@ -74,7 +74,7 @@ public FilterRegistrationBean clientAttributesFilterRegistration() {
         registration.setFilter(clientAttributesFilter());
         registration.addUrlPatterns(UTL_PATTERNS);
         registration.setName(CLIENT_ATTRIBUTES_FILTER);
-        registration.setOrder(7);
+        registration.setOrder(8);
         return registration;
     }
     

File: common/src/main/java/com/alibaba/nacos/common/utils/TypeUtils.java
Patch:
@@ -43,7 +43,6 @@ public static ParameterizedType parameterize(final Class<?> raw, final Type... t
      *
      * @param raw           raw class
      * @param typeArguments the types used for parameterization
-     * @return {@link ParameterizedType}
      */
     private static void checkParameterizeMethodParameter(Class<?> raw, final Type... typeArguments) {
         if (raw == null) {

File: console/src/main/java/com/alibaba/nacos/console/service/NamespaceOperationService.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.exception.api.NacosApiException;
 import com.alibaba.nacos.api.model.v2.ErrorCode;
+import com.alibaba.nacos.common.utils.NamespaceUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.repository.CommonPersistService;
@@ -70,7 +71,7 @@ public List<Namespace> getNamespaceList() {
         // TODO 获取用kp
         List<TenantInfo> tenantInfos = commonPersistService.findTenantByKp(DEFAULT_KP);
         
-        Namespace namespace0 = new Namespace("", DEFAULT_NAMESPACE, DEFAULT_QUOTA,
+        Namespace namespace0 = new Namespace(NamespaceUtil.getNamespaceDefaultId(), DEFAULT_NAMESPACE, DEFAULT_QUOTA,
                 configInfoPersistService.configInfoCount(DEFAULT_TENANT), NamespaceTypeEnum.GLOBAL.getType());
         List<Namespace> namespaceList = new ArrayList<>();
         namespaceList.add(namespace0);
@@ -92,7 +93,7 @@ public List<Namespace> getNamespaceList() {
      */
     public NamespaceAllInfo getNamespace(String namespaceId) throws NacosException {
         // TODO 获取用kp
-        if (StringUtils.isBlank(namespaceId)) {
+        if (StringUtils.isBlank(namespaceId) || namespaceId.equals(NamespaceUtil.getNamespaceDefaultId())) {
             return new NamespaceAllInfo(namespaceId, DEFAULT_NAMESPACE_SHOW_NAME, DEFAULT_QUOTA,
                     configInfoPersistService.configInfoCount(DEFAULT_TENANT), NamespaceTypeEnum.GLOBAL.getType(),
                     DEFAULT_NAMESPACE_DESCRIPTION);

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/ConfigInfoBetaMapperByDerbyTest.java
Patch:
@@ -36,7 +36,7 @@ public void testUpdateConfigInfo4BetaCas() {
         String sql = configInfoBetaMapperByDerby.updateConfigInfo4BetaCas();
         Assert.assertEquals(sql, "UPDATE config_info_beta SET content = ?,md5 = ?,beta_ips = ?,src_ip = ?,src_user = ?,"
                 + "gmt_modified = ?,app_name = ? WHERE data_id = ? AND group_id = ? AND tenant_id = ? AND "
-                + "(md5 = ? OR md5 IS NULL OR md5 = '')");
+                + "(md5 = ? OR md5 is null OR md5 = '')");
     }
     
     @Test

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/ConfigInfoMapperByDerbyTest.java
Patch:
@@ -38,7 +38,7 @@ public void setUp() throws Exception {
     @Test
     public void testFindConfigMaxId() {
         String sql = configInfoMapperByDerby.findConfigMaxId();
-        Assert.assertEquals(sql, "SELECT max(id) FROM config_info");
+        Assert.assertEquals(sql, "SELECT MAX(id) FROM config_info");
     }
     
     @Test
@@ -108,8 +108,8 @@ public void testFindAllConfigInfoFragment() {
     public void testFindChangeConfig() {
         String sql = configInfoMapperByDerby.findChangeConfig();
         Assert.assertEquals(sql,
-                "SELECT data_id, group_id, tenant_id, app_name, content, gmt_modified FROM config_info "
-                        + "WHERE gmt_modified > = ? AND gmt_modified <= ?");
+                "SELECT data_id, group_id, tenant_id, app_name, content, gmt_modified, encrypted_data_key FROM config_info "
+                        + "WHERE gmt_modified >= ? AND gmt_modified <= ?");
     }
     
     @Test

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerbyTest.java
Patch:
@@ -50,7 +50,7 @@ public void testFindDeletedConfig() {
         String sql = historyConfigInfoMapperByDerby.findDeletedConfig();
         Assert.assertEquals(sql,
                 "SELECT DISTINCT data_id, group_id, tenant_id FROM his_config_info WHERE op_type = 'D' AND "
-                        + "gmt_modified >=? AND gmt_modified <= ?");
+                        + "gmt_modified >= ? AND gmt_modified <= ?");
     }
     
     @Test

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoBetaMapperByMySqlTest.java
Patch:
@@ -36,7 +36,7 @@ public void testUpdateConfigInfo4BetaCas() {
         String sql = configInfoBetaMapperByMySql.updateConfigInfo4BetaCas();
         Assert.assertEquals(sql,
                 "UPDATE config_info_beta SET content = ?,md5 = ?,beta_ips = ?,src_ip = ?,src_user = ?,gmt_modified = ?,app_name = ? "
-                        + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? AND (md5 = ? or md5 is null or md5 = '')");
+                        + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? AND (md5 = ? OR md5 is null OR md5 = '')");
     }
     
     @Test

File: plugin/datasource/src/test/java/com/alibaba/nacos/plugin/datasource/impl/mysql/HistoryConfigInfoMapperByMySqlTest.java
Patch:
@@ -64,7 +64,7 @@ public void testDetailPreviousConfigHistory() {
         String sql = historyConfigInfoMapperByMySql.detailPreviousConfigHistory();
         Assert.assertEquals(sql,
                 "SELECT nid,data_id,group_id,tenant_id,app_name,content,md5,src_user,src_ip,op_type,gmt_create,"
-                        + "gmt_modified FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?) ");
+                        + "gmt_modified FROM his_config_info WHERE nid = (SELECT max(nid) FROM his_config_info WHERE id = ?)");
     }
     
     @Test

File: config/src/main/java/com/alibaba/nacos/config/server/model/form/ConfigForm.java
Patch:
@@ -38,7 +38,7 @@ public class ConfigForm implements Serializable {
     
     private String group;
     
-    private String namespaceId;
+    private String namespaceId = StringUtils.EMPTY;
     
     private String content;
     

File: test/config-test/src/test/java/com/alibaba/nacos/test/base/ConfigCleanUtils.java
Patch:
@@ -38,10 +38,11 @@ public static void cleanClientCache() throws IOException {
      *
      * @param caseName test case name
      */
-    public static void changeToNewTestNacosHome(String caseName) {
+    public static String changeToNewTestNacosHome(String caseName) {
         String userHome = System.getProperty("user.home");
         String testNacosHome = userHome + File.separator + "nacos" + File.separator + caseName;
         System.setProperty("nacos.home", testNacosHome);
+        return testNacosHome;
     }
     
 }

File: core/src/main/java/com/alibaba/nacos/core/utils/StringPool.java
Patch:
@@ -55,7 +55,7 @@ public static String get(String key) {
             value = GROUP_KEY_CACHE.get(key);
         }
         
-        return value;
+        return value == null ? key : value;
     }
     
     public static long size() {

File: prometheus/src/main/java/com/alibaba/nacos/prometheus/controller/PrometheusController.java
Patch:
@@ -59,7 +59,7 @@ public PrometheusController() {
     /**
      * Get all service instances.
      *
-     * @throws NacosException   NacosException.
+     * @throws NacosException NacosException.
      */
     @GetMapping(value = ApiConstants.PROMETHEUS_CONTROLLER_PATH, produces = "application/json; charset=UTF-8")
     public ResponseEntity metric() throws NacosException {
@@ -70,7 +70,8 @@ public ResponseEntity metric() throws NacosException {
             Set<Service> singletons = serviceManager.getSingletons(namespace);
             for (Service service : singletons) {
                 
-                List<? extends Instance> instances = instanceServiceV2.listAllInstances(namespace, service.getName());
+                List<? extends Instance> instances = instanceServiceV2.listAllInstances(namespace,
+                        service.getGroupedServiceName());
                 
                 for (Instance instance : instances) {
                     targetSet.add(instance);

File: console/src/main/java/com/alibaba/nacos/console/controller/v2/NamespaceControllerV2.java
Patch:
@@ -51,7 +51,7 @@
  */
 @NacosApi
 @RestController
-@RequestMapping(path = "/v2/console/namespace")
+@RequestMapping("/v2/console/namespace")
 public class NamespaceControllerV2 {
     
     private final NamespaceOperationService namespaceOperationService;

File: auth/src/main/java/com/alibaba/nacos/auth/GrpcProtocolAuthService.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.Map;
 
 /**
- * Auth Service for Http protocol.
+ * Auth Service for Grpc protocol.
  *
  * @author xiweng.yy
  */

File: client/src/test/java/com/alibaba/nacos/client/utils/ChooserTest.java
Patch:
@@ -60,6 +60,7 @@ public void testOnlyOneInstanceWeightIsNotZero() {
         assertTrue(target.getWeight() > 0);
     }
     
+    // getOneInstanceNotZeroList
     private List<Instance> getOneInstanceNotZeroList() {
         List<Instance> list = new ArrayList<>();
         int size = ThreadLocalRandom.current().nextInt(0, 1000);

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.remote.RequestHandler;
-import com.alibaba.nacos.core.remote.control.TpsControl;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.utils.StringPool;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeClusterSyncRequestHandler.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.core.remote.RequestHandler;
-import com.alibaba.nacos.core.remote.control.TpsControl;
+import com.alibaba.nacos.core.control.TpsControl;
 import org.springframework.stereotype.Component;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -35,7 +35,7 @@
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.remote.RequestHandler;
-import com.alibaba.nacos.core.remote.control.TpsControl;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;
@@ -70,8 +70,7 @@ public ConfigPublishRequestHandler(ConfigInfoPersistService configInfoPersistSer
     }
     
     @Override
-    @TpsControl(pointName = "ConfigPublish", parsers = {ConfigPublishGroupKeyParser.class,
-            ConfigPublishGroupParser.class})
+    @TpsControl(pointName = "ConfigPublish")
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
     public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta meta) throws NacosException {
         

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -37,7 +37,7 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.remote.RequestHandler;
-import com.alibaba.nacos.core.remote.control.TpsControl;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.apache.commons.io.FileUtils;
@@ -79,7 +79,7 @@ public ConfigQueryRequestHandler(ConfigInfoPersistService configInfoPersistServi
     }
     
     @Override
-    @TpsControl(pointName = "ConfigQuery", parsers = {ConfigQueryGroupKeyParser.class, ConfigQueryGroupParser.class})
+    @TpsControl(pointName = "ConfigQuery")
     @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
     public ConfigQueryResponse handle(ConfigQueryRequest request, RequestMeta meta) throws NacosException {
         

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigRemoveRequestHandler.java
Patch:
@@ -30,7 +30,7 @@
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.remote.RequestHandler;
-import com.alibaba.nacos.core.remote.control.TpsControl;
+import com.alibaba.nacos.core.control.TpsControl;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.constant.SignType;

File: consistency/src/main/java/com/alibaba/nacos/consistency/RequestProcessor.java
Patch:
@@ -22,7 +22,8 @@
 
 /**
  * Can be discovered through SPI or Spring, This interface is just a function definition interface. Different
- * consistency protocols have their own LogDispatcher. It is not recommended to directly implement this interface.
+ * consistency protocols have their pwd
+ * LogDispatcher. It is not recommended to directly implement this interface.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */

File: core/src/main/java/com/alibaba/nacos/core/remote/HealthCheckRequestHandler.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.request.HealthCheckRequest;
 import com.alibaba.nacos.api.remote.response.HealthCheckResponse;
-import com.alibaba.nacos.core.remote.control.TpsControl;
+import com.alibaba.nacos.core.control.TpsControl;
 import org.springframework.stereotype.Component;
 
 /**

File: core/src/main/java/com/alibaba/nacos/core/remote/core/ServerLoaderInfoRequestHandler.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.request.ServerLoaderInfoRequest;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
-import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.remote.ConnectionManager;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -51,7 +50,6 @@ public ServerLoaderInfoResponse handle(ServerLoaderInfoRequest request, RequestM
         filter.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         serverLoaderInfoResponse
                 .putMetricsValue("sdkConCount", String.valueOf(connectionManager.currentClientsCount(filter)));
-        serverLoaderInfoResponse.putMetricsValue("limitRule", JacksonUtils.toJson(connectionManager.getConnectionLimitRule()));
         serverLoaderInfoResponse.putMetricsValue("load", String.valueOf(EnvUtil.getLoad()));
         serverLoaderInfoResponse.putMetricsValue("cpu", String.valueOf(EnvUtil.getCpu()));
         

File: core/src/test/java/com/alibaba/nacos/core/remote/core/ServerLoaderInfoRequestHandlerTest.java
Patch:
@@ -49,7 +49,6 @@ public class ServerLoaderInfoRequestHandlerTest {
     public void testHandle() {
         Mockito.when(connectionManager.currentClientsCount()).thenReturn(1);
         Mockito.when(connectionManager.currentClientsCount(Mockito.any())).thenReturn(1);
-        Mockito.when(connectionManager.getConnectionLimitRule()).thenReturn(null);
     
         ServerLoaderInfoRequest request = new ServerLoaderInfoRequest();
         RequestMeta meta = new RequestMeta();

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHookTest.java
Patch:
@@ -18,9 +18,9 @@
 
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.core.remote.control.TpsMonitorManager;
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.naming.pojo.Subscriber;
+import com.alibaba.nacos.plugin.control.tps.TpsControlManager;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Test;
@@ -49,7 +49,7 @@ public class NacosMonitorPushResultHookTest {
     private Subscriber subscriber;
     
     @Mock
-    private TpsMonitorManager tpsMonitorManager;
+    private TpsControlManager tpsControlManager;
     
     @Mock
     private ConfigurableApplicationContext context;
@@ -72,7 +72,7 @@ public void setUp() {
         when(pushResult.getData()).thenReturn(serviceInfo);
         when(pushResult.getSubscriber()).thenReturn(subscriber);
         ApplicationUtils.injectContext(context);
-        when(context.getBean(TpsMonitorManager.class)).thenReturn(tpsMonitorManager);
+        when(context.getBean(TpsControlManager.class)).thenReturn(tpsControlManager);
     }
     
     @Test

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/McpConnection.java
Patch:
@@ -32,7 +32,7 @@ public McpConnection(StreamObserver<Mcp.Resources> streamObserver) {
     }
 
     @Override
-    public void push(Mcp.Resources response, WatchedStatus watchedStatus) {
+    public synchronized void push(Mcp.Resources response, WatchedStatus watchedStatus) {
         if (Loggers.MAIN.isDebugEnabled()) {
             Loggers.MAIN.debug("Mcp.Resources: {}", response.toString());
         }

File: istio/src/main/java/com/alibaba/nacos/istio/xds/XdsConnection.java
Patch:
@@ -32,7 +32,7 @@ public XdsConnection(StreamObserver<DiscoveryResponse> streamObserver) {
     }
 
     @Override
-    public void push(DiscoveryResponse response, WatchedStatus watchedStatus) {
+    public synchronized void push(DiscoveryResponse response, WatchedStatus watchedStatus) {
         if (Loggers.MAIN.isDebugEnabled()) {
             Loggers.MAIN.debug("discoveryResponse: {}", response.toString());
         }

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
-import org.springframework.core.annotation.Order;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -32,7 +31,6 @@
  *
  * @author Nacos
  */
-@Order(0)
 @ControllerAdvice
 public class GlobalExceptionHandler {
     

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -42,6 +42,7 @@ public class ConsoleExceptionHandler {
     
     @ExceptionHandler(AccessException.class)
     private ResponseEntity<String> handleAccessException(AccessException e) {
+        LOGGER.error("got exception. {}", e.getErrMsg());
         return ResponseEntity.status(HttpStatus.FORBIDDEN).body(e.getErrMsg());
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedConfigInfoPersistServiceImpl.java
Patch:
@@ -985,8 +985,8 @@ public Page<ConfigInfo> findConfigInfoLike4Page(final int pageNo, final int page
             params.addAll(Arrays.asList(tagArr));
             ConfigTagsRelationMapper configTagsRelationMapper = mapperManager.findMapper(
                     dataSourceService.getDataSourceType(), TableConstant.CONFIG_TAGS_RELATION);
-            sqlCountRows = configTagsRelationMapper.findConfigInfoLike4PageCountRows(paramsMap, params.size());
-            sqlFetchRows = configTagsRelationMapper.findConfigInfoLike4PageFetchRows(paramsMap, params.size(), startRow,
+            sqlCountRows = configTagsRelationMapper.findConfigInfoLike4PageCountRows(paramsMap, tagArr.length);
+            sqlFetchRows = configTagsRelationMapper.findConfigInfoLike4PageFetchRows(paramsMap, tagArr.length, startRow,
                     pageSize);
         } else {
             ConfigInfoMapper configInfoMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -1320,9 +1320,9 @@ public Page<ConfigInfo> findConfigInfoLike4Page(final int pageNo, final int page
             params.addAll(Arrays.asList(tagArr));
             ConfigTagsRelationMapper configTagsRelationMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                     TableConstant.CONFIG_TAGS_RELATION);
-            sqlCountRows = configTagsRelationMapper.findConfigInfoLike4PageCountRows(paramsMap, params.size());
+            sqlCountRows = configTagsRelationMapper.findConfigInfoLike4PageCountRows(paramsMap, tagArr.length);
             sqlFetchRows = configTagsRelationMapper
-                    .findConfigInfoLike4PageFetchRows(paramsMap, params.size(), startRow, pageSize);
+                    .findConfigInfoLike4PageFetchRows(paramsMap, tagArr.length, startRow, pageSize);
         } else {
             ConfigInfoMapper configInfoMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(), TableConstant.CONFIG_INFO);
             sqlCountRows = configInfoMapper.findConfigInfoLike4PageCountRows(paramsMap);

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientTrackService.java
Patch:
@@ -173,8 +173,8 @@ private static ClientRecord getClientRecord(String clientIp) {
             return record;
         }
         ClientRecord clientRecord = new ClientRecord(clientIp);
-        clientRecords.putIfAbsent(clientIp, clientRecord);
-        return clientRecord;
+        record = clientRecords.putIfAbsent(clientIp, clientRecord);
+        return null == record ? clientRecord : record;
     }
     
     public static void refreshClientRecord() {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -386,7 +386,7 @@ public String reqApi(String api, Map<String, String> params, Map<String, String>
                 }
             }
         } else {
-            Random random = new Random(System.currentTimeMillis());
+            Random random = new Random();
             int index = random.nextInt(servers.size());
             
             for (int i = 0; i < servers.size(); i++) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClientManager.java
Patch:
@@ -161,7 +161,7 @@ private static class ProcessorHttpClientFactory extends AbstractHttpClientFactor
         protected HttpClientConfig buildHttpClientConfig() {
             return HttpClientConfig.builder().setConnectionRequestTimeout(500).setReadTimeOutMillis(500)
                     .setConTimeOutMillis(500).setIoThreadCount(1).setContentCompressionEnabled(false).setMaxRedirects(0)
-                    .setMaxConnTotal(-1).setMaxConnPerRoute(-1).setUserAgent("VIPServer").build();
+                    .setMaxConnTotal(5000).setMaxConnPerRoute(-1).setUserAgent("VIPServer").build();
         }
         
         @Override

File: sys/src/main/java/com/alibaba/nacos/sys/file/WatchFileCenter.java
Patch:
@@ -26,6 +26,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.nio.file.ClosedWatchServiceException;
 import java.nio.file.FileSystem;
 import java.nio.file.FileSystems;
 import java.nio.file.Path;
@@ -204,7 +205,7 @@ void shutdown() {
         
         @Override
         public void run() {
-            while (watch) {
+            while (watch && !this.isInterrupted()) {
                 try {
                     final WatchKey watchKey = watchService.take();
                     final List<WatchEvent<?>> events = watchKey.pollEvents();
@@ -227,7 +228,7 @@ public void run() {
                             }
                         }
                     });
-                } catch (InterruptedException ignore) {
+                } catch (InterruptedException | ClosedWatchServiceException ignore) {
                     Thread.interrupted();
                 } catch (Throwable ex) {
                     LOGGER.error("An exception occurred during file listening : ", ex);

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.config.server.service.repository.PersistService;
+import com.alibaba.nacos.config.server.service.repository.CommonPersistService;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
 import com.alibaba.nacos.console.service.NamespaceOperationService;
@@ -50,7 +50,7 @@
 public class NamespaceController {
     
     @Autowired
-    private PersistService persistService;
+    private CommonPersistService commonPersistService;
     
     @Autowired
     private NamespaceOperationService namespaceOperationService;
@@ -121,7 +121,7 @@ public Boolean checkNamespaceIdExist(@RequestParam("customNamespaceId") String n
         if (StringUtils.isBlank(namespaceId)) {
             return false;
         }
-        return (persistService.tenantInfoCountByTenantId(namespaceId) > 0);
+        return (commonPersistService.tenantInfoCountByTenantId(namespaceId) > 0);
     }
     
     /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -105,6 +105,7 @@
 @SuppressWarnings({"PMD.MethodReturnWrapperTypeRule", "checkstyle:linelength"})
 @Conditional(value = ConditionOnEmbeddedStorage.class)
 @Component
+@Deprecated
 public class EmbeddedStoragePersistServiceImpl implements PersistService {
     
     private static final String RESOURCE_CONFIG_INFO_ID = "config-info-id";

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -109,6 +109,7 @@
 @SuppressWarnings(value = {"PMD.MethodReturnWrapperTypeRule", "checkstyle:linelength"})
 @Conditional(value = ConditionOnExternalStorage.class)
 @Component
+@Deprecated
 public class ExternalStoragePersistServiceImpl implements PersistService {
     
     private DataSourceService dataSourceService;

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -288,4 +288,6 @@ public class Constants {
     public static final String CONFIG_EXPORT_METADATA_NEW = ".metadata.yml";
     
     public static final int LIMIT_ERROR_CODE = 429;
+    
+    public static final String NACOS_PLUGIN_DATASOURCE_LOG = "nacos.plugin.datasource.log.enabled";
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -35,7 +35,6 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
-import java.sql.Statement;
 import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -110,10 +109,11 @@ public boolean insertTenantCapacity(final TenantCapacity tenantCapacity) {
         TenantCapacityMapper tenantCapacityMapper = mapperManager.findMapper(dataSourceService.getDataSourceType(),
                 TableConstant.TENANT_CAPACITY);
         final String sql = tenantCapacityMapper.insertTenantCapacity();
+        String[] primaryKeyGeneratedKeys = tenantCapacityMapper.getPrimaryKeyGeneratedKeys();
         try {
             GeneratedKeyHolder generatedKeyHolder = new GeneratedKeyHolder();
             PreparedStatementCreator preparedStatementCreator = connection -> {
-                PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
+                PreparedStatement ps = connection.prepareStatement(sql, primaryKeyGeneratedKeys);
                 String tenant = tenantCapacity.getTenant();
                 ps.setString(1, tenant);
                 ps.setInt(2, tenantCapacity.getQuota());

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -76,7 +76,6 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.SQLException;
-import java.sql.Statement;
 import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -1675,12 +1674,12 @@ public long addConfigInfoAtomic(final long configId, final String srcIp, final S
                 Arrays.asList("data_id", "group_id", "tenant_id", "app_name", "content", "md5", "src_ip", "src_user",
                         "gmt_create", "gmt_modified", "c_desc", "c_use", "effect", "type", "c_schema",
                         "encrypted_data_key"));
-        
+        String[] returnGeneratedKeys = configInfoMapper.getPrimaryKeyGeneratedKeys();
         try {
             jt.update(new PreparedStatementCreator() {
                 @Override
                 public PreparedStatement createPreparedStatement(Connection connection) throws SQLException {
-                    PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
+                    PreparedStatement ps = connection.prepareStatement(sql, returnGeneratedKeys);
                     ps.setString(1, configInfo.getDataId());
                     ps.setString(2, configInfo.getGroup());
                     ps.setString(3, tenantTmp);

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/derby/ConfigInfoAggrMapperByDerby.java
Patch:
@@ -58,7 +58,7 @@ public String aggrConfigInfoCount(int size, boolean isIn) {
             sql.append('?');
         }
         sql.append(')');
-    
+        
         return sql.toString();
     }
     

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoAggrMapperByMySql.java
Patch:
@@ -58,7 +58,7 @@ public String aggrConfigInfoCount(int size, boolean isIn) {
             sql.append('?');
         }
         sql.append(')');
-    
+        
         return sql.toString();
     }
     

File: plugin/encryption/src/main/java/com/alibaba/nacos/plugin/encryption/EncryptionPluginManager.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class EncryptionPluginManager {
     
-    private static final Logger LOGGER = LoggerFactory.getLogger(EncryptionPluginService.class);
+    private static final Logger LOGGER = LoggerFactory.getLogger(EncryptionPluginManager.class);
     
     private static final Map<String, EncryptionPluginService> ENCRYPTION_SPI_MAP = new ConcurrentHashMap<>();
     

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -279,11 +279,11 @@ private void loadSetting() {
             setDefaultMaxAggrSize(getInt(PropertiesConstant.DEFAULT_MAX_AGGR_SIZE, defaultMaxAggrSize));
             setCorrectUsageDelay(getInt(PropertiesConstant.CORRECT_USAGE_DELAY, correctUsageDelay));
             setInitialExpansionPercent(getInt(PropertiesConstant.INITIAL_EXPANSION_PERCENT, initialExpansionPercent));
+    
             // External data sources are used by default in cluster mode
-            String platform = getString(PropertiesConstant.SPRING_DATASOURCE_PLATFORM, "");
+            String platform = DatasourcePlatformUtil.getDatasourcePlatform("");
             boolean useExternalStorage = !PropertiesConstant.EMPTY_DATASOURCE_PLATFORM.equalsIgnoreCase(platform)
                     && !PropertiesConstant.DERBY.equalsIgnoreCase(platform);
-    
             setUseExternalDB(useExternalStorage);
             
             // must initialize after setUseExternalDB

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoBetaMapperByMySql.java
Patch:
@@ -37,8 +37,8 @@ public String updateConfigInfo4BetaCas() {
     
     @Override
     public String findAllConfigInfoBetaForDumpAllFetchRows(int startRow, int pageSize) {
-        return  " SELECT t.id,data_id,group_id,tenant_id,app_name,content,md5,gmt_modified,beta_ips,encrypted_data_key "
-                + " FROM ( SELECT id FROM config_info_beta  ORDER BY id LIMIT ?,?  )"
+        return " SELECT t.id,data_id,group_id,tenant_id,app_name,content,md5,gmt_modified,beta_ips,encrypted_data_key "
+                + " FROM ( SELECT id FROM config_info_beta  ORDER BY id LIMIT " + startRow + "," + pageSize + " )"
                 + "  g, config_info_beta t WHERE g.id = t.id ";
     }
     

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -62,4 +62,6 @@ public class AuthConstants {
     public static final String NACOS_CORE_AUTH_LDAP_PASSWORD = "nacos.core.auth.ldap.password";
     
     public static final String NACOS_CORE_AUTH_LDAP_FILTER_PREFIX = "nacos.core.auth.ldap.filter.prefix";
+    
+    public static final String NACOS_CORE_AUTH_CASE_SENSITIVE = "nacos.core.auth.ldap.case.sensitive";
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -1092,7 +1092,7 @@ public Page<ConfigInfoBase> findConfigInfoBaseByDataId(final int pageNo, final i
         PaginationHelper<ConfigInfoBase> helper = createPaginationHelper();
         ConfigInfoMapper configInfoMapper =  mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO);
         final int startRow = (pageNo - 1) * pageSize;
-        return helper.fetchPage(configInfoMapper.findConfigInfoBaseByDataIdCountRows(),
+        return helper.fetchPage(configInfoMapper.count(Arrays.asList("data_id", "tenant_id")),
                 configInfoMapper.findConfigInfoBaseByDataIdFetchRows(startRow, pageSize),
                 new Object[] {dataId, StringUtils.EMPTY}, pageNo, pageSize, CONFIG_INFO_BASE_ROW_MAPPER);
         
@@ -2587,8 +2587,8 @@ public int tenantInfoCountByTenantId(String tenantId) {
         if (Objects.isNull(tenantId)) {
             throw new IllegalArgumentException("tenantId can not be null");
         }
-        TenantInfoMapper tenantInfoMapper =  mapperManager.findMapper(dataSource, TableConstant.TENANT_INFO);
-        String sql = tenantInfoMapper.getCountByTenantId();
+        TenantInfoMapper tenantInfoMapper = mapperManager.findMapper(dataSource, TableConstant.TENANT_INFO);
+        String sql = tenantInfoMapper.count(Arrays.asList("tenant_id"));
         Integer result = databaseOperate
                 .queryOne(sql, new String[] {tenantId}, Integer.class);
         if (result == null) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -1028,7 +1028,7 @@ public Page<ConfigInfoBase> findConfigInfoBaseByDataId(final int pageNo, final i
         try {
             final int startRow = (pageNo - 1) * pageSize;
             ConfigInfoMapper configInfoMapper = mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO);
-            return helper.fetchPage(configInfoMapper.findConfigInfoBaseByDataIdCountRows(),
+            return helper.fetchPage(configInfoMapper.count(Arrays.asList("data_id", "tenant_id")),
                     configInfoMapper.findConfigInfoBaseByDataIdFetchRows(startRow, pageSize),
                     new Object[] {dataId, StringUtils.EMPTY}, pageNo, pageSize, CONFIG_INFO_BASE_ROW_MAPPER);
         } catch (CannotGetJdbcConnectionException e) {
@@ -2730,7 +2730,7 @@ public int tenantInfoCountByTenantId(String tenantId) {
             throw new IllegalArgumentException("tenantId can not be null");
         }
         TenantInfoMapper tenantInfoMapper = mapperManager.findMapper(dataSource, TableConstant.TENANT_INFO);
-        String sql = tenantInfoMapper.getCountByTenantId();
+        String sql = tenantInfoMapper.count(Arrays.asList("tenant_id"));
         Integer result = this.jt
                 .queryForObject(sql, new String[] {tenantId}, Integer.class);
         if (result == null) {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/constants/TableConstant.java
Patch:
@@ -23,6 +23,7 @@
  **/
 
 public class TableConstant {
+    
     public static final String CONFIG_INFO = "config_info";
     
     public static final String CONFIG_INFO_AGGR = "config_info_aggr";

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -429,9 +429,10 @@ public ClientWorker(final ConfigFilterChainManager configFilterChainManager, Ser
         
     }
     
-    private void refreshContentAndCheck(String groupKey, boolean notify) {
+    private void refreshContentAndCheck(String groupKey) {
         CacheData cache = cacheMap.get().get(groupKey);
         if (cache != null) {
+            boolean notify = !cache.isInitializing();
             refreshContentAndCheck(cache, notify);
         }
     }
@@ -796,8 +797,7 @@ public void executeConfigListen() {
                                             .getKeyTenant(changeConfig.getDataId(), changeConfig.getGroup(),
                                                     changeConfig.getTenant());
                                     changeKeys.add(changeKey);
-                                    boolean isInitializing = cacheMap.get().get(changeKey).isInitializing();
-                                    refreshContentAndCheck(changeKey, !isInitializing);
+                                    refreshContentAndCheck(changeKey);
                                 }
                                 
                             }

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.impl.ConfigHttpClientManager;
 import com.alibaba.nacos.client.config.impl.ServerListManager;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.ContextPathUtil;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
@@ -242,7 +243,7 @@ public ServerHttpAgent(ServerListManager mgr, Properties properties) {
     }
     
     public ServerHttpAgent(Properties properties) throws NacosException {
-        this.serverListMgr = new ServerListManager(properties);
+        this.serverListMgr = new ServerListManager(NacosClientProperties.PROTOTYPE.derive(properties));
     }
     
     @Override

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.client.config.filter.impl.ConfigFilterChainManager;
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.TenantUtil;
 import com.alibaba.nacos.common.utils.MD5Utils;
@@ -62,7 +63,7 @@ public class CacheData {
     static boolean initSnapshot;
     
     static {
-        initSnapshot = Boolean.valueOf(System.getProperty("nacos.cache.data.init.snapshot", "true"));
+        initSnapshot = NacosClientProperties.PROTOTYPE.getBoolean("nacos.cache.data.init.snapshot", true);
         LOGGER.info("nacos.cache.data.init.snapshot = {} ", initSnapshot);
     }
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.plugin.auth.api.RequestResource;
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.security.SecurityProxy;
@@ -66,7 +67,7 @@ public void shutdown() throws NacosException {
         securityProxy.shutdown();
     }
     
-    public ConfigTransportClient(Properties properties, ServerListManager serverListManager) {
+    public ConfigTransportClient(NacosClientProperties properties, ServerListManager serverListManager) {
         
         String encodeTmp = properties.getProperty(PropertyKeyConst.ENCODE);
         if (StringUtils.isBlank(encodeTmp)) {
@@ -77,7 +78,7 @@ public ConfigTransportClient(Properties properties, ServerListManager serverList
         
         this.tenant = properties.getProperty(PropertyKeyConst.NAMESPACE);
         this.serverListManager = serverListManager;
-        this.properties = properties;
+        this.properties = properties.asProperties();
         this.securityProxy = new SecurityProxy(serverListManager.getServerUrls(),
                 ConfigHttpClientManager.getInstance().getNacosRestTemplate());
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/Limiter.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.config.impl;
 
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.cache.Cache;
 import com.alibaba.nacos.common.cache.builder.CacheBuilder;
@@ -56,7 +57,7 @@ public class Limiter {
     
     static {
         try {
-            String limitTimeStr = System.getProperty(LIMIT_TIME_PROPERTY, String.valueOf(limit));
+            String limitTimeStr = NacosClientProperties.PROTOTYPE.getProperty(LIMIT_TIME_PROPERTY, String.valueOf(limit));
             limit = Double.parseDouble(limitTimeStr);
             LOGGER.info("limitTime:{}", limit);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/config/utils/JvmUtil.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.config.utils;
 
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.LogUtils;
 import org.slf4j.Logger;
 
@@ -46,7 +47,7 @@ public static Boolean isMultiInstance() {
     private static final String DEFAULT_IS_MULTI_INSTANCE = "false";
     
     static {
-        String multiDeploy = System.getProperty(IS_MULTI_INSTANCE_PROPERTY, DEFAULT_IS_MULTI_INSTANCE);
+        String multiDeploy = NacosClientProperties.PROTOTYPE.getProperty(IS_MULTI_INSTANCE_PROPERTY, DEFAULT_IS_MULTI_INSTANCE);
         if (TRUE.equals(multiDeploy)) {
             isMultiInstance = true;
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -39,6 +39,7 @@
 import com.alibaba.nacos.api.remote.response.ResponseCode;
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
 import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
 import com.alibaba.nacos.client.naming.remote.AbstractNamingClientProxy;
@@ -59,7 +60,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Properties;
 import java.util.UUID;
 import java.util.function.Function;
 import java.util.stream.Collectors;
@@ -84,7 +84,7 @@ public class NamingGrpcClientProxy extends AbstractNamingClientProxy {
     private final NamingGrpcRedoService redoService;
     
     public NamingGrpcClientProxy(String namespaceId, SecurityProxy securityProxy, ServerListFactory serverListFactory,
-            Properties properties, ServiceInfoHolder serviceInfoHolder) throws NacosException {
+            NacosClientProperties properties, ServiceInfoHolder serviceInfoHolder) throws NacosException {
         super(securityProxy);
         this.namespaceId = namespaceId;
         this.uuid = UUID.randomUUID().toString();

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -29,6 +29,7 @@
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.api.utils.NetUtils;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.naming.core.ServerListManager;
 import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
@@ -55,7 +56,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Properties;
 import java.util.Random;
 
 import static com.alibaba.nacos.client.utils.LogUtils.NAMING_LOGGER;
@@ -110,7 +110,7 @@ public class NamingHttpClientProxy extends AbstractNamingClientProxy {
     private int serverPort = DEFAULT_SERVER_PORT;
     
     public NamingHttpClientProxy(String namespaceId, SecurityProxy securityProxy, ServerListManager serverListManager,
-            Properties properties) {
+            NacosClientProperties properties) {
         super(securityProxy);
         this.serverListManager = serverListManager;
         this.setServerPort(DEFAULT_SERVER_PORT);
@@ -472,7 +472,7 @@ public String getNamespaceId() {
     public void setServerPort(int serverPort) {
         this.serverPort = serverPort;
         
-        String sp = System.getProperty(SystemPropertyKeyConst.NAMING_SERVER_PORT);
+        String sp = NacosClientProperties.PROTOTYPE.getProperty(SystemPropertyKeyConst.NAMING_SERVER_PORT);
         if (StringUtils.isNotBlank(sp)) {
             this.serverPort = Integer.parseInt(sp);
         }

File: client/src/main/java/com/alibaba/nacos/client/utils/ValidatorUtils.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 
-import java.util.Properties;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -32,7 +32,7 @@ public final class ValidatorUtils {
     
     private static final Pattern CONTEXT_PATH_MATCH = Pattern.compile("(\\/)\\1+");
     
-    public static void checkInitParam(Properties properties) throws NacosException {
+    public static void checkInitParam(NacosClientProperties properties) throws NacosException {
         checkContextPath(properties.getProperty(PropertyKeyConst.CONTEXT_PATH));
     }
     

File: client/src/test/java/com/alibaba/nacos/client/config/NacosConfigServiceTest.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.client.config.impl.ConfigTransportClient;
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
 import com.alibaba.nacos.client.config.impl.ServerListManager;
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;
@@ -101,7 +102,8 @@ public void receiveConfigInfo(String configInfo) {
         response.setContent(content);
         response.setConfigType("bb");
         Mockito.when(mockWoker.getServerConfig(dataId, group, "", timeout, false)).thenReturn(response);
-        Mockito.when(mockWoker.getAgent()).thenReturn(new ConfigTransportClient(new Properties(), new ServerListManager()) {
+        final NacosClientProperties properties = NacosClientProperties.PROTOTYPE.derive(new Properties());
+        Mockito.when(mockWoker.getAgent()).thenReturn(new ConfigTransportClient(properties, new ServerListManager()) {
             @Override
             public void startInternal() throws NacosException {
                 // NOOP

File: client/src/main/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLogging.java
Patch:
@@ -46,6 +46,8 @@ public class Log4J2NacosLogging extends AbstractNacosLogging {
     
     private static final String NACOS_LOGGER_PREFIX = "com.alibaba.nacos";
     
+    private static final String NACOS_LOG4J2_PLUGIN_PACKAGE = "com.alibaba.nacos.client.logging.log4j2";
+    
     private final String location = getLocation(NACOS_LOG4J2_LOCATION);
     
     @Override
@@ -59,6 +61,7 @@ public void loadConfiguration() {
         
         // load and start nacos configuration
         Configuration configuration = loadConfiguration(loggerContext, location);
+        configuration.getPluginPackages().add(NACOS_LOG4J2_PLUGIN_PACKAGE);
         configuration.start();
         
         // append loggers and appenders to contextConfiguration

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialService.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.auth.ram.identify;
 
+import com.alibaba.nacos.client.env.NacosClientProperties;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
@@ -43,7 +44,7 @@ public final class CredentialService implements SpasCredentialLoader {
     
     private CredentialService(String appName) {
         if (appName == null) {
-            String value = System.getProperty(IdentifyConstants.PROJECT_NAME_PROPERTY);
+            String value = NacosClientProperties.PROTOTYPE.getProperty(IdentifyConstants.PROJECT_NAME_PROPERTY);
             if (StringUtils.isNotEmpty(value)) {
                 appName = value;
             }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -43,13 +43,13 @@ public class AuthConstants {
     
     public static final String NACOS_USER_KEY = "nacosuser";
     
-    public static final String TOKEN_SECRET_KEY = "token.secret.key";
+    public static final String TOKEN_SECRET_KEY = "nacos.core.auth.plugin.nacos.token.secret.key";
     
     public static final String DEFAULT_TOKEN_SECRET_KEY = "";
     
-    public static final String TOKEN_EXPIRE_SECONDS = "token.expire.seconds";
+    public static final String TOKEN_EXPIRE_SECONDS = "nacos.core.auth.plugin.nacos.token.expire.seconds";
     
-    public static final String DEFAULT_TOKEN_EXPIRE_SECONDS = "18000";
+    public static final Long DEFAULT_TOKEN_EXPIRE_SECONDS = 18_000L;
     
     public static final String NACOS_CORE_AUTH_LDAP_URL = "nacos.core.auth.ldap.url";
     

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -411,7 +411,9 @@ public void multipleTenant_group_updateInstance_notExsitInstance() throws Except
                         .appendParam("namespaceId", "namespace-1").appendParam("groupName", TEST_GROUP_1).done(),
                 String.class);
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
-        JsonNode json = JacksonUtils.toObj(response.getBody());
+        String body = response.getBody();
+        System.out.println("multipleTenant_group_updateInstance_notExsitInstance received body:  " + body);
+        JsonNode json = JacksonUtils.toObj(body);
         Assert.assertEquals("33.33.33.33", json.get("hosts").get(0).get("ip").asText());
     }
     

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalRolePersistServiceImpl.java
Patch:
@@ -168,8 +168,8 @@ public void deleteRole(String role, String username) {
     
     @Override
     public List<String> findRolesLikeRoleName(String role) {
-        String sql = "SELECT role FROM roles WHERE role LIKE '%' ? '%'";
-        List<String> users = this.jt.queryForList(sql, new String[] {role}, String.class);
+        String sql = "SELECT role FROM roles WHERE role LIKE ?";
+        List<String> users = this.jt.queryForList(sql, new String[] {String.format("%%%s%%", role)}, String.class);
         return users;
     }
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalUserPersistServiceImpl.java
Patch:
@@ -162,8 +162,8 @@ public Page<User> getUsers(int pageNo, int pageSize, String username) {
     
     @Override
     public List<String> findUserLikeUsername(String username) {
-        String sql = "SELECT username FROM users WHERE username LIKE '%' ? '%'";
-        List<String> users = this.jt.queryForList(sql, new String[] {username}, String.class);
+        String sql = "SELECT username FROM users WHERE username LIKE ?";
+        List<String> users = this.jt.queryForList(sql, new String[]{String.format("%%%s%%", username)}, String.class);
         return users;
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushRequestHandler.java
Patch:
@@ -39,8 +39,8 @@ public NamingPushRequestHandler(ServiceInfoHolder serviceInfoHolder) {
     @Override
     public Response requestReply(Request request) {
         if (request instanceof NotifySubscriberRequest) {
-            NotifySubscriberRequest notifyResponse = (NotifySubscriberRequest) request;
-            serviceInfoHolder.processServiceInfo(notifyResponse.getServiceInfo());
+            NotifySubscriberRequest notifyRequest = (NotifySubscriberRequest) request;
+            serviceInfoHolder.processServiceInfo(notifyRequest.getServiceInfo());
             return new NotifySubscriberResponse();
         }
         return null;

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxy.java
Patch:
@@ -55,7 +55,7 @@ public interface NamingClientProxy extends Closeable {
     void batchRegisterService(String serviceName, String groupName, List<Instance> instances) throws NacosException;
     
     /**
-     * Batch register instance to service with specified instance properties.
+     * Batch deRegister instance to service with specified instance properties.
      *
      * @param serviceName service name
      * @param groupName   group name

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -138,7 +138,7 @@ public void batchDeregisterService(String serviceName, String groupName, List<In
     }
     
     /**
-     * Get instance list that need to be deregistered.
+     * Get instance list that need to be Retained.
      *
      * @param serviceName service name
      * @param groupName   group name

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2204,8 +2204,7 @@ private int updateConfigInfoAtomicCas(final ConfigInfo configInfo, final String
         
         try {
             ConfigInfoMapper configInfoMapper = (ConfigInfoMapper) mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO).get();
-            return jt.update(configInfoMapper.update(Arrays.asList("content", "md5", "src_ip", "src_user", "gmt_modified", "app_name", "c_desc", "c_use", "effect", "type",
-                    "c_schema", "encrypted_data_key"), Arrays.asList("data_id", "group_id", "tenant_id")),
+            return jt.update(configInfoMapper.updateConfigInfoAtomicCas(),
                     configInfo.getContent(), md5Tmp, srcIp, srcUser, time, appNameTmp, desc, use, effect, type, schema,
                     configInfo.getDataId(), configInfo.getGroup(), tenantTmp, configInfo.getMd5());
         } catch (CannotGetJdbcConnectionException e) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/factory/impl/ConnectionBasedClientFactory.java
Patch:
@@ -46,7 +46,7 @@ public ConnectionBasedClient newClient(String clientId, ClientAttributes attribu
     @Override
     public ConnectionBasedClient newSyncedClient(String clientId, ClientAttributes attributes) {
         long revision = attributes.getClientAttribute(REVISION, 0);
-        ConnectionBasedClient connectionBasedClient = new ConnectionBasedClient(clientId, true, revision);
+        ConnectionBasedClient connectionBasedClient = new ConnectionBasedClient(clientId, false, revision);
         connectionBasedClient.setAttributes(attributes);
         return connectionBasedClient;
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateService.java
Patch:
@@ -77,7 +77,7 @@ private boolean isAsyncQueryForSubscribeService(Properties properties) {
         if (properties == null || !properties.containsKey(PropertyKeyConst.NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE)) {
             return true;
         }
-        return ConvertUtils.toBoolean(properties.getProperty(PropertyKeyConst.NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE), true);
+        return ConvertUtils.toBoolean(properties.getProperty(PropertyKeyConst.NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE), false);
     }
     
     private int initPollingThreadCount(Properties properties) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -1077,9 +1077,9 @@ public Page<ConfigInfo> findConfigInfo4Page(final int pageNo, final int pageSize
             paramList.addAll(Arrays.asList(tagArr));
             ConfigTagsRelationMapper configTagsRelationMapper = (ConfigTagsRelationMapper) mapperManager
                     .findMapper(dataSource, TableConstant.CONFIG_TAGS_RELATION).get();
-            sqlCount = configTagsRelationMapper.findConfigInfo4PageCountRows(paramsMap, paramList.size());
+            sqlCount = configTagsRelationMapper.findConfigInfo4PageCountRows(paramsMap, tagArr.length);
             sql = configTagsRelationMapper
-                    .findConfigInfo4PageFetchRows(paramsMap, paramList.size(), startRow, pageSize);
+                    .findConfigInfo4PageFetchRows(paramsMap, tagArr.length, startRow, pageSize);
         } else {
             ConfigInfoMapper configInfoMapper = (ConfigInfoMapper) mapperManager
                     .findMapper(dataSource, TableConstant.CONFIG_INFO).get();
@@ -2513,6 +2513,7 @@ public List<ConfigAllInfo> findAllConfigInfo4Export(final String dataId, final S
             paramList.addAll(ids);
         } else {
             paramList.add(tenantTmp);
+            params.put(TENANT, TENANT);
             if (!StringUtils.isBlank(dataId)) {
                 paramList.add(generateLikeArgument(dataId));
                 params.put(DATA_ID, DATA_ID);

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2321,7 +2321,6 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
             int pageSize) {
         PaginationHelper<ConfigHistoryInfo> helper = createPaginationHelper();
         String tenantTmp = StringUtils.isBlank(tenant) ? StringUtils.EMPTY : tenant;
-        final int startRow = (pageNo - 1) * pageSize;
         HistoryConfigInfoMapper historyConfigInfoMapper = (HistoryConfigInfoMapper) mapperManager.findMapper(dataSource, TableConstant.HIS_CONFIG_INFO).get();
         String sqlCountRows = historyConfigInfoMapper.findConfigHistoryCountRows();
         String sqlFetchRows = historyConfigInfoMapper.findConfigHistoryFetchRows();
@@ -2622,6 +2621,7 @@ public List<ConfigAllInfo> findAllConfigInfo4Export(final String dataId, final S
             paramList.addAll(ids);
         } else {
             paramList.add(tenantTmp);
+            params.put(TENANT, TENANT);
             if (!StringUtils.isBlank(dataId)) {
                 paramList.add(generateLikeArgument(dataId));
                 params.put(DATA_ID, DATA_ID);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -39,6 +39,7 @@
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.model.ConfigRequestInfo;
 import com.alibaba.nacos.config.server.model.form.ConfigForm;
+import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.result.code.ResultCodeEnum;
 import com.alibaba.nacos.config.server.service.ConfigChangePublisher;
 import com.alibaba.nacos.config.server.service.ConfigOperationService;
@@ -388,6 +389,7 @@ public Page<ConfigInfo> fuzzySearchConfig(@RequestParam("dataId") String dataId,
             @RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant,
             @RequestParam(value = "config_tags", required = false) String configTags,
             @RequestParam("pageNo") int pageNo, @RequestParam("pageSize") int pageSize) {
+        MetricsMonitor.getFuzzySearchMonitor().incrementAndGet();
         Map<String, Object> configAdvanceInfo = new HashMap<>(50);
         if (StringUtils.isNotBlank(appName)) {
             configAdvanceInfo.put("appName", appName);

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -103,6 +103,9 @@ public void onEvent(Event event) {
                     String group = evt.group;
                     String tenant = evt.tenant;
                     String tag = evt.tag;
+                    
+                    MetricsMonitor.incrementConfigChangeCount(tenant, group, dataId);
+                    
                     Collection<Member> ipList = memberManager.allMembers();
                     
                     // In fact, any type of queue here can be

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHook.java
Patch:
@@ -32,6 +32,9 @@ public void pushSuccess(PushResult result) {
         MetricsMonitor.incrementPush();
         MetricsMonitor.incrementPushCost(result.getAllCost());
         MetricsMonitor.compareAndSetMaxPushCost(result.getAllCost());
+        if (null == result.getData().getHosts() || !result.getData().validate()) {
+            MetricsMonitor.incrementEmptyPush();
+        }
         if (isRpc(result.getSubscriber())) {
             NamingTpsMonitor.rpcPushSuccess(result.getSubscribeClientId(), result.getSubscriber().getIp());
         } else {

File: address/src/test/java/com/alibaba/nacos/address/component/AddressServerGeneratorManagerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.component;
 
 import com.alibaba.nacos.address.constant.AddressServerConstants;
-import com.alibaba.nacos.naming.core.Instance;
+import com.alibaba.nacos.api.naming.pojo.Instance;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -67,7 +67,7 @@ public void testGenerateInstancesByIps() {
     
     @Test
     public void testGenerateResponseIps() {
-        final List<Instance> instanceList = new ArrayList<>();
+        final List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList = new ArrayList<>();
         Instance instance1 = new Instance();
         instance1.setIp("192.168.3.1");
         instance1.setPort(8848);

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -75,6 +75,8 @@ public class PropertyKeyConst {
     
     public static final String NAMING_PUSH_EMPTY_PROTECTION = "namingPushEmptyProtection";
     
+    public static final String NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE = "namingAsyncQuerySubscribeService";
+    
     public static final String PUSH_RECEIVER_UDP_PORT = "push.receiver.udp.port";
     
     /**

File: api/src/main/java/com/alibaba/nacos/api/SystemPropertyKeyConst.java
Patch:
@@ -27,8 +27,6 @@ public interface SystemPropertyKeyConst {
     
     String NAMING_SERVER_PORT = "nacos.naming.exposed.port";
     
-    String NAMING_WEB_CONTEXT = "nacos.naming.web.context";
-    
     /**
      * In the cloud (Alibaba Cloud or other cloud vendors) environment, whether to enable namespace resolution in the
      * cloud environment.

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/response/InstanceResponse.java
Patch:
@@ -38,4 +38,7 @@ public void setType(String type) {
         this.type = type;
     }
     
+    public String getType() {
+        return type;
+    }
 }

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -275,6 +275,7 @@ public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         LOGGER.info("{} do shutdown begin", className);
         ConfigHttpClientManager.getInstance().shutdown();
+        serverListMgr.shutdown();
         LOGGER.info("{} do shutdown stop", className);
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/constant/Constants.java
Patch:
@@ -35,7 +35,7 @@ public static class SysEnv {
         
         public static final String JM_SNAPSHOT_PATH = "JM.SNAPSHOT.PATH";
         
-        public static final String NACOS_ENVS_SEARCH = "nacos.envs.search";
+        public static final String NACOS_ENV_FIRST = "nacos.env.first";
         
     }
     

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -34,5 +34,7 @@ public interface HttpHeaderConsts {
     String CONNECTION = "Requester";
     String REQUEST_ID = "RequestId";
     String REQUEST_MODULE = "Request-Module";
+    String APP_FILED = "app";
+    String CLIENT_IP = "clientIp";
     
 }

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -301,6 +301,9 @@ private static boolean publishEvent(final Class<? extends Event> eventType, fina
         if (publisher != null) {
             return publisher.publish(event);
         }
+        if (event.isPluginEvent()) {
+            return true;
+        }
         LOGGER.warn("There are no [{}] publishers for this event, please register", topic);
         return false;
     }

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/SmartSubscriber.java
Patch:
@@ -30,9 +30,9 @@
 public abstract class SmartSubscriber extends Subscriber {
     
     /**
-     * Returns which event type are smartsubscriber interested in.
+     * Returns which event type are smart subscriber interested in.
      *
-     * @return The interestd event types.
+     * @return The interested event types.
      */
     public abstract List<Class<? extends Event>> subscribeTypes();
     

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/Subscriber.java
Patch:
@@ -69,6 +69,6 @@ public boolean ignoreExpireEvent() {
      * @return Whether the event's scope matches current subscriber
      */
     public boolean scopeMatches(T event) {
-        return event.scope() == null;
+        return true;
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisher.java
Patch:
@@ -103,7 +103,6 @@ public boolean publish(Event event) {
         boolean success = this.queue.offer(event);
         if (!success) {
             LOGGER.warn("Trace Event Publish failed, event : {}, publish queue size : {}", event, currentEventSize());
-            return true;
         }
         return true;
     }

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisherFactory.java
Patch:
@@ -50,7 +50,6 @@ public static TraceEventPublisherFactory getInstance() {
 
     @Override
     public EventPublisher apply(final Class<? extends Event> eventType, final Integer maxQueueSize) {
-        // Like ClientEvent$ClientChangeEvent cache by ClientEvent
         Class<? extends Event> cachedEventType = TraceEvent.class;
         
         for (Class<? extends Event> publisherEvent : publisherEvents) {

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientFactoryTest.java
Patch:
@@ -104,7 +104,7 @@ public void testCreateClientWhenNotCreatedThenCreate() {
         RpcClient client = RpcClientFactory
                 .createClient("testClient", ConnectionType.GRPC, Collections.singletonMap("labelKey", "labelValue"));
         
-        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.labels);
+        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.rpcClientConfig.labels());
         Assert.assertEquals(ConnectionType.GRPC, client.getConnectionType());
         Assert.assertEquals("testClient", CollectionUtils.getOnlyElement(RpcClientFactory.getAllClientEntries()).getKey());
     }
@@ -134,7 +134,7 @@ public void testCreateClusterClientWhenNotCreatedThenCreate() {
                 Collections.singletonMap("labelKey", "labelValue")
         );
         
-        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.labels);
+        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.rpcClientConfig.labels());
         Assert.assertEquals(ConnectionType.GRPC, client.getConnectionType());
         Assert.assertEquals("testClient", CollectionUtils.getOnlyElement(RpcClientFactory.getAllClientEntries()).getKey());
     }

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
+import org.springframework.core.annotation.Order;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -31,6 +32,7 @@
  *
  * @author Nacos
  */
+@Order(0)
 @ControllerAdvice
 public class GlobalExceptionHandler {
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigAdvanceInfo.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class ConfigAdvanceInfo implements Serializable {
     
-    static final long serialVersionUID = -1L;
+    static final long serialVersionUID = 3148031484920416869L;
     
     private long createTime;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfo.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class ConfigInfo extends ConfigInfoBase {
     
-    static final long serialVersionUID = -1L;
+    static final long serialVersionUID = 3115358782431229202L;
     
     private String tenant;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -32,7 +32,7 @@
  */
 public class ConfigInfoBase implements Serializable, Comparable<ConfigInfoBase> {
     
-    static final long serialVersionUID = -1L;
+    static final long serialVersionUID = 265316491795790798L;
     
     @JsonSerialize(using = ToStringSerializer.class)
     private long id;

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBaseEx.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class ConfigInfoBaseEx extends ConfigInfoBase {
     
-    private static final long serialVersionUID = -1L;
+    private static final long serialVersionUID = 5802322506486922169L;
     
     /**
      * Single message status code, when querying for batch.

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoEx.java
Patch:
@@ -23,7 +23,7 @@
  */
 public class ConfigInfoEx extends ConfigInfo {
     
-    private static final long serialVersionUID = -1L;
+    private static final long serialVersionUID = 8905036592920606608L;
     
     /**
      * Single message status code, when querying for batch.

File: config/src/main/java/com/alibaba/nacos/config/server/model/GroupInfo.java
Patch:
@@ -27,9 +27,9 @@
  * @author Nacos
  */
 public class GroupInfo implements Serializable {
-    
-    static final long serialVersionUID = -1L;
-    
+
+    static final long serialVersionUID = 3930805434971004186L;
+
     @JsonSerialize(using = ToStringSerializer.class)
     private long id;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/Page.java
Patch:
@@ -27,9 +27,9 @@
  * @date 2010-5-6
  */
 public class Page<E> implements Serializable {
-    
-    static final long serialVersionUID = -1L;
-    
+
+    static final long serialVersionUID = 1234544030560484292L;
+
     /**
      * totalCount.
      */

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ThreadTaskQueueMonitorTask.java
Patch:
@@ -37,7 +37,7 @@ public class ThreadTaskQueueMonitorTask implements Runnable {
     @Override
     public void run() {
         int size = ConfigExecutor.asyncNotifyQueueSize();
-        int notifierClientSize = ConfigExecutor.asyncCofigChangeClientNotifyQueueSize();
+        int notifierClientSize = ConfigExecutor.asyncConfigChangeClientNotifyQueueSize();
         MEMORY_LOG.info("toNotifyTaskSize = {}", size);
         MEMORY_LOG.info("toClientNotifyTaskSize = {}", notifierClientSize);
         MetricsMonitor.getNotifyTaskMonitor().set(size);

File: config/src/main/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifier.java
Patch:
@@ -203,11 +203,11 @@ private void push(RpcPushTask retryTask) {
                     retryTask.connectionId);
             connectionManager.unregister(retryTask.connectionId);
         } else if (connectionManager.getConnection(retryTask.connectionId) != null) {
-            // first time :delay 0s; sencond time:delay 2s  ;third time :delay 4s
+            // first time:delay 0s; second time:delay 2s; third time:delay 4s
             ConfigExecutor.getClientConfigNotifierServiceExecutor()
                     .schedule(retryTask, retryTask.tryTimes * 2, TimeUnit.SECONDS);
         } else {
-            // client is already offline,ingnore task.
+            // client is already offline, ignore task.
         }
         
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/CapacityService.java
Patch:
@@ -269,10 +269,9 @@ public boolean initGroupCapacity(String group) {
     private boolean initGroupCapacity(String group, Integer quota, Integer maxSize, Integer maxAggrCount,
             Integer maxAggrSize) {
         boolean insertSuccess = insertGroupCapacity(group, quota, maxSize, maxAggrCount, maxAggrSize);
-        if (quota != null) {
-            return insertSuccess;
+        if (quota == null) {
+            autoExpansion(group, null);
         }
-        autoExpansion(group, null);
         return insertSuccess;
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
-import java.util.concurrent.TimeUnit;
 
 import static com.alibaba.nacos.common.utils.CollectionUtils.getOrDefault;
 
@@ -85,8 +84,6 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>
             poolProperties.setPassword(getOrDefault(password, index, password.get(0)).trim());
             HikariDataSource ds = poolProperties.getDataSource();
             ds.setConnectionTestQuery(TEST_QUERY);
-            ds.setIdleTimeout(TimeUnit.MINUTES.toMillis(10L));
-            ds.setConnectionTimeout(TimeUnit.SECONDS.toMillis(3L));
             dataSources.add(ds);
             callback.accept(ds);
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -57,7 +57,7 @@ public class LocalDataSourceServiceImpl implements DataSourceService {
     
     private final String password = "nacos";
     
-    private final String derbyBaseDir = "data" + File.separator + "derby-data";
+    private final String derbyBaseDir = "data" + File.separator + Constants.DERBY_BASE_DIR;
     
     private final String derbyShutdownErrMsg = "Derby system shutdown.";
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.service.repository.embedded;
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.event.DerbyLoadEvent;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -61,7 +62,7 @@ public class DerbySnapshotOperation implements SnapshotOperation {
     
     private final String snapshotArchive = "derby_data.zip";
     
-    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", "derby-data").toString();
+    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", Constants.DERBY_BASE_DIR).toString();
     
     private final String restoreDB = "jdbc:derby:" + derbyBaseDir;
     
@@ -127,7 +128,7 @@ public boolean onSnapshotLoad(Reader reader) {
                 }
             }
             
-            final String loadPath = Paths.get(readerPath, snapshotDir, "derby-data").toString();
+            final String loadPath = Paths.get(readerPath, snapshotDir, Constants.DERBY_BASE_DIR).toString();
             LogUtil.FATAL_LOG.info("snapshot load from : {}, and copy to : {}", loadPath, derbyBaseDir);
             
             doDerbyRestoreFromBackup(() -> {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -94,7 +94,7 @@
  *               │              │           │                 │
  *               │              │           │                 ▼
  *               │              │           │    ┌────────────────────────┐
- *               │              │           │    │  acquireSnakeflowerId  │
+ *               │              │           │    │  acquireSnowFlowerId   │
  *               │              │           │    └────────────────────────┘
  *               │              │           │                 │
  *               │              │           │                 │

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ConfigExecutor.java
Patch:
@@ -89,7 +89,7 @@ public static int asyncNotifyQueueSize() {
         return ((ScheduledThreadPoolExecutor) ASYNC_NOTIFY_EXECUTOR).getQueue().size();
     }
     
-    public static int asyncCofigChangeClientNotifyQueueSize() {
+    public static int asyncConfigChangeClientNotifyQueueSize() {
         return ((ScheduledThreadPoolExecutor) ASYNC_CONFIG_CHANGE_NOTIFY_EXECUTOR).getQueue().size();
     }
     

File: config/src/test/java/com/alibaba/nacos/config/server/controller/ConfigServletInnerTest.java
Patch:
@@ -259,4 +259,5 @@ public void testDoGetConfigV3() throws Exception {
     
         configCacheServiceMockedStatic.close();
     }
-}
\ No newline at end of file
+    
+}

File: config/src/test/java/com/alibaba/nacos/config/server/service/datasource/DataSourcePoolPropertiesTest.java
Patch:
@@ -62,6 +62,7 @@ public void testBuild() {
         assertEquals(PASSWORD, actual.getPassword());
         assertEquals(CONNECTION_TIMEOUT.longValue(), actual.getConnectionTimeout());
         assertEquals(DataSourcePoolProperties.DEFAULT_VALIDATION_TIMEOUT, actual.getValidationTimeout());
+        assertEquals(DataSourcePoolProperties.DEFAULT_IDLE_TIMEOUT, actual.getIdleTimeout());
         assertEquals(MAX_POOL_SIZE.intValue(), actual.getMaximumPoolSize());
         assertEquals(DataSourcePoolProperties.DEFAULT_MINIMUM_IDLE, actual.getMinimumIdle());
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -348,7 +348,7 @@ public CompletableFuture<Response> commit(final String group, final Message data
      * @return join success
      */
     void registerSelfToCluster(String groupId, PeerId selfIp, Configuration conf) {
-        for (; ; ) {
+        while (!isShutdown) {
             try {
                 List<PeerId> peerIds = cliService.getPeers(groupId, conf);
                 if (peerIds.contains(selfIp)) {

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -79,9 +79,6 @@ public static String required(final HttpServletRequest req, final String key) {
      * @return value
      */
     public static String optional(final HttpServletRequest req, final String key, final String defaultValue) {
-        if (!req.getParameterMap().containsKey(key) || req.getParameterMap().get(key)[0] == null) {
-            return defaultValue;
-        }
         String value = req.getParameter(key);
         if (StringUtils.isBlank(value)) {
             return defaultValue;

File: core/src/test/java/com/alibaba/nacos/core/distributed/raft/processor/AbstractProcessorTest.java
Patch:
@@ -63,7 +63,7 @@ public String getRemoteAddress() {
                 return null;
             }
         };
-        AbstractProcessor processor = new NacosLogProcessor(server, SerializeFactory.getDefault());
+        AbstractProcessor processor = new NacosWriteRequestProcessor(server, SerializeFactory.getDefault());
         processor.execute(server, context, WriteRequest.newBuilder().build(), new JRaftServer.RaftGroupTuple());
         
         Response response = reference.get();

File: example/src/main/java/com/alibaba/nacos/example/NamingExample.java
Patch:
@@ -41,8 +41,8 @@ public class NamingExample {
     public static void main(String[] args) throws NacosException, InterruptedException {
         
         Properties properties = new Properties();
-        properties.setProperty("serverAddr", System.getProperty("serverAddr"));
-        properties.setProperty("namespace", System.getProperty("namespace"));
+        properties.setProperty("serverAddr", System.getProperty("serverAddr", "localhost"));
+        properties.setProperty("namespace", System.getProperty("namespace", "public"));
         
         NamingService naming = NamingFactory.createNamingService(properties);
         

File: istio/src/main/java/com/alibaba/nacos/istio/util/IstioCrdUtil.java
Patch:
@@ -73,7 +73,7 @@ public static ServiceEntryWrapper buildServiceEntry(String serviceName, String d
             if (StringUtils.isNotEmpty(instance.getMetadata().get("protocol"))) {
                 protocol = instance.getMetadata().get("protocol");
 
-                if (protocol.equals("triple")||protocol.equals("tri")){
+                if ("triple".equals(protocol) || "tri".equals(protocol)){
                     protocol = "grpc";
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerStatusManager.java
Patch:
@@ -35,7 +35,7 @@
 @Service
 public class ServerStatusManager {
     
-    @Resource(name = "consistencyDelegate")
+    @Resource(name = "persistentConsistencyServiceDelegate")
     private ConsistencyService consistencyService;
     
     private final SwitchDomain switchDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/constants/ClientConstants.java
Patch:
@@ -35,6 +35,8 @@ public class ClientConstants {
     
     public static final String PERSISTENT_IP_PORT = "persistentIpPort";
     
+    public static final String REVISION = "revision";
+    
     public static final String PERSISTENT_SUFFIX = "false";
     
     public static final String CLIENT_EXPIRED_TIME_CONFIG_KEY = "nacos.naming.client.expired.time";

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -232,7 +232,7 @@ public void addConfigInfo4Beta(ConfigInfo configInfo, String betaIps, String src
         try {
             ConfigInfoBetaMapper configInfoBetaMapper = (ConfigInfoBetaMapper) mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO_BETA).get();
             jt.update(configInfoBetaMapper.insert(Arrays.asList("data_id", "group_id", "tenant_id", "app_name", "content", "md5", "beta_ips", "src_ip",
-                            "src_user","gmt_create", "gmt_modified", "encrypted_data_key")),
+                            "src_user", "gmt_create", "gmt_modified", "encrypted_data_key")),
                     configInfo.getDataId(), configInfo.getGroup(), tenantTmp, appNameTmp, configInfo.getContent(), md5,
                     betaIps, srcIp, srcUser, time, time, encryptedDataKey);
         } catch (CannotGetJdbcConnectionException e) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -2169,7 +2169,7 @@ public void updateConfigSubAtomic(final String dataId, final String group, final
     public ConfigHistoryInfo detailConfigHistory(Long nid) {
         HistoryConfigInfoMapper historyConfigInfoMapper = (HistoryConfigInfoMapper) mapperManager.findMapper(dataSource, TableConstant.HIS_CONFIG_INFO).get();
         String sqlFetchRows = historyConfigInfoMapper.select(Arrays.asList("nid", "data_id", "group_id", "tenant_id", "app_name", "content", "md5", "src_user", "src_ip", "op_type", "gmt_create",
-                "encrypted_data_key"), Collections.singletonList("nid"));
+                "gmt_modified","encrypted_data_key"), Collections.singletonList("nid"));
         return databaseOperate.queryOne(sqlFetchRows, new Object[] {nid}, HISTORY_DETAIL_ROW_MAPPER);
     }
     
@@ -2401,7 +2401,7 @@ public List<ConfigAllInfo> findAllConfigInfo4Export(final String dataId, final S
         }
         ConfigInfoMapper configInfoMapper = (ConfigInfoMapper) mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO).get();
         String sql = configInfoMapper.findAllConfigInfo4Export(ids, params);
-        return databaseOperate.queryMany(SQL_FIND_ALL_CONFIG_INFO, paramList.toArray(),
+        return databaseOperate.queryMany(sql, paramList.toArray(),
                 CONFIG_ALL_INFO_ROW_MAPPER);
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -232,7 +232,7 @@ public void addConfigInfo4Beta(ConfigInfo configInfo, String betaIps, String src
         try {
             ConfigInfoBetaMapper configInfoBetaMapper = (ConfigInfoBetaMapper) mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO_BETA).get();
             jt.update(configInfoBetaMapper.insert(Arrays.asList("data_id", "group_id", "tenant_id", "app_name", "content", "md5", "beta_ips", "src_ip",
-                            "src_user,gmt_create", "gmt_modified", "encrypted_data_key")),
+                            "src_user","gmt_create", "gmt_modified", "encrypted_data_key")),
                     configInfo.getDataId(), configInfo.getGroup(), tenantTmp, appNameTmp, configInfo.getContent(), md5,
                     betaIps, srcIp, srcUser, time, time, encryptedDataKey);
         } catch (CannotGetJdbcConnectionException e) {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -38,6 +38,7 @@
 import com.alibaba.nacos.config.server.model.SameConfigPolicy;
 import com.alibaba.nacos.config.server.model.SampleResult;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
+import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.result.code.ResultCodeEnum;
 import com.alibaba.nacos.config.server.service.AggrWhitelist;
 import com.alibaba.nacos.config.server.service.ConfigChangePublisher;
@@ -412,6 +413,7 @@ public Page<ConfigInfo> fuzzySearchConfig(@RequestParam("dataId") String dataId,
             @RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant,
             @RequestParam(value = "config_tags", required = false) String configTags,
             @RequestParam("pageNo") int pageNo, @RequestParam("pageSize") int pageSize) {
+        MetricsMonitor.getFuzzySearchMonitor().incrementAndGet();
         Map<String, Object> configAdvanceInfo = new HashMap<>(50);
         if (StringUtils.isNotBlank(appName)) {
             configAdvanceInfo.put("appName", appName);

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -103,6 +103,9 @@ public void onEvent(Event event) {
                     String group = evt.group;
                     String tenant = evt.tenant;
                     String tag = evt.tag;
+                    
+                    MetricsMonitor.incrementConfigChangeCount(tenant, group, dataId);
+                    
                     Collection<Member> ipList = memberManager.allMembers();
                     
                     // In fact, any type of queue here can be

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/hook/NacosMonitorPushResultHook.java
Patch:
@@ -32,6 +32,9 @@ public void pushSuccess(PushResult result) {
         MetricsMonitor.incrementPush();
         MetricsMonitor.incrementPushCost(result.getAllCost());
         MetricsMonitor.compareAndSetMaxPushCost(result.getAllCost());
+        if (null == result.getData().getHosts() || !result.getData().validate()) {
+            MetricsMonitor.incrementEmptyPush();
+        }
         if (isRpc(result.getSubscriber())) {
             NamingTpsMonitor.rpcPushSuccess(result.getSubscribeClientId(), result.getSubscriber().getIp());
         } else {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -232,7 +232,7 @@ public void addConfigInfo4Beta(ConfigInfo configInfo, String betaIps, String src
         try {
             ConfigInfoBetaMapper configInfoBetaMapper = (ConfigInfoBetaMapper) mapperManager.findMapper(dataSource, TableConstant.CONFIG_INFO_BETA).get();
             jt.update(configInfoBetaMapper.insert(Arrays.asList("data_id", "group_id", "tenant_id", "app_name", "content", "md5", "beta_ips", "src_ip",
-                    "src_user,gmt_create", "gmt_modified", "encrypted_data_key")),
+                            "src_user,gmt_create", "gmt_modified", "encrypted_data_key")),
                     configInfo.getDataId(), configInfo.getGroup(), tenantTmp, appNameTmp, configInfo.getContent(), md5,
                     betaIps, srcIp, srcUser, time, time, encryptedDataKey);
         } catch (CannotGetJdbcConnectionException e) {
@@ -2324,7 +2324,7 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
         final int startRow = (pageNo - 1) * pageSize;
         HistoryConfigInfoMapper historyConfigInfoMapper = (HistoryConfigInfoMapper) mapperManager.findMapper(dataSource, TableConstant.HIS_CONFIG_INFO).get();
         String sqlCountRows = historyConfigInfoMapper.findConfigHistoryCountRows();
-        String sqlFetchRows = historyConfigInfoMapper.findConfigHistoryFetchRows(startRow, pageSize);
+        String sqlFetchRows = historyConfigInfoMapper.findConfigHistoryFetchRows();
         
         Page<ConfigHistoryInfo> page = null;
         try {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigInfoMapperByMySql.java
Patch:
@@ -237,7 +237,7 @@ public String findAllConfigInfo4Export(List<Long> ids, Map<String, String> param
             if (StringUtils.isNotBlank(params.get(GROUP))) {
                 where.append(" AND group_id= ? ");
             }
-            if (StringUtils.isNotBlank(APP_NAME)) {
+            if (StringUtils.isNotBlank(params.get(APP_NAME))) {
                 where.append(" AND app_name= ? ");
             }
         }

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigTagsRelationMapperByMySql.java
Patch:
@@ -116,7 +116,7 @@ public String findConfigInfo4PageCountRows(final Map<String, String> params, fin
             where.append('?');
         }
         where.append(") ");
-        return sqlCount;
+        return sqlCount + where;
     }
     
     @Override

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/HistoryConfigInfoMapperByMySql.java
Patch:
@@ -50,9 +50,9 @@ public String findConfigHistoryCountRows() {
     }
     
     @Override
-    public String findConfigHistoryFetchRows(int startRow, int pageSize) {
-        return "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified FROM his_config_info "
-                + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC" + " LIMIT " + startRow + "," + pageSize;
+    public String findConfigHistoryFetchRows() {
+        return  "SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified FROM his_config_info "
+                + "WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC";
     }
     
     @Override

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/HistoryConfigInfoMapper.java
Patch:
@@ -66,11 +66,9 @@ public interface HistoryConfigInfoMapper extends Mapper {
      * SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified FROM his_config_info
      * WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC
      *
-     * @param startRow The start index.
-     * @param pageSize The size of page.
      * @return The sql of listing configuration history change record.
      */
-    String findConfigHistoryFetchRows(int startRow, int pageSize);
+    String findConfigHistoryFetchRows();
     
     /**
      * Get previous config detail.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/derby/ConfigInfoTagsRelationMapperByDerby.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.plugin.datasource.constants.DataSourceConstant;
 import com.alibaba.nacos.plugin.datasource.constants.TableConstant;
+import com.alibaba.nacos.plugin.datasource.mapper.AbstractMapper;
 import com.alibaba.nacos.plugin.datasource.mapper.ConfigTagsRelationMapper;
 
 import java.util.Map;
@@ -29,7 +30,7 @@
  * @author hyx
  **/
 
-public class ConfigInfoTagsRelationMapperByDerby implements ConfigTagsRelationMapper {
+public class ConfigInfoTagsRelationMapperByDerby extends AbstractMapper implements ConfigTagsRelationMapper {
     
     @Override
     public String findConfigInfoAdvanceInfo(Map<String, String> params, int tagSize) {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/mysql/ConfigTagsRelationMapperByMySql.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.plugin.datasource.constants.DataSourceConstant;
 import com.alibaba.nacos.plugin.datasource.constants.TableConstant;
+import com.alibaba.nacos.plugin.datasource.mapper.AbstractMapper;
 import com.alibaba.nacos.plugin.datasource.mapper.ConfigTagsRelationMapper;
 
 import java.util.Map;
@@ -29,7 +30,7 @@
  * @author hyx
  **/
 
-public class ConfigTagsRelationMapperByMySql implements ConfigTagsRelationMapper {
+public class ConfigTagsRelationMapperByMySql extends AbstractMapper implements ConfigTagsRelationMapper {
     
     @Override
     public String findConfigInfoAdvanceInfo(Map<String, String> params, int tagSize) {

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/impl/derby/HistoryConfigInfoMapperByDerby.java
Patch:
@@ -53,7 +53,7 @@ public String insertConfigHistoryAtomic() {
     
     @Override
     public String findConfigHistoryCountRows() {
-        return "SELECT count(*) FROM his_config_info WHERE gmt_modified < ?";
+        return "SELECT count(*) FROM his_config_info WHERE data_id = ? AND group_id = ? AND tenant_id = ?";
     }
     
     @Override

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoAggrMapper.java
Patch:
@@ -147,9 +147,11 @@ public interface ConfigInfoAggrMapper extends Mapper {
      * SELECT data_id,group_id,tenant_id,datum_id,app_name,content FROM config_info_aggr WHERE data_id=? AND
      * group_id=? AND tenant_id=? ORDER BY datum_id LIMIT ?,?
      *
+     * @param startRow The start index.
+     * @param pageSize The size of page.
      * @return The sql of querying aggregation config info.
      */
-    String findConfigInfoAggrByPageFetchRows();
+    String findConfigInfoAggrByPageFetchRows(int startRow, int pageSize);
     
     /**
      * Find all aggregated data sets.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoBetaMapper.java
Patch:
@@ -87,7 +87,9 @@ public interface ConfigInfoBetaMapper extends Mapper {
      * SELECT t.id,data_id,group_id,tenant_id,app_name,content,md5,gmt_modified,beta_ips,encrypted_data_key
      * FROM ( SELECT id FROM config_info_beta  ORDER BY id LIMIT ?,?  ) g, config_info_beta t WHERE g.id = t.id
      *
+     * @param startRow The start index.
+     * @param pageSize The size of page.
      * @return The sql of querying all beta config info for dump task.
      */
-    String findAllConfigInfoBetaForDumpAllFetchRows();
+    String findAllConfigInfoBetaForDumpAllFetchRows(int startRow, int pageSize);
 }

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoTagMapper.java
Patch:
@@ -88,9 +88,11 @@ public interface ConfigInfoTagMapper extends Mapper {
      * FROM (  SELECT id FROM config_info_tag  ORDER BY id LIMIT ?,? ) g,
      * config_info_tag t  WHERE g.id = t.id
      *
+     * @param startRow The start index.
+     * @param pageSize The size of page.
      * @return The sql of querying all tag config info for dump task.
      */
-    String findAllConfigInfoTagForDumpAllFetchRows();
+    String findAllConfigInfoTagForDumpAllFetchRows(int startRow, int pageSize);
     
     /**
      * Delete configuration; database atomic operation, minimum SQL action, no business encapsulation.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/HistoryConfigInfoMapper.java
Patch:
@@ -76,9 +76,11 @@ public interface HistoryConfigInfoMapper extends Mapper {
      * SELECT nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified FROM his_config_info
      * WHERE data_id = ? AND group_id = ? AND tenant_id = ? ORDER BY nid DESC
      *
+     * @param startRow The start index.
+     * @param pageSize The size of page.
      * @return The sql of listing configuration history change record.
      */
-    String findConfigHistoryFetchRows();
+    String findConfigHistoryFetchRows(int startRow, int pageSize);
     
     /**
      * Get history config detail.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoMapper.java
Patch:
@@ -340,9 +340,10 @@ public interface ConfigInfoMapper extends Mapper {
      * SELECT data_id, group_id, tenant_id, app_name, content FROM config_info WHERE group_id = ? AND tenant_id = ? AND data_id IN (...)
      *
      * @param dataIds data id list
+     * @param subQueryLimit sub query limit
      * @return The sql to get config information by batch.
      */
-    String findConfigInfoByBatch(List<String> dataIds);
+    String findConfigInfoByBatch(List<String> dataIds, int subQueryLimit);
     
     /**
      * Get the count of config information.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoTagMapper.java
Patch:
@@ -90,7 +90,7 @@ public interface ConfigInfoTagMapper extends Mapper {
      *
      * @return The sql of querying all tag config info for dump task.
      */
-    String findAllConfigInfoTagForDumpAllFetch();
+    String findAllConfigInfoTagForDumpAllFetchRows();
     
     /**
      * Delete configuration; database atomic operation, minimum SQL action, no business encapsulation.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoAggrMapper.java
Patch:
@@ -22,7 +22,7 @@
  * @author hyx
  **/
 
-public interface ConfigInfoAggrMapper {
+public interface ConfigInfoAggrMapper extends Mapper {
     
     /**
      * Query content from config_info_aggr by dataId, groupId, tenantId and datumId.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoBetaMapper.java
Patch:
@@ -22,7 +22,7 @@
  * @author hyx
  **/
 
-public interface ConfigInfoBetaMapper {
+public interface ConfigInfoBetaMapper extends Mapper {
     
     /**
      * Add beta configuration information.

File: plugin/datasource/src/main/java/com/alibaba/nacos/plugin/datasource/mapper/ConfigInfoMapper.java
Patch:
@@ -22,7 +22,7 @@
  * @author hyx
  **/
 
-public interface ConfigInfoMapper {
+public interface ConfigInfoMapper extends Mapper {
     
     /**
      * Update md5.

File: api/src/main/java/com/alibaba/nacos/api/SystemPropertyKeyConst.java
Patch:
@@ -27,8 +27,6 @@ public interface SystemPropertyKeyConst {
     
     String NAMING_SERVER_PORT = "nacos.naming.exposed.port";
     
-    String NAMING_WEB_CONTEXT = "nacos.naming.web.context";
-    
     /**
      * In the cloud (Alibaba Cloud or other cloud vendors) environment, whether to enable namespace resolution in the
      * cloud environment.

File: core/src/test/java/com/alibaba/nacos/core/distributed/raft/processor/AbstractProcessorTest.java
Patch:
@@ -63,7 +63,7 @@ public String getRemoteAddress() {
                 return null;
             }
         };
-        AbstractProcessor processor = new NacosLogProcessor(server, SerializeFactory.getDefault());
+        AbstractProcessor processor = new NacosWriteRequestProcessor(server, SerializeFactory.getDefault());
         processor.execute(server, context, WriteRequest.newBuilder().build(), new JRaftServer.RaftGroupTuple());
         
         Response response = reference.get();

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceOperatorV2ImplTest.java
Patch:
@@ -144,7 +144,7 @@ public void testListAllNamespace() {
     
     @Test
     public void testSearchServiceName() throws NacosException {
-        Collection<String> res = serviceOperatorV2.searchServiceName("A", "", true);
+        Collection<String> res = serviceOperatorV2.searchServiceName("A", "");
         Assert.assertEquals(1, res.size());
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/remote/udp/UdpConnectorTest.java
Patch:
@@ -76,7 +76,7 @@ public void setUp() throws IOException, InterruptedException {
         DatagramSocket oldSocket = (DatagramSocket) ReflectionTestUtils.getField(udpConnector, "udpSocket");
         ReflectionTestUtils.setField(udpConnector, "udpSocket", udpSocket);
         doAnswer(invocationOnMock -> {
-            TimeUnit.MINUTES.sleep(1);
+            TimeUnit.SECONDS.sleep(3);
             return null;
         }).when(udpSocket).receive(any(DatagramPacket.class));
         oldSocket.close();

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
+import org.springframework.core.annotation.Order;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -31,6 +32,7 @@
  *
  * @author Nacos
  */
+@Order(0)
 @ControllerAdvice
 public class GlobalExceptionHandler {
     

File: config/src/test/java/com/alibaba/nacos/config/server/controller/ConfigServletInnerTest.java
Patch:
@@ -259,4 +259,5 @@ public void testDoGetConfigV3() throws Exception {
     
         configCacheServiceMockedStatic.close();
     }
-}
\ No newline at end of file
+    
+}

File: address/src/test/java/com/alibaba/nacos/address/component/AddressServerGeneratorManagerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.component;
 
 import com.alibaba.nacos.address.constant.AddressServerConstants;
-import com.alibaba.nacos.naming.core.Instance;
+import com.alibaba.nacos.api.naming.pojo.Instance;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -67,7 +67,7 @@ public void testGenerateInstancesByIps() {
     
     @Test
     public void testGenerateResponseIps() {
-        final List<Instance> instanceList = new ArrayList<>();
+        final List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList = new ArrayList<>();
         Instance instance1 = new Instance();
         instance1.setIp("192.168.3.1");
         instance1.setPort(8848);

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -75,6 +75,8 @@ public class PropertyKeyConst {
     
     public static final String NAMING_PUSH_EMPTY_PROTECTION = "namingPushEmptyProtection";
     
+    public static final String NAMING_ASYNC_QUERY_SUBSCRIBE_SERVICE = "namingAsyncQuerySubscribeService";
+    
     public static final String PUSH_RECEIVER_UDP_PORT = "push.receiver.udp.port";
     
     /**

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/response/InstanceResponse.java
Patch:
@@ -38,4 +38,7 @@ public void setType(String type) {
         this.type = type;
     }
     
+    public String getType() {
+        return type;
+    }
 }

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -275,6 +275,7 @@ public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         LOGGER.info("{} do shutdown begin", className);
         ConfigHttpClientManager.getInstance().shutdown();
+        serverListMgr.shutdown();
         LOGGER.info("{} do shutdown stop", className);
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/constant/Constants.java
Patch:
@@ -35,7 +35,7 @@ public static class SysEnv {
         
         public static final String JM_SNAPSHOT_PATH = "JM.SNAPSHOT.PATH";
         
-        public static final String NACOS_ENVS_SEARCH = "nacos.envs.search";
+        public static final String NACOS_ENV_FIRST = "nacos.env.first";
         
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java
Patch:
@@ -87,7 +87,8 @@ public ServerListManager(Properties properties, String namespace) {
         initServerAddr(properties);
         if (!serverList.isEmpty()) {
             currentIndex.set(new Random().nextInt(serverList.size()));
-        } else {
+        }
+        if (serverList.isEmpty() && StringUtils.isEmpty(endpoint)) {
             throw new NacosLoadException("serverList is empty,please check configuration");
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -280,7 +280,7 @@ public boolean isSubscribed(String serviceName, String groupName, String cluster
      * @throws NacosException nacos exception
      */
     public void doUnsubscribe(String serviceName, String groupName, String clusters) throws NacosException {
-        SubscribeServiceRequest request = new SubscribeServiceRequest(namespaceId, serviceName, groupName, clusters,
+        SubscribeServiceRequest request = new SubscribeServiceRequest(namespaceId, groupName, serviceName, clusters,
                 false);
         requestToServer(request, SubscribeServiceResponse.class);
         redoService.removeSubscriberForRedo(serviceName, groupName, clusters);

File: client/src/test/java/com/alibaba/nacos/client/config/impl/LimiterTest.java
Patch:
@@ -24,13 +24,14 @@ public class LimiterTest {
     @Test
     public void testIsLimit() {
         String keyId = "a";
+        //For initiating.
         Assert.assertFalse(Limiter.isLimit(keyId));
         long start = System.currentTimeMillis();
         for (int j = 0; j < 5; j++) {
             Assert.assertFalse(Limiter.isLimit(keyId));
         }
         long elapse = System.currentTimeMillis() - start;
         // assert  < limit 5qps
-        Assert.assertTrue(Math.abs(1000 - elapse) < 20);
+        Assert.assertTrue(elapse > 980);
     }
 }
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateServiceTest.java
Patch:
@@ -39,6 +39,7 @@ public void testScheduleUpdateIfAbsent() throws InterruptedException, NacosExcep
         info.setGroupName(group);
         info.setClusters(clusters);
         info.setLastRefTime(System.currentTimeMillis());
+        info.setCacheMillis(10000L);
         ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
         NamingClientProxy proxy = Mockito.mock(NamingClientProxy.class);
         Mockito.when(proxy.queryInstancesOfService(serviceName, group, clusters, 0, false)).thenReturn(info);
@@ -77,4 +78,4 @@ public void testStopUpdateIfContain() throws NacosException {
         serviceInfoUpdateService.stopUpdateIfContain(serviceName, group, clusters);
         serviceInfoUpdateService.shutdown();
     }
-}
\ No newline at end of file
+}

File: common/src/main/java/com/alibaba/nacos/common/cache/impl/SimpleCache.java
Patch:
@@ -32,7 +32,7 @@ public class SimpleCache<K, V> implements Cache<K, V> {
     private Map<K, V> cache;
     
     public SimpleCache(int size) {
-        cache = new HashMap(size);
+        cache = new HashMap<>(size);
     }
     
     @Override

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -301,6 +301,9 @@ private static boolean publishEvent(final Class<? extends Event> eventType, fina
         if (publisher != null) {
             return publisher.publish(event);
         }
+        if (event.isPluginEvent()) {
+            return true;
+        }
         LOGGER.warn("There are no [{}] publishers for this event, please register", topic);
         return false;
     }

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/SmartSubscriber.java
Patch:
@@ -30,9 +30,9 @@
 public abstract class SmartSubscriber extends Subscriber {
     
     /**
-     * Returns which event type are smartsubscriber interested in.
+     * Returns which event type are smart subscriber interested in.
      *
-     * @return The interestd event types.
+     * @return The interested event types.
      */
     public abstract List<Class<? extends Event>> subscribeTypes();
     

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/Subscriber.java
Patch:
@@ -69,6 +69,6 @@ public boolean ignoreExpireEvent() {
      * @return Whether the event's scope matches current subscriber
      */
     public boolean scopeMatches(T event) {
-        return event.scope() == null;
+        return true;
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/packagescan/resource/PathMatchingResourcePatternResolver.java
Patch:
@@ -867,10 +867,10 @@ public PatternVirtualFileVisitor(String rootPath, String subPattern, PathMatcher
         public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
             String methodName = method.getName();
             if (Object.class == method.getDeclaringClass()) {
-                if (methodName.equals("equals")) {
+                if ("equals".equals(methodName)) {
                     // Only consider equal when proxies are identical.
                     return (proxy == args[0]);
-                } else if (methodName.equals("hashCode")) {
+                } else if ("hashCode".equals(methodName)) {
                     return System.identityHashCode(proxy);
                 }
             } else if ("getAttributes".equals(methodName)) {

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisher.java
Patch:
@@ -102,9 +102,7 @@ public boolean publish(Event event) {
         checkIsStart();
         boolean success = this.queue.offer(event);
         if (!success) {
-            LOGGER.warn("Unable to plug in due to interruption, synchronize sending time, event : {}", event);
-            handleEvent(event);
-            return true;
+            LOGGER.warn("Trace Event Publish failed, event : {}, publish queue size : {}", event, currentEventSize());
         }
         return true;
     }

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientFactoryTest.java
Patch:
@@ -104,7 +104,7 @@ public void testCreateClientWhenNotCreatedThenCreate() {
         RpcClient client = RpcClientFactory
                 .createClient("testClient", ConnectionType.GRPC, Collections.singletonMap("labelKey", "labelValue"));
         
-        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.labels);
+        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.rpcClientConfig.labels());
         Assert.assertEquals(ConnectionType.GRPC, client.getConnectionType());
         Assert.assertEquals("testClient", CollectionUtils.getOnlyElement(RpcClientFactory.getAllClientEntries()).getKey());
     }
@@ -134,7 +134,7 @@ public void testCreateClusterClientWhenNotCreatedThenCreate() {
                 Collections.singletonMap("labelKey", "labelValue")
         );
         
-        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.labels);
+        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.rpcClientConfig.labels());
         Assert.assertEquals(ConnectionType.GRPC, client.getConnectionType());
         Assert.assertEquals("testClient", CollectionUtils.getOnlyElement(RpcClientFactory.getAllClientEntries()).getKey());
     }

File: common/src/test/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisherFactoryTest.java
Patch:
@@ -56,7 +56,7 @@ public void testApply() {
         TraceEventPublisherFactory.getInstance().apply(TraceTestEvent.TraceTestEvent2.class, Byte.SIZE);
         TraceEventPublisherFactory.getInstance().apply(TraceTestEvent.class, Byte.SIZE);
         String expectedStatus = "Trace event publisher statues:\n"
-                + "\tPublisher TraceTestEvent                : shutdown=false, queue=      0/8      \n";
+                + "\tPublisher TraceEvent                    : shutdown=false, queue=      0/8      \n";
         assertThat(TraceEventPublisherFactory.getInstance().getAllPublisherStatues(), is(expectedStatus));
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigAdvanceInfo.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class ConfigAdvanceInfo implements Serializable {
     
-    static final long serialVersionUID = -1L;
+    static final long serialVersionUID = 3148031484920416869L;
     
     private long createTime;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfo.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class ConfigInfo extends ConfigInfoBase {
     
-    static final long serialVersionUID = -1L;
+    static final long serialVersionUID = 3115358782431229202L;
     
     private String tenant;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -32,7 +32,7 @@
  */
 public class ConfigInfoBase implements Serializable, Comparable<ConfigInfoBase> {
     
-    static final long serialVersionUID = -1L;
+    static final long serialVersionUID = 265316491795790798L;
     
     @JsonSerialize(using = ToStringSerializer.class)
     private long id;

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBaseEx.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class ConfigInfoBaseEx extends ConfigInfoBase {
     
-    private static final long serialVersionUID = -1L;
+    private static final long serialVersionUID = 5802322506486922169L;
     
     /**
      * Single message status code, when querying for batch.

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoEx.java
Patch:
@@ -23,7 +23,7 @@
  */
 public class ConfigInfoEx extends ConfigInfo {
     
-    private static final long serialVersionUID = -1L;
+    private static final long serialVersionUID = 8905036592920606608L;
     
     /**
      * Single message status code, when querying for batch.

File: config/src/main/java/com/alibaba/nacos/config/server/model/GroupInfo.java
Patch:
@@ -27,9 +27,9 @@
  * @author Nacos
  */
 public class GroupInfo implements Serializable {
-    
-    static final long serialVersionUID = -1L;
-    
+
+    static final long serialVersionUID = 3930805434971004186L;
+
     @JsonSerialize(using = ToStringSerializer.class)
     private long id;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/Page.java
Patch:
@@ -27,9 +27,9 @@
  * @date 2010-5-6
  */
 public class Page<E> implements Serializable {
-    
-    static final long serialVersionUID = -1L;
-    
+
+    static final long serialVersionUID = 1234544030560484292L;
+
     /**
      * totalCount.
      */

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ThreadTaskQueueMonitorTask.java
Patch:
@@ -37,7 +37,7 @@ public class ThreadTaskQueueMonitorTask implements Runnable {
     @Override
     public void run() {
         int size = ConfigExecutor.asyncNotifyQueueSize();
-        int notifierClientSize = ConfigExecutor.asyncCofigChangeClientNotifyQueueSize();
+        int notifierClientSize = ConfigExecutor.asyncConfigChangeClientNotifyQueueSize();
         MEMORY_LOG.info("toNotifyTaskSize = {}", size);
         MEMORY_LOG.info("toClientNotifyTaskSize = {}", notifierClientSize);
         MetricsMonitor.getNotifyTaskMonitor().set(size);

File: config/src/main/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifier.java
Patch:
@@ -203,11 +203,11 @@ private void push(RpcPushTask retryTask) {
                     retryTask.connectionId);
             connectionManager.unregister(retryTask.connectionId);
         } else if (connectionManager.getConnection(retryTask.connectionId) != null) {
-            // first time :delay 0s; sencond time:delay 2s  ;third time :delay 4s
+            // first time:delay 0s; second time:delay 2s; third time:delay 4s
             ConfigExecutor.getClientConfigNotifierServiceExecutor()
                     .schedule(retryTask, retryTask.tryTimes * 2, TimeUnit.SECONDS);
         } else {
-            // client is already offline,ingnore task.
+            // client is already offline, ignore task.
         }
         
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/CapacityService.java
Patch:
@@ -269,10 +269,9 @@ public boolean initGroupCapacity(String group) {
     private boolean initGroupCapacity(String group, Integer quota, Integer maxSize, Integer maxAggrCount,
             Integer maxAggrSize) {
         boolean insertSuccess = insertGroupCapacity(group, quota, maxSize, maxAggrCount, maxAggrSize);
-        if (quota != null) {
-            return insertSuccess;
+        if (quota == null) {
+            autoExpansion(group, null);
         }
-        autoExpansion(group, null);
         return insertSuccess;
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
-import java.util.concurrent.TimeUnit;
 
 import static com.alibaba.nacos.common.utils.CollectionUtils.getOrDefault;
 
@@ -85,8 +84,6 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>
             poolProperties.setPassword(getOrDefault(password, index, password.get(0)).trim());
             HikariDataSource ds = poolProperties.getDataSource();
             ds.setConnectionTestQuery(TEST_QUERY);
-            ds.setIdleTimeout(TimeUnit.MINUTES.toMillis(10L));
-            ds.setConnectionTimeout(TimeUnit.SECONDS.toMillis(3L));
             dataSources.add(ds);
             callback.accept(ds);
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.service.repository.embedded;
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.event.DerbyLoadEvent;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -61,7 +62,7 @@ public class DerbySnapshotOperation implements SnapshotOperation {
     
     private final String snapshotArchive = "derby_data.zip";
     
-    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", "derby-data").toString();
+    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", Constants.DERBY_BASE_DIR).toString();
     
     private final String restoreDB = "jdbc:derby:" + derbyBaseDir;
     
@@ -127,7 +128,7 @@ public boolean onSnapshotLoad(Reader reader) {
                 }
             }
             
-            final String loadPath = Paths.get(readerPath, snapshotDir, "derby-data").toString();
+            final String loadPath = Paths.get(readerPath, snapshotDir, Constants.DERBY_BASE_DIR).toString();
             LogUtil.FATAL_LOG.info("snapshot load from : {}, and copy to : {}", loadPath, derbyBaseDir);
             
             doDerbyRestoreFromBackup(() -> {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -94,7 +94,7 @@
  *               │              │           │                 │
  *               │              │           │                 ▼
  *               │              │           │    ┌────────────────────────┐
- *               │              │           │    │  acquireSnakeflowerId  │
+ *               │              │           │    │  acquireSnowFlowerId   │
  *               │              │           │    └────────────────────────┘
  *               │              │           │                 │
  *               │              │           │                 │

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ConfigExecutor.java
Patch:
@@ -89,7 +89,7 @@ public static int asyncNotifyQueueSize() {
         return ((ScheduledThreadPoolExecutor) ASYNC_NOTIFY_EXECUTOR).getQueue().size();
     }
     
-    public static int asyncCofigChangeClientNotifyQueueSize() {
+    public static int asyncConfigChangeClientNotifyQueueSize() {
         return ((ScheduledThreadPoolExecutor) ASYNC_CONFIG_CHANGE_NOTIFY_EXECUTOR).getQueue().size();
     }
     

File: config/src/test/java/com/alibaba/nacos/config/server/service/datasource/DataSourcePoolPropertiesTest.java
Patch:
@@ -62,6 +62,7 @@ public void testBuild() {
         assertEquals(PASSWORD, actual.getPassword());
         assertEquals(CONNECTION_TIMEOUT.longValue(), actual.getConnectionTimeout());
         assertEquals(DataSourcePoolProperties.DEFAULT_VALIDATION_TIMEOUT, actual.getValidationTimeout());
+        assertEquals(DataSourcePoolProperties.DEFAULT_IDLE_TIMEOUT, actual.getIdleTimeout());
         assertEquals(MAX_POOL_SIZE.intValue(), actual.getMaximumPoolSize());
         assertEquals(DataSourcePoolProperties.DEFAULT_MINIMUM_IDLE, actual.getMinimumIdle());
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -348,7 +348,7 @@ public CompletableFuture<Response> commit(final String group, final Message data
      * @return join success
      */
     void registerSelfToCluster(String groupId, PeerId selfIp, Configuration conf) {
-        for (; ; ) {
+        while (!isShutdown) {
             try {
                 List<PeerId> peerIds = cliService.getPeers(groupId, conf);
                 if (peerIds.contains(selfIp)) {

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -79,9 +79,6 @@ public static String required(final HttpServletRequest req, final String key) {
      * @return value
      */
     public static String optional(final HttpServletRequest req, final String key, final String defaultValue) {
-        if (!req.getParameterMap().containsKey(key) || req.getParameterMap().get(key)[0] == null) {
-            return defaultValue;
-        }
         String value = req.getParameter(key);
         if (StringUtils.isBlank(value)) {
             return defaultValue;

File: example/src/main/java/com/alibaba/nacos/example/NamingExample.java
Patch:
@@ -41,8 +41,8 @@ public class NamingExample {
     public static void main(String[] args) throws NacosException, InterruptedException {
         
         Properties properties = new Properties();
-        properties.setProperty("serverAddr", System.getProperty("serverAddr"));
-        properties.setProperty("namespace", System.getProperty("namespace"));
+        properties.setProperty("serverAddr", System.getProperty("serverAddr", "localhost"));
+        properties.setProperty("namespace", System.getProperty("namespace", "public"));
         
         NamingService naming = NamingFactory.createNamingService(properties);
         

File: istio/src/main/java/com/alibaba/nacos/istio/util/IstioCrdUtil.java
Patch:
@@ -73,7 +73,7 @@ public static ServiceEntryWrapper buildServiceEntry(String serviceName, String d
             if (StringUtils.isNotEmpty(instance.getMetadata().get("protocol"))) {
                 protocol = instance.getMetadata().get("protocol");
 
-                if (protocol.equals("triple")||protocol.equals("tri")){
+                if ("triple".equals(protocol) || "tri".equals(protocol)){
                     protocol = "grpc";
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerStatusManager.java
Patch:
@@ -35,7 +35,7 @@
 @Service
 public class ServerStatusManager {
     
-    @Resource(name = "consistencyDelegate")
+    @Resource(name = "persistentConsistencyServiceDelegate")
     private ConsistencyService consistencyService;
     
     private final SwitchDomain switchDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/constants/ClientConstants.java
Patch:
@@ -35,6 +35,8 @@ public class ClientConstants {
     
     public static final String PERSISTENT_IP_PORT = "persistentIpPort";
     
+    public static final String REVISION = "revision";
+    
     public static final String PERSISTENT_SUFFIX = "false";
     
     public static final String CLIENT_EXPIRED_TIME_CONFIG_KEY = "nacos.naming.client.expired.time";

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/InstanceControllerV2.java
Patch:
@@ -31,7 +31,8 @@
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.trace.DeregisterInstanceReason;
-import com.alibaba.nacos.common.trace.event.NamingTraceEvent;
+import com.alibaba.nacos.common.trace.event.naming.DeregisterInstanceTraceEvent;
+import com.alibaba.nacos.common.trace.event.naming.RegisterInstanceTraceEvent;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.naming.core.InstanceOperatorClientImpl;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/v2/ServiceControllerV2.java
Patch:
@@ -25,7 +25,8 @@
 import com.alibaba.nacos.api.selector.Selector;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.common.notify.NotifyCenter;
-import com.alibaba.nacos.common.trace.event.NamingTraceEvent;
+import com.alibaba.nacos.common.trace.event.naming.DeregisterServiceTraceEvent;
+import com.alibaba.nacos.common.trace.event.naming.RegisterServiceTraceEvent;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.naming.core.ServiceOperatorV2Impl;
@@ -101,7 +102,7 @@ public Result<String> remove(@RequestParam(value = "namespaceId", defaultValue =
             @RequestParam(value = "groupName", defaultValue = Constants.DEFAULT_GROUP) String groupName)
             throws Exception {
         serviceOperatorV2.delete(Service.newService(namespaceId, groupName, serviceName));
-        NotifyCenter.publishEvent(new NamingTraceEvent.DeregisterServiceTraceEvent(System.currentTimeMillis(),
+        NotifyCenter.publishEvent(new DeregisterServiceTraceEvent(System.currentTimeMillis(),
                 namespaceId, groupName, serviceName));
         return Result.success("ok");
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/AbstractClient.java
Patch:
@@ -187,7 +187,7 @@ public void release() {
                 MetricsMonitor.getIpCountMonitor().decrementAndGet();
             }
         }
-        MetricsMonitor.getIpCountMonitor().addAndGet(-1 * subscribers.size());
+        MetricsMonitor.getSubscriberCount().addAndGet(-1 * subscribers.size());
     }
     
     @Override

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -34,5 +34,7 @@ public interface HttpHeaderConsts {
     String CONNECTION = "Requester";
     String REQUEST_ID = "RequestId";
     String REQUEST_MODULE = "Request-Module";
+    String APP_FILED = "app";
+    String CLIENT_IP = "clientIp";
     
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImpl.java
Patch:
@@ -349,6 +349,7 @@ protected void loadSnapshot(byte[] snapshotBytes) {
             ConcurrentHashMap<String, IpPortBasedClient> snapshot = new ConcurrentHashMap<>(newData.size());
             for (Map.Entry<String, ClientSyncData> entry : newData.entrySet()) {
                 IpPortBasedClient snapshotClient = new IpPortBasedClient(entry.getKey(), false);
+                snapshotClient.setAttributes(entry.getValue().getAttributes());
                 snapshotClient.init();
                 loadSyncDataToClient(entry, snapshotClient);
                 snapshot.put(entry.getKey(), snapshotClient);

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthConfig.java
Patch:
@@ -79,7 +79,7 @@ public LdapTemplate ldapTemplate() {
     @Bean
     @Conditional(ConditionOnLdapAuth.class)
     public LdapAuthenticationProvider ldapAuthenticationProvider(LdapTemplate ldapTemplate,
-            NacosUserDetailsServiceImpl userDetailsService, NacosRoleServiceImpl nacosRoleService, String filterPrefix) {
+            NacosUserDetailsServiceImpl userDetailsService, NacosRoleServiceImpl nacosRoleService) {
         return new LdapAuthenticationProvider(ldapTemplate, userDetailsService, nacosRoleService, filterPrefix);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/SmartSubscriber.java
Patch:
@@ -30,9 +30,9 @@
 public abstract class SmartSubscriber extends Subscriber {
     
     /**
-     * Returns which event type are smartsubscriber interested in.
+     * Returns which event type are smart subscriber interested in.
      *
-     * @return The interestd event types.
+     * @return The interested event types.
      */
     public abstract List<Class<? extends Event>> subscribeTypes();
     

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisher.java
Patch:
@@ -103,7 +103,6 @@ public boolean publish(Event event) {
         boolean success = this.queue.offer(event);
         if (!success) {
             LOGGER.warn("Trace Event Publish failed, event : {}, publish queue size : {}", event, currentEventSize());
-            return true;
         }
         return true;
     }

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisherFactory.java
Patch:
@@ -50,7 +50,6 @@ public static TraceEventPublisherFactory getInstance() {
 
     @Override
     public EventPublisher apply(final Class<? extends Event> eventType, final Integer maxQueueSize) {
-        // Like ClientEvent$ClientChangeEvent cache by ClientEvent
         Class<? extends Event> cachedEventType = TraceEvent.class;
         
         for (Class<? extends Event> publisherEvent : publisherEvents) {

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.remote.PayloadRegistry;
 import com.alibaba.nacos.common.utils.CollectionUtils;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.NumberUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -895,8 +896,7 @@ private ServerInfo resolveServerInfo(String serverAddress) {
         if (matcher.find()) {
             serverAddress = matcher.group(1);
         }
-        
-        String[] ipPortTuple = serverAddress.split(Constants.COLON, 2);
+        String[] ipPortTuple = InternetAddressUtil.splitIPPortStr(serverAddress);
         int defaultPort = Integer.parseInt(System.getProperty("nacos.server.port", "8848"));
         String serverPort = CollectionUtils.getOrDefault(ipPortTuple, 1, Integer.toString(defaultPort));
         

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -122,6 +122,8 @@ public GrpcClient(String name, Integer threadPoolCoreSize, Integer threadPoolMax
     }
     
     protected ThreadPoolExecutor createGrpcExecutor(String serverIp) {
+        // Thread name will use String.format, ipv6 maybe contain special word %, so handle it first.
+        serverIp = serverIp.replaceAll("%", "-");
         ThreadPoolExecutor grpcExecutor = new ThreadPoolExecutor(clientConfig.threadPoolCoreSize(),
                 clientConfig.threadPoolMaxSize(), clientConfig.threadPoolKeepAlive(), TimeUnit.MILLISECONDS,
                 new LinkedBlockingQueue<>(clientConfig.threadPoolQueueSize()),

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -348,7 +348,7 @@ public CompletableFuture<Response> commit(final String group, final Message data
      * @return join success
      */
     void registerSelfToCluster(String groupId, PeerId selfIp, Configuration conf) {
-        for (; ; ) {
+        while (!isShutdown) {
             try {
                 List<PeerId> peerIds = cliService.getPeers(groupId, conf);
                 if (peerIds.contains(selfIp)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -57,7 +57,7 @@ public class LocalDataSourceServiceImpl implements DataSourceService {
     
     private final String password = "nacos";
     
-    private final String derbyBaseDir = "data" + File.separator + "derby-data";
+    private final String derbyBaseDir = "data" + File.separator + Constants.DERBY_BASE_DIR;
     
     private final String derbyShutdownErrMsg = "Derby system shutdown.";
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.service.repository.embedded;
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.event.DerbyLoadEvent;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -61,7 +62,7 @@ public class DerbySnapshotOperation implements SnapshotOperation {
     
     private final String snapshotArchive = "derby_data.zip";
     
-    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", "derby-data").toString();
+    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", Constants.DERBY_BASE_DIR).toString();
     
     private final String restoreDB = "jdbc:derby:" + derbyBaseDir;
     
@@ -127,7 +128,7 @@ public boolean onSnapshotLoad(Reader reader) {
                 }
             }
             
-            final String loadPath = Paths.get(readerPath, snapshotDir, "derby-data").toString();
+            final String loadPath = Paths.get(readerPath, snapshotDir, Constants.DERBY_BASE_DIR).toString();
             LogUtil.FATAL_LOG.info("snapshot load from : {}, and copy to : {}", loadPath, derbyBaseDir);
             
             doDerbyRestoreFromBackup(() -> {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientDataProcessor.java
Patch:
@@ -288,7 +288,7 @@ public List<DistroData> getVerifyData() {
             }
             if (clientManager.isResponsibleClient(client)) {
                 DistroClientVerifyInfo verifyData = new DistroClientVerifyInfo(client.getClientId(),
-                        client.recalculateRevision());
+                        client.getRevision());
                 DistroKey distroKey = new DistroKey(client.getClientId(), TYPE);
                 DistroData data = new DistroData(distroKey,
                         ApplicationUtils.getBean(Serializer.class).serialize(verifyData));

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/AbstractClient.java
Patch:
@@ -49,7 +49,7 @@ public abstract class AbstractClient implements Client {
     
     protected volatile long lastUpdatedTime;
     
-    private final AtomicLong revision;
+    protected final AtomicLong revision;
     
     public AbstractClient(Long revision) {
         lastUpdatedTime = System.currentTimeMillis();

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/pojo/BatchInstancePublishInfo.java
Patch:
@@ -27,7 +27,6 @@
  * @author : ChenHao26
  * @ClassName: BatchInstancePublishInfo
  * @Date: 2022/4/21 16:19
- * @Description: TODO
  */
 public class BatchInstancePublishInfo extends InstancePublishInfo {
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManagerDelegate.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.naming.core.v2.client.manager.impl.ConnectionBasedClientManager;
 import com.alibaba.nacos.naming.core.v2.client.manager.impl.EphemeralIpPortClientManager;
 import com.alibaba.nacos.naming.core.v2.client.manager.impl.PersistentIpPortClientManager;
+import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Component;
 
 import java.util.Collection;
@@ -34,6 +35,7 @@
  *
  * @author xiweng.yy
  */
+@DependsOn({"clientServiceIndexesManager", "namingMetadataManager"})
 @Component("clientManager")
 public class ClientManagerDelegate implements ClientManager {
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/EphemeralIpPortClientManager.java
Patch:
@@ -34,6 +34,7 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.NamingExecuteTaskDispatcher;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
+import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Component;
 
 import java.util.Collection;
@@ -46,6 +47,7 @@
  *
  * @author xiweng.yy
  */
+@DependsOn("clientServiceIndexesManager")
 @Component("ephemeralIpPortClientManager")
 public class EphemeralIpPortClientManager implements ClientManager {
     

File: common/src/main/java/com/alibaba/nacos/common/notify/listener/Subscriber.java
Patch:
@@ -69,6 +69,6 @@ public boolean ignoreExpireEvent() {
      * @return Whether the event's scope matches current subscriber
      */
     public boolean scopeMatches(T event) {
-        return event.scope() == null;
+        return true;
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/DefaultGrpcClientConfig.java
Patch:
@@ -191,7 +191,7 @@ public static class Builder {
         
         private int channelKeepAlive = 6 * 60 * 1000;
         
-        private int healthCheckRetryTimes = 1;
+        private int healthCheckRetryTimes = 3;
         
         private long healthCheckTimeOut = 3000L;
         

File: naming/src/main/java/com/alibaba/nacos/naming/constants/ClientConstants.java
Patch:
@@ -35,6 +35,8 @@ public class ClientConstants {
     
     public static final String PERSISTENT_IP_PORT = "persistentIpPort";
     
+    public static final String REVISION = "revision";
+    
     public static final String PERSISTENT_SUFFIX = "false";
     
     public static final String CLIENT_EXPIRED_TIME_CONFIG_KEY = "nacos.naming.client.expired.time";

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/impl/ConnectionBasedClient.java
Patch:
@@ -41,8 +41,8 @@ public class ConnectionBasedClient extends AbstractClient {
      */
     private volatile long lastRenewTime;
     
-    public ConnectionBasedClient(String connectionId, boolean isNative) {
-        super();
+    public ConnectionBasedClient(String connectionId, boolean isNative, Long revision) {
+        super(revision);
         this.connectionId = connectionId;
         this.isNative = isNative;
         lastRenewTime = getLastUpdatedTime();

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManager.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.client.manager;
 
+import com.alibaba.nacos.naming.consistency.ephemeral.distro.v2.DistroClientVerifyInfo;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.ClientAttributes;
 
@@ -96,8 +97,8 @@ public interface ClientManager {
     /**
      * verify client.
      *
-     * @param clientId client id
+     * @param verifyData verify data from remote responsible server
      * @return true if client is valid, otherwise is false.
      */
-    boolean verifyClient(String clientId);
+    boolean verifyClient(DistroClientVerifyInfo verifyData);
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManagerDelegate.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.client.manager;
 
+import com.alibaba.nacos.naming.consistency.ephemeral.distro.v2.DistroClientVerifyInfo;
 import com.alibaba.nacos.naming.constants.ClientConstants;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.ClientAttributes;
@@ -96,8 +97,8 @@ public boolean isResponsibleClient(Client client) {
     }
     
     @Override
-    public boolean verifyClient(String clientId) {
-        return getClientManagerById(clientId).verifyClient(clientId);
+    public boolean verifyClient(DistroClientVerifyInfo verifyData) {
+        return getClientManagerById(verifyData.getClientId()).verifyClient(verifyData);
     }
     
     private ClientManager getClientManagerById(String clientId) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/PersistentIpPortClientManager.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.naming.core.v2.client.manager.impl;
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.naming.consistency.ephemeral.distro.v2.DistroClientVerifyInfo;
 import com.alibaba.nacos.naming.constants.ClientConstants;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.ClientAttributes;
@@ -114,7 +115,7 @@ public boolean isResponsibleClient(Client client) {
     }
     
     @Override
-    public boolean verifyClient(String clientId) {
+    public boolean verifyClient(DistroClientVerifyInfo verifyData) {
         throw new UnsupportedOperationException("");
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -69,6 +69,7 @@ public void registerInstance(Service service, Instance instance, String clientId
         InstancePublishInfo instanceInfo = getPublishInfo(instance);
         client.addServiceInstance(singleton, instanceInfo);
         client.setLastUpdatedTime();
+        client.recalculateRevision();
         NotifyCenter.publishEvent(new ClientOperationEvent.ClientRegisterServiceEvent(singleton, clientId));
         NotifyCenter
                 .publishEvent(new MetadataEvent.InstanceMetadataEvent(singleton, instanceInfo.getMetadataId(), false));
@@ -113,6 +114,7 @@ public void deregisterInstance(Service service, Instance instance, String client
         }
         InstancePublishInfo removedInstance = client.removeServiceInstance(singleton);
         client.setLastUpdatedTime();
+        client.recalculateRevision();
         if (null != removedInstance) {
             NotifyCenter.publishEvent(new ClientOperationEvent.ClientDeregisterServiceEvent(singleton, clientId));
             NotifyCenter.publishEvent(

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/client/AbstractClientTest.java
Patch:
@@ -47,7 +47,7 @@ public class AbstractClientTest {
     
     @Before
     public void setUp() {
-        abstractClient = new MockAbstractClient();
+        abstractClient = new MockAbstractClient(0L);
         service = Service.newService("ns1", "group1", "serviceName001");
         instancePublishInfo = new InstancePublishInfo("127.0.0.1", 8890);
         subscriber = new Subscriber("127.0.0.1:8848", "agent1", "appName", "127.0.0.1",

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/client/impl/ConnectionBasedClientTest.java
Patch:
@@ -32,7 +32,7 @@ public class ConnectionBasedClientTest {
     
     @Before
     public void setUp() throws Exception {
-        connectionBasedClient = new ConnectionBasedClient(connectionId, isNative);
+        connectionBasedClient = new ConnectionBasedClient(connectionId, isNative, null);
     }
     
     @Test

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/PersistentIpPortClientManagerTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.client.manager.impl;
 
+import com.alibaba.nacos.naming.consistency.ephemeral.distro.v2.DistroClientVerifyInfo;
 import com.alibaba.nacos.naming.core.v2.client.ClientAttributes;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
 import org.junit.After;
@@ -85,7 +86,7 @@ public void makeSureSyncClientConnected() {
     
     @Test(expected = UnsupportedOperationException.class)
     public void makeSureNoVerify() {
-        persistentIpPortClientManager.verifyClient(clientId);
+        persistentIpPortClientManager.verifyClient(new DistroClientVerifyInfo(clientId, 0));
     }
     
     @Test

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -70,7 +70,8 @@ public void testGetRoles() {
     
     @Test
     public void testGetRolesByUserName() {
-        Page<RoleInfo> page = embeddedRolePersistService.getRolesByUserName("userName", 1, 10);
+        Page<RoleInfo> page = embeddedRolePersistService.getRolesByUserNameAndRoleName(
+                "userName", "roleName", 1, 10);
         
         Assert.assertNull(page);
     }

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedUserPersistServiceImplTest.java
Patch:
@@ -91,7 +91,7 @@ public void testFindUserByUsername() {
     
     @Test
     public void testGetUsers() {
-        Page<User> users = embeddedUserPersistService.getUsers(1, 10);
+        Page<User> users = embeddedUserPersistService.getUsers(1, 10, "nacos");
         
         Assert.assertNotNull(users);
     }

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalRolePersistServiceImplTest.java
Patch:
@@ -68,7 +68,8 @@ public void testGetRoles() {
     
     @Test
     public void testGetRolesByUserName() {
-        Page<RoleInfo> userName = externalRolePersistService.getRolesByUserName("userName", 1, 10);
+        Page<RoleInfo> userName = externalRolePersistService.getRolesByUserNameAndRoleName(
+                "userName", "roleName", 1, 10);
         Assert.assertNull(userName);
     }
     

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalUserPersistServiceImplTest.java
Patch:
@@ -92,7 +92,7 @@ public void testFindUserByUsername() {
     
     @Test
     public void testGetUsers() {
-        Page<User> users = externalUserPersistService.getUsers(1, 10);
+        Page<User> users = externalUserPersistService.getUsers(1, 10, "nacos");
         
         Assert.assertNotNull(users);
     }

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/roles/NacosRoleServiceImplTest.java
Patch:
@@ -118,7 +118,7 @@ public void getRoles() {
     
     @Test
     public void getRolesFromDatabase() {
-        Page<RoleInfo> roleInfoPage = nacosRoleService.getRolesFromDatabase("nacos", 1, Integer.MAX_VALUE);
+        Page<RoleInfo> roleInfoPage = nacosRoleService.getRolesFromDatabase("nacos", "ROLE_ADMIN", 1, Integer.MAX_VALUE);
         Assert.assertEquals(roleInfoPage.getTotalCount(), 0);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -301,6 +301,9 @@ private static boolean publishEvent(final Class<? extends Event> eventType, fina
         if (publisher != null) {
             return publisher.publish(event);
         }
+        if (event.isPluginEvent()) {
+            return true;
+        }
         LOGGER.warn("There are no [{}] publishers for this event, please register", topic);
         return false;
     }

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/event/publisher/NamingEventPublisherTest.java
Patch:
@@ -29,6 +29,7 @@
 
 import static org.hamcrest.CoreMatchers.is;
 import static org.junit.Assert.assertThat;
+import static org.mockito.Mockito.atLeastOnce;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
 
@@ -92,7 +93,7 @@ public void testPublishOverFlow() {
         }
         namingEventPublisher.addSubscriber(subscriber, TestEvent.class);
         namingEventPublisher.publish(testEvent);
-        verify(subscriber).onEvent(testEvent);
+        verify(subscriber, atLeastOnce()).onEvent(testEvent);
     }
     
     @Test

File: client/src/main/java/com/alibaba/nacos/client/constant/Constants.java
Patch:
@@ -35,7 +35,7 @@ public static class SysEnv {
         
         public static final String JM_SNAPSHOT_PATH = "JM.SNAPSHOT.PATH";
         
-        public static final String NACOS_ENVS_SEARCH = "nacos.envs.search";
+        public static final String NACOS_ENV_FIRST = "nacos.env.first";
         
     }
     

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -60,4 +60,6 @@ public class AuthConstants {
     public static final String NACOS_CORE_AUTH_LDAP_USERDN = "nacos.core.auth.ldap.userDn";
     
     public static final String NACOS_CORE_AUTH_LDAP_PASSWORD = "nacos.core.auth.ldap.password";
+    
+    public static final String NACOS_CORE_AUTH_LDAP_FILTER_PREFIX = "nacos.core.auth.ldap.filter.prefix";
 }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -60,4 +60,6 @@ public class AuthConstants {
     public static final String NACOS_CORE_AUTH_LDAP_USERDN = "nacos.core.auth.ldap.userDn";
     
     public static final String NACOS_CORE_AUTH_LDAP_PASSWORD = "nacos.core.auth.ldap.password";
+    
+    public static final String NACOS_CORE_AUTH_LDAP_FILTER_PREFIX = "nacos.core.auth.ldap.filter.prefix";
 }

File: example/src/main/java/com/alibaba/nacos/example/NamingExample.java
Patch:
@@ -41,8 +41,8 @@ public class NamingExample {
     public static void main(String[] args) throws NacosException, InterruptedException {
         
         Properties properties = new Properties();
-        properties.setProperty("serverAddr", System.getProperty("serverAddr"));
-        properties.setProperty("namespace", System.getProperty("namespace"));
+        properties.setProperty("serverAddr", System.getProperty("serverAddr", "localhost"));
+        properties.setProperty("namespace", System.getProperty("namespace", "public"));
         
         NamingService naming = NamingFactory.createNamingService(properties);
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/CapacityService.java
Patch:
@@ -269,10 +269,9 @@ public boolean initGroupCapacity(String group) {
     private boolean initGroupCapacity(String group, Integer quota, Integer maxSize, Integer maxAggrCount,
             Integer maxAggrSize) {
         boolean insertSuccess = insertGroupCapacity(group, quota, maxSize, maxAggrCount, maxAggrSize);
-        if (quota != null) {
-            return insertSuccess;
+        if (quota == null) {
+            autoExpansion(group, null);
         }
-        autoExpansion(group, null);
         return insertSuccess;
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
-import java.util.concurrent.TimeUnit;
 
 import static com.alibaba.nacos.common.utils.CollectionUtils.getOrDefault;
 
@@ -85,8 +84,6 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>
             poolProperties.setPassword(getOrDefault(password, index, password.get(0)).trim());
             HikariDataSource ds = poolProperties.getDataSource();
             ds.setConnectionTestQuery(TEST_QUERY);
-            ds.setIdleTimeout(TimeUnit.MINUTES.toMillis(10L));
-            ds.setConnectionTimeout(TimeUnit.SECONDS.toMillis(3L));
             dataSources.add(ds);
             callback.accept(ds);
         }

File: config/src/test/java/com/alibaba/nacos/config/server/service/datasource/DataSourcePoolPropertiesTest.java
Patch:
@@ -62,6 +62,7 @@ public void testBuild() {
         assertEquals(PASSWORD, actual.getPassword());
         assertEquals(CONNECTION_TIMEOUT.longValue(), actual.getConnectionTimeout());
         assertEquals(DataSourcePoolProperties.DEFAULT_VALIDATION_TIMEOUT, actual.getValidationTimeout());
+        assertEquals(DataSourcePoolProperties.DEFAULT_IDLE_TIMEOUT, actual.getIdleTimeout());
         assertEquals(MAX_POOL_SIZE.intValue(), actual.getMaximumPoolSize());
         assertEquals(DataSourcePoolProperties.DEFAULT_MINIMUM_IDLE, actual.getMinimumIdle());
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -473,10 +473,10 @@ public RestResult<ConfigInfo4Beta> queryBeta(@RequestParam(value = "dataId") Str
                 Pair<String, String> pair = EncryptionHandler.decryptHandler(dataId, encryptedDataKey, ci.getContent());
                 ci.setContent(pair.getSecond());
             }
-            return RestResultUtils.success("stop beta ok", ci);
+            return RestResultUtils.success("query beta ok", ci);
         } catch (Throwable e) {
-            LOGGER.error("remove beta data error", e);
-            return RestResultUtils.failed("remove beta data error");
+            LOGGER.error("query beta data error", e);
+            return RestResultUtils.failed("query beta data error");
         }
     }
     

File: common/src/test/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClientTest.java
Patch:
@@ -46,7 +46,7 @@ public class GrpcClientTest {
     
     @Before
     public void setUp() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
-        GrpcClientConfig clientConfig = new DefaultClientConfig.Builder().name("testClient").build();
+        GrpcClientConfig clientConfig = DefaultGrpcClientConfig.newBuilder().setName("testClient").build();
         grpcClient = spy(new GrpcClient(clientConfig) {
             @Override
             public int rpcPortOffset() {

File: common/src/test/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClientTest.java
Patch:
@@ -46,7 +46,7 @@ public class GrpcClientTest {
     
     @Before
     public void setUp() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
-        GrpcClientConfig clientConfig = DefaultClientConfig.newBuilder().setName("testClient").build();
+        GrpcClientConfig clientConfig = DefaultGrpcClientConfig.newBuilder().setName("testClient").build();
         grpcClient = spy(new GrpcClient(clientConfig) {
             @Override
             public int rpcPortOffset() {

File: common/src/test/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClientTest.java
Patch:
@@ -46,7 +46,7 @@ public class GrpcClientTest {
     
     @Before
     public void setUp() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
-        GrpcClientConfig clientConfig = new DefaultClientConfig.Builder().name("testClient").build();
+        GrpcClientConfig clientConfig = DefaultClientConfig.newBuilder().setName("testClient").build();
         grpcClient = spy(new GrpcClient(clientConfig) {
             @Override
             public int rpcPortOffset() {

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientFactoryTest.java
Patch:
@@ -104,7 +104,7 @@ public void testCreateClientWhenNotCreatedThenCreate() {
         RpcClient client = RpcClientFactory
                 .createClient("testClient", ConnectionType.GRPC, Collections.singletonMap("labelKey", "labelValue"));
         
-        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.labels);
+        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.rpcClientConfig.labels());
         Assert.assertEquals(ConnectionType.GRPC, client.getConnectionType());
         Assert.assertEquals("testClient", CollectionUtils.getOnlyElement(RpcClientFactory.getAllClientEntries()).getKey());
     }
@@ -134,7 +134,7 @@ public void testCreateClusterClientWhenNotCreatedThenCreate() {
                 Collections.singletonMap("labelKey", "labelValue")
         );
         
-        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.labels);
+        Assert.assertEquals(Collections.singletonMap("labelKey", "labelValue"), client.rpcClientConfig.labels());
         Assert.assertEquals(ConnectionType.GRPC, client.getConnectionType());
         Assert.assertEquals("testClient", CollectionUtils.getOnlyElement(RpcClientFactory.getAllClientEntries()).getKey());
     }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -469,7 +469,7 @@ private boolean healthCheck() {
             return false;
         }
         int reTryTimes = healthCheckRetryTimes;
-        while (reTryTimes > 0) {
+        while (reTryTimes >= 0) {
             reTryTimes--;
             try {
                 Response response = this.currentConnection.request(healthCheckRequest, healthCheckTimeOut);

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java
Patch:
@@ -440,6 +440,7 @@ public void testHealthCheck() throws IllegalAccessException, NacosException {
         } catch (InvocationTargetException e) {
             e.printStackTrace();
         }
-        verify(connection, times(3)).request(any(), anyLong());
+        // 1 normal call, 3 retries
+        verify(connection, times(4)).request(any(), anyLong());
     }
 }
\ No newline at end of file

File: console/src/test/java/com/alibaba/nacos/console/controller/v2/NamespaceControllerV2Test.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.console.enums.NamespaceTypeEnum;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
-import com.alibaba.nacos.console.model.vo.NamespaceVo;
+import com.alibaba.nacos.console.model.form.NamespaceForm;
 import com.alibaba.nacos.console.service.NamespaceOperationService;
 import org.junit.Before;
 import org.junit.Test;
@@ -104,7 +104,7 @@ public void testCreateNamespace() throws NacosException {
         when(namespaceOperationService
                 .createNamespace(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC)).thenReturn(true);
         Result<Boolean> result = namespaceControllerV2
-                .createNamespace(new NamespaceVo(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC));
+                .createNamespace(new NamespaceForm(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC));
         
         verify(namespaceOperationService).createNamespace(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC);
         
@@ -116,7 +116,7 @@ public void testCreateNamespace() throws NacosException {
     public void testEditNamespace() throws NacosException {
         when(namespaceOperationService.editNamespace(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC)).thenReturn(true);
         Result<Boolean> result = namespaceControllerV2
-                .editNamespace(new NamespaceVo(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC));
+                .editNamespace(new NamespaceForm(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC));
         
         verify(namespaceOperationService).editNamespace(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC);
         

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ThreadTaskQueueMonitorTask.java
Patch:
@@ -37,7 +37,7 @@ public class ThreadTaskQueueMonitorTask implements Runnable {
     @Override
     public void run() {
         int size = ConfigExecutor.asyncNotifyQueueSize();
-        int notifierClientSize = ConfigExecutor.asyncCofigChangeClientNotifyQueueSize();
+        int notifierClientSize = ConfigExecutor.asyncConfigChangeClientNotifyQueueSize();
         MEMORY_LOG.info("toNotifyTaskSize = {}", size);
         MEMORY_LOG.info("toClientNotifyTaskSize = {}", notifierClientSize);
         MetricsMonitor.getNotifyTaskMonitor().set(size);

File: config/src/main/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifier.java
Patch:
@@ -203,11 +203,11 @@ private void push(RpcPushTask retryTask) {
                     retryTask.connectionId);
             connectionManager.unregister(retryTask.connectionId);
         } else if (connectionManager.getConnection(retryTask.connectionId) != null) {
-            // first time :delay 0s; sencond time:delay 2s  ;third time :delay 4s
+            // first time:delay 0s; second time:delay 2s; third time:delay 4s
             ConfigExecutor.getClientConfigNotifierServiceExecutor()
                     .schedule(retryTask, retryTask.tryTimes * 2, TimeUnit.SECONDS);
         } else {
-            // client is already offline,ingnore task.
+            // client is already offline, ignore task.
         }
         
     }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ConfigExecutor.java
Patch:
@@ -89,7 +89,7 @@ public static int asyncNotifyQueueSize() {
         return ((ScheduledThreadPoolExecutor) ASYNC_NOTIFY_EXECUTOR).getQueue().size();
     }
     
-    public static int asyncCofigChangeClientNotifyQueueSize() {
+    public static int asyncConfigChangeClientNotifyQueueSize() {
         return ((ScheduledThreadPoolExecutor) ASYNC_CONFIG_CHANGE_NOTIFY_EXECUTOR).getQueue().size();
     }
     

File: core/src/test/java/com/alibaba/nacos/core/ability/config/AbilityConfigsTest.java
Patch:
@@ -112,7 +112,6 @@ public void testConfigChange() throws InterruptedException {
         Assert.assertEquals(tmp, 0);
     }
     
-    
     class TestHandler implements HandlerMapping {
     
         @Override

File: api/src/main/java/com/alibaba/nacos/api/ability/constant/AbilityStatus.java
Patch:
@@ -23,17 +23,17 @@
  **/
 public enum  AbilityStatus {
     
-    /**
+    /**.
      * Support a certain ability
      */
     SUPPORTED,
     
-    /**
+    /**.
      * Not support a certain ability
      */
     NOT_SUPPORTED,
     
-    /**
+    /**.
      * Cannot find ability table, unknown
      */
     UNKNOWN

File: api/src/main/java/com/alibaba/nacos/api/ability/entity/AbilityTable.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.api.ability.entity;
 
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
 
 import java.util.Map;
 

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ConnectionSetupRequest.java
Patch:
@@ -35,7 +35,7 @@ public class ConnectionSetupRequest extends InternalRequest {
     
     private byte[] abilityTable;
     
-    /**
+    /**.
      * server will resolve {@link ConnectionSetupRequest#abilityTable} to server abilities, or to client abilities
      */
     private boolean isServer;

File: api/src/main/java/com/alibaba/nacos/api/utils/AbilityTableUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.api.utils;
 
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
+import com.alibaba.nacos.api.ability.register.AbstractAbilityBitOperate;
 
 import java.util.Collection;
 import java.util.Collections;
@@ -69,7 +69,7 @@ public static byte[] getAbilityBitBy(Collection<Integer> bitCollection) {
      * get ability table by bits
      *
      * @param bits      bit flag
-     * @param offsetMap offset from {@link AbilityBitOperate}
+     * @param offsetMap offset from {@link AbstractAbilityBitOperate}
      * @return Return the Map containing AbilityTableKey and isRunning.
      */
     public static Map<AbilityKey, Boolean> getAbilityTableBy(byte[] bits, Map<AbilityKey, Integer> offsetMap) {
@@ -103,7 +103,7 @@ public static Map<AbilityKey, Boolean> getAbilityTableBy(byte[] bits, Map<Abilit
     /**.
      * get ability bit table by existed ability table and offset map
      *
-     * @param offsetMap offset from {@link AbilityBitOperate}
+     * @param offsetMap offset from {@link AbstractAbilityBitOperate}
      * @return Return the Map containing AbilityTableKey and isRunning.
      */
     public static byte[] getAbilityBiTableBy(Map<AbilityKey, Integer> offsetMap, Map<AbilityKey, Boolean> abilityTable) {

File: client/src/main/java/com/alibaba/nacos/client/ability/ClientAbilityControlManager.java
Patch:
@@ -46,7 +46,7 @@ protected Map<AbilityKey, Boolean> getCurrentNodeSupportAbility() {
     @Override
     public AbilityStatus isSupport(String connectionId, AbilityKey abilityKey) {
         AbilityTable abilityTable = nodeAbilityTable.get(connectionId);
-        if(abilityTable == null) {
+        if (abilityTable == null) {
             return AbilityStatus.UNKNOWN;
         }
         Boolean isSupport = Optional.ofNullable(abilityTable.getAbility())

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.config.ConfigType;
 import com.alibaba.nacos.api.config.listener.Listener;

File: common/src/main/java/com/alibaba/nacos/common/ability/AbstractAbilityControlManager.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.common.ability;
 
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
+import com.alibaba.nacos.api.ability.register.AbstractAbilityBitOperate;
 import com.alibaba.nacos.api.ability.entity.AbilityTable;
 import com.alibaba.nacos.common.ability.inter.AbilityControlManager;
 import com.alibaba.nacos.common.notify.Event;
@@ -45,7 +45,7 @@ public abstract class AbstractAbilityControlManager implements AbilityControlMan
     /**
      * Abilities current supporting
      * <p>
-     * key: ability key from {@link AbilityBitOperate}
+     * key: ability key from {@link AbstractAbilityBitOperate}
      * value: whether to turn on
      */
     protected final Map<AbilityKey, Boolean> currentRunningAbility = new ConcurrentHashMap<>();
@@ -125,7 +125,6 @@ public final void addNewTable(AbilityTable table) {
                 Boolean coming = clientAbilities.getOrDefault(abilityKey, false);
                 clientAbilities.put(abilityKey, res && coming);
             });
-            System.out.println(table);
             nodeAbilityTable.put(connectionId, table);
         } finally {
             lockForAbilityTable.unlock();

File: common/src/main/java/com/alibaba/nacos/common/ability/inter/AbilityControlManager.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
 import com.alibaba.nacos.api.ability.constant.AbilityStatus;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
+import com.alibaba.nacos.api.ability.register.AbstractAbilityBitOperate;
 import com.alibaba.nacos.api.ability.entity.AbilityTable;
 
 import java.util.Map;
@@ -34,7 +34,7 @@ public interface AbilityControlManager {
      * Whether the ability is supported for Connection. If the ability of current node is closed, it will return false.
      *
      * @param connectionId the connection range of ability table.
-     * @param abilityKey   key name which comes from {@link AbilityBitOperate}.
+     * @param abilityKey   key name which comes from {@link AbstractAbilityBitOperate}.
      * @return whether the ability is supported in certain connection.
      */
     AbilityStatus isSupport(String connectionId, AbilityKey abilityKey);

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientFactory.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.remote.client;
 
-import com.alibaba.nacos.api.ability.register.impl.ServerAbilities;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.remote.client.grpc.GrpcClient;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.common.remote.client.grpc;
 
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
 import com.alibaba.nacos.api.ability.entity.AbilityTable;
 import com.alibaba.nacos.api.ability.register.impl.ServerAbilities;
 import com.alibaba.nacos.api.exception.NacosException;
@@ -358,7 +357,7 @@ public Connection connectToServer(ServerInfo serverInfo) {
         return null;
     }
     
-    /**
+    /**.
      * get ability, server or client
      *
      * @return bit table

File: core/src/main/java/com/alibaba/nacos/core/ability/control/ServerAbilityControlManager.java
Patch:
@@ -84,7 +84,7 @@ protected Map<AbilityKey, Boolean> getCurrentNodeSupportAbility() {
     @Override
     public AbilityStatus isSupport(String connectionId, AbilityKey abilityKey) {
         AbilityTable abilityTable = nodeAbilityTable.get(connectionId);
-        if(abilityTable == null) {
+        if (abilityTable == null) {
             return AbilityStatus.UNKNOWN;
         }
         Boolean isSupport = Optional.ofNullable(abilityTable.getAbility()).orElse(Collections.emptyMap())

File: core/src/main/java/com/alibaba/nacos/core/ability/inte/ClusterAbilityControlSupport.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.core.ability.inte;
 
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
-import com.alibaba.nacos.api.ability.register.AbilityBitOperate;
 import com.alibaba.nacos.common.ability.handler.HandlerMapping;
 import com.alibaba.nacos.common.ability.inter.AbilityControlManager;
 

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
+import org.springframework.core.annotation.Order;
 import org.springframework.dao.DataAccessException;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -31,6 +32,7 @@
  *
  * @author Nacos
  */
+@Order(0)
 @ControllerAdvice
 public class GlobalExceptionHandler {
     

File: config/src/test/java/com/alibaba/nacos/config/server/controller/ConfigControllerTest.java
Patch:
@@ -63,7 +63,6 @@
 import static org.mockito.ArgumentMatchers.anyBoolean;
 import static org.mockito.ArgumentMatchers.anyList;
 import static org.mockito.ArgumentMatchers.anyString;
-import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.when;
 
 @RunWith(SpringJUnit4ClassRunner.class)
@@ -105,7 +104,7 @@ public void setUp() {
     @Test
     public void testPublishConfig() throws Exception {
         
-        when(configOperationService.publishConfig(any(), any(), any(), anyString(), eq(false))).thenReturn(true);
+        when(configOperationService.publishConfig(any(), any(), anyString())).thenReturn(true);
         
         MockHttpServletRequestBuilder builder = MockMvcRequestBuilders.post(Constants.CONFIG_CONTROLLER_PATH)
                 .param("dataId", "test")

File: config/src/test/java/com/alibaba/nacos/config/server/controller/v2/ConfigControllerV2Test.java
Patch:
@@ -108,12 +108,12 @@ public void testPublishConfig() throws Exception {
         MockHttpServletRequest request = new MockHttpServletRequest();
         
         when(configOperationService
-                .publishConfig(any(ConfigVo.class), any(ConfigRequestInfoVo.class), any(), anyString(), eq(true)))
+                .publishConfig(any(ConfigVo.class), any(ConfigRequestInfoVo.class), anyString()))
                 .thenReturn(true);
         
         Result<Boolean> booleanResult = configControllerV2.publishConfig(configVo, request);
         
-        verify(configOperationService).publishConfig(any(ConfigVo.class), any(ConfigRequestInfoVo.class), any(), anyString(), eq(true));
+        verify(configOperationService).publishConfig(any(ConfigVo.class), any(ConfigRequestInfoVo.class), anyString());
         
         assertEquals(ErrorCode.SUCCESS.getCode(), booleanResult.getCode());
         assertEquals(true, booleanResult.getData());

File: config/src/test/java/com/alibaba/nacos/config/server/service/ConfigOperationServiceTest.java
Patch:
@@ -68,22 +68,22 @@ public void testPublishConfig() throws NacosException {
         ConfigRequestInfoVo configRequestInfoVo = new ConfigRequestInfoVo();
         
         // if betaIps is blank and tag is blank
-        Boolean aResult = configOperationService.publishConfig(configVo, configRequestInfoVo, null, "", true);
+        Boolean aResult = configOperationService.publishConfig(configVo, configRequestInfoVo,  "");
         verify(persistService)
                 .insertOrUpdate(any(), any(), any(ConfigInfo.class), any(Timestamp.class), any(), anyBoolean());
         Assert.assertEquals(true, aResult);
         
         // if betaIps is blank and tag is not blank
         configVo.setTag("test tag");
-        Boolean bResult = configOperationService.publishConfig(configVo, configRequestInfoVo, null, "", true);
+        Boolean bResult = configOperationService.publishConfig(configVo, configRequestInfoVo, "");
         verify(persistService)
                 .insertOrUpdateTag(any(ConfigInfo.class), eq("test tag"), any(), any(), any(Timestamp.class),
                         anyBoolean());
         Assert.assertEquals(true, bResult);
         
         // if betaIps is not blank
         configRequestInfoVo.setBetaIps("test-betaIps");
-        Boolean cResult = configOperationService.publishConfig(configVo, configRequestInfoVo, null, "", true);
+        Boolean cResult = configOperationService.publishConfig(configVo, configRequestInfoVo, "");
         verify(persistService)
                 .insertOrUpdateBeta(any(ConfigInfo.class), eq("test-betaIps"), any(), any(), any(Timestamp.class),
                         anyBoolean());

File: console/src/main/java/com/alibaba/nacos/console/controller/v2/NamespaceControllerV2.java
Patch:
@@ -81,7 +81,7 @@ public Result<List<Namespace>> getNamespaceList() {
     @GetMapping()
     public Result<NamespaceAllInfo> getNamespace(@RequestParam("namespaceId") String namespaceId)
             throws NacosException {
-        return Result.success(namespaceOperationService.getNamespace(namespaceId, true));
+        return Result.success(namespaceOperationService.getNamespace(namespaceId));
     }
     
     /**
@@ -113,7 +113,7 @@ public Result<Boolean> createNamespace(NamespaceVo namespaceVo) throws NacosExce
                         "too long namespaceId, over " + NAMESPACE_ID_MAX_LENGTH);
             }
         }
-        return Result.success(namespaceOperationService.createNamespace(namespaceId, namespaceName, namespaceDesc, true));
+        return Result.success(namespaceOperationService.createNamespace(namespaceId, namespaceName, namespaceDesc));
     }
     
     /**

File: console/src/main/java/com/alibaba/nacos/console/exception/NacosApiExceptionHandler.java
Patch:
@@ -67,7 +67,7 @@ private static String normErrMsg(String msg) {
     @ExceptionHandler(NacosApiException.class)
     public ResponseEntity<Result<String>> handleNacosApiException(NacosApiException e) {
         LOGGER.error("got exception. {} {}", e.getErrAbstract(), e.getErrMsg());
-        return ResponseEntity.status(e.getStatusCode()).body(new Result<>(e.getErrCode(), e.getErrAbstract(), normErrMsg(e.getErrMsg())));
+        return ResponseEntity.status(e.getErrCode()).body(new Result<>(e.getDetailErrCode(), e.getErrAbstract(), e.getErrMsg()));
     }
     
     @ResponseStatus(HttpStatus.BAD_REQUEST)

File: console/src/test/java/com/alibaba/nacos/console/service/NamespaceOperationServiceTest.java
Patch:
@@ -105,21 +105,21 @@ public void testGetNamespace() throws NacosException {
         when(persistService.configInfoCount(anyString())).thenReturn(1);
         NamespaceAllInfo namespaceAllInfo = new NamespaceAllInfo(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, DEFAULT_QUOTA,
                 1, NamespaceTypeEnum.GLOBAL.getType(), TEST_NAMESPACE_DESC);
-        NamespaceAllInfo namespace = namespaceOperationService.getNamespace(TEST_NAMESPACE_ID, true);
+        NamespaceAllInfo namespace = namespaceOperationService.getNamespace(TEST_NAMESPACE_ID);
         assertEquals(namespaceAllInfo.getNamespace(), namespace.getNamespace());
         assertEquals(namespaceAllInfo.getNamespaceShowName(), namespace.getNamespaceShowName());
         assertEquals(namespaceAllInfo.getNamespaceDesc(), namespace.getNamespaceDesc());
         assertEquals(namespaceAllInfo.getQuota(), namespace.getQuota());
         assertEquals(namespaceAllInfo.getConfigCount(), namespace.getConfigCount());
     
-        namespaceOperationService.getNamespace("test_not_exist_id", true);
+        namespaceOperationService.getNamespace("test_not_exist_id");
         
     }
     
     @Test
     public void testCreateNamespace() throws NacosException {
         when(persistService.tenantInfoCountByTenantId(anyString())).thenReturn(0);
-        namespaceOperationService.createNamespace(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC, true);
+        namespaceOperationService.createNamespace(TEST_NAMESPACE_ID, TEST_NAMESPACE_NAME, TEST_NAMESPACE_DESC);
         verify(persistService)
                 .insertTenantInfoAtomic(eq(DEFAULT_KP), eq(TEST_NAMESPACE_ID), eq(TEST_NAMESPACE_NAME), eq(TEST_NAMESPACE_DESC),
                         any(), anyLong());

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -280,7 +280,7 @@ public boolean isSubscribed(String serviceName, String groupName, String cluster
      * @throws NacosException nacos exception
      */
     public void doUnsubscribe(String serviceName, String groupName, String clusters) throws NacosException {
-        SubscribeServiceRequest request = new SubscribeServiceRequest(namespaceId, serviceName, groupName, clusters,
+        SubscribeServiceRequest request = new SubscribeServiceRequest(namespaceId, groupName, serviceName, clusters,
                 false);
         requestToServer(request, SubscribeServiceResponse.class);
         redoService.removeSubscriberForRedo(serviceName, groupName, clusters);

File: api/src/main/java/com/alibaba/nacos/api/ability/register/impl/ServerAbilities.java
Patch:
@@ -36,12 +36,12 @@ public class ServerAbilities extends AbilityBitOperate {
          *   There is a function named "compression".
          *   The key is "compression", the value is the offset of the flag bit of this ability in the ability table. The value should be unique.
          *
-         *   You can add a new public static field like:
-         *       <code>public static final String COMPRESSION = "compression";</code>
+         *   You can add a new public field in <p>AbilityKey</p> like:
+         *       <code>DATA_COMPRESSION</code>
          *   This field can be used outside.
          *
          *   And then you need to declare the offset of the flag bit of this ability in the ability table, you can:
-         *       <code>CURRENT_SERVER_ABILITY_OFFSET.put("compression", 1);</code> means that is the first bit from left to right in the table.
+         *       <code>abilityOffset.put(AbilityKey.DATA_COMPRESSION, 1);</code> means that is the first bit from left to right in the table.
          *
          */
         // put ability here, which you want current server supports

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcBiStreamRequestAcceptor.java
Patch:
@@ -132,7 +132,6 @@ public void onNext(Payload payload) {
                         connection.setAbilityTable(AbilityTableUtils.getAbilityTableBy(setUpRequest.getAbilityTable(),
                                 ClientAbilities.getOffset()));
                     }
-                    System.out.println(connection.getAbilityTable());
                     boolean rejectSdkOnStarting = metaInfo.isSdkSource() && !ApplicationUtils.isStarted();
                     
                     if (rejectSdkOnStarting || !connectionManager.register(connectionId, connection)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -94,7 +94,7 @@
  *               │              │           │                 │
  *               │              │           │                 ▼
  *               │              │           │    ┌────────────────────────┐
- *               │              │           │    │  acquireSnakeflowerId  │
+ *               │              │           │    │  acquireSnowFlowerId   │
  *               │              │           │    └────────────────────────┘
  *               │              │           │                 │
  *               │              │           │                 │

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -275,6 +275,7 @@ public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         LOGGER.info("{} do shutdown begin", className);
         ConfigHttpClientManager.getInstance().shutdown();
+        serverListMgr.shutdown();
         LOGGER.info("{} do shutdown stop", className);
     }
 }

File: address/src/test/java/com/alibaba/nacos/address/component/AddressServerGeneratorManagerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.component;
 
 import com.alibaba.nacos.address.constant.AddressServerConstants;
-import com.alibaba.nacos.naming.core.Instance;
+import com.alibaba.nacos.api.naming.pojo.Instance;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -67,7 +67,7 @@ public void testGenerateInstancesByIps() {
     
     @Test
     public void testGenerateResponseIps() {
-        final List<Instance> instanceList = new ArrayList<>();
+        final List<com.alibaba.nacos.api.naming.pojo.Instance> instanceList = new ArrayList<>();
         Instance instance1 = new Instance();
         instance1.setIp("192.168.3.1");
         instance1.setPort(8848);

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerStatusManager.java
Patch:
@@ -35,7 +35,7 @@
 @Service
 public class ServerStatusManager {
     
-    @Resource(name = "consistencyDelegate")
+    @Resource(name = "persistentConsistencyServiceDelegate")
     private ConsistencyService consistencyService;
     
     private final SwitchDomain switchDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/extend/AbstractHealthCheckProcessorExtend.java
Patch:
@@ -34,7 +34,7 @@ public abstract class AbstractHealthCheckProcessorExtend implements BeanFactoryA
     protected SingletonBeanRegistry registry;
 
     /**
-     * Add HealthCheckProcessor Or HealthCheckProcessorV2.
+     * Add HealthCheckProcessorV2.
      *
      * @param origin Origin Checker Type
      * @return Extend Processor Type

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/interceptor/HealthCheckEnableInterceptor.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming.healthcheck.interceptor;
 
-import com.alibaba.nacos.naming.core.v2.upgrade.UpgradeJudgement;
 import com.alibaba.nacos.naming.healthcheck.NacosHealthCheckTask;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
@@ -31,8 +30,7 @@ public class HealthCheckEnableInterceptor extends AbstractHealthCheckInterceptor
     @Override
     public boolean intercept(NacosHealthCheckTask object) {
         try {
-            return !ApplicationUtils.getBean(SwitchDomain.class).isHealthCheckEnabled() || !ApplicationUtils
-                    .getBean(UpgradeJudgement.class).isUseGrpcFeatures();
+            return !ApplicationUtils.getBean(SwitchDomain.class).isHealthCheckEnabled();
         } catch (Exception e) {
             return true;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HealthCheckProcessorV2Delegate.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.naming.core.v2.metadata.ClusterMetadata;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
-import com.alibaba.nacos.naming.healthcheck.NoneHealthCheckProcessor;
 import com.alibaba.nacos.naming.healthcheck.extend.HealthCheckExtendProvider;
 import com.alibaba.nacos.naming.healthcheck.extend.HealthCheckProcessorExtendV2;
 import com.alibaba.nacos.naming.healthcheck.v2.HealthCheckTaskV2;
@@ -41,7 +40,7 @@ public class HealthCheckProcessorV2Delegate implements HealthCheckProcessorV2 {
     private final Map<String, HealthCheckProcessorV2> healthCheckProcessorMap = new HashMap<>();
     
     public HealthCheckProcessorV2Delegate(HealthCheckExtendProvider provider,
-                                          HealthCheckProcessorExtendV2 healthCheckProcessorExtend) {
+            HealthCheckProcessorExtendV2 healthCheckProcessorExtend) {
         provider.setHealthCheckProcessorExtend(healthCheckProcessorExtend);
         provider.init();
     }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -49,7 +49,7 @@ public class SwitchManager implements RecordListener<SwitchDomain> {
     @Autowired
     private SwitchDomain switchDomain;
     
-    @Resource(name = "consistencyDelegate")
+    @Resource(name = "persistentConsistencyServiceDelegate")
     private ConsistencyService consistencyService;
     
     ReentrantLock lock = new ReentrantLock();

File: naming/src/main/java/com/alibaba/nacos/naming/push/ClientInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.push.v1;
+package com.alibaba.nacos.naming.push;
 
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.common.utils.StringUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -35,8 +35,6 @@
 import java.util.stream.Collectors;
 
 /**
- * The implement of {@link com.alibaba.nacos.naming.selector.v1.LabelSelector} at new version.
- * The main logic is same with {@link com.alibaba.nacos.naming.selector.v1.LabelSelector}.
  * The {@link LabelSelector} will return the instances labels in {@link #labels} and providers' label value is same with consumer.
  * If none matched, then will return all providers instead of.
  *

File: naming/src/main/java/com/alibaba/nacos/naming/selector/NoneSelector.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.List;
 
 /**
- * Selector with no filtering. The logic is same to {@link com.alibaba.nacos.naming.selector.v1.NoneSelector}.
+ * Selector with no filtering.
  *
  * @author chenglu
  * @date 2021-08-04 13:28

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -49,7 +49,7 @@ public class HealthCheckCommon {
     private UdpPushService pushService;
     
     /**
-     * Re-evaluate check responsce time.
+     * Re-evaluate check response time.
      *
      * @param checkRT check response time
      * @param task    health check task

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HealthCheckCommonV2.java
Patch:
@@ -51,7 +51,7 @@ public class HealthCheckCommonV2 {
     private PersistentHealthStatusSynchronizer healthStatusSynchronizer;
     
     /**
-     * Re-evaluate check responsce time.
+     * Re-evaluate check response time.
      *
      * @param checkRT check response time
      * @param task    health check task

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ConnectionSetupRequest.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.api.remote.request;
 
-
 import java.util.HashMap;
 import java.util.Map;
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.api.ability.ClientAbilities;
 import com.alibaba.nacos.api.ability.constant.AbilityKey;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.config.ConfigType;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.remote.client;
 
-import com.alibaba.nacos.api.ability.ClientAbilities;
 import com.alibaba.nacos.api.ability.constant.AbilityStatus;
 import com.alibaba.nacos.api.ability.entity.AbilityTable;
 import com.alibaba.nacos.api.common.Constants;

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -60,6 +60,7 @@
 import java.util.Objects;
 import java.util.Set;
 import java.util.concurrent.ConcurrentSkipListMap;
+import com.alibaba.nacos.core.ability.control.ServerAbilityControlManager;
 
 /**
  * Cluster node management in Nacos.
@@ -176,7 +177,7 @@ protected void init() throws NacosException {
      * Init the ability of current node
      *
      * @return ServerAbilities
-     * @deprecated ability of current node and event cluster can be managed by {@link com.alibaba.nacos.core.ability.control.ServerAbilityControlManager}
+     * @deprecated ability of current node and event cluster can be managed by {@link ServerAbilityControlManager}
      */
     private ServerAbilities initMemberAbilities() {
         ServerAbilities serverAbilities = new ServerAbilities();

File: client/src/test/java/com/alibaba/nacos/client/config/impl/LimiterTest.java
Patch:
@@ -24,13 +24,14 @@ public class LimiterTest {
     @Test
     public void testIsLimit() {
         String keyId = "a";
+        //For initiating.
         Assert.assertFalse(Limiter.isLimit(keyId));
         long start = System.currentTimeMillis();
         for (int j = 0; j < 5; j++) {
             Assert.assertFalse(Limiter.isLimit(keyId));
         }
         long elapse = System.currentTimeMillis() - start;
         // assert  < limit 5qps
-        Assert.assertTrue(Math.abs(1000 - elapse) < 20);
+        Assert.assertTrue(elapse > 980);
     }
 }
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateServiceTest.java
Patch:
@@ -39,6 +39,7 @@ public void testScheduleUpdateIfAbsent() throws InterruptedException, NacosExcep
         info.setGroupName(group);
         info.setClusters(clusters);
         info.setLastRefTime(System.currentTimeMillis());
+        info.setCacheMillis(10000L);
         ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
         NamingClientProxy proxy = Mockito.mock(NamingClientProxy.class);
         Mockito.when(proxy.queryInstancesOfService(serviceName, group, clusters, 0, false)).thenReturn(info);
@@ -77,4 +78,4 @@ public void testStopUpdateIfContain() throws NacosException {
         serviceInfoUpdateService.stopUpdateIfContain(serviceName, group, clusters);
         serviceInfoUpdateService.shutdown();
     }
-}
\ No newline at end of file
+}

File: config/src/test/java/com/alibaba/nacos/config/server/controller/ConfigServletInnerTest.java
Patch:
@@ -259,4 +259,5 @@ public void testDoGetConfigV3() throws Exception {
     
         configCacheServiceMockedStatic.close();
     }
-}
\ No newline at end of file
+    
+}

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java
Patch:
@@ -88,7 +88,7 @@ public ServerListManager(Properties properties, String namespace) {
         if (!serverList.isEmpty()) {
             currentIndex.set(new Random().nextInt(serverList.size()));
         }
-        if (serverList.isEmpty() && StringUtils.isNotEmpty(endpoint)) {
+        if (serverList.isEmpty() && StringUtils.isEmpty(endpoint)) {
             throw new NacosLoadException("serverList is empty,please check configuration");
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -254,8 +254,8 @@ private void initAddressServerUrl(Properties properties) {
                         ContextPathUtil.normalizeContextPath(this.contentPath), this.serverListName));
         boolean hasQueryString = false;
         if (StringUtils.isNotBlank(namespace)) {
-            addressServerUrlTem.append("?namespace=" + namespace);
-            hasQueryString = false;
+            addressServerUrlTem.append("?namespace=").append(namespace);
+            hasQueryString = true;
         }
         if (properties != null && properties.containsKey(PropertyKeyConst.ENDPOINT_QUERY_PARAMS)) {
             addressServerUrlTem

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/AbstractClient.java
Patch:
@@ -173,10 +173,9 @@ public void release() {
             if (instancePublishInfo instanceof BatchInstancePublishInfo) {
                 MetricsMonitor.decrementIpCountWithBatchRegister(instancePublishInfo);
             } else {
-                MetricsMonitor.getIpCountMonitor().addAndGet(-1 * publishers.size());
+                MetricsMonitor.getIpCountMonitor().decrementAndGet();
             }
         }
         MetricsMonitor.getIpCountMonitor().addAndGet(-1 * subscribers.size());
     }
-    
 }

File: common/src/main/java/com/alibaba/nacos/common/cache/impl/SimpleCache.java
Patch:
@@ -32,7 +32,7 @@ public class SimpleCache<K, V> implements Cache<K, V> {
     private Map<K, V> cache;
     
     public SimpleCache(int size) {
-        cache = new HashMap(size);
+        cache = new HashMap<>(size);
     }
     
     @Override

File: common/src/main/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisher.java
Patch:
@@ -102,8 +102,7 @@ public boolean publish(Event event) {
         checkIsStart();
         boolean success = this.queue.offer(event);
         if (!success) {
-            LOGGER.warn("Unable to plug in due to interruption, synchronize sending time, event : {}", event);
-            handleEvent(event);
+            LOGGER.warn("Trace Event Publish failed, event : {}, publish queue size : {}", event, currentEventSize());
             return true;
         }
         return true;

File: common/src/test/java/com/alibaba/nacos/common/trace/publisher/TraceEventPublisherFactoryTest.java
Patch:
@@ -56,7 +56,7 @@ public void testApply() {
         TraceEventPublisherFactory.getInstance().apply(TraceTestEvent.TraceTestEvent2.class, Byte.SIZE);
         TraceEventPublisherFactory.getInstance().apply(TraceTestEvent.class, Byte.SIZE);
         String expectedStatus = "Trace event publisher statues:\n"
-                + "\tPublisher TraceTestEvent                : shutdown=false, queue=      0/8      \n";
+                + "\tPublisher TraceEvent                    : shutdown=false, queue=      0/8      \n";
         assertThat(TraceEventPublisherFactory.getInstance().getAllPublisherStatues(), is(expectedStatus));
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
-import com.alibaba.nacos.common.trace.event.NamingTraceEvent;
+import com.alibaba.nacos.common.trace.event.naming.PushServiceTraceEvent;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;
@@ -164,8 +164,8 @@ public void setActualServiceInfo(ServiceInfo actualServiceInfo) {
             this.actualServiceInfo = actualServiceInfo;
         }
         
-        private NamingTraceEvent.PushServiceTraceEvent getPushServiceTraceEvent(long eventTime, PushResult result) {
-            return new NamingTraceEvent.PushServiceTraceEvent(eventTime, result.getNetworkCost(), result.getAllCost(),
+        private PushServiceTraceEvent getPushServiceTraceEvent(long eventTime, PushResult result) {
+            return new PushServiceTraceEvent(eventTime, result.getNetworkCost(), result.getAllCost(),
                     result.getSla(), result.getSubscriber().getIp(), result.getService().getNamespace(),
                     result.getService().getGroup(), result.getService().getName(), result.getData().getHosts().size());
         }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/PersistentHealthStatusSynchronizer.java
Patch:
@@ -43,6 +43,6 @@ public void instanceHealthStatusChange(boolean isHealthy, Client client, Service
             InstancePublishInfo instance) {
         Instance updateInstance = InstanceUtil.parseToApiInstance(service, instance);
         updateInstance.setHealthy(isHealthy);
-        persistentClientOperationService.registerInstance(service, updateInstance, client.getClientId());
+        persistentClientOperationService.updateInstance(service, updateInstance, client.getClientId());
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/core/ClusterTest.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Http;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.SwitchDomain.TcpHealthParams;
@@ -29,6 +30,7 @@
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -53,6 +55,7 @@ public class ClusterTest {
     
     @Before
     public void before() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         ApplicationUtils.injectContext(context);
         when(context.getBean(SwitchDomain.class)).thenReturn(switchDomain);
         when(switchDomain.getTcpHealthParams()).thenReturn(new TcpHealthParams());

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/v2/PersistentHealthStatusSynchronizerTest.java
Patch:
@@ -50,6 +50,6 @@ public void testInstanceHealthStatusChange() {
         updateInstance.setHealthy(true);
         
         verify(client).getClientId();
-        verify(persistentClientOperationService).registerInstance(service, updateInstance, client.getClientId());
+        verify(persistentClientOperationService).updateInstance(service, updateInstance, client.getClientId());
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -310,6 +310,8 @@ private <T extends Response> T requestToServer(AbstractNamingRequest request, Cl
             }
             NAMING_LOGGER.error("Server return unexpected response '{}', expected response should be '{}'",
                     response.getClass().getName(), responseClass.getName());
+        } catch (NacosException e) {
+            throw e;
         } catch (Exception e) {
             throw new NacosException(NacosException.SERVER_ERROR, "Request nacos server failed: ", e);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -502,6 +502,9 @@ public String callServer(String api, Map<String, String> params, Map<String, Str
                 return StringUtils.EMPTY;
             }
             throw new NacosException(restResult.getCode(), restResult.getMessage());
+        } catch (NacosException e) {
+            NAMING_LOGGER.error("[NA] failed to request", e);
+            throw e;
         } catch (Exception e) {
             NAMING_LOGGER.error("[NA] failed to request", e);
             throw new NacosException(NacosException.SERVER_ERROR, e);

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -483,6 +483,8 @@ public void createServiceIfAbsent(String namespaceId, String serviceName, boolea
      */
     public void registerInstance(String namespaceId, String serviceName, Instance instance) throws NacosException {
         
+        NamingUtils.checkInstanceIsLegal(instance);
+        
         createEmptyService(namespaceId, serviceName, instance.isEphemeral());
         
         Service service = getService(namespaceId, serviceName);

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/ClientOperationService.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.service;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
@@ -40,8 +41,9 @@ public interface ClientOperationService {
      * @param service  service
      * @param instance instance
      * @param clientId id of client
+     * @throws NacosException throws NacosException
      */
-    void registerInstance(Service service, Instance instance, String clientId);
+    void registerInstance(Service service, Instance instance, String clientId) throws NacosException;
     
     /**
      * Batch register instance to service.

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/ClientOperationServiceProxy.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.service;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
@@ -47,7 +48,7 @@ public ClientOperationServiceProxy(EphemeralClientOperationServiceImpl ephemeral
     }
     
     @Override
-    public void registerInstance(Service service, Instance instance, String clientId) {
+    public void registerInstance(Service service, Instance instance, String clientId) throws NacosException {
         final ClientOperationService operationService = chooseClientOperationService(instance);
         operationService.registerInstance(service, instance, clientId);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -61,7 +61,8 @@ public InstanceResponse handle(InstanceRequest request, RequestMeta meta) throws
         }
     }
     
-    private InstanceResponse registerInstance(Service service, InstanceRequest request, RequestMeta meta) {
+    private InstanceResponse registerInstance(Service service, InstanceRequest request, RequestMeta meta)
+            throws NacosException {
         clientOperationService.registerInstance(service, request.getInstance(), meta.getConnectionId());
         NotifyCenter.publishEvent(new NamingTraceEvent.RegisterInstanceTraceEvent(System.currentTimeMillis(), meta.getClientIp(),
                 true, service.getNamespace(), service.getGroup(), service.getName(), request.getInstance().toInetAddr()));

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/service/ClientOperationServiceProxyTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.service;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
@@ -68,7 +69,7 @@ public void setUp() throws Exception {
     }
     
     @Test
-    public void testChooseEphemeralClientOperationService() {
+    public void testChooseEphemeralClientOperationService() throws NacosException {
         // Test register.
         clientOperationServiceProxy.registerInstance(service, ephemeralInstance, ephemeralIpPortId);
         verify(ephemeralClientOperationServiceImpl).registerInstance(service, ephemeralInstance, ephemeralIpPortId);
@@ -90,7 +91,7 @@ public void testChooseEphemeralClientOperationService() {
     }
     
     @Test
-    public void testChoosePersistentClientOperationService() {
+    public void testChoosePersistentClientOperationService() throws NacosException {
         clientOperationServiceProxy.registerInstance(service, persistentInstance, persistentIpPortId);
         verify(persistentClientOperationServiceImpl).registerInstance(service, persistentInstance, persistentIpPortId);
         verify(ephemeralClientOperationServiceImpl, never())

File: console/src/main/java/com/alibaba/nacos/console/config/ConsoleConfig.java
Patch:
@@ -61,10 +61,10 @@ public void init() {
     public CorsFilter corsFilter() {
         CorsConfiguration config = new CorsConfiguration();
         config.setAllowCredentials(true);
-        config.addAllowedOrigin("*");
         config.addAllowedHeader("*");
         config.setMaxAge(18000L);
         config.addAllowedMethod("*");
+        config.addAllowedOriginPattern("*");
         UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
         source.registerCorsConfiguration("/**", config);
         return new CorsFilter(source);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -257,7 +257,7 @@ public ConfigAllInfo detailConfigInfo(@RequestParam("dataId") String dataId, @Re
      */
     @DeleteMapping
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
-    public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse response,@RequestParam("dataId") String dataId,
+    public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse response, @RequestParam("dataId") String dataId,
             @RequestParam("group") String group,
             @RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant,
             @RequestParam(value = "tag", required = false) String tag) throws NacosException {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/InstanceMetadataProcessor.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.consistency.entity.WriteRequest;
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
+import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.constants.Constants;
@@ -102,12 +103,14 @@ public Response onApply(WriteRequest request) {
     
     private void updateInstanceMetadata(MetadataOperation<InstanceMetadata> op) {
         Service service = Service.newService(op.getNamespace(), op.getGroup(), op.getServiceName());
+        service = ServiceManager.getInstance().getSingleton(service);
         namingMetadataManager.updateInstanceMetadata(service, op.getTag(), op.getMetadata());
         NotifyCenter.publishEvent(new ServiceEvent.ServiceChangedEvent(service, true));
     }
     
     private void deleteInstanceMetadata(MetadataOperation<InstanceMetadata> op) {
         Service service = Service.newService(op.getNamespace(), op.getGroup(), op.getServiceName());
+        service = ServiceManager.getInstance().getSingleton(service);
         namingMetadataManager.removeInstanceMetadata(service, op.getTag());
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -257,7 +257,7 @@ public ConfigAllInfo detailConfigInfo(@RequestParam("dataId") String dataId, @Re
      */
     @DeleteMapping
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
-    public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse response,@RequestParam("dataId") String dataId,
+    public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse response, @RequestParam("dataId") String dataId,
             @RequestParam("group") String group,
             @RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant,
             @RequestParam(value = "tag", required = false) String tag) throws NacosException {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigChangeHandler.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.config.impl;
 
+import com.alibaba.nacos.api.config.ConfigChangeItem;
 import com.alibaba.nacos.api.config.listener.ConfigChangeParser;
 import com.alibaba.nacos.common.spi.NacosServiceLoader;
 
@@ -65,7 +66,7 @@ public static ConfigChangeHandler getInstance() {
      * @return change data map
      * @throws IOException io exception
      */
-    public Map parseChangeData(String oldContent, String newContent, String type) throws IOException {
+    public Map<String, ConfigChangeItem> parseChangeData(String oldContent, String newContent, String type) throws IOException {
         for (ConfigChangeParser changeParser : this.parserList) {
             if (changeParser.isResponsibleFor(type)) {
                 return changeParser.doParse(oldContent, newContent, type);

File: client/src/test/java/com/alibaba/nacos/client/config/impl/CacheDataTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.config.listener.Listener;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.filter.impl.ConfigFilterChainManager;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import org.junit.Assert;
@@ -80,7 +81,7 @@ public void testGetter() {
     }
     
     @Test
-    public void testListener() {
+    public void testListener() throws NacosException {
         ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
         final CacheData cacheData1 = new CacheData(filter, "name1", "key", "group", "tenant");
         
@@ -104,7 +105,7 @@ public void receiveConfigInfo(String configInfo) {
     }
     
     @Test
-    public void testCheckListenerMd5() {
+    public void testCheckListenerMd5() throws NacosException {
         ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
         final CacheData data = new CacheData(filter, "name1", "key", "group", "tenant");
         final List<String> list = new ArrayList<>();

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java
Patch:
@@ -94,7 +94,7 @@ public void receiveConfigInfo(String configInfo) {
         Assert.assertEquals(0, listeners.size());
         
         String content = "d";
-        clientWorker.addTenantListenersWithContent(dataId, group, content, Arrays.asList(listener));
+        clientWorker.addTenantListenersWithContent(dataId, group, content, null, Arrays.asList(listener));
         listeners = clientWorker.getCache(dataId, group).getListeners();
         Assert.assertEquals(1, listeners.size());
         Assert.assertEquals(listener, listeners.get(0));

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/InstanceMetadataProcessor.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.consistency.entity.WriteRequest;
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
+import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.constants.Constants;
@@ -102,12 +103,14 @@ public Response onApply(WriteRequest request) {
     
     private void updateInstanceMetadata(MetadataOperation<InstanceMetadata> op) {
         Service service = Service.newService(op.getNamespace(), op.getGroup(), op.getServiceName());
+        service = ServiceManager.getInstance().getSingleton(service);
         namingMetadataManager.updateInstanceMetadata(service, op.getTag(), op.getMetadata());
         NotifyCenter.publishEvent(new ServiceEvent.ServiceChangedEvent(service, true));
     }
     
     private void deleteInstanceMetadata(MetadataOperation<InstanceMetadata> op) {
         Service service = Service.newService(op.getNamespace(), op.getGroup(), op.getServiceName());
+        service = ServiceManager.getInstance().getSingleton(service);
         namingMetadataManager.removeInstanceMetadata(service, op.getTag());
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -123,7 +123,8 @@ public ConfigController(ConfigServletInner inner, PersistService persistService,
      */
     @PostMapping
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
-    public Boolean publishConfig(HttpServletRequest request, @RequestParam(value = "dataId") String dataId,
+    public Boolean publishConfig(HttpServletRequest request, HttpServletResponse response,
+            @RequestParam(value = "dataId") String dataId,
             @RequestParam(value = "group") String group,
             @RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant,
             @RequestParam(value = "content") String content, @RequestParam(value = "tag", required = false) String tag,
@@ -256,7 +257,7 @@ public ConfigAllInfo detailConfigInfo(@RequestParam("dataId") String dataId, @Re
      */
     @DeleteMapping
     @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG)
-    public Boolean deleteConfig(HttpServletRequest request, @RequestParam("dataId") String dataId,
+    public Boolean deleteConfig(HttpServletRequest request, HttpServletResponse response,@RequestParam("dataId") String dataId,
             @RequestParam("group") String group,
             @RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant,
             @RequestParam(value = "tag", required = false) String tag) throws NacosException {

File: client/src/main/java/com/alibaba/nacos/client/constant/Constants.java
Patch:
@@ -35,6 +35,8 @@ public static class SysEnv {
         
         public static final String JM_SNAPSHOT_PATH = "JM.SNAPSHOT.PATH";
         
+        public static final String NACOS_ENVS_SEARCH = "nacos.envs.search";
+        
     }
     
     public static class Disk {

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/api/Permission.java
Patch:
@@ -41,7 +41,6 @@ public class Permission implements Serializable {
     private String action;
     
     public Permission() {
-    
     }
     
     public Permission(Resource resource, String action) {

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/exception/AccessException.java
Patch:
@@ -30,7 +30,6 @@ public class AccessException extends NacosException {
     private static final long serialVersionUID = -2926344920552803270L;
     
     public AccessException() {
-    
     }
     
     public AccessException(int code) {

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/execute/AbstractDistroExecuteTask.java
Patch:
@@ -130,7 +130,7 @@ public void onFailed(Throwable throwable) {
             if (null == throwable) {
                 Loggers.DISTRO.info("[DISTRO-END] {} result: false", getDistroKey().toString());
             } else {
-                Loggers.DISTRO.warn("[DISTRO] Sync data change failed.", throwable);
+                Loggers.DISTRO.warn("[DISTRO] Sync data change failed. key: {}", getDistroKey().toString(), throwable);
             }
             handleFailedTask();
         }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientTransportAgent.java
Patch:
@@ -80,7 +80,7 @@ public boolean syncData(DistroData data, String targetServer) {
             Response response = clusterRpcClientProxy.sendRequest(member, request);
             return checkResponse(response);
         } catch (NacosException e) {
-            Loggers.DISTRO.error("[DISTRO-FAILED] Sync distro data failed! ", e);
+            Loggers.DISTRO.error("[DISTRO-FAILED] Sync distro data failed! key: {}", data.getDistroKey(), e);
         }
         return false;
     }
@@ -126,7 +126,7 @@ public boolean syncVerifyData(DistroData verifyData, String targetServer) {
             Response response = clusterRpcClientProxy.sendRequest(member, request);
             return checkResponse(response);
         } catch (NacosException e) {
-            Loggers.DISTRO.error("[DISTRO-FAILED] Verify distro data failed! ", e);
+            Loggers.DISTRO.error("[DISTRO-FAILED] Verify distro data failed! key: {} ", verifyData.getDistroKey(), e);
         }
         return false;
     }

File: client/src/main/java/com/alibaba/nacos/client/auth/impl/process/HttpLoginProcessor.java
Patch:
@@ -91,7 +91,7 @@ public LoginIdentityContext getResponse(Properties properties) {
             }
             return loginIdentityContext;
         } catch (Exception e) {
-            SECURITY_LOGGER.error("[ NacosClientAuthServiceImpl] login http request failed"
+            SECURITY_LOGGER.error("[NacosClientAuthServiceImpl] login http request failed"
                     + " url: {}, params: {}, bodyMap: {}, errorMsg: {}", url, params, bodyMap, e.getMessage());
             return null;
         }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -665,7 +665,7 @@ public String getCurrentServer() {
                 
                 @Override
                 public List<String> getServerList() {
-                    return ConfigRpcTransportClient.super.serverListManager.serverUrls;
+                    return ConfigRpcTransportClient.super.serverListManager.getServerUrls();
                     
                 }
             });

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/RaftExecutor.java
Patch:
@@ -59,10 +59,10 @@ public static void init(RaftConfig config) {
                 .parseInt(config.getValOfDefault(RaftSysConstants.RAFT_CLI_SERVICE_THREAD_NUM, "4"));
         
         raftCoreExecutor = ExecutorFactory.Managed.newFixedExecutorService(OWNER, raftCoreThreadNum,
-                new NameThreadFactory("com.alibaba.naocs.core.raft-core"));
+                new NameThreadFactory("com.alibaba.nacos.core.raft-core"));
         
         raftCliServiceExecutor = ExecutorFactory.Managed.newFixedExecutorService(OWNER, raftCliServiceThreadNum,
-                new NameThreadFactory("com.alibaba.naocs.core.raft-cli-service"));
+                new NameThreadFactory("com.alibaba.nacos.core.raft-cli-service"));
         
         raftCommonExecutor = ExecutorFactory.Managed.newScheduledExecutorService(OWNER, 8,
                 new NameThreadFactory("com.alibaba.nacos.core.protocol.raft-common"));
@@ -71,7 +71,7 @@ public static void init(RaftConfig config) {
         snapshotNum = snapshotNum == 0 ? raftCoreThreadNum : snapshotNum;
         
         raftSnapshotExecutor = ExecutorFactory.Managed.newFixedExecutorService(OWNER, snapshotNum,
-                        new NameThreadFactory("com.alibaba.naocs.core.raft-snapshot"));
+                        new NameThreadFactory("com.alibaba.nacos.core.raft-snapshot"));
         
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/redo/data/InstanceRedoData.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class InstanceRedoData extends RedoData<Instance> {
     
-    private InstanceRedoData(String serviceName, String groupName) {
+    protected InstanceRedoData(String serviceName, String groupName) {
         super(serviceName, groupName);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -76,7 +76,7 @@ public void batchRegisterInstance(Service service, List<Instance> instances, Str
         Service singleton = ServiceManager.getInstance().getSingleton(service);
         if (!singleton.isEphemeral()) {
             throw new NacosRuntimeException(NacosException.INVALID_PARAM,
-                    String.format("Current service %s is persistent service, can't register ephemeral instance.",
+                    String.format("Current service %s is persistent service, can't batch register ephemeral instance.",
                             singleton.getGroupedServiceName()));
         }
         Client client = clientManager.getClient(clientId);

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -77,7 +77,7 @@ public void setAllIPs(boolean allIPs) {
     }
     
     /**
-     * There is only one form of the key:groupName@@name@clusters. This constuctor used by DiskCache.read(String) and
+     * There is only one form of the key:groupName@@name@clusters. This constructor used by DiskCache.read(String) and
      * FailoverReactor.FailoverFileReader,you should know that 'groupName' must not be null,and 'clusters' can be null.
      */
     public ServiceInfo(String key) {
@@ -96,7 +96,7 @@ public ServiceInfo(String key) {
             this.name = keys[serviceNameIndex];
         } else {
             //defensive programming
-            throw new IllegalArgumentException("Cann't parse out 'groupName',but it must not be null!");
+            throw new IllegalArgumentException("Can't parse out 'groupName',but it must not be null!");
         }
     }
     

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigPublishResponse.java
Patch:
@@ -23,7 +23,7 @@
  * ConfigPublishResponse.
  *
  * @author liuzunfei
- * @version $Id: ConfigPubishResponse.java, v 0.1 2020年07月16日 4:59 PM liuzunfei Exp $
+ * @version $Id: ConfigPublishResponse.java, v 0.1 2020年07月16日 4:59 PM liuzunfei Exp $
  */
 public class ConfigPublishResponse extends Response {
     

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigRemoveResponse.java
Patch:
@@ -20,10 +20,10 @@
 import com.alibaba.nacos.api.remote.response.ResponseCode;
 
 /**
- * ConfigPubishResponse.
+ * ConfigRemoveResponse.
  *
  * @author liuzunfei
- * @version $Id: ConfigPubishResponse.java, v 0.1 2020年07月16日 4:59 PM liuzunfei Exp $
+ * @version $Id: ConfigRemoveResponse.java, v 0.1 2020年07月16日 4:59 PM liuzunfei Exp $
  */
 public class ConfigRemoveResponse extends Response {
     

File: naming/src/main/java/com/alibaba/nacos/naming/constants/Constants.java
Patch:
@@ -136,4 +136,5 @@ public final class Constants {
      * Min value of instance weight.
      */
     public static final double MIN_WEIGHT_VALUE = 0.00D;
+    
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/CatalogServiceV2Impl.java
Patch:
@@ -49,7 +49,7 @@
 import java.util.stream.Collectors;
 
 /**
- * Catalog service for v1.x .
+ * Catalog service for v2.x .
  *
  * @author xiweng.yy
  */

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -188,7 +188,7 @@ public class Constants {
     
     public static final String NULL_STRING = "null";
     
-    public static final String NUMBER_PATTERN = "^\\d+$";
+    public static final String NUMBER_PATTERN_STRING = "^\\d+$";
     
     public static final String ANY_PATTERN = ".*";
     
@@ -214,6 +214,8 @@ public class Constants {
     
     public static final String CHARSET_KEY = "charset";
     
+    public static final String CLUSTER_NAME_PATTERN_STRING = "^[0-9a-zA-Z-]+$";
+    
     /**
      * The constants in config directory.
      */

File: api/src/main/java/com/alibaba/nacos/api/config/convert/NacosConfigConverter.java
Patch:
@@ -36,7 +36,7 @@ public interface NacosConfigConverter<T> {
     /**
      * Convert the Nacos' config of type S to target type T.
      *
-     * @param config the Naocs's config to convert, which must be an instance of S (never {@code null})
+     * @param config the Nacos's config to convert, which must be an instance of S (never {@code null})
      * @return the converted object, which must be an instance of T (potentially {@code null})
      */
     T convert(String config);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -70,7 +70,8 @@ public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestM
         Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), app, meta.getClientIp(),
                 namespaceId, groupedServiceName, 0, request.getClusters());
         ServiceInfo serviceInfo = ServiceUtil.selectInstancesWithHealthyProtection(serviceStorage.getData(service),
-                metadataManager.getServiceMetadata(service).orElse(null), subscriber);
+                metadataManager.getServiceMetadata(service).orElse(null), subscriber.getCluster(), false,
+                true, subscriber.getIp());
         if (request.isSubscribe()) {
             clientOperationService.subscribeService(service, subscriber, meta.getConnectionId());
             NotifyCenter.publishEvent(new NamingTraceEvent.SubscribeServiceTraceEvent(System.currentTimeMillis(),

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/DynamicDataSource.java
Patch:
@@ -17,14 +17,12 @@
 package com.alibaba.nacos.config.server.service.datasource;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import org.springframework.stereotype.Component;
 
 /**
  * Datasource adapter.
  *
  * @author Nacos
  */
-@Component
 public class DynamicDataSource {
     
     private DataSourceService localDataSourceService = null;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientTransportAgent.java
Patch:
@@ -174,7 +174,8 @@ public DistroData getDatumSnapshot(String targetServer) {
         DistroDataRequest request = new DistroDataRequest();
         request.setDataOperation(DataOperation.SNAPSHOT);
         try {
-            Response response = clusterRpcClientProxy.sendRequest(member, request);
+            Response response = clusterRpcClientProxy.sendRequest(member, request,
+                    DistroConfig.getInstance().getLoadDataTimeoutMillis());
             if (checkResponse(response)) {
                 return ((DistroDataResponse) response).getDistroData();
             } else {

File: sys/src/main/java/com/alibaba/nacos/sys/env/Constants.java
Patch:
@@ -54,6 +54,7 @@ public interface Constants {
     String USE_ONLY_SITE_INTERFACES = "nacos.inetutils.use-only-site-local-interfaces";
     String PREFERRED_NETWORKS = "nacos.inetutils.preferred-networks";
     String IGNORED_INTERFACES = "nacos.inetutils.ignored-interfaces";
+    String AUTO_REFRESH_TIME = "nacos.core.inet.auto-refresh";
     String IP_ADDRESS = "nacos.inetutils.ip-address";
     String PREFER_HOSTNAME_OVER_IP = "nacos.inetutils.prefer-hostname-over-ip";
     String SYSTEM_PREFER_HOSTNAME_OVER_IP = "nacos.preferHostnameOverIp";

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -275,4 +275,6 @@ public class Constants {
     public static final String CONFIG_EXPORT_METADATA = ".meta.yml";
     
     public static final String CONFIG_EXPORT_METADATA_NEW = ".metadata.yml";
+    
+    public static final int LIMIT_ERROR_CODE = 429;
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -26,9 +26,9 @@
  */
 public class UtilAndComs {
     
-    // using  ClientCommonUtils#VERSION instead.
+    // using  com.alibaba.nacos.common.utils.VersionUtils.getFullClientVersion instead.
     @Deprecated
-    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.version;
+    public static final String VERSION = VersionUtils.getFullClientVersion();
     
     public static String webContext = "/nacos";
     

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/v2/HealthCheckTaskV2Test.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
@@ -28,6 +29,7 @@
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.util.Collections;
 import java.util.List;
@@ -60,6 +62,7 @@ public void setUp() {
         when(switchDomain.getTcpHealthParams()).thenReturn(new SwitchDomain.TcpHealthParams());
         when(context.getBean(NamingMetadataManager.class)).thenReturn(new NamingMetadataManager());
         healthCheckTaskV2 = new HealthCheckTaskV2(ipPortBasedClient);
+        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     @Test

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HttpHealthCheckProcessorTest.java
Patch:
@@ -80,11 +80,11 @@ public class HttpHealthCheckProcessorTest {
     
     @Before
     public void setUp() {
+        EnvUtil.setEnvironment(new MockEnvironment());
         when(switchDomain.getHttpHealthParams()).thenReturn(new SwitchDomain.HttpHealthParams());
         when(healthCheckTaskV2.getClient()).thenReturn(ipPortBasedClient);
         when(ipPortBasedClient.getInstancePublishInfo(service)).thenReturn(healthCheckInstancePublishInfo);
         httpHealthCheckProcessor = new HttpHealthCheckProcessor(healthCheckCommon, switchDomain);
-        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     @Test

File: client/src/main/java/com/alibaba/nacos/client/monitor/MetricsMonitor.java
Patch:
@@ -42,7 +42,7 @@ public static Gauge.Child getDom2BeatSizeMonitor() {
     }
     
     public static Gauge.Child getListenConfigCountMonitor() {
-        return NACOS_MONITOR.labels("naming", "listenConfigCount");
+        return NACOS_MONITOR.labels("config", "listenConfigCount");
     }
     
     public static Histogram.Child getConfigRequestMonitor(String method, String url, String code) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/ConnectionBasedClientManager.java
Patch:
@@ -101,7 +101,7 @@ public boolean clientDisconnected(String clientId) {
             return true;
         }
         client.release();
-        NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client));
+        NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client, isResponsibleClient(client)));
         return true;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/EphemeralIpPortClientManager.java
Patch:
@@ -89,7 +89,7 @@ public boolean clientDisconnected(String clientId) {
         if (null == client) {
             return true;
         }
-        NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client));
+        NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client, isResponsibleClient(client)));
         client.release();
         return true;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/PersistentIpPortClientManager.java
Patch:
@@ -80,7 +80,7 @@ public boolean clientDisconnected(String clientId) {
         if (null == client) {
             return true;
         }
-        NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client));
+        NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client, isResponsibleClient(client)));
         client.release();
         return true;
     }

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/v2/HealthCheckTaskV2Test.java
Patch:
@@ -56,9 +56,9 @@ public class HealthCheckTaskV2Test {
     @Before
     public void setUp() {
         ApplicationUtils.injectContext(context);
-        when(ApplicationUtils.getBean(SwitchDomain.class)).thenReturn(switchDomain);
+        when(context.getBean(SwitchDomain.class)).thenReturn(switchDomain);
         when(switchDomain.getTcpHealthParams()).thenReturn(new SwitchDomain.TcpHealthParams());
-        when(ApplicationUtils.getBean(NamingMetadataManager.class)).thenReturn(new NamingMetadataManager());
+        when(context.getBean(NamingMetadataManager.class)).thenReturn(new NamingMetadataManager());
         healthCheckTaskV2 = new HealthCheckTaskV2(ipPortBasedClient);
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -105,7 +105,7 @@ public void init() {
             try {
                 reload();
             } catch (IOException e) {
-                FATAL_LOG.error("[ExternalDataSourceService] dats source reload error", e);
+                FATAL_LOG.error("[ExternalDataSourceService] datasource reload error", e);
                 throw new RuntimeException(DB_LOAD_ERROR_MSG);
             }
 

File: common/src/main/java/com/alibaba/nacos/common/executor/ExecutorFactory.java
Patch:
@@ -68,7 +68,7 @@ public static ScheduledExecutorService newScheduledExecutorService(final int nTh
     public static ThreadPoolExecutor newCustomerThreadExecutor(final int coreThreads, final int maxThreads,
             final long keepAliveTimeMs, final ThreadFactory threadFactory) {
         return new ThreadPoolExecutor(coreThreads, maxThreads, keepAliveTimeMs, TimeUnit.MILLISECONDS,
-                new LinkedBlockingQueue<Runnable>(), threadFactory);
+                new LinkedBlockingQueue<>(), threadFactory);
     }
     
     public static final class Managed {
@@ -172,7 +172,7 @@ public static ScheduledExecutorService newScheduledExecutorService(final String
         public static ThreadPoolExecutor newCustomerThreadExecutor(final String group, final int coreThreads,
                 final int maxThreads, final long keepAliveTimeMs, final ThreadFactory threadFactory) {
             ThreadPoolExecutor executor = new ThreadPoolExecutor(coreThreads, maxThreads, keepAliveTimeMs,
-                    TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>(), threadFactory);
+                    TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(), threadFactory);
             THREAD_POOL_MANAGER.register(DEFAULT_NAMESPACE, group, executor);
             return executor;
         }

File: common/src/main/java/com/alibaba/nacos/common/executor/ThreadPoolManager.java
Patch:
@@ -44,7 +44,7 @@ public final class ThreadPoolManager {
     
     private Map<String, Map<String, Set<ExecutorService>>> resourcesManager;
     
-    private Map<String, Object> lockers = new ConcurrentHashMap<String, Object>(8);
+    private Map<String, Object> lockers = new ConcurrentHashMap<>(8);
     
     private static final ThreadPoolManager INSTANCE = new ThreadPoolManager();
     
@@ -67,7 +67,7 @@ private ThreadPoolManager() {
     }
     
     private void init() {
-        resourcesManager = new ConcurrentHashMap<String, Map<String, Set<ExecutorService>>>(8);
+        resourcesManager = new ConcurrentHashMap<>(8);
     }
     
     /**
@@ -85,7 +85,7 @@ public void register(String namespace, String group, ExecutorService executor) {
         synchronized (monitor) {
             Map<String, Set<ExecutorService>> map = resourcesManager.get(namespace);
             if (map == null) {
-                map = new HashMap<String, Set<ExecutorService>>(8);
+                map = new HashMap<>(8);
                 map.computeIfAbsent(group, key -> new HashSet<>()).add(executor);
                 resourcesManager.put(namespace, map);
                 return;

File: common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java
Patch:
@@ -36,9 +36,9 @@ public final class HttpClientBeanHolder {
     
     private static final Logger LOGGER = LoggerFactory.getLogger(HttpClientBeanHolder.class);
     
-    private static final Map<String, NacosRestTemplate> SINGLETON_REST = new HashMap<String, NacosRestTemplate>(10);
+    private static final Map<String, NacosRestTemplate> SINGLETON_REST = new HashMap<>(10);
     
-    private static final Map<String, NacosAsyncRestTemplate> SINGLETON_ASYNC_REST = new HashMap<String, NacosAsyncRestTemplate>(
+    private static final Map<String, NacosAsyncRestTemplate> SINGLETON_ASYNC_REST = new HashMap<>(
             10);
     
     private static final AtomicBoolean ALREADY_SHUTDOWN = new AtomicBoolean(false);

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -114,7 +114,7 @@ public static void initRequestFromEntity(HttpRequestBase requestBase, Map<String
         if (body == null || body.isEmpty()) {
             return;
         }
-        List<NameValuePair> params = new ArrayList<NameValuePair>(body.size());
+        List<NameValuePair> params = new ArrayList<>(body.size());
         for (Map.Entry<String, String> entry : body.entrySet()) {
             params.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
         }
@@ -176,7 +176,7 @@ public static String buildUrl(boolean isHttps, String serverAddr, String... subP
      * @throws Exception exception
      */
     public static Map<String, String> translateParameterMap(Map<String, String[]> parameterMap) throws Exception {
-        Map<String, String> map = new HashMap<String, String>(16);
+        Map<String, String> map = new HashMap<>(16);
         for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) {
             map.put(entry.getKey(), entry.getValue()[0]);
         }

File: common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java
Patch:
@@ -49,7 +49,7 @@ public class NacosRestTemplate extends AbstractNacosRestTemplate {
     
     private final HttpClientRequest requestClient;
     
-    private final List<HttpClientRequestInterceptor> interceptors = new ArrayList<HttpClientRequestInterceptor>();
+    private final List<HttpClientRequestInterceptor> interceptors = new ArrayList<>();
     
     public NacosRestTemplate(Logger logger, HttpClientRequest requestClient) {
         super(logger);

File: common/src/main/java/com/alibaba/nacos/common/http/client/handler/AbstractResponseHandler.java
Patch:
@@ -49,7 +49,7 @@ public final HttpRestResult<T> handle(HttpClientResponse response) throws Except
     private HttpRestResult<T> handleError(HttpClientResponse response) throws Exception {
         Header headers = response.getHeaders();
         String message = IoUtils.toString(response.getBody(), headers.getCharset());
-        return new HttpRestResult<T>(headers, response.getStatusCode(), null, message);
+        return new HttpRestResult<>(headers, response.getStatusCode(), null, message);
     }
     
     /**

File: common/src/main/java/com/alibaba/nacos/common/http/client/handler/BeanResponseHandler.java
Patch:
@@ -37,6 +37,6 @@ public HttpRestResult<T> convertResult(HttpClientResponse response, Type respons
         final Header headers = response.getHeaders();
         InputStream body = response.getBody();
         T extractBody = JacksonUtils.toObj(body, responseType);
-        return new HttpRestResult<T>(headers, response.getStatusCode(), extractBody, null);
+        return new HttpRestResult<>(headers, response.getStatusCode(), extractBody, null);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/http/client/handler/RestResultResponseHandler.java
Patch:
@@ -44,7 +44,7 @@ public HttpRestResult<T> convertResult(HttpClientResponse response, Type respons
     }
     
     private static <T> HttpRestResult<T> convert(RestResult<T> restResult) {
-        HttpRestResult<T> httpRestResult = new HttpRestResult<T>();
+        HttpRestResult<T> httpRestResult = new HttpRestResult<>();
         httpRestResult.setCode(restResult.getCode());
         httpRestResult.setData(restResult.getData());
         httpRestResult.setMessage(restResult.getMessage());

File: common/src/main/java/com/alibaba/nacos/common/http/client/handler/StringResponseHandler.java
Patch:
@@ -34,6 +34,6 @@ public class StringResponseHandler extends AbstractResponseHandler<String> {
     public HttpRestResult<String> convertResult(HttpClientResponse response, Type responseType) throws Exception {
         final Header headers = response.getHeaders();
         String extractBody = IoUtils.toString(response.getBody(), headers.getCharset());
-        return new HttpRestResult<String>(headers, response.getStatusCode(), extractBody, null);
+        return new HttpRestResult<>(headers, response.getStatusCode(), extractBody, null);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/http/param/Header.java
Patch:
@@ -45,8 +45,8 @@ public class Header {
     private static final String DEFAULT_ENCODING = "gzip";
     
     private Header() {
-        header = new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER);
-        originalResponseHeader = new TreeMap<String, List<String>>(String.CASE_INSENSITIVE_ORDER);
+        header = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
+        originalResponseHeader = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
         addParam(HttpHeaderConsts.CONTENT_TYPE, MediaType.APPLICATION_JSON);
         addParam(HttpHeaderConsts.ACCEPT_CHARSET, DEFAULT_CHARSET);
         //addParam(HttpHeaderConsts.ACCEPT_ENCODING, DEFAULT_ENCODING);
@@ -99,7 +99,7 @@ public Iterator<Map.Entry<String, String>> iterator() {
      * @return KV string list
      */
     public List<String> toList() {
-        List<String> list = new ArrayList<String>(header.size() * 2);
+        List<String> list = new ArrayList<>(header.size() * 2);
         Iterator<Map.Entry<String, String>> iterator = iterator();
         while (iterator.hasNext()) {
             Map.Entry<String, String> entry = iterator.next();

File: common/src/main/java/com/alibaba/nacos/common/http/param/Query.java
Patch:
@@ -41,7 +41,7 @@ public class Query {
     private static final String DEFAULT_ENC = "UTF-8";
     
     public Query() {
-        params = new LinkedHashMap<String, Object>();
+        params = new LinkedHashMap<>();
     }
     
     public static Query newInstance() {

File: common/src/main/java/com/alibaba/nacos/common/model/RestResult.java
Patch:
@@ -86,7 +86,7 @@ public String toString() {
     }
     
     public static <T> ResResultBuilder<T> builder() {
-        return new ResResultBuilder<T>();
+        return new ResResultBuilder<>();
     }
     
     public static final class ResResultBuilder<T> {
@@ -121,7 +121,7 @@ public ResResultBuilder<T> withData(T data) {
          * @return result
          */
         public RestResult<T> build() {
-            RestResult<T> restResult = new RestResult<T>();
+            RestResult<T> restResult = new RestResult<>();
             restResult.setCode(code);
             restResult.setMessage(errMsg);
             restResult.setData(data);

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java
Patch:
@@ -47,7 +47,7 @@ public void addSubscriber(Subscriber subscriber, Class<? extends Event> subscrib
         try {
             Set<Subscriber> sets = subMappings.get(subSlowEventType);
             if (sets == null) {
-                Set<Subscriber> newSet = new ConcurrentHashSet<Subscriber>();
+                Set<Subscriber> newSet = new ConcurrentHashSet<>();
                 newSet.add(subscriber);
                 subMappings.put(subSlowEventType, newSet);
                 return;

File: common/src/main/java/com/alibaba/nacos/common/task/engine/NacosDelayTaskExecuteEngine.java
Patch:
@@ -104,7 +104,7 @@ public AbstractDelayTask removeTask(Object key) {
     
     @Override
     public Collection<Object> getAllTaskKeys() {
-        Collection<Object> keys = new HashSet<Object>();
+        Collection<Object> keys = new HashSet<>();
         lock.lock();
         try {
             keys.addAll(tasks.keySet());

File: common/src/main/java/com/alibaba/nacos/common/task/engine/TaskExecuteWorker.java
Patch:
@@ -54,7 +54,7 @@ public TaskExecuteWorker(final String name, final int mod, final int total) {
     
     public TaskExecuteWorker(final String name, final int mod, final int total, final Logger logger) {
         this.name = name + "_" + mod + "%" + total;
-        this.queue = new ArrayBlockingQueue<Runnable>(QUEUE_CAPACITY);
+        this.queue = new ArrayBlockingQueue<>(QUEUE_CAPACITY);
         this.closed = new AtomicBoolean(false);
         this.log = null == logger ? LoggerFactory.getLogger(TaskExecuteWorker.class) : logger;
         new InnerWorker(name).start();

File: common/src/main/java/com/alibaba/nacos/common/utils/ConcurrentHashSet.java
Patch:
@@ -31,7 +31,7 @@ public class ConcurrentHashSet<E> extends AbstractSet<E> {
     
     public ConcurrentHashSet() {
         super();
-        map = new ConcurrentHashMap<E, Boolean>();
+        map = new ConcurrentHashMap<>();
     }
     
     @Override

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -149,7 +149,7 @@ public static void writeStringToFile(File file, String data, String encoding) th
      */
     public static List<String> readLines(Reader input) throws IOException {
         BufferedReader reader = toBufferedReader(input);
-        List<String> list = new ArrayList<String>();
+        List<String> list = new ArrayList<>();
         String line = null;
         for (; ; ) {
             line = reader.readLine();

File: common/src/main/java/com/alibaba/nacos/common/utils/Observable.java
Patch:
@@ -28,7 +28,7 @@ public class Observable {
     
     private transient boolean changed = false;
     
-    private transient Set<Observer> obs = new ConcurrentHashSet<Observer>();
+    private transient Set<Observer> obs = new ConcurrentHashSet<>();
     
     private volatile int observerCnt = 0;
     

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -82,7 +82,7 @@ public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta me
             // check tenant
             ParamUtils.checkParam(dataId, group, "datumId", content);
             ParamUtils.checkParam(tag);
-            Map<String, Object> configAdvanceInfo = new HashMap<String, Object>(10);
+            Map<String, Object> configAdvanceInfo = new HashMap<>(10);
             MapUtil.putIfValNoNull(configAdvanceInfo, "config_tags", request.getAdditionParam("config_tags"));
             MapUtil.putIfValNoNull(configAdvanceInfo, "desc", request.getAdditionParam("desc"));
             MapUtil.putIfValNoNull(configAdvanceInfo, "use", request.getAdditionParam("use"));

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -38,8 +38,8 @@ public class AggrWhitelist {
     
     public static final String AGGRIDS_METADATA = "com.alibaba.nacos.metadata.aggrIDs";
     
-    static final AtomicReference<List<Pattern>> AGGR_DATAID_WHITELIST = new AtomicReference<List<Pattern>>(
-            new ArrayList<Pattern>());
+    static final AtomicReference<List<Pattern>> AGGR_DATAID_WHITELIST = new AtomicReference<>(
+            new ArrayList<>());
     
     /**
      * Judge whether specified dataId includes aggregation white list.
@@ -81,7 +81,7 @@ public static void load(String content) {
     }
     
     static void compile(List<String> whitelist) {
-        List<Pattern> list = new ArrayList<Pattern>(whitelist.size());
+        List<Pattern> list = new ArrayList<>(whitelist.size());
         
         for (String line : whitelist) {
             if (!StringUtils.isBlank(line)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientIpWhiteList.java
Patch:
@@ -37,8 +37,8 @@ public class ClientIpWhiteList {
 
     public static final String CLIENT_IP_WHITELIST_METADATA = "com.alibaba.nacos.metadata.clientIpWhitelist";
 
-    private static final AtomicReference<List<String>> CLIENT_IP_WHITELIST = new AtomicReference<List<String>>(
-            new ArrayList<String>());
+    private static final AtomicReference<List<String>> CLIENT_IP_WHITELIST = new AtomicReference<>(
+            new ArrayList<>());
 
     private static Boolean isOpen = false;
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientRecord.java
Patch:
@@ -36,8 +36,8 @@ public class ClientRecord {
     
     public ClientRecord(final String clientIp) {
         this.ip = clientIp;
-        this.groupKey2md5Map = new ConcurrentHashMap<String, String>(20, 0.75f, 1);
-        this.groupKey2pollingTsMap = new ConcurrentHashMap<String, Long>(20, 0.75f, 1);
+        this.groupKey2md5Map = new ConcurrentHashMap<>(20, 0.75f, 1);
+        this.groupKey2pollingTsMap = new ConcurrentHashMap<>(20, 0.75f, 1);
     }
     
     public String getIp() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -356,7 +356,7 @@ public static void reloadConfig() {
      * @return return diff result list.
      */
     public static List<String> checkMd5() {
-        List<String> diffList = new ArrayList<String>();
+        List<String> diffList = new ArrayList<>();
         long startTime = System.currentTimeMillis();
         for (Entry<String/* groupKey */, CacheItem> entry : CACHE.entrySet()) {
             String groupKey = entry.getKey();

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -47,7 +47,7 @@ public class SwitchService {
     
     public static final String DISABLE_APP_COLLECTOR = "disableAppCollector";
     
-    private static volatile Map<String, String> switches = new HashMap<String, String>();
+    private static volatile Map<String, String> switches = new HashMap<>();
     
     public static boolean getSwitchBoolean(String key, boolean defaultValue) {
         boolean rtn;
@@ -90,7 +90,7 @@ public static void load(String config) {
         }
         FATAL_LOG.warn("[switch-config] {}", config);
         
-        Map<String, String> map = new HashMap<String, String>(30);
+        Map<String, String> map = new HashMap<>(30);
         try {
             for (String line : IoUtils.readLines(new StringReader(config))) {
                 if (!StringUtils.isBlank(line) && !line.startsWith("#")) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -206,7 +206,7 @@ public void setHealthStatus(String healthStatus) {
      * @throws Exception Exception.
      */
     private List<String> loadSql(String sqlFile) throws Exception {
-        List<String> sqlList = new ArrayList<String>();
+        List<String> sqlList = new ArrayList<>();
         InputStream sqlFileIn = null;
         try {
             File file = new File(

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -391,7 +391,7 @@ public void dumpAll() {
     }
     
     static List<List<ConfigInfoChanged>> splitList(List<ConfigInfoChanged> list, int count) {
-        List<List<ConfigInfoChanged>> result = new ArrayList<List<ConfigInfoChanged>>(count);
+        List<List<ConfigInfoChanged>> result = new ArrayList<>(count);
         for (int i = 0; i < count; i++) {
             result.add(new ArrayList<>());
         }
@@ -423,7 +423,7 @@ public void run() {
                 String group = configInfo.getGroup();
                 String tenant = configInfo.getTenant();
                 try {
-                    List<ConfigInfoAggr> datumList = new ArrayList<ConfigInfoAggr>();
+                    List<ConfigInfoAggr> datumList = new ArrayList<>();
                     int rowCount = persistService.aggrConfigInfoCount(dataId, group, tenant);
                     int pageCount = (int) Math.ceil(rowCount * 1.0 / PAGE_SIZE);
                     for (int pageNo = 1; pageNo <= pageCount; pageNo++) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -70,7 +70,7 @@ public MergeDatumService(PersistService persistService) {
     }
     
     static List<List<ConfigInfoChanged>> splitList(List<ConfigInfoChanged> list, int count) {
-        List<List<ConfigInfoChanged>> result = new ArrayList<List<ConfigInfoChanged>>(count);
+        List<List<ConfigInfoChanged>> result = new ArrayList<>(count);
         for (int i = 0; i < count; i++) {
             result.add(new ArrayList<ConfigInfoChanged>());
         }
@@ -144,7 +144,7 @@ public void run() {
                 String group = configInfo.getGroup();
                 String tenant = configInfo.getTenant();
                 try {
-                    List<ConfigInfoAggr> datumList = new ArrayList<ConfigInfoAggr>();
+                    List<ConfigInfoAggr> datumList = new ArrayList<>();
                     int rowCount = persistService.aggrConfigInfoCount(dataId, group, tenant);
                     int pageCount = (int) Math.ceil(rowCount * 1.0 / PAGE_SIZE);
                     for (int pageNo = 1; pageNo <= pageCount; pageNo++) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -66,7 +66,7 @@ public boolean process(NacosTask task) {
         final String tag = mergeTask.tag;
         final String clientIp = mergeTask.getClientIp();
         try {
-            List<ConfigInfoAggr> datumList = new ArrayList<ConfigInfoAggr>();
+            List<ConfigInfoAggr> datumList = new ArrayList<>();
             int rowCount = persistService.aggrConfigInfoCount(dataId, group, tenant);
             int pageCount = (int) Math.ceil(rowCount * 1.0 / PAGE_SIZE);
             for (int pageNo = 1; pageNo <= pageCount; pageNo++) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/MD5Util.java
Patch:
@@ -51,7 +51,7 @@ public class MD5Util {
      */
     public static List<String> compareMd5(HttpServletRequest request, HttpServletResponse response,
             Map<String, String> clientMd5Map) {
-        List<String> changedGroupKeys = new ArrayList<String>();
+        List<String> changedGroupKeys = new ArrayList<>();
         String tag = request.getHeader("Vipserver-Tag");
         for (Map.Entry<String, String> entry : clientMd5Map.entrySet()) {
             String groupKey = entry.getKey();
@@ -118,13 +118,13 @@ public static String compareMd5ResultString(List<String> changedGroupKeys) throw
      */
     public static Map<String, String> getClientMd5Map(String configKeysString) {
         
-        Map<String, String> md5Map = new HashMap<String, String>(5);
+        Map<String, String> md5Map = new HashMap<>(5);
         
         if (null == configKeysString || "".equals(configKeysString)) {
             return md5Map;
         }
         int start = 0;
-        List<String> tmpList = new ArrayList<String>(3);
+        List<String> tmpList = new ArrayList<>(3);
         for (int i = start; i < configKeysString.length(); i++) {
             char c = configKeysString.charAt(i);
             if (c == WORD_SEPARATOR_CHAR) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/SimpleCache.java
Patch:
@@ -27,7 +27,7 @@
  */
 public class SimpleCache<E> {
     
-    final ConcurrentMap<String, CacheEntry<E>> cache = new ConcurrentHashMap<String, CacheEntry<E>>();
+    final ConcurrentMap<String, CacheEntry<E>> cache = new ConcurrentHashMap<>();
     
     private static class CacheEntry<E> {
         
@@ -48,7 +48,7 @@ public void put(String key, E e, long ttlMs) {
         if (key == null || e == null) {
             return;
         }
-        CacheEntry<E> entry = new CacheEntry<E>(e, System.currentTimeMillis() + ttlMs);
+        CacheEntry<E> entry = new CacheEntry<>(e, System.currentTimeMillis() + ttlMs);
         cache.put(key, entry);
     }
     

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -31,7 +31,7 @@ public class SerializeFactory {
     
     public static final String HESSIAN_INDEX = "Hessian".toLowerCase();
     
-    private static final Map<String, Serializer> SERIALIZER_MAP = new HashMap<String, Serializer>(4);
+    private static final Map<String, Serializer> SERIALIZER_MAP = new HashMap<>(4);
     
     public static String defaultSerializer = HESSIAN_INDEX;
     

File: core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java
Patch:
@@ -115,7 +115,7 @@ private String memberClientKey(Member member) {
     }
     
     private void createRpcClientAndStart(Member member, ConnectionType type) throws NacosException {
-        Map<String, String> labels = new HashMap<String, String>(2);
+        Map<String, String> labels = new HashMap<>(2);
         labels.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_CLUSTER);
         String memberClientKey = memberClientKey(member);
         RpcClient client = buildRpcClient(type, labels, memberClientKey);

File: core/src/main/java/com/alibaba/nacos/core/monitor/MetricsMonitor.java
Patch:
@@ -50,7 +50,7 @@ public final class MetricsMonitor {
         RAFT_APPLY_LOG_TIMER = NacosMeterRegistry.timer("protocol", "raft_apply_log_timer");
         RAFT_APPLY_READ_TIMER = NacosMeterRegistry.timer("protocol", "raft_apply_read_timer");
         
-        List<Tag> tags = new ArrayList<Tag>();
+        List<Tag> tags = new ArrayList<>();
         tags.add(new ImmutableTag("module", "config"));
         tags.add(new ImmutableTag("name", "longConnection"));
         Metrics.gauge("nacos_monitor", tags, longConnection);

File: core/src/main/java/com/alibaba/nacos/core/remote/ClientConnectionEventListenerRegistry.java
Patch:
@@ -31,7 +31,7 @@
 @Service
 public class ClientConnectionEventListenerRegistry {
     
-    final List<ClientConnectionEventListener> clientConnectionEventListeners = new ArrayList<ClientConnectionEventListener>();
+    final List<ClientConnectionEventListener> clientConnectionEventListeners = new ArrayList<>();
     
     /**
      * notify where a new client connected.

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionMeta.java
Patch:
@@ -87,7 +87,7 @@ public class ConnectionMeta {
      */
     String tenant;
     
-    protected Map<String, String> labels = new HashMap<String, String>();
+    protected Map<String, String> labels = new HashMap<>();
     
     public String getLabel(String labelKey) {
         return labels.get(labelKey);

File: core/src/main/java/com/alibaba/nacos/core/remote/RequestFilters.java
Patch:
@@ -30,7 +30,7 @@
 @Service
 public class RequestFilters {
     
-    List<AbstractRequestFilter> filters = new ArrayList<AbstractRequestFilter>();
+    List<AbstractRequestFilter> filters = new ArrayList<>();
     
     public void registerFilter(AbstractRequestFilter requestFilter) {
         filters.add(requestFilter);

File: core/src/main/java/com/alibaba/nacos/core/remote/RequestHandlerRegistry.java
Patch:
@@ -43,7 +43,7 @@
 @Service
 public class RequestHandlerRegistry implements ApplicationListener<ContextRefreshedEvent> {
     
-    Map<String, RequestHandler> registryHandlers = new HashMap<String, RequestHandler>();
+    Map<String, RequestHandler> registryHandlers = new HashMap<>();
     
     @Autowired
     private TpsMonitorManager tpsMonitorManager;

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcAckCallbackSynchronizer.java
Patch:
@@ -105,7 +105,7 @@ public static void clearContext(String connectionId) {
      */
     public static Map<String, DefaultRequestFuture> initContextIfNecessary(String connectionId) {
         if (!CALLBACK_CONTEXT.containsKey(connectionId)) {
-            Map<String, DefaultRequestFuture> context = new HashMap<String, DefaultRequestFuture>(128);
+            Map<String, DefaultRequestFuture> context = new HashMap<>(128);
             Map<String, DefaultRequestFuture> stringDefaultRequestFutureMap = CALLBACK_CONTEXT
                     .putIfAbsent(connectionId, context);
             return stringDefaultRequestFutureMap == null ? context : stringDefaultRequestFutureMap;

File: core/src/main/java/com/alibaba/nacos/core/remote/control/TpsControlRule.java
Patch:
@@ -35,7 +35,7 @@ public class TpsControlRule {
     /**
      * Pattern,Rule map.
      */
-    private Map<String, Rule> monitorKeyRule = new HashMap<String, Rule>();
+    private Map<String, Rule> monitorKeyRule = new HashMap<>();
     
     public String getPointName() {
         return pointName;

File: core/src/main/java/com/alibaba/nacos/core/remote/control/TpsMonitorManager.java
Patch:
@@ -54,7 +54,7 @@
 @Service
 public class TpsMonitorManager extends Subscriber<TpsControlRuleChangeEvent> implements DisposableBean {
     
-    public final Map<String, TpsMonitorPoint> points = new ConcurrentHashMap<String, TpsMonitorPoint>(16);
+    public final Map<String, TpsMonitorPoint> points = new ConcurrentHashMap<>(16);
     
     private static ScheduledExecutorService executorService = ExecutorFactory.newSingleScheduledExecutorService(r -> {
         Thread thread = new Thread(r, "nacos.core.remote.tps.control.reporter");

File: core/src/main/java/com/alibaba/nacos/core/remote/control/TpsMonitorPoint.java
Patch:
@@ -46,7 +46,7 @@ public class TpsMonitorPoint {
     
     private TpsRecorder tpsRecorder;
     
-    public Map<String, TpsRecorder> monitorKeysRecorder = new HashMap<String, TpsRecorder>();
+    public Map<String, TpsRecorder> monitorKeysRecorder = new HashMap<>();
     
     public TpsMonitorPoint(String pointName) {
         this(pointName, -1, "monitor");

File: core/src/main/java/com/alibaba/nacos/core/remote/core/ServerLoaderInfoRequestHandler.java
Patch:
@@ -47,7 +47,7 @@ public class ServerLoaderInfoRequestHandler extends RequestHandler<ServerLoaderI
     public ServerLoaderInfoResponse handle(ServerLoaderInfoRequest request, RequestMeta meta) throws NacosException {
         ServerLoaderInfoResponse serverLoaderInfoResponse = new ServerLoaderInfoResponse();
         serverLoaderInfoResponse.putMetricsValue("conCount", String.valueOf(connectionManager.currentClientsCount()));
-        Map<String, String> filter = new HashMap<String, String>(2);
+        Map<String, String> filter = new HashMap<>(2);
         filter.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         serverLoaderInfoResponse
                 .putMetricsValue("sdkConCount", String.valueOf(connectionManager.currentClientsCount(filter)));

File: core/src/main/java/com/alibaba/nacos/core/remote/core/ServerReloaderRequestHandler.java
Patch:
@@ -49,7 +49,7 @@ public ServerReloadResponse handle(ServerReloadRequest request, RequestMeta meta
         Loggers.REMOTE.info("server reload request receive,reload count={},redirectServer={},requestIp={}",
                 request.getReloadCount(), request.getReloadServer(), meta.getClientIp());
         int reloadCount = request.getReloadCount();
-        Map<String, String> filter = new HashMap<String, String>(2);
+        Map<String, String> filter = new HashMap<>(2);
         filter.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         int sdkCount = connectionManager.currentClientsCount(filter);
         if (sdkCount <= reloadCount) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/index/ServiceStorage.java
Patch:
@@ -81,8 +81,9 @@ public ServiceInfo getPushData(Service service) {
         if (!ServiceManager.getInstance().containSingleton(service)) {
             return result;
         }
-        result.setHosts(getAllInstancesFromIndex(service));
-        serviceDataIndexes.put(service, result);
+        Service singleton = ServiceManager.getInstance().getSingleton(service);
+        result.setHosts(getAllInstancesFromIndex(singleton));
+        serviceDataIndexes.put(singleton, result);
         return result;
     }
     

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/injector/ConfigResourceInjector.java
Patch:
@@ -70,9 +70,7 @@ public void doInject(RequestResource resource, RamContext context, LoginIdentity
         }
         Map<String, String> signHeaders = SpasAdapter
                 .getSignHeaders(getResource(resource.getNamespace(), resource.getGroup()), secretKey);
-        if (signHeaders != null && !signHeaders.isEmpty()) {
-            result.setParameters(signHeaders);
-        }
+        result.setParameters(signHeaders);
     }
     
     private StsCredential getStsCredential() {

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/spi/server/AuthPluginManager.java
Patch:
@@ -43,7 +43,7 @@ public class AuthPluginManager {
      */
     private final Map<String, AuthPluginService> authServiceMap = new HashMap<>();
     
-    public AuthPluginManager() {
+    private AuthPluginManager() {
         initAuthServices();
     }
     

File: plugin/encryption/src/main/java/com/alibaba/nacos/plugin/encryption/EncryptionPluginManager.java
Patch:
@@ -41,7 +41,7 @@ public class EncryptionPluginManager {
     
     private static final EncryptionPluginManager INSTANCE = new EncryptionPluginManager();
     
-    public EncryptionPluginManager() {
+    private EncryptionPluginManager() {
         loadInitial();
     }
     

File: client/src/main/java/com/alibaba/nacos/client/auth/impl/process/HttpLoginProcessor.java
Patch:
@@ -67,8 +67,8 @@ public LoginIdentityContext getResponse(Properties properties) {
             url = server + contextPath + LOGIN_URL;
         }
         
-        Map<String, String> params = new HashMap<String, String>(2);
-        Map<String, String> bodyMap = new HashMap<String, String>(2);
+        Map<String, String> params = new HashMap<>(2);
+        Map<String, String> bodyMap = new HashMap<>(2);
         params.put(PropertyKeyConst.USERNAME, properties.getProperty(PropertyKeyConst.USERNAME, StringUtils.EMPTY));
         bodyMap.put(PropertyKeyConst.PASSWORD, properties.getProperty(PropertyKeyConst.PASSWORD, StringUtils.EMPTY));
         try {

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialService.java
Patch:
@@ -31,7 +31,7 @@ public final class CredentialService implements SpasCredentialLoader {
     
     private static final Logger LOGGER = LogUtils.logger(CredentialService.class);
     
-    private static final ConcurrentHashMap<String, CredentialService> INSTANCES = new ConcurrentHashMap<String, CredentialService>();
+    private static final ConcurrentHashMap<String, CredentialService> INSTANCES = new ConcurrentHashMap<>();
     
     private final String appName;
     

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/utils/SpasAdapter.java
Patch:
@@ -45,7 +45,7 @@ public class SpasAdapter {
     private static final String SHA_ENCRYPT = "HmacSHA1";
     
     public static Map<String, String> getSignHeaders(String resource, String secretKey) {
-        Map<String, String> header = new HashMap<String, String>(2);
+        Map<String, String> header = new HashMap<>(2);
         String timeStamp = String.valueOf(System.currentTimeMillis());
         header.put(TIMESTAMP_HEADER, timeStamp);
         if (secretKey != null) {

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigContext.java
Patch:
@@ -28,7 +28,7 @@
  */
 public class ConfigContext implements IConfigContext {
     
-    private final Map<String, Object> param = new HashMap<String, Object>();
+    private final Map<String, Object> param = new HashMap<>();
     
     @Override
     public Object getParameter(String key) {

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigRequest.java
Patch:
@@ -36,7 +36,7 @@
  */
 public class ConfigRequest implements IConfigRequest {
     
-    private final Map<String, Object> param = new HashMap<String, Object>();
+    private final Map<String, Object> param = new HashMap<>();
     
     private final IConfigContext configContext = new ConfigContext();
     

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigResponse.java
Patch:
@@ -36,7 +36,7 @@
  */
 public class ConfigResponse implements IConfigResponse {
     
-    private final Map<String, Object> param = new HashMap<String, Object>();
+    private final Map<String, Object> param = new HashMap<>();
     
     private final IConfigContext configContext = new ConfigContext();
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/AbstractConfigChangeParser.java
Patch:
@@ -42,7 +42,7 @@ public boolean isResponsibleFor(String type) {
     }
     
     protected Map<String, ConfigChangeItem> filterChangeData(Map oldMap, Map newMap) {
-        Map<String, ConfigChangeItem> result = new HashMap<String, ConfigChangeItem>(16);
+        Map<String, ConfigChangeItem> result = new HashMap<>(16);
         for (Map.Entry<String, Object> e : (Iterable<Map.Entry<String, Object>>) oldMap.entrySet()) {
             ConfigChangeItem cci;
             if (newMap.containsKey(e.getKey())) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -202,7 +202,7 @@ public void removeListener(Listener listener) {
      * Returns the iterator on the listener list, read-only. It is guaranteed not to return NULL.
      */
     public List<Listener> getListeners() {
-        List<Listener> result = new ArrayList<Listener>();
+        List<Listener> result = new ArrayList<>();
         for (ManagerListenerWrap wrap : listeners) {
             result.add(wrap.listener);
         }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigChangeHandler.java
Patch:
@@ -40,7 +40,7 @@ private static class ConfigChangeHandlerHolder {
     }
     
     private ConfigChangeHandler() {
-        this.parserList = new LinkedList<ConfigChangeParser>();
+        this.parserList = new LinkedList<>();
         
         Collection<ConfigChangeParser> loader = NacosServiceLoader.load(ConfigChangeParser.class);
         Iterator<ConfigChangeParser> itr = loader.iterator();

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -104,7 +104,7 @@ protected Map<String, String> getSecurityHeaders(RequestResource resource) throw
      * @return headers.
      */
     protected Map<String, String> getCommonHeader() {
-        Map<String, String> headers = new HashMap<String, String>(16);
+        Map<String, String> headers = new HashMap<>(16);
         
         String ts = String.valueOf(System.currentTimeMillis());
         String token = MD5Utils.md5Hex(ts + ParamUtil.getAppKey(), Constants.ENCODE);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/YmlChangeParser.java
Patch:
@@ -77,7 +77,7 @@ private void handleYamlException(ConstructorException e) {
     }
     
     private Map<String, Object> getFlattenedMap(Map<String, Object> source) {
-        Map<String, Object> result = new LinkedHashMap<String, Object>(128);
+        Map<String, Object> result = new LinkedHashMap<>(128);
         buildFlattenedMap(result, source, null);
         return result;
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -59,9 +59,9 @@ public class FailoverReactor implements Closeable {
     
     private static final String FAILOVER_MODE_PARAM = "failover-mode";
     
-    private Map<String, ServiceInfo> serviceMap = new ConcurrentHashMap<String, ServiceInfo>();
+    private Map<String, ServiceInfo> serviceMap = new ConcurrentHashMap<>();
     
-    private final Map<String, String> switchParams = new ConcurrentHashMap<String, String>();
+    private final Map<String, String> switchParams = new ConcurrentHashMap<>();
     
     private static final long DAY_PERIOD_MINUTES = 24 * 60;
     
@@ -184,7 +184,7 @@ class FailoverFileReader implements Runnable {
         
         @Override
         public void run() {
-            Map<String, ServiceInfo> domMap = new HashMap<String, ServiceInfo>(16);
+            Map<String, ServiceInfo> domMap = new HashMap<>(16);
             
             BufferedReader reader = null;
             try {

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -56,7 +56,7 @@ public class BeatReactor implements Closeable {
     
     private boolean lightBeatEnabled = false;
     
-    public final Map<String, BeatInfo> dom2Beat = new ConcurrentHashMap<String, BeatInfo>();
+    public final Map<String, BeatInfo> dom2Beat = new ConcurrentHashMap<>();
     
     public BeatReactor(NamingHttpClientProxy serverProxy) {
         this(serverProxy, null);

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/DiskCache.java
Patch:
@@ -90,7 +90,7 @@ public static String getLineSeparator() {
      * @return service infos
      */
     public static Map<String, ServiceInfo> read(String cacheDir) {
-        Map<String, ServiceInfo> domMap = new HashMap<String, ServiceInfo>(16);
+        Map<String, ServiceInfo> domMap = new HashMap<>(16);
         
         BufferedReader reader = null;
         try {
@@ -109,7 +109,7 @@ public static Map<String, ServiceInfo> read(String cacheDir) {
                 if (!(fileName.endsWith(Constants.SERVICE_INFO_SPLITER + "meta") || fileName
                         .endsWith(Constants.SERVICE_INFO_SPLITER + "special-url"))) {
                     ServiceInfo dom = new ServiceInfo(fileName);
-                    List<Instance> ips = new ArrayList<Instance>();
+                    List<Instance> ips = new ArrayList<>();
                     dom.setHosts(ips);
                     
                     ServiceInfo newFormat = null;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/Balancer.java
Patch:
@@ -83,14 +83,14 @@ protected static Instance getHostByRandomWeight(List<Instance> hosts) {
             return null;
         }
         NAMING_LOGGER.debug("new Chooser");
-        List<Pair<Instance>> hostsWithWeight = new ArrayList<Pair<Instance>>();
+        List<Pair<Instance>> hostsWithWeight = new ArrayList<>();
         for (Instance host : hosts) {
             if (host.isHealthy()) {
                 hostsWithWeight.add(new Pair<Instance>(host, host.getWeight()));
             }
         }
         NAMING_LOGGER.debug("for (Host host : hosts)");
-        Chooser<String, Instance> vipChooser = new Chooser<String, Instance>("www.taobao.com");
+        Chooser<String, Instance> vipChooser = new Chooser<>("www.taobao.com");
         vipChooser.refresh(hostsWithWeight);
         NAMING_LOGGER.debug("vipChooser.refresh");
         return vipChooser.randomWithWeight();

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java
Patch:
@@ -125,7 +125,7 @@ private List<String> getServerListFromEndpoint() {
                         "Error while requesting: " + urlString + "'. Server returned: " + restResult.getCode());
             }
             String content = restResult.getData();
-            List<String> list = new ArrayList<String>();
+            List<String> list = new ArrayList<>();
             for (String line : IoUtils.readLines(new StringReader(content))) {
                 if (!line.trim().isEmpty()) {
                     list.add(line.trim());

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateService.java
Patch:
@@ -51,7 +51,7 @@ public class ServiceInfoUpdateService implements Closeable {
     
     private static final int DEFAULT_UPDATE_CACHE_TIME_MULTIPLE = 6;
     
-    private final Map<String, ScheduledFuture<?>> futureMap = new HashMap<String, ScheduledFuture<?>>();
+    private final Map<String, ScheduledFuture<?>> futureMap = new HashMap<>();
     
     private final ServiceInfoHolder serviceInfoHolder;
     

File: client/src/main/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifier.java
Patch:
@@ -43,7 +43,7 @@ public class InstancesChangeNotifier extends Subscriber<InstancesChangeEvent> {
     
     private final String eventScope;
     
-    private final Map<String, ConcurrentHashSet<EventListener>> listenerMap = new ConcurrentHashMap<String, ConcurrentHashSet<EventListener>>();
+    private final Map<String, ConcurrentHashSet<EventListener>> listenerMap = new ConcurrentHashMap<>();
     
     private final Object lock = new Object();
     
@@ -71,7 +71,7 @@ public void registerListener(String groupName, String serviceName, String cluste
             synchronized (lock) {
                 eventListeners = listenerMap.get(key);
                 if (eventListeners == null) {
-                    eventListeners = new ConcurrentHashSet<EventListener>();
+                    eventListeners = new ConcurrentHashSet<>();
                     listenerMap.put(key, eventListeners);
                 }
             }
@@ -114,7 +114,7 @@ public boolean isSubscribed(String groupName, String serviceName, String cluster
     }
     
     public List<ServiceInfo> getSubscribeServices() {
-        List<ServiceInfo> serviceInfos = new ArrayList<ServiceInfo>();
+        List<ServiceInfo> serviceInfos = new ArrayList<>();
         for (String key : listenerMap.keySet()) {
             serviceInfos.add(ServiceInfo.fromKey(key));
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -80,7 +80,7 @@ public NamingGrpcClientProxy(String namespaceId, SecurityProxy securityProxy, Se
         this.namespaceId = namespaceId;
         this.uuid = UUID.randomUUID().toString();
         this.requestTimeout = Long.parseLong(properties.getProperty(CommonParams.NAMING_REQUEST_TIMEOUT, "-1"));
-        Map<String, String> labels = new HashMap<String, String>();
+        Map<String, String> labels = new HashMap<>();
         labels.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         labels.put(RemoteConstants.LABEL_MODULE, RemoteConstants.LABEL_MODULE_NAMING);
         this.rpcClient = RpcClientFactory.createClient(uuid, ConnectionType.GRPC, labels);
@@ -199,7 +199,7 @@ public ListView<String> getServiceList(int pageNo, int pageSize, String groupNam
             }
         }
         ServiceListResponse response = requestToServer(request, ServiceListResponse.class);
-        ListView<String> result = new ListView<String>();
+        ListView<String> result = new ListView<>();
         result.setCount(response.getCount());
         result.setData(response.getServiceNames());
         return result;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/GenericPoller.java
Patch:
@@ -29,7 +29,7 @@ public class GenericPoller<T> implements Poller<T> {
     
     private final AtomicInteger index = new AtomicInteger(0);
     
-    private List<T> items = new ArrayList<T>();
+    private List<T> items = new ArrayList<>();
     
     public GenericPoller(List<T> items) {
         this.items = items;
@@ -42,6 +42,6 @@ public T next() {
     
     @Override
     public Poller<T> refresh(List<T> items) {
-        return new GenericPoller<T>(items);
+        return new GenericPoller<>(items);
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/NamingRemoteConstants.java
Patch:
@@ -26,6 +26,8 @@ public class NamingRemoteConstants {
     
     public static final String REGISTER_INSTANCE = "registerInstance";
     
+    public static final String BATCH_REGISTER_INSTANCE = "batchRegisterInstance";
+    
     public static final String DE_REGISTER_INSTANCE = "deregisterInstance";
     
     public static final String QUERY_SERVICE = "queryService";

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigType.java
Patch:
@@ -65,7 +65,7 @@ public enum ConfigType {
     
     private final String type;
     
-    private static final Map<String, ConfigType> LOCAL_MAP = new HashMap<String, ConfigType>();
+    private static final Map<String, ConfigType> LOCAL_MAP = new HashMap<>();
     
     static {
         for (ConfigType configType : values()) {

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -32,7 +32,7 @@ public class ConfigBatchListenRequest extends AbstractConfigRequest {
      */
     private boolean listen = true;
     
-    private List<ConfigListenContext> configListenContexts = new ArrayList<ConfigListenContext>();
+    private List<ConfigListenContext> configListenContexts = new ArrayList<>();
     
     /**
      * add listen config.

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigChangeBatchListenResponse.java
Patch:
@@ -30,7 +30,7 @@
  */
 public class ConfigChangeBatchListenResponse extends Response {
     
-    List<ConfigContext> changedConfigs = new ArrayList<ConfigContext>();
+    List<ConfigContext> changedConfigs = new ArrayList<>();
     
     public ConfigChangeBatchListenResponse() {
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -66,7 +66,7 @@ public class Cluster implements Serializable {
      */
     private boolean useIPPort4Check = true;
     
-    private Map<String, String> metadata = new HashMap<String, String>();
+    private Map<String, String> metadata = new HashMap<>();
     
     public Cluster() {
     

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -90,7 +90,7 @@ public class Instance implements Serializable {
     /**
      * user extended attributes.
      */
-    private Map<String, String> metadata = new HashMap<String, String>();
+    private Map<String, String> metadata = new HashMap<>();
     
     public String getInstanceId() {
         return this.instanceId;
@@ -165,7 +165,7 @@ public void setMetadata(final Map<String, String> metadata) {
      */
     public void addMetadata(final String key, final String value) {
         if (metadata == null) {
-            metadata = new HashMap<String, String>(4);
+            metadata = new HashMap<>(4);
         }
         metadata.put(key, value);
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Service.java
Patch:
@@ -54,7 +54,7 @@ public class Service implements Serializable {
      */
     private String groupName;
     
-    private Map<String, String> metadata = new HashMap<String, String>();
+    private Map<String, String> metadata = new HashMap<>();
     
     public Service() {
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -55,7 +55,7 @@ public class ServiceInfo {
     
     private long cacheMillis = 1000L;
     
-    private List<Instance> hosts = new ArrayList<Instance>();
+    private List<Instance> hosts = new ArrayList<>();
     
     private long lastRefTime = 0L;
     
@@ -126,7 +126,7 @@ public void addAllHosts(List<? extends Instance> hosts) {
     }
     
     public List<Instance> getHosts() {
-        return new ArrayList<Instance>(hosts);
+        return new ArrayList<>(hosts);
     }
     
     public boolean isValid() {
@@ -187,7 +187,7 @@ public boolean validate() {
             return false;
         }
         
-        List<Instance> validHosts = new ArrayList<Instance>();
+        List<Instance> validHosts = new ArrayList<>();
         for (Instance host : hosts) {
             if (!host.isHealthy()) {
                 continue;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/HealthCheckType.java
Patch:
@@ -54,7 +54,7 @@ public enum HealthCheckType {
      * In JDK 1.6, the map need full class for general. So ignore check style.
      */
     @SuppressWarnings("checkstyle:linelength")
-    private static final Map<String, Class<? extends AbstractHealthChecker>> EXTEND = new ConcurrentHashMap<String, Class<? extends AbstractHealthChecker>>();
+    private static final Map<String, Class<? extends AbstractHealthChecker>> EXTEND = new ConcurrentHashMap<>();
     
     HealthCheckType(Class<? extends AbstractHealthChecker> healthCheckerClass) {
         this.healthCheckerClass = healthCheckerClass;
@@ -90,7 +90,7 @@ public static Class<? extends AbstractHealthChecker> ofHealthCheckerClass(String
     }
     
     public static List<Class<? extends AbstractHealthChecker>> getLoadedHealthCheckerClasses() {
-        List<Class<? extends AbstractHealthChecker>> all = new ArrayList<Class<? extends AbstractHealthChecker>>();
+        List<Class<? extends AbstractHealthChecker>> all = new ArrayList<>();
         for (HealthCheckType type : values()) {
             all.add(type.healthCheckerClass);
         }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Http.java
Patch:
@@ -76,7 +76,7 @@ public Map<String, String> getCustomHeaders() {
         if (StringUtils.isBlank(headers)) {
             return Collections.emptyMap();
         }
-        final Map<String, String> headerMap = new HashMap<String, String>(16);
+        final Map<String, String> headerMap = new HashMap<>(16);
         for (final String s : headers.split(Constants.NAMING_HTTP_HEADER_SPLITTER)) {
             final String[] splits = s.split(":");
             if (splits.length != 2) {

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ConnectionSetupRequest.java
Patch:
@@ -35,7 +35,7 @@ public class ConnectionSetupRequest extends InternalRequest {
     
     private String tenant;
     
-    private Map<String, String> labels = new HashMap<String, String>();
+    private Map<String, String> labels = new HashMap<>();
     
     public ConnectionSetupRequest() {
     }

File: api/src/main/java/com/alibaba/nacos/api/remote/request/RequestMeta.java
Patch:
@@ -33,7 +33,7 @@ public class RequestMeta {
     
     private String clientVersion = "";
     
-    private Map<String, String> labels = new HashMap<String, String>();
+    private Map<String, String> labels = new HashMap<>();
 
     /**
      * Getter method for property <tt>clientVersion</tt>.

File: api/src/main/java/com/alibaba/nacos/api/remote/response/ServerLoaderInfoResponse.java
Patch:
@@ -29,7 +29,7 @@ public class ServerLoaderInfoResponse extends Response {
     
     String address;
     
-    Map<String, String> loaderMetrics = new HashMap<String, String>();
+    Map<String, String> loaderMetrics = new HashMap<>();
     
     public String getMetricsValue(String key) {
         return loaderMetrics.get(key);

File: client/src/test/java/com/alibaba/nacos/client/naming/event/InstancesChangeEventTest.java
Patch:
@@ -27,13 +27,15 @@ public class InstancesChangeEventTest {
     
     @Test
     public void testGetServiceName() {
+        String eventScope = "scope-001";
         String serviceName = "a";
         String groupName = "b";
         String clusters = "c";
         List<Instance> hosts = new ArrayList<>();
         Instance ins = new Instance();
         hosts.add(ins);
-        InstancesChangeEvent event = new InstancesChangeEvent(serviceName, groupName, clusters, hosts);
+        InstancesChangeEvent event = new InstancesChangeEvent(eventScope, serviceName, groupName, clusters, hosts);
+        Assert.assertEquals(eventScope, event.scope());
         Assert.assertEquals(serviceName, event.getServiceName());
         Assert.assertEquals(clusters, event.getClusters());
         Assert.assertEquals(groupName, event.getGroupName());

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/upgrade/UpgradeJudgementTest.java
Patch:
@@ -28,6 +28,7 @@
 import com.alibaba.nacos.naming.core.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.upgrade.doublewrite.delay.DoubleWriteDelayTaskEngine;
+import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
@@ -98,6 +99,8 @@ public void setUp() throws Exception {
         upgradeJudgement = new UpgradeJudgement(raftPeerSet, raftCore, versionJudgement, memberManager, serviceManager,
                 upgradeStates, doubleWriteDelayTaskEngine);
         NotifyCenter.deregisterSubscriber(upgradeJudgement);
+        MetricsMonitor.getIpCountMonitor().set(0);
+        MetricsMonitor.getDomCountMonitor().set(0);
     }
     
     @After

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/UpgradeJudgement.java
Patch:
@@ -241,6 +241,7 @@ public void shutdown() {
         if (null != upgradeChecker) {
             upgradeChecker.shutdownNow();
         }
+        NotifyCenter.deregisterSubscriber(this);
     }
     
     /**

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/upgrade/UpgradeJudgementTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.upgrade;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
@@ -96,6 +97,7 @@ public void setUp() throws Exception {
         ApplicationUtils.injectContext(context);
         upgradeJudgement = new UpgradeJudgement(raftPeerSet, raftCore, versionJudgement, memberManager, serviceManager,
                 upgradeStates, doubleWriteDelayTaskEngine);
+        NotifyCenter.deregisterSubscriber(upgradeJudgement);
     }
     
     @After

File: common/src/main/java/com/alibaba/nacos/common/cache/decorators/AutoExpireCache.java
Patch:
@@ -87,6 +87,9 @@ public int getSize() {
     }
     
     private boolean isExpire(CacheItemProperties itemProperties) {
+        if (itemProperties == null) {
+            return true;
+        }
         return expireNanos != -1 && (System.nanoTime() - itemProperties.getExpireNanos() > expireNanos);
     }
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -196,7 +196,7 @@ public ServerListManager(Properties properties) throws NacosException {
             StringTokenizer serverAddrsTokens = new StringTokenizer(this.serverAddrsStr, ",;");
             while (serverAddrsTokens.hasMoreTokens()) {
                 String serverAddr = serverAddrsTokens.nextToken().trim();
-                if (serverAddr.startsWith(HTTP_PREFIX) || serverAddr.startsWith(HTTP_PREFIX)) {
+                if (serverAddr.startsWith(HTTP_PREFIX) || serverAddr.startsWith(HTTPS_PREFIX)) {
                     serverAddrs.add(serverAddr);
                 } else {
                     String[] serverAddrArr = InternetAddressUtil.splitIPPortStr(serverAddr);

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HealthControllerTest.java
Patch:
@@ -75,6 +75,7 @@ public void setUp() {
         when(memberManager.getLookup()).thenReturn(memberLookup);
         when(servletContext.getContextPath()).thenReturn("/nacos");
         ReflectionTestUtils.setField(healthController, "memberManager", memberManager);
+        ReflectionTestUtils.setField(healthController, "dataSourceService", dataSourceService);
         mockmvc = MockMvcBuilders.standaloneSetup(healthController).build();
     }
     

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HistoryControllerTest.java
Patch:
@@ -122,6 +122,7 @@ public void testGetConfigHistoryInfo() throws Exception {
         configHistoryInfo.setDataId("test");
         configHistoryInfo.setGroup("test");
         configHistoryInfo.setContent("test");
+        configHistoryInfo.setTenant("");
         configHistoryInfo.setCreatedTime(new Timestamp(new Date().getTime()));
         configHistoryInfo.setLastModifiedTime(new Timestamp(new Date().getTime()));
         
@@ -149,6 +150,7 @@ public void testGetPreviousConfigHistoryInfo() throws Exception {
         configHistoryInfo.setDataId("test");
         configHistoryInfo.setGroup("test");
         configHistoryInfo.setContent("test");
+        configHistoryInfo.setTenant("");
         configHistoryInfo.setCreatedTime(new Timestamp(new Date().getTime()));
         configHistoryInfo.setLastModifiedTime(new Timestamp(new Date().getTime()));
         

File: config/src/test/java/com/alibaba/nacos/config/server/utils/ParamUtilsTest.java
Patch:
@@ -19,13 +19,10 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import org.junit.Assert;
 import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
 
 import java.util.HashMap;
 import java.util.Map;
 
-@RunWith(SpringJUnit4ClassRunner.class)
 public class ParamUtilsTest {
     
     @Test

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -1399,7 +1399,7 @@ public Page<ConfigInfoWrapper> findAllConfigInfoForDumpAll(final int pageNo, fin
         
         PaginationHelper<ConfigInfoWrapper> helper = createPaginationHelper();
         
-        return helper.fetchPageLimit(sqlCountRows, sqlFetchRows, EMPTY_ARRAY, pageNo, pageSize,
+        return helper.fetchPageLimit(sqlCountRows, sqlFetchRows, new Object[] {(pageNo - 1) * pageSize, pageSize}, pageNo, pageSize,
                 CONFIG_INFO_WRAPPER_ROW_MAPPER);
         
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -580,7 +580,7 @@ private Map<String, String> getLabels() {
             labels.put(RemoteConstants.LABEL_MODULE, RemoteConstants.LABEL_MODULE_CONFIG);
             labels.put(Constants.APPNAME, AppNameUtils.getAppName());
             labels.put(Constants.VIPSERVER_TAG, EnvUtil.getSelfVipserverTag());
-            labels.put(Constants.AMORY_TAG, EnvUtil.getSelfAmorayTag());
+            labels.put(Constants.AMORY_TAG, EnvUtil.getSelfAmoryTag());
             labels.put(Constants.LOCATION_TAG, EnvUtil.getSelfLocationTag());
             
             return labels;

File: client/src/test/java/com/alibaba/nacos/client/utils/EnvUtilTest.java
Patch:
@@ -36,7 +36,7 @@ public void testSetSelfEnv() {
         headers.put(Constants.VIPSERVER_TAG, Arrays.asList("b", "2"));
         headers.put(Constants.LOCATION_TAG, Arrays.asList("c", "3"));
         EnvUtil.setSelfEnv(headers);
-        Assert.assertEquals("a,1", EnvUtil.getSelfAmorayTag());
+        Assert.assertEquals("a,1", EnvUtil.getSelfAmoryTag());
         Assert.assertEquals("b,2", EnvUtil.getSelfVipserverTag());
         Assert.assertEquals("c,3", EnvUtil.getSelfLocationTag());
     }

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/OperatorControllerTest.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.SwitchManager;
+import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.databind.node.ObjectNode;
@@ -86,6 +87,7 @@ public void setUp() {
     
     @Test
     public void testPushState() {
+        MetricsMonitor.resetPush();
         ObjectNode objectNode = operatorController.pushState(true, true);
         Assert.assertTrue(objectNode.toString().contains("succeed\":0"));
     }

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -91,7 +91,7 @@ public abstract class BaseTest {
     protected UpgradeJudgement upgradeJudgement;
     
     @Spy
-    private MockEnvironment environment;
+    protected MockEnvironment environment;
     
     @Before
     public void before() {

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/PersistentConsistencyServiceDelegateImplTest.java
Patch:
@@ -64,6 +64,7 @@ public void setUp() throws Exception {
         MockEnvironment environment = new MockEnvironment();
         environment.setProperty(Constants.SUPPORT_UPGRADE_FROM_1X, "true");
         EnvUtil.setEnvironment(environment);
+        EnvUtil.setIsStandalone(true);
         oldPersistentConsistencyServiceDelegate = new PersistentConsistencyServiceDelegateImpl(clusterVersionJudgement,
                 raftConsistencyService, protocolManager);
         

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/CatalogControllerTest.java
Patch:
@@ -97,7 +97,7 @@ public void testServiceDetail() throws Exception {
         assertTrue(actual.contains("\"groupName\":\"test-group-name\""));
         assertTrue(actual.contains("\"metadata\":{}"));
         assertTrue(actual.contains("\"name\":\"test-service\""));
-        assertTrue(actual.contains("\"selector\":{\"type\":\"none\"}"));
+        assertTrue(actual.contains("\"selector\":{\"type\":\"none\",\"contextType\":\"NONE\"}"));
         assertTrue(actual.contains("\"protectThreshold\":12.34"));
         assertTrue(actual.contains("\"clusters\":[{"));
         assertTrue(actual.contains("\"defaultCheckPort\":80"));

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/InstanceControllerV2Test.java
Patch:
@@ -51,7 +51,6 @@ public class InstanceControllerV2Test extends BaseTest {
     public void before() {
         super.before();
         ReflectionTestUtils.setField(instanceControllerV2, "instanceServiceV2", instanceServiceV2);
-        mockInjectPushServer();
         mockmvc = MockMvcBuilders.standaloneSetup(instanceControllerV2).build();
     }
     

File: naming/src/test/java/com/alibaba/nacos/naming/core/DistroMapperTest.java
Patch:
@@ -59,6 +59,7 @@ public class DistroMapperTest {
     public void setUp() {
         ConcurrentSkipListMap<String, Member> serverList = new ConcurrentSkipListMap<>();
         EnvUtil.setEnvironment(new StandardEnvironment());
+        EnvUtil.setIsStandalone(true);
         serverList.put(ip1, Member.builder().ip(ip1).port(port).build());
         serverList.put(ip2, Member.builder().ip(ip2).port(port).build());
         serverList.put(ip3, Member.builder().ip(ip3).port(port).build());
@@ -79,4 +80,4 @@ public void testMapSrv() {
         String server = distroMapper.mapSrv(serviceName);
         assertEquals(server, ip4);
     }
-}
\ No newline at end of file
+}

File: naming/src/test/java/com/alibaba/nacos/naming/pojo/instance/BeatInfoInstanceBuilderTest.java
Patch:
@@ -74,9 +74,8 @@ public void testBuild() {
         assertTrue(actual.isEnabled());
         assertTrue(actual.isHealthy());
         assertThat(actual.getInstanceId(), is("1.1.1.1#8848#c#g@@s"));
-        assertThat(actual.getMetadata().size(), is(2));
+        assertThat(actual.getMetadata().size(), is(1));
         assertThat(actual.getMetadata().get("mock"), is("mock"));
-        assertThat(actual.getMetadata().get("app"), is("DEFAULT"));
         verify(request).getParameter("mock");
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/RowMapperManager.java
Patch:
@@ -167,6 +167,7 @@ public static synchronized <D> void registerRowMapper(String classFullName, RowM
                     mapperMap.get(classFullName).getClass().getCanonicalName(),
                     rowMapper.getClass().getCanonicalName());
         }
+        mapperMap.put(classFullName, rowMapper);
     }
     
     public static final class MapRowMapper implements RowMapper<Map<String, Object>> {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -1970,7 +1970,7 @@ public long addConfigInfoAtomic(final long id, final String srcIp, final String
     public void addConfigTagRelationAtomic(long configId, String tagName, String dataId, String group, String tenant) {
         final String sql = "INSERT INTO config_tags_relation(id,tag_name,tag_type,data_id,group_id,tenant_id) "
                 + "VALUES(?,?,?,?,?,?)";
-        final Object[] args = new Object[] {configId, tagName, null, dataId, group, tenant};
+        final Object[] args = new Object[] {configId, tagName, StringUtils.EMPTY, dataId, group, tenant};
         EmbeddedStorageContextUtils.addSqlContext(sql, args);
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2146,7 +2146,7 @@ public void addConfigTagRelationAtomic(long configId, String tagName, String dat
         try {
             jt.update(
                     "INSERT INTO config_tags_relation(id,tag_name,tag_type,data_id,group_id,tenant_id) VALUES(?,?,?,?,?,?)",
-                    configId, tagName, null, dataId, group, tenant);
+                    configId, tagName, StringUtils.EMPTY, dataId, group, tenant);
         } catch (CannotGetJdbcConnectionException e) {
             LogUtil.FATAL_LOG.error("[db-error] " + e.toString(), e);
             throw e;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -521,7 +521,7 @@ public static void updateMd5(String groupKey, String md5, long lastModifiedTs, S
     public static void updateBetaMd5(String groupKey, String md5, List<String> ips4Beta, long lastModifiedTs,
             String encryptedDataKey) {
         CacheItem cache = makeSure(groupKey, encryptedDataKey, true);
-        if (cache.md54Beta == null || !cache.md54Beta.equals(md5)) {
+        if (cache.md54Beta == null || !cache.md54Beta.equals(md5) || !ips4Beta.equals(cache.ips4Beta)) {
             cache.isBeta = true;
             cache.md54Beta = md5;
             cache.lastModifiedTs4Beta = lastModifiedTs;

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.console.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -26,6 +25,7 @@
 import com.alibaba.nacos.console.enums.NamespaceTypeEnum;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
@@ -86,8 +86,8 @@ public RestResult<List<Namespace>> getNamespaces() {
         namespaces.add(namespace0);
         for (TenantInfo tenantInfo : tenantInfos) {
             int configCount = persistService.configInfoCount(tenantInfo.getTenantId());
-            Namespace namespaceTmp = new Namespace(tenantInfo.getTenantId(), tenantInfo.getTenantName(), DEFAULT_QUOTA,
-                    configCount, NamespaceTypeEnum.CUSTOM.getType());
+            Namespace namespaceTmp = new Namespace(tenantInfo.getTenantId(), tenantInfo.getTenantName(),
+                    tenantInfo.getTenantDesc(), DEFAULT_QUOTA, configCount, NamespaceTypeEnum.CUSTOM.getType());
             namespaces.add(namespaceTmp);
         }
         return RestResultUtils.success(namespaces);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/Limiter.java
Patch:
@@ -40,7 +40,7 @@ public class Limiter {
     private static final Cache<String, RateLimiter> CACHE;
     
     static {
-        CACHE = CacheBuilder.builder()
+        CACHE = CacheBuilder.<String, RateLimiter>builder()
                 .expireNanos(1, TimeUnit.MINUTES)
                 .initializeCapacity(CAPACITY_SIZE)
                 .sync(true)

File: core/src/main/java/com/alibaba/nacos/core/utils/StringPool.java
Patch:
@@ -33,7 +33,7 @@ public class StringPool {
     private static final Cache<String, String> GROUP_KEY_CACHE;
     
     static {
-        GROUP_KEY_CACHE = CacheBuilder.builder().maximumSize(5000000)
+        GROUP_KEY_CACHE = CacheBuilder.<String, String>builder().maximumSize(5000000)
                 .expireNanos(180, TimeUnit.SECONDS)
                 .lru(true)
                 .build();

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/constant/Constants.java
Patch:
@@ -36,6 +36,7 @@ public static class Auth {
         public static final String NACOS_CORE_AUTH_SERVER_IDENTITY_VALUE = "nacos.core.auth.server.identity.value";
         
         public static final String NACOS_CORE_AUTH_ENABLE_USER_AGENT_AUTH_WHITE = "nacos.core.auth.enable.userAgentAuthWhite";
+        
     }
     
     public static class Resource {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -703,7 +703,7 @@ public void startInternal() {
         
         @Override
         public String getName() {
-            return "config_rpc_client";
+            return serverListManager.getName();
         }
         
         @Override

File: client/src/test/java/com/alibaba/nacos/client/config/http/ServerHttpAgentTest.java
Patch:
@@ -59,7 +59,7 @@ public void testGetterAndSetter() throws NacosException {
         Assert.assertNull(encode);
         Assert.assertEquals("namespace1", namespace);
         Assert.assertEquals("namespace1", tenant);
-        Assert.assertEquals("aaa-namespace1", name);
+        Assert.assertEquals("custom-aaa_8080_nacos_serverlist_namespace1", name);
         
     }
     

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java
Patch:
@@ -172,7 +172,7 @@ public void testShutdown() throws NacosException, NoSuchFieldException, IllegalA
         agent1.setAccessible(false);
         
         Assert.assertTrue(clientWorker.isHealthServer());
-        Assert.assertEquals("config_rpc_client", clientWorker.getAgentName());
+        Assert.assertEquals(null, clientWorker.getAgentName());
     }
     
 }

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ServerListManagerTest.java
Patch:
@@ -36,7 +36,7 @@ public void testStart() throws NacosException {
             Assert.fail();
         } catch (NacosException e) {
             Assert.assertEquals(
-                    "fail to get NACOS-server serverlist! env:custom-localhost-0, not connnect url:http://localhost:0/nacos/serverlist",
+                    "fail to get NACOS-server serverlist! env:custom-localhost_0_nacos_serverlist, not connnect url:http://localhost:0/nacos/serverlist",
                     e.getErrMsg());
         }
         mgr.shutdown();

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java
Patch:
@@ -68,7 +68,7 @@ public class ServerListManager implements ServerListFactory, Closeable {
     
     private final List<String> serverList = new ArrayList<>();
     
-    private List<String> serversFromEndpoint = new ArrayList<>();
+    private volatile List<String> serversFromEndpoint = new ArrayList<>();
     
     private ScheduledExecutorService refreshServerListExecutor;
     

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -73,6 +73,8 @@
 @org.springframework.stereotype.Service("distroConsistencyService")
 public class DistroConsistencyServiceImpl implements EphemeralConsistencyService, DistroDataProcessor {
     
+    private static final String ON_RECEIVE_CHECKSUMS_PROCESSING_TAG = "1";
+    
     private final DistroMapper distroMapper;
     
     private final DataStore dataStore;
@@ -175,14 +177,12 @@ public void onRemove(String key) {
      */
     public void onReceiveChecksums(Map<String, String> checksumMap, String server) {
         
-        if (syncChecksumTasks.containsKey(server)) {
+        if (syncChecksumTasks.putIfAbsent(server, ON_RECEIVE_CHECKSUMS_PROCESSING_TAG) != null) {
             // Already in process of this server:
             Loggers.DISTRO.warn("sync checksum task already in process with {}", server);
             return;
         }
         
-        syncChecksumTasks.put(server, "1");
-        
         try {
             
             List<String> toUpdateKeys = new ArrayList<>();

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -92,8 +92,9 @@ public boolean responsible(String responsibleTag) {
             return false;
         }
         
-        int index = servers.indexOf(EnvUtil.getLocalAddress());
-        int lastIndex = servers.lastIndexOf(EnvUtil.getLocalAddress());
+        String localAddress = EnvUtil.getLocalAddress();
+        int index = servers.indexOf(localAddress);
+        int lastIndex = servers.lastIndexOf(localAddress);
         if (lastIndex < 0 || index < 0) {
             return true;
         }

File: sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java
Patch:
@@ -64,7 +64,7 @@ public class EnvUtil {
      */
     public static final String NACOS_HOME_KEY = "nacos.home";
     
-    private static String localAddress = "";
+    private static volatile String localAddress = "";
     
     private static int port = -1;
     

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthConfig.java
Patch:
@@ -28,6 +28,8 @@
 import io.jsonwebtoken.io.DecodingException;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
+import org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.core.env.Environment;
@@ -58,6 +60,7 @@
  * @author Nacos
  */
 @EnableGlobalMethodSecurity(prePostEnabled = true)
+@EnableAutoConfiguration(exclude = LdapAutoConfiguration.class)
 public class NacosAuthConfig extends WebSecurityConfigurerAdapter {
     
     private static final String SECURITY_IGNORE_URLS_SPILT_CHAR = ",";

File: core/src/test/java/com/alibaba/nacos/core/controller/NacosClusterControllerTest.java
Patch:
@@ -115,7 +115,7 @@ public void testSwitchLookup() {
     
     @Test
     public void testLeave() throws Exception {
-        RestResult<String> result = nacosClusterController.leave(Collections.singletonList("1.1.1.1"));
+        RestResult<String> result = nacosClusterController.leave(Collections.singletonList("1.1.1.1"), true);
         Assert.assertEquals("ok", result.getData());
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -546,10 +546,11 @@ public synchronized void recalculateChecksum() {
         List<Instance> ips = allIPs();
         
         StringBuilder ipsString = new StringBuilder();
-        ipsString.append(getServiceString());
+        String serviceString = getServiceString();
+        ipsString.append(serviceString);
         
         if (Loggers.SRV_LOG.isDebugEnabled()) {
-            Loggers.SRV_LOG.debug("service to json: " + getServiceString());
+            Loggers.SRV_LOG.debug("service to json: " + serviceString);
         }
         
         if (CollectionUtils.isNotEmpty(ips)) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -841,10 +841,11 @@ private Map<String, Instance> setValid(List<Instance> oldInstances, Map<String,
     }
     
     public Service getService(String namespaceId, String serviceName) {
-        if (serviceMap.get(namespaceId) == null) {
+        Map<String, Service> service = this.serviceMap.get(namespaceId);
+        if (service == null) {
             return null;
         }
-        return chooseServiceMap(namespaceId).get(serviceName);
+        return service.get(serviceName);
     }
     
     public boolean containService(String namespaceId, String serviceName) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HealthCheckProcessorV2Delegate.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.naming.core.v2.metadata.ClusterMetadata;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
-import com.alibaba.nacos.naming.healthcheck.NoneHealthCheckProcessor;
 import com.alibaba.nacos.naming.healthcheck.extend.HealthCheckExtendProvider;
 import com.alibaba.nacos.naming.healthcheck.v2.HealthCheckTaskV2;
 import org.springframework.beans.factory.annotation.Autowired;

File: core/src/main/java/com/alibaba/nacos/core/config/AbstractDynamicConfig.java
Patch:
@@ -33,7 +33,6 @@ public abstract class AbstractDynamicConfig extends Subscriber<ServerConfigChang
     
     protected AbstractDynamicConfig(String configName) {
         this.configName = configName;
-        resetConfig();
         NotifyCenter.registerSubscriber(this);
     }
     
@@ -47,7 +46,7 @@ public Class<? extends Event> subscribeType() {
         return ServerConfigChangeEvent.class;
     }
     
-    private void resetConfig() {
+    protected void resetConfig() {
         try {
             getConfigFromEnv();
             Loggers.CORE.info("Get {} config from env, {}", configName, printConfig());

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/DistroConfig.java
Patch:
@@ -44,6 +44,7 @@ public class DistroConfig extends AbstractDynamicConfig {
     
     private DistroConfig() {
         super(DISTRO);
+        resetConfig();
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ClientConfig.java
Patch:
@@ -35,6 +35,7 @@ public class ClientConfig extends AbstractDynamicConfig {
     
     private ClientConfig() {
         super(NAMING_CLIENT);
+        resetConfig();
     }
     
     public static ClientConfig getInstance() {

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/PushConfig.java
Patch:
@@ -39,6 +39,7 @@ public class PushConfig extends AbstractDynamicConfig {
     
     private PushConfig() {
         super(PUSH);
+        resetConfig();
     }
     
     @Override

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -263,7 +263,7 @@ public String doGetConfig(HttpServletRequest request, HttpServletResponse respon
                     Pair<String, String> pair = EncryptionHandler.decryptHandler(dataId, encryptedDataKey, fileContent);
                     String decryptContent = pair.getSecond();
                     out = response.getWriter();
-                    out.println(decryptContent);
+                    out.print(decryptContent);
                     out.flush();
                     out.close();
                 }

File: api/src/main/java/com/alibaba/nacos/api/config/ability/ServerConfigAbility.java
Patch:
@@ -26,7 +26,9 @@
  * @version $Id: ServerConfigAbility.java, v 0.1 2021年01月24日 00:09 AM liuzunfei Exp $
  */
 public class ServerConfigAbility implements Serializable {
-    
+
+    private static final long serialVersionUID = -4976152499731684230L;
+
     /**
      * support remote metrics get.
      */

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ClientConfigMetricRequest.java
Patch:
@@ -48,7 +48,9 @@ public void setMetricsKeys(List<MetricsKey> metricsKeys) {
     }
     
     public static class MetricsKey implements Serializable {
-        
+
+        private static final long serialVersionUID = -2731160029960311757L;
+
         String type;
         
         String key;

File: api/src/main/java/com/alibaba/nacos/api/remote/ability/ServerRemoteAbility.java
Patch:
@@ -26,7 +26,9 @@
  * @version $Id: ServerRemoteAbility.java, v 0.1 2021年01月24日 00:09 AM liuzunfei Exp $
  */
 public class ServerRemoteAbility implements Serializable {
-    
+
+    private static final long serialVersionUID = -3069795759506428390L;
+
     /**
      * if support remote connection.
      */

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/ClusterInfo.java
Patch:
@@ -29,7 +29,9 @@
  * @version $Id: ClusterInfo.java, v 0.1 2018-09-17 上午11:36 caogu.wyp Exp $$
  */
 public class ClusterInfo implements Serializable {
-    
+
+    private static final long serialVersionUID = 2146881454057032105L;
+
     private String clusterName;
     
     private AbstractHealthChecker healthChecker;

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/IpAddressInfo.java
Patch:
@@ -26,7 +26,9 @@
  * @version $Id: IpAddressInfo.java, v 0.1 2018-09-17 上午10:52 caogu.wyp Exp $$
  */
 public class IpAddressInfo implements Serializable {
-    
+
+    private static final long serialVersionUID = 6961930421629345179L;
+
     private boolean valid;
     
     private Map<String, String> metadata;

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/ServiceDetailInfo.java
Patch:
@@ -28,7 +28,9 @@
  * @version $Id: ServiceDetailInfo.java, v 0.1 2018-09-17 上午10:47 caogu.wyp Exp $$
  */
 public class ServiceDetailInfo implements Serializable {
-    
+
+    private static final long serialVersionUID = 6351606608785841722L;
+
     private String namespace;
     
     private String serviceName;

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/Subscribers.java
Patch:
@@ -26,7 +26,9 @@
  * @version $Id: Subscribers.java, v 0.1 2019-05-28 下午10:47 nicholas Exp $$
  */
 public class Subscribers implements Serializable {
-    
+
+    private static final long serialVersionUID = -3075690233070417052L;
+
     private List<Subscriber> subscribers;
     
     public List<Subscriber> getSubscribers() {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/ClusterVersionJudgement.java
Patch:
@@ -65,8 +65,8 @@ public void registerObserver(Consumer<Boolean> observer, int priority) {
     }
     
     protected void runVersionListener() {
-        // Single machine mode, do upgrade operation directly.
-        if (EnvUtil.getStandaloneMode()) {
+        // Single machine mode or close upgrade feature, do upgrade operation directly.
+        if (EnvUtil.getStandaloneMode() || !EnvUtil.isSupportUpgradeFrom1X()) {
             notifyAllListener();
             return;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/delay/DoubleWriteEventListener.java
Patch:
@@ -54,7 +54,7 @@ public DoubleWriteEventListener(UpgradeJudgement upgradeJudgement,
         this.upgradeJudgement = upgradeJudgement;
         this.doubleWriteDelayTaskEngine = doubleWriteDelayTaskEngine;
         NotifyCenter.registerSubscriber(this, NamingEventPublisherFactory.getInstance());
-        stopDoubleWrite = EnvUtil.getStandaloneMode();
+        stopDoubleWrite = EnvUtil.getStandaloneMode() || !EnvUtil.isSupportUpgradeFrom1X();
         if (!stopDoubleWrite) {
             Thread doubleWriteEnabledChecker = new DoubleWriteEnabledChecker();
             doubleWriteEnabledChecker.start();

File: sys/src/main/java/com/alibaba/nacos/sys/env/Constants.java
Patch:
@@ -65,4 +65,6 @@ public interface Constants {
     String REQUEST_PATH_SEPARATOR = "-->";
     
     String AVAILABLE_PROCESSORS_BASIC = "nacos.core.sys.basic.processors";
+    
+    String SUPPORT_UPGRADE_FROM_1X = "nacos.core.support.upgrade.from.1x";
 }

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -142,7 +142,8 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
         } catch (IllegalArgumentException e) {
             resp.sendError(HttpServletResponse.SC_BAD_REQUEST, ExceptionUtil.getAllExceptionMsg(e));
         } catch (Exception e) {
-            resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Server failed," + e.getMessage());
+            Loggers.AUTH.warn("[AUTH-FILTER] Server failed: ", e);
+            resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Server failed, " + e.getMessage());
         }
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -144,8 +144,9 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             resp.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,
                     "no such api:" + req.getMethod() + ":" + req.getRequestURI());
         } catch (Exception e) {
+            Loggers.SRV_LOG.warn("[DISTRO-FILTER] Server failed: ", e);
             resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,
-                    "Server failed," + ExceptionUtil.getAllExceptionMsg(e));
+                    "Server failed, " + ExceptionUtil.getAllExceptionMsg(e));
         }
         
     }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ParamUtils.java
Patch:
@@ -32,7 +32,7 @@ public class ParamUtils {
     
     private static final int TAG_MAX_LEN = 16;
     
-    private static final int TANANT_MAX_LEN = 128;
+    private static final int TENANT_MAX_LEN = 128;
     
     private static final String CONFIG_TAGS = "config_tags";
     
@@ -165,7 +165,7 @@ public static void checkTenant(String tenant) {
             if (!isValid(tenant.trim())) {
                 throw new IllegalArgumentException("invalid tenant");
             }
-            if (tenant.length() > TANANT_MAX_LEN) {
+            if (tenant.length() > TENANT_MAX_LEN) {
                 throw new IllegalArgumentException("too long tag, over 128");
             }
         }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ConsistencyService.java
Patch:
@@ -28,7 +28,7 @@
  * User should not be aware of what consistency protocol is being used.
  *
  * <p>In this way, we also provide space for user to extend the underlying consistency protocols, as long as they obey
- * ourconsistency baseline.
+ * our consistency baseline.
  *
  * @author nkorange
  * @since 1.0.0

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -49,7 +49,7 @@ public class Cluster extends com.alibaba.nacos.api.naming.pojo.Cluster implement
     private static final long serialVersionUID = 8940123791150907510L;
     
     /**
-     * a addition for same site routing, can group multiple sites into a region, like Hangzhou, Shanghai, etc.
+     * an addition for same site routing, can group multiple sites into a region, like Hangzhou, Shanghai, etc.
      */
     private String sitegroup = StringUtils.EMPTY;
     
@@ -80,7 +80,7 @@ public Cluster() {
     /**
      * Create a cluster.
      *
-     * <p>the cluster name cannot be null, and only the arabic numerals, letters and endashes are allowed.
+     * <p>the cluster name cannot be null, and only the arabic numerals, letters and underline are allowed.
      *
      * @param clusterName the cluster name
      * @param service     the service to which the current cluster belongs
@@ -446,7 +446,7 @@ public boolean contains(Instance ip) {
     /**
      * validate the current cluster.
      *
-     * <p>the cluster name cannot be null, and only the arabic numerals, letters and endashes are allowed.
+     * <p>the cluster name cannot be null, and only the arabic numerals, letters and underline are allowed.
      *
      * @throws IllegalArgumentException the service is null, or the cluster name is null, or the cluster name is
      *                                  illegal

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataManager.java
Patch:
@@ -69,7 +69,7 @@ public boolean containServiceMetadata(Service service) {
     }
     
     /**
-     * Whether instance metadata metadata for instance of {@link Service}.
+     * Whether instance metadata for instance of {@link Service}.
      *
      * @param service    service
      * @param metadataId instance metadata id
@@ -82,7 +82,7 @@ public boolean containInstanceMetadata(Service service, String metadataId) {
     /**
      * Get service metadata for {@link Service}, which is the original metadata object.
      *
-     * <p>This method should use only query, can't modified metadata.
+     * <p>This method should use only query, can't modify metadata.
      *
      * @param service service
      * @return service metadata
@@ -94,7 +94,7 @@ public Optional<ServiceMetadata> getServiceMetadata(Service service) {
     /**
      * Get instance metadata for instance of {@link Service}, which is the original metadata object.
      *
-     * <p>This method should use only query, can't modified metadata.
+     * <p>This method should use only query, can't modify metadata.
      *
      * @param service    service
      * @param metadataId instance metadata id

File: api/src/test/java/com/alibaba/nacos/api/naming/utils/NamingUtilsTest.java
Patch:
@@ -26,12 +26,12 @@ public class NamingUtilsTest {
     @Test
     public void testGetGroupedNameOptional() {
         String onlyGroupName = NamingUtils.getGroupedNameOptional(StringUtils.EMPTY, "groupA");
-        assertEquals(onlyGroupName, "groupA@@");
+        assertEquals("groupA@@", onlyGroupName);
         
         String onlyServiceName = NamingUtils.getGroupedNameOptional("serviceA", StringUtils.EMPTY);
-        assertEquals(onlyServiceName, "@@serviceA");
+        assertEquals("@@serviceA", onlyServiceName);
         
         String groupNameAndServiceName = NamingUtils.getGroupedNameOptional("serviceA", "groupA");
-        assertEquals(groupNameAndServiceName, "groupA@@serviceA");
+        assertEquals("groupA@@serviceA", groupNameAndServiceName);
     }
 }
\ No newline at end of file

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -107,7 +107,7 @@ public static int getSuitableThreadCount() {
      * @return thread count
      */
     public static int getSuitableThreadCount(int threadMultiple) {
-        final int coreCount = Runtime.getRuntime().availableProcessors();
+        final int coreCount = PropertyUtils.getProcessorsCount();
         int workerCount = 1;
         while (workerCount < coreCount * threadMultiple) {
             workerCount <<= 1;

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/constant/Constants.java
Patch:
@@ -45,6 +45,8 @@ public static class Resource {
         public static final String ANY = "*";
         
         public static final String ACTION = "action";
+    
+        public static final String REQUEST_CLASS = "requestClass";
     }
     
     public static class Identity {

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
 import java.net.URLEncoder;
@@ -55,6 +56,7 @@ public class ConfigSubService {
     
     private ServerMemberManager memberManager;
     
+    @Autowired
     @SuppressWarnings("PMD.ThreadPoolCreationRule")
     public ConfigSubService(ServerMemberManager memberManager) {
         this.memberManager = memberManager;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
 import java.net.URLEncoder;
@@ -55,6 +56,7 @@ public class ConfigSubService {
     
     private ServerMemberManager memberManager;
     
+    @Autowired
     @SuppressWarnings("PMD.ThreadPoolCreationRule")
     public ConfigSubService(ServerMemberManager memberManager) {
         this.memberManager = memberManager;

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -213,7 +213,7 @@ private boolean publishConfigInner(String tenant, String dataId, String group, S
         cr.setType(type);
         configFilterChainManager.doFilter(cr, null);
         content = cr.getContent();
-        String encryptedDataKey = (String) cr.getParameter("encryptedDataKey");
+        String encryptedDataKey = cr.getEncryptedDataKey();
         
         return worker
                 .publishConfig(dataId, group, tenant, appName, tag, betaIps, content, encryptedDataKey, casMd5, type);

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainManager.java
Patch:
@@ -34,7 +34,7 @@
  */
 public class ConfigFilterChainManager implements IConfigFilterChain {
     
-    private final List<IConfigFilter> filters = new ArrayList<IConfigFilter>();
+    private final List<IConfigFilter> filters = new ArrayList<>();
     
     public ConfigFilterChainManager(Properties properties) {
         ServiceLoader<IConfigFilter> configFilters = ServiceLoader.load(IConfigFilter.class);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -1043,7 +1043,7 @@ public boolean publishConfig(String dataId, String group, String tenant, String
                 request.putAdditionalParam(APP_NAME_PARAM, appName);
                 request.putAdditionalParam(BETAIPS_PARAM, betaIps);
                 request.putAdditionalParam(TYPE_PARAM, type);
-                request.putAdditionalParam(ENCRYPTED_DATA_KEY_PARAM, encryptedDataKey);
+                request.putAdditionalParam(ENCRYPTED_DATA_KEY_PARAM, encryptedDataKey == null ? "" : encryptedDataKey);
                 ConfigPublishResponse response = (ConfigPublishResponse) requestProxy(getOneRunningClient(), request);
                 if (!response.isSuccess()) {
                     LOGGER.warn("[{}] [publish-single] fail, dataId={}, group={}, tenant={}, code={}, msg={}",

File: client/src/test/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainTest.java
Patch:
@@ -28,8 +28,9 @@ public void testConfigFilterChain() {
         configFilterChainManager.addFilter(new DemoFilter1());
         configFilterChainManager.addFilter(new DemoFilter2());
         ConfigRequest configRequest = new ConfigRequest();
+        ConfigResponse configResponse = new ConfigResponse();
         try {
-            configFilterChainManager.doFilter(configRequest, null);
+            configFilterChainManager.doFilter(configRequest, configResponse);
             Assert.assertEquals(DemoFilter1.class.getName(), configRequest.getParameter("filter1"));
             Assert.assertEquals(DemoFilter2.class.getName(), configRequest.getParameter("filter2"));
         } catch (NacosException e) {

File: common/src/main/java/com/alibaba/nacos/common/utils/Pair.java
Patch:
@@ -33,7 +33,7 @@ public class Pair<A, B> {
     }
     
     public static <A, B> Pair<A, B> with(A first, B second) {
-        return new Pair<A, B>(first, second);
+        return new Pair<>(first, second);
     }
     
     public A getFirst() {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -77,6 +77,7 @@ public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta me
             final String appName = request.getAdditionParam("appName");
             final String type = request.getAdditionParam("type");
             final String srcUser = request.getAdditionParam("src_user");
+            final String encryptedDataKey = request.getAdditionParam("encryptedDataKey");
             
             // check tenant
             ParamUtils.checkParam(dataId, group, "datumId", content);
@@ -97,10 +98,11 @@ public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta me
             }
             
             final Timestamp time = TimeUtils.getCurrentTime();
-            String betaIps = request.getAdditionParam("betaIps");
             ConfigInfo configInfo = new ConfigInfo(dataId, group, tenant, appName, content);
             configInfo.setMd5(request.getCasMd5());
             configInfo.setType(type);
+            configInfo.setEncryptedDataKey(encryptedDataKey);
+            String betaIps = request.getAdditionParam("betaIps");
             if (StringUtils.isBlank(betaIps)) {
                 if (StringUtils.isBlank(tag)) {
                     if (StringUtils.isNotBlank(request.getCasMd5())) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -295,7 +295,7 @@ private void dumpConfigInfo(DumpAllProcessor dumpAllProcessor) throws IOExceptio
                         String tenant = dg[2];
                         ConfigInfoWrapper configInfo = persistService.queryConfigInfo(dataId, group, tenant);
                         ConfigCacheService.dumpChange(dataId, group, tenant, configInfo.getContent(),
-                                configInfo.getLastModified());
+                                configInfo.getLastModified(), configInfo.getEncryptedDataKey());
                     }
                     LogUtil.DEFAULT_LOG.error("end checkMd5Task");
                 };

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllBetaProcessor.java
Patch:
@@ -54,7 +54,7 @@ public boolean process(NacosTask task) {
                 for (ConfigInfoBetaWrapper cf : page.getPageItems()) {
                     boolean result = ConfigCacheService
                             .dumpBeta(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getContent(),
-                                    cf.getLastModified(), cf.getBetaIps());
+                                    cf.getLastModified(), cf.getBetaIps(), cf.getEncryptedDataKey());
                     LogUtil.DUMP_LOG.info("[dump-all-beta-ok] result={}, {}, {}, length={}, md5={}", result,
                             GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(),
                             cf.getContent().length(), cf.getMd5());

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -69,7 +69,7 @@ public boolean process(NacosTask task) {
                     }
     
                     ConfigCacheService.dump(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getContent(),
-                            cf.getLastModified(), cf.getType());
+                            cf.getLastModified(), cf.getType(), cf.getEncryptedDataKey());
                     
                     final String content = cf.getContent();
                     final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllTagProcessor.java
Patch:
@@ -53,7 +53,7 @@ public boolean process(NacosTask task) {
                 for (ConfigInfoTagWrapper cf : page.getPageItems()) {
                     boolean result = ConfigCacheService
                             .dumpTag(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getTag(), cf.getContent(),
-                                    cf.getLastModified());
+                                    cf.getLastModified(), cf.getEncryptedDataKey());
                     LogUtil.DUMP_LOG.info("[dump-all-Tag-ok] result={}, {}, {}, length={}, md5={}", result,
                             GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(),
                             cf.getContent().length(), cf.getMd5());

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -58,7 +58,7 @@ public interface PersistService {
     String SPOT = ".";
     Object[] EMPTY_ARRAY = new Object[] {};
     @SuppressWarnings("checkstyle:linelength")
-    String SQL_FIND_ALL_CONFIG_INFO = "SELECT id,data_id,group_id,tenant_id,app_name,content,type,md5,gmt_create,gmt_modified,src_user,src_ip,c_desc,c_use,effect,c_schema FROM config_info";
+    String SQL_FIND_ALL_CONFIG_INFO = "SELECT id,data_id,group_id,tenant_id,app_name,content,type,md5,gmt_create,gmt_modified,src_user,src_ip,c_desc,c_use,effect,c_schema,encrypted_data_key FROM config_info";
 
     String SQL_TENANT_INFO_COUNT_BY_TENANT_ID = "SELECT count(1) FROM tenant_info WHERE tenant_id = ?";
     String SQL_FIND_CONFIG_INFO_BY_IDS = "SELECT id,data_id,group_id,tenant_id,app_name,content,md5 FROM config_info WHERE ";

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/EmbeddedStorageContextUtils.java
Patch:
@@ -92,7 +92,7 @@ public static void onModifyConfigInfo(ConfigInfo configInfo, String srcIp, Times
             ConfigDumpEvent event = ConfigDumpEvent.builder().remove(false).namespaceId(configInfo.getTenant())
                     .dataId(configInfo.getDataId()).group(configInfo.getGroup()).isBeta(false)
                     .content(configInfo.getContent()).type(configInfo.getType()).handleIp(srcIp)
-                    .lastModifiedTs(time.getTime()).build();
+                    .lastModifiedTs(time.getTime()).encryptedDataKey(configInfo.getEncryptedDataKey()).build();
             
             Map<String, String> extendInfo = new HashMap<>(2);
             extendInfo.put(Constants.EXTEND_INFO_CONFIG_DUMP_EVENT, JacksonUtils.toJson(event));
@@ -114,7 +114,7 @@ public static void onModifyConfigBetaInfo(ConfigInfo configInfo, String betaIps,
             ConfigDumpEvent event = ConfigDumpEvent.builder().remove(false).namespaceId(configInfo.getTenant())
                     .dataId(configInfo.getDataId()).group(configInfo.getGroup()).isBeta(true).betaIps(betaIps)
                     .content(configInfo.getContent()).type(configInfo.getType()).handleIp(srcIp)
-                    .lastModifiedTs(time.getTime()).build();
+                    .lastModifiedTs(time.getTime()).encryptedDataKey(configInfo.getEncryptedDataKey()).build();
             
             Map<String, String> extendInfo = new HashMap<>(2);
             extendInfo.put(Constants.EXTEND_INFO_CONFIG_DUMP_EVENT, JacksonUtils.toJson(event));

File: config/src/test/java/com/alibaba/nacos/config/server/service/ClientTrackServiceTest.java
Patch:
@@ -41,7 +41,7 @@ public void testTrackClientMd5() {
         String groupKey = GroupKey2.getKey(dataId, group);
         String md5 = "xxxxxxxxxxxxx";
         
-        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis());
+        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis(), "");
         
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
@@ -51,7 +51,7 @@ public void testTrackClientMd5() {
         Assert.assertEquals(1, ClientTrackService.subscriberCount());
         
         //服务端数据更新
-        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis());
+        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis(), "");
         Assert.assertEquals(false, ClientTrackService.isClientUptodate(clientIp).get(groupKey));
     }
     

File: common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java
Patch:
@@ -84,16 +84,17 @@ public void onChanged(String filePath) {
     public NacosAsyncRestTemplate createNacosAsyncRestTemplate() {
         final HttpClientConfig originalRequestConfig = buildHttpClientConfig();
         final DefaultConnectingIOReactor ioreactor = getIoReactor();
+        final RequestConfig defaultConfig = getRequestConfig();
         return new NacosAsyncRestTemplate(assignLogger(), new DefaultAsyncHttpClientRequest(
                 HttpAsyncClients.custom()
                         .addInterceptorLast(new RequestContent(true))
                         .setDefaultIOReactorConfig(getIoReactorConfig())
-                        .setDefaultRequestConfig(getRequestConfig())
+                        .setDefaultRequestConfig(defaultConfig)
                         .setMaxConnTotal(originalRequestConfig.getMaxConnTotal())
                         .setMaxConnPerRoute(originalRequestConfig.getMaxConnPerRoute())
                         .setUserAgent(originalRequestConfig.getUserAgent())
                         .setConnectionManager(getConnectionManager(originalRequestConfig, ioreactor))
-                        .build(), ioreactor));
+                        .build(), ioreactor, defaultConfig));
     }
     
     private DefaultConnectingIOReactor getIoReactor() {

File: common/src/main/java/com/alibaba/nacos/common/http/HttpClientConfig.java
Patch:
@@ -156,7 +156,7 @@ public static final class HttpClientConfigBuilder {
         
         private TimeUnit connTimeToLiveTimeUnit = TimeUnit.MILLISECONDS;
         
-        private int connectionRequestTimeout = -1;
+        private int connectionRequestTimeout = 5000;
         
         private int maxRedirects = 50;
         

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -274,7 +274,7 @@ public static RestResult<String> httpPost(String url, List<String> headers, Map<
             header.addParam(HttpHeaderConsts.ACCEPT_CHARSET, encoding);
             AuthHeaderUtil.addIdentityToHeader(header);
             HttpClientConfig httpClientConfig = HttpClientConfig.builder().setConTimeOutMillis(5000)
-                    .setReadTimeOutMillis(5000).setConnectionRequestTimeout(5000).setMaxRedirects(5).build();
+                    .setReadTimeOutMillis(5000).build();
             return APACHE_SYNC_NACOS_REST_TEMPLATE.postForm(url, httpClientConfig, header, paramValues, String.class);
         } catch (Throwable e) {
             return RestResult.<String>builder().withCode(500).withMsg(e.toString()).build();

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.api.ability.ClientAbilities;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.api.remote.PayloadRegistry;
 import com.alibaba.nacos.api.remote.RequestCallBack;
 import com.alibaba.nacos.api.remote.RequestFuture;
 import com.alibaba.nacos.api.remote.request.ClientDetectionRequest;
@@ -32,6 +31,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.common.lifecycle.Closeable;
 import com.alibaba.nacos.common.remote.ConnectionType;
+import com.alibaba.nacos.common.remote.PayloadRegistry;
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.NumberUtils;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcUtils.java
Patch:
@@ -22,11 +22,11 @@
 import com.alibaba.nacos.api.exception.runtime.NacosSerializationException;
 import com.alibaba.nacos.api.grpc.auto.Metadata;
 import com.alibaba.nacos.api.grpc.auto.Payload;
-import com.alibaba.nacos.api.remote.PayloadRegistry;
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.utils.NetUtils;
+import com.alibaba.nacos.common.remote.PayloadRegistry;
 import com.alibaba.nacos.common.remote.exception.RemoteException;
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.core.JsonProcessingException;

File: common/src/test/java/com/alibaba/nacos/common/remote/PayloadRegistryTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.remote;
+package com.alibaba.nacos.common.remote;
 
 import junit.framework.TestCase;
 import org.junit.Assert;

File: core/src/main/java/com/alibaba/nacos/core/remote/BaseRpcServer.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.core.remote;
 
-import com.alibaba.nacos.api.remote.PayloadRegistry;
 import com.alibaba.nacos.common.remote.ConnectionType;
+import com.alibaba.nacos.common.remote.PayloadRegistry;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
 

File: auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java
Patch:
@@ -96,7 +96,7 @@ protected Resource parseSpecifiedResource(Secured secured) {
      */
     protected Resource useSpecifiedParserToParse(Secured secured, R request) {
         try {
-            return secured.parser().newInstance().parse(request, secured.signType());
+            return secured.parser().newInstance().parse(request, secured);
         } catch (Exception e) {
             Loggers.AUTH.error("Use specified resource parser {} parse resource failed.",
                     secured.parser().getCanonicalName(), e);

File: auth/src/main/java/com/alibaba/nacos/auth/GrpcProtocolAuthService.java
Patch:
@@ -65,7 +65,7 @@ public Resource parseResource(Request request, Secured secured) {
             Loggers.AUTH.warn("Can't find Grpc request resourceParser for type {}", type);
             return useSpecifiedParserToParse(secured, request);
         }
-        return resourceParserMap.get(type).parse(request, type);
+        return resourceParserMap.get(type).parse(request, secured);
     }
     
     @Override

File: auth/src/main/java/com/alibaba/nacos/auth/HttpProtocolAuthService.java
Patch:
@@ -65,7 +65,7 @@ public Resource parseResource(HttpServletRequest request, Secured secured) {
             Loggers.AUTH.warn("Can't find Http request resourceParser for type {} use specified resource parser", type);
             return useSpecifiedParserToParse(secured, request);
         }
-        return resourceParserMap.get(type).parse(request, type);
+        return resourceParserMap.get(type).parse(request, secured);
     }
     
     @Override

File: auth/src/main/java/com/alibaba/nacos/auth/parser/DefaultResourceParser.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.auth.parser;
 
+import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.plugin.auth.api.Resource;
 
 /**
@@ -28,7 +29,7 @@
 public class DefaultResourceParser implements ResourceParser<Object> {
     
     @Override
-    public Resource parse(Object request, String type) {
+    public Resource parse(Object request, Secured secured) {
         return Resource.EMPTY_RESOURCE;
     }
 }

File: auth/src/main/java/com/alibaba/nacos/auth/parser/ResourceParser.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.auth.parser;
 
+import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.plugin.auth.api.Resource;
 
 /**
@@ -31,8 +32,8 @@ public interface ResourceParser<R> {
      * Parse resource from request.
      *
      * @param request request
-     * @param type    request type, like naming or config
+     * @param secured request secured
      * @return resource
      */
-    Resource parse(R request, String type);
+    Resource parse(R request, Secured secured);
 }

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/constant/Constants.java
Patch:
@@ -43,6 +43,8 @@ public static class Resource {
         public static final String SPLITTER = ":";
         
         public static final String ANY = "*";
+        
+        public static final String ACTION = "action";
     }
     
     public static class Identity {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2803,7 +2803,7 @@ public List<ConfigInfoWrapper> queryConfigInfoByNamespace(String tenant) {
         String tenantTmp = StringUtils.isBlank(tenant) ? StringUtils.EMPTY : tenant;
         try {
             return this.jt.query(
-                    "SELECT data_id,group_id,tenant_id,app_name,type FROM config_info_beta WHERE tenant_id=?",
+                    "SELECT data_id,group_id,tenant_id,app_name,type FROM config_info WHERE tenant_id=?",
                     new Object[]{tenantTmp},
                     CONFIG_INFO_WRAPPER_ROW_MAPPER);
         } catch (EmptyResultDataAccessException e) { // Indicates that the data does not exist, returns null.

File: consistency/src/main/java/com/alibaba/nacos/consistency/ProtoMessageUtil.java
Patch:
@@ -40,12 +40,12 @@ public class ProtoMessageUtil {
     public static Message parse(byte[] bytes) {
         Message result;
         try {
-            result = WriteRequest.parseFrom(bytes);
+            result = ReadRequest.parseFrom(bytes);
             return result;
         } catch (Throwable ignore) {
         }
         try {
-            result = ReadRequest.parseFrom(bytes);
+            result = WriteRequest.parseFrom(bytes);
             return result;
         } catch (Throwable ignore) {
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -101,6 +101,8 @@ public class NamingHttpClientProxy extends AbstractNamingClientProxy {
     private static final String CLIENT_IP_PARAM = "clientIP";
     
     private static final String HEALTHY_ONLY_PARAM = "healthyOnly";
+
+    private static final String REGISTER_ENABLE_PARAM = "enable";
     
     private final String namespaceId;
     
@@ -154,7 +156,7 @@ public void registerService(String serviceName, String groupName, Instance insta
         params.put(IP_PARAM, instance.getIp());
         params.put(PORT_PARAM, String.valueOf(instance.getPort()));
         params.put(WEIGHT_PARAM, String.valueOf(instance.getWeight()));
-        params.put("enable", String.valueOf(instance.isEnabled()));
+        params.put(REGISTER_ENABLE_PARAM, String.valueOf(instance.isEnabled()));
         params.put(HEALTHY_PARAM, String.valueOf(instance.isHealthy()));
         params.put(EPHEMERAL_PARAM, String.valueOf(instance.isEphemeral()));
         params.put(META_PARAM, JacksonUtils.toJson(instance.getMetadata()));

File: auth/src/test/java/com/alibaba/nacos/auth/GrpcProtocolAuthServiceTest.java
Patch:
@@ -59,7 +59,6 @@ public void setUp() throws Exception {
         protocolAuthService.initialize();
         mockConfigRequest();
         mockNamingRequest();
-        Mockito.when(authConfigs.isAuthEnabled()).thenReturn(true);
     }
     
     private void mockConfigRequest() {

File: auth/src/test/java/com/alibaba/nacos/auth/HttpProtocolAuthServiceTest.java
Patch:
@@ -64,7 +64,6 @@ public void setUp() throws Exception {
         Mockito.when(request.getParameter(eq("tenant"))).thenReturn("testCNs");
         Mockito.when(request.getParameter(eq(Constants.GROUP))).thenReturn("testCG");
         Mockito.when(request.getParameter(eq(Constants.DATAID))).thenReturn("testD");
-        Mockito.when(authConfigs.isAuthEnabled()).thenReturn(true);
     }
     
     @Test

File: core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java
Patch:
@@ -67,6 +67,9 @@ public Response filter(Request request, RequestMeta meta, Class handlerClazz) th
                 }
                 
                 Secured secured = method.getAnnotation(Secured.class);
+                if (!protocolAuthService.enableAuth(secured)) {
+                    return null;
+                }
                 String clientIp = meta.getClientIp();
                 request.putHeader(Constants.Identity.X_REAL_IP, clientIp);
                 Resource resource = protocolAuthService.parseResource(request, secured);

File: auth/src/main/java/com/alibaba/nacos/auth/parser/http/ConfigHttpResourceParser.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.auth.parser.http;
 
-import com.alibaba.nacos.plugin.auth.constant.Constants;
 import com.alibaba.nacos.common.utils.NamespaceUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
 
@@ -39,13 +38,13 @@ protected String getNamespaceId(HttpServletRequest request) {
     @Override
     protected String getGroup(HttpServletRequest request) {
         String groupName = request.getParameter(com.alibaba.nacos.api.common.Constants.GROUP);
-        return StringUtils.isBlank(groupName) ? Constants.Resource.ANY : groupName;
+        return StringUtils.isBlank(groupName) ? StringUtils.EMPTY : groupName;
     }
     
     @Override
     protected String getResourceName(HttpServletRequest request) {
         String dataId = request.getParameter(com.alibaba.nacos.api.common.Constants.DATAID);
-        return StringUtils.isBlank(dataId) ? Constants.Resource.ANY : dataId;
+        return StringUtils.isBlank(dataId) ? StringUtils.EMPTY : dataId;
     }
     
     @Override

File: auth/src/test/java/com/alibaba/nacos/auth/parser/http/ConfigHttpResourceParserTest.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.auth.parser.http;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.plugin.auth.api.Resource;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.plugin.auth.api.Resource;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -73,7 +73,7 @@ public void testParseWithoutGroup() {
         Mockito.when(request.getParameter(eq(Constants.DATAID))).thenReturn("testD");
         Resource actual = resourceParser.parse(request, Constants.Config.CONFIG_MODULE);
         assertEquals("testNs", actual.getNamespaceId());
-        assertEquals(com.alibaba.nacos.plugin.auth.constant.Constants.Resource.ANY, actual.getGroup());
+        assertEquals(StringUtils.EMPTY, actual.getGroup());
         assertEquals("testD", actual.getName());
         assertEquals(Constants.Config.CONFIG_MODULE, actual.getType());
     }
@@ -85,7 +85,7 @@ public void testParseWithoutDataId() {
         Resource actual = resourceParser.parse(request, Constants.Config.CONFIG_MODULE);
         assertEquals("testNs", actual.getNamespaceId());
         assertEquals("testG", actual.getGroup());
-        assertEquals(com.alibaba.nacos.plugin.auth.constant.Constants.Resource.ANY, actual.getName());
+        assertEquals(StringUtils.EMPTY, actual.getName());
         assertEquals(Constants.Config.CONFIG_MODULE, actual.getType());
     }
 }

File: auth/src/main/java/com/alibaba/nacos/auth/AbstractProtocolAuthService.java
Patch:
@@ -46,14 +46,14 @@ protected AbstractProtocolAuthService(AuthConfigs authConfigs) {
     }
     
     @Override
-    public boolean validateIdentity(IdentityContext identityContext) throws AccessException {
+    public boolean validateIdentity(IdentityContext identityContext, Resource resource) throws AccessException {
         if (!authConfigs.isAuthEnabled()) {
             return true;
         }
         Optional<AuthPluginService> authPluginService = AuthPluginManager.getInstance()
                 .findAuthServiceSpiImpl(authConfigs.getNacosAuthSystemType());
         if (authPluginService.isPresent()) {
-            return authPluginService.get().validateIdentity(identityContext);
+            return authPluginService.get().validateIdentity(identityContext, resource);
         }
         Loggers.AUTH.warn("Can't find auth plugin for type {}, please add plugin to classpath or set {} as false",
                 authConfigs.getNacosAuthSystemType(), Constants.Auth.NACOS_CORE_AUTH_ENABLED);

File: auth/src/main/java/com/alibaba/nacos/auth/ProtocolAuthService.java
Patch:
@@ -55,16 +55,17 @@ public interface ProtocolAuthService<R> {
      * Validate identity whether is legal.
      *
      * @param identityContext identity context
+     * @param resource resource
      * @return {@code true} if legal, otherwise {@code false}
      * @throws AccessException exception during validating
      */
-    boolean validateIdentity(IdentityContext identityContext) throws AccessException;
+    boolean validateIdentity(IdentityContext identityContext, Resource resource) throws AccessException;
     
     /**
      * Validate identity whether had permission for the resource and action.
      *
      * @param identityContext identity context
-     * @param permission      permssion include resource and action
+     * @param permission      permission include resource and action
      * @return {@code true} if legal, otherwise {@code false}
      * @throws AccessException exception during validating
      */

File: auth/src/test/java/com/alibaba/nacos/auth/GrpcProtocolAuthServiceTest.java
Patch:
@@ -130,14 +130,14 @@ public void testParseIdentity() {
     @Test
     public void testValidateIdentityWithoutPlugin() throws AccessException {
         IdentityContext identityContext = new IdentityContext();
-        assertTrue(protocolAuthService.validateIdentity(identityContext));
+        assertTrue(protocolAuthService.validateIdentity(identityContext, Resource.EMPTY_RESOURCE));
     }
     
     @Test
     public void testValidateIdentityWithPlugin() throws AccessException {
         Mockito.when(authConfigs.getNacosAuthSystemType()).thenReturn(MockAuthPluginService.TEST_PLUGIN);
         IdentityContext identityContext = new IdentityContext();
-        assertFalse(protocolAuthService.validateIdentity(identityContext));
+        assertFalse(protocolAuthService.validateIdentity(identityContext, Resource.EMPTY_RESOURCE));
     }
     
     @Test

File: auth/src/test/java/com/alibaba/nacos/auth/HttpProtocolAuthServiceTest.java
Patch:
@@ -120,14 +120,14 @@ public void testParseIdentity() {
     @Test
     public void testValidateIdentityWithoutPlugin() throws AccessException {
         IdentityContext identityContext = new IdentityContext();
-        assertTrue(httpProtocolAuthService.validateIdentity(identityContext));
+        assertTrue(httpProtocolAuthService.validateIdentity(identityContext, Resource.EMPTY_RESOURCE));
     }
     
     @Test
     public void testValidateIdentityWithPlugin() throws AccessException {
         Mockito.when(authConfigs.getNacosAuthSystemType()).thenReturn(MockAuthPluginService.TEST_PLUGIN);
         IdentityContext identityContext = new IdentityContext();
-        assertFalse(httpProtocolAuthService.validateIdentity(identityContext));
+        assertFalse(httpProtocolAuthService.validateIdentity(identityContext, Resource.EMPTY_RESOURCE));
     }
     
     @Test

File: auth/src/test/java/com/alibaba/nacos/auth/context/GrpcIdentityContextBuilderTest.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.auth.config.AuthConfigs;
+import com.alibaba.nacos.plugin.auth.constant.Constants;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -56,6 +57,7 @@ public void setUp() throws Exception {
         Map<String, String> headers = new HashMap<>();
         headers.put(IDENTITY_TEST_KEY, IDENTITY_TEST_VALUE);
         when(request.getHeaders()).thenReturn(headers);
+        when(request.getHeader(Constants.Identity.X_REAL_IP)).thenReturn("1.1.1.1");
     }
     
     @Test
@@ -69,5 +71,6 @@ public void testBuildWithoutPlugin() {
     public void testBuild() {
         IdentityContext actual = identityContextBuilder.build(request);
         assertEquals(IDENTITY_TEST_VALUE, actual.getParameter(IDENTITY_TEST_KEY));
+        assertEquals("1.1.1.1", actual.getParameter(Constants.Identity.REMOTE_IP));
     }
 }

File: auth/src/test/java/com/alibaba/nacos/auth/context/HtppIdentityContextBuilderTest.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.auth.config.AuthConfigs;
+import com.alibaba.nacos.plugin.auth.constant.Constants;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -75,6 +76,7 @@ public void testBuildWithHeader() {
         mockParameter(false);
         IdentityContext actual = identityContextBuilder.build(request);
         assertEquals(IDENTITY_TEST_VALUE, actual.getParameter(IDENTITY_TEST_KEY));
+        assertEquals("1.1.1.1", actual.getParameter(Constants.Identity.REMOTE_IP));
     }
     
     @Test
@@ -91,6 +93,7 @@ private void mockHeader(boolean contained) {
             when(headerNames.hasMoreElements()).thenReturn(true, false);
             when(headerNames.nextElement()).thenReturn(IDENTITY_TEST_KEY, (String) null);
             when(request.getHeader(IDENTITY_TEST_KEY)).thenReturn(IDENTITY_TEST_VALUE);
+            when(request.getHeader(Constants.Identity.X_REAL_IP)).thenReturn("1.1.1.1");
         }
     }
     

File: auth/src/test/java/com/alibaba/nacos/auth/mock/MockAuthPluginService.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.auth.mock;
 
+import com.alibaba.nacos.plugin.auth.api.Resource;
 import com.alibaba.nacos.plugin.auth.spi.server.AuthPluginService;
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.plugin.auth.api.Permission;
@@ -36,7 +37,7 @@ public Collection<String> identityNames() {
     }
     
     @Override
-    public boolean validateIdentity(IdentityContext identityContext) throws AccessException {
+    public boolean validateIdentity(IdentityContext identityContext, Resource resource) throws AccessException {
         return false;
     }
     

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -115,7 +115,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
                 Secured secured = method.getAnnotation(Secured.class);
                 Resource resource = protocolAuthService.parseResource(req, secured);
                 IdentityContext identityContext = protocolAuthService.parseIdentity(req);
-                boolean result = protocolAuthService.validateIdentity(identityContext);
+                boolean result = protocolAuthService.validateIdentity(identityContext, resource);
                 if (!result) {
                     // TODO Get reason of failure
                     throw new AccessException("Validate Identity failed.");

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.plugin.auth.impl;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.plugin.auth.api.Resource;
 import com.alibaba.nacos.plugin.auth.impl.users.User;
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.plugin.auth.api.Permission;
@@ -57,7 +58,7 @@ public Collection<String> identityNames() {
     }
     
     @Override
-    public boolean validateIdentity(IdentityContext identityContext) throws AccessException {
+    public boolean validateIdentity(IdentityContext identityContext, Resource resource) throws AccessException {
         checkNacosAuthManager();
         User user = nacosAuthManager.login(identityContext);
         identityContext.setParameter(USER_IDENTITY_PARAM_KEY, user);

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/spi/server/AuthPluginService.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.plugin.auth.api.Permission;
+import com.alibaba.nacos.plugin.auth.api.Resource;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
 
 import java.util.Collection;
@@ -40,10 +41,11 @@ public interface AuthPluginService {
      * To validate whether the identity context from request is legal or illegal.
      *
      * @param identityContext where we can find the user information
+     * @param resource        resource about this user information
      * @return {@code true} if legal, otherwise {@code false}
      * @throws AccessException if authentication is failed
      */
-    boolean validateIdentity(IdentityContext identityContext) throws AccessException;
+    boolean validateIdentity(IdentityContext identityContext, Resource resource) throws AccessException;
     
     /**
      * Validate the identity whether has the resource authority.

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -90,10 +90,10 @@ public static Member singleParse(String member) {
         }
         
         Member target = Member.builder().ip(address).port(port).state(NodeState.UP).build();
-        
         Map<String, Object> extendInfo = new HashMap<>(4);
         // The Raft Port information needs to be set by default
         extendInfo.put(MemberMetaDataConstants.RAFT_PORT, String.valueOf(calculateRaftPort(target)));
+        extendInfo.put(MemberMetaDataConstants.READY_TO_UPGRADE, true);
         target.setExtendInfo(extendInfo);
         return target;
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.api.exception.runtime.NacosLoadException;
 import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
 import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientManager;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
@@ -85,6 +86,8 @@ public ServerListManager(Properties properties, String namespace) {
         initServerAddr(properties);
         if (!serverList.isEmpty()) {
             currentIndex.set(new Random().nextInt(serverList.size()));
+        } else {
+            throw new NacosLoadException("serverList is empty,please check configuration");
         }
     }
     

File: client/src/test/java/com/alibaba/nacos/client/naming/NacosNamingMaintainServiceTest.java
Patch:
@@ -62,13 +62,14 @@ public class NacosNamingMaintainServiceTest {
     public void setUp() throws Exception {
         Properties prop = new Properties();
         prop.setProperty(PropertyKeyConst.NAMESPACE, "public");
+        prop.setProperty("serverAddr", "localhost");
+
         nacosNamingMaintainService = new NacosNamingMaintainService(prop);
-        
         serverProxy = mock(NamingHttpClientProxy.class);
         serverListManager = mock(ServerListManager.class);
         securityProxy = mock(SecurityProxy.class);
         executorService = mock(ScheduledExecutorService.class);
-        
+
         Field serverProxyField = NacosNamingMaintainService.class.getDeclaredField("serverProxy");
         serverProxyField.setAccessible(true);
         serverProxyField.set(nacosNamingMaintainService, serverProxy);

File: client/src/test/java/com/alibaba/nacos/client/naming/NacosNamingServiceTest.java
Patch:
@@ -61,6 +61,7 @@ public class NacosNamingServiceTest {
     @Before
     public void before() throws NoSuchFieldException, NacosException, IllegalAccessException {
         Properties prop = new Properties();
+        prop.setProperty("serverAddr", "localhost");
         prop.put(PropertyKeyConst.NAMESPACE, "test");
         client = new NacosNamingService(prop);
         // inject proxy

File: auth/src/main/java/com/alibaba/nacos/auth/util/AuthHeaderUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.auth.util;
 
-import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;

File: auth/src/test/java/com/alibaba/nacos/auth/config/AuthConfigsTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.common;
+package com.alibaba.nacos.auth.config;
 
 import com.alibaba.nacos.common.event.ServerConfigChangeEvent;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -44,6 +44,7 @@ public class AuthConfigsTest {
     public void setUp() throws Exception {
         environment = new MockEnvironment();
         EnvUtil.setEnvironment(environment);
+        environment.setProperty("nacos.core.auth.plugin.test.key", "test");
         authConfigs = new AuthConfigs();
     }
     
@@ -54,6 +55,7 @@ public void testUpgradeFromEvent() {
         environment.setProperty("nacos.core.auth.server.identity.key", TEST_SERVER_IDENTITY_KEY);
         environment.setProperty("nacos.core.auth.server.identity.value", TEST_SERVER_IDENTITY_VALUE);
         environment.setProperty("nacos.core.auth.enable.userAgentAuthWhite", String.valueOf(TEST_ENABLE_UA_WHITE));
+        
         authConfigs.onEvent(ServerConfigChangeEvent.newEvent());
         assertEquals(TEST_AUTH_ENABLED, authConfigs.isAuthEnabled());
         assertEquals(TEST_CACHING_ENABLED, authConfigs.isCachingEnabled());

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Credential Listener.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -59,7 +59,7 @@ public CredentialWatcher(String appName, CredentialService serviceInstance) {
         loadCredential(true);
         
         executor = ExecutorFactory
-                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.identify.watcher"));
+                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.auth.ram.identify.watcher"));
         
         executor.scheduleWithFixedDelay(new Runnable() {
             private long modified = 0;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/Credentials.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Credentials.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/IdentifyConstants.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Identify Constants.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/SpasCredential.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Spas Credential Interface.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/SpasCredentialLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Spas Credential Loader.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/utils/SpasAdapter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.impl;
+package com.alibaba.nacos.client.auth.ram.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.identify.CredentialService;
+import com.alibaba.nacos.client.auth.ram.identify.CredentialService;
 import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialServiceTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import junit.framework.TestCase;
 import org.junit.Assert;
@@ -143,4 +143,4 @@ public void testSetSecretKey() {
         Assert.assertEquals("sk1", credentialService1.getSecretKey());
     }
     
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcherTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -34,4 +34,4 @@ public void stop() throws NoSuchFieldException, IllegalAccessException {
         ScheduledExecutorService executor = (ScheduledExecutorService) executorField.get(watcher);
         Assert.assertTrue(executor.isShutdown());
     }
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialsTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -79,4 +79,4 @@ public void testIdentical() {
         //then
         Assert.assertTrue(actual);
     }
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/StsConfigTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.After;
 import org.junit.Assert;
@@ -89,4 +89,4 @@ public void testIsOnTrue() {
         Assert.assertTrue(stsOn);
     }
     
-}
\ No newline at end of file
+}

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.notify.NotifyCenter;

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -22,13 +22,13 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
-import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.StringPool;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -47,7 +47,7 @@ public class ConfigChangeBatchListenRequestHandler
     
     @Override
     @TpsControl(pointName = "ConfigListen")
-    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
+    @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
     public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configChangeListenRequest, RequestMeta meta)
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.exception;
 
-import com.alibaba.nacos.auth.exception.AccessException;
+import com.alibaba.nacos.plugin.auth.exception.AccessException;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.Commons;

File: core/src/main/java/com/alibaba/nacos/core/code/condition/ParamRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import org.springframework.util.ObjectUtils;
 

File: core/src/main/java/com/alibaba/nacos/core/code/condition/PathRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;

File: core/src/main/java/com/alibaba/nacos/core/controller/ServerLoaderController.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtil;

File: core/src/main/java/com/alibaba/nacos/core/controller/v2/CoreOpsV2Controller.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller.v2;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.Beta;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;

File: core/src/test/java/com/alibaba/nacos/core/code/condition/ParamRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import org.junit.Assert;
 import org.junit.Before;

File: core/src/test/java/com/alibaba/nacos/core/code/condition/PathRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import org.junit.Assert;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -22,11 +22,10 @@
 import com.alibaba.nacos.api.naming.remote.response.InstanceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
-import com.alibaba.nacos.naming.web.NamingResourceParser;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.stereotype.Component;
 
 /**
@@ -44,7 +43,7 @@ public InstanceRequestHandler(EphemeralClientOperationServiceImpl clientOperatio
     }
     
     @Override
-    @Secured(action = ActionTypes.WRITE, parser = NamingResourceParser.class)
+    @Secured(action = ActionTypes.WRITE)
     public InstanceResponse handle(InstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service
                 .newService(request.getNamespace(), request.getGroupName(), request.getServiceName(), true);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -21,12 +21,11 @@
 import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.utils.ServiceUtil;
-import com.alibaba.nacos.naming.web.NamingResourceParser;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.stereotype.Component;
 
 import java.util.Collection;
@@ -44,7 +43,7 @@
 public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest, ServiceListResponse> {
     
     @Override
-    @Secured(action = ActionTypes.READ, parser = NamingResourceParser.class)
+    @Secured(action = ActionTypes.READ)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());
         ServiceListResponse result = ServiceListResponse.buildSuccessResponse(0, new LinkedList<>());

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/CustomAuthenticationProvider.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
-import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/JwtAuthenticationEntryPoint.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthSystemTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.common;
+package com.alibaba.nacos.plugin.auth.impl.constant;
 
 /**
  * Types of all auth implementations.

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/RoleInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/RolePersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/UserPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
 
 import java.util.List;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
-
-import com.alibaba.nacos.auth.model.User;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 /**
  * Nacos User.

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetails.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.model;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/utils/PasswordEncoderUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.utils;
+package com.alibaba.nacos.plugin.auth.impl.utils;
 
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedPermissionPersistServiceImplTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -84,4 +84,4 @@ public void testDeletePermission() {
         
         Mockito.verify(databaseOperate).blockUpdate();
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -100,4 +100,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedUserPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalPermissionPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -82,4 +82,4 @@ public void testDeletePermission() {
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -99,4 +99,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
\ No newline at end of file
+}

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/constant/ActionTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.common;
+package com.alibaba.nacos.plugin.auth.constant;
 
 /**
  * Resource action type definitions.
@@ -33,7 +33,7 @@ public enum ActionTypes {
      */
     WRITE("w");
     
-    private String action;
+    private final String action;
     
     ActionTypes(String action) {
         this.action = action;

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/exception/AccessException.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.exception;
+package com.alibaba.nacos.plugin.auth.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
 

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/AuthBase.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.auth.RoleInfo;
+import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -18,8 +18,8 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
+import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: auth/src/main/java/com/alibaba/nacos/auth/common/ActionTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.constant;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Resource action type definitions.
@@ -33,7 +33,7 @@ public enum ActionTypes {
      */
     WRITE("w");
     
-    private final String action;
+    private String action;
     
     ActionTypes(String action) {
         this.action = action;

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthSystemTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.constant;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Types of all auth implementations.

File: auth/src/main/java/com/alibaba/nacos/auth/exception/AccessException.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.exception;
+package com.alibaba.nacos.auth.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
 

File: auth/src/main/java/com/alibaba/nacos/auth/model/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.users;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 

File: auth/src/main/java/com/alibaba/nacos/auth/util/AuthHeaderUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.auth.util;
 
-import com.alibaba.nacos.auth.config.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;

File: auth/src/test/java/com/alibaba/nacos/auth/common/AuthConfigsTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.config;
+package com.alibaba.nacos.auth.common;
 
 import com.alibaba.nacos.common.event.ServerConfigChangeEvent;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -44,7 +44,6 @@ public class AuthConfigsTest {
     public void setUp() throws Exception {
         environment = new MockEnvironment();
         EnvUtil.setEnvironment(environment);
-        environment.setProperty("nacos.core.auth.plugin.test.key", "test");
         authConfigs = new AuthConfigs();
     }
     
@@ -55,7 +54,6 @@ public void testUpgradeFromEvent() {
         environment.setProperty("nacos.core.auth.server.identity.key", TEST_SERVER_IDENTITY_KEY);
         environment.setProperty("nacos.core.auth.server.identity.value", TEST_SERVER_IDENTITY_VALUE);
         environment.setProperty("nacos.core.auth.enable.userAgentAuthWhite", String.valueOf(TEST_ENABLE_UA_WHITE));
-        
         authConfigs.onEvent(ServerConfigChangeEvent.newEvent());
         assertEquals(TEST_AUTH_ENABLED, authConfigs.isAuthEnabled());
         assertEquals(TEST_CACHING_ENABLED, authConfigs.isCachingEnabled());

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.utils;
+package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.auth.ram.identify.CredentialService;
+import com.alibaba.nacos.client.identify.CredentialService;
 import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Credential Listener.

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialWatcher.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -59,7 +59,7 @@ public CredentialWatcher(String appName, CredentialService serviceInstance) {
         loadCredential(true);
         
         executor = ExecutorFactory
-                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.auth.ram.identify.watcher"));
+                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.identify.watcher"));
         
         executor.scheduleWithFixedDelay(new Runnable() {
             private long modified = 0;

File: client/src/main/java/com/alibaba/nacos/client/identify/Credentials.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Credentials.

File: client/src/main/java/com/alibaba/nacos/client/identify/IdentifyConstants.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Identify Constants.

File: client/src/main/java/com/alibaba/nacos/client/identify/SpasCredential.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Spas Credential Interface.

File: client/src/main/java/com/alibaba/nacos/client/identify/SpasCredentialLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Spas Credential Loader.

File: client/src/main/java/com/alibaba/nacos/client/identify/StsConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/test/java/com/alibaba/nacos/client/identify/CredentialServiceTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import junit.framework.TestCase;
 import org.junit.Assert;
@@ -143,4 +143,4 @@ public void testSetSecretKey() {
         Assert.assertEquals("sk1", credentialService1.getSecretKey());
     }
     
-}
+}
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/identify/CredentialWatcherTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -34,4 +34,4 @@ public void stop() throws NoSuchFieldException, IllegalAccessException {
         ScheduledExecutorService executor = (ScheduledExecutorService) executorField.get(watcher);
         Assert.assertTrue(executor.isShutdown());
     }
-}
+}
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/identify/CredentialsTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -79,4 +79,4 @@ public void testIdentical() {
         //then
         Assert.assertTrue(actual);
     }
-}
+}
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/identify/StsConfigTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import org.junit.After;
 import org.junit.Assert;
@@ -89,4 +89,4 @@ public void testIsOnTrue() {
         Assert.assertTrue(stsOn);
     }
     
-}
+}
\ No newline at end of file

File: config/src/main/java/com/alibaba/nacos/config/server/auth/PermissionInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import java.io.Serializable;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/PermissionPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RoleInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import java.io.Serializable;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RolePersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/UserPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.config.server.model.User;
 
 import java.util.List;
 

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.notify.NotifyCenter;

File: config/src/main/java/com/alibaba/nacos/config/server/model/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.model;
 
 import java.io.Serializable;
 

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -22,13 +22,13 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.StringPool;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
-import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -47,7 +47,7 @@ public class ConfigChangeBatchListenRequestHandler
     
     @Override
     @TpsControl(pointName = "ConfigListen")
-    @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
+    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
     public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configChangeListenRequest, RequestMeta meta)
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());

File: config/src/test/java/com/alibaba/nacos/config/server/auth/EmbeddedPermissionPersistServiceImplTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -84,4 +84,4 @@ public void testDeletePermission() {
         
         Mockito.verify(databaseOperate).blockUpdate();
     }
-}
+}
\ No newline at end of file

File: config/src/test/java/com/alibaba/nacos/config/server/auth/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -100,4 +100,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
+}
\ No newline at end of file

File: config/src/test/java/com/alibaba/nacos/config/server/auth/EmbeddedUserPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -82,4 +82,4 @@ public void testDeletePermission() {
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");
     }
-}
+}
\ No newline at end of file

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -99,4 +99,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
+}
\ No newline at end of file

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.exception;
 
-import com.alibaba.nacos.plugin.auth.exception.AccessException;
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.Commons;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/CustomAuthenticationProvider.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl;
+package com.alibaba.nacos.console.security.nacos;
 
-import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/JwtAuthenticationEntryPoint.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl;
+package com.alibaba.nacos.console.security.nacos;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUser.java
Patch:
@@ -14,7 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.users;
+package com.alibaba.nacos.console.security.nacos.users;
+
+import com.alibaba.nacos.auth.model.User;
 
 /**
  * Nacos User.

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetails.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.users;
+package com.alibaba.nacos.console.security.nacos.users;
 
-import com.alibaba.nacos.plugin.auth.impl.persistence.User;
+import com.alibaba.nacos.config.server.model.User;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;

File: console/src/main/java/com/alibaba/nacos/console/utils/PasswordEncoderUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.utils;
+package com.alibaba.nacos.console.utils;
 
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/ParamRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import org.springframework.util.ObjectUtils;
 

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/PathRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;

File: core/src/main/java/com/alibaba/nacos/core/controller/ServerLoaderController.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtil;

File: core/src/main/java/com/alibaba/nacos/core/controller/v2/CoreOpsV2Controller.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller.v2;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.Beta;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;

File: core/src/test/java/com/alibaba/nacos/core/auth/condition/ParamRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import org.junit.Assert;
 import org.junit.Before;

File: core/src/test/java/com/alibaba/nacos/core/auth/condition/PathRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import org.junit.Assert;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -22,10 +22,11 @@
 import com.alibaba.nacos.api.naming.remote.response.InstanceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.naming.web.NamingResourceParser;
 import org.springframework.stereotype.Component;
 
 /**
@@ -43,7 +44,7 @@ public InstanceRequestHandler(EphemeralClientOperationServiceImpl clientOperatio
     }
     
     @Override
-    @Secured(action = ActionTypes.WRITE)
+    @Secured(action = ActionTypes.WRITE, parser = NamingResourceParser.class)
     public InstanceResponse handle(InstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service
                 .newService(request.getNamespace(), request.getGroupName(), request.getServiceName(), true);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -21,11 +21,12 @@
 import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.utils.ServiceUtil;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.naming.web.NamingResourceParser;
 import org.springframework.stereotype.Component;
 
 import java.util.Collection;
@@ -43,7 +44,7 @@
 public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest, ServiceListResponse> {
     
     @Override
-    @Secured(action = ActionTypes.READ)
+    @Secured(action = ActionTypes.READ, parser = NamingResourceParser.class)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());
         ServiceListResponse result = ServiceListResponse.buildSuccessResponse(0, new LinkedList<>());

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/AuthBase.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.auth.config.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
+import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -18,8 +18,8 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.plugin.auth.impl.persistence.User;
-import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
+import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: auth/src/main/java/com/alibaba/nacos/auth/common/ActionTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.constant;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Resource action type definitions.
@@ -33,7 +33,7 @@ public enum ActionTypes {
      */
     WRITE("w");
     
-    private final String action;
+    private String action;
     
     ActionTypes(String action) {
         this.action = action;

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthSystemTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.constant;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Types of all auth implementations.

File: auth/src/main/java/com/alibaba/nacos/auth/exception/AccessException.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.exception;
+package com.alibaba.nacos.auth.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
 

File: auth/src/main/java/com/alibaba/nacos/auth/model/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.users;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 

File: auth/src/main/java/com/alibaba/nacos/auth/util/AuthHeaderUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.auth.util;
 
-import com.alibaba.nacos.auth.config.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;

File: auth/src/test/java/com/alibaba/nacos/auth/common/AuthConfigsTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.config;
+package com.alibaba.nacos.auth.common;
 
 import com.alibaba.nacos.common.event.ServerConfigChangeEvent;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -44,7 +44,6 @@ public class AuthConfigsTest {
     public void setUp() throws Exception {
         environment = new MockEnvironment();
         EnvUtil.setEnvironment(environment);
-        environment.setProperty("nacos.core.auth.plugin.test.key", "test");
         authConfigs = new AuthConfigs();
     }
     
@@ -55,7 +54,6 @@ public void testUpgradeFromEvent() {
         environment.setProperty("nacos.core.auth.server.identity.key", TEST_SERVER_IDENTITY_KEY);
         environment.setProperty("nacos.core.auth.server.identity.value", TEST_SERVER_IDENTITY_VALUE);
         environment.setProperty("nacos.core.auth.enable.userAgentAuthWhite", String.valueOf(TEST_ENABLE_UA_WHITE));
-        
         authConfigs.onEvent(ServerConfigChangeEvent.newEvent());
         assertEquals(TEST_AUTH_ENABLED, authConfigs.isAuthEnabled());
         assertEquals(TEST_CACHING_ENABLED, authConfigs.isCachingEnabled());

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.utils;
+package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.auth.ram.identify.CredentialService;
+import com.alibaba.nacos.client.identify.CredentialService;
 import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Credential Listener.

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialWatcher.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -59,7 +59,7 @@ public CredentialWatcher(String appName, CredentialService serviceInstance) {
         loadCredential(true);
         
         executor = ExecutorFactory
-                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.auth.ram.identify.watcher"));
+                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.identify.watcher"));
         
         executor.scheduleWithFixedDelay(new Runnable() {
             private long modified = 0;

File: client/src/main/java/com/alibaba/nacos/client/identify/Credentials.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Credentials.

File: client/src/main/java/com/alibaba/nacos/client/identify/IdentifyConstants.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Identify Constants.

File: client/src/main/java/com/alibaba/nacos/client/identify/SpasCredential.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Spas Credential Interface.

File: client/src/main/java/com/alibaba/nacos/client/identify/SpasCredentialLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 /**
  * Spas Credential Loader.

File: client/src/main/java/com/alibaba/nacos/client/identify/StsConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/test/java/com/alibaba/nacos/client/identify/CredentialServiceTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import junit.framework.TestCase;
 import org.junit.Assert;
@@ -143,4 +143,4 @@ public void testSetSecretKey() {
         Assert.assertEquals("sk1", credentialService1.getSecretKey());
     }
     
-}
+}
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/identify/CredentialWatcherTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -34,4 +34,4 @@ public void stop() throws NoSuchFieldException, IllegalAccessException {
         ScheduledExecutorService executor = (ScheduledExecutorService) executorField.get(watcher);
         Assert.assertTrue(executor.isShutdown());
     }
-}
+}
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/identify/CredentialsTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -79,4 +79,4 @@ public void testIdentical() {
         //then
         Assert.assertTrue(actual);
     }
-}
+}
\ No newline at end of file

File: client/src/test/java/com/alibaba/nacos/client/identify/StsConfigTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.ram.identify;
+package com.alibaba.nacos.client.identify;
 
 import org.junit.After;
 import org.junit.Assert;
@@ -89,4 +89,4 @@ public void testIsOnTrue() {
         Assert.assertTrue(stsOn);
     }
     
-}
+}
\ No newline at end of file

File: config/src/main/java/com/alibaba/nacos/config/server/auth/PermissionInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import java.io.Serializable;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/PermissionPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RoleInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import java.io.Serializable;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RolePersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: config/src/main/java/com/alibaba/nacos/config/server/auth/UserPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.config.server.model.User;
 
 import java.util.List;
 

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.notify.NotifyCenter;

File: config/src/main/java/com/alibaba/nacos/config/server/model/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.model;
 
 import java.io.Serializable;
 

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -22,13 +22,13 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.StringPool;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
-import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -47,7 +47,7 @@ public class ConfigChangeBatchListenRequestHandler
     
     @Override
     @TpsControl(pointName = "ConfigListen")
-    @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
+    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
     public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configChangeListenRequest, RequestMeta meta)
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());

File: config/src/test/java/com/alibaba/nacos/config/server/auth/EmbeddedPermissionPersistServiceImplTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -84,4 +84,4 @@ public void testDeletePermission() {
         
         Mockito.verify(databaseOperate).blockUpdate();
     }
-}
+}
\ No newline at end of file

File: config/src/test/java/com/alibaba/nacos/config/server/auth/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -100,4 +100,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
+}
\ No newline at end of file

File: config/src/test/java/com/alibaba/nacos/config/server/auth/EmbeddedUserPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -82,4 +82,4 @@ public void testDeletePermission() {
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");
     }
-}
+}
\ No newline at end of file

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.persistence;
+package com.alibaba.nacos.config.server.auth;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -99,4 +99,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
+}
\ No newline at end of file

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.exception;
 
-import com.alibaba.nacos.plugin.auth.exception.AccessException;
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.Commons;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/CustomAuthenticationProvider.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl;
+package com.alibaba.nacos.console.security.nacos;
 
-import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/JwtAuthenticationEntryPoint.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl;
+package com.alibaba.nacos.console.security.nacos;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUser.java
Patch:
@@ -14,7 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.users;
+package com.alibaba.nacos.console.security.nacos.users;
+
+import com.alibaba.nacos.auth.model.User;
 
 /**
  * Nacos User.

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetails.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.users;
+package com.alibaba.nacos.console.security.nacos.users;
 
-import com.alibaba.nacos.plugin.auth.impl.persistence.User;
+import com.alibaba.nacos.config.server.model.User;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;

File: console/src/main/java/com/alibaba/nacos/console/utils/PasswordEncoderUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.plugin.auth.impl.utils;
+package com.alibaba.nacos.console.utils;
 
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/ParamRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import org.springframework.util.ObjectUtils;
 

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/PathRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;

File: core/src/main/java/com/alibaba/nacos/core/controller/ServerLoaderController.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtil;

File: core/src/main/java/com/alibaba/nacos/core/controller/v2/CoreOpsV2Controller.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller.v2;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.Beta;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;

File: core/src/test/java/com/alibaba/nacos/core/auth/condition/ParamRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import org.junit.Assert;
 import org.junit.Before;

File: core/src/test/java/com/alibaba/nacos/core/auth/condition/PathRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.code.condition;
+package com.alibaba.nacos.core.auth.condition;
 
 import org.junit.Assert;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -22,10 +22,11 @@
 import com.alibaba.nacos.api.naming.remote.response.InstanceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.naming.web.NamingResourceParser;
 import org.springframework.stereotype.Component;
 
 /**
@@ -43,7 +44,7 @@ public InstanceRequestHandler(EphemeralClientOperationServiceImpl clientOperatio
     }
     
     @Override
-    @Secured(action = ActionTypes.WRITE)
+    @Secured(action = ActionTypes.WRITE, parser = NamingResourceParser.class)
     public InstanceResponse handle(InstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service
                 .newService(request.getNamespace(), request.getGroupName(), request.getServiceName(), true);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -21,11 +21,12 @@
 import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.utils.ServiceUtil;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.naming.web.NamingResourceParser;
 import org.springframework.stereotype.Component;
 
 import java.util.Collection;
@@ -43,7 +44,7 @@
 public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest, ServiceListResponse> {
     
     @Override
-    @Secured(action = ActionTypes.READ)
+    @Secured(action = ActionTypes.READ, parser = NamingResourceParser.class)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());
         ServiceListResponse result = ServiceListResponse.buildSuccessResponse(0, new LinkedList<>());

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/AuthBase.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.auth.config.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
+import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -18,8 +18,8 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.plugin.auth.impl.persistence.User;
-import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
+import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: auth/src/main/java/com/alibaba/nacos/auth/util/AuthHeaderUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.auth.util;
 
-import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;

File: auth/src/test/java/com/alibaba/nacos/auth/config/AuthConfigsTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.common;
+package com.alibaba.nacos.auth.config;
 
 import com.alibaba.nacos.common.event.ServerConfigChangeEvent;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -44,6 +44,7 @@ public class AuthConfigsTest {
     public void setUp() throws Exception {
         environment = new MockEnvironment();
         EnvUtil.setEnvironment(environment);
+        environment.setProperty("nacos.core.auth.plugin.test.key", "test");
         authConfigs = new AuthConfigs();
     }
     
@@ -54,6 +55,7 @@ public void testUpgradeFromEvent() {
         environment.setProperty("nacos.core.auth.server.identity.key", TEST_SERVER_IDENTITY_KEY);
         environment.setProperty("nacos.core.auth.server.identity.value", TEST_SERVER_IDENTITY_VALUE);
         environment.setProperty("nacos.core.auth.enable.userAgentAuthWhite", String.valueOf(TEST_ENABLE_UA_WHITE));
+        
         authConfigs.onEvent(ServerConfigChangeEvent.newEvent());
         assertEquals(TEST_AUTH_ENABLED, authConfigs.isAuthEnabled());
         assertEquals(TEST_CACHING_ENABLED, authConfigs.isCachingEnabled());

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Credential Listener.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -59,7 +59,7 @@ public CredentialWatcher(String appName, CredentialService serviceInstance) {
         loadCredential(true);
         
         executor = ExecutorFactory
-                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.identify.watcher"));
+                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.auth.ram.identify.watcher"));
         
         executor.scheduleWithFixedDelay(new Runnable() {
             private long modified = 0;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/Credentials.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Credentials.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/IdentifyConstants.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Identify Constants.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/SpasCredential.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Spas Credential Interface.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/SpasCredentialLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Spas Credential Loader.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/utils/SpasAdapter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.impl;
+package com.alibaba.nacos.client.auth.ram.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.identify.CredentialService;
+import com.alibaba.nacos.client.auth.ram.identify.CredentialService;
 import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialServiceTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import junit.framework.TestCase;
 import org.junit.Assert;
@@ -143,4 +143,4 @@ public void testSetSecretKey() {
         Assert.assertEquals("sk1", credentialService1.getSecretKey());
     }
     
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcherTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -34,4 +34,4 @@ public void stop() throws NoSuchFieldException, IllegalAccessException {
         ScheduledExecutorService executor = (ScheduledExecutorService) executorField.get(watcher);
         Assert.assertTrue(executor.isShutdown());
     }
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialsTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -79,4 +79,4 @@ public void testIdentical() {
         //then
         Assert.assertTrue(actual);
     }
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/StsConfigTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.After;
 import org.junit.Assert;
@@ -89,4 +89,4 @@ public void testIsOnTrue() {
         Assert.assertTrue(stsOn);
     }
     
-}
\ No newline at end of file
+}

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.notify.NotifyCenter;

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -22,13 +22,13 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
-import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.StringPool;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.SignType;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -47,7 +47,7 @@ public class ConfigChangeBatchListenRequestHandler
     
     @Override
     @TpsControl(pointName = "ConfigListen")
-    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
+    @Secured(action = ActionTypes.READ, signType = SignType.CONFIG)
     public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configChangeListenRequest, RequestMeta meta)
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.exception;
 
-import com.alibaba.nacos.auth.exception.AccessException;
+import com.alibaba.nacos.plugin.auth.exception.AccessException;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.Commons;

File: core/src/main/java/com/alibaba/nacos/core/code/condition/ParamRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import org.springframework.util.ObjectUtils;
 

File: core/src/main/java/com/alibaba/nacos/core/code/condition/PathRequestCondition.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;

File: core/src/main/java/com/alibaba/nacos/core/controller/ServerLoaderController.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtil;

File: core/src/main/java/com/alibaba/nacos/core/controller/v2/CoreOpsV2Controller.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.controller.v2;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.Beta;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;

File: core/src/test/java/com/alibaba/nacos/core/code/condition/ParamRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import org.junit.Assert;
 import org.junit.Before;

File: core/src/test/java/com/alibaba/nacos/core/code/condition/PathRequestConditionTest.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.auth.condition;
+package com.alibaba.nacos.core.code.condition;
 
 import org.junit.Assert;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -22,11 +22,10 @@
 import com.alibaba.nacos.api.naming.remote.response.InstanceResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.impl.EphemeralClientOperationServiceImpl;
-import com.alibaba.nacos.naming.web.NamingResourceParser;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.stereotype.Component;
 
 /**
@@ -44,7 +43,7 @@ public InstanceRequestHandler(EphemeralClientOperationServiceImpl clientOperatio
     }
     
     @Override
-    @Secured(action = ActionTypes.WRITE, parser = NamingResourceParser.class)
+    @Secured(action = ActionTypes.WRITE)
     public InstanceResponse handle(InstanceRequest request, RequestMeta meta) throws NacosException {
         Service service = Service
                 .newService(request.getNamespace(), request.getGroupName(), request.getServiceName(), true);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -21,12 +21,11 @@
 import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.utils.ServiceUtil;
-import com.alibaba.nacos.naming.web.NamingResourceParser;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import org.springframework.stereotype.Component;
 
 import java.util.Collection;
@@ -44,7 +43,7 @@
 public class ServiceListRequestHandler extends RequestHandler<ServiceListRequest, ServiceListResponse> {
     
     @Override
-    @Secured(action = ActionTypes.READ, parser = NamingResourceParser.class)
+    @Secured(action = ActionTypes.READ)
     public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta) throws NacosException {
         Collection<Service> serviceSet = ServiceManager.getInstance().getSingletons(request.getNamespace());
         ServiceListResponse result = ServiceListResponse.buildSuccessResponse(0, new LinkedList<>());

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/CustomAuthenticationProvider.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
-import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/JwtAuthenticationEntryPoint.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthSystemTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.common;
+package com.alibaba.nacos.plugin.auth.impl.constant;
 
 /**
  * Types of all auth implementations.

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/RoleInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/RolePersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/UserPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
 
 import java.util.List;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
-
-import com.alibaba.nacos.auth.model.User;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 /**
  * Nacos User.

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetails.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.model;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/utils/PasswordEncoderUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.utils;
+package com.alibaba.nacos.plugin.auth.impl.utils;
 
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedPermissionPersistServiceImplTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -84,4 +84,4 @@ public void testDeletePermission() {
         
         Mockito.verify(databaseOperate).blockUpdate();
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -100,4 +100,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedUserPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalPermissionPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -82,4 +82,4 @@ public void testDeletePermission() {
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -99,4 +99,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
\ No newline at end of file
+}

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/constant/ActionTypes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.common;
+package com.alibaba.nacos.plugin.auth.constant;
 
 /**
  * Resource action type definitions.
@@ -33,7 +33,7 @@ public enum ActionTypes {
      */
     WRITE("w");
     
-    private String action;
+    private final String action;
     
     ActionTypes(String action) {
         this.action = action;

File: plugin/auth/src/main/java/com/alibaba/nacos/plugin/auth/exception/AccessException.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.exception;
+package com.alibaba.nacos.plugin.auth.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
 

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/AuthBase.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.auth.RoleInfo;
+import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -18,8 +18,8 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
+import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -36,4 +36,6 @@ public class AuthConstants {
     public static final String CONSOLE_RESOURCE_NAME_PREFIX = "console/";
     
     public static final String UPDATE_PASSWORD_ENTRY_POINT = CONSOLE_RESOURCE_NAME_PREFIX + "user/password";
+    
+    public static final String NACOS_USER_KEY = "nacosuser";
 }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.alibaba.nacos.plugin.auth.impl.users;
 
-import com.alibaba.nacos.auth.model.User;
-
 /**
  * Nacos User.
  *

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth.model;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/LdapAuthenticationProvider.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.plugin.auth.impl;
 
 import com.alibaba.nacos.common.utils.CollectionUtils;
-import com.alibaba.nacos.config.server.auth.RoleInfo;
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
 import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetails;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthManager.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.auth.model.User;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.config.server.auth.RoleInfo;
+import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/UserController.java
Patch:
@@ -22,8 +22,8 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.auth.RoleInfo;
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/PermissionPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/RoleInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/RolePersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/User.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.model;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import java.io.Serializable;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/persistence/UserPersistService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
 
 import java.util.List;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetails.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.plugin.auth.impl.users;
 
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.plugin.auth.impl.users;
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
-import com.alibaba.nacos.config.server.auth.UserPersistService;
+import com.alibaba.nacos.plugin.auth.impl.persistence.UserPersistService;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.scheduling.annotation.Scheduled;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedPermissionPersistServiceImplTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -84,4 +84,4 @@ public void testDeletePermission() {
         
         Mockito.verify(databaseOperate).blockUpdate();
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -100,4 +100,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/EmbeddedUserPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalPermissionPersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -82,4 +82,4 @@ public void testDeletePermission() {
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");
     }
-}
\ No newline at end of file
+}

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/persistence/ExternalRolePersistServiceImplTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.auth;
+package com.alibaba.nacos.plugin.auth.impl.persistence;
 
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
@@ -99,4 +99,4 @@ public void testFindRolesLikeRoleName() {
         
         Assert.assertEquals(role.size(), 0);
     }
-}
\ No newline at end of file
+}

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.config.server.auth.RoleInfo;
+import com.alibaba.nacos.plugin.auth.impl.persistence.RoleInfo;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.model.User;
+import com.alibaba.nacos.plugin.auth.impl.persistence.User;
 import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/PermissionController.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.controller;
+package com.alibaba.nacos.plugin.auth.impl.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/controller/RoleController.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.controller;
+package com.alibaba.nacos.plugin.auth.impl.controller;
 
 import com.alibaba.nacos.auth.annotation.Secured;
-import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.console.enums.NamespaceTypeEnum;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
-import com.alibaba.nacos.console.security.nacos.constant.AuthConstants;
+import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/PermissionController.java
Patch:
@@ -20,8 +20,8 @@
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.console.security.nacos.constant.AuthConstants;
-import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
+import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/RoleController.java
Patch:
@@ -20,8 +20,8 @@
 import com.alibaba.nacos.plugin.auth.constant.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.console.security.nacos.constant.AuthConstants;
-import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
+import com.alibaba.nacos.plugin.auth.impl.roles.NacosRoleServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/test/java/com/alibaba/nacos/console/controller/UserControllerTest.java
Patch:
@@ -17,10 +17,10 @@
 package com.alibaba.nacos.console.controller;
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
-import com.alibaba.nacos.console.security.nacos.constant.AuthSystemTypes;
+import com.alibaba.nacos.plugin.auth.impl.NacosAuthManager;
+import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
-import com.alibaba.nacos.console.security.nacos.NacosAuthManager;
-import com.alibaba.nacos.console.security.nacos.users.NacosUser;
+import com.alibaba.nacos.plugin.auth.impl.constant.AuthSystemTypes;
 import com.fasterxml.jackson.databind.JsonNode;
 import org.junit.Before;
 import org.junit.Test;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/CustomAuthenticationProvider.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
-import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
+import com.alibaba.nacos.plugin.auth.impl.users.NacosUserDetailsServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationProvider;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/JwtAuthenticationEntryPoint.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/JwtTokenManager.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import io.jsonwebtoken.Claims;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/NacosAuthPluginService.java
Patch:
@@ -14,16 +14,16 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.plugin.auth.spi.server.AuthPluginService;
 import com.alibaba.nacos.plugin.auth.api.IdentityContext;
 import com.alibaba.nacos.plugin.auth.api.Permission;
 import com.alibaba.nacos.plugin.auth.exception.AccessException;
 import com.alibaba.nacos.auth.model.User;
-import com.alibaba.nacos.console.security.nacos.constant.AuthConstants;
-import com.alibaba.nacos.console.security.nacos.users.NacosUser;
+import com.alibaba.nacos.plugin.auth.impl.constant.AuthConstants;
+import com.alibaba.nacos.plugin.auth.impl.users.NacosUser;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 import java.util.Collection;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthConstants.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.constant;
+package com.alibaba.nacos.plugin.auth.impl.constant;
 
 /**
  * All the constants.

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/constant/AuthSystemTypes.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.constant;
+package com.alibaba.nacos.plugin.auth.impl.constant;
 
 /**
  * Types of all auth implementations.

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUser.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 import com.alibaba.nacos.auth.model.User;
 

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetails.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 import com.alibaba.nacos.config.server.model.User;
 import org.springframework.security.core.GrantedAuthority;

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos.users;
+package com.alibaba.nacos.plugin.auth.impl.users;
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import com.alibaba.nacos.config.server.auth.UserPersistService;
@@ -103,11 +103,11 @@ public User getUser(String username) {
     public User getUserFromDatabase(String username) {
         return userPersistService.findUserByUsername(username);
     }
-
+    
     public List<String> findUserLikeUsername(String username) {
         return userPersistService.findUserLikeUsername(username);
     }
-
+    
     public void createUser(String username, String password) {
         userPersistService.createUser(username, password);
     }

File: plugin-default-impl/src/main/java/com/alibaba/nacos/plugin/auth/impl/utils/PasswordEncoderUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.utils;
+package com.alibaba.nacos.plugin.auth.impl.utils;
 
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 

File: plugin-default-impl/src/test/java/com/alibaba/nacos/plugin/auth/impl/JwtTokenManagerTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.console.security.nacos;
+package com.alibaba.nacos.plugin.auth.impl;
 
 import com.alibaba.nacos.auth.config.AuthConfigs;
 import io.jsonwebtoken.lang.Assert;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
+import com.alibaba.nacos.plugin.auth.impl.utils.PasswordEncoderUtil;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: auth/src/main/java/com/alibaba/nacos/auth/GrpcProtocolAuthService.java
Patch:
@@ -63,7 +63,7 @@ public Resource parseResource(Request request, Secured secured) {
         String type = secured.signType();
         if (!resourceParserMap.containsKey(type)) {
             Loggers.AUTH.warn("Can't find Grpc request resourceParser for type {}", type);
-            return Resource.EMPTY_RESOURCE;
+            return useSpecifiedParserToParse(secured, request);
         }
         return resourceParserMap.get(type).parse(request, type);
     }

File: auth/src/main/java/com/alibaba/nacos/auth/HttpProtocolAuthService.java
Patch:
@@ -62,8 +62,8 @@ public Resource parseResource(HttpServletRequest request, Secured secured) {
         }
         String type = secured.signType();
         if (!resourceParserMap.containsKey(type)) {
-            Loggers.AUTH.warn("Can't find Http request resourceParser for type {}", type);
-            return Resource.EMPTY_RESOURCE;
+            Loggers.AUTH.warn("Can't find Http request resourceParser for type {} use specified resource parser", type);
+            return useSpecifiedParserToParse(secured, request);
         }
         return resourceParserMap.get(type).parse(request, type);
     }

File: auth/src/main/java/com/alibaba/nacos/auth/annotation/Secured.java
Patch:
@@ -57,10 +57,9 @@
     String signType() default SignType.NAMING;
     
     /**
-     * Custom resource parser. Should have lower priority than resource().
+     * Custom resource parser. Should have lower priority than resource() and typed parser.
      *
      * @return class type of resource parser
      */
-    @Deprecated
     Class<? extends ResourceParser> parser() default DefaultResourceParser.class;
 }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.constant.SignType;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
@@ -47,7 +48,7 @@ public class ConfigChangeBatchListenRequestHandler
     
     @Override
     @TpsControl(pointName = "ConfigListen")
-    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
+    @Secured(action = ActionTypes.READ, signType = SignType.CONFIG, parser = ConfigResourceParser.class)
     public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest configChangeListenRequest, RequestMeta meta)
             throws NacosException {
         String connectionId = StringPool.get(meta.getConnectionId());

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.api.remote.response.ResponseCode;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.constant.SignType;
 import com.alibaba.nacos.common.utils.MapUtil;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -62,7 +63,7 @@ public ConfigPublishRequestHandler(PersistService persistService) {
     @Override
     @TpsControl(pointName = "ConfigPublish", parsers = {ConfigPublishGroupKeyParser.class,
             ConfigPublishGroupParser.class})
-    @Secured(action = ActionTypes.WRITE, resource = "", parser = ConfigResourceParser.class)
+    @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG, parser = ConfigResourceParser.class)
     public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta meta) throws NacosException {
         
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.api.remote.response.ResponseCode;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.constant.SignType;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.CacheItem;
@@ -70,7 +71,7 @@ public ConfigQueryRequestHandler(PersistService persistService) {
     
     @Override
     @TpsControl(pointName = "ConfigQuery", parsers = {ConfigQueryGroupKeyParser.class, ConfigQueryGroupParser.class})
-    @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
+    @Secured(action = ActionTypes.READ, signType = SignType.CONFIG, parser = ConfigResourceParser.class)
     public ConfigQueryResponse handle(ConfigQueryRequest request, RequestMeta meta) throws NacosException {
         
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigRemoveRequestHandler.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.constant.ActionTypes;
+import com.alibaba.nacos.auth.constant.SignType;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.service.ConfigChangePublisher;
@@ -54,7 +55,7 @@ public ConfigRemoveRequestHandler(PersistService persistService) {
     
     @Override
     @TpsControl(pointName = "ConfigRemove")
-    @Secured(action = ActionTypes.WRITE, parser = ConfigResourceParser.class)
+    @Secured(action = ActionTypes.WRITE, signType = SignType.CONFIG, parser = ConfigResourceParser.class)
     public ConfigRemoveResponse handle(ConfigRemoveRequest configRemoveRequest, RequestMeta meta)
             throws NacosException {
         // check tenant

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -411,6 +411,7 @@ boolean addAggrConfigInfo(final String dataId, final String group, String tenant
      * @param startTime start time
      * @return count of history config that meet the conditions
      */
+    @Deprecated
     int findConfigHistoryCountByTime(final Timestamp startTime);
     
     /**

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerManager.java
Patch:
@@ -33,7 +33,7 @@ public class AddressServerManager {
     
     public String getRawProductName(String name) {
         
-        if (StringUtils.isBlank(name) || AddressServerConstants.DEFAULT_PRODUCT.equals(name)) {
+        if (StringUtils.isBlank(name)) {
             
             return AddressServerConstants.DEFAULT_PRODUCT;
         }
@@ -50,7 +50,7 @@ public String getRawProductName(String name) {
      */
     public String getDefaultClusterNameIfEmpty(String name) {
         
-        if (StringUtils.isEmpty(name) || AddressServerConstants.DEFAULT_GET_CLUSTER.equals(name)) {
+        if (StringUtils.isEmpty(name)) {
             return AddressServerConstants.DEFAULT_GET_CLUSTER;
         }
         

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java
Patch:
@@ -52,7 +52,7 @@ public static ConfigService createConfigService(Properties properties) throws Na
      *
      * @param serverAddr serverList
      * @return Config
-     * @throws ConfigService Exception
+     * @throws NacosException create configService failed Exception
      */
     public static ConfigService createConfigService(String serverAddr) throws NacosException {
         Properties properties = new Properties();

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigType.java
Patch:
@@ -95,6 +95,6 @@ public static Boolean isValidType(String type) {
         if (StringUtils.isBlank(type)) {
             return false;
         }
-        return null != LOCAL_MAP.get(type) ? true : false;
+        return null != LOCAL_MAP.get(type);
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/ability/ClientConfigAbility.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.config;
+package com.alibaba.nacos.api.config.ability;
 
 /**
  * config abilities of nacos client.

File: api/src/main/java/com/alibaba/nacos/api/config/ability/ServerConfigAbility.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.config;
+package com.alibaba.nacos.api.config.ability;
 
 import java.io.Serializable;
 import java.util.Objects;

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/AbstractConfigRequest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.remote.request.Request;
 
 /**
@@ -24,11 +25,9 @@
  * @version $Id: ConfigCommonRequest.java, v 0.1 2020年07月13日 9:05 PM liuzunfei Exp $
  */
 public abstract class AbstractConfigRequest extends Request {
-    
-    private static final String MODULE = "config";
 
     @Override
     public String getModule() {
-        return MODULE;
+        return Constants.Config.CONFIG_MODULE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigChangeNotifyRequest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.remote.request.ServerRequest;
 
 /**
@@ -26,8 +27,6 @@
  */
 public class ConfigChangeNotifyRequest extends ServerRequest {
     
-    private static final String MODULE = "config";
-    
     String dataId;
     
     String group;
@@ -76,6 +75,6 @@ public static ConfigChangeNotifyRequest build(String dataId, String group, Strin
     
     @Override
     public String getModule() {
-        return MODULE;
+        return Constants.Config.CONFIG_MODULE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigPublishRequest.java
Patch:
@@ -61,7 +61,7 @@ public String getAdditionParam(String key) {
      */
     public void putAdditionalParam(String key, String value) {
         if (additionMap == null) {
-            additionMap = new HashMap<String, String>(2);
+            additionMap = new HashMap<>(2);
         }
         additionMap.put(key, value);
     }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigQueryRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
+import com.alibaba.nacos.api.common.Constants;
+
 /**
  * request to query config content.
  *
@@ -24,8 +26,6 @@
  */
 public class ConfigQueryRequest extends AbstractConfigRequest {
     
-    private static final String NOTIFY_HEADER = "notify";
-    
     private String dataId;
     
     private String group;
@@ -123,7 +123,7 @@ public void setTag(String tag) {
     }
     
     public boolean isNotify() {
-        String notify = getHeader(NOTIFY_HEADER, Boolean.FALSE.toString());
+        String notify = getHeader(Constants.Config.NOTIFY_HEADER, Boolean.FALSE.toString());
         return Boolean.parseBoolean(notify);
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/ability/ClientNamingAbility.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.naming;
+package com.alibaba.nacos.api.naming.ability;
 
 /**
  * naming abilities of nacos client.

File: api/src/main/java/com/alibaba/nacos/api/naming/ability/ServerNamingAbility.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.naming;
+package com.alibaba.nacos.api.naming.ability;
 
 import java.io.Serializable;
 import java.util.Objects;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Http.java
Patch:
@@ -20,8 +20,8 @@
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.api.utils.StringUtils;
 import com.fasterxml.jackson.annotation.JsonIgnore;
-import com.google.common.base.Objects;
 
+import java.util.Objects;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
@@ -89,7 +89,7 @@ public Map<String, String> getCustomHeaders() {
     
     @Override
     public int hashCode() {
-        return Objects.hashCode(path, headers, expectedResponseCode);
+        return Objects.hash(path, headers, expectedResponseCode);
     }
     
     @Override

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Mysql.java
Patch:
@@ -18,7 +18,8 @@
 
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.api.utils.StringUtils;
-import com.google.common.base.Objects;
+
+import java.util.Objects;
 
 /**
  * Implementation of health checker for MYSQL.
@@ -67,7 +68,7 @@ public void setPwd(final String pwd) {
     
     @Override
     public int hashCode() {
-        return Objects.hashCode(user, pwd, cmd);
+        return Objects.hash(user, pwd, cmd);
     }
     
     @Override

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Tcp.java
Patch:
@@ -17,7 +17,8 @@
 package com.alibaba.nacos.api.naming.pojo.healthcheck.impl;
 
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
-import com.google.common.base.Objects;
+
+import java.util.Objects;
 
 /**
  * Implementation of health checker for TCP.
@@ -36,7 +37,7 @@ public Tcp() {
     
     @Override
     public int hashCode() {
-        return Objects.hashCode(TYPE);
+        return Objects.hash(TYPE);
     }
     
     @Override

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/AbstractNamingRequest.java
Patch:
@@ -18,15 +18,15 @@
 
 import com.alibaba.nacos.api.remote.request.Request;
 
+import static com.alibaba.nacos.api.common.Constants.Naming.NAMING_MODULE;
+
 /**
  * Uniform remote request of naming module.
  *
  * @author liuzunfei
  */
 public abstract class AbstractNamingRequest extends Request {
     
-    private static final String MODULE = "naming";
-    
     private String namespace;
     
     private String serviceName;
@@ -44,7 +44,7 @@ public AbstractNamingRequest(String namespace, String serviceName, String groupN
     
     @Override
     public String getModule() {
-        return MODULE;
+        return NAMING_MODULE;
     }
     
     public String getNamespace() {

File: api/src/main/java/com/alibaba/nacos/api/remote/ability/ClientRemoteAbility.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.ability;
+package com.alibaba.nacos.api.remote.ability;
 
 /**
  * remote abilities of nacos client.

File: api/src/main/java/com/alibaba/nacos/api/remote/ability/ServerRemoteAbility.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.ability;
+package com.alibaba.nacos.api.remote.ability;
 
 import java.io.Serializable;
 import java.util.Objects;

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ClientDetectionRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
+import static com.alibaba.nacos.api.common.Constants.Remote.INTERNAL_MODULE;
+
 /**
  * client active detection request from server.
  *
@@ -24,11 +26,9 @@
  */
 public class ClientDetectionRequest extends ServerRequest {
     
-    private static final String MODULE = "internal";
-    
     @Override
     public String getModule() {
-        return MODULE;
+        return INTERNAL_MODULE;
     }
     
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ConnectResetRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
+import static com.alibaba.nacos.api.common.Constants.Remote.INTERNAL_MODULE;
+
 /**
  * ConnectResetRequest.
  *
@@ -24,15 +26,13 @@
  */
 public class ConnectResetRequest extends ServerRequest {
     
-    private static final String MODULE = "internal";
-    
     String serverIp;
     
     String serverPort;
     
     @Override
     public String getModule() {
-        return MODULE;
+        return INTERNAL_MODULE;
     }
     
     /**

File: api/src/main/java/com/alibaba/nacos/api/remote/request/InternalRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
+import static com.alibaba.nacos.api.common.Constants.Remote.INTERNAL_MODULE;
+
 /**
  * internal request .
  *
@@ -25,10 +27,8 @@
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class InternalRequest extends Request {
     
-    private static final String MODULE = "internal";
-    
     @Override
     public String getModule() {
-        return MODULE;
+        return INTERNAL_MODULE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/selector/context/CmdbContext.java
Patch:
@@ -15,16 +15,17 @@
  *
  */
 
-package com.alibaba.nacos.api.naming.selector.context;
+package com.alibaba.nacos.api.selector.context;
 
 import com.alibaba.nacos.api.cmdb.pojo.Entity;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.api.selector.Selector;
 
 import java.util.List;
 
 /**
  * The CMDB context is given by the {@link SelectorContextBuilder#build(Object, Object)} and used for the
- * {@link com.alibaba.nacos.api.naming.selector.Selector#select(Object)}.
+ * {@link Selector#select(Object)}.
  *
  * @author chenglu
  * @date 2021-07-09 21:31

File: api/src/test/java/com/alibaba/nacos/api/naming/ability/ServerNamingAbilityTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2020 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.naming;
+package com.alibaba.nacos.api.naming.ability;
 
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.core.JsonProcessingException;

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -225,7 +225,7 @@ public List<Instance> getAllInstances(String serviceName, String groupName, List
         String clusterString = StringUtils.join(clusters, ",");
         if (subscribe) {
             serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
-            if (null == serviceInfo) {
+            if (null == serviceInfo || !clientProxy.isSubscribed(serviceName, groupName, clusterString)) {
                 serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
             }
         } else {

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServerListManager.java
Patch:
@@ -149,10 +149,10 @@ private void refreshServerListIfNeed() {
             }
             if (null == serversFromEndpoint || !CollectionUtils.isEqualCollection(list, serversFromEndpoint)) {
                 NAMING_LOGGER.info("[SERVER-LIST] server list is updated: " + list);
+                serversFromEndpoint = list;
+                lastServerListRefreshTime = System.currentTimeMillis();
+                NotifyCenter.publishEvent(new ServerListChangedEvent());
             }
-            serversFromEndpoint = list;
-            lastServerListRefreshTime = System.currentTimeMillis();
-            NotifyCenter.publishEvent(new ServerListChangedEvent());
         } catch (Throwable e) {
             NAMING_LOGGER.warn("failed to update server list", e);
         }

File: client/src/main/java/com/alibaba/nacos/client/utils/AppNameUtils.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.client.constant.Constants;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.File;
@@ -27,8 +28,6 @@
  */
 public class AppNameUtils {
     
-    private static final String PARAM_MARKING_PROJECT = "project.name";
-    
     private static final String PARAM_MARKING_JBOSS = "jboss.server.home.dir";
     
     private static final String PARAM_MARKING_JETTY = "jetty.home";
@@ -64,7 +63,7 @@ public static String getAppName() {
     }
     
     private static String getAppNameByProjectName() {
-        return System.getProperty(PARAM_MARKING_PROJECT);
+        return System.getProperty(Constants.SysEnv.PROJECT_NAME);
     }
     
     private static String getAppNameByServerHome() {

File: client/src/main/java/com/alibaba/nacos/client/utils/TemplateUtils.java
Patch:
@@ -41,7 +41,7 @@ public static void stringNotEmptyAndThenExecute(String source, Runnable runnable
             try {
                 runnable.run();
             } catch (Exception e) {
-                LogUtils.NAMING_LOGGER.error("string empty and then execute cause an exception.", e);
+                LogUtils.NAMING_LOGGER.error("string not empty and then execute cause an exception.", e);
             }
         }
     }

File: client/src/test/java/com/alibaba/nacos/client/config/impl/CacheDataTest.java
Patch:
@@ -73,8 +73,7 @@ public void testGetter() {
         
         Assert.assertEquals(123, cacheData1.getTaskId());
         Assert.assertTrue(cacheData1.isSyncWithServer());
-        //TODO FIX getType
-        // Assert.assertFalse("123",cacheData1.getType());
+        Assert.assertEquals("123", cacheData1.getType());
         Assert.assertTrue(cacheData1.isUseLocalConfigInfo());
         Assert.assertEquals(timeStamp, cacheData1.getLastModifiedTs().longValue());
         Assert.assertEquals(timeStamp, cacheData1.getLocalConfigInfoVersion());

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java
Patch:
@@ -140,15 +140,15 @@ public void testPublishConfig() throws NacosException {
             clientWorker.removeConfig(dataId, group, tenant, tag);
             Assert.fail();
         } catch (NacosException e) {
-            Assert.assertEquals("Client not connected,current status:STARTING", e.getErrMsg());
+            Assert.assertEquals("Client not connected, current status:STARTING", e.getErrMsg());
             Assert.assertEquals(-401, e.getErrCode());
             
         }
         try {
             clientWorker.getServerConfig(dataId, group, tenant, 100, false);
             Assert.fail();
         } catch (NacosException e) {
-            Assert.assertEquals("Client not connected,current status:STARTING", e.getErrMsg());
+            Assert.assertEquals("Client not connected, current status:STARTING", e.getErrMsg());
             Assert.assertEquals(-401, e.getErrCode());
         }
     }

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushRequestHandlerTest.java
Patch:
@@ -39,7 +39,7 @@ public void testRequestReply() {
         ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
         NamingPushRequestHandler handler = new NamingPushRequestHandler(holder);
         ServiceInfo info = new ServiceInfo("name", "cluster1");
-        Request req = NotifySubscriberRequest.buildSuccessResponse(info);
+        Request req = NotifySubscriberRequest.buildNotifySubscriberRequest(info);
         //when
         Response response = handler.requestReply(req);
         //then

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -174,7 +174,7 @@ void receiveEvent(Event event) {
         final long currentEventSequence = event.sequence();
         
         if (!hasSubscriber()) {
-            LOGGER.warn("[NotifyCenter] the {} is lost, because there is no subscriber.");
+            LOGGER.warn("[NotifyCenter] the {} is lost, because there is no subscriber.", event);
             return;
         }
         

File: common/src/main/java/com/alibaba/nacos/common/notify/EventPublisherFactory.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.common.notify;
 
-import com.alibaba.nacos.common.utils.BiFunction;
+import java.util.function.BiFunction;
 
 /**
  * Event publisher factory.

File: common/src/main/java/com/alibaba/nacos/common/task/engine/AbstractNacosTaskExecuteEngine.java
Patch:
@@ -33,7 +33,7 @@ public abstract class AbstractNacosTaskExecuteEngine<T extends NacosTask> implem
     
     private final Logger log;
     
-    private final ConcurrentHashMap<Object, NacosTaskProcessor> taskProcessors = new ConcurrentHashMap<Object, NacosTaskProcessor>();
+    private final ConcurrentHashMap<Object, NacosTaskProcessor> taskProcessors = new ConcurrentHashMap<>();
     
     private NacosTaskProcessor defaultTaskProcessor;
     

File: common/src/main/java/com/alibaba/nacos/common/task/engine/NacosDelayTaskExecuteEngine.java
Patch:
@@ -155,7 +155,7 @@ protected void processTasks() {
                     retryFailedTask(taskKey, task);
                 }
             } catch (Throwable e) {
-                getEngineLog().error("Nacos task execute error : " + e.toString(), e);
+                getEngineLog().error("Nacos task execute error ", e);
                 retryFailedTask(taskKey, task);
             }
         }

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtil.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.Map;
 import java.util.Objects;
 import java.util.function.Predicate;
+import java.util.function.BiFunction;
 
 /**
  * Map utils.

File: config/src/main/java/com/alibaba/nacos/config/server/Config.java
Patch:
@@ -26,7 +26,9 @@
  * @author Nacos
  */
 @EnableScheduling
-@SpringBootApplication(scanBasePackages = {"com.alibaba.nacos.config.server", "com.alibaba.nacos.core"})
+@SpringBootApplication(scanBasePackages = {
+        "com.alibaba.nacos.config.server",
+        "com.alibaba.nacos.core"})
 public class Config {
     
     public static void main(String[] args) {

File: config/src/main/java/com/alibaba/nacos/config/server/constant/CounterMode.java
Patch:
@@ -36,7 +36,7 @@ public enum CounterMode {
     /**
      * Reverse the two mode value.
      *
-     * @return
+     * @return CounterMode
      */
     public CounterMode reverse() {
         if (INCREMENT == this) {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ClientMetricsController.java
Patch:
@@ -71,7 +71,7 @@ public class ClientMetricsController {
      * get client metric.
      *
      * @param ip client ip .
-     * @return
+     * @return ResponseEntity
      */
     @GetMapping("/cluster")
     public ResponseEntity metric(@RequestParam("ip") String ip,

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -16,13 +16,13 @@
 
 package com.alibaba.nacos.config.server.service.capacity;
 
+import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
 import com.alibaba.nacos.config.server.model.capacity.GroupCapacity;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
-import com.google.common.collect.Lists;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.PreparedStatementCreator;
@@ -241,7 +241,7 @@ public boolean decrementUsage(GroupCapacity groupCapacity) {
      */
     public boolean updateGroupCapacity(String group, Integer quota, Integer maxSize, Integer maxAggrCount,
             Integer maxAggrSize) {
-        List<Object> argList = Lists.newArrayList();
+        List<Object> argList = CollectionUtils.list();
         StringBuilder sql = new StringBuilder("update group_capacity set");
         if (quota != null) {
             sql.append(" quota = ?,");

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -16,12 +16,12 @@
 
 package com.alibaba.nacos.config.server.service.capacity;
 
+import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.config.server.model.capacity.TenantCapacity;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
-import com.google.common.collect.Lists;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.PreparedStatementCreator;
@@ -209,7 +209,7 @@ public boolean decrementUsage(TenantCapacity tenantCapacity) {
      */
     public boolean updateTenantCapacity(String tenant, Integer quota, Integer maxSize, Integer maxAggrCount,
             Integer maxAggrSize) {
-        List<Object> argList = Lists.newArrayList();
+        List<Object> argList = CollectionUtils.list();
         StringBuilder sql = new StringBuilder("UPDATE tenant_capacity SET");
         if (quota != null) {
             sql.append(" quota = ?,");

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -13,7 +13,7 @@
 
 package com.alibaba.nacos.config.server.service.datasource;
 
-import com.google.common.base.Preconditions;
+import com.alibaba.nacos.common.utils.Preconditions;
 import com.zaxxer.hikari.HikariDataSource;
 import org.apache.commons.collections.CollectionUtils;
 import org.springframework.boot.context.properties.bind.Bindable;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java
Patch:
@@ -47,7 +47,7 @@ public static boolean configDump(ConfigDumpEvent event) {
         final String type = event.getType();
         final long lastModified = event.getLastModifiedTs();
         if (event.isBeta()) {
-            boolean result = false;
+            boolean result;
             if (event.isRemove()) {
                 result = ConfigCacheService.removeBeta(dataId, group, namespaceId);
                 if (result) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpChangeProcessor.java
Patch:
@@ -86,8 +86,8 @@ public boolean process(NacosTask task) {
         List<ConfigInfoWrapper> changeConfigs = persistService.findChangeConfig(startTime, endTime);
         LogUtil.DEFAULT_LOG.warn("changeConfig count:{}", changeConfigs.size());
         for (ConfigInfoWrapper cf : changeConfigs) {
-            boolean result = ConfigCacheService
-                    .dumpChange(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getContent(), cf.getLastModified());
+            ConfigCacheService.dumpChange(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getContent(),
+                    cf.getLastModified());
             final String content = cf.getContent();
             final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             LogUtil.DEFAULT_LOG.info("[dump-change-ok] {}, {}, length={}, md5={}", GroupKey2.getKey(cf.getDataId(), cf.getGroup()),

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -28,6 +28,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.common.utils.Preconditions;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.configuration.ConditionDistributedEmbedStorage;
 import com.alibaba.nacos.config.server.constant.Constants;
@@ -59,7 +60,6 @@
 import com.alibaba.nacos.core.utils.ClassUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.GenericType;
-import com.google.common.base.Preconditions;
 import com.google.protobuf.ByteString;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.dao.DataAccessException;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -74,7 +74,7 @@ public static String getAppName(HttpServletRequest request) {
      * @return may be return null
      */
     public static User getUser(HttpServletRequest request) {
-        Object userObj = request.getAttribute(NACOS_USER_KEY);
+        Object userObj = request.getSession().getAttribute(NACOS_USER_KEY);
         if (userObj == null) {
             return null;
         }

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImplTest.java
Patch:
@@ -76,7 +76,7 @@ public void testGetRolesByUserName() {
     public void testAddRole() {
         externalRolePersistService.addRole("role", "userName");
         
-        String sql = "INSERT into roles (role, username) VALUES (?, ?)";
+        String sql = "INSERT INTO roles (role, username) VALUES (?, ?)";
         Mockito.verify(jt).update(sql, "role", "userName");
     }
     

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalUserPersistServiceImplTest.java
Patch:
@@ -64,7 +64,7 @@ public void setUp() throws Exception {
     public void testCreateUser() {
         externalUserPersistService.createUser("username", "password");
         
-        String sql = "INSERT into users (username, password, enabled) VALUES (?, ?, ?)";
+        String sql = "INSERT INTO users (username, password, enabled) VALUES (?, ?, ?)";
         Mockito.verify(jdbcTemplate).update(sql, "username", "password", true);
     }
     

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HealthControllerTest.java
Patch:
@@ -47,7 +47,7 @@
 @RunWith(SpringJUnit4ClassRunner.class)
 @ContextConfiguration(classes = MockServletContext.class)
 @WebAppConfiguration
-public class HealthControllerUnitTest {
+public class HealthControllerTest {
     
     @InjectMocks
     HealthController healthController;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthManager.java
Patch:
@@ -91,7 +91,7 @@ public User login(Object request) throws AccessException {
                 }
             }
         }
-        req.setAttribute(RequestUtil.NACOS_USER_KEY, user);
+        req.getSession().setAttribute(RequestUtil.NACOS_USER_KEY, user);
         return user;
     }
     

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -93,6 +93,9 @@ public User getUser(String username) {
         User user = userMap.get(username);
         if (!authConfigs.isCachingEnabled() || user == null) {
             user = getUserFromDatabase(username);
+            if (user != null) {
+                userMap.put(username, user);
+            }
         }
         return user;
     }

File: core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java
Patch:
@@ -26,13 +26,13 @@
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import com.alibaba.nacos.common.remote.client.RpcClientFactory;
 import com.alibaba.nacos.common.remote.client.ServerListFactory;
+import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberUtil;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.Loggers;
-import com.google.common.collect.Lists;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
@@ -141,7 +141,7 @@ public String getCurrentServer() {
                 
                 @Override
                 public List<String> getServerList() {
-                    return Lists.newArrayList(member.getAddress());
+                    return CollectionUtils.list(member.getAddress());
                 }
             });
             

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -115,7 +115,7 @@ private void initAPProtocol() {
             Class configType = ClassUtils.resolveGenericType(protocol.getClass());
             Config config = (Config) ApplicationUtils.getBean(configType);
             injectMembers4AP(config);
-            protocol.init((config));
+            protocol.init(config);
             ProtocolManager.this.apProtocol = protocol;
         });
     }
@@ -125,7 +125,7 @@ private void initCPProtocol() {
             Class configType = ClassUtils.resolveGenericType(protocol.getClass());
             Config config = (Config) ApplicationUtils.getBean(configType);
             injectMembers4CP(config);
-            protocol.init((config));
+            protocol.init(config);
             ProtocolManager.this.cpProtocol = protocol;
         });
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/FailoverClosureImpl.java
Patch:
@@ -57,7 +57,7 @@ public void run(Status status) {
             return;
         }
         final Throwable throwable = this.throwable;
-        future.completeExceptionally(Objects.nonNull(throwable) ? new ConsistencyException(throwable.toString())
+        future.completeExceptionally(Objects.nonNull(throwable) ? new ConsistencyException(throwable.getMessage())
                 : new ConsistencyException("operation failure"));
     }
     

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingApplicationListener.java
Patch:
@@ -221,7 +221,7 @@ private void closeExecutor() {
     private void makeWorkDir() {
         String[] dirNames = new String[] {"logs", "conf", "data"};
         for (String dirName : dirNames) {
-            LOGGER.info("Nacos Log files: {}", Paths.get(EnvUtil.getNacosHome(), dirName).toString());
+            LOGGER.info("Nacos Log files: {}", Paths.get(EnvUtil.getNacosHome(), dirName));
             try {
                 DiskUtils.forceMkdir(new File(Paths.get(EnvUtil.getNacosHome(), dirName).toUri()));
             } catch (Exception e) {

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -92,7 +92,7 @@ public class ConnectionManager extends Subscriber<ConnectionLimitRuleChangeEvent
     
     private Map<String, AtomicInteger> connectionForClientIp = new ConcurrentHashMap<String, AtomicInteger>(16);
     
-    Map<String, Connection> connections = new ConcurrentHashMap<String, Connection>();
+    Map<String, Connection> connections = new ConcurrentHashMap<>();
     
     @Autowired
     private ClientConnectionEventListenerRegistry clientConnectionEventListenerRegistry;

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionMeta.java
Patch:
@@ -73,7 +73,7 @@ public class ConnectionMeta {
     Date createTime;
     
     /**
-     * astActiveTime.
+     * lastActiveTime.
      */
     long lastActiveTime;
     

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcAckCallbackSynchronizer.java
Patch:
@@ -97,7 +97,7 @@ public static void syncCallback(String connectionId, String requestId, DefaultRe
                 return;
             }
         }
-        throw new NacosException(NacosException.INVALID_PARAM, "request id confilict");
+        throw new NacosException(NacosException.INVALID_PARAM, "request id conflict");
         
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -173,9 +173,7 @@ private void addServices(MutableHandlerRegistry handlerRegistry, ServerIntercept
                 .setResponseMarshaller(ProtoUtils.marshaller(Payload.getDefaultInstance())).build();
         
         final ServerCallHandler<Payload, Payload> payloadHandler = ServerCalls
-                .asyncUnaryCall((request, responseObserver) -> {
-                    grpcCommonRequestAcceptor.request(request, responseObserver);
-                });
+                .asyncUnaryCall((request, responseObserver) -> grpcCommonRequestAcceptor.request(request, responseObserver));
         
         final ServerServiceDefinition serviceDefOfUnaryPayload = ServerServiceDefinition.builder(REQUEST_SERVICE_NAME)
                 .addMethod(unaryPayloadMethod, payloadHandler).build();

File: core/src/main/java/com/alibaba/nacos/core/utils/GlobalExecutor.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.common.executor.ExecutorFactory;
 import com.alibaba.nacos.common.executor.NameThreadFactory;
+import com.alibaba.nacos.common.utils.ThreadFactoryBuilder;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.google.common.util.concurrent.ThreadFactoryBuilder;
 
 import java.util.concurrent.LinkedBlockingQueue;
 import java.util.concurrent.ScheduledExecutorService;
@@ -46,13 +46,13 @@ public class GlobalExecutor {
             EnvUtil.getAvailableProcessors(RemoteUtils.getRemoteExecutorTimesOfProcessors()),
             EnvUtil.getAvailableProcessors(RemoteUtils.getRemoteExecutorTimesOfProcessors()), 60L, TimeUnit.SECONDS,
             new LinkedBlockingQueue<>(RemoteUtils.getRemoteExecutorQueueSize()),
-            new ThreadFactoryBuilder().setDaemon(true).setNameFormat("nacos-grpc-executor-%d").build());
+            new ThreadFactoryBuilder().daemon(true).nameFormat("nacos-grpc-executor-%d").build());
     
     public static final ThreadPoolExecutor clusterRpcExecutor = new ThreadPoolExecutor(
             EnvUtil.getAvailableProcessors(RemoteUtils.getRemoteExecutorTimesOfProcessors()),
             EnvUtil.getAvailableProcessors(RemoteUtils.getRemoteExecutorTimesOfProcessors()), 60L, TimeUnit.SECONDS,
             new LinkedBlockingQueue<>(RemoteUtils.getRemoteExecutorQueueSize()),
-            new ThreadFactoryBuilder().setDaemon(true).setNameFormat("nacos-cluster-grpc-executor-%d").build());
+            new ThreadFactoryBuilder().daemon(true).nameFormat("nacos-cluster-grpc-executor-%d").build());
     
     public static void runWithoutThread(Runnable runnable) {
         runnable.run();

File: core/src/test/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxyTest.java
Patch:
@@ -18,7 +18,7 @@
 package com.alibaba.nacos.core.cluster.remote;
 
 import com.alibaba.nacos.api.ability.ServerAbilities;
-import com.alibaba.nacos.api.ability.ServerRemoteAbility;
+import com.alibaba.nacos.api.remote.ability.ServerRemoteAbility;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.RequestCallBack;
 import com.alibaba.nacos.api.remote.request.HealthCheckRequest;

File: core/src/test/java/com/alibaba/nacos/core/controller/ServerLoaderControllerTest.java
Patch:
@@ -18,7 +18,7 @@
 package com.alibaba.nacos.core.controller;
 
 import com.alibaba.nacos.api.ability.ServerAbilities;
-import com.alibaba.nacos.api.ability.ServerRemoteAbility;
+import com.alibaba.nacos.api.remote.ability.ServerRemoteAbility;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
 import com.alibaba.nacos.core.cluster.Member;

File: core/src/test/java/com/alibaba/nacos/core/remote/control/TpsMonitorManagerTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.remote.control;
 
-import org.assertj.core.util.Lists;
+import com.alibaba.nacos.common.utils.CollectionUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.BeforeClass;
@@ -57,7 +57,7 @@ public void testApplyTps() {
         for (int i = 0; i < 100; i++) {
             String value = "atg" + (new Random().nextInt(100) + 2) + "efb";
             boolean pass = tpsMonitorManager
-                    .applyTps("configPublish", "testconnectionId", Lists.list(new TestKey(value)));
+                    .applyTps("configPublish", "testconnectionId", CollectionUtils.list(new TestKey(value)));
             assertTrue(pass);
             try {
                 Thread.sleep(1L);
@@ -72,7 +72,7 @@ public void testApplyTpsWithOverFlow() {
         for (int i = 0; i < 1000; i++) {
             String value = "atg" + (new Random().nextInt(100) + 2) + "efb";
             boolean pass = tpsMonitorManager
-                    .applyTps("configPublish", "testconnectionId", Lists.list(new TestKey(value)));
+                    .applyTps("configPublish", "testconnectionId", CollectionUtils.list(new TestKey(value)));
             if (!pass) {
                 return;
             }

File: address/src/main/java/com/alibaba/nacos/address/configuration/AddressServerSpringConfiguration.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.configuration;
 
 import com.alibaba.nacos.address.auth.AddressServerAuthManager;
-import com.alibaba.nacos.auth.AuthService;
+import com.alibaba.nacos.auth.AuthManager;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -31,8 +31,8 @@
 public class AddressServerSpringConfiguration {
     
     @Bean
-    @ConditionalOnMissingBean(value = AuthService.class)
-    public AuthService getAuthService() {
+    @ConditionalOnMissingBean(value = AuthManager.class)
+    public AuthManager getAuthManager() {
         return new AddressServerAuthManager();
     }
 }

File: auth/src/main/java/com/alibaba/nacos/auth/AuthService.java
Patch:
@@ -41,9 +41,8 @@ public interface AuthService {
      * @param identityContext where we can find the user information.
      * @param permission permission to auth.
      * @return Boolean if the user has the resource authority.
-     * @throws AccessException authority authentication error.
      */
-    Boolean authorityAccess(IdentityContext identityContext, Permission permission) throws AccessException;
+    Boolean authorityAccess(IdentityContext identityContext, Permission permission);
     
     /**
      * AuthService Name which for conveniently find AuthService instance.

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java
Patch:
@@ -51,7 +51,7 @@ public class AuthConfigs extends Subscriber<ServerConfigChangeEvent> {
      * Authority key set.
      */
     @Value("${" + Constants.Auth.NACOS_CORE_AUTH_AUTHORITY_KEY + ":}")
-    private String[] authorityKey;
+    private  String[] authorityKey;
     
     /**
      * Whether auth enabled.

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/JwtAuthenticationEntryPoint.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright 1999-2021 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.auth;
+package com.alibaba.nacos.console.security.nacos;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -53,7 +53,7 @@ public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta)
             // TODO select service by selector
             List<String> serviceNameList = ServiceUtil
                     .pageServiceName(request.getPageNo(), request.getPageSize(), serviceNameSet);
-            result.setCount(serviceNameList.size());
+            result.setCount(serviceNameSet.size());
             result.setServiceNames(serviceNameList);
         }
         return result;

File: common/src/test/java/com/alibaba/nacos/common/http/param/QueryTest.java
Patch:
@@ -22,7 +22,7 @@
 
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
-import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.Map;
 
 import static org.junit.Assert.assertEquals;
@@ -31,7 +31,7 @@ public class QueryTest {
     
     @Test
     public void testToQueryUrl() {
-        Map<String, String> parameters = new HashMap<String, String>();
+        Map<String, String> parameters = new LinkedHashMap<String, String>();
         parameters.put(CommonParams.NAMESPACE_ID, "namespace");
         parameters.put(CommonParams.SERVICE_NAME, "service");
         parameters.put(CommonParams.GROUP_NAME, "group");
@@ -40,7 +40,7 @@ public void testToQueryUrl() {
         parameters.put("port", String.valueOf(9999));
         parameters.put("weight", String.valueOf(1.0));
         parameters.put("ephemeral", String.valueOf(true));
-        String excepted = "groupName=group&namespaceId=namespace&port=9999&ip=1.1.1.1&weight=1.0&ephemeral=true&serviceName=service";
+        String excepted = "namespaceId=namespace&serviceName=service&groupName=group&ip=1.1.1.1&port=9999&weight=1.0&ephemeral=true";
         assertEquals(excepted, Query.newInstance().initParams(parameters).toQueryUrl());
     }
     

File: common/src/test/java/com/alibaba/nacos/common/utils/CollectionUtilsTest.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Enumeration;
@@ -75,8 +76,8 @@ public void testGetMap2() {
     
     @Test
     public void testGetMap3() {
-        Map<String, String> map1 = new HashMap(1);
-        Map<String, String> map2 = new HashMap(2);
+        Map<String, String> map1 = new LinkedHashMap(1);
+        Map<String, String> map2 = new LinkedHashMap(2);
         map1.put("key", "value");
         map2.put("key1", "value1");
         map2.put("key2", "value2");

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -93,6 +93,9 @@ public User getUser(String username) {
         User user = userMap.get(username);
         if (!authConfigs.isCachingEnabled() || user == null) {
             user = getUserFromDatabase(username);
+            if (user != null) {
+                userMap.put(username, user);
+            }
         }
         return user;
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java
Patch:
@@ -142,6 +142,7 @@ public void request(Payload grpcRequest, StreamObserver<Payload> responseObserve
             traceIfNecessary(payloadResponse, false);
             responseObserver.onNext(payloadResponse);
             responseObserver.onCompleted();
+            return;
         }
         
         if (!(parseObj instanceof Request)) {

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java
Patch:
@@ -142,6 +142,7 @@ public void request(Payload grpcRequest, StreamObserver<Payload> responseObserve
             traceIfNecessary(payloadResponse, false);
             responseObserver.onNext(payloadResponse);
             responseObserver.onCompleted();
+            return;
         }
         
         if (!(parseObj instanceof Request)) {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -225,7 +225,7 @@ public List<Instance> getAllInstances(String serviceName, String groupName, List
         String clusterString = StringUtils.join(clusters, ",");
         if (subscribe) {
             serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
-            if (null == serviceInfo) {
+            if (null == serviceInfo || !clientProxy.isSubscribed(serviceName, groupName, clusterString)) {
                 serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
             }
         } else {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -225,7 +225,7 @@ public List<Instance> getAllInstances(String serviceName, String groupName, List
         String clusterString = StringUtils.join(clusters, ",");
         if (subscribe) {
             serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
-            if (null == serviceInfo) {
+            if (null == serviceInfo || !clientProxy.isSubscribed(serviceName, groupName, clusterString)) {
                 serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
             }
         } else {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -1028,7 +1028,7 @@ public ConfigResponse queryConfig(String dataId, String group, String tenant, lo
                 LOGGER.error("[{}] [sub-server-error]  dataId={}, group={}, tenant={}, code={}", this.getName(), dataId,
                         group, tenant, response);
                 throw new NacosException(response.getErrorCode(),
-                        "http error, code=" + response.getErrorCode() + ",dataId=" + dataId + ",group=" + group
+                        "http error, code=" + response.getErrorCode() + ",msg=" + response.getMessage() + ",dataId=" + dataId + ",group=" + group
                                 + ",tenant=" + tenant);
                 
             }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -1028,7 +1028,7 @@ public ConfigResponse queryConfig(String dataId, String group, String tenant, lo
                 LOGGER.error("[{}] [sub-server-error]  dataId={}, group={}, tenant={}, code={}", this.getName(), dataId,
                         group, tenant, response);
                 throw new NacosException(response.getErrorCode(),
-                        "http error, code=" + response.getErrorCode() + ",dataId=" + dataId + ",group=" + group
+                        "http error, code=" + response.getErrorCode() + ",msg=" + response.getMessage() + ",dataId=" + dataId + ",group=" + group
                                 + ",tenant=" + tenant);
                 
             }

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingApplicationListener.java
Patch:
@@ -221,7 +221,7 @@ private void closeExecutor() {
     private void makeWorkDir() {
         String[] dirNames = new String[] {"logs", "conf", "data"};
         for (String dirName : dirNames) {
-            LOGGER.info("Nacos Log files: {}", Paths.get(EnvUtil.getNacosHome(), dirName).toString());
+            LOGGER.info("Nacos Log files: {}", Paths.get(EnvUtil.getNacosHome(), dirName));
             try {
                 DiskUtils.forceMkdir(new File(Paths.get(EnvUtil.getNacosHome(), dirName).toUri()));
             } catch (Exception e) {

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -92,7 +92,7 @@ public class ConnectionManager extends Subscriber<ConnectionLimitRuleChangeEvent
     
     private Map<String, AtomicInteger> connectionForClientIp = new ConcurrentHashMap<String, AtomicInteger>(16);
     
-    Map<String, Connection> connections = new ConcurrentHashMap<String, Connection>();
+    Map<String, Connection> connections = new ConcurrentHashMap<>();
     
     @Autowired
     private ClientConnectionEventListenerRegistry clientConnectionEventListenerRegistry;

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -173,9 +173,7 @@ private void addServices(MutableHandlerRegistry handlerRegistry, ServerIntercept
                 .setResponseMarshaller(ProtoUtils.marshaller(Payload.getDefaultInstance())).build();
         
         final ServerCallHandler<Payload, Payload> payloadHandler = ServerCalls
-                .asyncUnaryCall((request, responseObserver) -> {
-                    grpcCommonRequestAcceptor.request(request, responseObserver);
-                });
+                .asyncUnaryCall((request, responseObserver) -> grpcCommonRequestAcceptor.request(request, responseObserver));
         
         final ServerServiceDefinition serviceDefOfUnaryPayload = ServerServiceDefinition.builder(REQUEST_SERVICE_NAME)
                 .addMethod(unaryPayloadMethod, payloadHandler).build();

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -115,7 +115,7 @@ private void initAPProtocol() {
             Class configType = ClassUtils.resolveGenericType(protocol.getClass());
             Config config = (Config) ApplicationUtils.getBean(configType);
             injectMembers4AP(config);
-            protocol.init((config));
+            protocol.init(config);
             ProtocolManager.this.apProtocol = protocol;
         });
     }
@@ -125,7 +125,7 @@ private void initCPProtocol() {
             Class configType = ClassUtils.resolveGenericType(protocol.getClass());
             Config config = (Config) ApplicationUtils.getBean(configType);
             injectMembers4CP(config);
-            protocol.init((config));
+            protocol.init(config);
             ProtocolManager.this.cpProtocol = protocol;
         });
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.concurrent.ScheduledThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
+import static com.alibaba.nacos.client.constant.Constants.Security.SECURITY_INFO_REFRESH_INTERVAL_MILLS;
 import static com.alibaba.nacos.client.utils.LogUtils.NAMING_LOGGER;
 
 /**
@@ -48,8 +49,6 @@
  */
 public class NamingClientProxyDelegate implements NamingClientProxy {
     
-    private final long securityInfoRefreshIntervalMills = TimeUnit.SECONDS.toMillis(5);
-    
     private final ServerListManager serverListManager;
     
     private final ServiceInfoUpdateService serviceInfoUpdateService;
@@ -87,7 +86,7 @@ private void initSecurityProxy() {
         });
         this.securityProxy.login(serverListManager.getServerList());
         this.executorService.scheduleWithFixedDelay(() -> securityProxy.login(serverListManager.getServerList()), 0,
-                securityInfoRefreshIntervalMills, TimeUnit.MILLISECONDS);
+                SECURITY_INFO_REFRESH_INTERVAL_MILLS, TimeUnit.MILLISECONDS);
     }
     
     @Override

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ServiceInfoHolder.java
Patch:
@@ -185,6 +185,7 @@ private boolean isChangedServiceInfo(ServiceInfo oldService, ServiceInfo newServ
         if (oldService.getLastRefTime() > newService.getLastRefTime()) {
             NAMING_LOGGER.warn("out of date data received, old-t: {}, new-t: {}", oldService.getLastRefTime(),
                     newService.getLastRefTime());
+            return false;
         }
         boolean changed = false;
         Map<String, Instance> oldHostMap = new HashMap<String, Instance>(oldService.getHosts().size());

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -454,7 +454,9 @@ public void shutdown() throws NacosException {
         LOGGER.info("Shutdown rpc client, set status to shutdown");
         rpcClientStatus.set(RpcClientStatus.SHUTDOWN);
         LOGGER.info("Shutdown client event executor " + clientEventExecutor);
-        clientEventExecutor.shutdownNow();
+        if (clientEventExecutor != null) {
+            clientEventExecutor.shutdownNow();
+        }
         closeConnection(currentConnection);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/executor/ThreadPoolManager.java
Patch:
@@ -82,9 +82,7 @@ private void init() {
      */
     public void register(String namespace, String group, ExecutorService executor) {
         if (!resourcesManager.containsKey(namespace)) {
-            synchronized (this) {
-                lockers.put(namespace, new Object());
-            }
+            lockers.putIfAbsent(namespace, new Object());
         }
         final Object monitor = lockers.get(namespace);
         synchronized (monitor) {

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ServiceInfoHolder.java
Patch:
@@ -69,9 +69,9 @@ public class ServiceInfoHolder implements Closeable {
     public ServiceInfoHolder(String namespace, Properties properties) {
         initCacheDir(namespace, properties);
         if (isLoadCacheAtStart(properties)) {
-            this.serviceInfoMap = new ConcurrentHashMap<String, ServiceInfo>(DiskCache.read(this.cacheDir));
+            this.serviceInfoMap = new ConcurrentHashMap<>(DiskCache.read(this.cacheDir));
         } else {
-            this.serviceInfoMap = new ConcurrentHashMap<String, ServiceInfo>(16);
+            this.serviceInfoMap = new ConcurrentHashMap<>(16);
         }
         this.failoverReactor = new FailoverReactor(this, cacheDir);
         this.pushEmptyProtection = isPushEmptyProtect(properties);

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -74,7 +74,7 @@ public static String getAppName(HttpServletRequest request) {
      * @return may be return null
      */
     public static User getUser(HttpServletRequest request) {
-        Object userObj = request.getAttribute(NACOS_USER_KEY);
+        Object userObj = request.getSession().getAttribute(NACOS_USER_KEY);
         if (userObj == null) {
             return null;
         }

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthManager.java
Patch:
@@ -96,7 +96,7 @@ public User login(Object request) throws AccessException {
                 }
             }
         }
-        req.setAttribute(RequestUtil.NACOS_USER_KEY, user);
+        req.getSession().setAttribute(RequestUtil.NACOS_USER_KEY, user);
         return user;
     }
     

File: client/src/main/java/com/alibaba/nacos/client/utils/AppNameUtils.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.client.constant.Constants;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.File;
@@ -27,8 +28,6 @@
  */
 public class AppNameUtils {
     
-    private static final String PARAM_MARKING_PROJECT = "project.name";
-    
     private static final String PARAM_MARKING_JBOSS = "jboss.server.home.dir";
     
     private static final String PARAM_MARKING_JETTY = "jetty.home";
@@ -64,7 +63,7 @@ public static String getAppName() {
     }
     
     private static String getAppNameByProjectName() {
-        return System.getProperty(PARAM_MARKING_PROJECT);
+        return System.getProperty(Constants.SysEnv.PROJECT_NAME);
     }
     
     private static String getAppNameByServerHome() {

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -101,7 +101,6 @@ public void cleanup() throws Exception {
     @Test
     public void registerInstance_ephemeral_true() throws Exception {
         String serviceName = NamingBase.randomDomainName();
-        namingServiceCreate(serviceName, TEST_NAMESPACE_1, TEST_GROUP_1);
 
         Instance instance = new Instance();
         instance.setEphemeral(true);  //是否临时实例
@@ -178,7 +177,6 @@ public void createService() throws Exception {
     @Test
     public void deleteService_hasInstace() {
         String serviceName = NamingBase.randomDomainName();
-        namingServiceCreate(serviceName, TEST_NAMESPACE_1);
 
         ResponseEntity<String> registerResponse = request(NamingBase.NAMING_CONTROLLER_PATH + "/instance",
             Params.newParams()
@@ -340,7 +338,7 @@ public void registerInstance_query() throws Exception {
     }
 
     /**
-     * @TCDescription : 根据serviceName创建服务，注册不同group的2个持久化实例, 注销实例，删除服务
+     * @TCDescription : 根据serviceName创建服务，注册不同group的2个非持久化实例, 注销实例，删除服务
      * @TestStep :
      * @ExpectResult :
      */
@@ -382,6 +380,7 @@ private void instanceDeregister(String serviceName, String namespace, String gro
                 .appendParam("port", port)
                 .appendParam("namespaceId", namespace)
                 .appendParam("groupName", groupName)
+                .appendParam("ephemeral", "false")
                 .done(),
             String.class,
             HttpMethod.DELETE);
@@ -396,6 +395,7 @@ private void instanceRegister(String serviceName, String namespace, String group
                 .appendParam("port", port)
                 .appendParam("namespaceId", namespace)
                 .appendParam("groupName", groupName)
+                .appendParam("ephemeral", "false")
                 .done(),
             String.class,
             HttpMethod.POST);

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HealthControllerTest.java
Patch:
@@ -47,7 +47,7 @@
 @RunWith(SpringJUnit4ClassRunner.class)
 @ContextConfiguration(classes = MockServletContext.class)
 @WebAppConfiguration
-public class HealthControllerUnitTest {
+public class HealthControllerTest {
     
     @InjectMocks
     HealthController healthController;

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionMeta.java
Patch:
@@ -73,7 +73,7 @@ public class ConnectionMeta {
     Date createTime;
     
     /**
-     * astActiveTime.
+     * lastActiveTime.
      */
     long lastActiveTime;
     

File: istio/src/main/java/com/alibaba/nacos/istio/common/ResourceSnapshot.java
Patch:
@@ -64,7 +64,7 @@ private void generateVersion() {
     private void initServiceEntry(NacosResourceManager manager) {
        Map<String, IstioService> serviceInfoMap = manager.services();
        for (String serviceName : serviceInfoMap.keySet()) {
-           ServiceEntryWrapper serviceEntryWrapper = IstioCrdUtil.buildServiceEntry(serviceName, serviceInfoMap.get(serviceName));
+           ServiceEntryWrapper serviceEntryWrapper = IstioCrdUtil.buildServiceEntry(serviceName, manager.getIstioConfig().getDomainSuffix(), serviceInfoMap.get(serviceName));
            if (serviceEntryWrapper != null) {
                serviceEntries.add(serviceEntryWrapper);
            }

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -236,7 +236,7 @@ public static boolean isUseAddressServer() {
      * member information update.
      *
      * @param newMember {@link Member}
-     * @return update is successw
+     * @return update is success
      */
     public boolean update(Member newMember) {
         Loggers.CLUSTER.debug("member information update : {}", newMember);
@@ -271,7 +271,7 @@ void notifyMemberChange(Member member) {
      * Whether the node exists within the cluster.
      *
      * @param address ip:port
-     * @return is exist
+     * @return is exists
      */
     public boolean hasMember(String address) {
         boolean result = serverList.containsKey(address);

File: client/src/main/java/com/alibaba/nacos/client/utils/TemplateUtils.java
Patch:
@@ -41,7 +41,7 @@ public static void stringNotEmptyAndThenExecute(String source, Runnable runnable
             try {
                 runnable.run();
             } catch (Exception e) {
-                LogUtils.NAMING_LOGGER.error("string empty and then execute cause an exception.", e);
+                LogUtils.NAMING_LOGGER.error("string not empty and then execute cause an exception.", e);
             }
         }
     }

File: auth/src/main/java/com/alibaba/nacos/auth/JwtTokenManager.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.auth;
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.constant.Constants;
 import io.jsonwebtoken.Claims;
 import io.jsonwebtoken.Jwts;
 import io.jsonwebtoken.SignatureAlgorithm;
@@ -41,8 +42,6 @@
 @Component
 public class JwtTokenManager {
     
-    private static final String AUTHORITIES_KEY = "auth";
-    
     @Autowired
     private AuthConfigs authConfigs;
     
@@ -85,7 +84,7 @@ public Authentication getAuthentication(String token) {
                 .parseClaimsJws(token).getBody();
         
         List<GrantedAuthority> authorities = AuthorityUtils
-                .commaSeparatedStringToAuthorityList((String) claims.get(AUTHORITIES_KEY));
+                .commaSeparatedStringToAuthorityList((String) claims.get(Constants.Jwt.AUTHORITIES_KEY));
         
         User principal = new User(claims.getSubject(), "", authorities);
         return new UsernamePasswordAuthenticationToken(principal, "", authorities);

File: auth/src/main/java/com/alibaba/nacos/auth/persist/datasource/DataSourcePoolProperties.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.auth.persist.datasource;
 
+import com.alibaba.nacos.auth.constant.Constants;
 import com.zaxxer.hikari.HikariDataSource;
 import org.springframework.boot.context.properties.bind.Bindable;
 import org.springframework.boot.context.properties.bind.Binder;
@@ -58,7 +59,7 @@ private DataSourcePoolProperties() {
      */
     public static DataSourcePoolProperties build(Environment environment) {
         DataSourcePoolProperties result = new DataSourcePoolProperties();
-        Binder.get(environment).bind("db.pool.config", Bindable.ofInstance(result.getDataSource()));
+        Binder.get(environment).bind(Constants.DataSource.DB_POOL_CONFIG, Bindable.ofInstance(result.getDataSource()));
         return result;
     }
     

File: auth/src/main/java/com/alibaba/nacos/auth/persist/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.auth.persist.datasource;
 
+import com.alibaba.nacos.auth.constant.Constants;
 import com.alibaba.nacos.auth.util.AuthPropertyUtil;
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
@@ -73,7 +74,7 @@ public class ExternalDataSourceServiceImpl implements DataSourceService {
     
     @Override
     public void init() {
-        queryTimeout = ConvertUtils.toInt(System.getProperty("QUERYTIMEOUT"), 3);
+        queryTimeout = ConvertUtils.toInt(System.getProperty(Constants.ExternalDataSource.QUERYTIMEOUT), 3);
         jt = new JdbcTemplate();
         // Set the maximum number of records to prevent memory expansion
         jt.setMaxRows(50000);

File: auth/src/main/java/com/alibaba/nacos/auth/roles/NacosAuthRoleServiceImpl.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.auth.NacosAuthConfig;
 import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.constant.Constants;
 import com.alibaba.nacos.auth.model.Page;
 import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.auth.model.PermissionInfo;
@@ -126,7 +127,7 @@ public boolean hasPermission(String username, Permission permission) {
         
         // Global admin pass:
         for (RoleInfo roleInfo : roleInfoList) {
-            if (GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole())) {
+            if (Constants.Auth.GLOBAL_ADMIN_ROLE.equals(roleInfo.getRole())) {
                 return true;
             }
         }

File: auth/src/test/java/com/alibaba/nacos/auth/common/AuthConfigsTest.java
Patch:
@@ -59,7 +59,7 @@ public void testUpgradeFromEvent() {
         environment.setProperty("nacos.core.auth.server.identity.key", TEST_SERVER_IDENTITY_KEY);
         environment.setProperty("nacos.core.auth.server.identity.value", TEST_SERVER_IDENTITY_VALUE);
         environment.setProperty("nacos.core.auth.enable.userAgentAuthWhite", String.valueOf(TEST_ENABLE_UA_WHITE));
-        environment.setProperty("nacos.core.auth.enable.authorityKey", AUTHORITY_KEY);
+        environment.setProperty("nacos.core.auth.authorityKey", AUTHORITY_KEY);
         environment.setProperty("nacos.core.auth.system.type", AUTH_SYSTEM_TYPES);
         
         authConfigs.onEvent(ServerConfigChangeEvent.newEvent());

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ClientMetricsController.java
Patch:
@@ -71,7 +71,7 @@ public class ClientMetricsController {
      * get client metric.
      *
      * @param ip client ip .
-     * @return
+     * @return ResponseEntity
      */
     @GetMapping("/cluster")
     public ResponseEntity metric(@RequestParam("ip") String ip,

File: config/src/main/java/com/alibaba/nacos/config/server/constant/CounterMode.java
Patch:
@@ -36,7 +36,7 @@ public enum CounterMode {
     /**
      * Reverse the two mode value.
      *
-     * @return
+     * @return CounterMode
      */
     public CounterMode reverse() {
         if (INCREMENT == this) {

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigPublishRequest.java
Patch:
@@ -61,7 +61,7 @@ public String getAdditionParam(String key) {
      */
     public void putAdditionalParam(String key, String value) {
         if (additionMap == null) {
-            additionMap = new HashMap<String, String>(2);
+            additionMap = new HashMap<>(2);
         }
         additionMap.put(key, value);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceOperatorV1Impl.java
Patch:
@@ -122,8 +122,7 @@ public ObjectNode queryService(String namespaceId, String serviceName) throws Na
     }
     
     @Override
-    public List<String> listService(String namespaceId, String groupName, String selector, int pageSize, int pageNo)
-            throws NacosException {
+    public Collection<String> listService(String namespaceId, String groupName, String selector) throws NacosException {
         Map<String, com.alibaba.nacos.naming.core.Service> serviceMap = serviceManager.chooseServiceMap(namespaceId);
         if (serviceMap == null || serviceMap.isEmpty()) {
             return Collections.emptyList();
@@ -134,7 +133,7 @@ public List<String> listService(String namespaceId, String groupName, String sel
             serviceMap.entrySet()
                     .removeIf(entry -> !entry.getKey().startsWith(groupName + Constants.SERVICE_INFO_SPLITER));
         }
-        return ServiceUtil.pageServiceName(pageNo, pageSize, serviceMap);
+        return serviceMap.keySet();
     }
     
     @Override

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/ServiceControllerTest.java
Patch:
@@ -63,7 +63,7 @@ public void before() {
     @Test
     public void testList() throws Exception {
         
-        Mockito.when(serviceOperatorV2.listService(Mockito.anyString(), Mockito.anyString(), Mockito.anyString(), Mockito.anyInt(), Mockito.anyInt()))
+        Mockito.when(serviceOperatorV2.listService(Mockito.anyString(), Mockito.anyString(), Mockito.anyString()))
                 .thenReturn(Collections.singletonList("DEFAULT_GROUP@@providers:com.alibaba.nacos.controller.test:1"));
     
         MockHttpServletRequest servletRequest = new MockHttpServletRequest();

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceOperatorV2ImplTest.java
Patch:
@@ -41,7 +41,6 @@
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 import java.util.Optional;
 
@@ -123,7 +122,7 @@ public void testQueryService() throws NacosException {
     
     @Test
     public void testListService() throws NacosException {
-        List<String> res = serviceOperatorV2.listService("A", "B", null, 10, 1);
+        Collection<String> res = serviceOperatorV2.listService("A", "B", null);
         Assert.assertEquals(1, res.size());
     }
     

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Credential Listener.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcher.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -59,7 +59,7 @@ public CredentialWatcher(String appName, CredentialService serviceInstance) {
         loadCredential(true);
         
         executor = ExecutorFactory
-                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.identify.watcher"));
+                .newSingleScheduledExecutorService(new NameThreadFactory("com.alibaba.nacos.client.auth.ram.identify.watcher"));
         
         executor.scheduleWithFixedDelay(new Runnable() {
             private long modified = 0;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/Credentials.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Credentials.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/IdentifyConstants.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Identify Constants.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/SpasCredential.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Spas Credential Interface.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/SpasCredentialLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 /**
  * Spas Credential Loader.

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/identify/StsCredential.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import com.fasterxml.jackson.annotation.JsonProperty;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/injector/ConfigResourceInjector.java
Patch:
@@ -22,9 +22,9 @@
 import com.alibaba.nacos.client.auth.ram.RamContext;
 import com.alibaba.nacos.client.auth.spi.RequestResource;
 import com.alibaba.nacos.client.config.impl.ConfigHttpClientManager;
-import com.alibaba.nacos.client.config.impl.SpasAdapter;
-import com.alibaba.nacos.client.identify.StsConfig;
-import com.alibaba.nacos.client.identify.StsCredential;
+import com.alibaba.nacos.client.auth.ram.utils.SpasAdapter;
+import com.alibaba.nacos.client.auth.ram.identify.StsConfig;
+import com.alibaba.nacos.client.auth.ram.identify.StsCredential;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.param.Header;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/injector/NamingResourceInjector.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import com.alibaba.nacos.client.auth.ram.RamContext;
 import com.alibaba.nacos.client.auth.spi.RequestResource;
-import com.alibaba.nacos.client.naming.utils.SignUtil;
+import com.alibaba.nacos.client.auth.ram.utils.SignUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import static com.alibaba.nacos.client.utils.LogUtils.NAMING_LOGGER;

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/utils/SignUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.naming.utils;
+package com.alibaba.nacos.client.auth.ram.utils;
 
 import com.alibaba.nacos.common.codec.Base64;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/ram/utils/SpasAdapter.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2021 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.impl;
+package com.alibaba.nacos.client.auth.ram.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.identify.CredentialService;
+import com.alibaba.nacos.client.auth.ram.identify.CredentialService;
 import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/spi/ClientAuthService.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
+import com.alibaba.nacos.common.lifecycle.Closeable;
 
 import java.util.List;
 import java.util.Properties;
@@ -27,7 +28,7 @@
  *
  * @author wuyfee
  */
-public interface ClientAuthService {
+public interface ClientAuthService extends Closeable {
     
     /**
      * login(request) to service and get response.

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -593,7 +593,8 @@ private ConnectionType getConnectionType() {
         }
         
         @Override
-        public void shutdown() {
+        public void shutdown() throws NacosException {
+            super.shutdown();
             synchronized (RpcClientFactory.getAllClientEntries()) {
                 LOGGER.info("Trying to shutdown transport client " + this);
                 Set<Map.Entry<String, RpcClient>> allClientEntries = RpcClientFactory.getAllClientEntries();

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -62,8 +62,8 @@ public abstract class ConfigTransportClient {
     
     protected SecurityProxy securityProxy;
     
-    public void shutdown() {
-    
+    public void shutdown() throws NacosException {
+        securityProxy.shutdown();
     }
     
     public ConfigTransportClient(Properties properties, ServerListManager serverListManager) {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -178,6 +178,7 @@ public void shutdown() throws NacosException {
         serverListManager.shutdown();
         httpClientProxy.shutdown();
         grpcClientProxy.shutdown();
+        securityProxy.shutdown();
         ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialServiceTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import junit.framework.TestCase;
 import org.junit.Assert;
@@ -143,4 +143,4 @@ public void testSetSecretKey() {
         Assert.assertEquals("sk1", credentialService1.getSecretKey());
     }
     
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialWatcherTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -34,4 +34,4 @@ public void stop() throws NoSuchFieldException, IllegalAccessException {
         ScheduledExecutorService executor = (ScheduledExecutorService) executorField.get(watcher);
         Assert.assertTrue(executor.isShutdown());
     }
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/CredentialsTest.java
Patch:
@@ -16,7 +16,7 @@
  *
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -79,4 +79,4 @@ public void testIdentical() {
         //then
         Assert.assertTrue(actual);
     }
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/identify/StsConfigTest.java
Patch:
@@ -14,7 +14,7 @@
  *   limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.client.auth.ram.identify;
 
 import org.junit.After;
 import org.junit.Assert;
@@ -89,4 +89,4 @@ public void testIsOnTrue() {
         Assert.assertTrue(stsOn);
     }
     
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/injector/ConfigResourceInjectorTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import com.alibaba.nacos.client.auth.ram.RamContext;
 import com.alibaba.nacos.client.auth.spi.RequestResource;
-import com.alibaba.nacos.client.identify.StsConfig;
+import com.alibaba.nacos.client.auth.ram.identify.StsConfig;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/injector/NamingResourceInjectorTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import com.alibaba.nacos.client.auth.ram.RamContext;
 import com.alibaba.nacos.client.auth.spi.RequestResource;
-import com.alibaba.nacos.client.naming.utils.SignUtil;
+import com.alibaba.nacos.client.auth.ram.utils.SignUtil;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: client/src/test/java/com/alibaba/nacos/client/naming/remote/AbstractNamingClientProxyTest.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.client.auth.spi.RequestResource;
 import com.alibaba.nacos.client.naming.event.ServerListChangedEvent;
-import com.alibaba.nacos.client.naming.utils.SignUtil;
+import com.alibaba.nacos.client.auth.ram.utils.SignUtil;
 import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.common.notify.Event;

File: client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImpl.java
Patch:
@@ -56,7 +56,7 @@ public class NacosClientAuthServiceImpl extends AbstractClientAuthService {
     /**
      * A context to take with when sending request to Nacos server.
      */
-    private volatile LoginIdentityContext loginIdentityContext;
+    private volatile LoginIdentityContext loginIdentityContext = new LoginIdentityContext();
     
     
     /**

File: client/src/test/java/com/alibaba/nacos/client/auth/ram/RamClientAuthServiceImplTest.java
Patch:
@@ -33,7 +33,6 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
-import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/spi/AbstractClientAuthService.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.client.auth.spi;
 
-import com.alibaba.nacos.client.auth.spi.ClientAuthService;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
+
 import java.util.List;
 
 public abstract class AbstractClientAuthService implements ClientAuthService {

File: client/src/main/java/com/alibaba/nacos/client/auth/spi/ClientAuthService.java
Patch:
@@ -54,8 +54,10 @@ public interface ClientAuthService {
     /**
      * get login identity context.
      *
+     * @param resource resource for this request, some of plugin implementation will use this resource to generate their
+     *                 identity context. If no need to use can ignore it.
      * @return LoginIdentityContext this plugin loginIdentityContext.
      */
-    LoginIdentityContext getLoginIdentityContext();
+    LoginIdentityContext getLoginIdentityContext(RequestResource resource);
     
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/SignUtil.java
Patch:
@@ -33,9 +33,6 @@ public class SignUtil {
     
     private static final Charset UTF8 = StandardCharsets.UTF_8;
     
-    public SignUtil() {
-    }
-    
     /**
      * Sign.
      *

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -74,9 +74,10 @@ public boolean login(Properties properties) {
     public Map<String, String> getIdentityContext() {
         Map<String, String> header = new HashMap<>();
         for (ClientAuthService clientAuthService : this.clientAuthServiceHashSet) {
-            LoginIdentityContext loginIdentityContext = clientAuthService.getLoginIdentityContext();
+            //TODO input resource
+            LoginIdentityContext loginIdentityContext = clientAuthService.getLoginIdentityContext(null);
             for (String key : loginIdentityContext.getAllKey()) {
-                header.put(key, (String) loginIdentityContext.getParameter(key));
+                header.put(key, loginIdentityContext.getParameter(key));
             }
         }
         return header;

File: client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java
Patch:
@@ -160,7 +160,7 @@ public void testGetAccessToken() throws Exception {
         //when
         Assert.assertTrue(nacosClientAuthService.login(properties));
         //then
-        Assert.assertEquals("abc", nacosClientAuthService.getLoginIdentityContext().getParameter(NacosAuthLoginConstant.ACCESSTOKEN));
+        Assert.assertEquals("abc", nacosClientAuthService.getLoginIdentityContext(null).getParameter(NacosAuthLoginConstant.ACCESSTOKEN));
     }
     
 }

File: client/src/main/java/com/alibaba/nacos/client/auth/ClientAuthPluginManager.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.client.auth;
 
+import com.alibaba.nacos.client.auth.spi.AbstractClientAuthService;
+import com.alibaba.nacos.client.auth.spi.ClientAuthService;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.spi.NacosServiceLoader;
 import org.slf4j.Logger;

File: client/src/main/java/com/alibaba/nacos/client/auth/impl/NacosAuthLoginConstant.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth;
+package com.alibaba.nacos.client.auth.impl;
 
-public class LoginAuthConstant {
+public class NacosAuthLoginConstant {
     
     public static final String ACCESSTOKEN = "accessToken";
     

File: client/src/main/java/com/alibaba/nacos/client/auth/impl/process/LoginProcessor.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth.process;
+package com.alibaba.nacos.client.auth.impl.process;
 
 import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import java.util.Properties;

File: client/src/main/java/com/alibaba/nacos/client/auth/spi/AbstractClientAuthService.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -14,8 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth;
+package com.alibaba.nacos.client.auth.spi;
 
+import com.alibaba.nacos.client.auth.spi.ClientAuthService;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import java.util.List;
 

File: client/src/main/java/com/alibaba/nacos/client/auth/spi/ClientAuthService.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -14,8 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth;
+package com.alibaba.nacos.client.auth.spi;
 
+import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 
 import java.util.List;

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.security;
 
 import com.alibaba.nacos.client.auth.ClientAuthPluginManager;
-import com.alibaba.nacos.client.auth.ClientAuthService;
+import com.alibaba.nacos.client.auth.spi.ClientAuthService;
 import com.alibaba.nacos.client.auth.LoginIdentityContext;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 
@@ -82,4 +82,4 @@ public Map<String, String> getIdentityContext() {
         return header;
     }
     
-}
\ No newline at end of file
+}

File: client/src/test/java/com/alibaba/nacos/client/auth/ClientAuthPluginManagerTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.auth;
 
+import com.alibaba.nacos.client.auth.spi.ClientAuthService;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import org.junit.Assert;
 import org.junit.Before;

File: client/src/test/java/com/alibaba/nacos/client/auth/impl/NacosClientAuthServiceImplTest.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *     http://www.apache.org/licenses/LICENSE-2.0
+ *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.auth;
+package com.alibaba.nacos.client.auth.impl;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.common.http.HttpRestResult;
@@ -160,7 +160,7 @@ public void testGetAccessToken() throws Exception {
         //when
         Assert.assertTrue(nacosClientAuthService.login(properties));
         //then
-        Assert.assertEquals("abc", nacosClientAuthService.getLoginIdentityContext().getParameter(LoginAuthConstant.ACCESSTOKEN));
+        Assert.assertEquals("abc", nacosClientAuthService.getLoginIdentityContext().getParameter(NacosAuthLoginConstant.ACCESSTOKEN));
     }
     
 }

File: client/src/test/java/com/alibaba/nacos/client/security/SecurityProxyTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.security;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
-import com.alibaba.nacos.client.auth.LoginAuthConstant;
+import com.alibaba.nacos.client.auth.impl.NacosAuthLoginConstant;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
@@ -72,7 +72,7 @@ public void testGetIdentityContext() {
         //when
         Map<String, String> keyMap = securityProxy.getIdentityContext();
         //then
-        Assert.assertEquals("ttttttttttttttttt", keyMap.get(LoginAuthConstant.ACCESSTOKEN));
+        Assert.assertEquals("ttttttttttttttttt", keyMap.get(NacosAuthLoginConstant.ACCESSTOKEN));
     }
     
 }

File: address/src/main/java/com/alibaba/nacos/address/configuration/AddressServerSpringConfiguration.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.configuration;
 
 import com.alibaba.nacos.address.auth.AddressServerAuthManager;
-import com.alibaba.nacos.auth.AuthManager;
+import com.alibaba.nacos.auth.AuthService;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -31,8 +31,8 @@
 public class AddressServerSpringConfiguration {
     
     @Bean
-    @ConditionalOnMissingBean(value = AuthManager.class)
-    public AuthManager getAuthManager() {
+    @ConditionalOnMissingBean(value = AuthService.class)
+    public AuthService getAuthService() {
         return new AddressServerAuthManager();
     }
 }

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java
Patch:
@@ -50,7 +50,7 @@ public class AuthConfigs extends Subscriber<ServerConfigChangeEvent> {
      * Authority key set.
      */
     @Value("${nacos.core.auth.authorityKey:}")
-    private  String[] authorityKey;
+    private String[] authorityKey;
     
     /**
      * Whether auth enabled.
@@ -160,6 +160,7 @@ public void onEvent(ServerConfigChangeEvent event) {
             serverIdentityValue = EnvUtil.getProperty("nacos.core.auth.server.identity.value", "");
             enableUserAgentAuthWhite = EnvUtil.getProperty("nacos.core.auth.enable.userAgentAuthWhite", Boolean.class, false);
             authorityKey = EnvUtil.getProperty("nacos.core.auth.authorityKey", "").split(",");
+            nacosAuthSystemType = EnvUtil.getProperty("nacos.core.auth.system.type", "");
         } catch (Exception e) {
             LOGGER.warn("Upgrade auth config from env failed, use old value", e);
         }

File: auth/src/main/java/com/alibaba/nacos/auth/persist/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -217,5 +217,4 @@ public void run() {
             }
         }
     }
-    
 }

File: auth/src/main/java/com/alibaba/nacos/auth/persist/repository/embedded/AuthEmbeddedStoragePersistServiceImpl.java
Patch:
@@ -7,6 +7,7 @@
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.stereotype.Component;
+
 import javax.annotation.PostConstruct;
 
 @Conditional(value = ConditionOnEmbeddedStorage.class)

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.NacosAuthConfig;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
@@ -26,7 +27,6 @@
 import com.alibaba.nacos.console.enums.NamespaceTypeEnum;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/PermissionController.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.NacosAuthConfig;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/RoleController.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.NacosAuthConfig;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.console.security.nacos.roles;
 
+import com.alibaba.nacos.auth.NacosAuthConfig;
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -24,7 +25,6 @@
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.auth.RolePersistService;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.lang.Collections;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/FailoverClosureImpl.java
Patch:
@@ -57,7 +57,7 @@ public void run(Status status) {
             return;
         }
         final Throwable throwable = this.throwable;
-        future.completeExceptionally(Objects.nonNull(throwable) ? new ConsistencyException(throwable.toString())
+        future.completeExceptionally(Objects.nonNull(throwable) ? new ConsistencyException(throwable.getMessage())
                 : new ConsistencyException("operation failure"));
     }
     

File: common/src/main/java/com/alibaba/nacos/common/cache/builder/CacheBuilder.java
Patch:
@@ -101,7 +101,7 @@ public CacheBuilder<K, V> lru(boolean lru) {
     }
     
     /**
-     * Set the initialize capacity of the cache pair.
+     * Set the initial capacity of the cache pair.
      * @param initializeCapacity initialize capacity
      */
     public CacheBuilder<K, V> initializeCapacity(int initializeCapacity) {
@@ -116,12 +116,12 @@ public CacheBuilder<K, V> initializeCapacity(int initializeCapacity) {
      * Build the cache according to the builder attribute.
      */
     public Cache<K, V> build() {
-        Cache<K, V> cache = new SimpleCache(initializeCapacity);
+        Cache<K, V> cache = new SimpleCache<>(initializeCapacity);
         if (lru) {
             cache = new LruCache<>(cache, maximumSize);
         }
         if (expireNanos != -1) {
-            cache = new AutoExpireCache(cache, expireNanos);
+            cache = new AutoExpireCache<>(cache, expireNanos);
         }
         if (sync) {
             cache = new SynchronizedCache<>(cache);

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImplTest.java
Patch:
@@ -76,7 +76,7 @@ public void testGetRolesByUserName() {
     public void testAddRole() {
         externalRolePersistService.addRole("role", "userName");
         
-        String sql = "INSERT into roles (role, username) VALUES (?, ?)";
+        String sql = "INSERT INTO roles (role, username) VALUES (?, ?)";
         Mockito.verify(jt).update(sql, "role", "userName");
     }
     

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalUserPersistServiceImplTest.java
Patch:
@@ -64,7 +64,7 @@ public void setUp() throws Exception {
     public void testCreateUser() {
         externalUserPersistService.createUser("username", "password");
         
-        String sql = "INSERT into users (username, password, enabled) VALUES (?, ?, ?)";
+        String sql = "INSERT INTO users (username, password, enabled) VALUES (?, ?, ?)";
         Mockito.verify(jdbcTemplate).update(sql, "username", "password", true);
     }
     

File: auth/src/main/java/com/alibaba/nacos/auth/AuthService.java
Patch:
@@ -41,8 +41,9 @@ public interface AuthService {
      * @param identityContext where we can find the user information.
      * @param permission permission to auth.
      * @return Boolean if the user has the resource authority.
+     * @throws AccessException authority authentication error.
      */
-    Boolean authorityAccess(IdentityContext identityContext, Permission permission);
+    Boolean authorityAccess(IdentityContext identityContext, Permission permission) throws AccessException;
     
     /**
      * AuthService Name which for conveniently find AuthService instance.

File: auth/src/test/java/com/alibaba/nacos/auth/common/AuthPluginManagerTest.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.auth.AuthPluginManager;
 import com.alibaba.nacos.auth.AuthService;
 import com.alibaba.nacos.auth.context.IdentityContext;
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.auth.model.Permission;
 import org.junit.Assert;
 import org.junit.Before;
@@ -72,7 +73,7 @@ public void testGetInstance() {
     }
     
     @Test
-    public void testFindAuthServiceSpiImpl() {
+    public void testFindAuthServiceSpiImpl() throws AccessException {
         Mockito.when(authService.authorityAccess(identityContext, permission)).thenReturn(true);
         Mockito.when(authService.getAuthServiceName()).thenReturn(TYPE);
         Optional<AuthService> authServiceImpl = authPluginManager.findAuthServiceSpiImpl(TYPE);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -1045,7 +1045,7 @@ private Response requestProxy(RpcClient rpcClientInner, Request request) throws
         private Response requestProxy(RpcClient rpcClientInner, Request request, long timeoutMills)
                 throws NacosException {
             try {
-                request.putAllHeader(super.getSecurityHeaders());
+                request.putAllHeader(super.getAccessToken());
                 request.putAllHeader(super.getSpasHeaders());
                 request.putAllHeader(super.getCommonHeader());
             } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -64,7 +64,7 @@ private void init(Properties properties) throws NacosException {
         InitUtils.initSerialization();
         InitUtils.initWebRootContext(properties);
         ServerListManager serverListManager = new ServerListManager(properties, namespace);
-        SecurityProxy securityProxy = new SecurityProxy(properties,
+        SecurityProxy securityProxy = new SecurityProxy(serverListManager.getServerList(),
                 NamingHttpClientManager.getInstance().getNacosRestTemplate());
         serverProxy = new NamingHttpClientProxy(namespace, securityProxy, serverListManager, properties, null);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/Config.java
Patch:
@@ -26,7 +26,9 @@
  * @author Nacos
  */
 @EnableScheduling
-@SpringBootApplication(scanBasePackages = {"com.alibaba.nacos.config.server", "com.alibaba.nacos.core"})
+@SpringBootApplication(scanBasePackages = {
+        "com.alibaba.nacos.config.server",
+        "com.alibaba.nacos.core"})
 public class Config {
     
     public static void main(String[] args) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java
Patch:
@@ -183,7 +183,7 @@ public ServiceInfo listInstance(String namespaceId, String serviceName, Subscrib
         ServiceInfo serviceInfo = serviceStorage.getData(service);
         ServiceMetadata serviceMetadata = metadataManager.getServiceMetadata(service).orElse(null);
         ServiceInfo result = ServiceUtil
-                .selectInstancesWithHealthyProtection(serviceInfo, serviceMetadata, cluster, healthOnly, true);
+                .selectInstancesWithHealthyProtection(serviceInfo, serviceMetadata, cluster, healthOnly, true, subscriber.getIp());
         // adapt for v1.x sdk
         result.setName(NamingUtils.getGroupedName(result.getName(), result.getGroupName()));
         return result;

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -152,7 +152,7 @@ public void onFail(Throwable e) {
     
         private ServiceInfo getServiceInfo(Service service, ServiceInfo serviceInfo) {
             ServiceMetadata serviceMetadata = delayTaskEngine.getMetadataManager().getServiceMetadata(service).orElse(null);
-            return ServiceUtil.selectInstancesWithHealthyProtection(serviceInfo, serviceMetadata, false, true);
+            return ServiceUtil.selectInstancesWithHealthyProtection(serviceInfo, serviceMetadata, false, true, subscriber);
         }
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceQueryRequestHandler.java
Patch:
@@ -61,7 +61,7 @@ public QueryServiceResponse handle(ServiceQueryRequest request, RequestMeta meta
         boolean healthyOnly = request.isHealthyOnly();
         ServiceInfo result = serviceStorage.getData(service);
         ServiceMetadata serviceMetadata = metadataManager.getServiceMetadata(service).orElse(null);
-        result = ServiceUtil.selectInstancesWithHealthyProtection(result, serviceMetadata, cluster, healthyOnly, true);
+        result = ServiceUtil.selectInstancesWithHealthyProtection(result, serviceMetadata, cluster, healthyOnly, true, meta.getClientIp());
         return QueryServiceResponse.buildSuccessResponse(result);
     }
 }

File: istio/src/main/java/com/alibaba/nacos/istio/api/ApiConstants.java
Patch:
@@ -31,6 +31,7 @@ public class ApiConstants {
      * TODO Support other Istio crd, such as gateway, vs, dr and so on.
      */
     public static final String SERVICE_ENTRY_PROTO_PACKAGE = "networking.istio.io/v1alpha3/ServiceEntry";
+    public static final String MESH_CONFIG_PROTO_PACKAGE = "core/v1alpha1/MeshConfig";
 
     /**
      * Istio crd type url for mcp

File: istio/src/main/java/com/alibaba/nacos/istio/common/ResourceSnapshot.java
Patch:
@@ -44,7 +44,7 @@ public ResourceSnapshot() {
         serviceEntries = new ArrayList<>();
     }
 
-    public void initResourceSnapshot(NacosResourceManager manager) {
+    public synchronized void initResourceSnapshot(NacosResourceManager manager) {
         if (isCompleted) {
             return;
         }

File: istio/src/main/java/com/alibaba/nacos/istio/server/IstioServer.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.istio.server;
 
-import com.alibaba.nacos.istio.common.NacosServiceInfoResourceWatcher;
+import com.alibaba.nacos.istio.common.NacosResourceManager;
 import com.alibaba.nacos.istio.mcp.NacosMcpService;
 import com.alibaba.nacos.istio.misc.IstioConfig;
 import com.alibaba.nacos.istio.misc.Loggers;
@@ -51,7 +51,7 @@ public class IstioServer {
     private NacosXdsService nacosXdsService;
 
     @Autowired
-    private NacosServiceInfoResourceWatcher serviceInfoResourceWatcher;
+    private NacosResourceManager nacosResourceManager;
 
     /**
      * Start.
@@ -65,7 +65,7 @@ public void start() throws IOException {
             Loggers.MAIN.info("The Nacos Istio server is disabled.");
             return;
         }
-        serviceInfoResourceWatcher.start();
+        nacosResourceManager.start();
 
         Loggers.MAIN.info("Nacos Istio server, starting Nacos Istio server...");
 

File: core/src/test/java/com/alibaba/nacos/core/cluster/ServerMemberManagerTest.java
Patch:
@@ -62,6 +62,7 @@ public void setUp() throws Exception {
         when(environment.getProperty("server.port", Integer.class, 8848)).thenReturn(8848);
         when(environment.getProperty("nacos.member-change-event.queue.size", Integer.class, 128)).thenReturn(128);
         EnvUtil.setEnvironment(environment);
+        EnvUtil.setIsStandalone(true);
         when(servletContext.getContextPath()).thenReturn("");
         serverMemberManager = new ServerMemberManager(servletContext);
         serverMemberManager.updateMember(Member.builder().ip("1.1.1.1").port(8848).state(NodeState.UP).build());

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/task/FixturePushExecutor.java
Patch:
@@ -32,8 +32,7 @@ public void doPush(String clientId, Subscriber subscriber, PushDataWrapper data)
     }
     
     @Override
-    public void doPushWithCallback(String clientId, Subscriber subscriber, PushDataWrapper data,
-            PushCallBack callBack) {
+    public void doPushWithCallback(String clientId, Subscriber subscriber, PushDataWrapper data, PushCallBack callBack) {
         if (shouldSuccess) {
             callBack.onSuccess();
         } else {

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/NacosMcpService.java
Patch:
@@ -125,7 +125,7 @@ private boolean shouldPush(Mcp.RequestResources requestResources, AbstractConnec
 
             watchedStatus = new WatchedStatus();
             watchedStatus.setType(type);
-            connection.addWatchedResource(type, new WatchedStatus());
+            connection.addWatchedResource(type, watchedStatus);
 
             return true;
         }

File: api/src/main/java/com/alibaba/nacos/api/selector/context/CmdbContext.java
Patch:
@@ -15,16 +15,17 @@
  *
  */
 
-package com.alibaba.nacos.api.naming.selector.context;
+package com.alibaba.nacos.api.selector.context;
 
 import com.alibaba.nacos.api.cmdb.pojo.Entity;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.api.selector.Selector;
 
 import java.util.List;
 
 /**
  * The CMDB context is given by the {@link SelectorContextBuilder#build(Object, Object)} and used for the
- * {@link com.alibaba.nacos.api.naming.selector.Selector#select(Object)}.
+ * {@link Selector#select(Object)}.
  *
  * @author chenglu
  * @date 2021-07-09 21:31

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -17,8 +17,10 @@
 package com.alibaba.nacos.naming.core;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.selector.Selector;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.RecordListener;
 import com.alibaba.nacos.naming.core.v2.upgrade.doublewrite.delay.DoubleWriteEventListener;
@@ -31,14 +33,12 @@
 import com.alibaba.nacos.naming.pojo.Record;
 import com.alibaba.nacos.naming.push.UdpPushService;
 import com.alibaba.nacos.naming.selector.NoneSelector;
-import com.alibaba.nacos.naming.selector.Selector;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.fasterxml.jackson.annotation.JsonIgnore;
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.annotation.JsonInclude.Include;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.ListUtils;
-import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.Collection;

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadata.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.core.v2.metadata;
 
+import com.alibaba.nacos.api.selector.Selector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
-import com.alibaba.nacos.naming.selector.Selector;
 
 import java.io.Serializable;
 import java.util.Map;
@@ -44,7 +44,7 @@ public class ServiceMetadata implements Serializable {
     private float protectThreshold = 0.0F;
     
     /**
-     * Type of {@link com.alibaba.nacos.naming.selector.Selector}.
+     * Type of {@link Selector}.
      */
     private Selector selector = new NoneSelector();
     

File: naming/src/main/java/com/alibaba/nacos/naming/selector/context/CmdbSelectorContextBuilder.java
Patch:
@@ -20,8 +20,8 @@
 import com.alibaba.nacos.api.cmdb.pojo.Entity;
 import com.alibaba.nacos.api.cmdb.pojo.PreservedEntityTypes;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.api.naming.selector.context.CmdbContext;
-import com.alibaba.nacos.api.naming.selector.context.SelectorContextBuilder;
+import com.alibaba.nacos.api.selector.context.CmdbContext;
+import com.alibaba.nacos.api.selector.context.SelectorContextBuilder;
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadataTest.java
Patch:
@@ -16,9 +16,9 @@
 
 package com.alibaba.nacos.naming.core.v2.metadata;
 
+import com.alibaba.nacos.api.selector.Selector;
 import com.alibaba.nacos.naming.selector.LabelSelector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
-import com.alibaba.nacos.naming.selector.Selector;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: naming/src/test/java/com/alibaba/nacos/naming/selector/MockCmdbContextBuilder.java
Patch:
@@ -19,8 +19,8 @@
 
 import com.alibaba.nacos.api.cmdb.pojo.Entity;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.api.naming.selector.context.CmdbContext;
-import com.alibaba.nacos.api.naming.selector.context.SelectorContextBuilder;
+import com.alibaba.nacos.api.selector.context.CmdbContext;
+import com.alibaba.nacos.api.selector.context.SelectorContextBuilder;
 
 import java.util.HashMap;
 import java.util.List;

File: common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.common.tls.TlsFileWatcher;
 import com.alibaba.nacos.common.tls.TlsHelper;
 import com.alibaba.nacos.common.tls.TlsSystemConfig;
-import com.alibaba.nacos.common.utils.BiConsumer;
+import java.util.function.BiConsumer;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.config.Registry;
 import org.apache.http.config.RegistryBuilder;

File: common/src/main/java/com/alibaba/nacos/common/notify/EventPublisherFactory.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.common.notify;
 
-import com.alibaba.nacos.common.utils.BiFunction;
+import java.util.function.BiFunction;
 
 /**
  * Event publisher factory.

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtil.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.Map;
 import java.util.Objects;
 import java.util.function.Predicate;
+import java.util.function.BiFunction;
 
 /**
  * Map utils.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -455,7 +455,6 @@ public void shutdown() throws NacosException {
         rpcClientStatus.set(RpcClientStatus.SHUTDOWN);
         LOGGER.info("Shutdown client event executor " + clientEventExecutor);
         clientEventExecutor.shutdownNow();
-        LOGGER.info("Close current connection " + currentConnection.getConnectionId());
         closeConnection(currentConnection);
     }
     
@@ -587,6 +586,7 @@ protected void reconnect(final ServerInfo recommendServerInfo, boolean onRequest
     
     private void closeConnection(Connection connection) {
         if (connection != null) {
+            LOGGER.info("Close current connection " + connection.getConnectionId());
             connection.close();
             eventLinkedBlockingQueue.add(new ConnectionEvent(ConnectionEvent.DISCONNECTED));
         }

File: naming/src/main/java/com/alibaba/nacos/naming/constants/ClientConstants.java
Patch:
@@ -35,6 +35,8 @@ public class ClientConstants {
     
     public static final String PERSISTENT_IP_PORT = "persistentIpPort";
     
+    public static final String PERSISTENT_SUFFIX = "false";
+    
     public static final String CLIENT_EXPIRED_TIME_CONFIG_KEY = "nacos.naming.client.expired.time";
     
     public static final long DEFAULT_CLIENT_EXPIRED_TIME = TimeUnit.MINUTES.toMillis(3);

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManagerDelegate.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.client.manager;
 
+import com.alibaba.nacos.naming.constants.ClientConstants;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.ClientAttributes;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
@@ -41,8 +42,6 @@ public class ClientManagerDelegate implements ClientManager {
     
     private final PersistentIpPortClientManager persistentIpPortClientManager;
     
-    private static final String SUFFIX = "false";
-    
     public ClientManagerDelegate(ConnectionBasedClientManager connectionBasedClientManager,
             EphemeralIpPortClientManager ephemeralIpPortClientManager,
             PersistentIpPortClientManager persistentIpPortClientManager) {
@@ -105,7 +104,7 @@ private ClientManager getClientManagerById(String clientId) {
         if (isConnectionBasedClient(clientId)) {
             return connectionBasedClientManager;
         }
-        return clientId.endsWith(SUFFIX) ? persistentIpPortClientManager : ephemeralIpPortClientManager;
+        return clientId.endsWith(ClientConstants.PERSISTENT_SUFFIX) ? persistentIpPortClientManager : ephemeralIpPortClientManager;
     }
     
     private boolean isConnectionBasedClient(String clientId) {

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java
Patch:
@@ -140,15 +140,15 @@ public void testPublishConfig() throws NacosException {
             clientWorker.removeConfig(dataId, group, tenant, tag);
             Assert.fail();
         } catch (NacosException e) {
-            Assert.assertEquals("Client not connected,current status:STARTING", e.getErrMsg());
+            Assert.assertEquals("Client not connected, current status:STARTING", e.getErrMsg());
             Assert.assertEquals(-401, e.getErrCode());
             
         }
         try {
             clientWorker.getServerConfig(dataId, group, tenant, 100, false);
             Assert.fail();
         } catch (NacosException e) {
-            Assert.assertEquals("Client not connected,current status:STARTING", e.getErrMsg());
+            Assert.assertEquals("Client not connected, current status:STARTING", e.getErrMsg());
             Assert.assertEquals(-401, e.getErrCode());
         }
     }

File: common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java
Patch:
@@ -275,6 +275,8 @@ public void testResolveServerInfo1() throws InvocationTargetException, IllegalAc
                 "http://10.10.10.10::8848")).getAddress());
         Assert.assertEquals("10.10.10.10:8848",
                 ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "http://10.10.10.10")).getAddress());
+        Assert.assertEquals("10.10.10.10:8848", ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient,
+                "https://10.10.10.10::8848")).getAddress());
     }
     
     @Test

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -730,7 +730,8 @@ public boolean batchRemoveAggr(final String dataId, final String group, final St
     
     @Override
     public void removeConfigHistory(final Timestamp startTime, final int limitSize) {
-        String sql = "DELETE FROM his_config_info WHERE gmt_modified < ? LIMIT ?";
+        String sql = "DELETE FROM his_config_info WHERE id IN( "
+                + "SELECT id FROM his_config_info WHERE gmt_modified < ? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY)";
         PaginationHelper<ConfigInfo> helper = createPaginationHelper();
         helper.updateLimit(sql, new Object[] {startTime, limitSize});
     }

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/Subscriber.java
Patch:
@@ -46,6 +46,9 @@ public class Subscriber implements Serializable {
     
     private String cluster;
     
+    public Subscriber() {
+    }
+    
     public Subscriber(String addrStr, String agent, String app, String ip, String namespaceId, String serviceName,
             int port) {
         this(addrStr, agent, app, ip, namespaceId, serviceName, port, StringUtils.EMPTY);

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ClientDetectionRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
+import static com.alibaba.nacos.api.common.Constants.Remote.INTERNAL_MODULE;
+
 /**
  * client active detection request from server.
  *
@@ -24,11 +26,9 @@
  */
 public class ClientDetectionRequest extends ServerRequest {
     
-    private static final String MODULE = "internal";
-    
     @Override
     public String getModule() {
-        return MODULE;
+        return INTERNAL_MODULE;
     }
     
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ConnectResetRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
+import static com.alibaba.nacos.api.common.Constants.Remote.INTERNAL_MODULE;
+
 /**
  * ConnectResetRequest.
  *
@@ -24,15 +26,13 @@
  */
 public class ConnectResetRequest extends ServerRequest {
     
-    private static final String MODULE = "internal";
-    
     String serverIp;
     
     String serverPort;
     
     @Override
     public String getModule() {
-        return MODULE;
+        return INTERNAL_MODULE;
     }
     
     /**

File: api/src/main/java/com/alibaba/nacos/api/remote/request/InternalRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
+import static com.alibaba.nacos.api.common.Constants.Remote.INTERNAL_MODULE;
+
 /**
  * internal request .
  *
@@ -25,10 +27,8 @@
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class InternalRequest extends Request {
     
-    private static final String MODULE = "internal";
-    
     @Override
     public String getModule() {
-        return MODULE;
+        return INTERNAL_MODULE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/AbstractNamingRequest.java
Patch:
@@ -18,15 +18,15 @@
 
 import com.alibaba.nacos.api.remote.request.Request;
 
+import static com.alibaba.nacos.api.common.Constants.Naming.NAMING_MODULE;
+
 /**
  * Uniform remote request of naming module.
  *
  * @author liuzunfei
  */
 public abstract class AbstractNamingRequest extends Request {
     
-    private static final String MODULE = "naming";
-    
     private String namespace;
     
     private String serviceName;
@@ -44,7 +44,7 @@ public AbstractNamingRequest(String namespace, String serviceName, String groupN
     
     @Override
     public String getModule() {
-        return MODULE;
+        return NAMING_MODULE;
     }
     
     public String getNamespace() {

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/NotifySubscriberRequest.java
Patch:
@@ -19,15 +19,15 @@
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.remote.request.ServerRequest;
 
+import static com.alibaba.nacos.api.common.Constants.Naming.NAMING_MODULE;
+
 /**
  * Notify subscriber response.
  *
  * @author xiweng.yy
  */
 public class NotifySubscriberRequest extends ServerRequest {
     
-    private static final String MODULE = "naming";
-    
     private String namespace;
     
     private String serviceName;
@@ -41,7 +41,7 @@ public NotifySubscriberRequest() {
     
     @Override
     public String getModule() {
-        return MODULE;
+        return NAMING_MODULE;
     }
     
     private NotifySubscriberRequest(ServiceInfo serviceInfo, String message) {

File: api/src/main/java/com/alibaba/nacos/api/naming/selector/AbstractCmdbSelector.java
Patch:
@@ -22,6 +22,8 @@
 
 import java.util.List;
 
+import static com.alibaba.nacos.api.common.Constants.Naming.CMDB_CONTEXT_TYPE;
+
 /**
  * {@link AbstractCmdbSelector} will provide one default implement of {@link Selector}, users can implement it to use the {@link CmdbContext}.
  * And return the result as default subclass of {@link Instance}.
@@ -31,8 +33,6 @@
  */
 public abstract class AbstractCmdbSelector<T extends Instance> implements Selector<List<T>, CmdbContext<T>, String> {
     
-    private static final String DEFAULT_CONTEXT_TYPE = "CMDB";
-    
     @Override
     public List<T> select(CmdbContext<T> context) {
         return doSelect(context);
@@ -48,6 +48,6 @@ public List<T> select(CmdbContext<T> context) {
     
     @Override
     public String getContextType() {
-        return DEFAULT_CONTEXT_TYPE;
+        return CMDB_CONTEXT_TYPE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java
Patch:
@@ -52,7 +52,7 @@ public static ConfigService createConfigService(Properties properties) throws Na
      *
      * @param serverAddr serverList
      * @return Config
-     * @throws ConfigService Exception
+     * @throws NacosException create configService failed Exception
      */
     public static ConfigService createConfigService(String serverAddr) throws NacosException {
         Properties properties = new Properties();

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigType.java
Patch:
@@ -95,6 +95,6 @@ public static Boolean isValidType(String type) {
         if (StringUtils.isBlank(type)) {
             return false;
         }
-        return null != LOCAL_MAP.get(type) ? true : false;
+        return null != LOCAL_MAP.get(type);
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/AbstractConfigRequest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.remote.request.Request;
 
 /**
@@ -24,11 +25,9 @@
  * @version $Id: ConfigCommonRequest.java, v 0.1 2020年07月13日 9:05 PM liuzunfei Exp $
  */
 public abstract class AbstractConfigRequest extends Request {
-    
-    private static final String MODULE = "config";
 
     @Override
     public String getModule() {
-        return MODULE;
+        return Constants.Config.CONFIG_MODULE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigChangeNotifyRequest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.remote.request.ServerRequest;
 
 /**
@@ -26,8 +27,6 @@
  */
 public class ConfigChangeNotifyRequest extends ServerRequest {
     
-    private static final String MODULE = "config";
-    
     String dataId;
     
     String group;
@@ -76,6 +75,6 @@ public static ConfigChangeNotifyRequest build(String dataId, String group, Strin
     
     @Override
     public String getModule() {
-        return MODULE;
+        return Constants.Config.CONFIG_MODULE;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigQueryRequest.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
+import com.alibaba.nacos.api.common.Constants;
+
 /**
  * request to query config content.
  *
@@ -24,8 +26,6 @@
  */
 public class ConfigQueryRequest extends AbstractConfigRequest {
     
-    private static final String NOTIFY_HEADER = "notify";
-    
     private String dataId;
     
     private String group;
@@ -123,7 +123,7 @@ public void setTag(String tag) {
     }
     
     public boolean isNotify() {
-        String notify = getHeader(NOTIFY_HEADER, Boolean.FALSE.toString());
+        String notify = getHeader(Constants.Config.NOTIFY_HEADER, Boolean.FALSE.toString());
         return Boolean.parseBoolean(notify);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientFactory.java
Patch:
@@ -28,7 +28,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 
 /**
- * RpcClientFactory.to support muti client for diffrent modules of usage.
+ * RpcClientFactory.to support multi client for different modules of usage.
  *
  * @author liuzunfei
  * @version $Id: RpcClientFactory.java, v 0.1 2020年07月14日 3:41 PM liuzunfei Exp $

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/impl/ConnectionBasedClient.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.core.v2.client.impl;
 
-import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.core.v2.client.AbstractClient;
+import com.alibaba.nacos.naming.misc.ClientConfig;
 
 /**
  * Nacos naming client based on tcp session.
@@ -72,6 +72,6 @@ public void setLastRenewTime() {
     
     @Override
     public boolean isExpire(long currentTime) {
-        return !isNative() && currentTime - getLastRenewTime() > Constants.DEFAULT_IP_DELETE_TIMEOUT;
+        return !isNative() && currentTime - getLastRenewTime() > ClientConfig.getInstance().getClientExpiredTime();
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/impl/IpPortBasedClient.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.naming.core.v2.client.impl;
 
-import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.core.v2.client.AbstractClient;
 import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckReactor;
 import com.alibaba.nacos.naming.healthcheck.heartbeat.ClientBeatCheckTaskV2;
 import com.alibaba.nacos.naming.healthcheck.v2.HealthCheckTaskV2;
+import com.alibaba.nacos.naming.misc.ClientConfig;
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 
 import java.util.Collection;
@@ -86,8 +86,8 @@ public boolean addServiceInstance(Service service, InstancePublishInfo instanceP
     
     @Override
     public boolean isExpire(long currentTime) {
-        return isEphemeral() && getAllPublishedService().isEmpty()
-                && currentTime - getLastUpdatedTime() > Constants.DEFAULT_IP_DELETE_TIMEOUT;
+        return isEphemeral() && getAllPublishedService().isEmpty() && currentTime - getLastUpdatedTime() > ClientConfig
+                .getInstance().getClientExpiredTime();
     }
     
     public Collection<InstancePublishInfo> getAllInstancePublishInfo() {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/redo/NamingGrpcRedoService.java
Patch:
@@ -215,7 +215,7 @@ public void subscriberDeregister(String serviceName, String groupName, String cl
     }
     
     /**
-     * Remove subscribe for redo.
+     * Remove subscriber for redo.
      *
      * @param serviceName service name
      * @param groupName   group name
@@ -230,7 +230,7 @@ public void removeSubscriberForRedo(String serviceName, String groupName, String
     /**
      * Find all subscriber redo data which need do redo.
      *
-     * @return set of {@code InstanceRedoData} need to do redo.
+     * @return set of {@code SubscriberRedoData} need to do redo.
      */
     public Set<SubscriberRedoData> findSubscriberRedoData() {
         Set<SubscriberRedoData> result = new HashSet<>();
@@ -248,7 +248,7 @@ public Set<SubscriberRedoData> findSubscriberRedoData() {
      * Shutdown redo service.
      */
     public void shutdown() {
-        LogUtils.NAMING_LOGGER.info("Shutdown grpc event listener executor " + redoExecutor);
+        LogUtils.NAMING_LOGGER.info("Shutdown grpc redo service executor " + redoExecutor);
         registeredInstances.clear();
         subscribes.clear();
         redoExecutor.shutdownNow();

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -141,11 +141,11 @@ public ListView<String> getServiceList(int pageNo, int pageSize, String groupNam
     public ServiceInfo subscribe(String serviceName, String groupName, String clusters) throws NacosException {
         String serviceNameWithGroup = NamingUtils.getGroupedName(serviceName, groupName);
         String serviceKey = ServiceInfo.getKey(serviceNameWithGroup, clusters);
+        serviceInfoUpdateService.scheduleUpdateIfAbsent(serviceName, groupName, clusters);
         ServiceInfo result = serviceInfoHolder.getServiceInfoMap().get(serviceKey);
         if (null == result) {
             result = grpcClientProxy.subscribe(serviceName, groupName, clusters);
         }
-        serviceInfoUpdateService.scheduleUpdateIfAbsent(serviceName, groupName, clusters);
         serviceInfoHolder.processServiceInfo(result);
         return result;
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/selector/AbstractCmdbSelector.java
Patch:
@@ -29,12 +29,12 @@
  * @author chenglu
  * @date 2021-07-09 21:29
  */
-public abstract class AbstractCmdbSelector<T extends Instance> implements Selector<List<T>, CmdbContext, String> {
+public abstract class AbstractCmdbSelector<T extends Instance> implements Selector<List<T>, CmdbContext<T>, String> {
     
     private static final String DEFAULT_CONTEXT_TYPE = "CMDB";
     
     @Override
-    public List<T> select(CmdbContext context) {
+    public List<T> select(CmdbContext<T> context) {
         return doSelect(context);
     }
     
@@ -44,7 +44,7 @@ public List<T> select(CmdbContext context) {
      * @param context selector context {@link CmdbContext}.
      * @return the select result.
      */
-    protected abstract List<T> doSelect(CmdbContext context);
+    protected abstract List<T> doSelect(CmdbContext<T> context);
     
     @Override
     public String getContextType() {

File: api/src/main/java/com/alibaba/nacos/api/naming/selector/Selector.java
Patch:
@@ -17,6 +17,7 @@
 
 package com.alibaba.nacos.api.naming.selector;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 
 import java.io.Serializable;
@@ -43,8 +44,9 @@ public interface Selector<R, C, D> extends Serializable {
      *
      * @param condition condition.
      * @return selector.
+     * @throws NacosException parse failed exception.
      */
-    Selector<R, C, D> parse(D condition);
+    Selector<R, C, D> parse(D condition) throws NacosException;
     
     /**
      * select the target result.

File: naming/src/test/java/com/alibaba/nacos/naming/selector/MockCmdbContextBuilder.java
Patch:
@@ -66,6 +66,6 @@ public CmdbContext build(String consumerIp, List<Instance> provider) {
     
     @Override
     public String getContextType() {
-        return "CMDB";
+        return "MOCK_CMDB";
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -56,6 +56,7 @@
  * @see CmdbReader
  * @since 0.7.0
  */
+@Deprecated
 @JsonTypeInfo(use = Id.NAME, property = "type")
 public class LabelSelector extends ExpressionSelector implements Selector {
     

File: naming/src/main/java/com/alibaba/nacos/naming/selector/NoneSelector.java
Patch:
@@ -30,6 +30,7 @@
  * @author nkorange
  * @since 0.7.0
  */
+@Deprecated
 @JsonTypeInfo(use = Id.NAME, property = "type")
 public class NoneSelector extends com.alibaba.nacos.api.selector.NoneSelector implements Selector {
     

File: naming/src/main/java/com/alibaba/nacos/naming/selector/Selector.java
Patch:
@@ -42,6 +42,7 @@
  * @see com.alibaba.nacos.common.utils.JacksonUtils
  * @since 0.7.0
  */
+@Deprecated
 @JsonTypeInfo(use = Id.NAME, property = "type", defaultImpl = NoneSelector.class)
 public interface Selector extends Serializable {
     

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ExpiredInstanceChecker.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
+import com.alibaba.nacos.naming.core.v2.event.metadata.MetadataEvent;
 import com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadata;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
 import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
@@ -74,5 +75,6 @@ private void deleteIp(Client client, Service service, InstancePublishInfo instan
         Loggers.SRV_LOG.info("[AUTO-DELETE-IP] service: {}, ip: {}", service.toString(), JacksonUtils.toJson(instance));
         client.removeServiceInstance(service);
         NotifyCenter.publishEvent(new ClientOperationEvent.ClientDeregisterServiceEvent(service, client.getClientId()));
+        NotifyCenter.publishEvent(new MetadataEvent.InstanceMetadataEvent(service, instance.getMetadataId(), true));
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/utils/ClassUtils.java
Patch:
@@ -106,7 +106,7 @@ public static String getCanonicalName(Object obj) {
      * @param cls Instances of the class represent classes and interfaces.
      * @return the simple name of the underlying class.
      */
-    public static String getSimplaName(Class cls) {
+    public static String getSimpleName(Class cls) {
         Objects.requireNonNull(cls, "cls");
         return cls.getSimpleName();
     }
@@ -117,7 +117,7 @@ public static String getSimplaName(Class cls) {
      * @param obj Object instance.
      * @return the simple name of the underlying class.
      */
-    public static String getSimplaName(Object obj) {
+    public static String getSimpleName(Object obj) {
         Objects.requireNonNull(obj, "obj");
         return obj.getClass().getSimpleName();
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImpl.java
Patch:
@@ -240,9 +240,9 @@ public void setClientId(String clientId) {
     
     private class PersistentInstanceSnapshotOperation extends AbstractSnapshotOperation {
         
-        private final String snapshotSaveTag = ClassUtils.getSimplaName(getClass()) + ".SAVE";
+        private final String snapshotSaveTag = ClassUtils.getSimpleName(getClass()) + ".SAVE";
         
-        private final String snapshotLoadTag = ClassUtils.getSimplaName(getClass()) + ".LOAD";
+        private final String snapshotLoadTag = ClassUtils.getSimpleName(getClass()) + ".LOAD";
         
         private static final String SNAPSHOT_ARCHIVE = "persistent_instance.zip";
         

File: test/core-test/src/test/java/com/alibaba/nacos/test/common/WatchFileCenter_ITCase.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.junit.AfterClass;
 import org.junit.Assert;
 import org.junit.BeforeClass;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.test.base.Params;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java
Patch:
@@ -161,7 +161,7 @@ public static List<String> getPropertyList(String key) {
         
         for (int i = 0; i < Integer.MAX_VALUE; i++) {
             String value = environment.getProperty(key + "[" + i + "]");
-            if (org.apache.commons.lang3.StringUtils.isBlank(value)) {
+            if (StringUtils.isBlank(value)) {
                 break;
             }
             

File: sys/src/main/java/com/alibaba/nacos/sys/env/NacosAutoRefreshPropertySourceLoader.java
Patch:
@@ -18,10 +18,10 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.JustForTest;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.sys.file.FileChangeEvent;
 import com.alibaba.nacos.sys.file.FileWatcher;
 import com.alibaba.nacos.sys.file.WatchFileCenter;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.boot.env.OriginTrackedMapPropertySource;
 import org.springframework.boot.env.PropertySourceLoader;
 import org.springframework.core.env.PropertySource;

File: sys/src/main/java/com/alibaba/nacos/sys/utils/InetUtils.java
Patch:
@@ -19,9 +19,9 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.SlowEvent;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -36,7 +36,7 @@
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.google.common.collect.Maps;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import javax.annotation.PostConstruct;

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerStatusManager.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Service;
 
 import javax.annotation.PostConstruct;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/KeyBuilder.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.consistency;
 
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import static com.alibaba.nacos.naming.misc.UtilsAndCommons.RAFT_CACHE_FILE_PREFIX;
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -41,7 +41,7 @@
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.pojo.Record;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.javatuples.Pair;
 import org.springframework.context.annotation.DependsOn;
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/BasePersistentServiceProcessor.java
Patch:
@@ -42,7 +42,7 @@
 import com.alibaba.nacos.naming.pojo.Record;
 import com.alibaba.nacos.naming.constants.Constants;
 import com.google.protobuf.ByteString;
-import org.apache.commons.lang3.reflect.TypeUtils;
+import com.alibaba.nacos.common.utils.TypeUtils;
 
 import java.lang.reflect.Type;
 import java.nio.file.Paths;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -49,8 +49,8 @@
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.node.ArrayNode;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.math.NumberUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.common.utils.NumberUtils;
 import org.springframework.context.annotation.DependsOn;
 import org.springframework.http.HttpMethod;
 import org.springframework.stereotype.Component;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeer.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
-import org.apache.commons.lang3.RandomUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.RandomUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.Objects;
 import java.util.concurrent.atomic.AtomicLong;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -33,7 +33,7 @@
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.collections.SortedBag;
 import org.apache.commons.collections.bag.TreeBag;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Component;
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -34,7 +34,7 @@
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.JsonNode;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.io.File;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -36,7 +36,7 @@
 import com.alibaba.nacos.naming.web.NamingResourceParser;
 import com.fasterxml.jackson.databind.node.ArrayNode;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckType;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
+import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.HealthOperator;
@@ -36,8 +37,7 @@
 import com.alibaba.nacos.naming.web.NamingResourceParser;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-import org.apache.commons.lang3.BooleanUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -105,7 +105,7 @@ public ResponseEntity update(HttpServletRequest request) throws NacosException {
         if (StringUtils.isBlank(healthyString)) {
             throw new IllegalArgumentException("Param 'healthy' is required.");
         }
-        boolean health = BooleanUtils.toBoolean(healthyString);
+        boolean health = ConvertUtils.toBoolean(healthyString);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);
         String clusterName = WebUtils

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -38,7 +38,7 @@
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.node.ArrayNode;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PostMapping;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -44,8 +44,8 @@
 import com.alibaba.nacos.naming.web.NamingResourceParser;
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.math.NumberUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
+import com.alibaba.nacos.common.utils.NumberUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: naming/src/main/java/com/alibaba/nacos/naming/core/CatalogServiceV1Impl.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.naming.pojo.ServiceView;
 import com.fasterxml.jackson.databind.node.ObjectNode;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.util.ArrayList;

File: naming/src/main/java/com/alibaba/nacos/naming/core/CatalogServiceV2Impl.java
Patch:
@@ -35,7 +35,7 @@
 import com.alibaba.nacos.naming.pojo.ServiceView;
 import com.alibaba.nacos.naming.utils.ServiceUtil;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.util.ArrayList;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -23,7 +23,7 @@
 import com.fasterxml.jackson.annotation.JsonIgnore;
 
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.util.Assert;
 
 import java.util.ArrayList;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -26,7 +26,7 @@
 import com.fasterxml.jackson.annotation.JsonIgnore;
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.annotation.JsonInclude.Include;
-import org.apache.commons.lang3.math.NumberUtils;
+import com.alibaba.nacos.common.utils.NumberUtils;
 
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -119,7 +119,7 @@ public static Instance fromString(String config) {
         
         int port = 0;
         if (providerAddr.length == InternetAddressUtil.SPLIT_IP_PORT_RESULT_LENGTH && NumberUtils
-                .isNumber(providerAddr[1])) {
+                .isDigits(providerAddr[1])) {
             port = Integer.parseInt(providerAddr[1]);
         }
         

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorServiceImpl.java
Patch:
@@ -37,7 +37,7 @@
 import com.alibaba.nacos.naming.push.v1.PushClient;
 import com.alibaba.nacos.naming.utils.InstanceUtil;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.net.InetSocketAddress;
@@ -189,7 +189,7 @@ public ServiceInfo listInstance(String namespaceId, String serviceName, Subscrib
         checkIfDisabled(service);
         
         List<com.alibaba.nacos.naming.core.Instance> srvedIps = service
-                .srvIPs(Arrays.asList(StringUtils.split(cluster, ",")));
+                .srvIPs(Arrays.asList(StringUtils.split(cluster, StringUtils.COMMA)));
         
         // filter ips using selector:
         if (service.getSelector() != null && StringUtils.isNotBlank(clientIP)) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.naming.pojo.Record;
 import com.fasterxml.jackson.annotation.JsonIgnore;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.Collections;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -38,7 +38,7 @@
 import com.fasterxml.jackson.annotation.JsonInclude.Include;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.ListUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.Collection;

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -44,8 +44,7 @@
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.node.ArrayNode;
 import com.google.common.collect.Sets;
-import org.apache.commons.lang3.ArrayUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Component;
 import org.springframework.util.CollectionUtils;
@@ -887,7 +886,7 @@ public List<Service> searchServices(String namespaceId, String regex) {
         List<Service> result = new ArrayList<>();
         for (Map.Entry<String, Service> entry : chooseServiceMap(namespaceId).entrySet()) {
             Service service = entry.getValue();
-            String key = service.getName() + ":" + ArrayUtils.toString(service.getOwners());
+            String key = service.getName() + ":" + service.getOwners().toString();
             if (key.matches(regex)) {
                 result.add(service);
             }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/InstanceMetadataProcessor.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.naming.core.v2.metadata;
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.common.utils.TypeUtils;
 import com.alibaba.nacos.consistency.DataOperation;
 import com.alibaba.nacos.consistency.SerializeFactory;
 import com.alibaba.nacos.consistency.Serializer;
@@ -29,7 +30,6 @@
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.constants.Constants;
-import org.apache.commons.lang3.reflect.TypeUtils;
 import org.springframework.stereotype.Component;
 
 import java.lang.reflect.Type;

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadataProcessor.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.naming.core.v2.upgrade.doublewrite.delay.DoubleWriteEventListener;
 import com.alibaba.nacos.naming.constants.Constants;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
-import org.apache.commons.lang3.reflect.TypeUtils;
+import com.alibaba.nacos.common.utils.TypeUtils;
 import org.springframework.stereotype.Component;
 
 import java.lang.reflect.Type;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.fasterxml.jackson.annotation.JsonIgnore;
 
-import org.apache.commons.lang3.RandomUtils;
+import com.alibaba.nacos.common.utils.RandomUtils;
 
 /**
  * Health check task.

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/extend/HealthCheckExtendProvider.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckType;
 import com.alibaba.nacos.common.spi.NacosServiceLoader;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckProcessor;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.BeansException;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/HealthCheckTaskV2.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
-import org.apache.commons.lang3.RandomUtils;
+import com.alibaba.nacos.common.utils.RandomUtils;
 
 import java.util.Optional;
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.MapUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.HashMap;
 import java.util.List;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.constants.FieldsConstants;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.HashMap;
 import java.util.Map;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.naming.selector.NoneSelector;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.core.type.TypeReference;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.File;
 import java.util.HashMap;

File: naming/src/main/java/com/alibaba/nacos/naming/push/v1/ClientInfo.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.push.v1;
 
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.codehaus.jackson.Version;
 import org.codehaus.jackson.util.VersionUtil;
 

File: naming/src/main/java/com/alibaba/nacos/naming/remote/udp/AckEntry.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.remote.udp;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.net.DatagramPacket;
 import java.util.Map;
@@ -75,6 +75,6 @@ public Map<String, Object> getData() {
     }
     
     public static String getAckKey(String host, int port, long lastRefTime) {
-        return StringUtils.strip(host) + "," + port + "," + lastRefTime;
+        return StringUtils.trim(host) + "," + port + "," + lastRefTime;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -27,7 +27,7 @@
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.HashSet;

File: naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.fasterxml.jackson.databind.JsonNode;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.Arrays;

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import org.apache.commons.codec.Charsets;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
 import javax.servlet.Filter;

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroServiceNameTagGenerator.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.core.utils.ReuseHttpServletRequest;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Distro service name tag generator for v1.x.

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingResourceParser.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.common.utils.ReflectUtils;
 import com.alibaba.nacos.common.utils.NamespaceUtil;
 import com.alibaba.nacos.naming.constants.FieldsConstants;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/ServiceNameFilter.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.OverrideParameterRequestWrapper;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.servlet.Filter;
 import javax.servlet.FilterChain;

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
 import javax.servlet.Filter;

File: naming/src/test/java/com/alibaba/nacos/naming/selector/LabelSelectorTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.selector;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.junit.Assert;
 import org.junit.Test;
 

File: core/src/main/java/com/alibaba/nacos/core/controller/ServerLoaderController.java
Patch:
@@ -239,7 +239,6 @@ public void onException(Throwable e) {
     @GetMapping("/reloadClient")
     public ResponseEntity<String> reloadSingle(@RequestParam String connectionId,
             @RequestParam(value = "redirectAddress", required = false) String redirectAddress) {
-        Map<String, String> responseMap = new HashMap<>(3);
         connectionManager.loadSingle(connectionId, redirectAddress);
         return ResponseEntity.ok().body("success");
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -2508,7 +2508,7 @@ public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoLis
                 addConfigInfo(srcIp, srcUser, configInfo2Save, time, configAdvanceInfo, notify, callFinally);
                 succCount++;
             } catch (Throwable e) {
-                if (!e.toString().contains("DuplicateKeyException")) {
+                if (!StringUtils.contains(e.toString(), "DuplicateKeyException")) {
                     throw new NacosException(NacosException.SERVER_ERROR, e);
                 }
                 // uniqueness constraint conflict

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.core.utils.WebUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
 import javax.servlet.Filter;

File: core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.remote.AbstractRequestFilter;
 import com.alibaba.nacos.core.utils.Loggers;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.ability.ServerAbilities;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.time.LocalDateTime;
 import java.util.ArrayList;

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -41,7 +41,7 @@
 import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.boot.web.context.WebServerInitializedEvent;
 import org.springframework.context.ApplicationListener;
 import org.springframework.http.HttpStatus;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.Reader;
 import java.io.StringReader;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.sys.file.FileWatcher;
 import com.alibaba.nacos.sys.file.WatchFileCenter;
 import com.alibaba.nacos.core.utils.Loggers;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
 import java.util.Collection;

File: core/src/main/java/com/alibaba/nacos/core/code/ControllerMethodsCache.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.core.auth.condition.ParamRequestCondition;
 import com.alibaba.nacos.core.auth.condition.PathRequestCondition;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.ArrayUtils;
+import com.alibaba.nacos.common.utils.ArrayUtils;
 import org.reflections.Reflections;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -33,7 +33,7 @@
 import com.alibaba.nacos.core.utils.Commons;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;

File: core/src/main/java/com/alibaba/nacos/core/controller/ServerLoaderController.java
Patch:
@@ -401,10 +401,10 @@ public void setMetric(Map<String, String> metric) {
     
     private static String getRemoteIp(HttpServletRequest request) {
         String xForwardedFor = request.getHeader(X_FORWARDED_FOR);
-        if (!org.apache.commons.lang3.StringUtils.isBlank(xForwardedFor)) {
+        if (!StringUtils.isBlank(xForwardedFor)) {
             return xForwardedFor.split(X_FORWARDED_FOR_SPLIT_SYMBOL)[0].trim();
         }
         String nginxHeader = request.getHeader(X_REAL_IP);
-        return org.apache.commons.lang3.StringUtils.isBlank(nginxHeader) ? request.getRemoteAddr() : nginxHeader;
+        return StringUtils.isBlank(nginxHeader) ? request.getRemoteAddr() : nginxHeader;
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -47,10 +47,10 @@
 import com.alipay.sofa.jraft.storage.snapshot.SnapshotReader;
 import com.alipay.sofa.jraft.storage.snapshot.SnapshotWriter;
 import com.google.protobuf.Message;
-import org.apache.commons.lang3.BooleanUtils;
 
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
@@ -270,7 +270,8 @@ public void onSnapshotSave(SnapshotWriter writer, Closure done) {
                                 throw new ConsistencyException(e);
                             }
                         });
-                        final Status status = result && BooleanUtils.and(results) ? Status.OK()
+                        final Status status = result
+                                && !Arrays.asList(results).stream().anyMatch(Boolean.FALSE::equals) ? Status.OK()
                                 : new Status(RaftError.EIO, "Fail to compress snapshot at %s, error is %s",
                                         writer.getPath(), t == null ? "" : t.getMessage());
                         done.run(status);

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/RaftOptionsBuilder.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.core.distributed.raft.RaftSysConstants;
 import com.alipay.sofa.jraft.option.RaftOptions;
 import com.alipay.sofa.jraft.option.ReadOnlyOption;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import static com.alibaba.nacos.core.distributed.raft.RaftSysConstants.APPLY_BATCH;
 import static com.alibaba.nacos.core.distributed.raft.RaftSysConstants.DEFAULT_APPLY_BATCH;

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingApplicationListener.java
Patch:
@@ -30,7 +30,7 @@
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.env.OriginTrackedMapPropertySource;

File: core/src/main/java/com/alibaba/nacos/core/remote/Connection.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.api.ability.ClientAbilities;
 import com.alibaba.nacos.api.remote.Requester;
-import org.apache.commons.lang3.builder.ToStringBuilder;
 
 import java.util.Map;
 
@@ -96,7 +95,7 @@ public ConnectionMeta getMetaInfo() {
     
     @Override
     public String toString() {
-        return ToStringBuilder.reflectionToString(this);
+        return "Connection{" + "traced=" + traced + ", abilities=" + abilities + ", metaInfo=" + metaInfo + '}';
     }
 }
 

File: core/src/main/java/com/alibaba/nacos/core/utils/ReuseHttpServletRequest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.http.HttpUtils;
 import com.alibaba.nacos.common.http.param.MediaType;
 import com.alibaba.nacos.common.utils.ByteUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.servlet.ReadListener;
 import javax.servlet.ServletInputStream;

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.web.context.request.async.DeferredResult;
 import org.springframework.web.multipart.MultipartFile;
 

File: core/src/test/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookupTest.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import junit.framework.TestCase;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;

File: core/src/test/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListenerTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.listener;
 
 import com.alibaba.nacos.core.code.StandaloneProfileApplicationListener;
-import org.apache.commons.lang3.ArrayUtils;
+import com.alibaba.nacos.common.utils.ArrayUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/DefaultSelfUpgradeChecker.java
Patch:
@@ -36,7 +36,6 @@ public String checkType() {
     
     @Override
     public boolean isReadyToUpgrade(ServiceManager serviceManager, DoubleWriteDelayTaskEngine taskEngine) {
-        System.out.println("test");
         return checkServiceAndInstanceNumber(serviceManager) && checkDoubleWriteStatus(taskEngine);
     }
     

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/NacosMcpService.java
Patch:
@@ -16,12 +16,12 @@
 
 package com.alibaba.nacos.istio.mcp;
 
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.istio.misc.Loggers;
 import io.grpc.stub.StreamObserver;
 import istio.mcp.v1alpha1.Mcp;
 import istio.mcp.v1alpha1.ResourceOuterClass;
 import istio.mcp.v1alpha1.ResourceSourceGrpc;
-import org.apache.commons.lang3.StringUtils;
 
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;

File: naming/src/test/java/com/alibaba/nacos/naming/cluster/transport/JacksonSerializerTest.java
Patch:
@@ -28,7 +28,7 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
-public class SerializerTest {
+public class JacksonSerializerTest {
     
     private Serializer serializer;
     

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/CapacityManagementAspect.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.service.capacity.CapacityService;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.aspectj.lang.ProceedingJoinPoint;
 import org.aspectj.lang.annotation.Around;
 import org.aspectj.lang.annotation.Aspect;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ConfigResourceParser.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.auth.parser.ResourceParser;
 import com.alibaba.nacos.common.utils.ReflectUtils;
 import com.alibaba.nacos.common.utils.NamespaceUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
 import java.util.List;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedPermissionPersistServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.stereotype.Component;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedRolePersistServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.stereotype.Component;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImpl.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImpl.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CapacityController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
 import com.alibaba.nacos.config.server.service.capacity.CapacityService;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ClientMetricsController.java
Patch:
@@ -34,7 +34,7 @@
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CommunicationController.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.core.remote.Connection;
 import com.alibaba.nacos.core.remote.ConnectionManager;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.ui.ModelMap;
 import org.springframework.web.bind.annotation.GetMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.utils.DateFormatUtils;
 import com.alibaba.nacos.common.utils.MapUtil;
 import com.alibaba.nacos.common.utils.NamespaceUtil;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
@@ -51,8 +52,7 @@
 import com.alibaba.nacos.config.server.utils.YamlParserUtil;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.time.DateFormatUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -34,7 +34,7 @@
 import com.alibaba.nacos.config.server.utils.Protocol;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.ui.ModelMap;
 import org.springframework.web.bind.annotation.GetMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.model.SampleResult;
 import com.alibaba.nacos.config.server.service.ConfigSubService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.ui.ModelMap;
 import org.springframework.web.bind.annotation.GetMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDataChangeEvent.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.model.event;
 
 import com.alibaba.nacos.common.notify.Event;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * ConfigDataChangeEvent.

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -37,7 +37,7 @@
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.sql.Timestamp;

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -38,7 +38,7 @@
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.io.File;

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigRemoveRequestHandler.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.Loggers;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.sql.Timestamp;

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.utils.RegexParser;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Service;
 
 import java.io.StringReader;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientIpWhiteList.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.AclInfo;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Service;
 
 import java.util.ArrayList;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.config.server.utils.GroupKey;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.MD5Util;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Service;
 
 import javax.servlet.AsyncContext;

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Service;
 
 import java.io.IOException;

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/CapacityService.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.base.Stopwatch;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.zaxxer.hikari.HikariDataSource;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.datasource.DataSourceTransactionManager;
 import org.springframework.transaction.support.TransactionTemplate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpProcessor.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.config.server.service.dump.task.DumpTask;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.Objects;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -42,7 +42,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -51,7 +51,7 @@
 import com.google.common.base.Joiner;
 import com.google.common.collect.Lists;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.stereotype.Component;
@@ -2508,7 +2508,7 @@ public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoLis
                 addConfigInfo(srcIp, srcUser, configInfo2Save, time, configAdvanceInfo, notify, callFinally);
                 succCount++;
             } catch (Throwable e) {
-                if (!StringUtils.contains(e.toString(), "DuplicateKeyException")) {
+                if (!e.toString().contains("DuplicateKeyException")) {
                     throw new NacosException(NacosException.SERVER_ERROR, e);
                 }
                 // uniqueness constraint conflict

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -45,7 +45,7 @@
 import com.google.common.base.Joiner;
 import com.google.common.collect.Lists;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.dao.DataAccessException;
 import org.springframework.dao.DataIntegrityViolationException;

File: config/src/main/java/com/alibaba/nacos/config/server/service/trace/ConfigTraceService.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Service;
 
 import java.util.concurrent.TimeUnit;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DiskUtil.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.File;
 import java.io.FileInputStream;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/GroupKey.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Synthesize dataId+groupId form. Escape reserved characters in dataId and groupId.

File: config/src/main/java/com/alibaba/nacos/config/server/utils/GroupKey2.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Group key util.

File: config/src/main/java/com/alibaba/nacos/config/server/utils/MD5Util.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.core.utils.StringPool;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ParamUtils.java
Patch:
@@ -19,7 +19,7 @@
 import java.util.Map;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Parameter validity check util.

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.auth.model.User;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/SystemConfig.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.utils;
 
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 
 /**
- * Custem user service.
+ * Custom user service.
  *
  * @author wfnuser
  * @author nkorange

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -20,13 +20,13 @@
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.console.enums.NamespaceTypeEnum;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/PermissionController.java
Patch:
@@ -19,9 +19,9 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/RoleController.java
Patch:
@@ -19,9 +19,9 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;

File: console/src/main/java/com/alibaba/nacos/console/filter/JwtAuthenticationTokenFilter.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.console.filter;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.console.security.nacos.JwtTokenManager;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.security.core.Authentication;
 import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.web.filter.OncePerRequestFilter;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthConfig.java
Patch:
@@ -18,9 +18,9 @@
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.auth.common.AuthSystemTypes;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.console.filter.JwtAuthenticationTokenFilter;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Bean;
 import org.springframework.core.env.Environment;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthManager.java
Patch:
@@ -22,13 +22,13 @@
 import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.auth.model.User;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import com.alibaba.nacos.console.security.nacos.users.NacosUser;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.ExpiredJwtException;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.security.authentication.AuthenticationManager;
 import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.auth.model.Permission;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.config.server.auth.PermissionInfo;
 import com.alibaba.nacos.config.server.auth.PermissionPersistService;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
@@ -27,7 +28,6 @@
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.lang.Collections;
-import org.apache.commons.lang3.StringUtils;
 import org.apache.mina.util.ConcurrentHashSet;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.scheduling.annotation.Scheduled;

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.naming.core.Instance;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 import java.util.ArrayList;

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerManager.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.address.constant.AddressServerConstants;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.stereotype.Component;
 
 /**

File: address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedUserPersistServiceImpl.java
Patch:
@@ -72,7 +72,7 @@ public void createUser(String username, String password) {
      */
     @Override
     public void deleteUser(String username) {
-        String sql = "DELETE from users WHERE username=?";
+        String sql = "DELETE FROM users WHERE username=?";
         try {
             EmbeddedStorageContextUtils.addSqlContext(sql, username);
             databaseOperate.blockUpdate();
@@ -109,7 +109,8 @@ public Page<User> getUsers(int pageNo, int pageSize) {
         
         PaginationHelper<User> helper = persistService.createPaginationHelper();
         
-        String sqlCountRows = "SELECT COUNT(*) FROM users WHERE ";
+        String sqlCountRows = "SELECT count(*) FROM users WHERE ";
+
         String sqlFetchRows = "SELECT username,password FROM users WHERE ";
         
         String where = " 1=1 ";

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImpl.java
Patch:
@@ -98,7 +98,7 @@ public Page<PermissionInfo> getPermissions(String role, int pageNo, int pageSize
     @Override
     public void addPermission(String role, String resource, String action) {
         
-        String sql = "INSERT into permissions (role, resource, action) VALUES (?, ?, ?)";
+        String sql = "INSERT INTO permissions (role, resource, action) VALUES (?, ?, ?)";
         
         try {
             jt.update(sql, role, resource, action);
@@ -118,7 +118,7 @@ public void addPermission(String role, String resource, String action) {
     @Override
     public void deletePermission(String role, String resource, String action) {
         
-        String sql = "DELETE from permissions WHERE role=? and resource=? and action=?";
+        String sql = "DELETE FROM permissions WHERE role=? AND resource=? AND action=?";
         try {
             jt.update(sql, role, resource, action);
         } catch (CannotGetJdbcConnectionException e) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -105,11 +105,11 @@ public boolean insertGroupCapacity(final GroupCapacity capacity) {
         String sql;
         if (CLUSTER.equals(capacity.getGroup())) {
             sql = "INSERT INTO group_capacity (group_id, quota, `usage`, `max_size`, max_aggr_count, max_aggr_size, "
-                    + "gmt_create, gmt_modified) SELECT ?, ?, COUNT(*), ?, ?, ?, ?, ? FROM config_info;";
+                    + "gmt_create, gmt_modified) SELECT ?, ?, count(*), ?, ?, ?, ?, ? FROM config_info;";
         } else {
             // Note: add "tenant_id = ''" condition.
             sql = "INSERT INTO group_capacity (group_id, quota, `usage`, `max_size`, max_aggr_count, max_aggr_size, "
-                    + "gmt_create, gmt_modified) SELECT ?, ?, COUNT(*), ?, ?, ?, ?, ? FROM config_info WHERE "
+                    + "gmt_create, gmt_modified) SELECT ?, ?, count(*), ?, ?, ?, ?, ? FROM config_info WHERE "
                     + "group_id=? AND tenant_id = '';";
         }
         return insertGroupCapacity(sql, capacity);
@@ -262,7 +262,7 @@ public boolean updateGroupCapacity(String group, Integer quota, Integer maxSize,
         sql.append(" gmt_modified = ?");
         argList.add(TimeUtils.getCurrentTime());
         
-        sql.append(" where group_id = ?");
+        sql.append(" WHERE group_id = ?");
         argList.add(group);
         try {
             return jdbcTemplate.update(sql.toString(), argList.toArray()) == 1;

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -210,7 +210,7 @@ public boolean decrementUsage(TenantCapacity tenantCapacity) {
     public boolean updateTenantCapacity(String tenant, Integer quota, Integer maxSize, Integer maxAggrCount,
             Integer maxAggrSize) {
         List<Object> argList = Lists.newArrayList();
-        StringBuilder sql = new StringBuilder("update tenant_capacity set");
+        StringBuilder sql = new StringBuilder("UPDATE tenant_capacity SET");
         if (quota != null) {
             sql.append(" quota = ?,");
             argList.add(quota);
@@ -230,7 +230,7 @@ public boolean updateTenantCapacity(String tenant, Integer quota, Integer maxSiz
         sql.append(" gmt_modified = ?");
         argList.add(TimeUtils.getCurrentTime());
         
-        sql.append(" where tenant_id = ?");
+        sql.append(" WHERE tenant_id = ?");
         argList.add(tenant);
         try {
             return jdbcTemplate.update(sql.toString(), argList.toArray()) == 1;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedPaginationHelperImpl.java
Patch:
@@ -188,7 +188,7 @@ public Page<E> fetchPageLimit(final String sqlFetchRows, final Object[] args, fi
 
     @Override
     public void updateLimit(final String sql, final Object[] args) {
-        String sqlUpdate = sql.replaceAll("limit \\?", "OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY");
+        String sqlUpdate = sql.replaceAll("LIMIT \\?", "OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY");
         
         EmbeddedStorageContextUtils.addSqlContext(sqlUpdate, args);
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -91,9 +91,9 @@ public Page<E> fetchPage(final String sqlCountRows, final String sqlFetchRows, f
         if (isDerby()) {
             selectSql = sqlFetchRows + " OFFSET " + startRow + " ROWS FETCH NEXT " + pageSize + " ROWS ONLY";
         } else if (lastMaxId != null) {
-            selectSql = sqlFetchRows + " and id > " + lastMaxId + " order by id asc" + " limit " + 0 + "," + pageSize;
+            selectSql = sqlFetchRows + " AND id > " + lastMaxId + " ORDER BY id ASC" + " LIMIT " + 0 + "," + pageSize;
         } else {
-            selectSql = sqlFetchRows + " limit " + startRow + "," + pageSize;
+            selectSql = sqlFetchRows + " LIMIT " + startRow + "," + pageSize;
         }
         
         List<E> result = jdbcTemplate.query(selectSql, args, rowMapper);
@@ -209,7 +209,7 @@ public void updateLimit(final String sql, final Object[] args) {
         String sqlUpdate = sql;
         
         if (isDerby()) {
-            sqlUpdate = sqlUpdate.replaceAll("limit \\?", "OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY");
+            sqlUpdate = sqlUpdate.replaceAll("LIMIT \\?", "OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY");
         }
         
         try {

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImplTest.java
Patch:
@@ -69,15 +69,15 @@ public void testGetPermissions() {
     
     @Test
     public void testAddPermission() {
-        String sql = "INSERT into permissions (role, resource, action) VALUES (?, ?, ?)";
+        String sql = "INSERT INTO permissions (role, resource, action) VALUES (?, ?, ?)";
         externalPermissionPersistService.addPermission("role", "resource", "action");
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");
     }
     
     @Test
     public void testDeletePermission() {
-        String sql = "DELETE from permissions WHERE role=? and resource=? and action=?";
+        String sql = "DELETE FROM permissions WHERE role=? AND resource=? AND action=?";
         externalPermissionPersistService.deletePermission("role", "resource", "action");
         
         Mockito.verify(jdbcTemplate).update(sql, "role", "resource", "action");

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImplTest.java
Patch:
@@ -84,11 +84,11 @@ public void testAddRole() {
     public void testDeleteRole() {
         
         externalRolePersistService.deleteRole("role");
-        String sql = "DELETE from roles WHERE role=?";
+        String sql = "DELETE FROM roles WHERE role=?";
         Mockito.verify(jt).update(sql, "role");
         
         externalRolePersistService.deleteRole("role", "userName");
-        String sql2 = "DELETE from roles WHERE role=? and username=?";
+        String sql2 = "DELETE FROM roles WHERE role=? AND username=?";
         Mockito.verify(jt).update(sql2, "role", "userName");
         
     }

File: config/src/test/java/com/alibaba/nacos/config/server/auth/ExternalUserPersistServiceImplTest.java
Patch:
@@ -72,7 +72,7 @@ public void testCreateUser() {
     public void testDeleteUser() {
         externalUserPersistService.deleteUser("username");
         
-        String sql = "DELETE from users WHERE username=?";
+        String sql = "DELETE FROM users WHERE username=?";
         Mockito.verify(jdbcTemplate).update(sql, "username");
     }
     

File: auth/src/main/java/com/alibaba/nacos/auth/annotation/Secured.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.auth.parser.DefaultResourceParser;
 import com.alibaba.nacos.auth.parser.ResourceParser;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java
Patch:
@@ -21,9 +21,9 @@
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
+import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import io.jsonwebtoken.io.Decoders;
-import org.apache.commons.lang3.BooleanUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Value;
@@ -133,7 +133,7 @@ public boolean isCachingEnabled() {
         if (Objects.nonNull(AuthConfigs.cachingEnabled)) {
             return cachingEnabled;
         }
-        return BooleanUtils.toBoolean(EnvUtil.getProperty("nacos.core.auth.caching.enabled", "true"));
+        return ConvertUtils.toBoolean(EnvUtil.getProperty("nacos.core.auth.caching.enabled", "true"));
     }
     
     @JustForTest

File: auth/src/main/java/com/alibaba/nacos/auth/parser/DefaultResourceParser.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.auth.parser;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Default resource parser.

File: core/src/main/java/com/alibaba/nacos/core/utils/RemoteUtils.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.common.utils.NumberUtil;
+import com.alibaba.nacos.common.utils.NumberUtils;
 
 /**
  * util of remote.
@@ -45,7 +45,7 @@ public class RemoteUtils {
      */
     public static int getRemoteExecutorTimesOfProcessors() {
         String timesString = System.getProperty("remote.executor.times.of.processors");
-        if (NumberUtil.isDigits(timesString)) {
+        if (NumberUtils.isDigits(timesString)) {
             int times = Integer.parseInt(timesString);
             return times > 0 ? times : REMOTE_EXECUTOR_TIMES_OF_PROCESSORS;
         } else {
@@ -55,7 +55,7 @@ public static int getRemoteExecutorTimesOfProcessors() {
     
     public static int getRemoteExecutorQueueSize() {
         String queueSizeString = System.getProperty("remote.executor.queue.size");
-        if (NumberUtil.isDigits(queueSizeString)) {
+        if (NumberUtils.isDigits(queueSizeString)) {
             int size = Integer.parseInt(queueSizeString);
             return size > 0 ? size : REMOTE_EXECUTOR_QUEUE_SIZE;
         } else {

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcAckCallbackSynchronizer.java
Patch:
@@ -89,7 +89,7 @@ public static void syncCallback(String connectionId, String requestId, DefaultRe
             throws NacosException {
         
         Map<String, DefaultRequestFuture> stringDefaultPushFutureMap = initContextIfNecessary(connectionId);
-        ;
+        
         if (!stringDefaultPushFutureMap.containsKey(requestId)) {
             DefaultRequestFuture pushCallBackPrev = stringDefaultPushFutureMap
                     .putIfAbsent(requestId, defaultPushFuture);

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java
Patch:
@@ -64,7 +64,7 @@ private void traceIfNecessary(Payload grpcRequest, boolean receive) {
                         grpcRequest.getBody().toByteString().toStringUtf8());
             }
         } catch (Throwable throwable) {
-            Loggers.REMOTE_DIGEST.error("[{}]Monitor request error,payload={},error={}", clientIp,
+            Loggers.REMOTE_DIGEST.error("[{}]Monitor request error,payload={},error={}", connectionId, clientIp,
                     grpcRequest.toByteString().toStringUtf8());
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedPermissionPersistServiceImpl.java
Patch:
@@ -52,8 +52,8 @@ public class EmbeddedPermissionPersistServiceImpl implements PermissionPersistSe
     public Page<PermissionInfo> getPermissions(String role, int pageNo, int pageSize) {
         PaginationHelper<PermissionInfo> helper = persistService.createPaginationHelper();
         
-        String sqlCountRows = "select count(*) from permissions where ";
-        String sqlFetchRows = "select role,resource,action from permissions where ";
+        String sqlCountRows = "SELECT COUNT(*) FROM permissions WHERE ";
+        String sqlFetchRows = "SELECT role,resource,action FROM permissions WHERE ";
     
         String where = " role= ? ";
         List<String> params = new ArrayList<>();

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImpl.java
Patch:
@@ -58,8 +58,8 @@ protected void init() {
     public Page<PermissionInfo> getPermissions(String role, int pageNo, int pageSize) {
         PaginationHelper<PermissionInfo> helper = persistService.createPaginationHelper();
         
-        String sqlCountRows = "select count(*) from permissions where ";
-        String sqlFetchRows = "select role,resource,action from permissions where ";
+        String sqlCountRows = "SELECT count(*) FROM permissions WHERE ";
+        String sqlFetchRows = "SELECT role,resource,action FROM permissions WHERE ";
     
         String where = " role= ? ";
         List<String> params = new ArrayList<>();

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalUserPersistServiceImpl.java
Patch:
@@ -131,8 +131,8 @@ public Page<User> getUsers(int pageNo, int pageSize) {
         
         PaginationHelper<User> helper = persistService.createPaginationHelper();
         
-        String sqlCountRows = "select count(*) from users where ";
-        String sqlFetchRows = "select username,password from users where ";
+        String sqlCountRows = "SELECT COUNT(*) FROM users WHERE ";
+        String sqlFetchRows = "SELECT username,password FROM users WHERE ";
         
         String where = " 1=1 ";
         
@@ -154,7 +154,7 @@ public Page<User> getUsers(int pageNo, int pageSize) {
 
     @Override
     public List<String> findUserLikeUsername(String username) {
-        String sql = "SELECT username FROM users WHERE username like '%' ? '%'";
+        String sql = "SELECT username FROM users WHERE username LIKE '%' ? '%'";
         List<String> users = this.jt.queryForList(sql, new String[]{username}, String.class);
         return users;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -99,7 +99,7 @@ public String setLogLevel(@RequestParam String logName, @RequestParam String log
     @GetMapping(value = "/derby")
     @Secured(action = ActionTypes.READ, resource = "nacos/admin")
     public RestResult<Object> derbyOps(@RequestParam(value = "sql") String sql) {
-        String selectSign = "select";
+        String selectSign = "SELECT";
         String limitSign = "ROWS FETCH NEXT";
         String limit = " OFFSET 0 ROWS FETCH NEXT 1000 ROWS ONLY";
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -58,8 +58,8 @@ public interface PersistService {
     String SPOT = ".";
     Object[] EMPTY_ARRAY = new Object[] {};
     @SuppressWarnings("checkstyle:linelength")
-    String SQL_FIND_ALL_CONFIG_INFO = "select id,data_id,group_id,tenant_id,app_name,content,type,md5,gmt_create,gmt_modified,src_user,src_ip,c_desc,c_use,effect,c_schema from config_info";
-    String SQL_TENANT_INFO_COUNT_BY_TENANT_ID = "select count(1) from tenant_info where tenant_id = ?";
+    String SQL_FIND_ALL_CONFIG_INFO = "SELECT id,data_id,group_id,tenant_id,app_name,content,type,md5,gmt_create,gmt_modified,src_user,src_ip,c_desc,c_use,effect,c_schema FROM config_info";
+    String SQL_TENANT_INFO_COUNT_BY_TENANT_ID = "SELECT COUNT(1) WHERE tenant_info WHERE tenant_id = ?";
     String SQL_FIND_CONFIG_INFO_BY_IDS = "SELECT ID,data_id,group_id,tenant_id,app_name,content,md5 FROM config_info WHERE ";
     String SQL_DELETE_CONFIG_INFO_BY_IDS = "DELETE FROM config_info WHERE ";
     int QUERY_LIMIT_SIZE = 50;

File: common/src/main/java/com/alibaba/nacos/common/utils/ClassUtils.java
Patch:
@@ -18,6 +18,8 @@
 
 import com.alibaba.nacos.api.exception.runtime.NacosRuntimeException;
 
+import java.util.Objects;
+
 import static com.alibaba.nacos.api.exception.NacosException.SERVER_ERROR;
 
 /**

File: common/src/main/java/com/alibaba/nacos/common/utils/ExceptionUtil.java
Patch:
@@ -18,6 +18,7 @@
 
 import java.io.ByteArrayOutputStream;
 import java.io.PrintStream;
+import java.util.Objects;
 
 /**
  * Common methods for exception.

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtil.java
Patch:
@@ -21,6 +21,7 @@
 import java.util.Collection;
 import java.util.Dictionary;
 import java.util.Map;
+import java.util.Objects;
 import java.util.function.Predicate;
 
 /**

File: common/src/main/java/com/alibaba/nacos/common/utils/Observable.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.common.utils;
 
+import java.util.Objects;
 import java.util.Set;
 
 /**

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -18,6 +18,7 @@
 
 import org.slf4j.Logger;
 
+import java.util.Objects;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.TimeUnit;

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -18,6 +18,7 @@
 
 import java.io.InputStream;
 import java.util.Comparator;
+import java.util.Objects;
 import java.util.Properties;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -20,7 +20,6 @@
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.event.DerbyImportEvent;
@@ -31,8 +30,8 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -50,6 +49,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * Manage controllers.

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.auth.exception.AccessException;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
@@ -33,6 +32,8 @@
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
 
+import java.util.Objects;
+
 /**
  * History management controller.
  *

File: console/src/main/java/com/alibaba/nacos/console/controller/UserController.java
Patch:
@@ -25,7 +25,6 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
@@ -57,6 +56,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.io.IOException;
 import java.util.List;
+import java.util.Objects;
 
 /**
  * User related methods entry.

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.lang3.StringUtils;
@@ -30,6 +29,7 @@
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.concurrent.ThreadLocalRandom;
 import java.util.function.Predicate;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/FailoverClosureImpl.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.core.distributed.raft.utils;
 
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.consistency.entity.Response;
 import com.alibaba.nacos.consistency.exception.ConsistencyException;
 import com.alipay.sofa.jraft.Status;
 
+import java.util.Objects;
 import java.util.concurrent.CompletableFuture;
 
 /**

File: core/src/main/java/com/alibaba/nacos/core/remote/control/TpsMonitorPoint.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.remote.control;
 
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.core.utils.Loggers;
 
 import java.text.SimpleDateFormat;
@@ -26,6 +25,7 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.concurrent.TimeUnit;
 
 /**

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.consistency.DataOperation;
 import com.alibaba.nacos.core.distributed.distro.DistroConfig;
 import com.alibaba.nacos.core.distributed.distro.DistroProtocol;
@@ -50,6 +49,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.concurrent.ArrayBlockingQueue;
 import java.util.concurrent.BlockingQueue;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperation.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.impl;
 
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.consistency.snapshot.LocalFileMeta;
 import com.alibaba.nacos.consistency.snapshot.Reader;
 import com.alibaba.nacos.consistency.snapshot.Writer;
@@ -26,6 +25,7 @@
 import com.alipay.sofa.jraft.util.CRC64;
 
 import java.nio.file.Paths;
+import java.util.Objects;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import java.util.zip.Checksum;
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
@@ -60,6 +59,7 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.StringJoiner;
 import java.util.concurrent.ConcurrentHashMap;

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/AbstractMetadataSnapshotOperation.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming.core.v2.metadata;
 
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.consistency.snapshot.LocalFileMeta;
 import com.alibaba.nacos.consistency.snapshot.Reader;
 import com.alibaba.nacos.consistency.snapshot.Writer;
@@ -27,6 +26,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.file.Paths;
+import java.util.Objects;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import java.util.zip.Checksum;
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImpl.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.ClassUtils;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.consistency.DataOperation;
 import com.alibaba.nacos.consistency.SerializeFactory;
 import com.alibaba.nacos.consistency.Serializer;
@@ -36,6 +35,7 @@
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
 import com.alibaba.nacos.naming.consistency.persistent.impl.AbstractSnapshotOperation;
+import com.alibaba.nacos.naming.constants.Constants;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.ClientAttributes;
@@ -47,7 +47,6 @@
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.ClientOperationService;
 import com.alibaba.nacos.naming.pojo.Subscriber;
-import com.alibaba.nacos.naming.constants.Constants;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alipay.sofa.jraft.util.CRC64;
@@ -62,6 +61,7 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;

File: sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.utils.IoUtils;
-import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
@@ -42,6 +41,7 @@
 import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * Its own configuration information manipulation tool class.

File: sys/src/main/java/com/alibaba/nacos/sys/utils/DiskUtils.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.sys.utils;
 
 import com.alibaba.nacos.common.utils.ByteUtils;
-import com.alibaba.nacos.common.utils.Objects;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.io.output.NullOutputStream;
@@ -43,6 +42,7 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
+import java.util.Objects;
 import java.util.function.Consumer;
 import java.util.zip.CheckedInputStream;
 import java.util.zip.CheckedOutputStream;

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -232,6 +232,7 @@ private <T extends Response> T requestToServer(AbstractNamingRequest request, Cl
     @Override
     public void shutdown() throws NacosException {
         rpcClient.shutdown();
+        namingGrpcConnectionEventListener.shutdown();
     }
     
     public boolean isEnable() {

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -158,7 +158,7 @@ public boolean hasPermission(String username, Permission permission) {
     
     public List<RoleInfo> getRoles(String username) {
         List<RoleInfo> roleInfoList = roleInfoMap.get(username);
-        if (!authConfigs.isCachingEnabled()) {
+        if (!authConfigs.isCachingEnabled() || roleInfoList == null) {
             Page<RoleInfo> roleInfoPage = getRolesFromDatabase(username, DEFAULT_PAGE_NO, Integer.MAX_VALUE);
             if (roleInfoPage != null) {
                 roleInfoList = roleInfoPage.getPageItems();
@@ -177,7 +177,7 @@ public Page<RoleInfo> getRolesFromDatabase(String userName, int pageNo, int page
     
     public List<PermissionInfo> getPermissions(String role) {
         List<PermissionInfo> permissionInfoList = permissionInfoMap.get(role);
-        if (!authConfigs.isCachingEnabled()) {
+        if (!authConfigs.isCachingEnabled() || permissionInfoList == null) {
             Page<PermissionInfo> permissionInfoPage = getPermissionsFromDatabase(role, DEFAULT_PAGE_NO, Integer.MAX_VALUE);
             if (permissionInfoPage != null) {
                 permissionInfoList = permissionInfoPage.getPageItems();

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -91,7 +91,7 @@ public Page<User> getUsersFromDatabase(int pageNo, int pageSize) {
     
     public User getUser(String username) {
         User user = userMap.get(username);
-        if (!authConfigs.isCachingEnabled()) {
+        if (!authConfigs.isCachingEnabled() || user == null) {
             user = getUserFromDatabase(username);
         }
         return user;

File: api/src/main/java/com/alibaba/nacos/api/remote/DefaultRequestFuture.java
Patch:
@@ -192,6 +192,9 @@ public TimeoutHandler() {
         public void run() {
             setFailResult(new TimeoutException(
                     "Timeout After " + requestCallBack.getTimeout() + " milliseconds,requestId =" + requestId));
+            if (timeoutInnerTrigger != null) {
+                timeoutInnerTrigger.triggerOnTimeout();
+            }
         }
     }
     

File: core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java
Patch:
@@ -85,7 +85,7 @@ public Response filter(Request request, RequestMeta meta, Class handlerClazz) th
                         e.getErrMsg());
             }
             Response defaultResponseInstance = getDefaultResponseInstance(handlerClazz);
-            defaultResponseInstance.setErrorInfo(NacosException.NO_RIGHT, e.getMessage());
+            defaultResponseInstance.setErrorInfo(NacosException.NO_RIGHT, e.getErrMsg());
             return defaultResponseInstance;
         } catch (Exception e) {
             Response defaultResponseInstance = getDefaultResponseInstance(handlerClazz);

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingApplicationListener.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.common.executor.NameThreadFactory;
 import com.alibaba.nacos.common.executor.ThreadPoolManager;
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.common.event.ServerConfigChangeEvent;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.file.FileChangeEvent;
 import com.alibaba.nacos.sys.file.FileWatcher;
@@ -169,6 +170,7 @@ public void onChange(FileChangeEvent event) {
                 try {
                     Map<String, ?> tmp = EnvUtil.loadProperties(EnvUtil.getApplicationConfFileResource());
                     SOURCES.putAll(tmp);
+                    NotifyCenter.publishEvent(ServerConfigChangeEvent.newEvent());
                 } catch (IOException ignore) {
                     LOGGER.warn("Failed to monitor file ", ignore);
                 }

File: client/src/test/java/com/alibaba/nacos/client/config/impl/CacheDataTest.java
Patch:
@@ -54,7 +54,7 @@ public void testGetter() {
         Assert.assertEquals(0, cacheData1.getTaskId());
         Assert.assertFalse(cacheData1.isSyncWithServer());
         Assert.assertFalse(cacheData1.isUseLocalConfigInfo());
-        Assert.assertEquals(0, cacheData1.getLastModifiedTs());
+        Assert.assertEquals(0, cacheData1.getLastModifiedTs().intValue());
         Assert.assertEquals(0, cacheData1.getLocalConfigInfoVersion());
         
         cacheData1.setInitializing(false);
@@ -76,7 +76,7 @@ public void testGetter() {
         //TODO FIX getType
         // Assert.assertFalse("123",cacheData1.getType());
         Assert.assertTrue(cacheData1.isUseLocalConfigInfo());
-        Assert.assertEquals(timeStamp, cacheData1.getLastModifiedTs());
+        Assert.assertEquals(timeStamp, cacheData1.getLastModifiedTs().longValue());
         Assert.assertEquals(timeStamp, cacheData1.getLocalConfigInfoVersion());
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/control/TpsMonitorManager.java
Patch:
@@ -308,7 +308,7 @@ private File getRuleFile(String pointName) {
     private File checkBaseDir() {
         File baseDir = new File(EnvUtil.getNacosHome(), "data" + File.separator + "tps" + File.separator);
         if (!baseDir.exists()) {
-            baseDir.mkdir();
+            baseDir.mkdirs();
         }
         return baseDir;
     }

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpServiceTest.java
Patch:
@@ -19,12 +19,14 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
 import org.springframework.test.context.web.WebAppConfiguration;
 
 @RunWith(SpringJUnit4ClassRunner.class)
 @SpringBootTest
+@SpringBootApplication(scanBasePackages = "com.alibaba.nacos")
 @WebAppConfiguration
 public class DumpServiceTest {
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/publisher/NamingEventPublisher.java
Patch:
@@ -178,7 +178,7 @@ private void handleEvent(Event event) {
     }
     
     void checkIsStart() {
-        if (!initialized || shutdown) {
+        if (!initialized) {
             throw new IllegalStateException("Publisher does not start");
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/AppNameUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.utils;
+package com.alibaba.nacos.config.server.utils;
 
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/test/java/com/alibaba/nacos/client/naming/event/InstancesChangeNotifierTest.java
Patch:
@@ -59,7 +59,7 @@ public void testDeregisterListener() {
         instancesChangeNotifier.deregisterListener(group, name, clusters, listener);
         
         List<ServiceInfo> subscribeServices2 = instancesChangeNotifier.getSubscribeServices();
-        Assert.assertEquals(1, subscribeServices2.size());
+        Assert.assertEquals(0, subscribeServices2.size());
     }
     
     @Test

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImplTest.java
Patch:
@@ -41,7 +41,6 @@
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
 
 public class DistroConsistencyServiceImplTest extends BaseTest {
     
@@ -71,7 +70,6 @@ public class DistroConsistencyServiceImplTest extends BaseTest {
     
     @Before
     public void setUp() throws Exception {
-        when(globalConfig.getTaskDispatchPeriod()).thenReturn(2000);
         distroConsistencyService = new DistroConsistencyServiceImpl(distroMapper, dataStore, serializer, switchDomain,
                 globalConfig, distroProtocol);
         ReflectionTestUtils.setField(distroConsistencyService, "notifier", notifier);

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceManagerTest.java
Patch:
@@ -458,7 +458,7 @@ public void testSerializeServiceChecksum() {
         assertTrue(actual.contains("\"serviceName2Checksum\":{\"test\":\"1234567890\"}"));
     }
     
-    @Test
+    @Test(expected = NacosException.class)
     public void testCheckServiceIsNull() throws NacosException {
         serviceManager.createEmptyService(TEST_NAMESPACE, TEST_SERVICE_NAME, true);
         String serviceName = "order-service";

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HealthCheckProcessorV2DelegateTest.java
Patch:
@@ -22,12 +22,14 @@
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.healthcheck.extend.HealthCheckExtendProvider;
 import com.alibaba.nacos.naming.healthcheck.v2.HealthCheckTaskV2;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
+import org.springframework.mock.env.MockEnvironment;
 
 import java.lang.reflect.Field;
 import java.util.ArrayList;
@@ -58,6 +60,7 @@ public class HealthCheckProcessorV2DelegateTest {
     public void setUp() {
         healthCheckProcessorV2Delegate = new HealthCheckProcessorV2Delegate(healthCheckExtendProvider);
         verify(healthCheckExtendProvider).init();
+        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     @Test

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -43,7 +43,7 @@
  */
 public class AddressServerMemberLookup extends AbstractMemberLookup {
     
-    private final GenericType<RestResult<String>> genericType = new GenericType<RestResult<String>>() { };
+    private final GenericType<String> genericType = new GenericType<String>() { };
     
     public String domainName;
     

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -63,7 +63,7 @@ private void init(Properties properties) throws NacosException {
         namespace = InitUtils.initNamespaceForNaming(properties);
         InitUtils.initSerialization();
         InitUtils.initWebRootContext(properties);
-        ServerListManager serverListManager = new ServerListManager(properties);
+        ServerListManager serverListManager = new ServerListManager(properties, namespace);
         SecurityProxy securityProxy = new SecurityProxy(properties,
                 NamingHttpClientManager.getInstance().getNacosRestTemplate());
         serverProxy = new NamingHttpClientProxy(namespace, securityProxy, serverListManager, properties, null);

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -68,7 +68,7 @@ public NamingClientProxyDelegate(String namespace, ServiceInfoHolder serviceInfo
             InstancesChangeNotifier changeNotifier) throws NacosException {
         this.serviceInfoUpdateService = new ServiceInfoUpdateService(properties, serviceInfoHolder, this,
                 changeNotifier);
-        this.serverListManager = new ServerListManager(properties);
+        this.serverListManager = new ServerListManager(properties, namespace);
         this.serviceInfoHolder = serviceInfoHolder;
         this.securityProxy = new SecurityProxy(properties, NamingHttpClientManager.getInstance().getNacosRestTemplate());
         initSecurityProxy();

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2722,6 +2722,8 @@ public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoLis
                     String extName = configInfo.getDataId().substring(configInfo.getDataId().lastIndexOf(SPOT) + 1);
                     FileTypeEnum fileTypeEnum = FileTypeEnum.getFileTypeEnumByFileExtensionOrFileType(extName);
                     type = fileTypeEnum.getFileType();
+                } else {
+                    type = FileTypeEnum.getFileTypeEnumByFileExtensionOrFileType(null).getFileType();
                 }
             }
             if (configAdvanceInfo == null) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/Limiter.java
Patch:
@@ -42,14 +42,16 @@ public class Limiter {
     private static final Cache<String, RateLimiter> CACHE = CacheBuilder.newBuilder().initialCapacity(CAPACITY_SIZE)
             .expireAfterAccess(1, TimeUnit.MINUTES).build();
     
+    private static final String LIMIT_TIME_PROPERTY = "limitTime";
+    
     /**
      * qps 5.
      */
     private static double limit = 5;
     
     static {
         try {
-            String limitTimeStr = System.getProperty("limitTime", String.valueOf(limit));
+            String limitTimeStr = System.getProperty(LIMIT_TIME_PROPERTY, String.valueOf(limit));
             limit = Double.parseDouble(limitTimeStr);
             LOGGER.info("limitTime:{}", limit);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/PropertiesChangeParser.java
Patch:
@@ -31,8 +31,10 @@
  */
 public class PropertiesChangeParser extends AbstractConfigChangeParser {
     
+    private static final String CONFIG_TYPE = "properties";
+    
     public PropertiesChangeParser() {
-        super("properties");
+        super(CONFIG_TYPE);
     }
     
     @Override

File: client/src/main/java/com/alibaba/nacos/client/config/impl/YmlChangeParser.java
Patch:
@@ -39,8 +39,10 @@ public class YmlChangeParser extends AbstractConfigChangeParser {
     
     private static final String INVALID_CONSTRUCTOR_ERROR_INFO = "could not determine a constructor for the tag";
     
+    private static final String CONFIG_TYPE = "yaml";
+    
     public YmlChangeParser() {
-        super("yaml");
+        super(CONFIG_TYPE);
     }
     
     @Override

File: address/src/test/java/com/alibaba/nacos/address/AddressServerControllerTests.java
Patch:
@@ -16,12 +16,10 @@
 
 package com.alibaba.nacos.address;
 
-import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.HashMap;
 
-@Ignore
 public class AddressServerControllerTests {
     
     private static final String PRODUCT_NACOS = "nacos";

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigPublishResponse.java
Patch:
@@ -45,10 +45,11 @@ public static ConfigPublishResponse buildSuccessResponse() {
      *
      * @return response.
      */
-    public static ConfigPublishResponse buildFailResponse(String errorMsg) {
+    public static ConfigPublishResponse buildFailResponse(int errorCode, String errorMsg) {
         ConfigPublishResponse configPublishResponse = new ConfigPublishResponse();
         configPublishResponse.setResultCode(ResponseCode.FAIL.getCode());
         configPublishResponse.setMessage(errorMsg);
+        configPublishResponse.setErrorCode(errorCode);
         return configPublishResponse;
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/request/Request.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.api.remote.request;
 
-import java.util.HashMap;
 import java.util.Map;
+import java.util.TreeMap;
 
 /**
  * Request.
@@ -27,7 +27,7 @@
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class Request {
     
-    private final Map<String, String> headers = new HashMap<String, String>();
+    private final Map<String, String> headers = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
     
     private String requestId;
     

File: common/src/main/java/com/alibaba/nacos/common/http/param/Header.java
Patch:
@@ -49,7 +49,7 @@ private Header() {
         originalResponseHeader = new TreeMap<String, List<String>>(String.CASE_INSENSITIVE_ORDER);
         addParam(HttpHeaderConsts.CONTENT_TYPE, MediaType.APPLICATION_JSON);
         addParam(HttpHeaderConsts.ACCEPT_CHARSET, DEFAULT_CHARSET);
-        addParam(HttpHeaderConsts.ACCEPT_ENCODING, DEFAULT_ENCODING);
+        //addParam(HttpHeaderConsts.ACCEPT_ENCODING, DEFAULT_ENCODING);
     }
     
     public static Header newInstance() {

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -48,7 +48,7 @@ public class DefaultPublisher extends Thread implements EventPublisher {
     
     private Class<? extends Event> eventType;
     
-    protected final ConcurrentHashSet<Subscriber> subscribers = new ConcurrentHashSet<Subscriber>();
+    protected final ConcurrentHashSet<Subscriber> subscribers = new ConcurrentHashSet<>();
     
     private int queueMaxSize = -1;
     
@@ -65,7 +65,7 @@ public void init(Class<? extends Event> type, int bufferSize) {
         setName("nacos.publisher-" + type.getName());
         this.eventType = type;
         this.queueMaxSize = bufferSize;
-        this.queue = new ArrayBlockingQueue<Event>(bufferSize);
+        this.queue = new ArrayBlockingQueue<>(bufferSize);
         start();
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientDataProcessor.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientEvent;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
+import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.upgrade.UpgradeJudgement;
@@ -67,7 +68,7 @@ public DistroClientDataProcessor(ClientManager clientManager, DistroProtocol dis
         this.clientManager = clientManager;
         this.distroProtocol = distroProtocol;
         this.upgradeJudgement = upgradeJudgement;
-        NotifyCenter.registerSubscriber(this);
+        NotifyCenter.registerSubscriber(this, NamingEventPublisherFactory.getInstance());
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/index/ClientServiceIndexesManager.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientEvent;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
+import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import org.springframework.stereotype.Component;
@@ -47,7 +48,7 @@ public class ClientServiceIndexesManager extends SmartSubscriber {
     private final ConcurrentMap<Service, Set<String>> subscriberIndexes = new ConcurrentHashMap<>();
     
     public ClientServiceIndexesManager() {
-        NotifyCenter.registerSubscriber(this);
+        NotifyCenter.registerSubscriber(this, NamingEventPublisherFactory.getInstance());
     }
     
     public Collection<String> getAllClientsRegisteredService(Service service) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataManager.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.event.client.ClientEvent;
 import com.alibaba.nacos.naming.core.v2.event.metadata.MetadataEvent;
+import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import org.springframework.stereotype.Component;
 
@@ -54,7 +55,7 @@ public NamingMetadataManager() {
         serviceMetadataMap = new ConcurrentHashMap<>(1 << 10);
         instanceMetadataMap = new ConcurrentHashMap<>(1 << 10);
         expiredMetadataInfos = new ConcurrentHashSet<>();
-        NotifyCenter.registerSubscriber(this);
+        NotifyCenter.registerSubscriber(this, NamingEventPublisherFactory.getInstance());
     }
     
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/delay/DoubleWriteEventListener.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.naming.core.Service;
+import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.upgrade.UpgradeJudgement;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -52,7 +53,7 @@ public DoubleWriteEventListener(UpgradeJudgement upgradeJudgement,
             DoubleWriteDelayTaskEngine doubleWriteDelayTaskEngine) {
         this.upgradeJudgement = upgradeJudgement;
         this.doubleWriteDelayTaskEngine = doubleWriteDelayTaskEngine;
-        NotifyCenter.registerSubscriber(this);
+        NotifyCenter.registerSubscriber(this, NamingEventPublisherFactory.getInstance());
         stopDoubleWrite = EnvUtil.getStandaloneMode();
         if (!stopDoubleWrite) {
             Thread doubleWriteEnabledChecker = new DoubleWriteEnabledChecker();

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/NamingSubscriberServiceV2Impl.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.common.notify.listener.SmartSubscriber;
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManagerDelegate;
+import com.alibaba.nacos.naming.core.v2.event.publisher.NamingEventPublisherFactory;
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.index.ClientServiceIndexesManager;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
@@ -68,7 +69,7 @@ public NamingSubscriberServiceV2Impl(ClientManagerDelegate clientManager,
         this.upgradeJudgement = upgradeJudgement;
         this.delayTaskEngine = new PushDelayTaskExecuteEngine(clientManager, indexesManager, serviceStorage,
                 metadataManager, pushExecutor, switchDomain);
-        NotifyCenter.registerSubscriber(this);
+        NotifyCenter.registerSubscriber(this, NamingEventPublisherFactory.getInstance());
         
     }
     

File: common/src/main/java/com/alibaba/nacos/common/task/AbstractExecuteTask.java
Patch:
@@ -23,6 +23,8 @@
  */
 public abstract class AbstractExecuteTask implements NacosTask, Runnable {
     
+    protected static final long INTERVAL = 3000L;
+    
     @Override
     public boolean shouldProcess() {
         return true;

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/cleaner/EmptyServiceAutoCleaner.java
Patch:
@@ -51,7 +51,7 @@ public void run() {
         for (String each : serviceManager.getAllNamespaces()) {
             Map<String, Service> serviceMap = serviceManager.chooseServiceMap(each);
             
-            Stream<Map.Entry<String, Service>> stream = null;
+            Stream<Map.Entry<String, Service>> stream;
             if (serviceMap.size() > parallelSize) {
                 stream = serviceMap.entrySet().parallelStream();
             } else {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/cleaner/ExpiredMetadataCleaner.java
Patch:
@@ -36,6 +36,8 @@ public class ExpiredMetadataCleaner extends AbstractNamingCleaner {
     
     private static final String EXPIRED_METADATA = "expiredMetadata";
     
+    private static final int INITIAL_DELAY = 5000;
+    
     private final NamingMetadataManager metadataManager;
     
     private final NamingMetadataOperateService metadataOperateService;
@@ -44,7 +46,7 @@ public ExpiredMetadataCleaner(NamingMetadataManager metadataManager,
             NamingMetadataOperateService metadataOperateService) {
         this.metadataManager = metadataManager;
         this.metadataOperateService = metadataOperateService;
-        GlobalExecutor.scheduleExpiredClientCleaner(this, 5000, GlobalConfig.getExpiredMetadataCleanInterval(),
+        GlobalExecutor.scheduleExpiredClientCleaner(this, INITIAL_DELAY, GlobalConfig.getExpiredMetadataCleanInterval(),
                 TimeUnit.MILLISECONDS);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/factory/ClientFactoryHolder.java
Patch:
@@ -40,7 +40,8 @@ private ClientFactoryHolder() {
         Collection<ClientFactory> clientFactories = NacosServiceLoader.load(ClientFactory.class);
         for (ClientFactory each : clientFactories) {
             if (this.clientFactories.containsKey(each.getType())) {
-                Loggers.SRV_LOG.warn("Client type {} found multiple factory, use {} default", each.getType(), each.getClass().getCanonicalName());
+                Loggers.SRV_LOG.warn("Client type {} found multiple factory, use {} default", each.getType(),
+                        each.getClass().getCanonicalName());
             }
             this.clientFactories.put(each.getType(), each);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManagerDelegate.java
Patch:
@@ -41,6 +41,8 @@ public class ClientManagerDelegate implements ClientManager {
     
     private final PersistentIpPortClientManager persistentIpPortClientManager;
     
+    private static final String SUFFIX = "false";
+    
     public ClientManagerDelegate(ConnectionBasedClientManager connectionBasedClientManager,
             EphemeralIpPortClientManager ephemeralIpPortClientManager,
             PersistentIpPortClientManager persistentIpPortClientManager) {
@@ -98,7 +100,7 @@ private ClientManager getClientManagerById(String clientId) {
         if (isConnectionBasedClient(clientId)) {
             return connectionBasedClientManager;
         }
-        return clientId.endsWith("false") ? persistentIpPortClientManager : ephemeralIpPortClientManager;
+        return clientId.endsWith(SUFFIX) ? persistentIpPortClientManager : ephemeralIpPortClientManager;
     }
     
     private boolean isConnectionBasedClient(String clientId) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataManager.java
Patch:
@@ -48,6 +48,8 @@ public class NamingMetadataManager extends SmartSubscriber {
     
     private ConcurrentMap<Service, ConcurrentMap<String, InstanceMetadata>> instanceMetadataMap;
     
+    private static final int INITIAL_CAPACITY = 1;
+    
     public NamingMetadataManager() {
         serviceMetadataMap = new ConcurrentHashMap<>(1 << 10);
         instanceMetadataMap = new ConcurrentHashMap<>(1 << 10);
@@ -125,7 +127,7 @@ public void updateServiceMetadata(Service service, ServiceMetadata serviceMetada
      */
     public void updateInstanceMetadata(Service service, String metadataId, InstanceMetadata instanceMetadata) {
         if (!instanceMetadataMap.containsKey(service)) {
-            instanceMetadataMap.putIfAbsent(service, new ConcurrentHashMap<>(1));
+            instanceMetadataMap.putIfAbsent(service, new ConcurrentHashMap<>(INITIAL_CAPACITY));
         }
         instanceMetadataMap.get(service).put(metadataId, instanceMetadata);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/PersistentClientOperationServiceImpl.java
Patch:
@@ -86,6 +86,8 @@ public class PersistentClientOperationServiceImpl extends RequestProcessor4CP im
     
     private final ReentrantReadWriteLock.ReadLock readLock = lock.readLock();
     
+    private static final int INITIAL_CAPACITY = 128;
+    
     public PersistentClientOperationServiceImpl(final PersistentIpPortClientManager clientManager) {
         this.clientManager = clientManager;
         this.protocol = ApplicationUtils.getBean(ProtocolManager.class).getCpProtocol();
@@ -275,7 +277,7 @@ protected boolean readSnapshot(Reader reader) throws Exception {
         
         protected InputStream dumpSnapshot() {
             Map<String, IpPortBasedClient> clientMap = clientManager.showClients();
-            ConcurrentHashMap<String, ClientSyncData> clone = new ConcurrentHashMap<>(128);
+            ConcurrentHashMap<String, ClientSyncData> clone = new ConcurrentHashMap<>(INITIAL_CAPACITY);
             clientMap.forEach((clientId, client) -> {
                 clone.put(clientId, client.generateSyncData());
             });

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/delay/ServiceChangeV1Task.java
Patch:
@@ -69,7 +69,7 @@ public ServiceChangeV1Task(String namespace, String serviceName, boolean ephemer
         this.content = action == DoubleWriteAction.REMOVE ? DoubleWriteContent.BOTH : content;
         this.action = action;
         setLastProcessTime(System.currentTimeMillis());
-        setTaskInterval(1000L);
+        setTaskInterval(INTERVAL);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/delay/ServiceChangeV2Task.java
Patch:
@@ -47,7 +47,7 @@ public ServiceChangeV2Task(Service service, DoubleWriteContent content, DoubleWr
         this.changedService = service;
         this.content = action == DoubleWriteAction.REMOVE ? DoubleWriteContent.BOTH : content;
         this.action = action;
-        setTaskInterval(1000L);
+        setTaskInterval(INTERVAL);
         setLastProcessTime(System.currentTimeMillis());
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/DefaultInstanceUpgradeHelper.java
Patch:
@@ -30,6 +30,8 @@
 @Component
 @ConditionalOnMissingBean(InstanceUpgradeHelper.class)
 public class DefaultInstanceUpgradeHelper implements InstanceUpgradeHelper {
+    
+    private static final String IGNORE_PROPERTIES = "metadata";
 
     @Override
     public Instance toV1(com.alibaba.nacos.api.naming.pojo.Instance v2) {
@@ -50,7 +52,7 @@ public Instance toV1(com.alibaba.nacos.api.naming.pojo.Instance v2) {
     @Override
     public com.alibaba.nacos.api.naming.pojo.Instance toV2(Instance v1) {
         com.alibaba.nacos.api.naming.pojo.Instance v2 = new com.alibaba.nacos.api.naming.pojo.Instance();
-        BeanUtils.copyProperties(v1, v2, "metadata");
+        BeanUtils.copyProperties(v1, v2, IGNORE_PROPERTIES);
         v2.getMetadata().putAll(v1.getMetadata());
         return v2;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/DoubleWriteInstanceChangeToV2Task.java
Patch:
@@ -64,7 +64,7 @@ public void run() {
             }
             ServiceChangeV1Task retryTask = new ServiceChangeV1Task(namespace, serviceName, instance.isEphemeral(),
                     DoubleWriteContent.INSTANCE);
-            retryTask.setTaskInterval(3000L);
+            retryTask.setTaskInterval(INTERVAL);
             String taskKey = ServiceChangeV1Task.getKey(namespace, serviceName, instance.isEphemeral());
             ApplicationUtils.getBean(DoubleWriteDelayTaskEngine.class).addTask(taskKey, retryTask);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/DoubleWriteMetadataChangeToV1Task.java
Patch:
@@ -58,7 +58,7 @@ public void run() {
                 Loggers.SRV_LOG.debug("Double write task for {} metadata from 2 to 1 failed", service, e);
             }
             ServiceChangeV2Task retryTask = new ServiceChangeV2Task(service, DoubleWriteContent.METADATA);
-            retryTask.setTaskInterval(3000L);
+            retryTask.setTaskInterval(INTERVAL);
             String taskKey = ServiceChangeV2Task.getKey(service);
             ApplicationUtils.getBean(DoubleWriteDelayTaskEngine.class).addTask(taskKey, retryTask);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/DoubleWriteServiceRemovalToV1Task.java
Patch:
@@ -68,7 +68,7 @@ public void run() {
             }
             ServiceChangeV2Task retryTask = new ServiceChangeV2Task(service,
                     DoubleWriteContent.BOTH, DoubleWriteAction.REMOVE);
-            retryTask.setTaskInterval(3000L);
+            retryTask.setTaskInterval(INTERVAL);
             String taskKey = ServiceChangeV2Task.getKey(service);
             ApplicationUtils.getBean(DoubleWriteDelayTaskEngine.class).addTask(taskKey, retryTask);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/DoubleWriteServiceRemovalToV2Task.java
Patch:
@@ -78,7 +78,7 @@ public void run() {
             ServiceChangeV1Task retryTask = new ServiceChangeV1Task(service.getNamespace(),
                     service.getGroupedServiceName(), service.isEphemeral(),
                     DoubleWriteContent.BOTH, DoubleWriteAction.REMOVE);
-            retryTask.setTaskInterval(3000L);
+            retryTask.setTaskInterval(INTERVAL);
             String taskKey = ServiceChangeV1Task
                     .getKey(service.getNamespace(), service.getGroupedServiceName(), service.isEphemeral());
             ApplicationUtils.getBean(DoubleWriteDelayTaskEngine.class).addTask(taskKey, retryTask);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/HealthCheckTaskV2.java
Patch:
@@ -98,12 +98,12 @@ public void doHealthCheck() {
                     ClusterMetadata metadata = getClusterMetadata(each, instancePublishInfo);
                     ApplicationUtils.getBean(HealthCheckProcessorV2Delegate.class).process(this, each, metadata);
                     if (Loggers.EVT_LOG.isDebugEnabled()) {
-                        Loggers.EVT_LOG.debug("[HEALTH-CHECK] schedule health check task: {}", client.getClientId());
+                        Loggers.EVT_LOG.debug("[HEALTH-CHECK-V2] schedule health check task: {}", client.getClientId());
                     }
                 }
             }
         } catch (Throwable e) {
-            Loggers.SRV_LOG.error("[HEALTH-CHECK] error while process health check for {}", client.getClientId(), e);
+            Loggers.SRV_LOG.error("[HEALTH-CHECK-V2] error while process health check for {}", client.getClientId(), e);
         } finally {
             if (!cancelled) {
                 HealthCheckReactor.scheduleCheck(this);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/TcpHealthCheckProcessor.java
Patch:
@@ -101,7 +101,7 @@ public void process(HealthCheckTaskV2 task, Service service, ClusterMetadata met
         }
         // TODO handle marked(white list) logic like v1.x.
         if (!instance.tryStartCheck()) {
-            SRV_LOG.warn("tcp check started before last one finished, service: {} : {} : {}:{}",
+            SRV_LOG.warn("[HEALTH-CHECK-V2] tcp check started before last one finished, service: {} : {} : {}:{}",
                     service.getGroupedServiceName(), instance.getCluster(), instance.getIp(), instance.getPort());
             healthCheckCommon
                     .reEvaluateCheckRT(task.getCheckRtNormalized() * 2, task, switchDomain.getTcpHealthParams());
@@ -151,7 +151,7 @@ public void run() {
                     GlobalExecutor.executeTcpSuperSense(new PostProcessor(key));
                 }
             } catch (Throwable e) {
-                SRV_LOG.error("[HEALTH-CHECK] error while processing NIO task", e);
+                SRV_LOG.error("[HEALTH-CHECK-V2] error while processing NIO task", e);
             }
         }
     }

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -134,13 +134,10 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
                         e.getErrMsg());
             }
             resp.sendError(HttpServletResponse.SC_FORBIDDEN, e.getErrMsg());
-            return;
         } catch (IllegalArgumentException e) {
             resp.sendError(HttpServletResponse.SC_BAD_REQUEST, ExceptionUtil.getAllExceptionMsg(e));
-            return;
         } catch (Exception e) {
             resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Server failed," + e.getMessage());
-            return;
         }
     }
     

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -38,6 +38,8 @@
  */
 public class FileConfigMemberLookup extends AbstractMemberLookup {
     
+    private static final String DEFAULT_SEARCH_SEQ = "cluster.conf";
+    
     private FileWatcher watcher = new FileWatcher() {
         @Override
         public void onChange(FileChangeEvent event) {
@@ -46,7 +48,7 @@ public void onChange(FileChangeEvent event) {
         
         @Override
         public boolean interest(String context) {
-            return StringUtils.contains(context, "cluster.conf");
+            return StringUtils.contains(context, DEFAULT_SEARCH_SEQ);
         }
     };
     

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.address.constant.AddressServerConstants;
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.naming.core.Instance;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
@@ -86,8 +86,8 @@ public List<Instance> generateInstancesByIps(String serviceName, String rawProdu
     }
     
     private String[] generateIpAndPort(String ip) {
-        String[] result = IPUtil.splitIPPortStr(ip);
-        if (result.length != IPUtil.SPLIT_IP_PORT_RESULT_LENGTH) {
+        String[] result = InternetAddressUtil.splitIPPortStr(ip);
+        if (result.length != InternetAddressUtil.SPLIT_IP_PORT_RESULT_LENGTH) {
             return new String[] {result[0], String.valueOf(AddressServerConstants.DEFAULT_SERVER_PORT)};
         }
         return result;

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.config.utils;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.List;
@@ -190,7 +190,7 @@ public static void checkBetaIps(String betaIps) throws NacosException {
         }
         String[] ipsArr = betaIps.split(",");
         for (String ip : ipsArr) {
-            if (!IPUtil.isIP(ip)) {
+            if (!InternetAddressUtil.isIP(ip)) {
                 throw new NacosException(NacosException.CLIENT_INVALID_PARAM, "betaIps invalid");
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -47,7 +47,7 @@
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.HttpMethod;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.fasterxml.jackson.core.type.TypeReference;
@@ -429,8 +429,8 @@ public String callServer(String api, Map<String, String> params, Map<String, Str
         if (curServer.startsWith(UtilAndComs.HTTPS) || curServer.startsWith(UtilAndComs.HTTP)) {
             url = curServer + api;
         } else {
-            if (!IPUtil.containsPort(curServer)) {
-                curServer = curServer + IPUtil.IP_PORT_SPLITER + serverPort;
+            if (!InternetAddressUtil.containsPort(curServer)) {
+                curServer = curServer + InternetAddressUtil.IP_PORT_SPLITER + serverPort;
             }
             url = NamingHttpClientManager.getInstance().getPrefix() + curServer + api;
         }

File: common/src/main/java/com/alibaba/nacos/common/tls/SelfHostnameVerifier.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.common.tls;
 
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -38,7 +38,7 @@ public final class SelfHostnameVerifier implements HostnameVerifier {
     
     private static ConcurrentHashMap<String, Boolean> hosts = new ConcurrentHashMap<String, Boolean>();
     
-    private static final String[] LOCALHOST_HOSTNAME = new String[] {"localhost", IPUtil.localHostIP()};
+    private static final String[] LOCALHOST_HOSTNAME = new String[] {"localhost", InternetAddressUtil.localHostIP()};
     
     public SelfHostnameVerifier(HostnameVerifier hv) {
         this.hv = hv;
@@ -64,7 +64,7 @@ private static boolean isIP(String host) {
         if (cacheHostVerify != null) {
             return cacheHostVerify;
         }
-        boolean isIp = IPUtil.isIP(host);
+        boolean isIp = InternetAddressUtil.isIP(host);
         hosts.putIfAbsent(host, isIp);
         return isIp;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/SystemConfig.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -41,7 +41,7 @@ private static String getHostAddress() {
         if (StringUtils.isNotEmpty(address)) {
             return address;
         } else {
-            address = IPUtil.localHostIP();
+            address = InternetAddressUtil.localHostIP();
         }
         try {
             Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces();

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -73,7 +73,7 @@ public static Member singleParse(String member) {
         
         String address = member;
         int port = defaultPort;
-        String[] info = IPUtil.splitIPPortStr(address);
+        String[] info = InternetAddressUtil.splitIPPortStr(address);
         if (info.length > 1) {
             address = info[0];
             port = Integer.parseInt(info[1]);

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.ConvertUtils;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import com.alibaba.nacos.consistency.RequestProcessor;
@@ -165,7 +165,7 @@ void init(RaftConfig config) {
         RaftExecutor.init(config);
         
         final String self = config.getSelfMember();
-        String[] info = IPUtil.splitIPPortStr(self);
+        String[] info = InternetAddressUtil.splitIPPortStr(self);
         selfIp = info[0];
         selfPort = Integer.parseInt(info[1]);
         localPeerId = PeerId.parsePeer(self);

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.cluster;
 
 import com.alibaba.nacos.common.notify.NotifyCenter;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
@@ -126,7 +126,7 @@ public synchronized void onReceiveServerStatus(String configInfo) {
                 continue;
             }
     
-            String[] info = IPUtil.splitIPPortStr(params[1]);
+            String[] info = InternetAddressUtil.splitIPPortStr(params[1]);
             Member server = Optional.ofNullable(memberManager.find(params[1]))
                     .orElse(Member.builder().ip(info[0]).state(NodeState.UP)
                             .port(Integer.parseInt(info[1])).build());
@@ -224,7 +224,7 @@ public void run() {
                 }
                 
                 if (allServers.size() > 0 && !EnvUtil.getLocalAddress()
-                        .contains(IPUtil.localHostIP())) {
+                        .contains(InternetAddressUtil.localHostIP())) {
                     for (Member server : allServers) {
                         if (Objects.equals(server.getAddress(), EnvUtil.getLocalAddress())) {
                             continue;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
-import com.alibaba.nacos.common.utils.IPUtil;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.exception.runtime.NacosRuntimeException;
 import com.alibaba.nacos.common.http.Callback;
@@ -25,6 +24,7 @@
 import com.alibaba.nacos.common.notify.EventPublisher;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.DataOperation;
 import com.alibaba.nacos.naming.consistency.Datum;
@@ -1008,8 +1008,8 @@ public boolean isLeader() {
      * @return api url
      */
     public static String buildUrl(String ip, String api) {
-        if (!IPUtil.containsPort(ip)) {
-            ip = ip + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();
+        if (!InternetAddressUtil.containsPort(ip)) {
+            ip = ip + InternetAddressUtil.IP_PORT_SPLITER + EnvUtil.getPort();
         }
         return "http://" + ip + EnvUtil.getContextPath() + api;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
@@ -198,7 +198,7 @@ public ObjectNode getResponsibleServer4Service(
     @GetMapping("/distro/client")
     public ObjectNode getResponsibleServer4Client(@RequestParam String ip, @RequestParam String port) {
         ObjectNode result = JacksonUtils.createEmptyJsonNode();
-        String tag = ip + IPUtil.IP_PORT_SPLITER + port;
+        String tag = ip + InternetAddressUtil.IP_PORT_SPLITER + port;
         result.put("responsibleServer", distroMapper.mapSrv(tag));
         return result;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/HealthOperatorV2Impl.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckType;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
@@ -72,7 +72,7 @@ public void updateHealthStatusForPersistentInstance(String namespace, String ful
         if (!HealthCheckType.NONE.name().equals(clusterMetadata.getHealthyCheckType())) {
             throwHealthCheckerException(fullServiceName, clusterName);
         }
-        String clientId = IpPortBasedClient.getClientId(ip + IPUtil.IP_PORT_SPLITER + port, false);
+        String clientId = IpPortBasedClient.getClientId(ip + InternetAddressUtil.IP_PORT_SPLITER + port, false);
         Client client = clientManager.getClient(clientId);
         if (null == client) {
             return;

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.common.utils.ConvertUtils;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
@@ -207,7 +207,7 @@ private Instance getInstance0(Service service, String cluster, String ip, int po
     public int handleBeat(String namespaceId, String serviceName, String ip, int port, String cluster,
             RsInfo clientBeat) throws NacosException {
         Service service = getService(namespaceId, serviceName, true);
-        String clientId = IpPortBasedClient.getClientId(ip + IPUtil.IP_PORT_SPLITER + port, true);
+        String clientId = IpPortBasedClient.getClientId(ip + InternetAddressUtil.IP_PORT_SPLITER + port, true);
         IpPortBasedClient client = (IpPortBasedClient) clientManager.getClient(clientId);
         if (null == client || !client.getAllPublishedService().contains(service)) {
             if (null == clientBeat) {
@@ -251,7 +251,7 @@ public long getHeartBeatInterval(String namespaceId, String serviceName, String
                 .containsKey(PreservedMetadataKeys.HEART_BEAT_INTERVAL)) {
             return ConvertUtils.toLong(metadata.get().getExtendData().get(PreservedMetadataKeys.HEART_BEAT_INTERVAL));
         }
-        String clientId = IpPortBasedClient.getClientId(ip + IPUtil.IP_PORT_SPLITER + port, true);
+        String clientId = IpPortBasedClient.getClientId(ip + InternetAddressUtil.IP_PORT_SPLITER + port, true);
         Client client = clientManager.getClient(clientId);
         InstancePublishInfo instance = null != client ? client.getInstancePublishInfo(service) : null;
         if (null != instance && instance.getExtendDatum().containsKey(PreservedMetadataKeys.HEART_BEAT_INTERVAL)) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.Objects;
 import com.alibaba.nacos.core.cluster.Member;
@@ -960,8 +960,8 @@ public int getPagedService(String namespaceId, int startPage, int pageSize, Stri
                 contained = false;
                 List<Instance> instances = service.allIPs();
                 for (Instance instance : instances) {
-                    if (IPUtil.containsPort(containedInstance)) {
-                        if (StringUtils.equals(instance.getIp() + IPUtil.IP_PORT_SPLITER + instance.getPort(),
+                    if (InternetAddressUtil.containsPort(containedInstance)) {
+                        if (StringUtils.equals(instance.getIp() + InternetAddressUtil.IP_PORT_SPLITER + instance.getPort(),
                                 containedInstance)) {
                             contained = true;
                             break;

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/pojo/InstancePublishInfo.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.core.v2.pojo;
 
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 
 import java.io.Serializable;
 import java.util.HashMap;
@@ -119,6 +119,6 @@ public String toString() {
     }
     
     public static String genMetadataId(String ip, int port, String cluster) {
-        return ip + IPUtil.IP_PORT_SPLITER + port + IPUtil.IP_PORT_SPLITER + cluster;
+        return ip + InternetAddressUtil.IP_PORT_SPLITER + port + InternetAddressUtil.IP_PORT_SPLITER + cluster;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
@@ -142,7 +142,7 @@ private void deleteIp(Instance instance) {
                     .appendParam("ephemeral", "true").appendParam("clusterName", instance.getClusterName())
                     .appendParam("serviceName", service.getName()).appendParam("namespaceId", service.getNamespaceId());
             
-            String url = "http://" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort() + EnvUtil
+            String url = "http://" + InternetAddressUtil.localHostIP() + InternetAddressUtil.IP_PORT_SPLITER + EnvUtil.getPort() + EnvUtil
                     .getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance?" + request.toUrl();
             
             // delete instance asynchronously:

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NetUtils.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
 
@@ -33,7 +33,7 @@ public class NetUtils {
      * @return local server address
      */
     public static String localServer() {
-        return InetUtils.getSelfIP() + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();
+        return InetUtils.getSelfIP() + InternetAddressUtil.IP_PORT_SPLITER + EnvUtil.getPort();
     }
     
 }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.common.utils.IPUtil;
-import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.util.StringUtils;
 
 import java.util.HashMap;
@@ -46,7 +46,7 @@ public void send(final String serverIP, Message msg) {
         String url = "http://" + serverIP + ":" + EnvUtil.getPort() + EnvUtil.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/operator/server/status";
         
-        if (IPUtil.containsPort(serverIP)) {
+        if (InternetAddressUtil.containsPort(serverIP)) {
             url = "http://" + serverIP + EnvUtil.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT
                     + "/operator/server/status";
         }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -16,9 +16,9 @@
 
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.common.utils.IPUtil;
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.lang3.StringUtils;
@@ -47,7 +47,7 @@ public void send(final String serverIP, Message msg) {
         String url = "http://" + serverIP + ":" + EnvUtil.getPort() + EnvUtil.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/service/status";
         
-        if (IPUtil.containsPort(serverIP)) {
+        if (InternetAddressUtil.containsPort(serverIP)) {
             url = "http://" + serverIP + EnvUtil.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT
                     + "/service/status";
         }

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroIpPortTagGenerator.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.web;
 
 import com.alibaba.nacos.api.exception.runtime.NacosDeserializationException;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.utils.ReuseHttpServletRequest;
@@ -56,6 +56,6 @@ public String getResponsibleTag(ReuseHttpServletRequest request) {
             ip = ip.trim();
         }
         port = StringUtils.isBlank(port) ? "0" : port.trim();
-        return ip + IPUtil.IP_PORT_SPLITER + port;
+        return ip + InternetAddressUtil.IP_PORT_SPLITER + port;
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ClientBeatCheckTaskV2Test.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.healthcheck.heartbeat;
 
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
-import com.alibaba.nacos.common.utils.IPUtil;
+import com.alibaba.nacos.common.utils.InternetAddressUtil;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
@@ -51,7 +51,7 @@ public class ClientBeatCheckTaskV2Test {
     
     private static final int PORT = 10000;
     
-    private static final String CLIENT_ID = IP + IPUtil.IP_PORT_SPLITER + PORT + "#true";
+    private static final String CLIENT_ID = IP + InternetAddressUtil.IP_PORT_SPLITER + PORT + "#true";
     
     private static final String SERVICE_NAME = "service";
     
@@ -149,7 +149,7 @@ public void testRunHealthyInstanceWithTimeoutFromMetadata() throws InterruptedEx
         InstanceMetadata metadata = new InstanceMetadata();
         metadata.getExtendData().put(PreservedMetadataKeys.HEART_BEAT_TIMEOUT, 500L);
         String address =
-                IP + IPUtil.IP_PORT_SPLITER + PORT + IPUtil.IP_PORT_SPLITER + UtilsAndCommons.DEFAULT_CLUSTER_NAME;
+                IP + InternetAddressUtil.IP_PORT_SPLITER + PORT + InternetAddressUtil.IP_PORT_SPLITER + UtilsAndCommons.DEFAULT_CLUSTER_NAME;
         when(namingMetadataManager.getInstanceMetadata(service, address)).thenReturn(Optional.of(metadata));
         when(globalConfig.isExpireInstance()).thenReturn(true);
         TimeUnit.SECONDS.sleep(1);

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -131,7 +131,7 @@ public static void onSuccess(final ServerMemberManager manager, final Member mem
         member.setState(NodeState.UP);
         member.setFailAccessCnt(0);
         if (!Objects.equals(old, member.getState())) {
-            manager.notifyMemberChange();
+            manager.notifyMemberChange(member);
         }
     }
     
@@ -160,7 +160,7 @@ public static void onFail(final ServerMemberManager manager, final Member member
             member.setState(NodeState.DOWN);
         }
         if (!Objects.equals(old, member.getState())) {
-            manager.notifyMemberChange();
+            manager.notifyMemberChange(member);
         }
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckReactor.java
Patch:
@@ -69,7 +69,7 @@ public static void scheduleCheck(BeatCheckTask task) {
                 task instanceof NacosHealthCheckTask ? new HealthCheckTaskInterceptWrapper((NacosHealthCheckTask) task)
                         : task;
         futureMap.computeIfAbsent(task.taskKey(),
-                k -> GlobalExecutor.scheduleNamingHealth(task, 5000, 5000, TimeUnit.MILLISECONDS));
+                k -> GlobalExecutor.scheduleNamingHealth(wrapperTask, 5000, 5000, TimeUnit.MILLISECONDS));
     }
     
     /**

File: console/src/main/java/com/alibaba/nacos/console/controller/PermissionController.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
-import com.alibaba.nacos.common.model.RestResult;
+import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import org.apache.commons.lang3.StringUtils;
@@ -70,7 +70,7 @@ public Object getPermissions(@RequestParam int pageNo, @RequestParam int pageSiz
     @Secured(resource = NacosAuthConfig.CONSOLE_RESOURCE_NAME_PREFIX + "permissions", action = ActionTypes.WRITE)
     public Object addPermission(@RequestParam String role, @RequestParam String resource, @RequestParam String action) {
         nacosRoleService.addPermission(role, resource, action);
-        return new RestResult<>(200, "add permission ok!");
+        return RestResultUtils.success("add permission ok!");
     }
     
     /**
@@ -86,6 +86,6 @@ public Object addPermission(@RequestParam String role, @RequestParam String reso
     public Object deletePermission(@RequestParam String role, @RequestParam String resource,
             @RequestParam String action) {
         nacosRoleService.deletePermission(role, resource, action);
-        return new RestResult<>(200, "delete permission ok!");
+        return RestResultUtils.success("delete permission ok!");
     }
 }

File: console/src/main/java/com/alibaba/nacos/console/controller/RoleController.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
-import com.alibaba.nacos.common.model.RestResult;
+import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import org.apache.commons.lang3.StringUtils;
@@ -85,7 +85,7 @@ public List<String> searchRoles(@RequestParam String role) {
     @Secured(resource = NacosAuthConfig.CONSOLE_RESOURCE_NAME_PREFIX + "roles", action = ActionTypes.WRITE)
     public Object addRole(@RequestParam String role, @RequestParam String username) {
         roleService.addRole(role, username);
-        return new RestResult<>(200, "add role ok!");
+        return RestResultUtils.success("add role ok!");
     }
     
     /**
@@ -104,7 +104,7 @@ public Object deleteRole(@RequestParam String role,
         } else {
             roleService.deleteRole(role, username);
         }
-        return new RestResult<>(200, "delete role of user " + username + " ok!");
+        return RestResultUtils.success("delete role of user " + username + " ok!");
     }
     
 }

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -41,8 +41,8 @@ public class ServerStateController {
      * @return state json.
      */
     @GetMapping("/state")
-    public ResponseEntity serverState() {
-        Map<String, String> serverState = new HashMap<>(3);
+    public ResponseEntity<Map<String, String>> serverState() {
+        Map<String, String> serverState = new HashMap<>(4);
         serverState.put("standalone_mode",
                 EnvUtil.getStandaloneMode() ? EnvUtil.STANDALONE_MODE_ALONE : EnvUtil.STANDALONE_MODE_CLUSTER);
         

File: console/src/main/java/com/alibaba/nacos/console/model/Namespace.java
Patch:
@@ -32,7 +32,7 @@ public class Namespace {
     private int configCount;
     
     /**
-     * 0 : Global configuration， 1 : Default private namespace ，2 : Custom namespace.
+     * see {@link com.alibaba.nacos.console.enums.NamespaceTypeEnum}.
      */
     private int type;
     

File: console/src/main/java/com/alibaba/nacos/console/filter/JwtAuthenticationTokenFilter.java
Patch:
@@ -65,7 +65,7 @@ protected void doFilterInternal(HttpServletRequest request, HttpServletResponse
     private String resolveToken(HttpServletRequest request) {
         String bearerToken = request.getHeader(NacosAuthConfig.AUTHORIZATION_HEADER);
         if (StringUtils.isNotBlank(bearerToken) && bearerToken.startsWith(TOKEN_PREFIX)) {
-            return bearerToken.substring(7);
+            return bearerToken.substring(TOKEN_PREFIX.length());
         }
         String jwt = request.getParameter(Constants.ACCESS_TOKEN);
         if (StringUtils.isNotBlank(jwt)) {

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/PerformanceLoggerThread.java
Patch:
@@ -155,7 +155,7 @@ private void printDistroMonitor() {
                 v2VerifyFail = v2Record.get().getFailedVerifyCount();
             }
             Loggers.PERFORMANCE_LOG
-                    .info("DISTRO:|{}}|{}}|{}}|{}}|{}}|", v1SyncDone, v1SyncFail, v2SyncDone, v2SyncFail, v2VerifyFail);
+                    .info("DISTRO:|{}|{}|{}|{}|{}|", v1SyncDone, v1SyncFail, v2SyncDone, v2SyncFail, v2VerifyFail);
         }
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadataProcessor.java
Patch:
@@ -172,7 +172,7 @@ private ServiceMetadata mergeMetadata(ServiceMetadata oldMetadata, ServiceMetada
     private void deleteServiceMetadata(MetadataOperation<ServiceMetadata> op) {
         Service service = Service.newService(op.getNamespace(), op.getGroup(), op.getServiceName());
         namingMetadataManager.removeServiceMetadata(service);
-        ServiceManager.getInstance().removeSingleton(service);
+        service = ServiceManager.getInstance().removeSingleton(service);
         serviceStorage.removeData(service);
         doubleWriteMetadata(service, true);
     }

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java
Patch:
@@ -103,7 +103,7 @@ public String generateResponseIps(List<Instance> instanceList) {
         
         StringBuilder ips = new StringBuilder();
         instanceList.forEach(instance -> {
-            ips.append(instance.getIp() + ":" + instance.getPort());
+            ips.append(instance.getIp()).append(":").append(instance.getPort());
             ips.append("\n");
         });
         
@@ -118,7 +118,7 @@ public String generateResponseIps(List<Instance> instanceList) {
      */
     public String generateNacosServiceName(String rawServiceName) {
         
-        if (rawServiceName.indexOf(Constants.DEFAULT_GROUP) != -1) {
+        if (rawServiceName.contains(Constants.DEFAULT_GROUP)) {
             return rawServiceName;
         }
         

File: address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java
Patch:
@@ -52,7 +52,7 @@ public class ServerListController {
      * @return result of get
      */
     @RequestMapping(value = "/{product}/{cluster}", method = RequestMethod.GET)
-    public ResponseEntity getCluster(@PathVariable String product, @PathVariable String cluster) {
+    public ResponseEntity<String> getCluster(@PathVariable String product, @PathVariable String cluster) {
         
         String productName = addressServerBuilderManager.generateProductName(product);
         String serviceName = addressServerBuilderManager.generateNacosServiceName(productName);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -53,7 +53,7 @@
  * @author nkorange
  */
 @RestController
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/catalog")
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_CATALOG_CONTEXT)
 public class CatalogController {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -45,7 +45,7 @@
  * @author nkorange
  */
 @RestController
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/cluster")
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_CLUSTER_CONTEXT)
 public class ClusterController {
     
     private final UpgradeJudgement upgradeJudgement;
@@ -88,7 +88,7 @@ public String update(HttpServletRequest request) throws Exception {
         judgeClusterOperator().updateClusterMetadata(namespaceId, serviceName, clusterName, clusterMetadata);
         return "ok";
     }
- 
+    
     private ClusterOperator judgeClusterOperator() {
         return upgradeJudgement.isUseGrpcFeatures() ? clusterOperatorV2 : clusterOperatorV1;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -49,7 +49,7 @@
  * @since 1.0.0
  */
 @RestController
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/distro")
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_PARTITION_CONTEXT)
 public class DistroController {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -63,7 +63,7 @@
  * @since 0.8.0
  */
 @RestController("namingHealthController")
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/health")
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_HEALTH_CONTEXT)
 public class HealthController {
     
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -57,7 +57,8 @@
  * @author nkorange
  */
 @RestController
-@RequestMapping({UtilsAndCommons.NACOS_NAMING_CONTEXT + "/operator", UtilsAndCommons.NACOS_NAMING_CONTEXT + "/ops"})
+@RequestMapping({UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_OPERATOR_CONTEXT,
+        UtilsAndCommons.NACOS_NAMING_CONTEXT + "/ops"})
 public class OperatorController {
     
     private final SwitchManager switchManager;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -63,8 +63,9 @@
  */
 @Deprecated
 @RestController
-@RequestMapping({UtilsAndCommons.NACOS_NAMING_CONTEXT + "/raft",
-        UtilsAndCommons.NACOS_SERVER_CONTEXT + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/raft"})
+@RequestMapping({UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_RAFT_CONTEXT,
+        UtilsAndCommons.NACOS_SERVER_CONTEXT + UtilsAndCommons.NACOS_NAMING_CONTEXT
+                + UtilsAndCommons.NACOS_NAMING_RAFT_CONTEXT})
 public class RaftController {
     
     private final RaftConsistencyServiceImpl raftConsistencyService;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -69,7 +69,7 @@
  * @author nkorange
  */
 @RestController
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/service")
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_SERVICE_CONTEXT)
 public class ServiceController {
     
     @Autowired

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigRequest.java
Patch:
@@ -70,8 +70,8 @@ public void setContent(String content) {
         param.put(CONTENT, content);
     }
     
-    public void getType() {
-        param.get("type");
+    public String getType() {
+        return (String) param.get("type");
     }
     
     public void setType(String type) {

File: client/src/test/java/com/alibaba/nacos/client/config/filter/impl/ConfigRequestTest.java
Patch:
@@ -41,8 +41,7 @@ public void testGetterAndSetter() {
         Assert.assertEquals(group, configRequest.getGroup());
         Assert.assertEquals(tenant, configRequest.getTenant());
         Assert.assertEquals(content, configRequest.getContent());
-        //TODO fix getType
-        //Assert.assertEquals(type, configRequest.getType());
+        Assert.assertEquals(type, configRequest.getType());
         
     }
     
@@ -71,4 +70,4 @@ public void testGetConfigContext() {
         IConfigContext configContext = configRequest.getConfigContext();
         Assert.assertNotNull(configContext);
     }
-}
\ No newline at end of file
+}

File: config/src/main/java/com/alibaba/nacos/config/server/utils/AccumulateStatCount.java
Patch:
@@ -36,7 +36,7 @@ public long increase() {
     /**
      * accumulate stat.
      *
-     * @return
+     * @return stat.
      */
     public long stat() {
         long tmp = total.get() - lastStatValue;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DiskUtil.java
Patch:
@@ -105,7 +105,7 @@ public static void removeHeartHeat() {
      * Returns the path of the server cache file.
      */
     public static File targetFile(String dataId, String group, String tenant) {
-        File file = null;
+        File file;
         if (StringUtils.isBlank(tenant)) {
             file = new File(EnvUtil.getNacosHome(), BASE_DIR);
         } else {
@@ -121,7 +121,7 @@ public static File targetFile(String dataId, String group, String tenant) {
      * Returns the path of cache file in server.
      */
     public static File targetBetaFile(String dataId, String group, String tenant) {
-        File file = null;
+        File file;
         if (StringUtils.isBlank(tenant)) {
             file = new File(EnvUtil.getNacosHome(), BETA_DIR);
         } else {
@@ -137,7 +137,7 @@ public static File targetBetaFile(String dataId, String group, String tenant) {
      * Returns the path of the tag cache file in server.
      */
     public static File targetTagFile(String dataId, String group, String tenant, String tag) {
-        File file = null;
+        File file;
         if (StringUtils.isBlank(tenant)) {
             file = new File(EnvUtil.getNacosHome(), TAG_DIR);
         } else {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -261,7 +261,7 @@ private void loadSetting() {
             LOGGER.info("maxHealthCheckFailCount:{}", maxHealthCheckFailCount);
             setMaxContent(Integer.parseInt(EnvUtil.getProperty("maxContent", String.valueOf(maxContent))));
             LOGGER.info("maxContent:{}", maxContent);
-            // 容量管理
+            // capacity management
             setManageCapacity(getBoolean("isManageCapacity", isManageCapacity));
             setCapacityLimitCheck(getBoolean("isCapacityLimitCheck", isCapacityLimitCheck));
             setDefaultClusterQuota(getInt("defaultClusterQuota", defaultClusterQuota));

File: config/src/main/java/com/alibaba/nacos/config/server/utils/Protocol.java
Patch:
@@ -25,10 +25,10 @@
 public class Protocol {
     
     /**
-     * 解析类于2.0.4(major.minor.bug-fix这样的版本为数字)
+     * fix the version number like 2.0.4(fix the version template like major.minor.bug-fix)
      *
      * @param version version
-     * @return
+     * @return version.
      */
     public static int getVersionNumber(String version) {
         if (version == null) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RegexParser.java
Patch:
@@ -34,7 +34,7 @@ public class RegexParser {
      * or numeric are preceded by '\'.
      *
      * @param regex  The expression to be formatted
-     * @return
+     * @return format content.
      */
     public static String regexFormat(String regex) {
         if (regex == null) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/YamlParserUtil.java
Patch:
@@ -49,6 +49,7 @@ public class YamlParserUtil {
     static {
         Representer representer = new Representer() {
             
+            @Override
             protected NodeTuple representJavaBeanProperty(Object javaBean, Property property, Object propertyValue,
                     Tag customTag) {
                 if (propertyValue == null) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -105,7 +105,7 @@ public void init() {
             try {
                 reload();
             } catch (IOException e) {
-                e.printStackTrace();
+                FATAL_LOG.error("[ExternalDataSourceService] dats source reload error", e);
                 throw new RuntimeException(DB_LOAD_ERROR_MSG);
             }
 
@@ -219,7 +219,7 @@ public void run() {
                     masterIndex = index;
                     break;
                 } catch (DataAccessException e) { // read only
-                    e.printStackTrace(); // TODO remove
+                    FATAL_LOG.warn("[master-db] master db access error", e);
                 }
             }
             

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -55,7 +55,7 @@ public boolean process(NacosTask task) {
             if (page != null && page.getPageItems() != null && !page.getPageItems().isEmpty()) {
                 for (ConfigInfoWrapper cf : page.getPageItems()) {
                     long id = cf.getId();
-                    lastMaxId = id > lastMaxId ? id : lastMaxId;
+                    lastMaxId = Math.max(id, lastMaxId);
                     if (cf.getDataId().equals(AggrWhitelist.AGGRIDS_METADATA)) {
                         AggrWhitelist.load(cf.getContent());
                     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifySingleService.java
Patch:
@@ -86,8 +86,7 @@ public void run() {
                 try {
                     ((ScheduledThreadPoolExecutor) executor).schedule(this, 500L, TimeUnit.MILLISECONDS);
                 } catch (Exception e) { // The notification failed, but at the same time, the node was offline
-                    LOGGER.warn("[notify-thread-pool] cluster remove node {}, current thread was tear down.", target,
-                            e);
+                    LOGGER.warn("[notify-thread-pool] cluster remove node {}, current thread was tear down.", target, e);
                 }
             }
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -185,9 +185,8 @@ public SampleResult getCollectSubscribleInfo(String dataId, String group, String
                 }
             }
         }
-        
-        SampleResult sampleResult = mergeSampleResult(sampleResultLst);
-        return sampleResult;
+
+        return mergeSampleResult(sampleResultLst);
     }
     
     public SampleResult getCollectSubscribleInfoByIp(String ip) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -50,7 +50,7 @@ public class SwitchService {
     private static volatile Map<String, String> switches = new HashMap<String, String>();
     
     public static boolean getSwitchBoolean(String key, boolean defaultValue) {
-        boolean rtn = defaultValue;
+        boolean rtn;
         try {
             String value = switches.get(key);
             rtn = value != null ? Boolean.parseBoolean(value) : defaultValue;
@@ -62,7 +62,7 @@ public static boolean getSwitchBoolean(String key, boolean defaultValue) {
     }
     
     public static int getSwitchInteger(String key, int defaultValue) {
-        int rtn = defaultValue;
+        int rtn;
         try {
             String status = switches.get(key);
             rtn = status != null ? Integer.parseInt(status) : defaultValue;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -539,8 +539,6 @@ public Response onApply(WriteRequest log) {
             return Response.newBuilder().setSuccess(false).setErrMsg(e.toString()).build();
         } catch (DataAccessException e) {
             throw new ConsistencyException(e.toString());
-        } catch (Throwable t) {
-            throw t;
         } finally {
             lock.unlock();
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -120,7 +120,7 @@ public CompletableFuture<RestResult<String>> dataImport(File file) {
                 return RestResult.<String>builder()
                         .withCode(BooleanUtils.and(results.toArray(new Boolean[0])) ? 200 : 500).withData("").build();
             } catch (Throwable ex) {
-                LogUtil.DEFAULT_LOG.error("An exception occurred when external data was imported into Derby : {}", ex);
+                LogUtil.DEFAULT_LOG.error("An exception occurred when external data was imported into Derby : ", ex);
                 return RestResultUtils.failed(ex.getMessage());
             }
         });

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -492,7 +492,7 @@ public List<ConfigInfo> removeConfigInfoByIds(final List<Long> ids, final String
             return null;
         }
         ids.removeAll(Collections.singleton(null));
-        List<ConfigInfo> result = tjt.execute(new TransactionCallback<List<ConfigInfo>>() {
+        return tjt.execute(new TransactionCallback<List<ConfigInfo>>() {
             final Timestamp time = new Timestamp(System.currentTimeMillis());
             
             @Override
@@ -514,7 +514,6 @@ public List<ConfigInfo> doInTransaction(TransactionStatus status) {
                 }
             }
         });
-        return result;
     }
     
     @Override

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;

File: core/src/test/java/com/alibaba/nacos/core/distributed/distro/DistroConfigTest.java
Patch:
@@ -34,7 +34,7 @@ public class DistroConfigTest extends TestCase {
     
     @Before
     public void setUp() {
-        distroConfig = new DistroConfig();
+        distroConfig = DistroConfig.getInstance();
     }
     
     @Test
@@ -59,4 +59,4 @@ public void testSetLoadDataRetryDelayMillis() {
         distroConfig.setLoadDataRetryDelayMillis(loadDataRetryDelayMillis);
         assertEquals(loadDataRetryDelayMillis, distroConfig.getLoadDataRetryDelayMillis());
     }
-}
\ No newline at end of file
+}

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -83,6 +83,8 @@ public class Constants {
     
     public static final String GLOBAL_ADMIN = "globalAdmin";
     
+    public static final String USERNAME = "username";
+    
     public static final String TOKEN_REFRESH_WINDOW = "tokenRefreshWindow";
     
     /**

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -119,7 +119,7 @@ void openEventHandler() {
                 UPDATER.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
             }
         } catch (Throwable ex) {
-            LOGGER.error("Event listener exception : {}", ex);
+            LOGGER.error("Event listener exception : ", ex);
         }
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.auth.model.User;
 import org.apache.commons.lang3.StringUtils;
 
@@ -90,7 +91,8 @@ public static User getUser(HttpServletRequest request) {
      */
     public static String getSrcUserName(HttpServletRequest request) {
         User user = getUser(request);
-        return user == null ? null : user.getUserName();
+        // If auth is disabled, get username from parameters by agreed key
+        return user == null ? request.getParameter(Constants.USERNAME) : user.getUserName();
     }
     
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -312,6 +312,8 @@ public void destroy() throws Exception {
             entry.getValue().destroy();
         }
         HealthCheckReactor.cancelCheck(clientBeatCheckTask);
+        ApplicationUtils.getBean(DoubleWriteEventListener.class)
+                .doubleWriteMetadataToV2(this, this.allIPs(false).isEmpty(), true);
     }
     
     /**
@@ -525,7 +527,7 @@ public void update(Service vDom) {
         
         recalculateChecksum();
         ApplicationUtils.getBean(DoubleWriteEventListener.class)
-                .doubleWriteMetadataToV2(this, vDom.allIPs(false).isEmpty());
+                .doubleWriteMetadataToV2(this, vDom.allIPs(false).isEmpty(), false);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/DoubleWriteMetadataChangeToV2Task.java
Patch:
@@ -65,7 +65,7 @@ public void run() {
             }
         } catch (Exception e) {
             if (Loggers.SRV_LOG.isDebugEnabled()) {
-                Loggers.SRV_LOG.debug("Double write task for {} metadata from 2 to 1 failed", service, e);
+                Loggers.SRV_LOG.debug("Double write task for {} metadata from 1 to 2 failed", service, e);
             }
             ServiceChangeV1Task retryTask = new ServiceChangeV1Task(service.getNamespace(),
                     service.getGroupedServiceName(), service.isEphemeral(), DoubleWriteContent.METADATA);

File: test/src/test/java/com/alibaba/nacos/test/core/JacksonUtils.java
Patch:
@@ -20,6 +20,7 @@
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 import org.junit.Test;
 
 import java.io.IOException;
@@ -37,6 +38,7 @@ public class JacksonUtils {
 
 	static {
 		mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
+		mapper.registerModule(new JavaTimeModule());
 	}
 
 	public static String serializeObject(Object o) throws IOException {

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceOperatorV1Impl.java
Patch:
@@ -61,6 +61,7 @@ public void create(String namespaceId, String serviceName, ServiceMetadata metad
         service.setMetadata(metadata.getExtendData());
         service.setSelector(metadata.getSelector());
         service.setNamespaceId(namespaceId);
+        service.setGroupName(NamingUtils.getGroupName(serviceName));
         
         // now valid the service. if failed, exception will be thrown
         service.setLastModifiedMillis(System.currentTimeMillis());

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/delay/ServiceChangeV1Task.java
Patch:
@@ -151,7 +151,7 @@ private void dispatchInstanceTask(Service service, boolean ephemeral) {
         
         private com.alibaba.nacos.naming.core.v2.pojo.Service transfer(Service service, boolean ephemeral) {
             return com.alibaba.nacos.naming.core.v2.pojo.Service
-                    .newService(service.getNamespaceId(), service.getGroupName(),
+                    .newService(service.getNamespaceId(), NamingUtils.getGroupName(service.getName()),
                             NamingUtils.getServiceName(service.getName()), ephemeral);
         }
         

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/execute/AsyncServicesCheckTask.java
Patch:
@@ -71,7 +71,7 @@ private void checkService(String namespace, String fullServiceName, Service serv
         if (upgradeJudgement.isUseGrpcFeatures()) {
             return;
         }
-        String groupName = serviceV1.getGroupName();
+        String groupName = NamingUtils.getGroupName(serviceV1.getName());
         String serviceName = NamingUtils.getServiceName(fullServiceName);
         com.alibaba.nacos.naming.core.v2.pojo.Service serviceV2 = com.alibaba.nacos.naming.core.v2.pojo.Service
                 .newService(namespace, groupName, serviceName);

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -83,6 +83,8 @@ public class Constants {
     
     public static final String GLOBAL_ADMIN = "globalAdmin";
     
+    public static final String USERNAME = "username";
+    
     public static final String TOKEN_REFRESH_WINDOW = "tokenRefreshWindow";
     
     /**

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.auth.model.User;
 import org.apache.commons.lang3.StringUtils;
 
@@ -90,7 +91,8 @@ public static User getUser(HttpServletRequest request) {
      */
     public static String getSrcUserName(HttpServletRequest request) {
         User user = getUser(request);
-        return user == null ? null : user.getUserName();
+        // If auth is disabled, get username from parameters by agreed key
+        return user == null ? request.getParameter(Constants.USERNAME) : user.getUserName();
     }
     
 }

File: console/src/main/java/com/alibaba/nacos/console/controller/UserController.java
Patch:
@@ -213,6 +213,7 @@ public Object login(@RequestParam String username, @RequestParam String password
             result.put(Constants.ACCESS_TOKEN, user.getToken());
             result.put(Constants.TOKEN_TTL, authConfigs.getTokenValidityInSeconds());
             result.put(Constants.GLOBAL_ADMIN, user.isGlobalAdmin());
+            result.put(Constants.USERNAME, user.getUserName());
             return result;
         }
         

File: naming/src/test/java/com/alibaba/nacos/naming/core/DomainsManagerTest.java
Patch:
@@ -57,7 +57,7 @@ public void searchDom() {
         service.setNamespaceId(TEST_NAMESPACE);
         manager.putService(service);
         
-        List<Service> list = manager.searchServices(TEST_NAMESPACE, "test.*");
+        List<Service> list = manager.searchServices(TEST_NAMESPACE, ".*test.*");
         Assert.assertNotNull(list);
         Assert.assertEquals(1, list.size());
         Assert.assertEquals(TEST_SERVICE_NAME, list.get(0).getName());

File: naming/src/test/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTaskTest.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.misc.GlobalConfig;
+import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.push.PushService;
 import org.junit.Assert;
 import org.junit.Before;
@@ -60,6 +61,8 @@ public class ClientBeatCheckTaskTest {
     @Before
     public void init() {
         ReflectionTestUtils.setField(clientBeatCheckTask, "service", serviceSpy);
+        SwitchDomain switchDomain = new SwitchDomain();
+        Mockito.doReturn(switchDomain).when(clientBeatCheckTask).getSwitchDomain();
         Mockito.doReturn(distroMapperSpy).when(clientBeatCheckTask).getDistroMapper();
         Mockito.doReturn(globalConfig).when(clientBeatCheckTask).getGlobalConfig();
         Mockito.doReturn(pushService).when(clientBeatCheckTask).getPushService();

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -85,6 +85,7 @@ public synchronized void start() {
         }
     }
     
+    @Override
     public long currentEventSize() {
         return queue.size();
     }
@@ -118,7 +119,7 @@ void openEventHandler() {
                 UPDATER.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
             }
         } catch (Throwable ex) {
-            LOGGER.error("Event listener exception : {}", ex);
+            LOGGER.error("Event listener exception : ", ex);
         }
     }
     
@@ -207,7 +208,7 @@ public void run() {
             try {
                 job.run();
             } catch (Throwable e) {
-                LOGGER.error("Event callback exception : {}", e);
+                LOGGER.error("Event callback exception : ", e);
             }
         }
     }

File: client/src/test/java/com/alibaba/nacos/client/naming/beat/BeatReactorTest.java
Patch:
@@ -28,6 +28,7 @@
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.mockito.Mockito;
 
@@ -38,6 +39,7 @@
 import java.util.concurrent.ScheduledThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
+@Ignore("Nacos 2.0 do not need heart beat")
 public class BeatReactorTest {
     
     @Test
@@ -310,4 +312,4 @@ public void testNotFoundFromResponse() throws JsonProcessingException, NacosExce
                         instance);
     }
     
-}
\ No newline at end of file
+}

File: sys/src/main/java/com/alibaba/nacos/sys/utils/DiskUtils.java
Patch:
@@ -490,7 +490,7 @@ public String nextLine() {
         }
         
         @Override
-        public void close() {
+        public void close() throws IOException {
             target.close();
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -406,7 +406,7 @@ public CompletableFuture<RestResult<String>> dataImport(File file) {
                 }
                 return RestResultUtils.success();
             } catch (Throwable ex) {
-                LogUtil.DEFAULT_LOG.error("data import has error : {}", ex);
+                LogUtil.DEFAULT_LOG.error("data import has error :", ex);
                 return RestResultUtils.failed(ex.getMessage());
             }
         });

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IFilterConfig.java
Patch:
@@ -21,6 +21,7 @@
  *
  * @author Nacos
  */
+@Deprecated
 public interface IFilterConfig {
     
     /**

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -73,7 +73,7 @@ public static String getSnapshot(String name, String dataId, String group, Strin
         }
     }
     
-    private static String readFile(File file) throws IOException {
+    protected static String readFile(File file) throws IOException {
         if (!file.exists() || !file.isFile()) {
             return null;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroHttpRegistry.java
Patch:
@@ -73,7 +73,7 @@ public void doRegister() {
                 new DistroDataStorageImpl(dataStore, distroMapper));
         componentHolder.registerTransportAgent(KeyBuilder.INSTANCE_LIST_KEY_PREFIX, new DistroHttpAgent(memberManager));
         componentHolder.registerFailedTaskHandler(KeyBuilder.INSTANCE_LIST_KEY_PREFIX,
-                new DistroHttpCombinedKeyTaskFailedHandler(globalConfig, taskEngineHolder));
+                new DistroHttpCombinedKeyTaskFailedHandler(taskEngineHolder));
         taskEngineHolder.registerNacosTaskProcessor(KeyBuilder.INSTANCE_LIST_KEY_PREFIX,
                 new DistroHttpDelayTaskProcessor(globalConfig, taskEngineHolder));
         componentHolder.registerDataProcessor(consistencyService);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/combined/DistroHttpCombinedKeyExecuteTask.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
 import com.alibaba.nacos.consistency.DataOperation;
+import com.alibaba.nacos.core.distributed.distro.DistroConfig;
 import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 import com.alibaba.nacos.core.distributed.distro.task.delay.DistroDelayTaskExecuteEngine;
 import com.alibaba.nacos.naming.misc.GlobalConfig;
@@ -57,7 +58,7 @@ public void run() {
             DistroKey newKey = new DistroKey(DistroHttpCombinedKey.getSequenceKey(),
                     DistroHttpCombinedKeyDelayTask.class.getSimpleName(), singleDistroKey.getTargetServer());
             DistroHttpCombinedKeyDelayTask combinedTask = new DistroHttpCombinedKeyDelayTask(newKey, taskAction,
-                    globalConfig.getTaskDispatchPeriod() / 2, globalConfig.getBatchSyncKeyCount());
+                    DistroConfig.getInstance().getSyncDelayMillis(), globalConfig.getBatchSyncKeyCount());
             combinedTask.getActualResourceKeys().add(singleDistroKey.getResourceKey());
             distroDelayTaskExecuteEngine.addTask(newKey, combinedTask);
         } catch (Exception e) {

File: test/src/test/java/com/alibaba/nacos/test/common/HttpUtils_ITCase.java
Patch:
@@ -53,7 +53,9 @@ public void test_deserialization_type() throws Exception {
 	public void test_rest_result() throws Exception {
 		String json = "{\"code\":200,\"message\":null,\"data\":[{\"USERNAME\":\"nacos\",\"PASSWORD\":\"$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu\",\"ENABLED\":true}]}";
 		RestResult<Object> result = ResponseHandler.convert(json, new GenericType<RestResult<Object>>(){}.getType());
-		System.out.println(result);
+		Assert.assertEquals(200, result.getCode());
+		Assert.assertNull(result.getMessage());
+		Assert.assertNotNull(result.getData());
 	}
 
 	@Test

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -114,7 +114,8 @@ public boolean login(List<String> servers) {
                     return true;
                 }
             }
-        } catch (Throwable ignore) {
+        } catch (Throwable throwable) {
+            SECURITY_LOGGER.warn("[SecurityProxy] login failed, error: ", throwable);
         }
         
         return false;

File: test/config-test/src/test/java/com/alibaba/nacos/test/base/ConfigCleanUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ * Copyright 1999-2020 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.test.config;
+package com.alibaba.nacos.test.base;
 
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
 import com.alibaba.nacos.sys.utils.DiskUtils;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_CITCase.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.test.config;
 
 import com.alibaba.nacos.Nacos;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.runner.RunWith;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_With_RootContextPath_CITCase.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.sys.env.EnvUtil;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.runner.RunWith;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_CITCase.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -33,8 +33,9 @@
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftConstants;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import com.alibaba.nacos.test.core.BaseClusterTest;
 
+import com.alibaba.nacos.test.base.BaseClusterTest;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.FixMethodOrder;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_CITCase.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import com.fasterxml.jackson.databind.JsonNode;
 import com.github.keran213539.commonOkHttp.CommonOkHttpClient;
 import com.github.keran213539.commonOkHttp.CommonOkHttpClientBuilder;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_CITCase.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.api.config.PropertyChangeType;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.After;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_CITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.config.ConfigService;
 import com.alibaba.nacos.api.config.listener.Listener;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.After;
 import org.junit.AfterClass;
 import org.junit.Before;

File: test/config-test/src/test/java/com/alibaba/nacos/test/config/EmbeddedStorageContextUtils_CITCase.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.service.sql.ModifyRequest;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.Assert;
 import org.junit.BeforeClass;

File: test/core-test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -128,7 +128,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
         Assert.assertEquals(content, res);
 
         latch.await(5L, TimeUnit.SECONDS);
-        Assert.assertEquals( 0, latch.getCount());
+        Assert.assertEquals(0, latch.getCount());
     }
 
     @Test

File: test/core-test/src/test/java/com/alibaba/nacos/test/remote/NamingTpsMonitorManagerTest.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.core.remote.control.TpsMonitorPoint;
 import com.alibaba.nacos.core.remote.control.TpsRecorder;
 import org.apache.commons.collections.map.HashedMap;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.Arrays;
@@ -32,6 +33,7 @@
 import java.util.Random;
 import java.util.concurrent.TimeUnit;
 
+@Ignore("It should be Unit test, not IT")
 public class NamingTpsMonitorManagerTest {
     
     static TpsMonitorManager tpsMonitorManager = null;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -274,7 +274,7 @@ public void listService() throws Exception {
             Params.newParams()
                 .appendParam("serviceName", serviceName)
                 .appendParam("pageNo", "1")
-                .appendParam("pageSize", "15")
+                .appendParam("pageSize", "150")
                 .done(),
             String.class);
 

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/InstanceOperate_With_RootContextPath_ITCase.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.test.config.ConfigCleanUtils;
+import com.alibaba.nacos.test.base.ConfigCleanUtils;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Ignore;

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -280,11 +280,11 @@ public void multipleTenant_getServicesOfServer() throws Exception {
         naming1.registerInstance(serviceName, "11.11.11.11", TEST_PORT, "c1");
         TimeUnit.SECONDS.sleep(5L);
 
-        ListView<String> listView = naming1.getServicesOfServer(1, 20);
+        ListView<String> listView = naming1.getServicesOfServer(1, 200);
 
         naming2.registerInstance(serviceName, "33.33.33.33", TEST_PORT, "c1");
         TimeUnit.SECONDS.sleep(5L);
-        ListView<String> listView1 = naming1.getServicesOfServer(1, 20);
+        ListView<String> listView1 = naming1.getServicesOfServer(1, 200);
         Assert.assertEquals(listView.getCount(), listView1.getCount());
     }
 

File: test/naming-test/src/test/java/com/alibaba/nacos/test/naming/NamingRaft_DITCase.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
-import com.alibaba.nacos.test.core.BaseClusterTest;
+import com.alibaba.nacos.test.base.BaseClusterTest;
 import org.junit.Assert;
 import org.junit.FixMethodOrder;
 import org.junit.Ignore;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -78,7 +78,7 @@ public class MultiTenant_InstanceAPI_ITCase {
     
     private URL base;
     
-    private volatile List<Instance> instances = Collections.emptyList();
+    private final List<Instance> instances = Collections.emptyList();
     
     @Before
     public void init() throws Exception {
@@ -415,7 +415,7 @@ public void multipleTenant_group_patchInstance() throws Exception {
                         .appendParam("ip", "22.22.22.22").appendParam("port", "80")
                         .appendParam("namespaceId", "namespace-2").done(), String.class, HttpMethod.PATCH);
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
-    
+        
         TimeUnit.SECONDS.sleep(3L);
         
         response = request("/nacos/v1/ns/instance/list",
@@ -449,7 +449,7 @@ public void multipleTenant_updateInstance_notExsitInstance() throws Exception {
                         .appendParam("port", "8888").appendParam("namespaceId", "namespace-1") //新增
                         .done(), String.class, HttpMethod.POST);
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
-    
+        
         TimeUnit.SECONDS.sleep(5L);
         response = request("/nacos/v1/ns/instance/list",
                 Params.newParams().appendParam("serviceName", serviceName) //获取naming中的实例

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingHttpClientProxy_ITCase.java
Patch:
@@ -30,6 +30,7 @@
 import com.alibaba.nacos.naming.misc.NamingProxy;
 import org.junit.Assert;
 import org.junit.Before;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -46,6 +47,7 @@
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
     webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@Ignore("Http sync will stop for 2.0 server, and will be removed")
 public class NamingHttpClientProxy_ITCase {
     @LocalServerPort
     private int port;

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -160,7 +160,6 @@ private String getConfigInner(String tenant, String dataId, String group, long t
             ConfigResponse response = worker.getServerConfig(dataId, group, tenant, timeoutMs);
             cr.setContent(response.getContent());
             cr.setEncryptedDataKey(response.getEncryptedDataKey());
-            configFilterChainManager.doFilter(null, cr);
             
             configFilterChainManager.doFilter(null, cr);
             content = cr.getContent();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -220,7 +220,7 @@ synchronized void start() {
                 createMultiRaftGroup(processors);
                 Loggers.RAFT.info("========= The raft protocol start finished... =========");
             } catch (Exception e) {
-                Loggers.RAFT.error("raft protocol start failure, error : {}", e);
+                Loggers.RAFT.error("raft protocol start failure, cause: ", e);
                 throw new JRaftException(e);
             }
         }
@@ -412,7 +412,7 @@ synchronized void shutdown() {
             
             Loggers.RAFT.info("========= The raft protocol has been closed =========");
         } catch (Throwable t) {
-            Loggers.RAFT.error("There was an error in the raft protocol shutdown, error : {}", t);
+            Loggers.RAFT.error("There was an error in the raft protocol shutdown, cause: ", t);
         }
     }
     

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java
Patch:
@@ -102,7 +102,7 @@ public static final void initDirectory(String parentPath, String groupName, Node
             DiskUtils.forceMkdir(new File(snapshotUri));
             DiskUtils.forceMkdir(new File(metaDataUri));
         } catch (Exception e) {
-            Loggers.RAFT.error("Init Raft-File dir have some error : {}", e);
+            Loggers.RAFT.error("Init Raft-File dir have some error, cause: ", e);
             throw new RuntimeException(e);
         }
         

File: test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -85,6 +85,8 @@ public void destroy() {
                 HttpMethod.DELETE);
 
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
+    
+        System.setProperty("nacos.core.auth.enabled", "false");
     }
 
 
@@ -296,7 +298,5 @@ public void updateUserWithPermission() {
                 String.class,
                 HttpMethod.PUT);
         Assert.assertEquals(response.getStatusCode(), HttpStatus.FORBIDDEN);
-
-        System.setProperty("nacos.core.auth.enabled", "false");
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -65,6 +65,8 @@ public class Constants {
     
     public static final String CONFIG_TYPE = "Config-Type";
     
+    public static final String ENCRYPTED_DATA_KEY = "Encrypted-Data-Key";
+    
     public static final String IF_MODIFIED_SINCE = "If-Modified-Since";
     
     public static final String SPACING_INTERVAL = "client-spacing-interval";

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IFilterConfig.java
Patch:
@@ -21,6 +21,7 @@
  *
  * @author Nacos
  */
+@Deprecated
 public interface IFilterConfig {
     
     /**

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -73,7 +73,7 @@ public static String getSnapshot(String name, String dataId, String group, Strin
         }
     }
     
-    private static String readFile(File file) throws IOException {
+    protected static String readFile(File file) throws IOException {
         if (!file.exists() || !file.isFile()) {
             return null;
         }

File: core/src/main/java/com/alibaba/nacos/core/remote/BaseRpcServer.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.sys.env.EnvUtil;
 
 import javax.annotation.PostConstruct;
+import javax.annotation.PreDestroy;
 
 /**
  * abstract rpc server .
@@ -103,6 +104,7 @@ public final void stopServer() throws Exception {
     /**
      * the increase offset of nacos server port for rpc server port.
      */
+    @PreDestroy
     public abstract void shutdownServer();
 
 }

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_Interceptors_ITCase.java
Patch:
@@ -120,7 +120,7 @@ public void test_url_post_config() throws Exception {
         HttpRestResult<String> restResult = nacosRestTemplate
                 .postForm(url, Header.newInstance(), param, String.class);
         Assert.assertEquals(500, restResult.getCode());
-        Assert.assertEquals("Stop request", restResult.getData());
+        Assert.assertEquals("Stop request", restResult.getMessage());
         System.out.println(restResult.getData());
         System.out.println(restResult.getHeader());
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_CITCase.java
Patch:
@@ -44,7 +44,7 @@
  * @date 2019-07-03
  **/
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7002"},
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigBeta_CITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyImport_CITCase.java
Patch:
@@ -42,8 +42,8 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos",
-        "server.port=7006"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigDerbyImport_CITCase {
     
     @Autowired

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_CITCase.java
Patch:
@@ -52,7 +52,7 @@
  * @date 2019/5/23 15:26
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7003"},
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigExportAndImportAPI_CITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_CITCase.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.concurrent.TimeUnit;
 
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7005"},
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigLongPollReturnChanges_CITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_CITCase.java
Patch:
@@ -41,7 +41,7 @@
  * @date 2019-06-07 22:24
  **/
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7004"},
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigLongPoll_CITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -177,7 +177,7 @@ public Class<? extends Event> subscribeType() {
         first.await();
         Set<Member> copy = new HashSet<>(firstMemberList);
         copy.removeAll(healthMembers.get());
-        Assert.assertTrue(copy.isEmpty());
+        Assert.assertEquals(2, copy.size());
         
         Member member = map.get(firstIp);
         member.setState(NodeState.DOWN);
@@ -186,7 +186,7 @@ public Class<? extends Event> subscribeType() {
         second.await();
         copy = new HashSet<>(firstMemberList);
         copy.removeAll(healthMembers.get());
-        Assert.assertEquals(1, copy.size());
+        Assert.assertEquals(3, copy.size());
         Assert.assertTrue(copy.contains(map.get(firstIp)));
     }
     

File: common/src/test/java/com/alibaba/nacos/common/utils/IPUtilTest.java
Patch:
@@ -33,6 +33,7 @@ public void testIsIPv4() {
         Assert.assertFalse(IPUtil.isIPv4("[::1]"));
         Assert.assertFalse(IPUtil.isIPv4("asdfasf"));
         Assert.assertFalse(IPUtil.isIPv4("ffgertert"));
+        Assert.assertFalse(IPUtil.isIPv4("127.100.19"));
     }
     
     @Test
@@ -47,6 +48,7 @@ public void testIsIP() {
         Assert.assertTrue(IPUtil.isIP("[::1]"));
         Assert.assertTrue(IPUtil.isIP("127.0.0.1"));
         Assert.assertFalse(IPUtil.isIP("er34234"));
+        Assert.assertFalse(IPUtil.isIP("127.100.19"));
     }
     
     @Test

File: common/src/main/java/com/alibaba/nacos/common/utils/MD5Utils.java
Patch:
@@ -76,7 +76,7 @@ public static String md5Hex(String value, String encode) {
     }
     
     /**
-     * 将一个字节数组转化为可见的字符串.
+     * Convert a byte array into a visible string.
      */
     public static String encodeHexString(byte[] bytes) {
         int l = bytes.length;

File: config/src/main/java/com/alibaba/nacos/config/server/result/code/ResultCodeEnum.java
Patch:
@@ -47,7 +47,7 @@ public enum ResultCodeEnum implements IResultCode {
     
     DATA_EMPTY(100005, "导入的文件数据为空"),
     
-    NO_SELECTED_CONFIG(100006, "没有选择任何配制");
+    NO_SELECTED_CONFIG(100006, "没有选择任何配置");
     
     private int code;
     

File: api/src/main/java/com/alibaba/nacos/api/config/convert/NacosConfigConverter.java
Patch:
@@ -34,7 +34,7 @@ public interface NacosConfigConverter<T> {
     boolean canConvert(Class<T> targetType);
     
     /**
-     * convert the Naocs's config of type S to target type T.
+     * Convert the Nacos' config of type S to target type T.
      *
      * @param config the Naocs's config to convert, which must be an instance of S (never {@code null})
      * @return the converted object, which must be an instance of T (potentially {@code null})

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -66,9 +66,10 @@ public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestM
         String namespaceId = request.getNamespace();
         String serviceName = request.getServiceName();
         String groupName = request.getGroupName();
+        String app = request.getHeader("app", "unknown");
         String groupedServiceName = NamingUtils.getGroupedName(serviceName, groupName);
         Service service = Service.newService(namespaceId, groupName, serviceName, true);
-        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), "unknown",
+        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), app,
                 meta.getClientIp(), namespaceId, groupedServiceName, 0, request.getClusters());
         ServiceInfo serviceInfo = handleClusterData(serviceStorage.getData(service),
                 metadataManager.getServiceMetadata(service).orElse(null),

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -66,10 +66,9 @@ public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestM
         String namespaceId = request.getNamespace();
         String serviceName = request.getServiceName();
         String groupName = request.getGroupName();
-        String app = request.getHeader("app", "unknown");
         String groupedServiceName = NamingUtils.getGroupedName(serviceName, groupName);
         Service service = Service.newService(namespaceId, groupName, serviceName, true);
-        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), app,
+        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), "unknown",
                 meta.getClientIp(), namespaceId, groupedServiceName, 0, request.getClusters());
         ServiceInfo serviceInfo = handleClusterData(serviceStorage.getData(service),
                 metadataManager.getServiceMetadata(service).orElse(null),

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -66,9 +66,10 @@ public SubscribeServiceResponse handle(SubscribeServiceRequest request, RequestM
         String namespaceId = request.getNamespace();
         String serviceName = request.getServiceName();
         String groupName = request.getGroupName();
+        String app = request.getHeader("app", "unknown");
         String groupedServiceName = NamingUtils.getGroupedName(serviceName, groupName);
         Service service = Service.newService(namespaceId, groupName, serviceName, true);
-        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), "unknown",
+        Subscriber subscriber = new Subscriber(meta.getClientIp(), meta.getClientVersion(), app,
                 meta.getClientIp(), namespaceId, groupedServiceName, 0, request.getClusters());
         ServiceInfo serviceInfo = handleClusterData(serviceStorage.getData(service),
                 metadataManager.getServiceMetadata(service).orElse(null),

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -158,7 +158,7 @@ public class Constants {
     
     public static final int NAMING_INSTANCE_ID_SEG_COUNT = 4;
     
-    public static final String NAMING_HTTP_HEADER_SPILIER = "\\|";
+    public static final String NAMING_HTTP_HEADER_SPLITTER = "\\|";
     
     public static final String DEFAULT_CLUSTER_NAME = "DEFAULT";
     

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Http.java
Patch:
@@ -75,7 +75,7 @@ public Map<String, String> getCustomHeaders() {
             return Collections.emptyMap();
         }
         final Map<String, String> headerMap = new HashMap<String, String>(16);
-        for (final String s : headers.split(Constants.NAMING_HTTP_HEADER_SPILIER)) {
+        for (final String s : headers.split(Constants.NAMING_HTTP_HEADER_SPLITTER)) {
             final String[] splits = s.split(":");
             if (splits.length != 2) {
                 continue;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -288,7 +288,7 @@ private String blank2defaultGroup(String group) {
      * Check config info.
      */
     public void checkConfigInfo() {
-        // Dispatch taskes.
+        // Dispatch tasks.
         int listenerSize = cacheMap.size();
         // Round up the longingTaskCount.
         int longingTaskCount = (int) Math.ceil(listenerSize / ParamUtil.getPerTaskConfigSize());
@@ -304,7 +304,7 @@ public void checkConfigInfo() {
     /**
      * Fetch the dataId list from server.
      *
-     * @param cacheDatas              CacheDatas for config infomations.
+     * @param cacheDatas              CacheDatas for config information.
      * @param inInitializingCacheList initial cache lists.
      * @return String include dataId and group (ps: it maybe null).
      * @throws Exception Exception.
@@ -322,7 +322,7 @@ List<String> checkUpdateDataIds(List<CacheData> cacheDatas, List<String> inIniti
                     sb.append(cacheData.getTenant()).append(LINE_SEPARATOR);
                 }
                 if (cacheData.isInitializing()) {
-                    // It updates when cacheData occours in cacheMap by first time.
+                    // It updates when cacheData occurs in cacheMap by first time.
                     inInitializingCacheList
                             .add(GroupKey.getKeyTenant(cacheData.dataId, cacheData.group, cacheData.tenant));
                 }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Chooser.java
Patch:
@@ -118,7 +118,7 @@ public class Ref<T> {
         public Ref(List<Pair<T>> itemsWithWeight) {
             this.itemsWithWeight = itemsWithWeight;
         }
-    
+        
         /**
          * Refresh.
          */
@@ -167,7 +167,7 @@ public void refresh() {
                 return;
             }
             throw new IllegalStateException(
-                    "Cumulative Weight caculate wrong , the sum of probabilities does not equals 1.");
+                    "Cumulative Weight calculate wrong , the sum of probabilities does not equals 1.");
         }
         
         @Override

File: cmdb/src/main/java/com/alibaba/nacos/cmdb/service/CmdbReader.java
Patch:
@@ -52,7 +52,7 @@ public interface CmdbReader {
      *
      * @param labelName  name of label
      * @param labelValue value of label
-     * @return list of entiy
+     * @return list of entity
      */
     List<Entity> queryEntitiesByLabel(String labelName, String labelValue);
 }

File: common/src/main/java/com/alibaba/nacos/common/utils/CollectionUtils.java
Patch:
@@ -191,7 +191,7 @@ public static boolean sizeIsEmpty(Object object) {
      *
      * @param coll   collection
      * @param target target value
-     * @param <T>    Genreal Type
+     * @param <T>    General Type
      * @return true if contain, otherwise false
      */
     public static <T> boolean contains(Collection<T> coll, T target) {
@@ -236,7 +236,7 @@ public static boolean isNotEmpty(Collection coll) {
      * @param defaultValue default value
      * @param <T>          General Type
      * @return the value to which the specified index , or {@code defaultValue} if this collection contains no value for
-     *     the index.
+     * the index.
      */
     public static <T> T getOrDefault(Collection<T> coll, int index, T defaultValue) {
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CapacityController.java
Patch:
@@ -90,7 +90,7 @@ public RestResult<Capacity> getCapacity(HttpServletResponse response, @RequestPa
     }
     
     /**
-     * Modify group or capacity of tenant, and init record when capacity informations are still initial.
+     * Modify group or capacity of tenant, and init record when capacity information are still initial.
      */
     @PostMapping
     public RestResult<Boolean> updateCapacity(HttpServletResponse response,

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  * ConfigInfoBase.
- * And can't add field, to compatible with old interface(If adding a field, then it will occour compatibility problems).
+ * And can't add field, to compatible with old interface(If adding a field, then it will occur compatibility problems).
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBaseEx.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  * ConfigInfoBaseEx.
- * And can't add field, to compatible with old interface(If adding a field, then it will occour compatibility problems).
+ * And can't add field, to compatible with old interface(If adding a field, then it will occur compatibility problems).
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -231,8 +231,8 @@ public static boolean dumpChange(String dataId, String group, String tenant, Str
         try {
             final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             if (!PropertyUtil.isDirectRead()) {
-                String loacalMd5 = DiskUtil.getLocalConfigMd5(dataId, group, tenant);
-                if (md5.equals(loacalMd5)) {
+                String localMd5 = DiskUtil.getLocalConfigMd5(dataId, group, tenant);
+                if (md5.equals(localMd5)) {
                     DUMP_LOG.warn("[dump-ignore] ignore to save cache file. groupKey={}, md5={}, lastModifiedOld={}, "
                                     + "lastModifiedNew={}", groupKey, md5, ConfigCacheService.getLastModifiedTs(groupKey),
                             lastModifiedTs);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -126,7 +126,7 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
      * Get service ips.
      *
      * @param request http request
-     * @return service detail infomation
+     * @return service detail information
      * @throws Exception exception
      */
     @RequestMapping("/srvIPXT")

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -116,7 +116,7 @@ public ObjectNode instanceList(@RequestParam(defaultValue = Constants.DEFAULT_NA
         
         Service service = serviceManager.getService(namespaceId, serviceName);
         if (service == null) {
-            throw new NacosException(NacosException.NOT_FOUND, "serivce " + serviceName + " is not found!");
+            throw new NacosException(NacosException.NOT_FOUND, "service " + serviceName + " is not found!");
         }
         
         if (!service.getClusterMap().containsKey(clusterName)) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -93,7 +93,7 @@ public class UtilsAndCommons {
     
     public static final String SELF_SERVICE_CLUSTER_ENV = "naming_self_service_cluster_ips";
     
-    public static final String CACHE_KEY_SPLITER = "@@@@";
+    public static final String CACHE_KEY_SPLITTER = "@@@@";
     
     public static final int MAX_PUBLISH_WAIT_TIME_MILLIS = 5000;
     

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -362,7 +362,7 @@ private static Receiver.AckEntry prepareAckEntry(PushClient client, byte[] dataB
     }
     
     public static String getPushCacheKey(String serviceName, String clientIP, String agent) {
-        return serviceName + UtilsAndCommons.CACHE_KEY_SPLITER + agent;
+        return serviceName + UtilsAndCommons.CACHE_KEY_SPLITTER + agent;
     }
     
     /**

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_CITCase.java
Patch:
@@ -366,7 +366,7 @@ public void nacos_addListener_1() throws Exception {
         Listener ml = new Listener() {
             @Override
             public void receiveConfigInfo(String configInfo) {
-                System.out.println("recieve23:" + configInfo);
+                System.out.println("receive23:" + configInfo);
                 count.incrementAndGet();
                 Assert.assertEquals(content, configInfo);
             }
@@ -582,7 +582,7 @@ public void receiveConfigInfo(String configInfo) {
             iconfig.removeListener(dataId, group, new AbstractListener() {
                 @Override
                 public void receiveConfigInfo(String configInfo) {
-                    System.out.println("remove recieve:" + configInfo);
+                    System.out.println("remove receive:" + configInfo);
                 }
             });
         } catch (Exception e) {
@@ -633,7 +633,7 @@ public void receiveConfigInfo(String configInfo) {
         Listener ml1 = new AbstractListener() {
             @Override
             public void receiveConfigInfo(String configInfo) {
-                //System.out.println("ml1 remove listener recieve:" + configInfo);
+                //System.out.println("ml1 remove listener receive:" + configInfo);
                 count.incrementAndGet();
                 Assert.assertEquals(contentRemove, configInfo);
             }

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/CollectionTypes.java
Patch:
@@ -23,6 +23,5 @@
  * @since 1.1.4
  */
 public class CollectionTypes {
-    
     public static final String SERVICE_ENTRY = "istio/networking/v1alpha3/serviceentries";
 }

File: istio/src/main/java/com/alibaba/nacos/istio/misc/IstioConfig.java
Patch:
@@ -27,10 +27,10 @@
  */
 @Component
 public class IstioConfig {
-    
+
     @Value("${nacos.istio.mcp.server.enabled:false}")
     private boolean mcpServerEnabled = false;
-    
+
     public boolean isMcpServerEnabled() {
         return mcpServerEnabled;
     }

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -201,7 +201,7 @@ private boolean publishConfigInner(String tenant, String dataId, String group, S
         configFilterChainManager.doFilter(cr, null);
         content = cr.getContent();
         
-        return worker.publishConfig(dataId, group, tenant, appName, tag, betaIps, content, casMd5);
+        return worker.publishConfig(dataId, group, tenant, appName, tag, betaIps, content, casMd5, type);
         
     }
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -316,12 +316,13 @@ public abstract String[] queryConfig(String dataId, String group, String tenat,
      * @param tag     tag.
      * @param betaIps betaIps.
      * @param content content.
-     * @param casMd5 casMd5.
+     * @param casMd5  casMd5.
+     * @param type    type.
      * @return success or not.
      * @throws NacosException throw where publish fail.
      */
     public abstract boolean publishConfig(String dataId, String group, String tenant, String appName, String tag,
-            String betaIps, String content, String casMd5) throws NacosException;
+            String betaIps, String content, String casMd5, String type) throws NacosException;
     
     /**
      * remove config.

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ClientWorkerTest.java
Patch:
@@ -131,7 +131,9 @@ public void testPublishConfig() throws NacosException {
         String betaIps = "1.1.1.1";
         String casMd5 = "1111";
         
-        boolean b = clientWorker.publishConfig(dataId, group, tenant, appName, tag, betaIps, content, casMd5);
+        String type = "properties";
+        
+        boolean b = clientWorker.publishConfig(dataId, group, tenant, appName, tag, betaIps, content, casMd5, type);
         Assert.assertFalse(b);
         try {
             clientWorker.removeConfig(dataId, group, tenant, tag);

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Chooser.java
Patch:
@@ -19,6 +19,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.concurrent.ThreadLocalRandom;
 
 /**
  * Chooser.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -561,7 +561,7 @@ protected void reconnect(final ServerInfo recommendServerInfo, boolean onRequest
             }
             
         } catch (Exception e) {
-            LoggerUtils.printIfWarnEnabled(LOGGER, "[{}] Fail to  re connect to server ,error is ", name, e);
+            LoggerUtils.printIfWarnEnabled(LOGGER, "[{}] Fail to  re connect to server ,error is {}", name, e);
         }
     }
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConnection.java
Patch:
@@ -157,7 +157,7 @@ public void onFailure(Throwable throwable) {
                     requestCallBack.onException(throwable);
                 }
             }
-        }, this.executor);
+        }, requestCallBack.getExecutor() != null ? requestCallBack.getExecutor() : this.executor);
         // set timeout future.
         ListenableFuture<Payload> payloadListenableFuture = Futures
                 .withTimeout(requestFuture, requestCallBack.getTimeout(), TimeUnit.MILLISECONDS,

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -360,8 +360,6 @@ synchronized boolean memberChange(Collection<Member> members) {
                 tmpMap.put(address, existMember);
             }
             
-            // Ensure that the node is created only once
-            tmpMap.put(address, member);
             if (NodeState.UP.equals(member.getState())) {
                 tmpAddressInfo.add(address);
             }

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcClusterServer.java
Patch:
@@ -39,6 +39,9 @@ public int rpcPortOffset() {
     
     @Override
     public ThreadPoolExecutor getRpcExecutor() {
+        if (!GlobalExecutor.clusterRpcExecutor.allowsCoreThreadTimeOut()) {
+            GlobalExecutor.clusterRpcExecutor.allowCoreThreadTimeOut(true);
+        }
         return GlobalExecutor.clusterRpcExecutor;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -106,7 +106,7 @@ private NamingPushCallback(String clientId, Subscriber subscriber, ServiceInfo s
         @Override
         public long getTimeout() {
             // TODO timeout should can be config
-            return 3000L;
+            return 5000L;
         }
         
         @Override

File: naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.LinkedList;
@@ -158,7 +159,7 @@ public static List<String> pageServiceName(int pageNo, int pageSize, Collection<
             start = 0;
         }
         if (start >= result.size()) {
-            return result;
+            return Collections.emptyList();
         }
         int end = start + pageSize;
         if (end > result.size()) {

File: test/src/test/java/com/alibaba/nacos/test/common/NacosAsyncRestTemplate_ITCase.java
Patch:
@@ -48,7 +48,7 @@
 @FixMethodOrder(MethodSorters.JVM)
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class NacosAsyncRestTemplate_ITCase {
     
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_ITCase.java
Patch:
@@ -47,7 +47,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 @FixMethodOrder(MethodSorters.JVM)
 public class NacosRestTemplate_ITCase {
     

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_Interceptors_ITCase.java
Patch:
@@ -51,7 +51,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 @FixMethodOrder(MethodSorters.JVM)
 public class NacosRestTemplate_Interceptors_ITCase {
     

File: test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigAuth_ITCase extends AuthBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -43,7 +43,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class NamingAuth_ITCase extends AuthBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -44,7 +44,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Permission_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -44,7 +44,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Role_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -46,7 +46,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class User_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -25,10 +25,8 @@
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.StandaloneMemberLookup;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import com.alibaba.nacos.test.BaseTest;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.After;
 import org.junit.Assert;
@@ -49,7 +47,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @FixMethodOrder(value = MethodSorters.NAME_ASCENDING)
-public class MemberLookup_ITCase extends BaseTest {
+public class MemberLookup_ITCase {
 
 	static final String path = Paths.get(System.getProperty("user.home"), "/member_look")
 			.toString();

File: test/src/test/java/com/alibaba/nacos/test/naming/Cmdb_ITCase.java
Patch:
@@ -49,7 +49,7 @@
 
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 @Ignore
 public class Cmdb_ITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -48,7 +48,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class MultiTenant_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -60,7 +60,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class MultiTenant_InstanceAPI_ITCase {
     
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingHttpClientProxy_ITCase.java
Patch:
@@ -45,7 +45,7 @@
 
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
-    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+    webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class NamingHttpClientProxy_ITCase {
     @LocalServerPort
     private int port;

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -35,7 +35,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class RestAPI_ITCase extends NamingBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -47,7 +47,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class SelectInstances_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -42,7 +42,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class SelectOneHealthyInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ServiceListTest_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -46,7 +46,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class SubscribeCluster_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Subscribe_ITCase.java
Patch:
@@ -48,7 +48,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Subscribe_ITCase extends RestAPI_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Unsubscribe_ITCase {
 
     private NamingService naming;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -248,7 +248,7 @@ public Connection connectToServer(ServerInfo serverInfo) {
                 
                 grpcExecutor = new ThreadPoolExecutor(Runtime.getRuntime().availableProcessors() * 8,
                         Runtime.getRuntime().availableProcessors() * 8, 10L, TimeUnit.SECONDS,
-                        new LinkedBlockingQueue<>(1000),
+                        new LinkedBlockingQueue<>(10000),
                         new ThreadFactoryBuilder().setDaemon(true).setNameFormat("nacos-grpc-client-executor-%d")
                                 .build());
                 grpcExecutor.allowCoreThreadTimeOut(true);

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcClusterServer.java
Patch:
@@ -39,6 +39,9 @@ public int rpcPortOffset() {
     
     @Override
     public ThreadPoolExecutor getRpcExecutor() {
+        if (!GlobalExecutor.clusterRpcExecutor.allowsCoreThreadTimeOut()) {
+            GlobalExecutor.clusterRpcExecutor.allowCoreThreadTimeOut(true);
+        }
         return GlobalExecutor.clusterRpcExecutor;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -106,7 +106,7 @@ private NamingPushCallback(String clientId, Subscriber subscriber, ServiceInfo s
         @Override
         public long getTimeout() {
             // TODO timeout should can be config
-            return 3000L;
+            return 5000L;
         }
         
         @Override

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -561,7 +561,7 @@ protected void reconnect(final ServerInfo recommendServerInfo, boolean onRequest
             }
             
         } catch (Exception e) {
-            LoggerUtils.printIfWarnEnabled(LOGGER, "[{}] Fail to  re connect to server ,error is ", name, e);
+            LoggerUtils.printIfWarnEnabled(LOGGER, "[{}] Fail to  re connect to server ,error is {}", name, e);
         }
     }
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConnection.java
Patch:
@@ -157,7 +157,7 @@ public void onFailure(Throwable throwable) {
                     requestCallBack.onException(throwable);
                 }
             }
-        }, this.executor);
+        }, requestCallBack.getExecutor() != null ? requestCallBack.getExecutor() : this.executor);
         // set timeout future.
         ListenableFuture<Payload> payloadListenableFuture = Futures
                 .withTimeout(requestFuture, requestCallBack.getTimeout(), TimeUnit.MILLISECONDS,

File: naming/src/main/java/com/alibaba/nacos/naming/utils/ServiceUtil.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.LinkedList;
@@ -158,7 +159,7 @@ public static List<String> pageServiceName(int pageNo, int pageSize, Collection<
             start = 0;
         }
         if (start >= result.size()) {
-            return result;
+            return Collections.emptyList();
         }
         int end = start + pageSize;
         if (end > result.size()) {

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -81,7 +81,7 @@ public void testLightBeat() throws Exception {
         TimeUnit.SECONDS.sleep(2L);
 
         List<Instance> list = naming.getAllInstances(serviceName);
-        Assert.assertEquals(2, list.size());
+        Assert.assertEquals(1, list.size());
         for (Instance instance1 : list) {
             Assert.assertEquals("1.2.3.4", instance1.getIp());
             Assert.assertTrue(instance1.getPort() == 80 || instance1.getPort() == 81);
@@ -95,7 +95,7 @@ public void testLightBeat() throws Exception {
         TimeUnit.SECONDS.sleep(35L);
 
         list = naming.getAllInstances(serviceName);
-        Assert.assertEquals(2, list.size());
+        Assert.assertEquals(1, list.size());
         for (Instance instance1 : list) {
             Assert.assertEquals("1.2.3.4", instance1.getIp());
             Assert.assertTrue(instance1.getPort() == 80 || instance1.getPort() == 81);
@@ -120,7 +120,7 @@ public void testLightBeat() throws Exception {
         TimeUnit.SECONDS.sleep(35L);
 
         list = naming.getAllInstances(serviceName);
-        Assert.assertEquals(2, list.size());
+        Assert.assertEquals(1, list.size());
         for (Instance instance1 : list) {
             Assert.assertEquals("1.2.3.4", instance1.getIp());
             Assert.assertTrue(instance1.getPort() == 80 || instance1.getPort() == 81);

File: test/src/test/java/com/alibaba/nacos/test/common/NacosAsyncRestTemplate_ITCase.java
Patch:
@@ -48,7 +48,7 @@
 @FixMethodOrder(MethodSorters.JVM)
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class NacosAsyncRestTemplate_ITCase {
     
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_ITCase.java
Patch:
@@ -47,7 +47,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 @FixMethodOrder(MethodSorters.JVM)
 public class NacosRestTemplate_ITCase {
     

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_Interceptors_ITCase.java
Patch:
@@ -51,7 +51,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 @FixMethodOrder(MethodSorters.JVM)
 public class NacosRestTemplate_Interceptors_ITCase {
     

File: test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigAuth_ITCase extends AuthBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -43,7 +43,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class NamingAuth_ITCase extends AuthBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -44,7 +44,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Permission_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -44,7 +44,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Role_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -46,7 +46,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class User_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -25,10 +25,8 @@
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.StandaloneMemberLookup;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
-import com.alibaba.nacos.test.BaseTest;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.After;
 import org.junit.Assert;
@@ -49,7 +47,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @FixMethodOrder(value = MethodSorters.NAME_ASCENDING)
-public class MemberLookup_ITCase extends BaseTest {
+public class MemberLookup_ITCase {
 
 	static final String path = Paths.get(System.getProperty("user.home"), "/member_look")
 			.toString();

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -50,7 +50,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class AutoDeregisterInstance_ITCase {
     
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -55,7 +55,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class CPInstancesAPI_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -40,7 +40,7 @@
 
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ClientBeat_ITCase extends NamingBase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Cmdb_ITCase.java
Patch:
@@ -49,7 +49,7 @@
 
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 @Ignore
 public class Cmdb_ITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class DeregisterInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -48,7 +48,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class MultiTenant_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -60,7 +60,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class MultiTenant_InstanceAPI_ITCase {
     
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingHttpClientProxy_ITCase.java
Patch:
@@ -45,7 +45,7 @@
 
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
-    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+    webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class NamingHttpClientProxy_ITCase {
     @LocalServerPort
     private int port;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -46,7 +46,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {
-        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        "server.servlet.context-path=/nacos"}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class RegisterInstance_ITCase {
     
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -35,7 +35,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class RestAPI_ITCase extends NamingBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -47,7 +47,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class SelectInstances_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -42,7 +42,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class SelectOneHealthyInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ServiceListTest_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -46,7 +46,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class SubscribeCluster_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Subscribe_ITCase.java
Patch:
@@ -48,7 +48,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Subscribe_ITCase extends RestAPI_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -45,7 +45,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class Unsubscribe_ITCase {
 
     private NamingService naming;

File: common/src/main/java/com/alibaba/nacos/common/executor/NameThreadFactory.java
Patch:
@@ -41,7 +41,7 @@ public NameThreadFactory(String name) {
     
     @Override
     public Thread newThread(Runnable r) {
-        String threadName = name + id.getAndDecrement();
+        String threadName = name + id.getAndIncrement();
         Thread thread = new Thread(r, threadName);
         thread.setDaemon(true);
         return thread;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -806,9 +806,10 @@ protected Response handleServerRequest(final Request request) {
         for (ServerRequestHandler serverRequestHandler : serverRequestHandlers) {
             try {
                 Response response = serverRequestHandler.requestReply(request);
-                LoggerUtils.printIfInfoEnabled(LOGGER, "[{}]ack server push request,request={},requestId={}", name,
-                        request.getClass().getSimpleName(), request.getRequestId());
+                
                 if (response != null) {
+                    LoggerUtils.printIfInfoEnabled(LOGGER, "[{}]ack server push request,request={},requestId={}", name,
+                            request.getClass().getSimpleName(), request.getRequestId());
                     return response;
                 }
             } catch (Exception e) {

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -272,13 +272,15 @@ TimeUnit.SECONDS, new SynchronousQueue(),
                 grpcConn.setPayloadStreamObserver(payloadStreamObserver);
                 grpcConn.setGrpcFutureServiceStub(newChannelStubTemp);
                 grpcConn.setChannel((ManagedChannel) newChannelStubTemp.getChannel());
-                //send a connection setup request.
+                //send a  setup request.
                 ConnectionSetupRequest conSetupRequest = new ConnectionSetupRequest();
                 conSetupRequest.setClientVersion(VersionUtils.getFullClientVersion());
                 conSetupRequest.setLabels(super.getLabels());
                 conSetupRequest.setAbilities(super.clientAbilities);
                 conSetupRequest.setTenant(super.getTenant());
                 grpcConn.sendRequest(conSetupRequest);
+                //wait to register connection setup
+                Thread.sleep(100L);
                 return grpcConn;
             }
             return null;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcUtils.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
+import com.alibaba.nacos.api.utils.NetUtils;
 import com.alibaba.nacos.common.remote.exception.RemoteException;
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.core.JsonProcessingException;
@@ -98,6 +99,7 @@ public static Payload convert(Request request, RequestMeta meta) {
         if (meta != null) {
             metaBuilder.putAllHeaders(request.getHeaders()).setType(request.getClass().getSimpleName());
         }
+        metaBuilder.setClientIp(NetUtils.localIP());
         payloadBuilder.setMetadata(metaBuilder.build());
         
         // request body .
@@ -119,7 +121,7 @@ public static Payload convert(Request request, RequestMeta meta) {
     public static Payload convert(Request request) {
         
         Metadata newMeta = Metadata.newBuilder().setType(request.getClass().getSimpleName())
-                .putAllHeaders(request.getHeaders()).build();
+                .setClientIp(NetUtils.localIP()).putAllHeaders(request.getHeaders()).build();
         request.clearHeaders();
         String jsonString = toJson(request);
         

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -65,10 +65,10 @@ public PersistentServiceProcessor(ProtocolManager protocolManager, ClusterVersio
     @Override
     public void afterConstruct() {
         super.afterConstruct();
-        this.protocol.addRequestProcessors(Collections.singletonList(this));
         this.protocol.protocolMetaData()
                 .subscribe(Constants.NAMING_PERSISTENT_SERVICE_GROUP, MetadataKey.LEADER_META_DATA,
                         (o, arg) -> hasLeader = StringUtils.isNotBlank(String.valueOf(arg)));
+        this.protocol.addRequestProcessors(Collections.singletonList(this));
         // If you choose to use the new RAFT protocol directly, there will be no compatible logical execution
         if (EnvUtil.getProperty(Constants.NACOS_NAMING_USE_NEW_RAFT_FIRST, Boolean.class, false)) {
             NotifyCenter.registerSubscriber(notifier);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/TcpHealthCheckProcessor.java
Patch:
@@ -193,6 +193,7 @@ public void run() {
                         key.channel().close();
                     } else {
                         // not terminate request, ignore
+                        SRV_LOG.warn("Tcp check ok, but the connected server responses some msg. Connection won't be closed.");
                     }
                 }
             } catch (ConnectException e) {

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/NamingSubscriberServiceV2Impl.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
 import com.alibaba.nacos.naming.core.v2.index.ClientServiceIndexesManager;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
+import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.upgrade.UpgradeJudgement;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
@@ -60,12 +61,13 @@ public class NamingSubscriberServiceV2Impl extends SmartSubscriber implements Na
     
     public NamingSubscriberServiceV2Impl(ClientManagerDelegate clientManager,
             ClientServiceIndexesManager indexesManager, ServiceStorage serviceStorage,
+            NamingMetadataManager metadataManager,
             PushExecutorDelegate pushExecutor, UpgradeJudgement upgradeJudgement, SwitchDomain switchDomain) {
         this.clientManager = clientManager;
         this.indexesManager = indexesManager;
         this.upgradeJudgement = upgradeJudgement;
         this.delayTaskEngine = new PushDelayTaskExecuteEngine(clientManager, indexesManager, serviceStorage,
-                pushExecutor, switchDomain);
+                metadataManager, pushExecutor, switchDomain);
         NotifyCenter.registerSubscriber(this);
         
     }

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
 import com.alibaba.nacos.naming.core.v2.client.Client;
+import com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.pojo.Subscriber;
@@ -72,7 +73,8 @@ public void run() {
     
     private PushDataWrapper generatePushData() {
         ServiceInfo serviceInfo = delayTaskEngine.getServiceStorage().getPushData(service);
-        serviceInfo = ServiceUtil.selectInstances(serviceInfo, false, true);
+        ServiceMetadata serviceMetadata = delayTaskEngine.getMetadataManager().getServiceMetadata(service).orElse(null);
+        serviceInfo = ServiceUtil.selectInstancesWithHealthyProtection(serviceInfo, serviceMetadata, false, true);
         return new PushDataWrapper(serviceInfo);
     }
     

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/NamingSubscriberServiceV2ImplTest.java
Patch:
@@ -74,7 +74,7 @@ public class NamingSubscriberServiceV2ImplTest {
     
     @Before
     public void setUp() throws Exception {
-        subscriberService = new NamingSubscriberServiceV2Impl(clientManager, indexesManager, null, null,
+        subscriberService = new NamingSubscriberServiceV2Impl(clientManager, indexesManager, null,  null, null,
                 upgradeJudgement, switchDomain);
         ReflectionTestUtils.setField(subscriberService, "delayTaskEngine", delayTaskEngine);
         when(indexesManager.getAllClientsSubscribeService(service)).thenReturn(Collections.singletonList(testClientId));

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -170,6 +170,7 @@ public ObjectNode metrics(HttpServletRequest request) {
         int responsibleIpCount = serviceManager.getResponsibleInstanceCount();
         result.put("serviceCount", MetricsMonitor.getDomCountMonitor().get());
         result.put("instanceCount", MetricsMonitor.getIpCountMonitor().get());
+        result.put("subscribeCount", MetricsMonitor.getSubscriberCount().get());
         result.put("raftNotifyTaskCount", raftCore.getNotifyTaskCount());
         result.put("responsibleServiceCount", responsibleDomCount);
         result.put("responsibleInstanceCount", responsibleIpCount);

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/impl/IpPortBasedClient.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.nacos.naming.healthcheck.HealthCheckReactor;
 import com.alibaba.nacos.naming.healthcheck.heartbeat.ClientBeatCheckTaskV2;
 import com.alibaba.nacos.naming.healthcheck.v2.HealthCheckTaskV2;
+import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 
 import java.util.Collection;
 import java.util.List;
@@ -145,6 +146,7 @@ public void loadClientSyncData(ClientSyncData client) {
             HealthCheckInstancePublishInfo instance = parseToHealthCheckInstance(instances.get(i));
             instance.initHealthCheck();
             publishers.put(singleton, instance);
+            MetricsMonitor.incrementInstanceCount();
         }
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java
Patch:
@@ -170,7 +170,7 @@ public ServiceInfo listInstance(String namespaceId, String serviceName, Subscrib
         }
         ServiceInfo serviceInfo = serviceStorage.getData(service);
         ServiceMetadata serviceMetadata = metadataManager.getServiceMetadata(service).orElse(null);
-        ServiceInfo result = ServiceUtil.selectInstances(serviceInfo, serviceMetadata, cluster, healthOnly, true);
+        ServiceInfo result = ServiceUtil.selectInstancesWithHealthyProtection(serviceInfo, serviceMetadata, cluster, healthOnly, true);
         // adapt for v1.x sdk
         result.setName(NamingUtils.getGroupedName(result.getName(), result.getGroupName()));
         return result;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceQueryRequestHandler.java
Patch:
@@ -61,7 +61,7 @@ public QueryServiceResponse handle(ServiceQueryRequest request, RequestMeta meta
         boolean healthyOnly = request.isHealthyOnly();
         ServiceInfo result = serviceStorage.getData(service);
         ServiceMetadata serviceMetadata = metadataManager.getServiceMetadata(service).orElse(null);
-        result = ServiceUtil.selectInstances(result, serviceMetadata, cluster, healthyOnly, true);
+        result = ServiceUtil.selectInstancesWithHealthyProtection(result, serviceMetadata, cluster, healthyOnly, true);
         return QueryServiceResponse.buildSuccessResponse(result);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HttpHealthCheckProcessor.java
Patch:
@@ -73,7 +73,7 @@ public void process(HealthCheckTaskV2 task, Service service, ClusterMetadata met
         }
         try {
             // TODO handle marked(white list) logic like v1.x.
-            if (instance.tryStartCheck()) {
+            if (!instance.tryStartCheck()) {
                 SRV_LOG.warn("http check started before last one finished, service: {} : {} : {}:{}",
                         service.getGroupedServiceName(), instance.getCluster(), instance.getIp(), instance.getPort());
                 healthCheckCommon

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/MysqlHealthCheckProcessor.java
Patch:
@@ -86,7 +86,7 @@ public void process(HealthCheckTaskV2 task, Service service, ClusterMetadata met
         SRV_LOG.debug("mysql check, ip:" + instance);
         try {
             // TODO handle marked(white list) logic like v1.x.
-            if (instance.tryStartCheck()) {
+            if (!instance.tryStartCheck()) {
                 SRV_LOG.warn("mysql check started before last one finished, service: {} : {} : {}:{}",
                         service.getGroupedServiceName(), instance.getCluster(), instance.getIp(), instance.getPort());
                 healthCheckCommon

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/TcpHealthCheckProcessor.java
Patch:
@@ -100,7 +100,7 @@ public void process(HealthCheckTaskV2 task, Service service, ClusterMetadata met
             return;
         }
         // TODO handle marked(white list) logic like v1.x.
-        if (instance.tryStartCheck()) {
+        if (!instance.tryStartCheck()) {
             SRV_LOG.warn("tcp check started before last one finished, service: {} : {} : {}:{}",
                     service.getGroupedServiceName(), instance.getCluster(), instance.getIp(), instance.getPort());
             healthCheckCommon

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingKvStorage.java
Patch:
@@ -72,7 +72,7 @@ public byte[] get(byte[] key) throws KvStorageException {
                 }
             } catch (Exception e) {
                 throw new KvStorageException(ErrorCode.KVStorageWriteError.getCode(),
-                        "Get data failed, key: " + new String(key), e);
+                        "Get data failed, key: " + new String(key) + ", detail: " + e.getMessage(), e);
             }
         }
         return result;
@@ -97,7 +97,7 @@ public void put(byte[] key, byte[] value) throws KvStorageException {
             storage.put(key, value);
         } catch (Exception e) {
             throw new KvStorageException(ErrorCode.KVStorageWriteError.getCode(),
-                    "Put data failed, key: " + new String(key), e);
+                    "Put data failed, key: " + new String(key) + ", detail: " + e.getMessage(), e);
         }
         // after actual storage put success, put it in memory, memory put should success all the time
         super.put(key, value);
@@ -124,7 +124,7 @@ public void delete(byte[] key) throws KvStorageException {
             }
         } catch (Exception e) {
             throw new KvStorageException(ErrorCode.KVStorageDeleteError.getCode(),
-                    "Delete data failed, key: " + new String(key), e);
+                    "Delete data failed, key: " + new String(key) + ", detail: " + e.getMessage(), e);
         }
         // after actual storage delete success, put it in memory, memory delete should success all the time
         super.delete(key);

File: client/src/test/java/com/alibaba/nacos/client/config/impl/ConfigChangeHandlerTest.java
Patch:
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.listener.impl;
+package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.config.ConfigChangeItem;
-import com.alibaba.nacos.client.config.impl.ConfigChangeHandler;
 import org.junit.Assert;
 import org.junit.Test;
 

File: client/src/test/java/com/alibaba/nacos/client/config/impl/PropertiesChangeParserTest.java
Patch:
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.listener.impl;
+package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.config.ConfigChangeItem;
-import com.alibaba.nacos.client.config.impl.PropertiesChangeParser;
 import org.junit.Assert;
 import org.junit.Test;
 

File: client/src/test/java/com/alibaba/nacos/client/config/impl/YmlChangeParserTest.java
Patch:
@@ -14,10 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.config.listener.impl;
+package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.config.ConfigChangeItem;
-import com.alibaba.nacos.client.config.impl.YmlChangeParser;
 import org.junit.Assert;
 import org.junit.Test;
 

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainManager.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.api.config.filter.IConfigRequest;
 import com.alibaba.nacos.api.config.filter.IConfigResponse;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.google.common.collect.Lists;
 
+import java.util.ArrayList;
 import java.util.List;
 
 /**
@@ -32,7 +32,7 @@
  */
 public class ConfigFilterChainManager implements IConfigFilterChain {
     
-    private final List<IConfigFilter> filters = Lists.newArrayList();
+    private final List<IConfigFilter> filters = new ArrayList<>();
     
     /**
      * Add filter.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -26,7 +26,6 @@
 import com.alibaba.nacos.api.remote.request.ServerCheckRequest;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ServerCheckResponse;
-import com.alibaba.nacos.api.utils.NetUtils;
 import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.remote.client.Connection;
 import com.alibaba.nacos.common.remote.client.RpcClient;
@@ -278,7 +277,6 @@ TimeUnit.SECONDS, new SynchronousQueue(),
                 conSetupRequest.setClientVersion(VersionUtils.getFullClientVersion());
                 conSetupRequest.setLabels(super.getLabels());
                 conSetupRequest.setAbilities(super.clientAbilities);
-                conSetupRequest.setClientIp(NetUtils.localIP());
                 conSetupRequest.setTenant(super.getTenant());
                 grpcConn.sendRequest(conSetupRequest);
                 return grpcConn;

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -68,7 +68,7 @@ public static void copy(Member newMember, Member oldMember) {
     @SuppressWarnings("PMD.UndefineMagicConstantRule")
     public static Member singleParse(String member) {
         // Nacos default port is 8848
-        int defaultPort = Integer.valueOf(System.getProperty("server.port", "8848"));
+        int defaultPort = EnvUtil.getProperty("server.port", Integer.class, 8848);
         // Set the default Raft port information for securit
         
         String address = member;
@@ -269,11 +269,11 @@ public static boolean isBasicInfoChanged(Member actual, Member expected) {
         if (!expected.getState().equals(actual.getState())) {
             return true;
         }
-    
+        
         if (!expected.getAbilities().equals(actual.getAbilities())) {
             return true;
         }
-    
+        
         return isBasicInfoChangedInExtendInfo(expected, actual);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadata;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataOperateService;
+import com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.core.v2.service.ClientOperationService;
@@ -168,7 +169,8 @@ public ServiceInfo listInstance(String namespaceId, String serviceName, Subscrib
             clientOperationService.subscribeService(service, subscriber, clientId);
         }
         ServiceInfo serviceInfo = serviceStorage.getData(service);
-        ServiceInfo result = ServiceUtil.selectInstances(serviceInfo, cluster, healthOnly, true);
+        ServiceMetadata serviceMetadata = metadataManager.getServiceMetadata(service).orElse(null);
+        ServiceInfo result = ServiceUtil.selectInstances(serviceInfo, serviceMetadata, cluster, healthOnly, true);
         // adapt for v1.x sdk
         result.setName(NamingUtils.getGroupedName(result.getName(), result.getGroupName()));
         return result;

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/delay/DistroDelayTaskProcessor.java
Patch:
@@ -54,6 +54,7 @@ public boolean process(NacosTask task) {
                 distroTaskEngineHolder.getExecuteWorkersManager().addTask(distroKey, syncDeleteTask);
                 return true;
             case CHANGE:
+            case ADD:
                 DistroSyncChangeTask syncChangeTask = new DistroSyncChangeTask(distroKey, distroComponentHolder);
                 distroTaskEngineHolder.getExecuteWorkersManager().addTask(distroKey, syncChangeTask);
                 return true;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientTransportAgent.java
Patch:
@@ -125,8 +125,8 @@ public void syncVerifyData(DistroData verifyData, String targetServer, DistroCal
         DistroDataRequest request = new DistroDataRequest(verifyData, DataOperation.VERIFY);
         Member member = memberManager.find(targetServer);
         try {
-            DistroVerifyCallbackWrapper wrapper = new DistroVerifyCallbackWrapper(verifyData.getDistroKey().getResourceKey(),
-                    targetServer, callback);
+            DistroVerifyCallbackWrapper wrapper = new DistroVerifyCallbackWrapper(targetServer,
+                    verifyData.getDistroKey().getResourceKey(), callback);
             clusterRpcClientProxy.asyncRequest(member, request, wrapper);
         } catch (NacosException nacosException) {
             callback.onFailed(nacosException);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/DistroDataRequestHandler.java
Patch:
@@ -72,8 +72,7 @@ public DistroDataResponse handle(DistroDataRequest request, RequestMeta meta) th
     private DistroDataResponse handleVerify(DistroData distroData, RequestMeta meta) {
         DistroDataResponse result = new DistroDataResponse();
         if (!distroProtocol.onVerify(distroData, meta.getClientIp())) {
-            result.setErrorCode(ResponseCode.FAIL.getCode());
-            result.setMessage("[DISTRO-FAILED] distro data verify failed");
+            result.setErrorInfo(ResponseCode.FAIL.getCode(), "[DISTRO-FAILED] distro data verify failed");
         }
         return result;
     }

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -176,6 +176,8 @@ public class Constants {
     
     public static final String SERVICE_INFO_SPLITER = "@@";
     
+    public static final int SERVICE_INFO_SPLIT_COUNT = 2;
+    
     public static final String NULL_STRING = "null";
     
     public static final String NUMBER_PATTERN = "^\\d+$";

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -941,7 +941,7 @@ public int getPagedService(String namespaceId, int startPage, int pageSize, Stri
         
         if (StringUtils.isNotBlank(param)) {
             StringJoiner regex = new StringJoiner(Constants.SERVICE_INFO_SPLITER);
-            for (String s : param.split(Constants.SERVICE_INFO_SPLITER)) {
+            for (String s : param.split(Constants.SERVICE_INFO_SPLITER, Constants.SERVICE_INFO_SPLIT_COUNT)) {
                 regex.add(StringUtils.isBlank(s) ? Constants.ANY_PATTERN
                         : Constants.ANY_PATTERN + s + Constants.ANY_PATTERN);
             }

File: client/src/main/java/com/alibaba/nacos/client/utils/TemplateUtils.java
Patch:
@@ -64,7 +64,7 @@ public static String stringEmptyAndThenExecute(String source, Callable<String> c
             }
         }
         
-        return source.trim();
+        return source == null ? null : source.trim();
     }
     
     /**
@@ -85,6 +85,6 @@ public static String stringBlankAndThenExecute(String source, Callable<String> c
             }
         }
         
-        return source.trim();
+        return source == null ? null : source.trim();
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.nacos.api.remote.request.ServerCheckRequest;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ServerCheckResponse;
+import com.alibaba.nacos.api.utils.NetUtils;
 import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.remote.client.Connection;
 import com.alibaba.nacos.common.remote.client.RpcClient;
@@ -277,6 +278,7 @@ TimeUnit.SECONDS, new SynchronousQueue(),
                 conSetupRequest.setClientVersion(VersionUtils.getFullClientVersion());
                 conSetupRequest.setLabels(super.getLabels());
                 conSetupRequest.setAbilities(super.clientAbilities);
+                conSetupRequest.setClientIp(NetUtils.localIP());
                 conSetupRequest.setTenant(super.getTenant());
                 grpcConn.sendRequest(conSetupRequest);
                 return grpcConn;

File: naming/src/main/java/com/alibaba/nacos/naming/push/v1/NamingSubscriberServiceV1Impl.java
Patch:
@@ -27,6 +27,7 @@
 import java.net.InetSocketAddress;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Map;
 import java.util.Objects;
 import java.util.concurrent.ConcurrentHashMap;
@@ -81,7 +82,7 @@ public Collection<Subscriber> getSubscribers(String namespaceId, String serviceN
         String serviceKey = UtilsAndCommons.assembleFullServiceName(namespaceId, serviceName);
         ConcurrentMap<String, PushClient> clientConcurrentMap = clientMap.get(serviceKey);
         if (Objects.isNull(clientConcurrentMap)) {
-            return null;
+            return Collections.emptyList();
         }
         Collection<Subscriber> result = new ArrayList<>();
         clientConcurrentMap.forEach((key, client) -> {

File: naming/src/main/java/com/alibaba/nacos/naming/utils/InstanceUtil.java
Patch:
@@ -55,7 +55,7 @@ public static Instance parseToApiInstance(Service service, InstancePublishInfo i
             } else if (Constants.PUBLISH_INSTANCE_WEIGHT.equals(entry.getKey())) {
                 result.setWeight((Double) entry.getValue());
             } else {
-                instanceMetadata.put(entry.getKey(), entry.getValue().toString());
+                instanceMetadata.put(entry.getKey(), null != entry.getValue() ? entry.getValue().toString() : null);
             }
         }
         result.setMetadata(instanceMetadata);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckReactor.java
Patch:
@@ -51,7 +51,8 @@ public static ScheduledFuture<?> scheduleCheck(HealthCheckTask task) {
      * @param task client beat check task
      */
     public static void scheduleCheck(ClientBeatCheckTask task) {
-        futureMap.putIfAbsent(task.taskKey(), GlobalExecutor.scheduleNamingHealth(task, 5000, 5000, TimeUnit.MILLISECONDS));
+        futureMap.computeIfAbsent(task.taskKey(),
+                k -> GlobalExecutor.scheduleNamingHealth(task, 5000, 5000, TimeUnit.MILLISECONDS));
     }
     
     /**

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcSdkClient.java
Patch:
@@ -38,4 +38,4 @@ public int rpcPortOffset() {
         return 1000;
     }
     
-}
+}
\ No newline at end of file

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeClusterSyncRequestHandler.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.core.remote.RequestHandler;
+import com.alibaba.nacos.core.remote.control.TpsControl;
 import org.springframework.stereotype.Component;
 
 /**
@@ -40,6 +41,7 @@ public ConfigChangeClusterSyncRequestHandler(DumpService dumpService) {
         this.dumpService = dumpService;
     }
     
+    @TpsControl(pointName = "ClusterConfigChangeNotify")
     @Override
     public ConfigChangeClusterSyncResponse handle(ConfigChangeClusterSyncRequest configChangeSyncRequest,
             RequestMeta meta) throws NacosException {

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -191,7 +191,7 @@ public void run() {
                 ConfigChangeClusterSyncRequest syncRequest = new ConfigChangeClusterSyncRequest();
                 syncRequest.setDataId(task.getDataId());
                 syncRequest.setGroup(task.getGroup());
-                syncRequest.setIsBeta(task.isBeta ? "Y" : "N");
+                syncRequest.setBeta(task.isBeta);
                 syncRequest.setLastModified(task.getLastModified());
                 syncRequest.setTag(task.tag);
                 syncRequest.setTenant(task.getTenant());
@@ -202,7 +202,7 @@ public void run() {
                                 syncRequest.getLastModified(), NetUtils.localIP(), true);
                     } else {
                         dumpService.dump(syncRequest.getDataId(), syncRequest.getGroup(), syncRequest.getTenant(),
-                                syncRequest.getLastModified(), NetUtils.localIP());
+                                syncRequest.getTag(), syncRequest.getLastModified(), NetUtils.localIP());
                     }
                     continue;
                 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -68,7 +68,7 @@ public static void copy(Member newMember, Member oldMember) {
     @SuppressWarnings("PMD.UndefineMagicConstantRule")
     public static Member singleParse(String member) {
         // Nacos default port is 8848
-        int defaultPort = Integer.valueOf(System.getProperty("nacos.default.server.port", "8848"));
+        int defaultPort = Integer.valueOf(System.getProperty("server.port", "8848"));
         // Set the default Raft port information for securit
         
         String address = member;

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/executor/PushExecutorDelegate.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.remote.PushCallBack;
+import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import org.springframework.stereotype.Component;
 
@@ -51,6 +52,6 @@ public void doPushWithCallback(String clientId, Subscriber subscriber, ServiceIn
     }
     
     private PushExecutor getPushExecuteService(String clientId) {
-        return clientId.contains(":") ? udpPushExecuteService : rpcPushExecuteService;
+        return clientId.contains(IpPortBasedClient.ID_DELIMITER) ? udpPushExecuteService : rpcPushExecuteService;
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -197,8 +197,8 @@ private <T extends Response> T requestToServer(AbstractNamingRequest request, Cl
             throws NacosException {
         try {
             request.putAllHeader(getSecurityHeaders());
-            request.putAllHeader(
-                    getSpasHeaders(NamingUtils.getGroupedName(request.getServiceName(), request.getGroupName())));
+            request.putAllHeader(getSpasHeaders(
+                    NamingUtils.getGroupedNameOptional(request.getServiceName(), request.getGroupName())));
             Response response =
                     requestTimeout < 0 ? rpcClient.request(request) : rpcClient.request(request, requestTimeout);
             if (ResponseCode.SUCCESS.getCode() != response.getResultCode()) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -144,7 +144,7 @@ protected Map<String, String> getCommonHeader() {
         return headers;
     }
     
-    public String getAcessToken() {
+    public String getAccessToken() {
         return securityProxy.getAccessToken();
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/CacheItem.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.SimpleReadWriteLock;
-import com.alibaba.nacos.config.server.utils.SingletonRepository.DataIdGroupIdCache;
+import com.alibaba.nacos.core.utils.StringPool;
 
 import java.util.List;
 import java.util.Map;
@@ -31,7 +31,7 @@
 public class CacheItem {
     
     public CacheItem(String groupKey) {
-        this.groupKey = DataIdGroupIdCache.getSingleton(groupKey);
+        this.groupKey = StringPool.get(groupKey);
     }
     
     public String getMd5() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/DynamicDataSource.java
Patch:
@@ -17,12 +17,14 @@
 package com.alibaba.nacos.config.server.service.datasource;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
+import org.springframework.stereotype.Component;
 
 /**
  * Datasource adapter.
  *
  * @author Nacos
  */
+@Component
 public class DynamicDataSource {
     
     private DataSourceService localDataSourceService = null;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
+import java.util.concurrent.TimeUnit;
 
 import static com.alibaba.nacos.common.utils.CollectionUtils.getOrDefault;
 
@@ -84,6 +85,8 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>
             poolProperties.setPassword(getOrDefault(password, index, password.get(0)).trim());
             HikariDataSource ds = poolProperties.getDataSource();
             ds.setConnectionTestQuery(TEST_QUERY);
+            ds.setIdleTimeout(TimeUnit.MINUTES.toMillis(10L));
+            ds.setConnectionTimeout(TimeUnit.SECONDS.toMillis(3L));
             dataSources.add(ds);
             callback.accept(ds);
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -462,7 +462,7 @@ boolean replaceAggr(final String dataId, final String group, final String tenant
      * @param tenant tenant
      * @return {@link ConfigInfo4Beta}
      */
-    ConfigInfo4Beta findConfigInfo4Beta(final String dataId, final String group, final String tenant);
+    ConfigInfoBetaWrapper findConfigInfo4Beta(final String dataId, final String group, final String tenant);
     
     /**
      * Query tag configuration information based on dataId and group.
@@ -473,7 +473,7 @@ boolean replaceAggr(final String dataId, final String group, final String tenant
      * @param tag    tag
      * @return {@link ConfigInfo4Tag}
      */
-    ConfigInfo4Tag findConfigInfo4Tag(final String dataId, final String group, final String tenant, final String tag);
+    ConfigInfoTagWrapper findConfigInfo4Tag(final String dataId, final String group, final String tenant, final String tag);
     
     /**
      * Query common configuration information based on dataId and group.
@@ -523,7 +523,7 @@ ConfigInfo findConfigInfoAdvanceInfo(final String dataId, final String group, fi
      * @param tenant tenant
      * @return config info
      */
-    ConfigInfo findConfigInfo(final String dataId, final String group, final String tenant);
+    ConfigInfoWrapper findConfigInfo(final String dataId, final String group, final String tenant);
     
     /**
      * Query configuration information based on dataId.

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtil.java
Patch:
@@ -68,7 +68,7 @@ public static void copy(Member newMember, Member oldMember) {
     @SuppressWarnings("PMD.UndefineMagicConstantRule")
     public static Member singleParse(String member) {
         // Nacos default port is 8848
-        int defaultPort = 8848;
+        int defaultPort = Integer.valueOf(System.getProperty("nacos.default.server.port", "8848"));
         // Set the default Raft port information for securit
         
         String address = member;

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -127,6 +127,8 @@ public class Constants {
     
     public static final String NAMESPACE_CONTROLLER_PATH = BASE_PATH + "/namespaces";
     
+    public static final String METRICS_CONTROLLER_PATH = BASE_PATH + "/metrics";
+    
     public static final String ENCODE = "UTF-8";
     
     public static final String MAP_FILE = "map-file.js";

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -95,7 +95,7 @@ public void onEvent(Event event) {
                     Queue<NotifySingleRpcTask> rpcQueue = new LinkedList<NotifySingleRpcTask>();
                     
                     for (Member member : ipList) {
-                        if (MemberUtil.isSupportedLongCon(member)) {
+                        if (!MemberUtil.isSupportedLongCon(member)) {
                             httpQueue.add(new NotifySingleTask(dataId, group, tenant, tag, dumpTs, member.getAddress(),
                                     evt.isBeta));
                         } else {

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ThreadTaskQueueMonitorTask.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.config.server.service.notify.AsyncNotifyService;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
-import com.alibaba.nacos.core.utils.GlobalExecutor;
 
 import static com.alibaba.nacos.config.server.utils.LogUtil.MEMORY_LOG;
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/cleaner/ExpiredMetadataCleaner.java
Patch:
@@ -65,13 +65,13 @@ public void doClean() {
     
     private void removeExpiredMetadata(ExpiredMetadataInfo expiredInfo) {
         Loggers.SRV_LOG.info("Remove expired metadata {}", expiredInfo);
-        if (null == expiredInfo.getInstanceId()) {
+        if (null == expiredInfo.getMetadataId()) {
             if (metadataManager.containServiceMetadata(expiredInfo.getService())) {
                 metadataOperateService.deleteServiceMetadata(expiredInfo.getService());
             }
         } else {
-            if (metadataManager.containInstanceMetadata(expiredInfo.getService(), expiredInfo.getInstanceId())) {
-                metadataOperateService.deleteInstanceMetadata(expiredInfo.getService(), expiredInfo.getInstanceId());
+            if (metadataManager.containInstanceMetadata(expiredInfo.getService(), expiredInfo.getMetadataId())) {
+                metadataOperateService.deleteInstanceMetadata(expiredInfo.getService(), expiredInfo.getMetadataId());
             }
         }
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/impl/IpPortBasedClient.java
Patch:
@@ -121,6 +121,7 @@ private HealthCheckInstancePublishInfo parseToHealthCheckInstance(InstancePublis
         result.setIp(instancePublishInfo.getIp());
         result.setPort(instancePublishInfo.getPort());
         result.setHealthy(instancePublishInfo.isHealthy());
+        result.setCluster(instancePublishInfo.getCluster());
         result.setExtendDatum(instancePublishInfo.getExtendDatum());
         if (!ephemeral) {
             result.initHealthCheck();

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -54,7 +54,7 @@ public void registerInstance(Service service, Instance instance, String clientId
         client.setLastUpdatedTime();
         NotifyCenter.publishEvent(new ClientOperationEvent.ClientRegisterServiceEvent(singleton, clientId));
         NotifyCenter
-                .publishEvent(new MetadataEvent.InstanceMetadataEvent(singleton, instanceInfo.getInstanceId(), false));
+                .publishEvent(new MetadataEvent.InstanceMetadataEvent(singleton, instanceInfo.getMetadataId(), false));
     }
     
     @Override
@@ -70,7 +70,7 @@ public void deregisterInstance(Service service, Instance instance, String client
         if (null != removedInstance) {
             NotifyCenter.publishEvent(new ClientOperationEvent.ClientDeregisterServiceEvent(singleton, clientId));
             NotifyCenter.publishEvent(
-                    new MetadataEvent.InstanceMetadataEvent(singleton, removedInstance.getInstanceId(), true));
+                    new MetadataEvent.InstanceMetadataEvent(singleton, removedInstance.getMetadataId(), true));
         }
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ExpiredInstanceChecker.java
Patch:
@@ -66,7 +66,7 @@ private long getTimeout(Service service, InstancePublishInfo instance) {
     
     private Optional<Object> getTimeoutFromMetadata(Service service, InstancePublishInfo instance) {
         Optional<InstanceMetadata> instanceMetadata = ApplicationUtils.getBean(NamingMetadataManager.class)
-                .getInstanceMetadata(service, instance.getInstanceId());
+                .getInstanceMetadata(service, instance.getMetadataId());
         return instanceMetadata.map(metadata -> metadata.getExtendData().get(PreservedMetadataKeys.IP_DELETE_TIMEOUT));
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/InstanceEnableBeatCheckInterceptor.java
Patch:
@@ -36,7 +36,7 @@ public class InstanceEnableBeatCheckInterceptor extends AbstractBeatCheckInterce
     public boolean intercept(InstanceBeatCheckTask object) {
         NamingMetadataManager metadataManager = ApplicationUtils.getBean(NamingMetadataManager.class);
         HealthCheckInstancePublishInfo instance = object.getInstancePublishInfo();
-        Optional<InstanceMetadata> metadata = metadataManager.getInstanceMetadata(object.getService(), instance.getInstanceId());
+        Optional<InstanceMetadata> metadata = metadataManager.getInstanceMetadata(object.getService(), instance.getMetadataId());
         if (metadata.isPresent() && metadata.get().getExtendData().containsKey(UtilsAndCommons.ENABLE_CLIENT_BEAT)) {
             return ConvertUtils.toBoolean(metadata.get().getExtendData().get(UtilsAndCommons.ENABLE_CLIENT_BEAT).toString());
         }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/HealthCheckTaskV2.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming.healthcheck.v2;
 
-import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
 import com.alibaba.nacos.naming.core.v2.metadata.ClusterMetadata;
@@ -148,7 +147,7 @@ private ClusterMetadata getClusterMetadata(Service service, InstancePublishInfo
         if (!serviceMetadata.isPresent()) {
             return new ClusterMetadata();
         }
-        String cluster = instancePublishInfo.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();
+        String cluster = instancePublishInfo.getCluster();
         ClusterMetadata result = serviceMetadata.get().getClusters().get(cluster);
         return null == result ? new ClusterMetadata() : result;
     }

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java
Patch:
@@ -27,7 +27,9 @@
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
+import org.junit.runner.RunWith;
 import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
 import org.springframework.mock.env.MockEnvironment;
 
 import java.nio.file.Paths;
@@ -36,6 +38,7 @@
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 
+@RunWith(MockitoJUnitRunner.class)
 public class NamingSnapshotOperationTest {
     
     static {

File: naming/src/test/java/com/alibaba/nacos/naming/core/DomainsManagerTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.naming.core;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.BaseTest;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DistroConsistencyServiceImpl;
 import org.junit.Assert;
@@ -46,7 +47,7 @@ public void easyRemoveDom() throws Exception {
     
     @Test
     public void easyRemoveDomNotExist() throws Exception {
-        expectedException.expect(IllegalArgumentException.class);
+        expectedException.expect(NacosException.class);
         expectedException.expectMessage("specified service not exist, serviceName : " + TEST_SERVICE_NAME);
         manager.easyRemoveService(Constants.DEFAULT_NAMESPACE_ID, TEST_SERVICE_NAME);
     }
@@ -57,7 +58,7 @@ public void searchDom() {
         service.setNamespaceId(TEST_NAMESPACE);
         manager.putService(service);
         
-        List<Service> list = manager.searchServices(TEST_NAMESPACE, "test.*");
+        List<Service> list = manager.searchServices(TEST_NAMESPACE, "(.*)test(.*)");
         Assert.assertNotNull(list);
         Assert.assertEquals(1, list.size());
         Assert.assertEquals(TEST_SERVICE_NAME, list.get(0).getName());

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceManagerTest.java
Patch:
@@ -244,7 +244,7 @@ public void testEasyRemoveServiceSuccessfully() throws Exception {
     
     @Test
     public void testEasyRemoveServiceFailed() throws Exception {
-        expectedException.expect(IllegalArgumentException.class);
+        expectedException.expect(NacosException.class);
         expectedException.expectMessage("specified service not exist, serviceName : " + TEST_SERVICE_NAME);
         serviceManager.easyRemoveService(TEST_NAMESPACE, TEST_SERVICE_NAME);
     }

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/NamingSubscriberServiceV2ImplTest.java
Patch:
@@ -85,6 +85,7 @@ public void setUp() throws Exception {
                 new Subscriber("1.1.1.1:1111", "Test", "unknown", "1.1.1.1", "N", service.getGroupedServiceName(), 0));
         when(client.getSubscriber(service1)).thenReturn(
                 new Subscriber("1.1.1.1:1111", "Test", "unknown", "1.1.1.1", "N", service1.getGroupedServiceName(), 0));
+        when(upgradeJudgement.isUseGrpcFeatures()).thenReturn(true);
     }
     
     @Test

File: config/src/main/java/com/alibaba/nacos/config/server/manager/TaskManager.java
Patch:
@@ -148,7 +148,7 @@ public void init() {
             ObjectName oName = new ObjectName(this.name + ":type=" + TaskManager.class.getSimpleName());
             ManagementFactory.getPlatformMBeanServer().registerMBean(this, oName);
         } catch (Exception e) {
-            LOGGER.error("registerMBean_fail", "注册mbean出错", e);
+            LOGGER.error("registerMBean_fail", e);
         }
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigService.java
Patch:
@@ -58,7 +58,7 @@ String getConfigAndSignListener(String dataId, String group, long timeoutMs, Lis
     /**
      * Add a listener to the configuration, after the server modified the configuration, the client will use the
      * incoming listener callback. Recommended asynchronous processing, the application can implement the getExecutor
-     * method in the ManagerListener, provide a thread pool of execution. If provided, use the main thread callback, May
+     * method in the ManagerListener, provide a thread pool of execution. If not provided, use the main thread callback, May
      * block other configurations or be blocked by other configurations.
      *
      * @param dataId   dataId

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/impl/IpPortBasedClient.java
Patch:
@@ -40,7 +40,7 @@
  */
 public class IpPortBasedClient extends AbstractClient {
     
-    private static final String ID_DELIMITER = "#";
+    public static final String ID_DELIMITER = "#";
     
     private final String clientId;
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManagerDelegate.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.core.v2.client.manager;
 
-import com.alibaba.nacos.common.utils.IPUtil;
 import com.alibaba.nacos.naming.core.v2.client.Client;
+import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
 import com.alibaba.nacos.naming.core.v2.client.manager.impl.ConnectionBasedClientManager;
 import com.alibaba.nacos.naming.core.v2.client.manager.impl.EphemeralIpPortClientManager;
 import com.alibaba.nacos.naming.core.v2.client.manager.impl.PersistentIpPortClientManager;
@@ -101,6 +101,6 @@ private ClientManager getClientManagerById(String clientId) {
     }
     
     private boolean isConnectionBasedClient(String clientId) {
-        return !clientId.contains(IPUtil.IP_PORT_SPLITER);
+        return !clientId.contains(IpPortBasedClient.ID_DELIMITER);
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/core/v2/upgrade/UpgradeJudgementTest.java
Patch:
@@ -76,7 +76,7 @@ public class UpgradeJudgementTest {
     public void setUp() throws Exception {
         EnvUtil.setEnvironment(environment);
         upgradeJudgement = new UpgradeJudgement(raftPeerSet, raftCore, versionJudgement, memberManager, serviceManager,
-                doubleWriteDelayTaskEngine, serviceStorage);
+                doubleWriteDelayTaskEngine);
     }
     
     @After

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/upgrade/doublewrite/delay/DoubleWriteEventListener.java
Patch:
@@ -78,7 +78,7 @@ public void doubleWriteMetadataToV1(com.alibaba.nacos.naming.core.v2.pojo.Servic
      * @param ephemeral ephemeral of service
      */
     public void doubleWriteToV2(Service service, boolean ephemeral) {
-        if (upgradeJudgement.isUseGrpcFeatures()) {
+        if (upgradeJudgement.isUseGrpcFeatures() || upgradeJudgement.isAll20XVersion()) {
             return;
         }
         String namespace = service.getNamespaceId();
@@ -94,7 +94,7 @@ public void doubleWriteToV2(Service service, boolean ephemeral) {
      * @param ephemeral ephemeral of service
      */
     public void doubleWriteMetadataToV2(Service service, boolean ephemeral) {
-        if (upgradeJudgement.isUseGrpcFeatures()) {
+        if (upgradeJudgement.isUseGrpcFeatures() || upgradeJudgement.isAll20XVersion()) {
             return;
         }
         String namespace = service.getNamespaceId();

File: api/src/main/java/com/alibaba/nacos/api/remote/PayloadRegistry.java
Patch:
@@ -56,7 +56,7 @@ private static synchronized void scan() {
             Reflections reflections = new Reflections(pkg);
             Set<Class<? extends Request>> subTypesRequest = reflections.getSubTypesOf(Request.class);
             for (Class clazz : subTypesRequest) {
-                register(clazz.getName(), clazz);
+                register(clazz.getSimpleName(), clazz);
             }
         }
         
@@ -67,7 +67,7 @@ private static synchronized void scan() {
             Reflections reflections = new Reflections(pkg);
             Set<Class<? extends Response>> subTypesOfResponse = reflections.getSubTypesOf(Response.class);
             for (Class clazz : subTypesOfResponse) {
-                register(clazz.getName(), clazz);
+                register(clazz.getSimpleName(), clazz);
             }
         }
         

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -86,7 +86,7 @@ public NamingGrpcClientProxy(String namespaceId, SecurityProxy securityProxy, Se
     }
     
     private void start(ServerListFactory serverListFactory, ServiceInfoHolder serviceInfoHolder) throws NacosException {
-        rpcClient.init(serverListFactory);
+        rpcClient.serverListFactory(serverListFactory);
         rpcClient.start();
         rpcClient.registerServerRequestHandler(new NamingPushRequestHandler(serviceInfoHolder));
         rpcClient.registerConnectionListener(namingGrpcConnectionEventListener);

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientFactory.java
Patch:
@@ -40,7 +40,7 @@ public class RpcClientFactory {
      *
      * @return client collection.
      */
-    public static Set<Map.Entry<String, RpcClient>> getAllClientEntrys() {
+    public static Set<Map.Entry<String, RpcClient>> getAllClientEntries() {
         Set<Map.Entry<String, RpcClient>> entries = clientMap.entrySet();
         return entries;
     }
@@ -81,7 +81,7 @@ public static RpcClient createClient(String clientName, ConnectionType connectio
                 if (moduleClient == null) {
                     throw new UnsupportedOperationException("unsupported connection type :" + connectionType.getType());
                 }
-                moduleClient.initLabels(labels);
+                moduleClient.labels(labels);
                 clientMap.put(clientNameInner, moduleClient);
                 return moduleClient;
             }
@@ -109,7 +109,7 @@ public static RpcClient createClusterClient(String clientName, ConnectionType co
                 if (moduleClient == null) {
                     throw new UnsupportedOperationException("unsupported connection type :" + connectionType.getType());
                 }
-                moduleClient.initLabels(labels);
+                moduleClient.labels(labels);
                 clientMap.put(clientNameInner, moduleClient);
                 return moduleClient;
             }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -276,6 +276,8 @@ TimeUnit.SECONDS, new SynchronousQueue(),
                 ConnectionSetupRequest conSetupRequest = new ConnectionSetupRequest();
                 conSetupRequest.setClientVersion(VersionUtils.getFullClientVersion());
                 conSetupRequest.setLabels(super.getLabels());
+                conSetupRequest.setAbilities(super.clientAbilities);
+                conSetupRequest.setTenant(super.getTenant());
                 grpcConn.sendRequest(conSetupRequest);
                 return grpcConn;
             }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcUtils.java
Patch:
@@ -96,7 +96,7 @@ public static Payload convert(Request request, RequestMeta meta) {
         Payload.Builder payloadBuilder = Payload.newBuilder();
         Metadata.Builder metaBuilder = Metadata.newBuilder();
         if (meta != null) {
-            metaBuilder.putAllHeaders(request.getHeaders()).setType(request.getClass().getName());
+            metaBuilder.putAllHeaders(request.getHeaders()).setType(request.getClass().getSimpleName());
         }
         payloadBuilder.setMetadata(metaBuilder.build());
         
@@ -118,7 +118,7 @@ public static Payload convert(Request request, RequestMeta meta) {
      */
     public static Payload convert(Request request) {
         
-        Metadata newMeta = Metadata.newBuilder().setType(request.getClass().getName())
+        Metadata newMeta = Metadata.newBuilder().setType(request.getClass().getSimpleName())
                 .putAllHeaders(request.getHeaders()).build();
         request.clearHeaders();
         String jsonString = toJson(request);
@@ -141,7 +141,7 @@ public static Payload convert(Request request) {
     public static Payload convert(Response response) {
         String jsonString = toJson(response);
         
-        Metadata.Builder metaBuilder = Metadata.newBuilder().setType(response.getClass().getName());
+        Metadata.Builder metaBuilder = Metadata.newBuilder().setType(response.getClass().getSimpleName());
         Payload payload = Payload.newBuilder()
                 .setBody(Any.newBuilder().setValue(ByteString.copyFrom(jsonString, Charset.forName(Constants.ENCODE))))
                 .setMetadata(metaBuilder.build()).build();

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ThreadTaskQueueMonitorTask.java
Patch:
@@ -41,9 +41,6 @@ public void run() {
         int notifierClientSize = ConfigExecutor.asyncCofigChangeClientNotifyQueueSize();
         MEMORY_LOG.info("toNotifyTaskSize = {}", size);
         MEMORY_LOG.info("toClientNotifyTaskSize = {}", notifierClientSize);
-        MEMORY_LOG.info("sdkRpcTaskSize = {}", GlobalExecutor.sdkRpcExecutor.getQueue().size());
-        MEMORY_LOG.info("clusterRpcTaskSize = {}", GlobalExecutor.clusterRpcExecutor.getQueue().size());
-    
         MetricsMonitor.getNotifyTaskMonitor().set(size);
         MetricsMonitor.getNotifyClientTaskMonitor().set(notifierClientSize);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -95,7 +95,7 @@ public void onEvent(Event event) {
                     Queue<NotifySingleRpcTask> rpcQueue = new LinkedList<NotifySingleRpcTask>();
                     
                     for (Member member : ipList) {
-                        if (MemberUtil.getSupportedConnectionType(member) == null) {
+                        if (MemberUtil.isSupportedLongCon(member)) {
                             httpQueue.add(new NotifySingleTask(dataId, group, tenant, tag, dumpTs, member.getAddress(),
                                     evt.isBeta));
                         } else {

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -717,7 +717,6 @@ private synchronized void saveRuleToLocal(ConnectionLimitRule limitRule) throws
         if (!limitFile.exists()) {
             limitFile.createNewFile();
         }
-        
         DiskUtils.writeFile(limitFile, JacksonUtils.toJson(limitRule).getBytes(Constants.ENCODE), false);
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/HealthCheckRequestHandler.java
Patch:
@@ -32,7 +32,7 @@
 public class HealthCheckRequestHandler extends RequestHandler<HealthCheckRequest, HealthCheckResponse> {
     
     @Override
-    @TpsControl(pointName = "ServerCheck")
+    @TpsControl(pointName = "HealthCheck")
     public HealthCheckResponse handle(HealthCheckRequest request, RequestMeta meta) {
         return new HealthCheckResponse();
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/RequestHandlerRegistry.java
Patch:
@@ -89,7 +89,7 @@ public void onApplicationEvent(ContextRefreshedEvent event) {
                 //ignore.
             }
             Class tClass = (Class) ((ParameterizedType) clazz.getGenericSuperclass()).getActualTypeArguments()[0];
-            registryHandlers.putIfAbsent(tClass.getName(), requestHandler);
+            registryHandlers.putIfAbsent(tClass.getSimpleName(), requestHandler);
         }
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcBiStreamRequestAcceptor.java
Patch:
@@ -115,8 +115,10 @@ public void onNext(Payload payload) {
                     ConnectionMeta metaInfo = new ConnectionMeta(connectionId, clientIp, clientPort, localPort,
                             ConnectionType.GRPC.getType(), setUpRequest.getClientVersion(), appName,
                             setUpRequest.getLabels());
+                    metaInfo.setTenant(setUpRequest.getTenant());
                     
                     Connection connection = new GrpcConnection(metaInfo, responseObserver, CONTEXT_KEY_CHANNEL.get());
+                    connection.setAbilities(setUpRequest.getAbilities());
                     boolean started = ApplicationUtils.isStarted();
                     if (!started || !connectionManager.register(connectionId, connection)) {
                         //Not register to the connection manager if current server is over limit or server is starting.

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java
Patch:
@@ -59,7 +59,7 @@ public class GrpcRequestAcceptor extends RequestGrpc.RequestImplBase {
     private void traceIfNecessary(Payload grpcRequest, boolean receive) {
         String clientIp = CONTEXT_KEY_CONN_CLIENT_IP.get();
         String connectionId = CONTEXT_KEY_CONN_ID.get();
-    
+        
         try {
             if (connectionManager.traced(clientIp)) {
                 Loggers.REMOTE_DIGEST.info("[{}]Payload {},meta={},body={}", connectionId, receive ? "receive" : "send",
@@ -91,7 +91,7 @@ public void request(Payload grpcRequest, StreamObserver<Payload> responseObserve
         }
         
         // server check.
-        if (ServerCheckRequest.class.getName().equals(type)) {
+        if (ServerCheckRequest.class.getSimpleName().equals(type)) {
             Payload serverCheckResponseP = GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));
             traceIfNecessary(serverCheckResponseP, false);
             responseObserver.onNext(serverCheckResponseP);

File: api/src/main/java/com/alibaba/nacos/api/remote/DefaultRequestFuture.java
Patch:
@@ -167,7 +167,7 @@ public Response get(long timeout) throws TimeoutException, InterruptedException
             if (timeoutInnerTrigger != null) {
                 timeoutInnerTrigger.triggerOnTimeout();
             }
-            throw new TimeoutException("request timeout after " + timeout + " milliseconds.");
+            throw new TimeoutException("request timeout after " + timeout + " milliseconds, requestId=" + requestId);
         }
     }
     
@@ -190,7 +190,8 @@ public TimeoutHandler() {
         
         @Override
         public void run() {
-            setFailResult(new TimeoutException("Timeout After " + requestCallBack.getTimeout() + " millseconds."));
+            setFailResult(new TimeoutException(
+                    "Timeout After " + requestCallBack.getTimeout() + " milliseconds,requestId =" + requestId));
         }
     }
     

File: api/src/main/java/com/alibaba/nacos/api/remote/request/HealthCheckRequest.java
Patch:
@@ -17,11 +17,11 @@
 package com.alibaba.nacos.api.remote.request;
 
 /**
- * HeartBeatRequest.
+ * request to check server if unimpeded.
  *
  * @author liuzunfei
- * @version $Id: HeartBeatRequest.java, v 0.1 2020年07月14日 11:38 AM liuzunfei Exp $
+ * @version $Id: ServerCheckRequest.java, v 0.1 2020年07月22日 8:32 PM liuzunfei Exp $
  */
-public class HeartBeatRequest extends InternalRequest {
+public class HealthCheckRequest extends InternalRequest {
 
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/response/ErrorResponse.java
Patch:
@@ -22,6 +22,6 @@
  * @author liuzunfei
  * @version $Id: UnKnowResponse.java, v 0.1 2020年07月16日 9:47 PM liuzunfei Exp $
  */
-public class UnKnowResponse extends Response {
+public class ErrorResponse extends Response {
     
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/response/HealthCheckResponse.java
Patch:
@@ -17,11 +17,11 @@
 package com.alibaba.nacos.api.remote.response;
 
 /**
- * HeartBeatResponse.
+ * response of server check.
  *
  * @author liuzunfei
- * @version $Id: HeartBeatResponse.java, v 0.1 2020年07月14日 3:03 PM liuzunfei Exp $
+ * @version $Id: ServerCheckResponse.java, v 0.1 2020年07月22日 8:37 PM liuzunfei Exp $
  */
-public class HeartBeatResponse extends Response {
+public class HealthCheckResponse extends Response {
     
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/response/ResponseCode.java
Patch:
@@ -18,6 +18,7 @@
 
 /**
  * ResponseCode.
+ *
  * @author liuzunfei
  * @version $Id: ResponseCode.java, v 0.1 2020年07月14日 2:04 PM liuzunfei Exp $
  */
@@ -26,12 +27,12 @@ public enum ResponseCode {
     /**
      * Request success.
      */
-    SUCCESS(200, "response ok"),
+    SUCCESS(200, "Response ok"),
     
     /**
      * Request failed.
      */
-    FAIL(500, "response fail");
+    FAIL(500, "Response fail");
     
     int code;
     

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushRequestHandler.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.api.naming.remote.request.NotifySubscriberRequest;
 import com.alibaba.nacos.api.naming.remote.response.NotifySubscriberResponse;
 import com.alibaba.nacos.api.remote.request.Request;
-import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
 import com.alibaba.nacos.common.remote.client.ServerRequestHandler;
@@ -36,9 +35,9 @@ public class NamingPushRequestHandler implements ServerRequestHandler {
     public NamingPushRequestHandler(ServiceInfoHolder serviceInfoHolder) {
         this.serviceInfoHolder = serviceInfoHolder;
     }
-
+    
     @Override
-    public Response requestReply(Request request, RequestMeta requestMeta) {
+    public Response requestReply(Request request) {
         if (request instanceof NotifySubscriberRequest) {
             NotifySubscriberRequest notifyResponse = (NotifySubscriberRequest) request;
             serviceInfoHolder.processServiceInfo(notifyResponse.getServiceInfo());

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerRequestHandler.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.common.remote.client;
 
 import com.alibaba.nacos.api.remote.request.Request;
-import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
 
 /**
@@ -32,9 +31,8 @@ public interface ServerRequestHandler {
      * Handle request from server.
      *
      * @param request request
-     * @param requestMeta requestMeta
      * @return response.
      */
-    Response requestReply(Request request, RequestMeta requestMeta);
+    Response requestReply(Request request);
     
 }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigConnectionEventListener.java
Patch:
@@ -44,8 +44,7 @@ public void clientConnected(Connection connect) {
     @Override
     public void clientDisConnected(Connection connect) {
         String connectionId = connect.getMetaInfo().getConnectionId();
-        Loggers.REMOTE.info("client disconnected,clear config listen context, connetionId is {},client ip is {}",
-                connectionId, connect.getMetaInfo().getClientIp());
+        Loggers.REMOTE_DIGEST.info("[{}]client disconnected,clear config listen context", connectionId);
         configChangeListenContext.clearContextForConnectionId(connectionId);
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.remote.RequestHandler;
+import com.alibaba.nacos.core.remote.control.TpsControl;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -58,6 +59,7 @@ public ConfigPublishRequestHandler(PersistService persistService) {
     }
     
     @Override
+    @TpsControl(pointName = "ConfigPublish")
     @Secured(action = ActionTypes.WRITE, resource = "", parser = ConfigResourceParser.class)
     public ConfigPublishResponse handle(ConfigPublishRequest request, RequestMeta meta) throws NacosException {
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpChangeProcessor.java
Patch:
@@ -55,8 +55,7 @@ public boolean process(NacosTask task) {
         LogUtil.DEFAULT_LOG.warn("updateMd5 count:{}", updateMd5List.size());
         for (ConfigInfoWrapper config : updateMd5List) {
             final String groupKey = GroupKey2.getKey(config.getDataId(), config.getGroup());
-            ConfigCacheService.updateMd5(groupKey, config.getMd5(), config.getLastModified(), config.getContent(),
-                    config.getType());
+            ConfigCacheService.updateMd5(groupKey, config.getMd5(), config.getLastModified());
         }
         long endUpdateMd5 = System.currentTimeMillis();
         LogUtil.DEFAULT_LOG.warn("updateMd5 done,cost:{}", endUpdateMd5 - startUpdateMd5);

File: config/src/test/java/com/alibaba/nacos/config/server/service/ClientTrackServiceTest.java
Patch:
@@ -40,8 +40,8 @@ public void testTrackClientMd5() {
         String group = "online";
         String groupKey = GroupKey2.getKey(dataId, group);
         String md5 = "xxxxxxxxxxxxx";
-    
-        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis(), null, null);
+        
+        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis());
         
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
@@ -51,7 +51,7 @@ public void testTrackClientMd5() {
         Assert.assertEquals(1, ClientTrackService.subscriberCount());
         
         //服务端数据更新
-        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis(), null, null);
+        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis());
         Assert.assertEquals(false, ClientTrackService.isClientUptodate(clientIp).get(groupKey));
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcPushService.java
Patch:
@@ -52,7 +52,7 @@ public void pushWithCallback(String connectionId, ServerRequest request, PushCal
         Connection connection = connectionManager.getConnection(connectionId);
         if (connection != null) {
             try {
-                connection.asyncRequest(request, null, new AbstractRequestCallBack(requestCallBack.getTimeout()) {
+                connection.asyncRequest(request, new AbstractRequestCallBack(requestCallBack.getTimeout()) {
                     
                     @Override
                     public Executor getExecutor() {
@@ -97,7 +97,7 @@ public void pushWithoutAck(String connectionId, ServerRequest request) {
         Connection connection = connectionManager.getConnection(connectionId);
         if (connection != null) {
             try {
-                connection.request(request, null);
+                connection.request(request, 3000L);
             } catch (ConnectionAlreadyClosedException e) {
                 connectionManager.unregister(connectionId);
             } catch (Exception e) {

File: core/src/main/java/com/alibaba/nacos/core/remote/core/ServerLoaderInfoRequestHandler.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.request.ServerLoaderInfoRequest;
 import com.alibaba.nacos.api.remote.response.ServerLoaderInfoResponse;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.remote.ConnectionManager;
 import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -50,7 +51,7 @@ public ServerLoaderInfoResponse handle(ServerLoaderInfoRequest request, RequestM
         filter.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         serverLoaderInfoResponse
                 .putMetricsValue("sdkConCount", String.valueOf(connectionManager.currentClientsCount(filter)));
-        serverLoaderInfoResponse.putMetricsValue("countLimit", String.valueOf(connectionManager.countLimited()));
+        serverLoaderInfoResponse.putMetricsValue("limitRule", JacksonUtils.toJson(connectionManager.getConnectionLimitRule()));
         serverLoaderInfoResponse.putMetricsValue("load", String.valueOf(EnvUtil.getLoad()));
         serverLoaderInfoResponse.putMetricsValue("cpu", String.valueOf(EnvUtil.getCPU()));
         

File: core/src/main/java/com/alibaba/nacos/core/utils/GlobalExecutor.java
Patch:
@@ -44,13 +44,13 @@ public class GlobalExecutor {
     
     public static final ThreadPoolExecutor sdkRpcExecutor = new ThreadPoolExecutor(
             Runtime.getRuntime().availableProcessors(),
-            Runtime.getRuntime().availableProcessors() * RemoteUtils.getRemoteExecutorTimesOfProcessors(), 10L,
+            Runtime.getRuntime().availableProcessors() * RemoteUtils.getRemoteExecutorTimesOfProcessors(), 60L,
             TimeUnit.SECONDS, new SynchronousQueue(),
             new ThreadFactoryBuilder().setDaemon(true).setNameFormat("nacos-grpc-executor-%d").build());
     
     public static final ThreadPoolExecutor clusterRpcExecutor = new ThreadPoolExecutor(
             Runtime.getRuntime().availableProcessors(),
-            Runtime.getRuntime().availableProcessors() * RemoteUtils.getRemoteExecutorTimesOfProcessors(), 10L,
+            Runtime.getRuntime().availableProcessors() * RemoteUtils.getRemoteExecutorTimesOfProcessors(), 60L,
             TimeUnit.SECONDS, new SynchronousQueue(),
             new ThreadFactoryBuilder().setDaemon(true).setNameFormat("nacos-cluster-grpc-executor-%d").build());
     

File: core/src/main/java/com/alibaba/nacos/core/utils/RemoteUtils.java
Patch:
@@ -31,8 +31,7 @@ public class RemoteUtils {
     private static final int REMOTE_EXECUTOR_TIMES_OF_PROCESSORS = 64;
     
     /**
-     * get remote executors thread times of processors,default is 64.
-     * see the usage of this method for detail.
+     * get remote executors thread times of processors,default is 64. see the usage of this method for detail.
      *
      * @return times of processors.
      */

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -100,9 +100,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
             Method method = methodsCache.getMethod(req);
             
             if (method == null) {
-                // For #4701, Only support register API.
-                resp.sendError(HttpServletResponse.SC_NOT_FOUND,
-                        "Not found mehtod for path " + req.getMethod() + " " + req.getRequestURI());
+                chain.doFilter(request, response);
                 return;
             }
             

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -76,6 +76,7 @@ public String update(HttpServletRequest request) throws Exception {
         AbstractHealthChecker healthChecker = HealthCheckerFactory
                 .deserialize(WebUtils.required(request, "healthChecker"));
         clusterMetadata.setHealthChecker(healthChecker);
+        clusterMetadata.setHealthyCheckType(healthChecker.getType());
         clusterMetadata.setExtendData(
                 UtilsAndCommons.parseMetadata(WebUtils.optional(request, "metadata", StringUtils.EMPTY)));
         clusterOperatorV2.updateClusterMetadata(namespaceId, serviceName, clusterName, clusterMetadata);

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -386,6 +386,7 @@ public int getDefCkport() {
     
     public void setDefCkport(int defCkport) {
         this.defCkport = defCkport;
+        super.setDefaultCheckPort(defCkport);
     }
     
     /**
@@ -459,4 +460,4 @@ public void validate() {
                     "cluster name can only have these characters: 0-9a-zA-Z-, current: " + getName());
         }
     }
-}
\ No newline at end of file
+}

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ClusterMetadata.java
Patch:
@@ -36,7 +36,7 @@ public class ClusterMetadata implements Serializable {
     
     private String healthyCheckType = Tcp.TYPE;
     
-    private AbstractHealthChecker healthChecker;
+    private AbstractHealthChecker healthChecker = new Tcp();
     
     /**
      * Whether or not use instance port to do health check.

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -45,7 +45,7 @@
  *
  * @author xuanyin.zy
  */
-@Component
+@Component("httpHealthCheckProcessorV1")
 public class HttpHealthCheckProcessor implements HealthCheckProcessor {
     
     public static final String TYPE = "HTTP";

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/MysqlHealthCheckProcessor.java
Patch:
@@ -46,7 +46,7 @@
  *
  * @author nacos
  */
-@Component
+@Component("mysqlHealthCheckProcessorV1")
 @SuppressWarnings("PMD.ThreadPoolCreationRule")
 public class MysqlHealthCheckProcessor implements HealthCheckProcessor {
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -878,11 +878,12 @@ public void putService(Service service) {
                 }
             }
         }
-        serviceMap.get(service.getNamespaceId()).put(service.getName(), service);
+        serviceMap.get(service.getNamespaceId()).putIfAbsent(service.getName(), service);
     }
     
     private void putServiceAndInit(Service service) throws NacosException {
         putService(service);
+        service = getService(service.getNamespaceId(), service.getName());
         service.init();
         consistencyService
                 .listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), true), service);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -669,6 +669,7 @@ public RestResult<Map<String, Object>> cloneConfig(HttpServletRequest request,
             if (StringUtils.isNotBlank(ci.getAppName())) {
                 ci4save.setAppName(ci.getAppName());
             }
+            ci4save.setDesc(ci.getDesc());
             configInfoList4Clone.add(ci4save);
         }
         

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -2351,6 +2351,7 @@ public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoLis
                 configAdvanceInfo = new HashMap<>(16);
             }
             configAdvanceInfo.put("type", type);
+            configAdvanceInfo.put("desc", configInfo.getDesc());
             try {
                 addConfigInfo(srcIp, srcUser, configInfo2Save, time, configAdvanceInfo, notify, callFinally);
                 succCount++;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2599,6 +2599,7 @@ public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoLis
                 configAdvanceInfo = new HashMap<>(16);
             }
             configAdvanceInfo.put("type", type);
+            configAdvanceInfo.put("desc", configInfo.getDesc());
             try {
                 addConfigInfo(srcIp, srcUser, configInfo2Save, time, configAdvanceInfo, notify);
                 succCount++;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigCacheService.java
Patch:
@@ -607,11 +607,11 @@ public static boolean isUptodate(String groupKey, String md5, String ip, String
     }
     
     /**
-     * Try to add read lock. If it successed, then it can call {@link #releaseWriteLock(String)}.And it won't call if
+     * Try to add read lock. If it succeeded, then it can call {@link #releaseWriteLock(String)}.And it won't call if
      * failed.
      *
      * @param groupKey groupKey string value.
-     * @return 0 - No data and failed. Positive number 0 - Success. Negative number - lock failed。
+     * @return 0 - No data and failed. Positive number - lock succeeded. Negative number - lock failed。
      */
     public static int tryReadLock(String groupKey) {
         CacheItem groupItem = CACHE.get(groupKey);
@@ -635,7 +635,7 @@ public static void releaseReadLock(String groupKey) {
     }
     
     /**
-     * Try to add write lock. If it successed, then it can call {@link #releaseWriteLock(String)}.And it won't call if
+     * Try to add write lock. If it succeeded, then it can call {@link #releaseWriteLock(String)}.And it won't call if
      * failed.
      *
      * @param groupKey groupKey string value.

File: console/src/main/java/com/alibaba/nacos/console/config/ConsoleConfig.java
Patch:
@@ -50,9 +50,10 @@ public class ConsoleConfig {
      */
     @PostConstruct
     public void init() {
+        methodsCache.initClassMethod("com.alibaba.nacos.core.controller");
         methodsCache.initClassMethod("com.alibaba.nacos.naming.controllers");
-        methodsCache.initClassMethod("com.alibaba.nacos.console.controller");
         methodsCache.initClassMethod("com.alibaba.nacos.config.server.controller");
+        methodsCache.initClassMethod("com.alibaba.nacos.console.controller");
     }
     
     @Bean

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -100,7 +100,9 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
             Method method = methodsCache.getMethod(req);
             
             if (method == null) {
-                chain.doFilter(request, response);
+                // For #4701, Only support register API.
+                resp.sendError(HttpServletResponse.SC_NOT_FOUND,
+                        "Not found mehtod for path " + req.getMethod() + " " + req.getRequestURI());
                 return;
             }
             

File: console/src/main/java/com/alibaba/nacos/console/config/ConsoleConfig.java
Patch:
@@ -50,9 +50,10 @@ public class ConsoleConfig {
      */
     @PostConstruct
     public void init() {
+        methodsCache.initClassMethod("com.alibaba.nacos.core.controller");
         methodsCache.initClassMethod("com.alibaba.nacos.naming.controllers");
-        methodsCache.initClassMethod("com.alibaba.nacos.console.controller");
         methodsCache.initClassMethod("com.alibaba.nacos.config.server.controller");
+        methodsCache.initClassMethod("com.alibaba.nacos.console.controller");
     }
     
     @Bean

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -100,7 +100,9 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
             Method method = methodsCache.getMethod(req);
             
             if (method == null) {
-                chain.doFilter(request, response);
+                // For #4701, Only support register API.
+                resp.sendError(HttpServletResponse.SC_NOT_FOUND,
+                        "Not found mehtod for path " + req.getMethod() + " " + req.getRequestURI());
                 return;
             }
             

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigListener.java
Patch:
@@ -57,9 +57,9 @@
     /**
      * Nacos Config type.
      *
-     * @return "properties"
+     * @return default value is {@link ConfigType#UNSET}
      */
-    ConfigType type() default ConfigType.PROPERTIES;
+    ConfigType type() default ConfigType.UNSET;
     
     /**
      * Specify {@link NacosConfigConverter Nacos configuraion convertor} class to convert target type instance.

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigurationProperties.java
Patch:
@@ -72,9 +72,9 @@
     /**
      * config style.
      *
-     * @return default value is {@link ConfigType#PROPERTIES}
+     * @return default value is {@link ConfigType#UNSET}
      */
-    ConfigType type() default ConfigType.PROPERTIES;
+    ConfigType type() default ConfigType.UNSET;
     
     /**
      * It indicates the properties of current doBind bean is auto-refreshed when Nacos configuration is changed.

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -192,4 +192,7 @@ public class Constants {
     
     public static final String COLON = ":";
     
+    public static final String LINE_BREAK = "\n";
+    
+    
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosGetRequestProcessor.java
Patch:
@@ -28,6 +28,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosGetRequestProcessor extends AbstractProcessor implements RpcProcessor<GetRequest> {
     
     private static final String INTEREST_NAME = GetRequest.class.getName();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosLogProcessor.java
Patch:
@@ -28,6 +28,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosLogProcessor extends AbstractProcessor implements RpcProcessor<Log> {
     
     private static final String INTEREST_NAME = Log.class.getName();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -65,7 +65,7 @@ public PersistentServiceProcessor(ProtocolManager protocolManager, ClusterVersio
     @Override
     public void afterConstruct() {
         super.afterConstruct();
-        this.protocol.addLogProcessors(Collections.singletonList(this));
+        this.protocol.addRequestProcessors(Collections.singletonList(this));
         this.protocol.protocolMetaData()
                 .subscribe(Constants.NAMING_PERSISTENT_SERVICE_GROUP, MetadataKey.LEADER_META_DATA,
                         (o, arg) -> hasLeader = StringUtils.isNotBlank(String.valueOf(arg)));
@@ -95,7 +95,7 @@ public void put(String key, Record value) throws NacosException {
         final WriteRequest request = WriteRequest.newBuilder().setData(ByteString.copyFrom(serializer.serialize(req)))
                 .setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP).setOperation(Op.Write.desc).build();
         try {
-            protocol.submit(request);
+            protocol.write(request);
         } catch (Exception e) {
             throw new NacosException(ErrorCode.ProtoSubmitError.getCode(), e.getMessage());
         }
@@ -108,7 +108,7 @@ public void remove(String key) throws NacosException {
         final WriteRequest request = WriteRequest.newBuilder().setData(ByteString.copyFrom(serializer.serialize(req)))
                 .setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP).setOperation(Op.Delete.desc).build();
         try {
-            protocol.submit(request);
+            protocol.write(request);
         } catch (Exception e) {
             throw new NacosException(ErrorCode.ProtoSubmitError.getCode(), e.getMessage());
         }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosGetRequestProcessor.java
Patch:
@@ -28,6 +28,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosGetRequestProcessor extends AbstractProcessor implements RpcProcessor<GetRequest> {
     
     private static final String INTEREST_NAME = GetRequest.class.getName();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosLogProcessor.java
Patch:
@@ -28,6 +28,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosLogProcessor extends AbstractProcessor implements RpcProcessor<Log> {
     
     private static final String INTEREST_NAME = Log.class.getName();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -65,7 +65,7 @@ public PersistentServiceProcessor(ProtocolManager protocolManager, ClusterVersio
     @Override
     public void afterConstruct() {
         super.afterConstruct();
-        this.protocol.addLogProcessors(Collections.singletonList(this));
+        this.protocol.addRequestProcessors(Collections.singletonList(this));
         this.protocol.protocolMetaData()
                 .subscribe(Constants.NAMING_PERSISTENT_SERVICE_GROUP, MetadataKey.LEADER_META_DATA,
                         (o, arg) -> hasLeader = StringUtils.isNotBlank(String.valueOf(arg)));
@@ -95,7 +95,7 @@ public void put(String key, Record value) throws NacosException {
         final WriteRequest request = WriteRequest.newBuilder().setData(ByteString.copyFrom(serializer.serialize(req)))
                 .setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP).setOperation(Op.Write.desc).build();
         try {
-            protocol.submit(request);
+            protocol.write(request);
         } catch (Exception e) {
             throw new NacosException(ErrorCode.ProtoSubmitError.getCode(), e.getMessage());
         }
@@ -108,7 +108,7 @@ public void remove(String key) throws NacosException {
         final WriteRequest request = WriteRequest.newBuilder().setData(ByteString.copyFrom(serializer.serialize(req)))
                 .setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP).setOperation(Op.Delete.desc).build();
         try {
-            protocol.submit(request);
+            protocol.write(request);
         } catch (Exception e) {
             throw new NacosException(ErrorCode.ProtoSubmitError.getCode(), e.getMessage());
         }

File: istio/src/main/java/com/alibaba/nacos/istio/misc/IstioConfig.java
Patch:
@@ -29,7 +29,7 @@
 public class IstioConfig {
     
     @Value("${nacos.istio.mcp.server.enabled:false}")
-    private final boolean mcpServerEnabled = false;
+    private boolean mcpServerEnabled = false;
     
     public boolean isMcpServerEnabled() {
         return mcpServerEnabled;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -241,7 +241,7 @@ TimeUnit.SECONDS, new SynchronousQueue(),
                 
                 BiRequestStreamGrpc.BiRequestStreamStub biRequestStreamStub = BiRequestStreamGrpc
                         .newStub(newChannelStubTemp.getChannel());
-                GrpcConnection grpcConn = new GrpcConnection(serverInfo, super.executor);
+                GrpcConnection grpcConn = new GrpcConnection(serverInfo, executor);
                 
                 //create stream request and bind connection event to this connection.
                 StreamObserver<Payload> payloadStreamObserver = bindRequestStream(biRequestStreamStub, grpcConn);

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -66,6 +66,8 @@ public class PropertyKeyConst {
     public static final String NAMING_POLLING_THREAD_COUNT = "namingPollingThreadCount";
 
     public static final String NAMING_REQUEST_DOMAIN_RETRY_COUNT = "namingRequestDomainMaxRetryCount";
+    
+    public static final String NAMING_PUSH_EMPTY_PROTECTION = "namingPushEmptyProtection";
 
     /**
      * Get the key value of some variable value from the system property.

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcAckCallbackSynchronizer.java
Patch:
@@ -52,7 +52,7 @@ public void accept(Map.Entry<String, DefaultRequestFuture> stringDefaultPushFutu
             }).build();
     
     /**
-     * notify  ackid.
+     * notify  ack.
      */
     public static void ackNotify(String connectionId, Response response) {
         

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -453,6 +453,7 @@ public void shutdown() throws NacosException {
         LOGGER.info("{} do shutdown begin", className);
         ThreadUtils.shutdownThreadPool(executorService, LOGGER);
         ConfigHttpClientManager.getInstance().shutdown();
+        SpasAdapter.freeCredentialInstance();
         LOGGER.info("{} do shutdown stop", className);
     }
     

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialWatcher.java
Patch:
@@ -53,7 +53,6 @@ public class CredentialWatcher {
     
     private final ScheduledExecutorService executor;
     
-    @SuppressWarnings("PMD.AvoidUseTimerRule")
     public CredentialWatcher(String appName, CredentialService serviceInstance) {
         this.appName = appName;
         this.serviceInstance = serviceInstance;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -719,6 +719,7 @@ public void shutdown() throws NacosException {
         NAMING_LOGGER.info("{} do shutdown begin", className);
         ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
         NamingHttpClientManager.getInstance().shutdown();
+        SpasAdapter.freeCredentialInstance();
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -72,7 +72,7 @@ public GrpcClient(String name) {
     @Override
     public void shutdown() throws NacosException {
         super.shutdown();
-        if (executor!=null){
+        if (executor != null) {
             executor.shutdown();
         }
     }
@@ -239,7 +239,8 @@ private void sendResponse(Response response) {
     public Connection connectToServer(ServerInfo serverInfo) {
         try {
             if (executor == null) {
-                executor = new ThreadPoolExecutor(0, Runtime.getRuntime().availableProcessors()*8, 10L, TimeUnit.SECONDS, new SynchronousQueue(),
+                executor = new ThreadPoolExecutor(0, Runtime.getRuntime().availableProcessors() * 8, 10L,
+                        TimeUnit.SECONDS, new SynchronousQueue(),
                         new ThreadFactoryBuilder().setDaemon(true).setNameFormat("nacos-grpc-client-executor-%d")
                                 .build());
             }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/v2/DistroClientTransportAgent.java
Patch:
@@ -32,6 +32,7 @@
 import com.alibaba.nacos.core.distributed.distro.exception.DistroException;
 import com.alibaba.nacos.naming.cluster.remote.request.DistroDataRequest;
 import com.alibaba.nacos.naming.cluster.remote.response.DistroDataResponse;
+import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;
 
 import java.util.concurrent.Executor;
@@ -201,7 +202,7 @@ public DistroRpcCallbackWrapper(DistroCallback distroCallback) {
     
         @Override
         public Executor getExecutor() {
-            return null;
+            return GlobalExecutor.getCallbackExecutor();
         }
     
         @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/ConnectionBasedClientManager.java
Patch:
@@ -83,6 +83,7 @@ public boolean clientDisconnected(String clientId) {
         if (null == client) {
             return true;
         }
+        client.release();
         NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client));
         return true;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/EphemeralIpPortClientManager.java
Patch:
@@ -75,7 +75,7 @@ public boolean clientDisconnected(String clientId) {
             return true;
         }
         NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client));
-        client.destroy();
+        client.release();
         return true;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/PersistentIpPortClientManager.java
Patch:
@@ -65,7 +65,7 @@ public boolean clientDisconnected(String clientId) {
             return true;
         }
         NotifyCenter.publishEvent(new ClientEvent.ClientDisconnectEvent(client));
-        client.destroy();
+        client.release();
         return true;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/client/ClientOperationEvent.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.naming.core.v2.event.client;
 
-import com.alibaba.nacos.common.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 
 /**
  * Operation client event.
  *
  * @author xiweng.yy
  */
-public class ClientOperationEvent extends SlowEvent {
+public class ClientOperationEvent extends Event {
     
     private static final long serialVersionUID = -4582413232902517619L;
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/metadata/MetadataEvent.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.naming.core.v2.event.metadata;
 
-import com.alibaba.nacos.common.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 
 /**
  * Metadata event.
  *
  * @author xiweng.yy
  */
-public class MetadataEvent extends SlowEvent {
+public class MetadataEvent extends Event {
     
     private static final long serialVersionUID = -5842659852664110805L;
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/service/ServiceEvent.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.naming.core.v2.event.service;
 
-import com.alibaba.nacos.common.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 
 /**
  * Service event.
  *
  * @author xiweng.yy
  */
-public class ServiceEvent extends SlowEvent {
+public class ServiceEvent extends Event {
     
     private static final long serialVersionUID = -9173247502346692418L;
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -67,8 +67,8 @@ public void deregisterInstance(Service service, Instance instance, String client
         Client client = clientManager.getClient(clientId);
         InstancePublishInfo removedInstance = client.removeServiceInstance(singleton);
         client.setLastUpdatedTime();
-        NotifyCenter.publishEvent(new ClientOperationEvent.ClientDeregisterServiceEvent(singleton, clientId));
         if (null != removedInstance) {
+            NotifyCenter.publishEvent(new ClientOperationEvent.ClientDeregisterServiceEvent(singleton, clientId));
             NotifyCenter.publishEvent(
                     new MetadataEvent.InstanceMetadataEvent(singleton, removedInstance.getInstanceId(), true));
         }

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/PerformanceLoggerThread.java
Patch:
@@ -48,7 +48,7 @@ public class PerformanceLoggerThread {
     @Autowired
     private ClusterVersionJudgement versionJudgement;
     
-    private static final long PERIOD = 1 * 60;
+    private static final long PERIOD = 60;
     
     @PostConstruct
     public void init() {
@@ -73,8 +73,6 @@ public void refreshMetrics() {
      */
     @Scheduled(cron = "0/15 * * * * ?")
     public void collectMetrics() {
-        //        MetricsMonitor.getDomCountMonitor().set(serviceManager.getServiceCount());
-        //        MetricsMonitor.getIpCountMonitor().set(serviceManager.getInstanceCount());
         MetricsMonitor.getDomCountMonitor().set(com.alibaba.nacos.naming.core.v2.ServiceManager.getInstance().size());
         MetricsMonitor.getAvgPushCostMonitor().set(getAvgPushCost());
         metricsRaftLeader();

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/ServiceManager.java
Patch:
@@ -97,7 +97,9 @@ public Set<String> getAllNamespaces() {
      * @return removed service
      */
     public Service removeSingleton(Service service) {
-        namespaceSingletonMaps.get(service.getNamespace()).remove(service);
+        if (namespaceSingletonMaps.containsKey(service.getNamespace())) {
+            namespaceSingletonMaps.get(service.getNamespace()).remove(service);
+        }
         return singletonRepository.remove(service);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadataProcessor.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.consistency.entity.WriteRequest;
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
+import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.utils.Constants;
@@ -94,6 +95,7 @@ public Response onApply(WriteRequest request) {
             }
             return Response.newBuilder().setSuccess(true).build();
         } catch (Exception e) {
+            Loggers.RAFT.error("apply service metadata error: ", e);
             return Response.newBuilder().setSuccess(false).setErrMsg(e.getMessage()).build();
         } finally {
             readLock.unlock();

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -78,7 +78,9 @@ public Map<String, Object> getExtendInfo() {
     }
     
     public void setExtendInfo(Map<String, Object> extendInfo) {
-        this.extendInfo.putAll(extendInfo);
+        Map<String, Object> newExtendInfo = Collections.synchronizedMap(new TreeMap<>());
+        newExtendInfo.putAll(extendInfo);
+        this.extendInfo = newExtendInfo;
     }
     
     public String getIp() {

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java
Patch:
@@ -71,8 +71,8 @@ public static RpcServer initRpcServer(JRaftServer server, PeerId peerId) {
         registry.registerResponseInstance(Log.class.getName(), Response.getDefaultInstance());
         registry.registerResponseInstance(GetRequest.class.getName(), Response.getDefaultInstance());
     
-        registry.registerResponseInstance(WriteRequest.class.getName(), WriteRequest.getDefaultInstance());
-        registry.registerResponseInstance(ReadRequest.class.getName(), ReadRequest.getDefaultInstance());
+        registry.registerResponseInstance(WriteRequest.class.getName(), Response.getDefaultInstance());
+        registry.registerResponseInstance(ReadRequest.class.getName(), Response.getDefaultInstance());
         
         final RpcServer rpcServer = raftRpcFactory.createRpcServer(peerId.getEndpoint());
         RaftRpcServerFactory.addRaftRequestProcessors(rpcServer, RaftExecutor.getRaftCoreExecutor(),

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java
Patch:
@@ -53,7 +53,7 @@ public class AuthConfigs {
     /**
      * Token validity time(seconds).
      */
-    @Value("${nacos.core.auth.default.token.expire.seconds:1800}")
+    @Value("${nacos.core.auth.default.token.expire.seconds:18000}")
     private long tokenValidityInSeconds;
     
     /**

File: console/src/main/java/com/alibaba/nacos/console/controller/UserController.java
Patch:
@@ -28,12 +28,12 @@
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
+import com.alibaba.nacos.console.security.nacos.JwtTokenManager;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.NacosAuthManager;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import com.alibaba.nacos.console.security.nacos.users.NacosUser;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
-import com.alibaba.nacos.console.utils.JwtTokenUtils;
 import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
 import com.fasterxml.jackson.databind.node.ObjectNode;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -67,7 +67,7 @@
 public class UserController {
     
     @Autowired
-    private JwtTokenUtils jwtTokenUtils;
+    private JwtTokenManager jwtTokenManager;
     
     @Autowired
     private AuthenticationManager authenticationManager;
@@ -228,7 +228,7 @@ public Object login(@RequestParam String username, @RequestParam String password
             //将 Authentication 绑定到 SecurityContext
             SecurityContextHolder.getContext().setAuthentication(authentication);
             //生成Token
-            String token = jwtTokenUtils.createToken(authentication);
+            String token = jwtTokenManager.createToken(authentication);
             //将Token写入到Http头部
             response.addHeader(NacosAuthConfig.AUTHORIZATION_HEADER, "Bearer " + token);
             rr.setCode(200);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ClientBeatProcessorV2.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
 import com.alibaba.nacos.naming.core.v2.event.service.ServiceEvent;
-import com.alibaba.nacos.naming.core.v2.pojo.HeartBeatInstancePublishInfo;
+import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.healthcheck.RsInfo;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -55,7 +55,7 @@ public void run() {
         String serviceName = NamingUtils.getServiceName(rsInfo.getServiceName());
         String groupName = NamingUtils.getGroupName(rsInfo.getServiceName());
         Service service = Service.newService(namespace, groupName, serviceName, rsInfo.isEphemeral());
-        HeartBeatInstancePublishInfo instance = (HeartBeatInstancePublishInfo) client.getInstancePublishInfo(service);
+        HealthCheckInstancePublishInfo instance = (HealthCheckInstancePublishInfo) client.getInstancePublishInfo(service);
         if (instance.getIp().equals(ip) && instance.getPort() == port) {
             if (Loggers.EVT_LOG.isDebugEnabled()) {
                 Loggers.EVT_LOG.debug("[CLIENT-BEAT] refresh beat: {}", rsInfo.toString());

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ClientBeatUpdateTask.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
 import com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient;
-import com.alibaba.nacos.naming.core.v2.pojo.HeartBeatInstancePublishInfo;
+import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 
 /**
@@ -38,7 +38,7 @@ public ClientBeatUpdateTask(IpPortBasedClient client) {
     public void run() {
         long currentTime = System.currentTimeMillis();
         for (InstancePublishInfo each : client.getAllInstancePublishInfo()) {
-            ((HeartBeatInstancePublishInfo) each).setLastHeartBeatTime(currentTime);
+            ((HealthCheckInstancePublishInfo) each).setLastHeartBeatTime(currentTime);
         }
         client.setLastUpdatedTime();
     }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ExpiredInstanceChecker.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.naming.core.v2.event.client.ClientOperationEvent;
 import com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadata;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
-import com.alibaba.nacos.naming.core.v2.pojo.HeartBeatInstancePublishInfo;
+import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.InstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.misc.GlobalConfig;
@@ -44,14 +44,14 @@
 public class ExpiredInstanceChecker implements InstanceBeatChecker {
     
     @Override
-    public void doCheck(Client client, Service service, HeartBeatInstancePublishInfo instance) {
+    public void doCheck(Client client, Service service, HealthCheckInstancePublishInfo instance) {
         boolean expireInstance = ApplicationUtils.getBean(GlobalConfig.class).isExpireInstance();
         if (expireInstance && isExpireInstance(service, instance)) {
             deleteIp(client, service, instance);
         }
     }
     
-    private boolean isExpireInstance(Service service, HeartBeatInstancePublishInfo instance) {
+    private boolean isExpireInstance(Service service, HealthCheckInstancePublishInfo instance) {
         long deleteTimeout = getTimeout(service, instance);
         return System.currentTimeMillis() - instance.getLastHeartBeatTime() > deleteTimeout;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/InstanceBeatChecker.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.healthcheck.heartbeat;
 
 import com.alibaba.nacos.naming.core.v2.client.Client;
-import com.alibaba.nacos.naming.core.v2.pojo.HeartBeatInstancePublishInfo;
+import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 
 /**
@@ -34,5 +34,5 @@ public interface InstanceBeatChecker {
      * @param service  service of instance
      * @param instance instance publish info
      */
-    void doCheck(Client client, Service service, HeartBeatInstancePublishInfo instance);
+    void doCheck(Client client, Service service, HealthCheckInstancePublishInfo instance);
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/InstanceEnableBeatCheckInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadata;
 import com.alibaba.nacos.naming.core.v2.metadata.NamingMetadataManager;
-import com.alibaba.nacos.naming.core.v2.pojo.HeartBeatInstancePublishInfo;
+import com.alibaba.nacos.naming.core.v2.pojo.HealthCheckInstancePublishInfo;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
@@ -35,7 +35,7 @@ public class InstanceEnableBeatCheckInterceptor extends AbstractBeatCheckInterce
     @Override
     public boolean intercept(InstanceBeatCheckTask object) {
         NamingMetadataManager metadataManager = ApplicationUtils.getBean(NamingMetadataManager.class);
-        HeartBeatInstancePublishInfo instance = object.getInstancePublishInfo();
+        HealthCheckInstancePublishInfo instance = object.getInstancePublishInfo();
         Optional<InstanceMetadata> metadata = metadataManager.getInstanceMetadata(object.getService(), instance.getInstanceId());
         if (metadata.isPresent() && metadata.get().getExtendData().containsKey(UtilsAndCommons.ENABLE_CLIENT_BEAT)) {
             return ConvertUtils.toBoolean(metadata.get().getExtendData().get(UtilsAndCommons.ENABLE_CLIENT_BEAT).toString());

File: naming/src/main/java/com/alibaba/nacos/naming/misc/GlobalExecutor.java
Patch:
@@ -116,8 +116,8 @@ public class GlobalExecutor {
             .newScheduledExecutorService(ClassUtils.getCanonicalName(NamingApp.class), DEFAULT_THREAD_COUNT,
                     new NameThreadFactory("com.alibaba.nacos.naming.supersense.checker"));
     
-    private static final ScheduledExecutorService TCP_CHECK_EXECUTOR = ExecutorFactory.Managed
-            .newSingleScheduledExecutorService(ClassUtils.getCanonicalName(NamingApp.class),
+    private static final ExecutorService TCP_CHECK_EXECUTOR = ExecutorFactory.Managed
+            .newFixedExecutorService(ClassUtils.getCanonicalName(NamingApp.class), 2,
                     new NameThreadFactory("com.alibaba.nacos.naming.tcp.check.worker"));
     
     private static final ScheduledExecutorService NAMING_HEALTH_EXECUTOR = ExecutorFactory.Managed

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java
Patch:
@@ -53,7 +53,7 @@ public class AuthConfigs {
     /**
      * Token validity time(seconds).
      */
-    @Value("${nacos.core.auth.default.token.expire.seconds:1800}")
+    @Value("${nacos.core.auth.default.token.expire.seconds:18000}")
     private long tokenValidityInSeconds;
     
     /**

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigHttpClientManager.java
Patch:
@@ -164,7 +164,7 @@ public String getStatusText() {
         }
         
         @Override
-        public void close() throws IOException {
+        public void close() {
         
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ConcurrentDiskUtil.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.client.config.utils;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -89,7 +90,7 @@ public static String getFileContent(File file, String charsetName) throws IOExce
                 rlock = null;
             }
             if (fis != null) {
-                fis.close();
+                IoUtils.closeQuietly(fis);
                 fis = null;
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ConcurrentDiskUtil.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.client.naming.cache;
 
+import com.alibaba.nacos.common.utils.IoUtils;
+
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
@@ -88,7 +90,7 @@ public static String getFileContent(File file, String charsetName) throws IOExce
                 rlock = null;
             }
             if (fis != null) {
-                fis.close();
+                IoUtils.closeQuietly(fis);
                 fis = null;
             }
         }

File: common/src/main/java/com/alibaba/nacos/common/http/client/response/HttpClientResponse.java
Patch:
@@ -62,9 +62,7 @@ public interface HttpClientResponse extends Closeable {
     
     /**
      * close response InputStream.
-     *
-     * @throws IOException ex
      */
     @Override
-    void close() throws IOException;
+    void close();
 }

File: common/src/main/java/com/alibaba/nacos/common/utils/ResourceUtils.java
Patch:
@@ -143,7 +143,7 @@ public static Properties getResourceAsProperties(ClassLoader loader, String reso
         Properties props = new Properties();
         InputStream in = getResourceAsStream(loader, resource);
         props.load(in);
-        in.close();
+        IoUtils.closeQuietly(in);
         return props;
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.enums.FileTypeEnum;
 import com.alibaba.nacos.config.server.model.CacheItem;
@@ -276,9 +277,7 @@ public String doGetConfig(HttpServletRequest request, HttpServletResponse respon
                 
             } finally {
                 releaseConfigReadLock(groupKey);
-                if (null != fis) {
-                    fis.close();
-                }
+                IoUtils.closeQuietly(fis);
             }
         } else if (lockResult == 0) {
             

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_Interceptors_ITCase.java
Patch:
@@ -91,7 +91,7 @@ public String getStatusText() {
                 }
                 
                 @Override
-                public void close() throws IOException {
+                public void close() {
                 
                 }
             };

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -128,7 +128,7 @@ public static void shutdownThreadPool(ExecutorService executor, Logger logger) {
         while (retry > 0) {
             retry--;
             try {
-                if (executor.awaitTermination(1, TimeUnit.SECONDS)) {
+                if (executor.awaitTermination(100, TimeUnit.MILLISECONDS)) {
                     return;
                 }
             } catch (InterruptedException e) {

File: api/src/main/java/com/alibaba/nacos/api/remote/RpcScheduledExecutor.java
Patch:
@@ -29,9 +29,9 @@ public class RpcScheduledExecutor extends ScheduledThreadPoolExecutor {
     
     public static final RpcScheduledExecutor TIMEOUT_SCHEDULER = new RpcScheduledExecutor(0,
             "com.alibaba.nacos.remote.TimerScheduler");
-
-    public static final RpcScheduledExecutor COMMON_SERVER_EXECUTOR = new RpcScheduledExecutor(
-            0, "com.alibaba.nacos.remote.ServerCommonScheduler");
+    
+    public static final RpcScheduledExecutor COMMON_SERVER_EXECUTOR = new RpcScheduledExecutor(0,
+            "com.alibaba.nacos.remote.ServerCommonScheduler");
     
     public RpcScheduledExecutor(int corePoolSize, final String threadName) {
         super(corePoolSize, new ThreadFactory() {

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/MemoryMonitor.java
Patch:
@@ -41,7 +41,7 @@ public MemoryMonitor(AsyncNotifyService notifySingleService) {
                 .scheduleConfigTask(new PrintGetConfigResponeTask(), DELAY_SECONDS, DELAY_SECONDS, TimeUnit.SECONDS);
         
         ConfigExecutor
-                .scheduleConfigTask(new NotifyTaskQueueMonitorTask(notifySingleService), DELAY_SECONDS, DELAY_SECONDS,
+                .scheduleConfigTask(new ThreadTaskQueueMonitorTask(notifySingleService), DELAY_SECONDS, DELAY_SECONDS,
                         TimeUnit.SECONDS);
         
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcConnection.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.core.remote.grpc;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.api.grpc.auto.Metadata;
 import com.alibaba.nacos.api.remote.DefaultRequestFuture;
 import com.alibaba.nacos.api.remote.RequestCallBack;
 import com.alibaba.nacos.api.remote.RequestFuture;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java
Patch:
@@ -222,7 +222,7 @@ public final void start() throws NacosException {
             return;
         }
         
-        executor = new ScheduledThreadPoolExecutor(0, new ThreadFactory() {
+        executor = new ScheduledThreadPoolExecutor(2, new ThreadFactory() {
             @Override
             public Thread newThread(Runnable r) {
                 Thread t = new Thread(r);
@@ -290,7 +290,8 @@ public void run() {
                 try {
                     RpcClient.this.shutdown();
                 } catch (NacosException e) {
-                    e.printStackTrace();
+                    LoggerUtils.printIfErrorEnabled(LOGGER, "RpcClient shutdown exception, errorMessage ={}",
+                            e.getMessage());
                 }
                 
             }

File: core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java
Patch:
@@ -78,9 +78,9 @@ public Response filter(Request request, RequestMeta meta, Class handlerClazz) {
         
         Response response = null;
         try {
-            response = (Response) getResponseClazz(handlerClazz).newInstance();
+            response = (Response) getResponseClazz(handlerClazz).getDeclaredConstructor().newInstance();
         } catch (Exception e) {
-            Loggers.AUTH.error("auth fail, request: {},exception:", request.getClass().getSimpleName(), e);
+            Loggers.AUTH.error("auth fail, request: {},exception:{}", request.getClass().getSimpleName(), e);
             
         }
         

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -555,11 +555,11 @@ private Map<String, String> getLabels() {
             return labels;
         }
         
-        private void initHandlerRpcClient(final RpcClient rpcClientInner) {
+        private void initRpcClientHandler(final RpcClient rpcClientInner) {
             /*
              * Register Listen Change Handler
              */
-            rpcClientInner.registerServerPushResponseHandler((request, requestMeta) -> {
+            rpcClientInner.registerServerRequestHandler((request, requestMeta) -> {
                 if (request instanceof ConfigChangeNotifyRequest) {
                     ConfigChangeNotifyRequest configChangeNotifyRequest = (ConfigChangeNotifyRequest) request;
                     LOGGER.info("[{}] [server-push] config changed. dataId={}, group={}", getName(),
@@ -818,7 +818,7 @@ private synchronized RpcClient ensureRpcClient(String taskId) throws NacosExcept
             RpcClient rpcClient = RpcClientFactory
                     .createClient("config-" + taskId + "-" + uuid, getConnectionType(), newlabels);
             if (rpcClient.isWaitInitiated()) {
-                initHandlerRpcClient(rpcClient);
+                initRpcClientHandler(rpcClient);
                 rpcClient.start();
             }
             

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -86,7 +86,7 @@ public NamingGrpcClientProxy(String namespaceId, ServerListFactory serverListFac
     private void start(ServerListFactory serverListFactory, ServiceInfoHolder serviceInfoHolder) throws NacosException {
         rpcClient.init(serverListFactory);
         rpcClient.start();
-        rpcClient.registerServerPushResponseHandler(new NamingPushResponseHandler(serviceInfoHolder));
+        rpcClient.registerServerRequestHandler(new NamingPushRequestHandler(serviceInfoHolder));
         rpcClient.registerConnectionListener(namingGrpcConnectionEventListener);
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushRequestHandler.java
Patch:
@@ -25,15 +25,15 @@
 import com.alibaba.nacos.common.remote.client.ServerRequestHandler;
 
 /**
- * Naming push response handler.
+ * Naming push request handler.
  *
  * @author xiweng.yy
  */
-public class NamingPushResponseHandler implements ServerRequestHandler {
+public class NamingPushRequestHandler implements ServerRequestHandler {
     
     private final ServiceInfoHolder serviceInfoHolder;
     
-    public NamingPushResponseHandler(ServiceInfoHolder serviceInfoHolder) {
+    public NamingPushRequestHandler(ServiceInfoHolder serviceInfoHolder) {
         this.serviceInfoHolder = serviceInfoHolder;
     }
 

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerRequestHandler.java
Patch:
@@ -21,10 +21,10 @@
 import com.alibaba.nacos.api.remote.response.Response;
 
 /**
- * ServerPushResponseHandler.
+ * ServerRequestHandler, to process the request from server side.
  *
  * @author liuzunfei
- * @version $Id: ServerPushResponseHandler.java, v 0.1 2020年07月14日 11:41 AM liuzunfei Exp $
+ * @version $Id: ServerRequestHandler.java, v 0.1 2020年07月14日 11:41 AM liuzunfei Exp $
  */
 public interface ServerRequestHandler {
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClusterClient.java
Patch:
@@ -17,10 +17,10 @@
 package com.alibaba.nacos.common.remote.client.grpc;
 
 /**
- * sdk client for grpc.
+ * gRPC client for cluster.
  *
  * @author liuzunfei
- * @version $Id: GrpcSdkClient.java, v 0.1 2020年09月07日 11:05 AM liuzunfei Exp $
+ * @version $Id: GrpcClusterClient.java, v 0.1 2020年09月07日 11:05 AM liuzunfei Exp $
  */
 public class GrpcClusterClient extends GrpcClient {
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConnection.java
Patch:
@@ -42,7 +42,7 @@
 import java.util.concurrent.TimeoutException;
 
 /**
- * grpc connection.
+ * gRPC connection.
  *
  * @author liuzunfei
  * @version $Id: GrpcConnection.java, v 0.1 2020年08月09日 1:36 PM liuzunfei Exp $

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcOpsClient.java
Patch:
@@ -17,10 +17,10 @@
 package com.alibaba.nacos.common.remote.client.grpc;
 
 /**
- * sdk client for grpc.
+ * gRPC client for ops.
  *
  * @author liuzunfei
- * @version $Id: GrpcSdkClient.java, v 0.1 2020年09月07日 11:05 AM liuzunfei Exp $
+ * @version $Id: GrpcOpsClient.java, v 0.1 2020年09月07日 11:05 AM liuzunfei Exp $
  */
 public class GrpcOpsClient extends GrpcClient {
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcSdkClient.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.common.remote.client.grpc;
 
 /**
- * sdk client for grpc.
+ * gRPC client for sdk.
  *
  * @author liuzunfei
  * @version $Id: GrpcSdkClient.java, v 0.1 2020年09月07日 11:05 AM liuzunfei Exp $

File: sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java
Patch:
@@ -366,9 +366,10 @@ public static Resource getApplicationConfFileResource() {
     }
     
     private static Resource getCustomFileResource() {
-        String path = getProperty("spring.config.location");
+        String path = getProperty("spring.config.additional-location");
+        InputStream inputStream = null;
         if (StringUtils.isNotBlank(path) && path.contains(FILE_PREFIX)) {
-            String[] paths = path.split(",");
+            String[] paths = path.split(",", -1);
             path = paths[paths.length - 1].substring(FILE_PREFIX.length());
             return getRelativePathResource(path, "application.properties");
         }

File: sys/src/main/java/com/alibaba/nacos/sys/env/NacosAutoRefreshPropertySourceLoader.java
Patch:
@@ -38,6 +38,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosAutoRefreshPropertySourceLoader implements PropertySourceLoader {
     
     private final Map<String, Object> properties = new ConcurrentHashMap<>(16);

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthConfig.java
Patch:
@@ -56,7 +56,9 @@ public class NacosAuthConfig extends WebSecurityConfigurerAdapter {
     public static final String TOKEN_PREFIX = "Bearer ";
     
     public static final String CONSOLE_RESOURCE_NAME_PREFIX = "console/";
-    
+
+    public static final String UPDATE_PASSWORD_ENTRY_POINT = CONSOLE_RESOURCE_NAME_PREFIX + "user/password";
+
     @Autowired
     private Environment env;
     

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -64,7 +64,9 @@ public class PropertyKeyConst {
     public static final String NAMING_CLIENT_BEAT_THREAD_COUNT = "namingClientBeatThreadCount";
     
     public static final String NAMING_POLLING_THREAD_COUNT = "namingPollingThreadCount";
-    
+
+    public static final String NAMING_REQUEST_DOMAIN_RETRY_COUNT = "namingRequestDomainMaxRetryCount";
+
     /**
      * Get the key value of some variable value from the system property.
      */

File: api/src/main/java/com/alibaba/nacos/api/cmdb/spi/CmdbService.java
Patch:
@@ -93,7 +93,7 @@ public interface CmdbService {
      *
      * @param entityName name of entity
      * @param entityType type of entity
-     * @return
+     * @return entity.
      */
     Entity getEntity(String entityName, String entityType);
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -100,13 +100,13 @@ public static class ConfigListenContext {
         public ConfigListenContext() {
         
         }
-    
+        
         @Override
         public String toString() {
             return "ConfigListenContext{" + "group='" + group + '\'' + ", md5='" + md5 + '\'' + ", dataId='" + dataId
                     + '\'' + ", tenant='" + tenant + '\'' + '}';
         }
-    
+        
         /**
          * Getter method for property <tt>group</tt>.
          *

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/cluster/ConfigChangeClusterSyncRequest.java
Patch:
@@ -41,7 +41,7 @@ public class ConfigChangeClusterSyncRequest extends AbstractConfigRequest {
     /**
      * is beta.
      *
-     * @return
+     * @return is beta or not.
      */
     public boolean isBeta() {
         return "Y".equalsIgnoreCase(isBeta);

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java
Patch:
@@ -57,7 +57,7 @@ public void addLabel(String key, String value) {
      *
      * @param errorCode errorCode.
      * @param message   message.
-     * @return
+     * @return response.
      */
     public static ConfigQueryResponse buildFailResponse(int errorCode, String message) {
         ConfigQueryResponse response = new ConfigQueryResponse();
@@ -66,10 +66,10 @@ public static ConfigQueryResponse buildFailResponse(int errorCode, String messag
     }
     
     /**
-     * Buidl success resposne.
+     * Build success response.
      *
      * @param content content.
-     * @return
+     * @return response.
      */
     public static ConfigQueryResponse buildSuccessResponse(String content) {
         ConfigQueryResponse response = new ConfigQueryResponse();

File: api/src/main/java/com/alibaba/nacos/api/remote/DefaultRequestFuture.java
Patch:
@@ -82,7 +82,7 @@ public DefaultRequestFuture(String connectionId, String requestId, RequestCallBa
         this.requestId = requestId;
         this.connectionId = connectionId;
         if (requestCallBack != null) {
-            this.timeoutFuture = RpcScheduledExecutor.TIMEOUT_SHEDULER
+            this.timeoutFuture = RpcScheduledExecutor.TIMEOUT_SCHEDULER
                     .schedule(new TimeoutHandler(), requestCallBack.getTimeout(), TimeUnit.MILLISECONDS);
         }
         this.timeoutInnerTrigger = timeoutInnerTrigger;

File: api/src/main/java/com/alibaba/nacos/api/remote/RequestCallBack.java
Patch:
@@ -31,14 +31,14 @@ public interface RequestCallBack<T extends Response> {
     /**
      * get executor on callback.
      *
-     * @return
+     * @return executor.
      */
     public Executor getExecutor();
     
     /**
      * get timeout mills.
      *
-     * @return
+     * @return timeouts.
      */
     public long getTimeout();
     

File: api/src/main/java/com/alibaba/nacos/api/remote/RequestFuture.java
Patch:
@@ -31,7 +31,7 @@ public interface RequestFuture {
     
     /**
      * check that it is done or not..
-     * @return
+     * @return is done .
      */
     boolean isDone();
     

File: api/src/main/java/com/alibaba/nacos/api/remote/Requester.java
Patch:
@@ -87,7 +87,7 @@ public void asyncRequest(Request request, RequestMeta requestMeta, RequestCallBa
     /**
      * check this requester is busy.
      *
-     * @return
+     * @return busy or not.
      */
     public boolean isBusy();
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/request/Request.java
Patch:
@@ -115,6 +115,6 @@ public void clearHeaders() {
     
     @Override
     public String toString() {
-        return "Request{" + "headers=" + headers + ", requestId='" + requestId + '\'' + '}';
+        return this.getClass().getSimpleName() + "{" + "headers=" + headers + ", requestId='" + requestId + '\'' + '}';
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/response/Response.java
Patch:
@@ -52,9 +52,9 @@ public void setRequestId(String requestId) {
     }
     
     /**
-     * Check Response  is Successd.
+     * Check Response  is Successed.
      *
-     * @return
+     * @return success or not.
      */
     public boolean isSuccess() {
         return this.resultCode == ResponseCode.SUCCESS.getCode();

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -211,7 +211,7 @@ public static void checkContent(String content) throws NacosException {
     /**
      * check whether still using http .
      *
-     * @return
+     * @return use http transport .
      */
     public static boolean useHttpSwitch() {
         String useHttpSwitch = System.getProperty("clientworker.use.http.switch");
@@ -221,7 +221,7 @@ public static boolean useHttpSwitch() {
     /**
      * get connection type for remote.
      *
-     * @return
+     * @return connection type.
      */
     public static String configRemoteConnectionType() {
         String remoteConnectionType = System.getProperty("nacos.remote.config.connectiontype");

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientFactory.java
Patch:
@@ -68,7 +68,7 @@ public static RpcClient getClient(String clientName) {
      *
      * @param clientName     client name.
      * @param connectionType client type.
-     * @return
+     * @return rpc client.
      */
     public static RpcClient createClient(String clientName, ConnectionType connectionType, Map<String, String> labels) {
         String clientNameInner = clientName;
@@ -97,7 +97,7 @@ public static RpcClient createClient(String clientName, ConnectionType connectio
      *
      * @param clientName     client name.
      * @param connectionType client type.
-     * @return
+     * @return rpc client.
      */
     public static RpcClient createClusterClient(String clientName, ConnectionType connectionType,
             Map<String, String> labels) {

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerListFactory.java
Patch:
@@ -28,20 +28,20 @@ public interface ServerListFactory {
     /**
      * switch to a new server and get it.
      *
-     * @return
+     * @return server " ip:port".
      */
     String genNextServer();
     
     /**
      * get current server.
-     * @return
+     * @return server " ip:port".
      */
     String getCurrentServer();
     
     /**
      * get current server.
      *
-     * @return
+     * @return servers.
      */
     List<String> getServerList();
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/rsocket/RsocketConnection.java
Patch:
@@ -122,7 +122,7 @@ public Payload apply(Throwable throwable) {
     
     private static <T> CompletableFuture<T> failAfter(final long timeouts) {
         final CompletableFuture<T> promise = new CompletableFuture<T>();
-        RpcScheduledExecutor.TIMEOUT_SHEDULER.schedule(new Callable<Object>() {
+        RpcScheduledExecutor.TIMEOUT_SCHEDULER.schedule(new Callable<Object>() {
             @Override
             public Object call() throws Exception {
                 final TimeoutException ex = new TimeoutException("Timeout after " + timeouts);

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -109,7 +109,7 @@ public static byte[] tryDecompress(byte[] raw) throws Exception {
      *
      * @param str      strings to be compressed.
      * @param encoding encoding.
-     * @return
+     * @return byte[]
      */
     public static byte[] tryCompress(String str, String encoding) {
         if (str == null || str.length() == 0) {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -185,7 +185,7 @@ public Boolean publishConfig(HttpServletRequest request, HttpServletResponse res
     }
     
     /**
-     * Get configure board infomation fail.
+     * Get configure board information fail.
      *
      * @throws ServletException ServletException.
      * @throws IOException      IOException.

File: core/src/main/java/com/alibaba/nacos/core/remote/ClientConnectionEventListener.java
Patch:
@@ -30,7 +30,7 @@
 public abstract class ClientConnectionEventListener {
     
     /**
-     * lisnter name.
+     * listener name.
      */
     private String name;
     

File: core/src/main/java/com/alibaba/nacos/core/remote/RequestHandlerRegistry.java
Patch:
@@ -41,10 +41,10 @@ public class RequestHandlerRegistry implements ApplicationContextAware {
     Map<String, RequestHandler> registryHandlers = new HashMap<String, RequestHandler>();
     
     /**
-     * Get Reuquest Handler By request Type.
+     * Get Request Handler By request Type.
      *
      * @param requestType see definitions  of sub constants classes of RequestTypeConstants
-     * @return
+     * @return request handler.
      */
     public RequestHandler getByRequestType(String requestType) {
         if (!registryHandlers.containsKey(requestType)) {

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -131,15 +131,15 @@ public Attributes transportReady(Attributes transportAttrs) {
                                 .set(TRANS_KEY_CONN_ID, UuidUtils.generateUuid()).set(TRANS_KEY_CLIENT_PORT, remotePort)
                                 .set(TRANS_KEY_LOCAL_PORT, localPort).build();
                         String connectionId = attrWrapper.get(TRANS_KEY_CONN_ID);
-                        Loggers.REMOTE.info("Connection transportReady, connectionId = {}", connectionId);
+                        Loggers.REMOTE_DIGEST.info("Connection transportReady,connectionId = {} ", connectionId);
                         return attrWrapper;
                         
                     }
                     
                     @Override
                     public void transportTerminated(Attributes transportAttrs) {
                         String connectionId = transportAttrs.get(TRANS_KEY_CONN_ID);
-                        Loggers.REMOTE.info("Connection transportTerminated, connectionId = {}", connectionId);
+                        Loggers.REMOTE_DIGEST.info("Connection transportTerminated,connectionId = {} ", connectionId);
                         connectionManager.unregister(connectionId);
                     }
                 }).build();

File: core/src/main/java/com/alibaba/nacos/core/remote/rsocket/RsocketConnection.java
Patch:
@@ -60,7 +60,7 @@ public RsocketConnection(ConnectionMetaInfo metaInfo, RSocket clientSocket) {
     
     private static <T> CompletableFuture<T> failAfter(final long timeouts) {
         final CompletableFuture<T> promise = new CompletableFuture<T>();
-        RpcScheduledExecutor.TIMEOUT_SHEDULER.schedule(new Callable<Object>() {
+        RpcScheduledExecutor.TIMEOUT_SCHEDULER.schedule(new Callable<Object>() {
             @Override
             public Object call() throws Exception {
                 final TimeoutException ex = new TimeoutException("Timeout after " + timeouts);

File: core/src/main/java/com/alibaba/nacos/core/utils/StringPool.java
Patch:
@@ -36,7 +36,7 @@ public class StringPool {
      * get singleton string value from the pool.
      *
      * @param key key string to be pooled.
-     * @return
+     * @return value after pooled.
      */
     public static String get(String key) {
         if (key == null) {

File: core/src/main/java/com/alibaba/nacos/core/remote/BaseRpcServer.java
Patch:
@@ -105,14 +105,14 @@ public int getServicePort() {
      * @throws Exception throw if stop server fail.
      */
     public final void stopServer() throws Exception {
-        shundownServer();
+        shutdownServer();
     }
     
     /**
      * the increase offset of nacos server port for rpc server port.
      *
      * @return
      */
-    public abstract void shundownServer();
+    public abstract void shutdownServer();
     
 }

File: core/src/main/java/com/alibaba/nacos/core/remote/rsocket/RsocketRpcServer.java
Patch:
@@ -246,7 +246,7 @@ public ConnectionType getConnectionType() {
     }
     
     @Override
-    public void shundownServer() {
+    public void shutdownServer() {
         if (this.closeChannel != null && !closeChannel.isDisposed()) {
             this.closeChannel.dispose();
         }

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/executor/PushExecutorDelegateTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.push.v2.executor;
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import org.junit.Before;
 import org.junit.Test;

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/executor/PushExecutorRpcImplTest.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.naming.remote.request.NotifySubscriberRequest;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.core.remote.RpcPushService;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.pojo.Subscriber;

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/executor/PushExecutorUdpImplTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.push.v2.executor;
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.naming.push.UdpPushService;
 import org.junit.Before;

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/task/FixturePushExecutor.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.push.v2.task;
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.naming.pojo.Subscriber;
 import com.alibaba.nacos.naming.push.v2.executor.PushExecutor;
 

File: naming/src/test/java/com/alibaba/nacos/naming/push/v2/task/PushDelayTaskExecuteEngineTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.push.v2.task;
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.naming.core.v2.client.Client;
 import com.alibaba.nacos.naming.core.v2.client.manager.ClientManager;
 import com.alibaba.nacos.naming.core.v2.index.ClientServiceIndexesManager;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/AbstractHealthChecker.java
Patch:
@@ -35,7 +35,8 @@
 @JsonTypeInfo(use = Id.NAME, property = "type", defaultImpl = None.class)
 @JsonSubTypes({@JsonSubTypes.Type(name = Http.TYPE, value = Http.class),
         @JsonSubTypes.Type(name = Mysql.TYPE, value = Mysql.class),
-        @JsonSubTypes.Type(name = Tcp.TYPE, value = Tcp.class)})
+        @JsonSubTypes.Type(name = Tcp.TYPE, value = Tcp.class),
+        @JsonSubTypes.Type(name = None.TYPE, value = None.class)})
 public abstract class AbstractHealthChecker implements Cloneable, Serializable {
     
     private static final long serialVersionUID = 3848305577423336421L;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -29,6 +29,7 @@
 import com.alibaba.nacos.naming.core.ServiceManager;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
+import com.alibaba.nacos.naming.web.NamingResourceParser;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.math.NumberUtils;
@@ -59,7 +60,7 @@ public class ClusterController {
      * @throws Exception if failed
      */
     @PutMapping
-    @Secured(action = ActionTypes.WRITE)
+    @Secured(action = ActionTypes.WRITE, parser = NamingResourceParser.class)
     public String update(HttpServletRequest request) throws Exception {
         
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -35,7 +35,7 @@ public class ConfigBatchListenRequest extends AbstractConfigRequest {
     private List<ConfigListenContext> configListenContexts = new ArrayList<ConfigListenContext>();
     
     /**
-     * add listen congif.
+     * add listen config.
      *
      * @param group  group.
      * @param dataId dataId.

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigQueryRequest.java
Patch:
@@ -121,7 +121,7 @@ public void setTag(String tag) {
     }
     
     public boolean isNotify() {
-        String notify = getHeader("notify");
+        String notify = getHeader("notify","false");
         return Boolean.valueOf(notify);
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/AbstractPushCallBack.java
Patch:
@@ -14,7 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.remote.response;
+package com.alibaba.nacos.api.remote;
+
+import com.alibaba.nacos.api.remote.PushCallBack;
 
 /**
  * abstract callback of push service.

File: api/src/main/java/com/alibaba/nacos/api/remote/PayloadRegistry.java
Patch:
@@ -38,14 +38,14 @@ public class PayloadRegistry {
     
     private static final Map<String, Class> REGISTRY_REQUEST = new HashMap<String, Class>();
     
-    static boolean inited = false;
+    static boolean initialized = false;
     
     public static void init() {
         scan();
     }
     
     private static synchronized void scan() {
-        if (inited) {
+        if (initialized) {
             return;
         }
         
@@ -71,7 +71,7 @@ private static synchronized void scan() {
             }
         }
         
-        inited = true;
+        initialized = true;
     }
     
     static void register(String type, Class clazz) {

File: api/src/main/java/com/alibaba/nacos/api/remote/PushCallBack.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.api.remote.response;
+package com.alibaba.nacos.api.remote;
 
 /**
  * callback of push service.

File: api/src/main/java/com/alibaba/nacos/api/remote/RequestCallBack.java
Patch:
@@ -33,7 +33,7 @@ public interface RequestCallBack<T extends Response> {
      *
      * @return
      */
-    public Executor getExcutor();
+    public Executor getExecutor();
     
     /**
      * get timeout mills.

File: api/src/main/java/com/alibaba/nacos/api/remote/Requester.java
Patch:
@@ -63,8 +63,8 @@ public interface Requester {
     public RequestFuture requestFuture(Request request, RequestMeta requestMeta) throws NacosException;
     
     /**
-     * send aync request. =    * @param request request.
-     *
+     * send async request.
+     * @param request request.
      * @param requestMeta     meta of request.
      * @param requestCallBack callback of request.
      * @throws NacosException exception throw.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientStatus.java
Patch:
@@ -32,7 +32,7 @@ public enum RpcClientStatus {
     /**
      * already init.
      */
-    INITED(1, "Server list factory is ready, wait to starting..."),
+    INITIALIZED(1, "Server list factory is ready, wait to starting..."),
     
     /**
      * in starting.

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerRequestHandler.java
Patch:
@@ -29,7 +29,7 @@
 public interface ServerRequestHandler {
     
     /**
-     * Handle reuqest from server.
+     * Handle request from server.
      *
      * @param request request
      * @param requestMeta requestMeta

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -62,7 +62,7 @@ public GrpcClient(String name) {
     }
     
     /**
-     * create a new channel with specfic server address.
+     * create a new channel with specific server address.
      *
      * @param serverIp   serverIp.
      * @param serverPort serverPort.

File: config/src/main/java/com/alibaba/nacos/config/server/remote/RpcConfigChangeNotifier.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.remote;
 
 import com.alibaba.nacos.api.config.remote.request.ConfigChangeNotifyRequest;
-import com.alibaba.nacos.api.remote.response.AbstractPushCallBack;
+import com.alibaba.nacos.api.remote.AbstractPushCallBack;
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcPushService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.AbstractRequestCallBack;
 import com.alibaba.nacos.api.remote.request.ServerPushRequest;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.common.remote.exception.ConnectionAlreadyClosedException;
 import com.alibaba.nacos.core.utils.Loggers;
@@ -55,7 +55,7 @@ public void pushWithCallback(String connectionId, ServerPushRequest request, Pus
                 connection.asyncRequest(request, null, new AbstractRequestCallBack(requestCallBack.getTimeout()) {
                 
                             @Override
-                            public Executor getExcutor() {
+                            public Executor getExecutor() {
                                 return executor;
                             }
                 

File: naming/src/main/java/com/alibaba/nacos/naming/remote/udp/UdpConnector.java
Patch:
@@ -17,7 +17,8 @@
 package com.alibaba.nacos.naming.remote.udp;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.exception.runtime.NacosRuntimeException;
+import com.alibaba.nacos.api.remote.PushCallBack;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -213,7 +213,8 @@ public Object listDetail(@RequestParam(required = false) boolean withInstances,
         ObjectNode result = JacksonUtils.createEmptyJsonNode();
         
         List<Service> services = new ArrayList<>();
-        final int total = serviceManager.getPagedService(namespaceId, pageNo - 1, pageSize, param, containedInstance, services, hasIpCount);
+        final int total = serviceManager
+                .getPagedService(namespaceId, pageNo - 1, pageSize, param, containedInstance, services, hasIpCount);
         if (CollectionUtils.isEmpty(services)) {
             result.replace("serviceList", JacksonUtils.transferToJsonNode(Collections.emptyList()));
             result.put("count", 0);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -97,6 +97,7 @@ public String setLogLevel(@RequestParam String logName, @RequestParam String log
      * @return {@link RestResult}
      */
     @GetMapping(value = "/derby")
+    @Secured(action = ActionTypes.READ, resource = "nacos/admin")
     public RestResult<Object> derbyOps(@RequestParam(value = "sql") String sql) {
         String selectSign = "select";
         String limitSign = "ROWS FETCH NEXT";

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -100,7 +100,7 @@ public class ServiceController {
     @PostMapping
     @Secured(parser = NamingResourceParser.class, action = ActionTypes.WRITE)
     public String create(@RequestParam(defaultValue = Constants.DEFAULT_NAMESPACE_ID) String namespaceId,
-            @RequestParam String serviceName, @RequestParam(required = false) float protectThreshold,
+            @RequestParam String serviceName, @RequestParam(required = false, defaultValue = "0.0F") float protectThreshold,
             @RequestParam(defaultValue = StringUtils.EMPTY) String metadata,
             @RequestParam(defaultValue = StringUtils.EMPTY) String selector) throws Exception {
         

File: api/src/main/java/com/alibaba/nacos/api/remote/PayloadRegistry.java
Patch:
@@ -74,7 +74,6 @@ private static synchronized void scan() {
         inited = true;
     }
     
-    
     static void register(String type, Class clazz) {
         if (Modifier.isAbstract(clazz.getModifiers())) {
             return;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -595,7 +595,7 @@ public void onConnected() {
                 @Override
                 public void onDisConnect() {
                     String taskId = rpcClientInner.getLabels().get("taskId");
-                    LOGGER.info("[0]clear listen context...", rpcClientInner.getName());
+                    LOGGER.info("[{}] clear listen context...", rpcClientInner.getName());
                     Collection<CacheData> values = cacheMap.get().values();
                 
                     for (CacheData cacheData : values) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/CatalogServiceV2Impl.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.api.naming.pojo.Cluster;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.core.v2.ServiceManager;
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;

File: api/src/main/java/com/alibaba/nacos/api/remote/response/ResponseCode.java
Patch:
@@ -37,7 +37,7 @@ public enum ResponseCode {
     
     String desc;
     
-    ResponseCode(int code, String decs) {
+    ResponseCode(int code, String desc) {
         this.code = code;
         this.desc = desc;
     }

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
-import com.alibaba.nacos.core.cluster.MemberUtils;
+import com.alibaba.nacos.core.cluster.MemberUtil;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import com.alibaba.nacos.core.utils.Loggers;
@@ -147,7 +147,7 @@ private void syncFromAddressUrl() throws Exception {
             isAddressServerHealth = true;
             Reader reader = new StringReader(result.getData());
             try {
-                afterLookup(MemberUtils.readServerConf(EnvUtil.analyzeClusterConf(reader)));
+                afterLookup(MemberUtil.readServerConf(EnvUtil.analyzeClusterConf(reader)));
             } catch (Throwable e) {
                 Loggers.CLUSTER.error("[serverlist] exception for analyzeClusterConf, error : {}",
                         ExceptionUtil.getAllExceptionMsg(e));

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.Member;
-import com.alibaba.nacos.core.cluster.MemberUtils;
+import com.alibaba.nacos.core.cluster.MemberUtil;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.file.FileChangeEvent;
 import com.alibaba.nacos.sys.file.FileWatcher;
@@ -74,7 +74,7 @@ private void readClusterConfFromDisk() {
         Collection<Member> tmpMembers = new ArrayList<>();
         try {
             List<String> tmp = EnvUtil.readClusterConf();
-            tmpMembers = MemberUtils.readServerConf(tmp);
+            tmpMembers = MemberUtil.readServerConf(tmp);
         } catch (Throwable e) {
             Loggers.CLUSTER
                     .error("nacos-XXXX [serverlist] failed to get serverlist from disk!, error : {}", e.getMessage());

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.cluster.lookup;
 
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
-import com.alibaba.nacos.core.cluster.MemberUtils;
+import com.alibaba.nacos.core.cluster.MemberUtil;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
 
@@ -34,7 +34,7 @@ public class StandaloneMemberLookup extends AbstractMemberLookup {
     public void start() {
         if (start.compareAndSet(false, true)) {
             String url = InetUtils.getSelfIP() + ":" + EnvUtil.getPort();
-            afterLookup(MemberUtils.readServerConf(Collections.singletonList(url)));
+            afterLookup(MemberUtil.readServerConf(Collections.singletonList(url)));
         }
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
-import com.alibaba.nacos.core.cluster.MemberUtils;
+import com.alibaba.nacos.core.cluster.MemberUtil;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.ClassUtils;
@@ -73,7 +73,7 @@ public static Set<String> toCPMembersInfo(Collection<Member> members) {
         Set<String> nodes = new HashSet<>();
         members.forEach(member -> {
             final String ip = member.getIp();
-            final int raftPort = MemberUtils.calculateRaftPort(member);
+            final int raftPort = MemberUtil.calculateRaftPort(member);
             nodes.add(ip + ":" + raftPort);
         });
         return nodes;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
-import com.alibaba.nacos.core.cluster.MemberUtils;
+import com.alibaba.nacos.core.cluster.MemberUtil;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
@@ -97,7 +97,7 @@ public void testKisFirst() {
         
         List<Member> members = new ArrayList<Member>(map.values());
         Collections.sort(members);
-        List<String> ss = MemberUtils.simpleMembers(members);
+        List<String> ss = MemberUtil.simpleMembers(members);
         
         Assert.assertEquals(ss.get(0), members.get(0).getAddress());
     }
@@ -145,7 +145,7 @@ public void testMemberHealthCheck() throws Exception {
             @Override
             public void onEvent(MembersChangeEvent event) {
                 System.out.println(event);
-                healthMembers.set(MemberUtils.selectTargetMembers(event.getMembers(), member -> !NodeState.DOWN.equals(member.getState())));
+                healthMembers.set(MemberUtil.selectTargetMembers(event.getMembers(), member -> !NodeState.DOWN.equals(member.getState())));
                 if (first.getCount() == 1) {
                     first.countDown();
                     return;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/GlobalExecutor.java
Patch:
@@ -224,7 +224,7 @@ public static void submitServiceUpdateManager(Runnable runnable) {
     }
     
     /**
-     * scheduleServiceReporter
+     * scheduleServiceReporter.
      *
      * @param command command
      * @param delay   delay

File: common/src/main/java/com/alibaba/nacos/common/remote/ConnectionType.java
Patch:
@@ -30,9 +30,9 @@ public enum ConnectionType {
     RSOCKET("RSOCKET", "Rsocket Connection"),
     
     /**
-     * Rsocket connection.
+     * TBRemoting connection.
      */
-    TB_REMOTEING("TB_REMOTEING", "TB_REMOTEING Connection"),
+    TB_REMOTING("TB_REMOTING", "TB_REMOTING Connection"),
     
     /**
      * gRPC connection.

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/KeyBuilder.java
Patch:
@@ -58,7 +58,7 @@ public static String buildServiceMetaKey(String namespaceId, String serviceName)
         return SERVICE_META_KEY_PREFIX + namespaceId + NAMESPACE_KEY_CONNECTOR + serviceName;
     }
     
-    public static String getSwitchDomainKey() {
+    public static String  getSwitchDomainKey() {
         return SERVICE_META_KEY_PREFIX + UtilsAndCommons.SWITCH_DOMAIN_NAME;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -89,7 +89,7 @@ private InstancePublishInfo getPublishInfo(Instance instance) {
     
     @Override
     public void subscribeService(Service service, Subscriber subscriber, String clientId) {
-        Service singleton = ServiceManager.getInstance().getSingleton(service);
+        Service singleton = ServiceManager.getInstance().getSingletonIfExist(service).orElse(service);
         Client client = clientManager.getClient(clientId);
         client.addServiceSubscriber(singleton, subscriber);
         client.setLastUpdatedTime();
@@ -98,7 +98,7 @@ public void subscribeService(Service service, Subscriber subscriber, String clie
     
     @Override
     public void unsubscribeService(Service service, Subscriber subscriber, String clientId) {
-        Service singleton = ServiceManager.getInstance().getSingleton(service);
+        Service singleton = ServiceManager.getInstance().getSingletonIfExist(service).orElse(service);
         Client client = clientManager.getClient(clientId);
         client.removeServiceSubscriber(singleton);
         client.setLastUpdatedTime();

File: naming/src/main/java/com/alibaba/nacos/naming/push/NamingSubscriberServiceV2Impl.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.naming.core.v2.index.ServiceStorage;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.pojo.Subscriber;
-import com.alibaba.nacos.naming.push.v2.PushExecuteServiceDelegate;
+import com.alibaba.nacos.naming.push.v2.PushExecutorDelegate;
 import com.alibaba.nacos.naming.push.v2.task.PushDelayTask;
 import com.alibaba.nacos.naming.push.v2.task.PushDelayTaskExecuteEngine;
 
@@ -55,11 +55,11 @@ public class NamingSubscriberServiceV2Impl extends SmartSubscriber implements Na
     
     public NamingSubscriberServiceV2Impl(ClientManagerDelegate clientManager,
             ClientServiceIndexesManager indexesManager, ServiceStorage serviceStorage,
-            PushExecuteServiceDelegate pushExecuteService) {
+            PushExecutorDelegate pushExecutor) {
         this.clientManager = clientManager;
         this.indexesManager = indexesManager;
         this.delayTaskEngine = new PushDelayTaskExecuteEngine(clientManager, indexesManager, serviceStorage,
-                pushExecuteService);
+                pushExecutor);
         NotifyCenter.registerSubscriber(this);
         
     }

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/PushExecutor.java
Patch:
@@ -20,11 +20,11 @@
 import com.alibaba.nacos.naming.pojo.Subscriber;
 
 /**
- * Nacos naming push execute service for v2.
+ * Nacos naming push executor for v2.
  *
  * @author xiweng.yy
  */
-public interface PushExecuteService {
+public interface PushExecutor {
     
     /**
      * Do push.

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/PushExecutorRpcImpl.java
Patch:
@@ -28,11 +28,11 @@
  * @author xiweng.yy
  */
 @Component
-public class RpcPushExecuteServiceImpl implements PushExecuteService {
+public class PushExecutorRpcImpl implements PushExecutor {
     
     private final RpcPushService pushService;
     
-    public RpcPushExecuteServiceImpl(RpcPushService pushService) {
+    public PushExecutorRpcImpl(RpcPushService pushService) {
         this.pushService = pushService;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/PushExecutorUdpImpl.java
Patch:
@@ -28,11 +28,11 @@
  * @author xiweng.yy
  */
 @Component
-public class UdpPushExecuteServiceImpl implements PushExecuteService {
+public class PushExecutorUdpImpl implements PushExecutor {
     
     private final PushService pushService;
     
-    public UdpPushExecuteServiceImpl(PushService pushService) {
+    public PushExecutorUdpImpl(PushService pushService) {
         this.pushService = pushService;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/DistroDataRequestHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.remote.handler;
+package com.alibaba.nacos.naming.remote.rpc.handler;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.RequestMeta;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/InstanceRequestHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.remote.handler;
+package com.alibaba.nacos.naming.remote.rpc.handler;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.remote.NamingRemoteConstants;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceListRequestHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.remote.handler;
+package com.alibaba.nacos.naming.remote.rpc.handler;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.remote.request.ServiceListRequest;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/ServiceQueryRequestHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.remote.handler;
+package com.alibaba.nacos.naming.remote.rpc.handler;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;

File: naming/src/main/java/com/alibaba/nacos/naming/remote/rpc/handler/SubscribeServiceRequestHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.remote.handler;
+package com.alibaba.nacos.naming.remote.rpc.handler;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;

File: api/src/main/java/com/alibaba/nacos/api/remote/PayloadRegistry.java
Patch:
@@ -81,7 +81,7 @@ static void register(String type, Class clazz) {
         REGISTRY_REQUEST.put(type, clazz);
     }
     
-    public static Class getClassbyType(String type) {
+    public static Class getClassByType(String type) {
         return REGISTRY_REQUEST.get(type);
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -793,7 +793,7 @@ private RpcClient ensureRpcClient(String taskId) throws NacosException {
         
             RpcClient rpcClient = RpcClientFactory
                     .createClient("config-" + taskId + "-" + uuid, getConectiontype(), newlabels);
-            if (rpcClient.isWaitInited()) {
+            if (rpcClient.isWaitInitiated()) {
                 initHandlerRpcClient(rpcClient);
                 rpcClient.start();
             }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcUtils.java
Patch:
@@ -155,7 +155,7 @@ public static Payload convert(Response response) {
      */
     public static PlainRequest parse(Payload payload) {
         PlainRequest plainRequest = new PlainRequest();
-        Class classbyType = PayloadRegistry.getClassbyType(payload.getMetadata().getType());
+        Class classbyType = PayloadRegistry.getClassByType(payload.getMetadata().getType());
         if (classbyType != null) {
             Object obj = toObj(payload.getBody().getValue().toStringUtf8(), classbyType);
             if (obj instanceof Request) {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeBatchListenRequestHandler.java
Patch:
@@ -49,10 +49,10 @@ public ConfigChangeBatchListenRequestHandler(ConfigChangeListenContext configCha
     
     @Override
     @Secured(action = ActionTypes.READ, parser = ConfigResourceParser.class)
-    public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest request, RequestMeta requestMeta)
+    public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest request, RequestMeta meta)
             throws NacosException {
         ConfigBatchListenRequest configChangeListenRequest = (ConfigBatchListenRequest) request;
-        String connectionId = StringPool.get(requestMeta.getConnectionId());
+        String connectionId = StringPool.get(meta.getConnectionId());
         List<String> changedGroups = null;
         String header = request.getHeader("Vipserver-Tag");
     
@@ -66,7 +66,7 @@ public ConfigChangeBatchListenResponse handle(ConfigBatchListenRequest request,
             
             if (configChangeListenRequest.isListen()) {
                 configChangeListenContext.addListen(groupKey, md5, connectionId);
-                boolean isUptoDate = ConfigCacheService.isUptodate(groupKey, md5, requestMeta.getClientIp(), header);
+                boolean isUptoDate = ConfigCacheService.isUptodate(groupKey, md5, meta.getClientIp(), header);
                 if (!isUptoDate) {
                     configChangeBatchListenResponse.addChangeConfig(listenContext.getDataId(), listenContext.getGroup(),
                             listenContext.getTenant());

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeListenContext.java
Patch:
@@ -157,8 +157,8 @@ public synchronized void clearContextForConnectionId(final String connectionId)
      * @return listen group keys of the connection id, key:group key,value:md5
      */
     public synchronized Map<String, String> getListenKeys(String connectionId) {
-        Map<String, String> copy = new HashMap<String, String>(connectionIdContext.get(connectionId));
-        return copy;
+        HashMap<String, String> stringStringHashMap = connectionIdContext.get(connectionId);
+        return stringStringHashMap == null ? null : new HashMap<String, String>(stringStringHashMap);
     }
     
     /**

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -88,7 +88,7 @@ public ConfigPubishResponse handle(ConfigPublishRequest request, RequestMeta met
             
             if (AggrWhitelist.isAggrDataId(dataId)) {
                 Loggers.REMOTE_DIGEST
-                        .warn("[aggr-conflict] {} attemp to publish single data, {}, {}", srcIp, dataId, group);
+                        .warn("[aggr-conflict] {} attempt to publish single data, {}, {}", srcIp, dataId, group);
                 throw new NacosException(NacosException.NO_RIGHT, "dataId:" + dataId + " is aggr");
             }
             

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigRemoveRequestHandler.java
Patch:
@@ -43,11 +43,11 @@
  * @version $Id: ConfiRemoveRequestHandler.java, v 0.1 2020年07月16日 5:49 PM liuzunfei Exp $
  */
 @Component
-public class ConfiRemoveRequestHandler extends RequestHandler<ConfigRemoveRequest, ConfigRemoveResponse> {
+public class ConfigRemoveRequestHandler extends RequestHandler<ConfigRemoveRequest, ConfigRemoveResponse> {
     
     private final PersistService persistService;
     
-    public ConfiRemoveRequestHandler(PersistService persistService) {
+    public ConfigRemoveRequestHandler(PersistService persistService) {
         this.persistService = persistService;
     }
     

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthManager.java
Patch:
@@ -156,7 +156,7 @@ private String resolveToken(HttpServletRequest request) throws AccessException {
             String password = request.getParameter("password");
             bearerToken = resolveTokenFromUser(userName, password);
         }
-    
+        
         return bearerToken;
     }
     

File: core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java
Patch:
@@ -122,7 +122,7 @@ private void createRpcClientAndStart(Member member, ConnectionType type) throws
             client = RpcClientFactory.createClusterClient(memberClientKey, type, labels);
         }
     
-        if (client.isWaitInited()) {
+        if (client.isWaitInitiated()) {
             Loggers.CLUSTER.info("start a new rpc client to member - > : {}", member);
             
             //one fixed server

File: core/src/main/java/com/alibaba/nacos/core/remote/Connection.java
Patch:
@@ -37,7 +37,7 @@ public Connection(ConnectionMetaInfo metaInfo) {
     /**
      * check is connected.
      *
-     * @return
+     * @return if connection or not,check the inner connection is active.
      */
     public abstract boolean isConnected();
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcBiStreamRequestAcceptor.java
Patch:
@@ -37,7 +37,6 @@
 import org.springframework.stereotype.Service;
 
 import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CHANNEL;
-import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CONN_CLIENT_IP;
 import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CONN_CLIENT_PORT;
 import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CONN_ID;
 import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CONN_LOCAL_PORT;
@@ -63,11 +62,9 @@ public void onNext(Payload payload) {
                 
                 String connectionId = CONTEXT_KEY_CONN_ID.get();
                 Integer localPort = CONTEXT_KEY_CONN_LOCAL_PORT.get();
-                String clientIp = CONTEXT_KEY_CONN_CLIENT_IP.get();
                 int clientPort = CONTEXT_KEY_CONN_CLIENT_PORT.get();
                 
                 GrpcUtils.PlainRequest plainRequest = GrpcUtils.parse(payload);
-                plainRequest.getMetadata().setClientIp(clientIp);
                 plainRequest.getMetadata().setClientPort(clientPort);
                 plainRequest.getMetadata().setConnectionId(connectionId);
                 if (plainRequest.getBody() instanceof ConnectionSetupRequest) {

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java
Patch:
@@ -85,11 +85,11 @@ public void request(Payload grpcRequest, StreamObserver<Payload> responseObserve
                         return;
                     }
                     connectionManager.refreshActiveTime(parseObj.getMetadata().getConnectionId());
-                    Response response = requestHandler.handle(request, parseObj.getMetadata());
+                    Response response = requestHandler.handleRequest(request, parseObj.getMetadata());
                     responseObserver.onNext(GrpcUtils.convert(response));
                     responseObserver.onCompleted();
                     return;
-                } catch (Exception e) {
+                } catch (Throwable e) {
     
                     Loggers.REMOTE_DIGEST.error(String
                             .format("[%s] fail to handle request ,error message :%s", "grpc", e.getMessage(), e));

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -257,6 +257,8 @@ private static int checkInnerSyntax(List<String> elements, int start) {
                 return -1;
             }
             
+            final String labelConsumer = elements.get(index++).split(CONSUMER_PREFIX)[1];
+            
             index = skipEmpty(elements, index);
             if (index >= elements.size()) {
                 return -1;
@@ -275,9 +277,8 @@ private static int checkInnerSyntax(List<String> elements, int start) {
                 return -1;
             }
             
-            String labelProvider = elements.get(index).split(PROVIDER_PREFIX)[1];
+            final String labelProvider = elements.get(index).split(PROVIDER_PREFIX)[1];
             
-            String labelConsumer = elements.get(index++).split(CONSUMER_PREFIX)[1];
             if (!labelConsumer.equals(labelProvider)) {
                 return -1;
             }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/cleaner/ExpiredMetadataCleaner.java
Patch:
@@ -67,11 +67,11 @@ private void removeExpiredMetadata(ExpiredMetadataInfo expiredInfo) {
         Loggers.SRV_LOG.info("Remove expired metadata {}", expiredInfo);
         if (null == expiredInfo.getInstanceId()) {
             if (metadataManager.containServiceMetadata(expiredInfo.getService())) {
-                metadataOperateService.deleteInstanceMetadata(expiredInfo.getService(), expiredInfo.getInstanceId());
+                metadataOperateService.deleteServiceMetadata(expiredInfo.getService());
             }
         } else {
             if (metadataManager.containInstanceMetadata(expiredInfo.getService(), expiredInfo.getInstanceId())) {
-                metadataOperateService.deleteServiceMetadata(expiredInfo.getService());
+                metadataOperateService.deleteInstanceMetadata(expiredInfo.getService(), expiredInfo.getInstanceId());
             }
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -47,9 +47,9 @@ public class HistoryController {
      * @param group    group string value.
      * @param tenant   tenant string value.
      * @param appName  appName string value.
-     * @param pageNo   pageNo string value.
-     * @param pageSize pageSize string value.
-     * @param modelMap modeMap.
+     * @param pageNo   pageNo integer value.
+     * @param pageSize pageSize integer value.
+     * @param modelMap modelMap.
      * @return
      */
     @GetMapping(params = "search=accurate")

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosGetRequestProcessor.java
Patch:
@@ -28,6 +28,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosGetRequestProcessor extends AbstractProcessor implements RpcProcessor<GetRequest> {
     
     private static final String INTEREST_NAME = GetRequest.class.getName();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosLogProcessor.java
Patch:
@@ -28,6 +28,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@Deprecated
 public class NacosLogProcessor extends AbstractProcessor implements RpcProcessor<Log> {
     
     private static final String INTEREST_NAME = Log.class.getName();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -65,7 +65,7 @@ public PersistentServiceProcessor(ProtocolManager protocolManager, ClusterVersio
     @Override
     public void afterConstruct() {
         super.afterConstruct();
-        this.protocol.addLogProcessors(Collections.singletonList(this));
+        this.protocol.addRequestProcessors(Collections.singletonList(this));
         this.protocol.protocolMetaData()
                 .subscribe(Constants.NAMING_PERSISTENT_SERVICE_GROUP, MetadataKey.LEADER_META_DATA,
                         (o, arg) -> hasLeader = StringUtils.isNotBlank(String.valueOf(arg)));
@@ -95,7 +95,7 @@ public void put(String key, Record value) throws NacosException {
         final WriteRequest request = WriteRequest.newBuilder().setData(ByteString.copyFrom(serializer.serialize(req)))
                 .setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP).setOperation(Op.Write.desc).build();
         try {
-            protocol.submit(request);
+            protocol.write(request);
         } catch (Exception e) {
             throw new NacosException(ErrorCode.ProtoSubmitError.getCode(), e.getMessage());
         }
@@ -108,7 +108,7 @@ public void remove(String key) throws NacosException {
         final WriteRequest request = WriteRequest.newBuilder().setData(ByteString.copyFrom(serializer.serialize(req)))
                 .setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP).setOperation(Op.Delete.desc).build();
         try {
-            protocol.submit(request);
+            protocol.write(request);
         } catch (Exception e) {
             throw new NacosException(ErrorCode.ProtoSubmitError.getCode(), e.getMessage());
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/InstanceMetadataProcessor.java
Patch:
@@ -62,7 +62,7 @@ public InstanceMetadataProcessor(NamingMetadataManager namingMetadataManager, Pr
         this.processType = TypeUtils.parameterize(MetadataOperation.class, InstanceMetadata.class);
         this.lock = new ReentrantReadWriteLock();
         this.readLock = lock.readLock();
-        protocolManager.getCpProtocol().addLogProcessors(Collections.singletonList(this));
+        protocolManager.getCpProtocol().addRequestProcessors(Collections.singletonList(this));
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataOperateService.java
Patch:
@@ -117,7 +117,7 @@ private <T> MetadataOperation<T> buildMetadataOperation(Service service) {
     
     private void submitMetadataOperation(WriteRequest operationLog) {
         try {
-            Response response = cpProtocol.submit(operationLog);
+            Response response = cpProtocol.write(operationLog);
             if (!response.getSuccess()) {
                 throw new NacosRuntimeException(NacosException.SERVER_ERROR,
                         "do metadata operation failed " + response.getErrMsg());

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ServiceMetadataProcessor.java
Patch:
@@ -60,7 +60,7 @@ public ServiceMetadataProcessor(NamingMetadataManager namingMetadataManager, Pro
         this.processType = TypeUtils.parameterize(MetadataOperation.class, ServiceMetadata.class);
         this.lock = new ReentrantReadWriteLock();
         this.readLock = lock.readLock();
-        protocolManager.getCpProtocol().addLogProcessors(Collections.singletonList(this));
+        protocolManager.getCpProtocol().addRequestProcessors(Collections.singletonList(this));
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java
Patch:
@@ -144,8 +144,9 @@ public int handleBeat(String namespaceId, String serviceName, String ip, int por
         String groupName = NamingUtils.getGroupName(serviceName);
         String serviceNameNoGrouped = NamingUtils.getServiceName(serviceName);
         String clientId = ip + ":" + port;
+        Service service = Service.newService(namespaceId, groupName, serviceNameNoGrouped);
         IpPortBasedClient client = (IpPortBasedClient) clientManager.getClient(clientId);
-        if (null == client) {
+        if (null == client || !client.getAllPublishedService().contains(service)) {
             if (null == clientBeat) {
                 return NamingResponseCode.RESOURCE_NOT_FOUND;
             }
@@ -161,7 +162,6 @@ public int handleBeat(String namespaceId, String serviceName, String ip, int por
             registerInstance(namespaceId, serviceName, instance);
             client = (IpPortBasedClient) clientManager.getClient(clientId);
         }
-        Service service = Service.newService(namespaceId, groupName, serviceNameNoGrouped);
         if (!ServiceManager.getInstance().containSingleton(service)) {
             throw new NacosException(NacosException.SERVER_ERROR,
                     "service not found: " + serviceName + "@" + namespaceId);

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorServiceImpl.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.healthcheck.RsInfo;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -102,8 +101,7 @@ public void removeInstance(String namespaceId, String serviceName, Instance inst
     }
     
     @Override
-    public void updateInstance(String namespaceId, String serviceName, Instance instance)
-            throws NacosException {
+    public void updateInstance(String namespaceId, String serviceName, Instance instance) throws NacosException {
         com.alibaba.nacos.naming.core.Instance coreInstance = (com.alibaba.nacos.naming.core.Instance) instance;
         serviceManager.updateInstance(namespaceId, serviceName, coreInstance);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/service/impl/EphemeralClientOperationServiceImpl.java
Patch:
@@ -77,7 +77,9 @@ public void deregisterInstance(Service service, Instance instance, String client
     
     private InstancePublishInfo getPublishInfo(Instance instance) {
         InstancePublishInfo result = new InstancePublishInfo(instance.getIp(), instance.getPort());
-        result.getExtendDatum().putAll(instance.getMetadata());
+        if (null != instance.getMetadata() && !instance.getMetadata().isEmpty()) {
+            result.getExtendDatum().putAll(instance.getMetadata());
+        }
         String clusterName = StringUtils.isBlank(instance.getClusterName()) ? UtilsAndCommons.DEFAULT_CLUSTER_NAME
                 : instance.getClusterName();
         result.setHealthy(instance.isHealthy());

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -44,7 +44,7 @@ public PushExecuteTask(Service service, PushDelayTaskExecuteEngine delayTaskEngi
     public void run() {
         try {
             ServiceInfo serviceInfo = delayTaskEngine.getServiceStorage().getPushData(service);
-            serviceInfo = ServiceUtil.selectInstances(serviceInfo, true, true);
+            serviceInfo = ServiceUtil.selectInstances(serviceInfo, false, true);
             for (String each : delayTaskEngine.getIndexesManager().getAllClientsSubscribeService(service)) {
                 Subscriber subscriber = delayTaskEngine.getClientManager().getClient(each).getSubscriber(service);
                 delayTaskEngine.getPushExecuteService().doPush(each, subscriber, handleClusterData(serviceInfo, subscriber));

File: naming/src/main/java/com/alibaba/nacos/naming/remote/handler/ServiceListRequestHandler.java
Patch:
@@ -46,6 +46,7 @@ public ServiceListResponse handle(ServiceListRequest request, RequestMeta meta)
         ServiceListResponse result = ServiceListResponse.buildSuccessResponse(0, new LinkedList<>());
         if (!serviceSet.isEmpty()) {
             Collection<String> serviceNameSet = selectServiceWithGroupName(serviceSet, request.getGroupName());
+            // TODO select service by selector
             List<String> serviceNameList = ServiceUtil
                     .pageServiceName(request.getPageNo(), request.getPageSize(), serviceNameSet);
             result.setCount(serviceNameList.size());

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.core.utils.OverrideParameterRequestWrapper;
 import com.alibaba.nacos.core.utils.ReuseHttpServletRequest;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.DistroMapper;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -176,8 +176,8 @@ public String update(HttpServletRequest request) throws Exception {
         String namespaceId = WebUtils
                 .optional(request, CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
-        String groupName = WebUtils.optional(request, CommonParams.GROUP_NAME, Constants.DEFAULT_GROUP);
-        instanceService.updateInstance(namespaceId, serviceName, groupName, parseInstance(request));
+        NamingUtils.checkServiceNameFormat(serviceName);
+        instanceService.updateInstance(namespaceId, serviceName, parseInstance(request));
         return "ok";
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorServiceImpl.java
Patch:
@@ -102,11 +102,10 @@ public void removeInstance(String namespaceId, String serviceName, Instance inst
     }
     
     @Override
-    public void updateInstance(String namespaceId, String serviceName, String groupName, Instance instance)
+    public void updateInstance(String namespaceId, String serviceName, Instance instance)
             throws NacosException {
         com.alibaba.nacos.naming.core.Instance coreInstance = (com.alibaba.nacos.naming.core.Instance) instance;
-        String groupedServiceName = NamingUtils.getGroupedName(groupName, serviceName);
-        serviceManager.updateInstance(namespaceId, groupedServiceName, coreInstance);
+        serviceManager.updateInstance(namespaceId, serviceName, coreInstance);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -132,9 +132,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
                             .warn("[DISTRO-FILTER] request failed: " + distroMapper.mapSrv(distroTag) + urlString);
                 }
             } else {
-                OverrideParameterRequestWrapper requestWrapper = distroTagGenerator
-                        .wrapperRequestWithTag(req, distroTag);
-                filterChain.doFilter(requestWrapper, resp);
+                filterChain.doFilter(req, resp);
             }
         } catch (AccessControlException e) {
             resp.sendError(HttpServletResponse.SC_FORBIDDEN, "access denied: " + ExceptionUtil.getAllExceptionMsg(e));

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ServiceInfoUpdateService.java
Patch:
@@ -156,7 +156,7 @@ public void run() {
             long delayTime = -1;
             
             try {
-                if (!changeNotifier.isSubscribed(groupedServiceName, clusters) && !futureMap.containsKey(serviceKey)) {
+                if (!changeNotifier.isSubscribed(groupName, serviceName, clusters) && !futureMap.containsKey(serviceKey)) {
                     NAMING_LOGGER
                             .info("update task is stopped, service:" + groupedServiceName + ", clusters:" + clusters);
                     return;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -381,7 +381,7 @@ public Object list(HttpServletRequest request) throws Exception {
         
         Subscriber subscriber =
                 udpPort > 0 ? new Subscriber(clientIP + ":" + udpPort, agent, app, clientIP, namespaceId, serviceName,
-                        udpPort) : null;
+                        udpPort, clusters) : null;
         return instanceService.listInstance(namespaceId, serviceName, subscriber, clusters, healthyOnly);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ExpiredInstanceChecker.java
Patch:
@@ -66,7 +66,7 @@ private long getTimeout(Service service, InstancePublishInfo instance) {
     
     private Optional<Object> getTimeoutFromMetadata(Service service, InstancePublishInfo instance) {
         Optional<InstanceMetadata> instanceMetadata = ApplicationUtils.getBean(NamingMetadataManager.class)
-                .getInstanceMetadata(service, instance.getIp());
+                .getInstanceMetadata(service, instance.getInstanceId());
         return instanceMetadata.map(metadata -> metadata.getExtendData().get(PreservedMetadataKeys.IP_DELETE_TIMEOUT));
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/InstanceEnableBeatCheckInterceptor.java
Patch:
@@ -36,7 +36,7 @@ public class InstanceEnableBeatCheckInterceptor extends AbstractBeatCheckInterce
     public boolean intercept(InstanceBeatCheckTask object) {
         NamingMetadataManager metadataManager = ApplicationUtils.getBean(NamingMetadataManager.class);
         HeartBeatInstancePublishInfo instance = object.getInstancePublishInfo();
-        Optional<InstanceMetadata> metadata = metadataManager.getInstanceMetadata(object.getService(), instance.getIp());
+        Optional<InstanceMetadata> metadata = metadataManager.getInstanceMetadata(object.getService(), instance.getInstanceId());
         if (metadata.isPresent() && metadata.get().getExtendData().containsKey(UtilsAndCommons.ENABLE_CLIENT_BEAT)) {
             return ConvertUtils.toBoolean(metadata.get().getExtendData().get(UtilsAndCommons.ENABLE_CLIENT_BEAT).toString());
         }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/heartbeat/UnhealthyInstanceChecker.java
Patch:
@@ -66,7 +66,7 @@ private long getTimeout(Service service, InstancePublishInfo instance) {
     
     private Optional<Object> getTimeoutFromMetadata(Service service, InstancePublishInfo instance) {
         Optional<InstanceMetadata> instanceMetadata = ApplicationUtils.getBean(NamingMetadataManager.class)
-                .getInstanceMetadata(service, instance.getIp());
+                .getInstanceMetadata(service, instance.getInstanceId());
         return instanceMetadata.map(metadata -> metadata.getExtendData().get(PreservedMetadataKeys.HEART_BEAT_TIMEOUT));
     }
     

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/AbstractHealthChecker.java
Patch:
@@ -66,7 +66,9 @@ public String getType() {
     public static class None extends AbstractHealthChecker {
         
         public static final String TYPE = "NONE";
-        
+    
+        private static final long serialVersionUID = -760631831097384737L;
+    
         public None() {
             super(TYPE);
         }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Http.java
Patch:
@@ -35,6 +35,8 @@ public class Http extends AbstractHealthChecker {
     
     public static final String TYPE = "HTTP";
     
+    private static final long serialVersionUID = 551826315222362349L;
+    
     private String path = "";
     
     private String headers = "";

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Mysql.java
Patch:
@@ -29,6 +29,8 @@ public class Mysql extends AbstractHealthChecker {
     
     public static final String TYPE = "MYSQL";
     
+    private static final long serialVersionUID = 7928108094599401491L;
+    
     private String user;
     
     private String pwd;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/healthcheck/impl/Tcp.java
Patch:
@@ -28,6 +28,8 @@ public class Tcp extends AbstractHealthChecker {
     
     public static final String TYPE = "TCP";
     
+    private static final long serialVersionUID = -9116042038157496294L;
+    
     public Tcp() {
         super(TYPE);
     }

File: api/src/test/java/com/alibaba/nacos/api/naming/pojo/healthcheck/TestChecker.java
Patch:
@@ -24,6 +24,8 @@ public class TestChecker extends AbstractHealthChecker {
     @JsonTypeInfo(use = Id.NAME, property = "type")
     public static final String TYPE = "TEST";
     
+    private static final long serialVersionUID = 2472091207760970225L;
+    
     private String testValue;
     
     public String getTestValue() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/NamingMetadataOperateService.java
Patch:
@@ -44,7 +44,7 @@ public class NamingMetadataOperateService {
     
     public NamingMetadataOperateService(ProtocolManager protocolManager) {
         this.cpProtocol = protocolManager.getCpProtocol();
-        this.serializer = SerializeFactory.getSerializer("JSON");
+        this.serializer = SerializeFactory.getDefault();
     }
     
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/selector/Selector.java
Patch:
@@ -20,6 +20,7 @@
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
 
+import java.io.Serializable;
 import java.util.List;
 
 /**
@@ -42,7 +43,7 @@
  * @since 0.7.0
  */
 @JsonTypeInfo(use = Id.NAME, property = "type", defaultImpl = NoneSelector.class)
-public interface Selector {
+public interface Selector extends Serializable {
     
     /**
      * Get the type of this selector.

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -399,7 +399,7 @@ public void run() {
                     try {
                         getRetainIps().put(ClientLongPolling.this.ip, System.currentTimeMillis());
                         
-                        // Delete subsciber's relations.
+                        // Delete subscriber's relations.
                         allSubs.remove(ClientLongPolling.this);
                         
                         if (isFixedPolling()) {

File: core/src/main/java/com/alibaba/nacos/core/remote/core/ServerReloaderRequestHandler.java
Patch:
@@ -52,9 +52,7 @@ public ServerReloadResponse handle(ServerReloadRequest request, RequestMeta meta
         if (sdkCount <= reloadCount) {
             response.setMessage("ignore");
         } else {
-            if (reloadCount * (1 + RemoteUtils.LOADER_FACTOR) < sdkCount) {
-                reloadCount = (int) (sdkCount * (1 - RemoteUtils.LOADER_FACTOR));
-            }
+            reloadCount = (int) Math.max(reloadCount, sdkCount * (1 - RemoteUtils.LOADER_FACTOR));
             connectionManager.loadCount(reloadCount, null);
             response.setMessage("ok");
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/event/service/ServiceEvent.java
Patch:
@@ -56,4 +56,5 @@ public ServiceChangedEvent(Service service, boolean incrementRevision) {
             }
         }
     }
+    
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/metadata/ExpiredMetadataInfo.java
Patch:
@@ -40,7 +40,7 @@ public class ExpiredMetadataInfo {
     private ExpiredMetadataInfo(Service service, String instanceId) {
         this.service = service;
         this.instanceId = instanceId;
-        createTime = System.currentTimeMillis();
+        this.createTime = System.currentTimeMillis();
     }
     
     public static ExpiredMetadataInfo newExpiredServiceMetadata(Service service) {

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.client.config.impl.SpasAdapter;
 import com.alibaba.nacos.client.identify.StsConfig;
 import com.alibaba.nacos.client.security.SecurityProxy;
+import com.alibaba.nacos.client.utils.ContextPathUtil;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
@@ -247,9 +248,7 @@ public HttpRestResult<String> httpDelete(String path, Map<String, String> header
     }
     
     private String getUrl(String serverAddr, String relativePath) {
-        String contextPath = serverListMgr.getContentPath().startsWith("/") ? serverListMgr.getContentPath()
-                : "/" + serverListMgr.getContentPath();
-        return serverAddr + contextPath + relativePath;
+        return serverAddr + ContextPathUtil.normalizeContextPath(serverListMgr.getContentPath()) + relativePath;
     }
     
     private boolean isFail(HttpRestResult<String> result) {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -65,7 +65,7 @@ private void init(Properties properties) throws NacosException {
         namespace = InitUtils.initNamespaceForNaming(properties);
         InitUtils.initSerialization();
         initServerAddr(properties);
-        InitUtils.initWebRootContext();
+        InitUtils.initWebRootContext(properties);
         serverProxy = new NamingProxy(namespace, endpoint, serverList, properties);
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -86,7 +86,7 @@ private void init(Properties properties) throws NacosException {
         this.namespace = InitUtils.initNamespaceForNaming(properties);
         InitUtils.initSerialization();
         initServerAddr(properties);
-        InitUtils.initWebRootContext();
+        InitUtils.initWebRootContext(properties);
         initCacheDir();
         initLogName(properties);
         

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.client.utils.ContextPathUtil;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
@@ -88,8 +89,7 @@ public class SecurityProxy {
     public SecurityProxy(Properties properties, NacosRestTemplate nacosRestTemplate) {
         username = properties.getProperty(PropertyKeyConst.USERNAME, StringUtils.EMPTY);
         password = properties.getProperty(PropertyKeyConst.PASSWORD, StringUtils.EMPTY);
-        contextPath = properties.getProperty(PropertyKeyConst.CONTEXT_PATH, "/nacos");
-        contextPath = contextPath.startsWith("/") ? contextPath : "/" + contextPath;
+        contextPath = ContextPathUtil.normalizeContextPath(properties.getProperty(PropertyKeyConst.CONTEXT_PATH, "/nacos"));
         this.nacosRestTemplate = nacosRestTemplate;
     }
     

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftSysConstants.java
Patch:
@@ -154,7 +154,7 @@ public final class RaftSysConstants {
     public static final String RAFT_CLI_SERVICE_THREAD_NUM = "cli_service_thread_num";
     
     /**
-     * raft linear read strategy, defaults to index
+     * raft linear read strategy, defaults to read_index read
      */
     public static final String RAFT_READ_INDEX_TYPE = "read_index_type";
     

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/RaftOptionsBuilder.java
Patch:
@@ -108,7 +108,7 @@ private static ReadOnlyOption raftReadIndexType(RaftConfig config) {
         String readOnySafe = "ReadOnlySafe";
         String readOnlyLeaseBased = "ReadOnlyLeaseBased";
         
-        String val = config.getVal(RaftSysConstants.DEFAULT_READ_INDEX_TYPE);
+        String val = config.getVal(RaftSysConstants.RAFT_READ_INDEX_TYPE);
         
         if (StringUtils.isBlank(val) || StringUtils.equals(readOnySafe, val)) {
             return ReadOnlyOption.ReadOnlySafe;
@@ -117,8 +117,8 @@ private static ReadOnlyOption raftReadIndexType(RaftConfig config) {
         if (StringUtils.equals(readOnlyLeaseBased, val)) {
             return ReadOnlyOption.ReadOnlyLeaseBased;
         }
-        throw new IllegalArgumentException(
-                "Illegal Raft system parameters => " + RaftSysConstants.DEFAULT_READ_INDEX_TYPE + " : [" + val + "]");
+        throw new IllegalArgumentException("Illegal Raft system parameters => ReadOnlyOption" + " : [" + val
+                + "], should be 'ReadOnlySafe' or 'ReadOnlyLeaseBased'");
         
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -187,7 +187,7 @@ public Object listDetail(@RequestParam(required = false) boolean withInstances,
             @RequestParam(required = false) boolean hasIpCount) {
         
         String param = StringUtils.isBlank(serviceName) && StringUtils.isBlank(groupName) ? StringUtils.EMPTY
-                : NamingUtils.getGroupedName(serviceName, groupName);
+                : NamingUtils.getGroupedNameOptional(serviceName, groupName);
         
         if (withInstances) {
             List<ServiceDetailInfo> serviceDetailInfoList = new ArrayList<>();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/BasePersistentServiceProcessor.java
Patch:
@@ -121,11 +121,10 @@ public BasePersistentServiceProcessor(final ClusterVersionJudgement judgement) t
                 throw new NacosRuntimeException(ex.getErrCode(), ex.getErrMsg());
             }
         });
-        afterConstruct();
     }
     
     @SuppressWarnings("unchecked")
-    protected void afterConstruct() {
+    public void afterConstruct() {
         NotifyCenter.registerToPublisher(ValueChangeEvent.class, 16384);
         listenOldRaftClose();
     }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -326,7 +326,6 @@ public String getProperty(String key, String defaultValue) {
     
     @Override
     public void initialize(ConfigurableApplicationContext configurableApplicationContext) {
-        EnvUtil.setEnvironment(configurableApplicationContext.getEnvironment());
         loadSetting();
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -46,8 +46,7 @@ public class StandaloneProfileApplicationListener
     public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {
         
         ConfigurableEnvironment environment = event.getEnvironment();
-        EnvUtil.setEnvironment(environment);
-    
+
         if (environment.getProperty(STANDALONE_MODE_PROPERTY_NAME, boolean.class, false)) {
             environment.addActiveProfile(STANDALONE_SPRING_PROFILE);
         }

File: common/src/main/java/com/alibaba/nacos/common/model/core/IResultCode.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.result.core;
+package com.alibaba.nacos.common.model.core;
 
 /**
  * IResultCode.

File: config/src/main/java/com/alibaba/nacos/config/server/result/code/ResultCodeEnum.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.result.code;
 
-import com.alibaba.nacos.config.server.result.core.IResultCode;
+import com.alibaba.nacos.common.model.core.IResultCode;
 
 /**
  * ResultCodeEnum.

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/PersistentConsistencyServiceDelegateImpl.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.RecordListener;
-import com.alibaba.nacos.naming.consistency.persistent.impl.PersistentServiceProcessor;
+import com.alibaba.nacos.naming.consistency.persistent.impl.BasePersistentServiceProcessor;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftConsistencyServiceImpl;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.stereotype.Component;
@@ -36,13 +36,13 @@ public class PersistentConsistencyServiceDelegateImpl implements PersistentConsi
     
     private final RaftConsistencyServiceImpl oldPersistentConsistencyService;
     
-    private final PersistentServiceProcessor newPersistentConsistencyService;
+    private final BasePersistentServiceProcessor newPersistentConsistencyService;
     
     private volatile boolean switchNewPersistentService = false;
     
     public PersistentConsistencyServiceDelegateImpl(ClusterVersionJudgement versionJudgement,
             RaftConsistencyServiceImpl oldPersistentConsistencyService,
-            PersistentServiceProcessor newPersistentConsistencyService) {
+            BasePersistentServiceProcessor newPersistentConsistencyService) {
         this.versionJudgement = versionJudgement;
         this.oldPersistentConsistencyService = oldPersistentConsistencyService;
         this.newPersistentConsistencyService = newPersistentConsistencyService;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/GlobalExecutor.java
Patch:
@@ -139,8 +139,8 @@ public static void scheduleMcpPushTask(Runnable runnable, long initialDelay, lon
         NAMING_TIMER_EXECUTOR.scheduleAtFixedRate(runnable, initialDelay, period, TimeUnit.MILLISECONDS);
     }
     
-    public static void submitClusterVersionJudge(Runnable runnable, long delay) {
-        NAMING_TIMER_EXECUTOR.schedule(runnable, delay, TimeUnit.MILLISECONDS);
+    public static ScheduledFuture submitClusterVersionJudge(Runnable runnable, long delay) {
+        return NAMING_TIMER_EXECUTOR.schedule(runnable, delay, TimeUnit.MILLISECONDS);
     }
 
     public static void submitDistroNotifyTask(Runnable runnable) {

File: naming/src/main/java/com/alibaba/nacos/naming/utils/Constants.java
Patch:
@@ -26,6 +26,8 @@ public final class Constants {
     
     private Constants() {}
     
+    public static final String OLD_NAMING_RAFT_GROUP = "naming";
+    
     public static final String NAMING_PERSISTENT_SERVICE_GROUP = "naming_persistent_service";
     
     public static final String NACOS_NAMING_USE_NEW_RAFT_FIRST = "nacos.naming.use-new-raft.first";

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.config.server.utils;
 
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.springframework.context.ApplicationContextInitializer;
 import org.springframework.context.ConfigurableApplicationContext;
@@ -327,7 +326,7 @@ public String getProperty(String key, String defaultValue) {
     
     @Override
     public void initialize(ConfigurableApplicationContext configurableApplicationContext) {
-        ApplicationUtils.injectEnvironment(configurableApplicationContext.getEnvironment());
+        EnvUtil.setEnvironment(configurableApplicationContext.getEnvironment());
         loadSetting();
     }
 }

File: config/src/test/java/com/alibaba/nacos/config/server/model/ConfigInfoTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.IdGenerator;
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;
@@ -28,7 +28,7 @@ public class ConfigInfoTest {
     
     @Test
     public void testPrecisionIssue() throws Exception {
-        ApplicationUtils.injectEnvironment(new StandardEnvironment());
+        EnvUtil.setEnvironment(new StandardEnvironment());
         IdGenerator generator = new SnowFlowerIdGenerator();
         long expected = generator.nextId();
         ConfigInfo configInfo = new ConfigInfo();

File: core/src/main/java/com/alibaba/nacos/core/code/LoggingSpringApplicationRunListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.SpringApplication;
@@ -56,7 +56,7 @@ public void starting() {
     
     @Override
     public void environmentPrepared(ConfigurableEnvironment environment) {
-        ApplicationUtils.injectEnvironment(environment);
+        EnvUtil.setEnvironment(environment);
         if (!environment.containsProperty(CONFIG_PROPERTY)) {
             System.setProperty(CONFIG_PROPERTY, DEFAULT_NACOS_LOGBACK_LOCATION);
             if (LOGGER.isInfoEnabled()) {

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.core.code;
 
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -47,7 +46,7 @@ public class StandaloneProfileApplicationListener
     public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {
         
         ConfigurableEnvironment environment = event.getEnvironment();
-        ApplicationUtils.injectEnvironment(environment);
+        EnvUtil.setEnvironment(environment);
     
         if (environment.getProperty(STANDALONE_MODE_PROPERTY_NAME, boolean.class, false)) {
             environment.addActiveProfile(STANDALONE_SPRING_PROFILE);

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -24,7 +24,6 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.file.WatchFileCenter;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
@@ -75,7 +74,6 @@ public void starting() {
     
     @Override
     public void environmentPrepared(ConfigurableEnvironment environment) {
-        ApplicationUtils.injectEnvironment(environment);
         EnvUtil.setEnvironment(environment);
         try {
             environment.getPropertySources().addLast(new OriginTrackedMapPropertySource("first_pre",

File: core/src/test/java/com/alibaba/nacos/core/cluster/MemberUtilsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.cluster;
 
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -41,7 +41,7 @@ public class MemberUtilsTest {
     
     @Before
     public void setUp() {
-        ApplicationUtils.injectEnvironment(environment);
+        EnvUtil.setEnvironment(environment);
         originalMember = buildMember();
     }
     

File: core/src/test/java/com/alibaba/nacos/core/cluster/ServerMemberManagerTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.notify.EventPublisher;
 import com.alibaba.nacos.common.notify.NotifyCenter;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -59,7 +59,7 @@ public class ServerMemberManagerTest {
     public void setUp() throws Exception {
         when(environment.getProperty("server.port", Integer.class, 8848)).thenReturn(8848);
         when(environment.getProperty("nacos.member-change-event.queue.size", Integer.class, 128)).thenReturn(128);
-        ApplicationUtils.injectEnvironment(environment);
+        EnvUtil.setEnvironment(environment);
         when(servletContext.getContextPath()).thenReturn("");
         serverMemberManager = new ServerMemberManager(servletContext);
         serverMemberManager.updateMember(Member.builder().ip("1.1.1.1").port(8848).state(NodeState.UP).build());

File: core/src/test/java/com/alibaba/nacos/core/distributed/raft/JRaftServerTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.BeforeClass;
@@ -41,7 +41,7 @@ public class JRaftServerTest {
     
     @BeforeClass
     public static void beforeClass() {
-        ApplicationUtils.injectEnvironment(new MockEnvironment());
+        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     @Before
@@ -111,4 +111,4 @@ public RestResult<String> execute(Map<String, String> args) {
         Assert.assertFalse(changed.get());
         changed.set(false);
     }
-}
\ No newline at end of file
+}

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.naming.misc.NetUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.push.PushService;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Rule;
@@ -82,7 +83,7 @@ public class BaseTest {
     
     @Before
     public void before() {
-        ApplicationUtils.injectEnvironment(environment);
+        EnvUtil.setEnvironment(environment);
         ApplicationUtils.injectContext(context);
     }
     

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/ClusterVersionJudgementTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;
@@ -40,7 +40,7 @@ public class ClusterVersionJudgementTest {
     
     @BeforeClass
     public static void beforeClass() {
-        ApplicationUtils.injectEnvironment(new MockEnvironment());
+        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     @Before

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.storage.kv.KvStorage;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.junit.After;
 import org.junit.Assert;
@@ -41,7 +40,7 @@ public class NamingSnapshotOperationTest {
     
     static {
         RaftExecutor.init(new RaftConfig());
-        ApplicationUtils.injectEnvironment(new MockEnvironment());
+        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     @Mock

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSetTest.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
@@ -36,7 +37,7 @@ public class RaftPeerSetTest {
     @BeforeClass
     public static void beforeClass() {
         ApplicationUtils.injectContext(new StaticApplicationContext());
-        ApplicationUtils.injectEnvironment(new MockEnvironment());
+        EnvUtil.setEnvironment(new MockEnvironment());
     }
     
     private ServerMemberManager memberManager;
@@ -113,4 +114,4 @@ protected void changePeers(Collection<Member> members) {
         }
     }
     
-}
\ No newline at end of file
+}

File: test/src/test/java/com/alibaba/nacos/test/core/SnowFlowerIdGenerator_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.core;
 
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;
@@ -29,7 +29,7 @@ public class SnowFlowerIdGenerator_ITCase {
 
 	@Test
 	public void test_idGenerator() {
-		ApplicationUtils.injectEnvironment(new StandardEnvironment());
+		EnvUtil.setEnvironment(new StandardEnvironment());
 		SnowFlowerIdGenerator generator1 = new SnowFlowerIdGenerator();
 		SnowFlowerIdGenerator generator2 = new SnowFlowerIdGenerator();
 		SnowFlowerIdGenerator generator3 = new SnowFlowerIdGenerator();

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -61,7 +61,7 @@ public class MemberLookup_ITCase extends BaseTest {
 	@Before
 	public void before() throws Exception {
 		System.setProperty("nacos.home", path);
-		ApplicationUtils.injectEnvironment(new StandardEnvironment());
+		EnvUtil.setEnvironment(new StandardEnvironment());
 		EnvUtil.setIsStandalone(false);
 		System.out.println(EnvUtil.getStandaloneMode());
 

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -25,7 +25,6 @@
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.sys.env.EnvUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.env.Constants;
 import org.junit.After;
 import org.junit.AfterClass;
@@ -66,7 +65,7 @@ public static void initClass() throws Exception {
         System.setProperty(Constants.NACOS_SERVER_IP, "127.0.0.1");
         System.setProperty("server.port", "8847");
         EnvUtil.setIsStandalone(true);
-        ApplicationUtils.injectEnvironment(new StandardEnvironment());
+        EnvUtil.setEnvironment(new StandardEnvironment());
     }
     
     @AfterClass

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthConfigs.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.auth.common;
 
 import com.alibaba.nacos.common.JustForTest;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import io.jsonwebtoken.io.Decoders;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -89,7 +89,7 @@ public boolean isAuthEnabled() {
             return BooleanUtils.toBoolean(enabled);
         }
         return BooleanUtils
-                .toBoolean(ApplicationUtils.getProperty("nacos.core.auth.enabled", "false"));
+                .toBoolean(EnvUtil.getProperty("nacos.core.auth.enabled", "false"));
     }
     
     /**
@@ -102,7 +102,7 @@ public boolean isCachingEnabled() {
             return cachingEnabled;
         }
         return BooleanUtils
-                .toBoolean(ApplicationUtils.getProperty("nacos.core.auth.caching.enabled", "true"));
+                .toBoolean(EnvUtil.getProperty("nacos.core.auth.caching.enabled", "true"));
     }
     
     @JustForTest

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionDistributedEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;
@@ -31,6 +31,6 @@ public class ConditionDistributedEmbedStorage implements Condition {
     
     @Override
     public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {
-        return PropertyUtil.isEmbeddedStorage() && !ApplicationUtils.getStandaloneMode();
+        return PropertyUtil.isEmbeddedStorage() && !EnvUtil.getStandaloneMode();
     }
-}
\ No newline at end of file
+}

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionStandaloneEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;
@@ -32,6 +32,6 @@ public class ConditionStandaloneEmbedStorage implements Condition {
     
     @Override
     public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {
-        return PropertyUtil.isEmbeddedStorage() && ApplicationUtils.getStandaloneMode();
+        return PropertyUtil.isEmbeddedStorage() && EnvUtil.getStandaloneMode();
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 
 /**
  * ConfigChangePublisher.
@@ -34,7 +34,7 @@ public class ConfigChangePublisher {
      * @param event ConfigDataChangeEvent instance.
      */
     public static void notifyConfigChange(ConfigDataChangeEvent event) {
-        if (PropertyUtil.isEmbeddedStorage() && !ApplicationUtils.getStandaloneMode()) {
+        if (PropertyUtil.isEmbeddedStorage() && !EnvUtil.getStandaloneMode()) {
             return;
         }
         NotifyCenter.publishEvent(event);

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
@@ -74,7 +74,7 @@ protected ConfigSubService() {
      * @return all path.
      */
     private String getUrl(String ip, String relativePath) {
-        return "http://" + ip + ApplicationUtils.getContextPath() + relativePath;
+        return "http://" + ip + EnvUtil.getContextPath() + relativePath;
     }
     
     private List<SampleResult> runCollectionJob(String url, Map<String, String> params,

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.zaxxer.hikari.HikariDataSource;
 import org.springframework.dao.DataAccessException;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
@@ -116,7 +116,7 @@ public void init() {
     public synchronized void reload() throws IOException {
         try {
             dataSourceList = new ExternalDataSourceProperties()
-                    .build(ApplicationUtils.getEnvironment(), (dataSource) -> {
+                    .build(EnvUtil.getEnvironment(), (dataSource) -> {
                         JdbcTemplate jdbcTemplate = new JdbcTemplate();
                         jdbcTemplate.setQueryTimeout(queryTimeout);
                         jdbcTemplate.setDataSource(dataSource);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/EmbeddedDumpService.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.stereotype.Component;
@@ -76,7 +76,7 @@ public EmbeddedDumpService(PersistService persistService, ServerMemberManager me
     @PostConstruct
     @Override
     protected void init() throws Throwable {
-        if (ApplicationUtils.getStandaloneMode()) {
+        if (EnvUtil.getStandaloneMode()) {
             dumpOperate(processor, dumpAllProcessor, dumpAllBetaProcessor, dumpAllTagProcessor);
             return;
         }
@@ -155,7 +155,7 @@ private boolean shouldRetry(Throwable ex) {
     
     @Override
     protected boolean canExecute() {
-        if (ApplicationUtils.getStandaloneMode()) {
+        if (EnvUtil.getStandaloneMode()) {
             return true;
         }
         // if is derby + raft mode, only leader can execute

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
@@ -114,7 +115,7 @@ private boolean canExecute() {
         if (!PropertyUtil.isEmbeddedStorage()) {
             return true;
         }
-        if (ApplicationUtils.getStandaloneMode()) {
+        if (EnvUtil.getStandaloneMode()) {
             return true;
         }
         ProtocolManager protocolManager = ApplicationUtils.getBean(ProtocolManager.class);

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTaskProcessor.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -75,7 +75,7 @@ boolean notifyToDump(String dataId, String group, String tenant, long lastModifi
                     .asList(NotifyService.NOTIFY_HEADER_LAST_MODIFIED, String.valueOf(lastModified),
                             NotifyService.NOTIFY_HEADER_OP_HANDLE_IP, InetUtils.getSelfIP());
             String urlString = MessageFormat
-                    .format(URL_PATTERN, serverIp, ApplicationUtils.getContextPath(), dataId, group);
+                    .format(URL_PATTERN, serverIp, EnvUtil.getContextPath(), dataId, group);
             
             RestResult<String> result = NotifyService.invokeURL(urlString, headers, Constants.ENCODE);
             if (result.ok()) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -27,8 +27,8 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.DiskUtils;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;
 
@@ -61,7 +61,7 @@ public class DerbySnapshotOperation implements SnapshotOperation {
     
     private final String snapshotArchive = "derby_data.zip";
     
-    private final String derbyBaseDir = Paths.get(ApplicationUtils.getNacosHome(), "data", "derby-data").toString();
+    private final String derbyBaseDir = Paths.get(EnvUtil.getNacosHome(), "data", "derby-data").toString();
     
     private final String restoreDB = "jdbc:derby:" + derbyBaseDir;
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.RowMapper;
 
@@ -214,7 +214,7 @@ public void updateLimit(final String sql, final Object[] args) {
     }
     
     private boolean isDerby() {
-        return (ApplicationUtils.getStandaloneMode() && !PropertyUtil.isUseExternalDB()) || PropertyUtil
+        return (EnvUtil.getStandaloneMode() && !PropertyUtil.isUseExternalDB()) || PropertyUtil
                 .isEmbeddedStorage();
     }
     

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.IPUtil;
 import com.alibaba.nacos.core.utils.Loggers;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.lang3.StringUtils;
 
 import java.time.LocalDateTime;
@@ -142,7 +142,7 @@ public static void onFail(Member member, Throwable ex) {
         manager.getMemberAddressInfos().remove(member.getAddress());
         cloneMember.setState(NodeState.SUSPICIOUS);
         cloneMember.setFailAccessCnt(member.getFailAccessCnt() + 1);
-        int maxFailAccessCnt = ApplicationUtils.getProperty("nacos.core.member.fail-access-cnt", Integer.class, 3);
+        int maxFailAccessCnt = EnvUtil.getProperty("nacos.core.member.fail-access-cnt", Integer.class, 3);
         
         // If the number of consecutive failures to access the target node reaches
         // a maximum, or the link request is rejected, the state is directly down
@@ -165,7 +165,7 @@ public static void syncToFile(Collection<Member> members) {
             for (String member : simpleMembers(members)) {
                 builder.append(member).append(StringUtils.LF);
             }
-            ApplicationUtils.writeClusterConf(builder.toString());
+            EnvUtil.writeClusterConf(builder.toString());
         } catch (Throwable ex) {
             Loggers.CLUSTER.error("cluster member node persistence failed : {}", ExceptionUtil.getAllExceptionMsg(ex));
         }

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
 
 import java.util.Collections;
@@ -33,7 +33,7 @@ public class StandaloneMemberLookup extends AbstractMemberLookup {
     @Override
     public void start() {
         if (start.compareAndSet(false, true)) {
-            String url = InetUtils.getSelfIP() + ":" + ApplicationUtils.getPort();
+            String url = InetUtils.getSelfIP() + ":" + EnvUtil.getPort();
             afterLookup(MemberUtils.readServerConf(Collections.singletonList(url)));
         }
     }

File: core/src/main/java/com/alibaba/nacos/core/code/ControllerMethodsCache.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.core.auth.RequestMappingInfo.RequestMappingInfoComparator;
 import com.alibaba.nacos.core.auth.condition.ParamRequestCondition;
 import com.alibaba.nacos.core.auth.condition.PathRequestCondition;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.lang3.ArrayUtils;
 import org.reflections.Reflections;
 import org.slf4j.Logger;
@@ -69,7 +69,7 @@ public Method getMethod(HttpServletRequest request) {
             return null;
         }
         String httpMethod = request.getMethod();
-        String urlKey = httpMethod + REQUEST_PATH_SEPARATOR + path.replaceFirst(ApplicationUtils.getContextPath(), "");
+        String urlKey = httpMethod + REQUEST_PATH_SEPARATOR + path.replaceFirst(EnvUtil.getContextPath(), "");
         List<RequestMappingInfo> requestMappingInfos = urlLookup.get(urlKey);
         if (CollectionUtils.isEmpty(requestMappingInfos)) {
             return null;

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -47,14 +48,14 @@ public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {
         
         ConfigurableEnvironment environment = event.getEnvironment();
         ApplicationUtils.injectEnvironment(environment);
-        
+    
         if (environment.getProperty(STANDALONE_MODE_PROPERTY_NAME, boolean.class, false)) {
             environment.addActiveProfile(STANDALONE_SPRING_PROFILE);
         }
         
         if (LOGGER.isInfoEnabled()) {
             LOGGER.info("Spring Environment's active profiles : {} in standalone mode : {}",
-                    Arrays.asList(environment.getActiveProfiles()), ApplicationUtils.getStandaloneMode());
+                    Arrays.asList(environment.getActiveProfiles()), EnvUtil.getStandaloneMode());
         }
         
     }

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.core.utils.Commons;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;
@@ -160,7 +160,7 @@ public RestResult<String> leave(@RequestBody Collection<String> params) throws E
         CountDownLatch latch = new CountDownLatch(notifyList.size());
         for (Member member : notifyList) {
             final String url = HttpUtils
-                    .buildUrl(false, member.getAddress(), ApplicationUtils.getContextPath(), Commons.NACOS_CORE_CONTEXT,
+                    .buildUrl(false, member.getAddress(), EnvUtil.getContextPath(), Commons.NACOS_CORE_CONTEXT,
                             "/cluster/server/leave");
             nacosAsyncRestTemplate.post(url, Header.EMPTY, Query.EMPTY, params, genericType.getType(), new Callback<String>() {
                 @Override

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/DistroProtocol.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.core.distributed.distro.task.verify.DistroVerifyTask;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import com.alibaba.nacos.core.utils.Loggers;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.stereotype.Component;
 
 /**
@@ -63,7 +63,7 @@ public DistroProtocol(ServerMemberManager memberManager, DistroComponentHolder d
     }
     
     private void startDistroTask() {
-        if (ApplicationUtils.getStandaloneMode()) {
+        if (EnvUtil.getStandaloneMode()) {
             isInitialized = true;
             return;
         }

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/SnowFlowerIdGenerator.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.distributed.id;
 
 import com.alibaba.nacos.consistency.IdGenerator;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import com.google.common.base.Preconditions;
 import org.slf4j.Logger;
@@ -80,7 +80,7 @@ public class SnowFlowerIdGenerator implements IdGenerator {
     private long currentId;
     
     {
-        long workerId = ApplicationUtils.getProperty("nacos.core.snowflake.worker-id", Integer.class, -1);
+        long workerId = EnvUtil.getProperty("nacos.core.snowflake.worker-id", Integer.class, -1);
         
         if (workerId != -1) {
             this.workerId = workerId;
@@ -170,4 +170,4 @@ private long waitUntilNextTime(long lastTimestamp) {
         return time;
     }
     
-}
\ No newline at end of file
+}

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -41,7 +41,7 @@
 import com.alibaba.nacos.core.distributed.raft.utils.RaftOptionsBuilder;
 import com.alibaba.nacos.core.monitor.MetricsMonitor;
 import com.alibaba.nacos.core.utils.Loggers;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alipay.sofa.jraft.CliService;
 import com.alipay.sofa.jraft.Node;
 import com.alipay.sofa.jraft.RaftGroupService;
@@ -233,7 +233,7 @@ synchronized void createMultiRaftGroup(Collection<RequestProcessor4CP> processor
             return;
         }
         
-        final String parentPath = Paths.get(ApplicationUtils.getNacosHome(), "data/protocol/raft").toString();
+        final String parentPath = Paths.get(EnvUtil.getNacosHome(), "data/protocol/raft").toString();
         
         for (RequestProcessor4CP processor : processors) {
             final String groupName = processor.group();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -46,7 +46,7 @@
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.pojo.Record;
 import com.alibaba.nacos.naming.utils.Constants;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.google.protobuf.ByteString;
 import org.apache.commons.lang3.reflect.TypeUtils;
 import org.springframework.stereotype.Service;
@@ -151,7 +151,7 @@ private void init() {
                 .subscribe(Constants.NAMING_PERSISTENT_SERVICE_GROUP, MetadataKey.LEADER_META_DATA,
                         (o, arg) -> hasLeader = StringUtils.isNotBlank(String.valueOf(arg)));
         // If you choose to use the new RAFT protocol directly, there will be no compatible logical execution
-        if (ApplicationUtils.getProperty(Constants.NACOS_NAMING_USE_NEW_RAFT_FIRST, Boolean.class, false)) {
+        if (EnvUtil.getProperty(Constants.NACOS_NAMING_USE_NEW_RAFT_FIRST, Boolean.class, false)) {
             NotifyCenter.registerSubscriber(notifier);
             waitLeader();
             startNotify = true;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftConsistencyServiceImpl.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.pojo.Record;
 import com.alibaba.nacos.naming.utils.Constants;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Service;
 
@@ -73,7 +73,7 @@ public RaftConsistencyServiceImpl(ClusterVersionJudgement versionJudgement, Raft
     
     @PostConstruct
     protected void init() throws Exception {
-        if (ApplicationUtils.getProperty(Constants.NACOS_NAMING_USE_NEW_RAFT_FIRST, Boolean.class, false)) {
+        if (EnvUtil.getProperty(Constants.NACOS_NAMING_USE_NEW_RAFT_FIRST, Boolean.class, false)) {
             this.raftCore.shutdown();
         }
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
@@ -75,7 +75,7 @@ public ObjectNode server() {
         ObjectNode result = JacksonUtils.createEmptyJsonNode();
         result.put("msg",
                 "Hello! I am Nacos-Naming and healthy! total services: raft " + serviceManager.getServiceCount()
-                        + ", local port:" + ApplicationUtils.getPort());
+                        + ", local port:" + EnvUtil.getPort());
         return result;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.NetUtils;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
@@ -98,7 +98,7 @@ public List<Subscriber> getSubscribers(String serviceName, String namespaceId, b
                 }
                 
                 RestResult<String> result = HttpClient.httpGet(
-                        "http://" + server.getAddress() + ApplicationUtils.getContextPath()
+                        "http://" + server.getAddress() + EnvUtil.getContextPath()
                                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + SUBSCRIBER_ON_SYNC_URL, new ArrayList<>(),
                         paramValues);
                 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
@@ -136,7 +137,7 @@ private void deleteIp(Instance instance) {
                     .appendParam("ephemeral", "true").appendParam("clusterName", instance.getClusterName())
                     .appendParam("serviceName", service.getName()).appendParam("namespaceId", service.getNamespaceId());
             
-            String url = "http://" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER + ApplicationUtils.getPort() + ApplicationUtils.getContextPath()
+            String url = "http://" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort() + EnvUtil.getContextPath()
                     + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance?" + request.toUrl();
             
             // delete instance asynchronously:

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;
@@ -93,7 +93,7 @@ public void init() {
                 }
                 
                 RestResult<String> httpResult = HttpClient.httpPost(
-                        "http://" + server.getAddress() + ApplicationUtils.getContextPath()
+                        "http://" + server.getAddress() + EnvUtil.getContextPath()
                                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/api/healthCheckResult", null, params);
                 
                 if (!httpResult.ok()) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.MapUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -101,7 +101,7 @@ public static RestResult<String> request(String url, List<String> headers, Map<S
         header.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
         header.addParam(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.version);
         header.addParam(HttpHeaderConsts.USER_AGENT_HEADER, UtilsAndCommons.SERVER_VERSION);
-        header.addParam(HttpHeaderConsts.REQUEST_SOURCE_HEADER, ApplicationUtils.getLocalAddress());
+        header.addParam(HttpHeaderConsts.REQUEST_SOURCE_HEADER, EnvUtil.getLocalAddress());
         header.addParam(HttpHeaderConsts.ACCEPT_CHARSET, encoding);
         
         HttpClientConfig httpClientConfig = HttpClientConfig.builder().setConTimeOutMillis(connectTimeout)

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NetUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.misc;
 
 import com.alibaba.nacos.common.utils.IPUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
@@ -33,7 +33,7 @@ public class NetUtils {
      * @return local server address
      */
     public static String localServer() {
-        return InetUtils.getSelfIP() + IPUtil.IP_PORT_SPLITER + ApplicationUtils.getPort();
+        return InetUtils.getSelfIP() + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();
     }
     
 }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.misc;
 
 import com.alibaba.nacos.common.utils.IPUtil;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
 import org.springframework.util.StringUtils;
@@ -43,11 +43,11 @@ public void send(final String serverIP, Message msg) {
         
         params.put("serverStatus", msg.getData());
         
-        String url = "http://" + serverIP + ":" + ApplicationUtils.getPort() + ApplicationUtils.getContextPath()
+        String url = "http://" + serverIP + ":" + EnvUtil.getPort() + EnvUtil.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/operator/server/status";
         
         if (IPUtil.containsPort(serverIP)) {
-            url = "http://" + serverIP + ApplicationUtils.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT
+            url = "http://" + serverIP + EnvUtil.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT
                     + "/operator/server/status";
         }
         

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.naming.selector.LabelSelector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.fasterxml.jackson.core.type.TypeReference;
 import org.apache.commons.lang3.StringUtils;
 
@@ -120,7 +120,7 @@ public class UtilsAndCommons {
     public static final String PERSIST = "persist";
     
     public static final String DATA_BASE_DIR =
-            ApplicationUtils.getNacosHome() + File.separator + "data" + File.separator + "naming";
+            EnvUtil.getNacosHome() + File.separator + "data" + File.separator + "naming";
     
     public static final String RAFT_CACHE_FILE_PREFIX = "com.alibaba.nacos.naming";
     

File: sys/src/main/java/com/alibaba/nacos/sys/env/NacosAutoRefreshPropertySourceLoader.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.sys.file.FileChangeEvent;
 import com.alibaba.nacos.sys.file.FileWatcher;
 import com.alibaba.nacos.sys.file.WatchFileCenter;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.boot.env.OriginTrackedMapPropertySource;
 import org.springframework.boot.env.PropertySourceLoader;
@@ -57,7 +56,7 @@ public List<PropertySource<?>> load(String name, Resource resource) throws IOExc
         properties.putAll(tmp);
         
         try {
-            WatchFileCenter.registerWatcher(ApplicationUtils.getConfFilePath(), new FileWatcher() {
+            WatchFileCenter.registerWatcher(EnvUtil.getConfPath(), new FileWatcher() {
                 @Override
                 public void onChange(FileChangeEvent event) {
                     try {

File: test/src/test/java/com/alibaba/nacos/test/core/BaseClusterTest.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.consistency.cp.MetadataKey;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
@@ -186,7 +186,7 @@ public static void after() throws Exception {
     private static void run(final int index, final CountDownLatch latch, final Class<?> cls) {
         Runnable runnable = () -> {
             try {
-                ApplicationUtils.setIsStandalone(false);
+                EnvUtil.setIsStandalone(false);
                 
                 final String path = Paths.get(System.getProperty("user.home"), "/nacos-" + index + "/").toString();
                 DiskUtils.deleteDirectory(path);

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.sys.env.Constants;
 import org.junit.After;
@@ -64,7 +65,7 @@ public class ServerMemberManager_ITCase {
     public static void initClass() throws Exception {
         System.setProperty(Constants.NACOS_SERVER_IP, "127.0.0.1");
         System.setProperty("server.port", "8847");
-        ApplicationUtils.setIsStandalone(true);
+        EnvUtil.setIsStandalone(true);
         ApplicationUtils.injectEnvironment(new StandardEnvironment());
     }
     

File: test/src/test/java/com/alibaba/nacos/test/core/code/ControllerMethodsCacheTest.java
Patch:
@@ -19,7 +19,7 @@
 import static org.junit.Assert.assertEquals;
 
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import java.lang.reflect.Method;
 import java.util.HashMap;
 import java.util.Map;
@@ -40,7 +40,7 @@ public class ControllerMethodsCacheTest {
     @Before
     public void setUp() throws Exception {
         methodsCache = new ControllerMethodsCache();
-        ApplicationUtils.setContextPath("/nacos");
+        EnvUtil.setContextPath("/nacos");
         methodsCache.initClassMethod("com.alibaba.nacos.config.server.controller");
     }
 

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.NacosNamingService;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.EnvUtil;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;
@@ -65,7 +65,7 @@ public void init() throws Exception {
         }
 
         while (true) {
-            if (!"UP".equals(naming.getServerStatus()) || ApplicationUtils.getPort() == 0) {
+            if (!"UP".equals(naming.getServerStatus()) || EnvUtil.getPort() == 0) {
                 Thread.sleep(1000L);
                 continue;
             }

File: common/src/main/java/com/alibaba/nacos/common/utils/NamespaceUtil.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.utils;
-
-import org.apache.commons.lang3.StringUtils;
+package com.alibaba.nacos.common.utils;
 
 /**
  * namespace(tenant) util.

File: common/src/test/java/com/alibaba/nacos/common/utils/NamespaceUtilTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.utils;
+package com.alibaba.nacos.common.utils;
 
 import org.junit.Assert;
 import org.junit.Test;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ConfigResourceParser.java
Patch:
@@ -20,6 +20,7 @@
 
 import com.alibaba.nacos.auth.model.Resource;
 import com.alibaba.nacos.auth.parser.ResourceParser;
+import com.alibaba.nacos.common.utils.NamespaceUtil;
 import org.apache.commons.lang3.StringUtils;
 
 /**
@@ -35,7 +36,7 @@ public class ConfigResourceParser implements ResourceParser {
     @Override
     public String parseName(Object request) {
         HttpServletRequest req = (HttpServletRequest) request;
-        String namespaceId = req.getParameter("tenant");
+        String namespaceId = NamespaceUtil.processNamespaceParameter(req.getParameter("tenant"));
         String groupName = req.getParameter("group");
         String dataId = req.getParameter("dataId");
         

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -44,7 +44,7 @@
 import com.alibaba.nacos.config.server.utils.MD5Util;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
-import com.alibaba.nacos.config.server.utils.NamespaceUtil;
+import com.alibaba.nacos.common.utils.NamespaceUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
 import com.alibaba.nacos.sys.utils.InetUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingResourceParser.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.auth.model.Resource;
 import com.alibaba.nacos.auth.parser.ResourceParser;
+import com.alibaba.nacos.common.utils.NamespaceUtil;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
@@ -39,7 +40,7 @@ public String parseName(Object request) {
         
         HttpServletRequest req = (HttpServletRequest) request;
         
-        String namespaceId = req.getParameter(CommonParams.NAMESPACE_ID);
+        String namespaceId = NamespaceUtil.processNamespaceParameter(req.getParameter(CommonParams.NAMESPACE_ID));
         String serviceName = req.getParameter(CommonParams.SERVICE_NAME);
         String groupName = req.getParameter(CommonParams.GROUP_NAME);
         if (StringUtils.isBlank(groupName)) {

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/SubscribeServiceRequest.java
Patch:
@@ -30,8 +30,9 @@ public class SubscribeServiceRequest extends AbstractNamingRequest {
     public SubscribeServiceRequest() {
     }
     
-    public SubscribeServiceRequest(String namespace, String serviceName, String clusters, boolean subscribe) {
-        super(namespace, serviceName, null);
+    public SubscribeServiceRequest(String namespace, String groupName, String serviceName, String clusters,
+            boolean subscribe) {
+        super(namespace, serviceName, groupName);
         this.clusters = clusters;
         this.subscribe = subscribe;
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -139,7 +139,7 @@ public boolean serverHealthy() {
     }
     
     private NamingClientProxy getExecuteClientProxy() {
-        return grpcClientProxy.isEnable() ? grpcClientProxy : httpClientProxy;
+        return grpcClientProxy;
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/CatalogServiceV2Impl.java
Patch:
@@ -116,7 +116,7 @@ public List<? extends Instance> listInstances(String namespaceId, String groupNa
             throw new NacosException(NacosException.NOT_FOUND, "cluster " + clusterName + " is not found!");
         }
         ServiceInfo serviceInfo = serviceStorage.getData(service);
-        ServiceInfo result = ServiceUtil.filterInstances(serviceInfo, clusterName, false);
+        ServiceInfo result = ServiceUtil.selectInstances(serviceInfo, clusterName);
         return result.getHosts();
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/push/v2/task/PushExecuteTask.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
-import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.naming.core.v2.pojo.Service;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.pojo.Subscriber;
@@ -44,7 +43,7 @@ public PushExecuteTask(Service service, PushDelayTaskExecuteEngine delayTaskEngi
     public void run() {
         try {
             ServiceInfo serviceInfo = delayTaskEngine.getServiceStorage().getPushData(service);
-            serviceInfo = ServiceUtil.filterInstances(serviceInfo, StringUtils.EMPTY, true);
+            serviceInfo = ServiceUtil.selectInstances(serviceInfo, true, true);
             for (String each : delayTaskEngine.getIndexesManager().getAllClientsSubscribeService(service)) {
                 Subscriber subscriber = delayTaskEngine.getClientManager().getClient(each).getSubscriber(service);
                 delayTaskEngine.getPushExecuteService().doPush(each, subscriber, serviceInfo);

File: naming/src/main/java/com/alibaba/nacos/naming/remote/handler/ServiceQueryRequestHandler.java
Patch:
@@ -50,7 +50,7 @@ public QueryServiceResponse handle(ServiceQueryRequest request, RequestMeta meta
         String cluster = null == request.getCluster() ? "" : request.getCluster();
         boolean healthyOnly = request.isHealthyOnly();
         ServiceInfo result = serviceStorage.getData(service);
-        result = ServiceUtil.filterInstances(result, cluster, healthyOnly);
+        result = ServiceUtil.selectInstances(result, cluster, healthyOnly, true);
         return QueryServiceResponse.buildSuccessResponse(result);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/selector/Selector.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.selector;
 
-import com.alibaba.nacos.naming.core.Instance;
+import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
 
@@ -58,5 +58,5 @@ public interface Selector {
      * @param providers candidate provider addresses
      * @return selected provider addresses
      */
-    List<Instance> select(String consumer, List<Instance> providers);
+    <T extends Instance> List<T> select(String consumer, List<T> providers);
 }

File: sys/src/main/java/com/alibaba/nacos/sys/env/EnvUtil.java
Patch:
@@ -164,9 +164,7 @@ public static String getContextPath() {
         if (Objects.isNull(contextPath)) {
             contextPath = getProperty(Constants.WEB_CONTEXT_PATH, "/nacos");
             if (Constants.ROOT_WEB_CONTEXT_PATH.equals(contextPath)) {
-                return StringUtils.EMPTY;
-            } else {
-                return contextPath;
+                contextPath = StringUtils.EMPTY;
             }
         }
         return contextPath;

File: client/src/test/java/com/alibaba/nacos/client/naming/cache/DiskCacheTest.java
Patch:
@@ -41,7 +41,7 @@ public class DiskCacheTest {
     @Before
     public void setUp() throws Exception {
         System.out.println(CACHE_DIR);
-        serviceInfo = new ServiceInfo("testName", "testClusters");
+        serviceInfo = new ServiceInfo("G@@testName", "testClusters");
         instance = new Instance();
         instance.setClusterName("testClusters");
         instance.setIp("1.1.1.1");
@@ -66,8 +66,8 @@ public void testCache() {
         DiskCache.write(serviceInfo, CACHE_DIR);
         Map<String, ServiceInfo> actual = DiskCache.read(CACHE_DIR);
         assertEquals(1, actual.size());
-        assertTrue(actual.containsKey(serviceInfo.getKeyEncoded()));
-        assertServiceInfo(actual.get(serviceInfo.getKeyEncoded()), serviceInfo);
+        assertTrue(actual.containsKey(serviceInfo.getKey()));
+        assertServiceInfo(actual.get(serviceInfo.getKey()), serviceInfo);
     }
     
     private void assertServiceInfo(ServiceInfo actual, ServiceInfo expected) {

File: common/src/main/java/com/alibaba/nacos/common/http/param/Header.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
-import com.alibaba.nacos.common.utils.MapUtils;
+import com.alibaba.nacos.common.utils.MapUtil;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.ArrayList;
@@ -130,7 +130,7 @@ public Header addAll(List<String> list) {
      * @param params parameters
      */
     public void addAll(Map<String, String> params) {
-        if (MapUtils.isNotEmpty(params)) {
+        if (MapUtil.isNotEmpty(params)) {
             for (Map.Entry<String, String> entry : params.entrySet()) {
                 addParam(entry.getKey(), entry.getValue());
             }
@@ -145,7 +145,7 @@ public void addAll(Map<String, String> params) {
      * @param headers original response header
      */
     public void setOriginalResponseHeader(Map<String, List<String>> headers) {
-        if (MapUtils.isNotEmpty(headers)) {
+        if (MapUtil.isNotEmpty(headers)) {
             this.originalResponseHeader.putAll(headers);
             for (Map.Entry<String, List<String>> entry : this.originalResponseHeader.entrySet()) {
                 addParam(entry.getKey(), entry.getValue().get(0));

File: common/src/main/java/com/alibaba/nacos/common/http/param/Query.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.common.http.param;
 
-import com.alibaba.nacos.common.utils.MapUtils;
+import com.alibaba.nacos.common.utils.MapUtil;
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
@@ -70,7 +70,7 @@ public Object getValue(String key) {
      * @return this query
      */
     public Query initParams(Map<String, String> params) {
-        if (MapUtils.isNotEmpty(params)) {
+        if (MapUtil.isNotEmpty(params)) {
             for (Map.Entry<String, String> entry : params.entrySet()) {
                 addParam(entry.getKey(), entry.getValue());
             }

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.common.spi.NacosServiceLoader;
 import com.alibaba.nacos.common.utils.BiFunction;
 import com.alibaba.nacos.common.utils.ClassUtils;
-import com.alibaba.nacos.common.utils.MapUtils;
+import com.alibaba.nacos.common.utils.MapUtil;
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -206,7 +206,7 @@ private static void addSubscriber(final Subscriber consumer, Class<? extends Eve
         final String topic = ClassUtils.getCanonicalName(subscribeType);
         synchronized (NotifyCenter.class) {
             // MapUtils.computeIfAbsent is a unsafe method.
-            MapUtils.computeIfAbsent(INSTANCE.publisherMap, topic, publisherFactory, subscribeType, ringBufferSize);
+            MapUtil.computeIfAbsent(INSTANCE.publisherMap, topic, publisherFactory, subscribeType, ringBufferSize);
         }
         EventPublisher publisher = INSTANCE.publisherMap.get(topic);
         publisher.addSubscriber(consumer);
@@ -320,7 +320,7 @@ public static EventPublisher registerToPublisher(final Class<? extends Event> ev
         final String topic = ClassUtils.getCanonicalName(eventType);
         synchronized (NotifyCenter.class) {
             // MapUtils.computeIfAbsent is a unsafe method.
-            MapUtils.computeIfAbsent(INSTANCE.publisherMap, topic, publisherFactory, eventType, queueMaxSize);
+            MapUtil.computeIfAbsent(INSTANCE.publisherMap, topic, publisherFactory, eventType, queueMaxSize);
         }
         EventPublisher publisher = INSTANCE.publisherMap.get(topic);
         return publisher;

File: config/src/main/java/com/alibaba/nacos/config/server/result/ResultBuilder.java
Patch:
@@ -29,6 +29,7 @@
  * @Description: util for generating {@link RestResult}
  * @date 2019/6/28 14:47
  */
+@Deprecated
 public class ResultBuilder {
     
     /**

File: config/src/main/java/com/alibaba/nacos/config/server/result/code/ResultCodeEnum.java
Patch:
@@ -26,6 +26,7 @@
  * @Description: result code enum
  * @date 2019/6/28 14:43
  */
+@Deprecated
 public enum ResultCodeEnum implements IResultCode {
     
     /**

File: config/src/main/java/com/alibaba/nacos/config/server/result/core/IResultCode.java
Patch:
@@ -24,6 +24,7 @@
  * @Description: result code enum needs to be implemented this interface
  * @date 2019/6/28 14:44
  */
+@Deprecated
 public interface IResultCode {
     
     /**

File: common/src/main/java/com/alibaba/nacos/common/http/AbstractApacheHttpClientFactory.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.client.request.DefaultHttpClientRequest;
-import org.apache.http.client.config.RequestConfig;
 import org.apache.http.impl.client.HttpClients;
 import org.apache.http.protocol.RequestContent;
 
@@ -32,11 +31,10 @@ public abstract class AbstractApacheHttpClientFactory extends AbstractHttpClient
     @Override
     public final NacosRestTemplate createNacosRestTemplate() {
         final HttpClientConfig originalRequestConfig = buildHttpClientConfig();
-        final RequestConfig requestConfig = getRequestConfig();
         return new NacosRestTemplate(assignLogger(), new DefaultHttpClientRequest(
                 HttpClients.custom()
                         .addInterceptorLast(new RequestContent(true))
-                        .setDefaultRequestConfig(requestConfig)
+                        .setDefaultRequestConfig(getRequestConfig())
                         .setUserAgent(originalRequestConfig.getUserAgent())
                         .setMaxConnTotal(originalRequestConfig.getMaxConnTotal())
                         .setMaxConnPerRoute(originalRequestConfig.getMaxConnPerRoute())

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/PersistentNotifier.java
Patch:
@@ -25,9 +25,9 @@
 import com.alibaba.nacos.naming.consistency.ValueChangeEvent;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.pojo.Record;
-import org.jboss.netty.util.internal.ConcurrentHashMap;
 
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.function.Function;
 
 /**

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -31,14 +31,14 @@
 import io.grpc.Metadata;
 import io.grpc.MethodDescriptor;
 import io.grpc.Server;
-import io.grpc.ServerBuilder;
 import io.grpc.ServerCall;
 import io.grpc.ServerCallHandler;
 import io.grpc.ServerInterceptor;
 import io.grpc.ServerInterceptors;
 import io.grpc.ServerServiceDefinition;
 import io.grpc.ServerTransportFilter;
 import io.grpc.internal.ServerStream;
+import io.grpc.netty.shaded.io.grpc.netty.NettyServerBuilder;
 import io.grpc.netty.shaded.io.netty.channel.Channel;
 import io.grpc.protobuf.ProtoUtils;
 import io.grpc.stub.ServerCalls;
@@ -105,7 +105,8 @@ public <T, S> ServerCall.Listener<T> interceptCall(ServerCall<T, S> call, Metada
         };
     
         addServices(handlerRegistry, serverInterceptor);
-        server = ServerBuilder.forPort(getServicePort()).fallbackHandlerRegistry(handlerRegistry)
+    
+        server = NettyServerBuilder.forPort(getServicePort()).fallbackHandlerRegistry(handlerRegistry)
                 .addTransportFilter(new ServerTransportFilter() {
                     @Override
                     public Attributes transportReady(Attributes transportAttrs) {

File: consistency/src/main/java/com/alibaba/nacos/consistency/Config.java
Patch:
@@ -22,15 +22,15 @@
 /**
  * Consistent protocol related configuration objects.
  *
- * <p>{@link LogProcessor} : The consistency protocol provides services for all businesses, but each business only cares
+ * <p>{@link RequestProcessor} : The consistency protocol provides services for all businesses, but each business only cares
  * about the transaction information belonging to that business, and the transaction processing between the various
  * services should not block each other. Therefore, the LogProcessor is abstracted to implement the parallel processing
  * of transactions of different services. Corresponding LogProcessor sub-interface: LogProcessor4AP or LogProcessor4CP,
  * different consistency protocols will actively discover the corresponding LogProcessor
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public interface Config<L extends LogProcessor> extends Serializable {
+public interface Config<L extends RequestProcessor> extends Serializable {
     
     /**
      * Set the cluster node information to initialize，like [ip:port, ip:port, ip:port].

File: consistency/src/main/java/com/alibaba/nacos/consistency/ap/APProtocol.java
Patch:
@@ -25,6 +25,6 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public interface APProtocol<C extends Config, P extends LogProcessor4AP> extends ConsistencyProtocol<C, P> {
+public interface APProtocol<C extends Config, P extends RequestProcessor4AP> extends ConsistencyProtocol<C, P> {
 
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/ap/RequestProcessor4AP.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.consistency.ap;
 
-import com.alibaba.nacos.consistency.LogProcessor;
+import com.alibaba.nacos.consistency.RequestProcessor;
 
 /**
  * log processor for ap.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public abstract class LogProcessor4AP extends LogProcessor {
+public abstract class RequestProcessor4AP extends RequestProcessor {
 
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/CPProtocol.java
Patch:
@@ -25,7 +25,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public interface CPProtocol<C extends Config, P extends LogProcessor4CP> extends ConsistencyProtocol<C, P> {
+public interface CPProtocol<C extends Config, P extends RequestProcessor4CP> extends ConsistencyProtocol<C, P> {
     
     /**
      * Returns whether this node is a leader node

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/RequestProcessor4CP.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.consistency.cp;
 
-import com.alibaba.nacos.consistency.LogProcessor;
+import com.alibaba.nacos.consistency.RequestProcessor;
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 
 import java.util.Collections;
@@ -28,7 +28,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public abstract class LogProcessor4CP extends LogProcessor {
+public abstract class RequestProcessor4CP extends RequestProcessor {
     
     
     /**

File: core/src/main/java/com/alibaba/nacos/core/distributed/AbstractConsistencyProtocol.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.consistency.Config;
 import com.alibaba.nacos.consistency.ConsistencyProtocol;
-import com.alibaba.nacos.consistency.LogProcessor;
+import com.alibaba.nacos.consistency.RequestProcessor;
 import com.alibaba.nacos.consistency.ProtocolMetaData;
 
 import java.util.Collections;
@@ -32,7 +32,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public abstract class AbstractConsistencyProtocol<T extends Config, L extends LogProcessor>
+public abstract class AbstractConsistencyProtocol<T extends Config, L extends RequestProcessor>
         implements ConsistencyProtocol<T, L> {
     
     protected final ProtocolMetaData metaData = new ProtocolMetaData();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftConfig.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.Config;
-import com.alibaba.nacos.consistency.cp.LogProcessor4CP;
+import com.alibaba.nacos.consistency.cp.RequestProcessor4CP;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.stereotype.Component;
 
@@ -35,7 +35,7 @@
  */
 @Component
 @ConfigurationProperties(prefix = "nacos.core.protocol.raft")
-public class RaftConfig implements Config<LogProcessor4CP> {
+public class RaftConfig implements Config<RequestProcessor4CP> {
     
     private static final long serialVersionUID = 9174789390266064002L;
     

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosGetRequestProcessor.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.distributed.raft.processor;
 
+import com.alibaba.nacos.consistency.ProtoMessageUtil;
 import com.alibaba.nacos.consistency.Serializer;
 import com.alibaba.nacos.consistency.entity.GetRequest;
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
@@ -40,7 +41,7 @@ public NacosGetRequestProcessor(JRaftServer server, Serializer serializer) {
     
     @Override
     public void handleRequest(final RpcContext rpcCtx, GetRequest request) {
-        handleRequest(server, request.getGroup(), rpcCtx, request);
+        handleRequest(server, request.getGroup(), rpcCtx, ProtoMessageUtil.convertToReadRequest(request));
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosLogProcessor.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.distributed.raft.processor;
 
+import com.alibaba.nacos.consistency.ProtoMessageUtil;
 import com.alibaba.nacos.consistency.Serializer;
 import com.alibaba.nacos.consistency.entity.Log;
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
@@ -40,7 +41,7 @@ public NacosLogProcessor(JRaftServer server, Serializer serializer) {
     
     @Override
     public void handleRequest(final RpcContext rpcCtx, Log log) {
-        handleRequest(server, log.getGroup(), rpcCtx, log);
+        handleRequest(server, log.getGroup(), rpcCtx, ProtoMessageUtil.convertToWriteRequest(log));
     }
     
     @Override

File: core/src/test/java/com/alibaba/nacos/core/distributed/raft/processor/AbstractProcessorTest.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.core.distributed.raft.processor;
 
 import com.alibaba.nacos.consistency.SerializeFactory;
-import com.alibaba.nacos.consistency.entity.Log;
 import com.alibaba.nacos.consistency.entity.Response;
+import com.alibaba.nacos.consistency.entity.WriteRequest;
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
 import com.alibaba.nacos.core.distributed.raft.utils.FailoverClosure;
 import com.alipay.sofa.jraft.Node;
@@ -64,7 +64,7 @@ public String getRemoteAddress() {
             }
         };
         AbstractProcessor processor = new NacosLogProcessor(server, SerializeFactory.getDefault());
-        processor.execute(server, context, Log.newBuilder().build(), new JRaftServer.RaftGroupTuple());
+        processor.execute(server, context, WriteRequest.newBuilder().build(), new JRaftServer.RaftGroupTuple());
         
         Response response = reference.get();
         Assert.assertNotNull(response);

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.common.notify;
 
 import com.alibaba.nacos.common.notify.listener.Subscriber;
+import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
 import com.alibaba.nacos.common.utils.ThreadUtils;
-import com.alibaba.nacos.common.utils.CollectionUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: common/src/main/java/com/alibaba/nacos/common/notify/EventPublisher.java
Patch:
@@ -71,4 +71,5 @@ public interface EventPublisher extends Closeable {
      * @param event      {@link Event}
      */
     void notifySubscriber(Subscriber subscriber, Event event);
-}
\ No newline at end of file
+    
+}

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -122,7 +122,7 @@ private String getConfigInner(String tenant, String dataId, String group, long t
         }
         
         try {
-            String[] ct = worker.getServerConfig(dataId, group, tenant, timeoutMs);
+            String[] ct = worker.getServerConfig(dataId, group, tenant, timeoutMs, false);
             cr.setContent(ct[0]);
             
             configFilterChainManager.doFilter(null, cr);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ConfigTransportClient.java
Patch:
@@ -309,7 +309,7 @@ public String getTenant() {
      * @return content.
      * @throws NacosException throw where query fail .
      */
-    public abstract String[] queryConfig(String dataId, String group, String tenat, long readTimeous)
+    public abstract String[] queryConfig(String dataId, String group, String tenat, long readTimeous, boolean notify)
             throws NacosException;
     
     /**

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConnection.java
Patch:
@@ -52,7 +52,7 @@ public class GrpcConnection extends Connection {
      * grpc channel.
      */
     protected ManagedChannel channel;
-
+    
     /**
      * stub to send request.
      */

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfiRemoveRequestHandler.java
Patch:
@@ -78,7 +78,7 @@ public ConfigRemoveResponse handle(ConfigRemoveRequest request, RequestMeta meta
             return ConfigRemoveResponse.buildSuccessResponse();
             
         } catch (Exception e) {
-            Loggers.RPC_DIGEST.error("remove config error,error msg is {}", e.getMessage(), e);
+            Loggers.REMOTE_DIGEST.error("remove config error,error msg is {}", e.getMessage(), e);
             return ConfigRemoveResponse.buildFailResponse(e.getMessage());
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigConnectionEventListener.java
Patch:
@@ -42,7 +42,7 @@ public void clientConnected(Connection connect) {
     @Override
     public void clientDisConnected(Connection connect) {
         String connectionId = connect.getMetaInfo().getConnectionId();
-        Loggers.RPC.info("client disconnected,clear config listen context, connetionId is {},client ip is {}",
+        Loggers.REMOTE.info("client disconnected,clear config listen context, connetionId is {},client ip is {}",
                 connectionId, connect.getMetaInfo().getClientIp());
         configChangeListenContext.clearContextForConnectionId(connectionId);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java
Patch:
@@ -85,7 +85,7 @@ public ConfigPubishResponse handle(ConfigPublishRequest request, RequestMeta met
             ParamUtils.checkParam(configAdvanceInfo);
             
             if (AggrWhitelist.isAggrDataId(dataId)) {
-                Loggers.RPC_DIGEST
+                Loggers.REMOTE_DIGEST
                         .warn("[aggr-conflict] {} attemp to publish single data, {}, {}", srcIp, dataId, group);
                 throw new NacosException(NacosException.NO_RIGHT, "dataId:" + dataId + " is aggr");
             }
@@ -115,7 +115,7 @@ public ConfigPubishResponse handle(ConfigPublishRequest request, RequestMeta met
                             ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
             return ConfigPubishResponse.buildSuccessResponse();
         } catch (Exception e) {
-            Loggers.RPC_DIGEST.error("[ConfigPublishRequestHandler] publish config error ,request ={}", request, e);
+            Loggers.REMOTE_DIGEST.error("[ConfigPublishRequestHandler] publish config error ,request ={}", request, e);
             return ConfigPubishResponse.buildFailResponse(e.getMessage());
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpChangeProcessor.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.config.server.service.dump.processor;
 
 import com.alibaba.nacos.common.task.NacosTask;
+import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
@@ -55,7 +55,8 @@ public boolean process(NacosTask task) {
         LogUtil.DEFAULT_LOG.warn("updateMd5 count:{}", updateMd5List.size());
         for (ConfigInfoWrapper config : updateMd5List) {
             final String groupKey = GroupKey2.getKey(config.getDataId(), config.getGroup());
-            ConfigCacheService.updateMd5(groupKey, config.getMd5(), config.getLastModified());
+            ConfigCacheService.updateMd5(groupKey, config.getMd5(), config.getLastModified(), config.getContent(),
+                    config.getType());
         }
         long endUpdateMd5 = System.currentTimeMillis();
         LogUtil.DEFAULT_LOG.warn("updateMd5 done,cost:{}", endUpdateMd5 - startUpdateMd5);

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ConfigExecutor.java
Patch:
@@ -62,7 +62,7 @@ public final class ConfigExecutor {
     
     private static final ScheduledExecutorService ASYNC_CONFIG_CHANGE_NOTIFY_EXECUTOR = ExecutorFactory.Managed
             .newScheduledExecutorService(ClassUtils.getCanonicalName(Config.class),
-                    Runtime.getRuntime().availableProcessors() * 2,
+                    ThreadUtils.getSuitableThreadCount(),
                     new NameThreadFactory("com.alibaba.nacos.config.server.remote.ConfigChangeNotifier"));
     
     public static void scheduleConfigTask(Runnable command, long initialDelay, long delay, TimeUnit unit) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/MD5Util.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
+import com.alibaba.nacos.core.utils.StringPool;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
@@ -143,11 +144,11 @@ public static Map<String, String> getClientMd5Map(String configKeysString) {
                 // If it is the old message, the last digit is MD5. The post-multi-tenant message is tenant
                 if (tmpList.size() == 2) {
                     String groupKey = GroupKey2.getKey(tmpList.get(0), tmpList.get(1));
-                    groupKey = SingletonRepository.DataIdGroupIdCache.getSingleton(groupKey);
+                    groupKey = StringPool.get(groupKey);
                     md5Map.put(groupKey, endValue);
                 } else {
                     String groupKey = GroupKey2.getKey(tmpList.get(0), tmpList.get(1), endValue);
-                    groupKey = SingletonRepository.DataIdGroupIdCache.getSingleton(groupKey);
+                    groupKey = StringPool.get(groupKey);
                     md5Map.put(groupKey, tmpList.get(2));
                 }
                 tmpList.clear();

File: config/src/test/java/com/alibaba/nacos/config/server/service/ClientTrackServiceTest.java
Patch:
@@ -40,8 +40,8 @@ public void testTrackClientMd5() {
         String group = "online";
         String groupKey = GroupKey2.getKey(dataId, group);
         String md5 = "xxxxxxxxxxxxx";
-        
-        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis());
+    
+        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis(), null, null);
         
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
@@ -51,7 +51,7 @@ public void testTrackClientMd5() {
         Assert.assertEquals(1, ClientTrackService.subscriberCount());
         
         //服务端数据更新
-        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis());
+        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis(), null, null);
         Assert.assertEquals(false, ClientTrackService.isClientUptodate(clientIp).get(groupKey));
     }
     

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -124,7 +124,8 @@ public void started(ConfigurableApplicationContext context) {
                 useExternalStorage = true;
             }
         }
-        
+    
+        ApplicationUtils.setStarted(true);
         LOGGER.info("Nacos started successfully in {} mode. use {} storage",
                 System.getProperty(MODE_PROPERTY_KEY_STAND_MODE), useExternalStorage ? "external" : "embedded");
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/ClientConnectionEventListenerRegistry.java
Patch:
@@ -85,7 +85,7 @@ public void run() {
      * @param listener listener.
      */
     public void registerClientConnectionEventListener(ClientConnectionEventListener listener) {
-        Loggers.RPC.info("[ClientConnectionEventListenerRegistry] registry listener - " + listener.getClass()
+        Loggers.REMOTE.info("[ClientConnectionEventListenerRegistry] registry listener - " + listener.getClass()
                 .getSimpleName());
         this.clientConnectionEventListeners.add(listener);
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcAckCallbackSynchronizer.java
Patch:
@@ -36,7 +36,7 @@
 public class RpcAckCallbackSynchronizer {
     
     @SuppressWarnings("checkstyle:linelength")
-    private static final Map<String, Map<String, DefaultRequestFuture>> CALLBACK_CONTEXT = new ConcurrentLinkedHashMap.Builder<String, Map<String, DefaultRequestFuture>>()
+    public static final Map<String, Map<String, DefaultRequestFuture>> CALLBACK_CONTEXT = new ConcurrentLinkedHashMap.Builder<String, Map<String, DefaultRequestFuture>>()
             .maximumWeightedCapacity(1000000)
             .listener(new EvictionListener<String, Map<String, DefaultRequestFuture>>() {
                 @Override

File: core/src/main/java/com/alibaba/nacos/core/remote/RpcPushService.java
Patch:
@@ -78,7 +78,7 @@ public void onException(Throwable e) {
                 connectionManager.unregister(connectionId);
                 requestCallBack.onSuccess();
             } catch (Exception e) {
-                Loggers.RPC_DIGEST
+                Loggers.REMOTE_DIGEST
                         .error("error to send push response to connectionId ={},push response={}", connectionId,
                                 request, e);
             }
@@ -101,7 +101,7 @@ public void pushWithoutAck(String connectionId, ServerPushRequest request) {
             } catch (ConnectionAlreadyClosedException e) {
                 connectionManager.unregister(connectionId);
             } catch (Exception e) {
-                Loggers.RPC_DIGEST
+                Loggers.REMOTE_DIGEST
                         .error("error to send push response to connectionId ={},push response={}", connectionId,
                                 request, e);
             }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -191,7 +191,6 @@ public void onThrowable(Throwable t) {
             int maxStackDepth = 50;
             for (int deepth = 0; deepth < maxStackDepth && cause != null; deepth++) {
                 if (cause instanceof SocketTimeoutException || cause instanceof ConnectTimeoutException
-                        || cause instanceof org.jboss.netty.channel.ConnectTimeoutException
                         || cause instanceof TimeoutException || cause.getCause() instanceof TimeoutException) {
                     
                     healthCheckCommon.checkFail(ip, task, "http:timeout:" + cause.getMessage());

File: test/src/test/java/com/alibaba/nacos/test/core/code/ControllerMethodsCacheTest.java
Patch:
@@ -19,6 +19,7 @@
 import static org.junit.Assert.assertEquals;
 
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import java.lang.reflect.Method;
 import java.util.HashMap;
 import java.util.Map;
@@ -39,7 +40,7 @@ public class ControllerMethodsCacheTest {
     @Before
     public void setUp() throws Exception {
         methodsCache = new ControllerMethodsCache();
-        methodsCache.setContextPath("/nacos");
+        ApplicationUtils.setContextPath("/nacos");
         methodsCache.initClassMethod("com.alibaba.nacos.config.server.controller");
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.exception.runtime.NacosRuntimeException;
-import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.enums.FileTypeEnum;
@@ -53,7 +53,7 @@
 import com.google.common.base.Joiner;
 import com.google.common.collect.Lists;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.stereotype.Component;

File: config/src/test/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourcePropertiesTest.java
Patch:
@@ -107,7 +107,7 @@ public void externalDatasourceToAssertMinIdle() {
         environment.setProperty("db.url.0", JDBC_URL);
         List<HikariDataSource> dataSources = new ExternalDataSourceProperties().build(environment, (dataSource -> {
             dataSource.validate();
-            Assert.assertEquals(dataSource.getMinimumIdle(), ExternalDataSourceProperties.DEFAULT_MINIMUM_IDLE);
+            Assert.assertEquals(dataSource.getMinimumIdle(), DataSourcePoolProperties.DEFAULT_MINIMUM_IDLE);
         }));
         Assert.assertEquals(dataSources.size(), 1);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -59,6 +59,7 @@
 import java.util.Set;
 import java.util.StringJoiner;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentSkipListMap;
 import java.util.concurrent.LinkedBlockingDeque;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.locks.Lock;
@@ -238,7 +239,7 @@ public void onDelete(String key) throws Exception {
             String persistInstanceListKey = KeyBuilder.buildInstanceListKey(namespace, name, false);
             consistencyService.remove(ephemeralInstanceListKey);
             consistencyService.remove(persistInstanceListKey);
-    
+            
             // remove listeners of key to avoid mem leak
             consistencyService.unListen(ephemeralInstanceListKey, service);
             consistencyService.unListen(persistInstanceListKey, service);
@@ -867,7 +868,7 @@ public void putService(Service service) {
         if (!serviceMap.containsKey(service.getNamespaceId())) {
             synchronized (putServiceLock) {
                 if (!serviceMap.containsKey(service.getNamespaceId())) {
-                    serviceMap.put(service.getNamespaceId(), new ConcurrentHashMap<>(16));
+                    serviceMap.put(service.getNamespaceId(), new ConcurrentSkipListMap<>());
                 }
             }
         }

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java
Patch:
@@ -79,7 +79,7 @@ public void removeSubscriber(Subscriber subscriber, Class<? extends Event> subsc
         try {
             Set<Subscriber> sets = subMappings.get(subSlowEventType);
             
-            if (sets != null && sets.contains(subscriber)) {
+            if (sets != null) {
                 sets.remove(subscriber);
             }
         } finally {

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -176,7 +176,7 @@ public void addUpdatedServiceToQueue(String namespaceId, String serviceName, Str
         } catch (Exception e) {
             toBeUpdatedServicesQueue.poll();
             toBeUpdatedServicesQueue.add(new ServiceKey(namespaceId, serviceName, serverIP, checksum));
-            Loggers.SRV_LOG.error("[DOMAIN-STATUS] Failed to add service to be updatd to queue.", e);
+            Loggers.SRV_LOG.error("[DOMAIN-STATUS] Failed to add service to be updated to queue.", e);
         } finally {
             lock.unlock();
         }

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceManagerTest.java
Patch:
@@ -344,7 +344,8 @@ public void testUpdateIpAddresses() throws Exception {
     @Test
     public void testUpdateIpAddressesNoInstance() throws Exception {
         expectedException.expect(IllegalArgumentException.class);
-        expectedException.expectMessage("ip list can not be empty, service: test-service, ip list: []");
+        expectedException
+                .expectMessage(String.format("ip list can not be empty, service: %s, ip list: []", TEST_SERVICE_NAME));
         serviceManager.updateIpAddresses(service, UtilsAndCommons.UPDATE_INSTANCE_ACTION_ADD, true);
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -351,7 +351,7 @@ public boolean isAvailable() {
     }
     
     public boolean isInitialized() {
-        return distroProtocol.isLoadCompleted() || !globalConfig.isDataWarmup();
+        return distroProtocol.isInitialized() || !globalConfig.isDataWarmup();
     }
     
     public class Notifier implements Runnable {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -133,7 +133,8 @@ public ServerMemberManager getMemberManager() {
     
     protected void dumpOperate(DumpProcessor processor, DumpAllProcessor dumpAllProcessor,
             DumpAllBetaProcessor dumpAllBetaProcessor, DumpAllTagProcessor dumpAllTagProcessor) throws NacosException {
-        TimerContext.start("CONFIG_DUMP_TO_FILE");
+        String dumpFileContext = "CONFIG_DUMP_TO_FILE";
+        TimerContext.start(dumpFileContext);
         try {
             LogUtil.DEFAULT_LOG.warn("DumpService start");
             
@@ -229,7 +230,7 @@ protected void dumpOperate(DumpProcessor processor, DumpAllProcessor dumpAllProc
             
             ConfigExecutor.scheduleConfigTask(clearConfigHistory, 10, 10, TimeUnit.MINUTES);
         } finally {
-            TimerContext.end(LogUtil.DUMP_LOG);
+            TimerContext.end(dumpFileContext, LogUtil.DUMP_LOG);
         }
         
     }

File: api/src/main/java/com/alibaba/nacos/api/common/ResponseCode.java
Patch:
@@ -24,6 +24,7 @@
  * <li> Global and common code starts with 10001.
  * <li> Naming module code starts with 20001.
  * <li> Config module code starts with 30001.
+ * <li> Core module code starts with 40001.
  *
  * @author nkorange
  * @since 1.2.0

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -56,7 +56,7 @@ public class DefaultPublisher extends Thread implements EventPublisher {
     
     protected volatile Long lastEventSequence = -1L;
     
-    private final AtomicReferenceFieldUpdater<DefaultPublisher, Long> updater = AtomicReferenceFieldUpdater
+    private static final AtomicReferenceFieldUpdater<DefaultPublisher, Long> UPDATER = AtomicReferenceFieldUpdater
             .newUpdater(DefaultPublisher.class, Long.class, "lastEventSequence");
     
     @Override
@@ -115,7 +115,7 @@ void openEventHandler() {
                 }
                 final Event event = queue.take();
                 receiveEvent(event);
-                updater.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
+                UPDATER.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
             }
         } catch (Throwable ex) {
             LOGGER.error("Event listener exception : {}", ex);

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -48,4 +48,7 @@ public static Serializer getDefault() {
         return SERIALIZER_MAP.get(defaultSerializer);
     }
     
+    public static Serializer getSerializer(String type) {
+        return SERIALIZER_MAP.get(type.toLowerCase());
+    }
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/MetadataKey.java
Patch:
@@ -29,4 +29,6 @@ public class MetadataKey {
     
     public static final String RAFT_GROUP_MEMBER = "raftGroupMember";
     
+    public static final String ERR_MSG = "errMsg";
+    
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -36,6 +36,7 @@
 import org.springframework.stereotype.Component;
 
 import javax.annotation.PostConstruct;
+import javax.annotation.PreDestroy;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Objects;
@@ -108,6 +109,7 @@ public APProtocol getApProtocol() {
         return apProtocol;
     }
     
+    @PreDestroy
     public void destroy() {
         if (Objects.nonNull(apProtocol)) {
             apProtocol.shutdown();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -133,12 +133,14 @@ public void onEvent(RaftEvent event) {
                     final String leader = event.getLeader();
                     final Long term = event.getTerm();
                     final List<String> raftClusterInfo = event.getRaftClusterInfo();
+                    final String errMsg = event.getErrMsg();
                     
                     // Leader information needs to be selectively updated. If it is valid data,
                     // the information in the protocol metadata is updated.
                     MapUtils.putIfValNoEmpty(properties, MetadataKey.LEADER_META_DATA, leader);
                     MapUtils.putIfValNoNull(properties, MetadataKey.TERM_META_DATA, term);
                     MapUtils.putIfValNoEmpty(properties, MetadataKey.RAFT_GROUP_MEMBER, raftClusterInfo);
+                    MapUtils.putIfValNoEmpty(properties, MetadataKey.ERR_MSG, errMsg);
                     
                     value.put(groupId, properties);
                     metaData.load(value);
@@ -198,6 +200,7 @@ public void memberChange(Set<String> addresses) {
     @Override
     public void shutdown() {
         if (initialized.get() && shutdowned.compareAndSet(false, true)) {
+            Loggers.RAFT.info("shutdown jraft server");
             raftServer.shutdown();
         }
     }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DelegateConsistencyServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.consistency.ephemeral.EphemeralConsistencyService;
-import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyService;
+import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyServiceDelegateImpl;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Service;
@@ -33,11 +33,11 @@
 @Service("consistencyDelegate")
 public class DelegateConsistencyServiceImpl implements ConsistencyService {
     
-    private final PersistentConsistencyService persistentConsistencyService;
+    private final PersistentConsistencyServiceDelegateImpl persistentConsistencyService;
     
     private final EphemeralConsistencyService ephemeralConsistencyService;
     
-    public DelegateConsistencyServiceImpl(PersistentConsistencyService persistentConsistencyService,
+    public DelegateConsistencyServiceImpl(PersistentConsistencyServiceDelegateImpl persistentConsistencyService,
             EphemeralConsistencyService ephemeralConsistencyService) {
         this.persistentConsistencyService = persistentConsistencyService;
         this.ephemeralConsistencyService = ephemeralConsistencyService;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/BaseRaftEvent.java
Patch:
@@ -21,9 +21,11 @@
 /**
  * Base raft event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:46 PM
  */
+@Deprecated
 public abstract class BaseRaftEvent extends ApplicationEvent {
     
     private final RaftPeer raftPeer;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/LeaderElectFinishedEvent.java
Patch:
@@ -19,9 +19,11 @@
 /**
  * Leader election finished event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:25 PM
  */
+@Deprecated
 public class LeaderElectFinishedEvent extends BaseRaftEvent {
     
     public LeaderElectFinishedEvent(Object source, RaftPeer raftPeer, RaftPeer local) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/MakeLeaderEvent.java
Patch:
@@ -19,9 +19,11 @@
 /**
  * Make leader event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:45 PM
  */
+@Deprecated
 public class MakeLeaderEvent extends BaseRaftEvent {
     
     public MakeLeaderEvent(Object source, RaftPeer raftPeer, RaftPeer local) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeer.java
Patch:
@@ -26,8 +26,10 @@
 /**
  * Raft peer.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 public class RaftPeer {
     
     public String ip;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftProxy.java
Patch:
@@ -28,8 +28,10 @@
 /**
  * Raft http proxy.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 @Component
 public class RaftProxy {
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -46,6 +46,8 @@ public class Cluster extends com.alibaba.nacos.api.naming.pojo.Cluster implement
     
     private static final String CLUSTER_NAME_SYNTAX = "[0-9a-zA-Z-]+";
     
+    private static final long serialVersionUID = 8940123791150907510L;
+    
     /**
      * a addition for same site routing, can group multiple sites into a region, like Hangzhou, Shanghai, etc.
      */

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -47,6 +47,8 @@ public class Instance extends com.alibaba.nacos.api.naming.pojo.Instance impleme
     
     private static final double MIN_WEIGHT_VALUE = 0.00D;
     
+    private static final long serialVersionUID = -6527721638428975306L;
+    
     private volatile long lastBeat = System.currentTimeMillis();
     
     @JsonIgnore

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class Instances implements Record {
     
+    private static final long serialVersionUID = 5500823673993740145L;
+    
     private List<Instance> instanceList = new ArrayList<>();
     
     public List<Instance> getInstanceList() {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -36,6 +36,8 @@
 @Component
 public class SwitchDomain implements Record, Cloneable {
     
+    private static final long serialVersionUID = 7619505097145337232L;
+    
     private List<String> masters;
     
     private Map<String, Integer> adWeightMap = new HashMap<>();

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -126,8 +126,6 @@ public class UtilsAndCommons {
     public static final String DATA_BASE_DIR =
             ApplicationUtils.getNacosHome() + File.separator + "data" + File.separator + "naming";
     
-    public static final String RAFT_CACHE_FILE_SUFFIX = ".datum";
-    
     public static final String RAFT_CACHE_FILE_PREFIX = "com.alibaba.nacos.naming";
     
     public static final String NUMBER_PATTERN = "^\\d+$";

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/Record.java
Patch:
@@ -16,13 +16,15 @@
 
 package com.alibaba.nacos.naming.pojo;
 
+import java.io.Serializable;
+
 /**
  * Record to transfer and store in Nacos cluster.
  *
  * @author nkorange
  * @since 1.0.0
  */
-public interface Record {
+public interface Record extends Serializable {
     
     /**
      * get the checksum of this record, usually for record comparison.

File: sys/src/test/java/com/alibaba/nacos/sys/env/NacosAutoRefreshPropertySourceLoaderTest.java
Patch:
@@ -36,6 +36,7 @@
 import org.springframework.test.context.junit4.SpringRunner;
 
 import java.io.File;
+import java.io.IOException;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.concurrent.CountDownLatch;
@@ -61,7 +62,7 @@ public static void after() {
     }
 
     @Test
-    public void testConfigFileAutoRefresh() throws URISyntaxException, InterruptedException, NacosException {
+    public void testConfigFileAutoRefresh() throws URISyntaxException, InterruptedException, NacosException, IOException {
         final URL url = ClassLoader.getSystemResource("application.properties");
         ApplicationUtils.setContextPath(url.getPath());
         final String val1 = environment.getProperty("name");

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_CITCase.java
Patch:
@@ -68,6 +68,7 @@ public class ConfigBeta_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigBeta_CITCase.class.getSimpleName());
     }
 
     @Before

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_CITCase.java
Patch:
@@ -61,6 +61,7 @@ public class ConfigExportAndImportAPI_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigExportAndImportAPI_CITCase.class.getSimpleName());
     }
 
     @Before

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_CITCase.java
Patch:
@@ -53,6 +53,7 @@ public class ConfigLongPollReturnChanges_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigLongPollReturnChanges_CITCase.class.getSimpleName());
     }
 
     @Before

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_CITCase.java
Patch:
@@ -54,6 +54,8 @@ public class ConfigLongPoll_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigLongPoll_CITCase.class.getSimpleName());
+    
     }
 
     @Before

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -36,6 +36,7 @@
 import org.springframework.stereotype.Component;
 
 import javax.annotation.PostConstruct;
+import javax.annotation.PreDestroy;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Objects;
@@ -108,6 +109,7 @@ public APProtocol getApProtocol() {
         return apProtocol;
     }
     
+    @PreDestroy
     public void destroy() {
         if (Objects.nonNull(apProtocol)) {
             apProtocol.shutdown();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -200,6 +200,7 @@ public void memberChange(Set<String> addresses) {
     @Override
     public void shutdown() {
         if (initialized.get() && shutdowned.compareAndSet(false, true)) {
+            Loggers.RAFT.info("shutdown jraft server");
             raftServer.shutdown();
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_CITCase.java
Patch:
@@ -68,6 +68,7 @@ public class ConfigBeta_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigBeta_CITCase.class.getSimpleName());
     }
 
     @Before

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_CITCase.java
Patch:
@@ -61,6 +61,7 @@ public class ConfigExportAndImportAPI_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigExportAndImportAPI_CITCase.class.getSimpleName());
     }
 
     @Before

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_CITCase.java
Patch:
@@ -53,6 +53,7 @@ public class ConfigLongPollReturnChanges_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigLongPollReturnChanges_CITCase.class.getSimpleName());
     }
 
     @Before

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_CITCase.java
Patch:
@@ -54,6 +54,8 @@ public class ConfigLongPoll_CITCase {
     @AfterClass
     public static void cleanClientCache() throws Exception {
         ConfigCleanUtils.cleanClientCache();
+        ConfigCleanUtils.changeToNewTestNacosHome(ConfigLongPoll_CITCase.class.getSimpleName());
+    
     }
 
     @Before

File: consistency/src/main/java/com/alibaba/nacos/consistency/serialize/HessianSerializer.java
Patch:
@@ -42,7 +42,7 @@ public HessianSerializer() {
     
     @Override
     public <T> T deserialize(byte[] data) {
-        return deserialize(data);
+        return deseiralize0(data);
     }
     
     @Override
@@ -55,7 +55,7 @@ public <T> T deserialize(byte[] data, Type type) {
         return deserialize(data);
     }
     
-    private <T> T deseiralize(byte[] data) {
+    private <T> T deseiralize0(byte[] data) {
         if (ByteUtils.isEmpty(data)) {
             return null;
         }

File: api/src/main/java/com/alibaba/nacos/api/common/ResponseCode.java
Patch:
@@ -24,6 +24,7 @@
  * <li> Global and common code starts with 10001.
  * <li> Naming module code starts with 20001.
  * <li> Config module code starts with 30001.
+ * <li> Core module code starts with 40001.
  *
  * @author nkorange
  * @since 1.2.0

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -56,7 +56,7 @@ public class DefaultPublisher extends Thread implements EventPublisher {
     
     protected volatile Long lastEventSequence = -1L;
     
-    private final AtomicReferenceFieldUpdater<DefaultPublisher, Long> updater = AtomicReferenceFieldUpdater
+    private static final AtomicReferenceFieldUpdater<DefaultPublisher, Long> UPDATER = AtomicReferenceFieldUpdater
             .newUpdater(DefaultPublisher.class, Long.class, "lastEventSequence");
     
     @Override
@@ -115,7 +115,7 @@ void openEventHandler() {
                 }
                 final Event event = queue.take();
                 receiveEvent(event);
-                updater.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
+                UPDATER.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
             }
         } catch (Throwable ex) {
             LOGGER.error("Event listener exception : {}", ex);

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -48,4 +48,7 @@ public static Serializer getDefault() {
         return SERIALIZER_MAP.get(defaultSerializer);
     }
     
+    public static Serializer getSerializer(String type) {
+        return SERIALIZER_MAP.get(type.toLowerCase());
+    }
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/MetadataKey.java
Patch:
@@ -29,4 +29,6 @@ public class MetadataKey {
     
     public static final String RAFT_GROUP_MEMBER = "raftGroupMember";
     
+    public static final String ERR_MSG = "errMsg";
+    
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -133,12 +133,14 @@ public void onEvent(RaftEvent event) {
                     final String leader = event.getLeader();
                     final Long term = event.getTerm();
                     final List<String> raftClusterInfo = event.getRaftClusterInfo();
+                    final String errMsg = event.getErrMsg();
                     
                     // Leader information needs to be selectively updated. If it is valid data,
                     // the information in the protocol metadata is updated.
                     MapUtils.putIfValNoEmpty(properties, MetadataKey.LEADER_META_DATA, leader);
                     MapUtils.putIfValNoNull(properties, MetadataKey.TERM_META_DATA, term);
                     MapUtils.putIfValNoEmpty(properties, MetadataKey.RAFT_GROUP_MEMBER, raftClusterInfo);
+                    MapUtils.putIfValNoEmpty(properties, MetadataKey.ERR_MSG, errMsg);
                     
                     value.put(groupId, properties);
                     metaData.load(value);

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -16,11 +16,13 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.Pair;
 import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
+import java.util.concurrent.Callable;
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.function.Supplier;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DelegateConsistencyServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.consistency.ephemeral.EphemeralConsistencyService;
-import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyService;
+import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyServiceDelegateImpl;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Service;
@@ -33,11 +33,11 @@
 @Service("consistencyDelegate")
 public class DelegateConsistencyServiceImpl implements ConsistencyService {
     
-    private final PersistentConsistencyService persistentConsistencyService;
+    private final PersistentConsistencyServiceDelegateImpl persistentConsistencyService;
     
     private final EphemeralConsistencyService ephemeralConsistencyService;
     
-    public DelegateConsistencyServiceImpl(PersistentConsistencyService persistentConsistencyService,
+    public DelegateConsistencyServiceImpl(PersistentConsistencyServiceDelegateImpl persistentConsistencyService,
             EphemeralConsistencyService ephemeralConsistencyService) {
         this.persistentConsistencyService = persistentConsistencyService;
         this.ephemeralConsistencyService = ephemeralConsistencyService;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/BaseRaftEvent.java
Patch:
@@ -21,9 +21,11 @@
 /**
  * Base raft event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:46 PM
  */
+@Deprecated
 public abstract class BaseRaftEvent extends ApplicationEvent {
     
     private final RaftPeer raftPeer;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/LeaderElectFinishedEvent.java
Patch:
@@ -19,9 +19,11 @@
 /**
  * Leader election finished event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:25 PM
  */
+@Deprecated
 public class LeaderElectFinishedEvent extends BaseRaftEvent {
     
     public LeaderElectFinishedEvent(Object source, RaftPeer raftPeer, RaftPeer local) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/MakeLeaderEvent.java
Patch:
@@ -19,9 +19,11 @@
 /**
  * Make leader event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:45 PM
  */
+@Deprecated
 public class MakeLeaderEvent extends BaseRaftEvent {
     
     public MakeLeaderEvent(Object source, RaftPeer raftPeer, RaftPeer local) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeer.java
Patch:
@@ -26,8 +26,10 @@
 /**
  * Raft peer.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 public class RaftPeer {
     
     public String ip;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftProxy.java
Patch:
@@ -28,8 +28,10 @@
 /**
  * Raft http proxy.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 @Component
 public class RaftProxy {
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -46,6 +46,8 @@ public class Cluster extends com.alibaba.nacos.api.naming.pojo.Cluster implement
     
     private static final String CLUSTER_NAME_SYNTAX = "[0-9a-zA-Z-]+";
     
+    private static final long serialVersionUID = 8940123791150907510L;
+    
     /**
      * a addition for same site routing, can group multiple sites into a region, like Hangzhou, Shanghai, etc.
      */

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -47,6 +47,8 @@ public class Instance extends com.alibaba.nacos.api.naming.pojo.Instance impleme
     
     private static final double MIN_WEIGHT_VALUE = 0.00D;
     
+    private static final long serialVersionUID = -6527721638428975306L;
+    
     private volatile long lastBeat = System.currentTimeMillis();
     
     @JsonIgnore

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class Instances implements Record {
     
+    private static final long serialVersionUID = 5500823673993740145L;
+    
     private List<Instance> instanceList = new ArrayList<>();
     
     public List<Instance> getInstanceList() {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -36,6 +36,8 @@
 @Component
 public class SwitchDomain implements Record, Cloneable {
     
+    private static final long serialVersionUID = 7619505097145337232L;
+    
     private List<String> masters;
     
     private Map<String, Integer> adWeightMap = new HashMap<>();

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -126,8 +126,6 @@ public class UtilsAndCommons {
     public static final String DATA_BASE_DIR =
             ApplicationUtils.getNacosHome() + File.separator + "data" + File.separator + "naming";
     
-    public static final String RAFT_CACHE_FILE_SUFFIX = ".datum";
-    
     public static final String RAFT_CACHE_FILE_PREFIX = "com.alibaba.nacos.naming";
     
     public static final String NUMBER_PATTERN = "^\\d+$";

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/Record.java
Patch:
@@ -16,13 +16,15 @@
 
 package com.alibaba.nacos.naming.pojo;
 
+import java.io.Serializable;
+
 /**
  * Record to transfer and store in Nacos cluster.
  *
  * @author nkorange
  * @since 1.0.0
  */
-public interface Record {
+public interface Record extends Serializable {
     
     /**
      * get the checksum of this record, usually for record comparison.

File: sys/src/test/java/com/alibaba/nacos/sys/env/NacosAutoRefreshPropertySourceLoaderTest.java
Patch:
@@ -36,6 +36,7 @@
 import org.springframework.test.context.junit4.SpringRunner;
 
 import java.io.File;
+import java.io.IOException;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.concurrent.CountDownLatch;
@@ -61,7 +62,7 @@ public static void after() {
     }
 
     @Test
-    public void testConfigFileAutoRefresh() throws URISyntaxException, InterruptedException, NacosException {
+    public void testConfigFileAutoRefresh() throws URISyntaxException, InterruptedException, NacosException, IOException {
         final URL url = ClassLoader.getSystemResource("application.properties");
         ApplicationUtils.setContextPath(url.getPath());
         final String val1 = environment.getProperty("name");

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
@@ -36,10 +35,10 @@
 import com.alibaba.nacos.naming.misc.SwitchManager;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.push.PushService;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.fasterxml.jackson.databind.JsonNode;
 import com.fasterxml.jackson.databind.node.ArrayNode;
 import com.fasterxml.jackson.databind.node.ObjectNode;
-
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PutMapping;

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming;
 
-import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeerSet;
@@ -26,6 +25,7 @@
 import com.alibaba.nacos.naming.misc.NetUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.push.PushService;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.rules.ExpectedException;
@@ -44,7 +44,7 @@ public class BaseTest {
     
     protected static final String TEST_CLUSTER_NAME = "test-cluster";
     
-    protected static final String TEST_SERVICE_NAME = "test-service";
+    protected static final String TEST_SERVICE_NAME = "DEFAULT_GROUP@@test-service";
     
     protected static final String TEST_GROUP_NAME = "test-group-name";
     

File: api/src/main/java/com/alibaba/nacos/api/naming/utils/NamingUtils.java
Patch:
@@ -28,6 +28,9 @@
 public class NamingUtils {
     
     public static String getGroupedName(final String serviceName, final String groupName) {
+        if (StringUtils.isBlank(serviceName)) {
+            throw new IllegalArgumentException("Param 'serviceName' is illegal, serviceName is blank");
+        }
         final String resultGroupedName = groupName + Constants.SERVICE_INFO_SPLITER + serviceName;
         return resultGroupedName.intern();
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ConcurrentDiskUtil.java
Patch:
@@ -143,11 +143,12 @@ public static Boolean writeFileContent(File file, String content, String charset
                 }
             } while (null == lock);
             
-            ByteBuffer sendBuffer = ByteBuffer.wrap(content.getBytes(charsetName));
+            byte[] contentBytes = content.getBytes(charsetName);
+            ByteBuffer sendBuffer = ByteBuffer.wrap(contentBytes);
             while (sendBuffer.hasRemaining()) {
                 channel.write(sendBuffer);
             }
-            channel.truncate(content.length());
+            channel.truncate(contentBytes.length);
         } catch (FileNotFoundException e) {
             throw new IOException("file not exist");
         } finally {

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -107,6 +107,9 @@ public void run() {
                 udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8), ack.getBytes(UTF_8).length,
                         packet.getSocketAddress()));
             } catch (Exception e) {
+                if (closed) {
+                    return;
+                }
                 NAMING_LOGGER.error("[NA] error while receiving push data", e);
             }
         }

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.http;
 
-import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.http.handler.ResponseHandler;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.http.param.Query;
@@ -103,7 +102,7 @@ protected HttpRequestBase build(String url, Header header, Object body, String m
         final BaseHttpMethod httpMethod = BaseHttpMethod.sourceOf(method);
         final HttpRequestBase httpRequestBase = httpMethod.init(url);
         HttpUtils.initRequestHeader(httpRequestBase, header);
-        HttpUtils.initRequestEntity(httpRequestBase, body, header.getValue(HttpHeaderConsts.CONTENT_TYPE));
+        HttpUtils.initRequestEntity(httpRequestBase, body, header);
         return httpRequestBase;
     }
     

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/DefaultHttpClientRequest.java
Patch:
@@ -65,7 +65,7 @@ static HttpRequestBase build(URI uri, String method, RequestHttpEntity requestHt
                 && requestHttpEntity.getBody() instanceof Map) {
             HttpUtils.initRequestFromEntity(httpRequestBase, (Map<String, String>) requestHttpEntity.getBody(), headers.getCharset());
         } else {
-            HttpUtils.initRequestEntity(httpRequestBase, requestHttpEntity.getBody(), headers.getValue(HttpHeaderConsts.CONTENT_TYPE));
+            HttpUtils.initRequestEntity(httpRequestBase, requestHttpEntity.getBody(), headers);
         }
         replaceDefaultConfig(httpRequestBase, requestHttpEntity.getHttpClientConfig());
         return httpRequestBase;

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/JdkHttpClientRequest.java
Patch:
@@ -90,7 +90,7 @@ public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity
         conn.setConnectTimeout(this.httpClientConfig.getConTimeOutMillis());
         conn.setReadTimeout(this.httpClientConfig.getReadTimeOutMillis());
         conn.setRequestMethod(httpMethod);
-        if (body != null) {
+        if (body != null && !"".equals(body)) {
             String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
             String bodyStr = JacksonUtils.toJson(body);
             if (MediaType.APPLICATION_FORM_URLENCODED.equals(contentType)) {

File: common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java
Patch:
@@ -26,7 +26,6 @@
  * Represents an HTTP request , consisting of headers and body.
  *
  * @author mai.jh
- * @date 2020/5/23
  */
 public class RequestHttpEntity {
     
@@ -36,7 +35,7 @@ public class RequestHttpEntity {
     
     private final Query query;
     
-    private Object body;
+    private final Object body;
     
     public RequestHttpEntity(Header header, Query query) {
         this(null, header, query);

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -50,17 +50,17 @@ public class IoUtils {
      *
      * @param raw compress stream
      * @return byte array after decompress
-     * @throws Exception exception
+     * @throws IOException exception
      */
-    public static byte[] tryDecompress(InputStream raw) throws Exception {
+    public static byte[] tryDecompress(InputStream raw) throws IOException {
         GZIPInputStream gis = null;
         ByteArrayOutputStream out = null;
         try {
             gis = new GZIPInputStream(raw);
             out = new ByteArrayOutputStream();
             copy(gis, out);
             return out.toByteArray();
-        } catch (Exception e) {
+        } catch (IOException e) {
             e.printStackTrace();
         } finally {
             if (out != null) {

File: common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java
Patch:
@@ -132,6 +132,7 @@ public Class<? extends Event> subscribeType() {
                 return ExpireEvent.class;
             }
             
+            @Override
             public boolean ignoreExpireEvent() {
                 return true;
             }

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionDistributedEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionStandaloneEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -31,7 +31,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -69,7 +69,7 @@ public String getHealth() {
                 sb.append("master db (").append(dbStatus.split(":")[1]).append(") down. ");
             }
             if (!memberManager.isInIpList()) {
-                sb.append("server ip ").append(InetUtils.getSelfIp())
+                sb.append("server ip ").append(InetUtils.getSelfIP())
                         .append(" is not in the serverList of address server. ");
             }
         }

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/ApplicationInfo.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.model.app;
 
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
  * ApplicationInfo.
@@ -102,7 +102,7 @@ public boolean isSubInfoRecentlyCollected() {
      */
     public boolean canCurrentServerOwnTheLock() {
         boolean currentOwnerIsMe =
-                subInfoCollectLockOwner == null || InetUtils.getSelfIp().equals(subInfoCollectLockOwner);
+                subInfoCollectLockOwner == null || InetUtils.getSelfIP().equals(subInfoCollectLockOwner);
         
         if (currentOwnerIsMe) {
             return true;
@@ -115,7 +115,7 @@ public boolean canCurrentServerOwnTheLock() {
     }
     
     public String currentServer() {
-        return InetUtils.getSelfIp();
+        return InetUtils.getSelfIP();
     }
     
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 /**
  * ConfigChangePublisher.

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -42,7 +42,7 @@
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.zaxxer.hikari.HikariDataSource;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.zaxxer.hikari.HikariDataSource;
 
 import java.io.File;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -49,8 +49,8 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -419,7 +419,7 @@ public void run() {
                         }
                     } else {
                         // remove config info
-                        persistService.removeConfigInfo(dataId, group, tenant, InetUtils.getSelfIp(), null);
+                        persistService.removeConfigInfo(dataId, group, tenant, InetUtils.getSelfIP(), null);
                         LOGGER.warn(
                                 "[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId="
                                         + group);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/EmbeddedDumpService.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.stereotype.Component;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -84,7 +84,7 @@ public boolean process(AbstractDelayTask task) {
                         ContentUtils.truncateContent(cf.getContent()));
                 
                 ConfigTraceService
-                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIp(),
+                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIP(),
                                 ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
             } else {
                 // remove
@@ -98,7 +98,7 @@ public boolean process(AbstractDelayTask task) {
                         "[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
                 
                 ConfigTraceService
-                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIp(),
+                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIP(),
                                 ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
             }
             NotifyCenter.publishEvent(new ConfigDataChangeEvent(false, dataId, group, tenant, tag, time.getTime()));

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -27,8 +27,8 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -57,7 +57,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
 import com.alibaba.nacos.core.utils.ClassUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.google.common.base.Preconditions;
 import com.google.protobuf.ByteString;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.sql.ModifyRequest;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.core.JdbcTemplate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.RowMapper;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2292,7 +2292,7 @@ public ConfigHistoryInfo detailConfigHistory(Long nid) {
                     .queryForObject(sqlFetchRows, new Object[] {nid}, HISTORY_DETAIL_ROW_MAPPER);
             return historyInfo;
         } catch (DataAccessException e) {
-            LogUtil.FATAL_LOG.error("[list-config-history] error, nid:{}", new Object[] {nid}, e);
+            LogUtil.FATAL_LOG.error("[detail-config-history] error, nid:{}", new Object[] {nid}, e);
             throw e;
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/EmbeddedStorageContextUtils.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.event.ConfigDumpEvent;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 import java.sql.Timestamp;
 import java.util.ArrayList;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DiskUtil.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.StringUtils;
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.springframework.context.ApplicationContextInitializer;
 import org.springframework.context.ConfigurableApplicationContext;

File: config/src/test/java/com/alibaba/nacos/config/server/model/ConfigInfoTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.IdGenerator;
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;

File: config/src/test/java/com/alibaba/nacos/config/server/service/ConfigChangePublisherTest.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -48,4 +48,7 @@ public static Serializer getDefault() {
         return SERIALIZER_MAP.get(defaultSerializer);
     }
     
+    public static Serializer getSerializer(String type) {
+        return SERIALIZER_MAP.get(type.toLowerCase());
+    }
 }

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.console.controller;
 
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.auth.parser.ResourceParser;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/PathRequestCondition.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.auth.condition;
 
-import static com.alibaba.nacos.core.utils.Constants.REQUEST_PATH_SEPARATOR;
+import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 
 /**
  * request path info. method:{@link org.springframework.web.bind.annotation.RequestMapping#method()} path: {@link

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.cluster;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.Collections;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -25,10 +25,10 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.Reader;
@@ -153,7 +153,6 @@ private void syncFromAddressUrl() throws Exception {
                         ExceptionUtil.getAllExceptionMsg(e));
             }
             addressServerFailCount = 0;
-            isAddressServerHealth = false;
         } else {
             addressServerFailCount++;
             if (addressServerFailCount >= maxFailCount) {

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/LookupFactory.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 
 import java.io.File;

File: core/src/main/java/com/alibaba/nacos/core/code/ControllerMethodsCache.java
Patch:
@@ -45,7 +45,8 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
-import static com.alibaba.nacos.core.utils.Constants.REQUEST_PATH_SEPARATOR;
+import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
+
 
 /**
  * Method cache.

File: core/src/main/java/com/alibaba/nacos/core/code/LoggingSpringApplicationRunListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.SpringApplication;

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -27,8 +27,8 @@
 
 import java.util.Arrays;
 
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * Standalone {@link Profile} {@link ApplicationListener} for {@link ApplicationEnvironmentPreparedEvent}.

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Commons;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import org.springframework.beans.factory.DisposableBean;
 import org.springframework.beans.factory.annotation.Autowired;

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/load/DistroLoadDataTask.java
Patch:
@@ -109,7 +109,7 @@ private boolean loadAllDataSnapshotFromRemote(String resourceType) {
                     return true;
                 }
             } catch (Exception e) {
-                Loggers.DISTRO.error("[DISTRO-INIT] load snapshot {} from {} failed.", resourceType, each.getAddress());
+                Loggers.DISTRO.error("[DISTRO-INIT] load snapshot {} from {} failed.", resourceType, each.getAddress(), e);
             }
         }
         return false;

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/SnowFlowerIdGenerator.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.distributed.id;
 
 import com.alibaba.nacos.consistency.IdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.google.common.base.Preconditions;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java
Patch:
@@ -25,9 +25,9 @@
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
 import com.alibaba.nacos.core.distributed.raft.processor.NacosGetRequestProcessor;
 import com.alibaba.nacos.core.distributed.raft.processor.NacosLogProcessor;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alipay.sofa.jraft.CliService;
 import com.alipay.sofa.jraft.RouteTable;
 import com.alipay.sofa.jraft.Status;

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -16,11 +16,13 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.Pair;
 import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
+import java.util.concurrent.Callable;
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.function.Supplier;

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.common.http.HttpUtils;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.context.request.async.DeferredResult;
 import org.springframework.web.multipart.MultipartFile;

File: core/src/test/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListenerTest.java
Patch:
@@ -27,7 +27,7 @@
 import org.springframework.core.env.Environment;
 import org.springframework.test.context.junit4.SpringRunner;
 
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * {@link StandaloneProfileApplicationListener} Test.

File: core/src/test/java/com/alibaba/nacos/core/utils/SystemUtilsTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.io.FileUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
@@ -26,8 +27,8 @@
 import java.util.List;
 import java.util.Random;
 
-import static com.alibaba.nacos.core.utils.Constants.PREFER_HOSTNAME_OVER_IP_PROPERTY_NAME;
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.PREFER_HOSTNAME_OVER_IP_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_MODE_PROPERTY_NAME;
 
 /**
  * {@link ApplicationUtils} Test.

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroHttpData.java
Patch:
@@ -33,8 +33,8 @@ public class DistroHttpData extends DistroData {
     
     private Object deserializedContent;
     
-    public DistroHttpData(DistroKey distroKey, byte[] content, Object deserializedContent) {
-        super(distroKey, content);
+    public DistroHttpData(DistroKey distroKey, Object deserializedContent) {
+        setDistroKey(distroKey);
         this.deserializedContent = deserializedContent;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/component/DistroDataStorageImpl.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.ephemeral.distro.component;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.transport.Serializer;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperation.java
Patch:
@@ -23,9 +23,9 @@
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.storage.kv.KvStorage;
-import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alibaba.nacos.naming.misc.Loggers;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alipay.sofa.jraft.util.CRC64;
 
 import java.nio.file.Paths;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -88,8 +88,8 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
             }
             
             if (CollectionUtils.isEmpty(domSet)) {
-                result.put("doms", JacksonUtils.transferToJsonNode(new HashSet<>()));
                 result.put("count", 0);
+                result.set("doms", JacksonUtils.transferToJsonNode(new HashSet<>()));
                 return result;
             }
             
@@ -99,8 +99,8 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
                 }
             }
             
-            result.put("doms", JacksonUtils.transferToJsonNode(doms));
             result.put("count", doms.size());
+            result.set("doms", JacksonUtils.transferToJsonNode(doms));
             return result;
         }
         
@@ -116,8 +116,8 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
             count += doms.get(namespaceId).size();
         }
         
-        result.put("doms", JacksonUtils.transferToJsonNode(doms));
         result.put("count", count);
+        result.set("doms", JacksonUtils.transferToJsonNode(doms));
         
         return result;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -84,8 +84,7 @@ public ResponseEntity onSyncDatum(@RequestBody Map<String, Datum<Instances>> dat
                         .isDefaultInstanceEphemeral()) {
                     serviceManager.createEmptyService(namespaceId, serviceName, true);
                 }
-                DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(entry.getKey()), null,
-                        entry.getValue());
+                DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(entry.getKey()), entry.getValue());
                 distroProtocol.onReceive(distroHttpData);
             }
         }
@@ -101,7 +100,7 @@ public ResponseEntity onSyncDatum(@RequestBody Map<String, Datum<Instances>> dat
      */
     @PutMapping("/checksum")
     public ResponseEntity syncChecksum(@RequestParam String source, @RequestBody Map<String, String> dataMap) {
-        DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(source), null, dataMap);
+        DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(source), dataMap);
         distroProtocol.onVerify(distroHttpData);
         return ResponseEntity.ok("ok");
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import org.apache.commons.collections.CollectionUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckReactor.java
Patch:
@@ -66,6 +66,7 @@ public static void cancelCheck(ClientBeatCheckTask task) {
         }
         try {
             scheduledFuture.cancel(true);
+            futureMap.remove(task.taskKey());
         } catch (Exception e) {
             Loggers.EVT_LOG.error("[CANCEL-CHECK] cancel failed!", e);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NetUtils.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
  * Net Utils.
@@ -32,7 +32,7 @@ public class NetUtils {
      * @return local server address
      */
     public static String localServer() {
-        return InetUtils.getSelfIp() + UtilsAndCommons.IP_PORT_SPLITER + ApplicationUtils.getPort();
+        return InetUtils.getSelfIP() + UtilsAndCommons.IP_PORT_SPLITER + ApplicationUtils.getPort();
     }
     
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.selector.LabelSelector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
 import com.fasterxml.jackson.core.type.TypeReference;
@@ -118,8 +118,6 @@ public class UtilsAndCommons {
     public static final String DATA_BASE_DIR =
             ApplicationUtils.getNacosHome() + File.separator + "data" + File.separator + "naming";
     
-    public static final String RAFT_CACHE_FILE_SUFFIX = ".datum";
-    
     public static final String RAFT_CACHE_FILE_PREFIX = "com.alibaba.nacos.naming";
     
     public static final String NUMBER_PATTERN = "^\\d+$";

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.web;
 
 import com.alibaba.nacos.common.utils.HttpMethod;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeerSet;

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/ClusterVersionJudgementTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: naming/src/test/java/com/alibaba/nacos/naming/core/ClusterTest.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Http;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.SwitchDomain.TcpHealthParams;
 

File: sys/src/main/java/com/alibaba/nacos/sys/env/Constants.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.sys.env;
 
 /**
  * Nacos common constants.

File: sys/src/main/java/com/alibaba/nacos/sys/file/FileChangeEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import java.io.Serializable;
 

File: sys/src/main/java/com/alibaba/nacos/sys/file/FileWatcher.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import java.nio.file.WatchEvent;
 import java.util.concurrent.Executor;

File: sys/src/main/java/com/alibaba/nacos/sys/file/WatchFileCenter.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -176,7 +176,7 @@ public WatchDirJob(String paths) throws NacosException {
             }
             
             this.callBackExecutor = ExecutorFactory
-                    .newSingleExecutorService(new NameThreadFactory("com.alibaba.nacos.core.file.watch-" + paths));
+                    .newSingleExecutorService(new NameThreadFactory("com.alibaba.nacos.sys.file.watch-" + paths));
             
             try {
                 WatchService service = FILE_SYSTEM.newWatchService();

File: sys/src/test/java/com/alibaba/nacos/sys/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.env;
+package com.alibaba.nacos.sys.env;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -29,8 +29,8 @@
 
 import java.util.HashSet;
 
-import static com.alibaba.nacos.core.env.NacosDefaultPropertySourceEnvironmentPostProcessor.PROPERTY_SOURCE_NAME;
-import static com.alibaba.nacos.core.env.NacosDefaultPropertySourceEnvironmentPostProcessor.RESOURCE_LOCATION_PATTERN;
+import static com.alibaba.nacos.sys.env.NacosDefaultPropertySourceEnvironmentPostProcessor.PROPERTY_SOURCE_NAME;
+import static com.alibaba.nacos.sys.env.NacosDefaultPropertySourceEnvironmentPostProcessor.RESOURCE_LOCATION_PATTERN;
 import static java.util.Arrays.asList;
 
 /**

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigCleanUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.config;
 
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 
 import java.io.IOException;
 

File: test/src/test/java/com/alibaba/nacos/test/core/SnowFlowerIdGenerator_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.core;
 
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.http.HttpStatus;
 import org.junit.After;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.Constants;
 import org.junit.After;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.NacosNamingService;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.BaseTest;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -175,7 +175,6 @@ public String updateSwitch(@RequestParam(required = false) boolean debug, @Reque
      * @param request request
      * @return metrics information
      */
-    @Secured(resource = "naming/metrics", action = ActionTypes.READ)
     @GetMapping("/metrics")
     public ObjectNode metrics(HttpServletRequest request) {
         

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -175,7 +175,7 @@ public Boolean publishConfig(HttpServletRequest request, HttpServletResponse res
                     .notifyConfigChange(new ConfigDataChangeEvent(true, dataId, group, tenant, time.getTime()));
         }
         ConfigTraceService
-                .logPersistenceEvent(dataId, group, tenant, requestIpApp, time.getTime(), InetUtils.getSelfIp(),
+                .logPersistenceEvent(dataId, group, tenant, requestIpApp, time.getTime(), InetUtils.getSelfIP(),
                         ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
         return true;
     }
@@ -598,7 +598,7 @@ public RestResult<Map<String, Object>> importAndPublishConfig(HttpServletRequest
                             configInfo.getTenant(), time.getTime()));
             ConfigTraceService
                     .logPersistenceEvent(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant(),
-                            requestIpApp, time.getTime(), InetUtils.getSelfIp(),
+                            requestIpApp, time.getTime(), InetUtils.getSelfIP(),
                             ConfigTraceService.PERSISTENCE_EVENT_PUB, configInfo.getContent());
         }
         return ResultBuilder.buildSuccessResult("导入成功", saveResult);
@@ -684,7 +684,7 @@ public RestResult<Map<String, Object>> cloneConfig(HttpServletRequest request,
                             configInfo.getTenant(), time.getTime()));
             ConfigTraceService
                     .logPersistenceEvent(configInfo.getDataId(), configInfo.getGroup(), configInfo.getTenant(),
-                            requestIpApp, time.getTime(), InetUtils.getSelfIp(),
+                            requestIpApp, time.getTime(), InetUtils.getSelfIP(),
                             ConfigTraceService.PERSISTENCE_EVENT_PUB, configInfo.getContent());
         }
         return ResultBuilder.buildSuccessResult("Clone Completed Successfully", saveResult);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -69,7 +69,7 @@ public String getHealth() {
                 sb.append("master db (").append(dbStatus.split(":")[1]).append(") down. ");
             }
             if (!memberManager.isInIpList()) {
-                sb.append("server ip ").append(InetUtils.getSelfIp())
+                sb.append("server ip ").append(InetUtils.getSelfIP())
                         .append(" is not in the serverList of address server. ");
             }
         }

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/ApplicationInfo.java
Patch:
@@ -102,7 +102,7 @@ public boolean isSubInfoRecentlyCollected() {
      */
     public boolean canCurrentServerOwnTheLock() {
         boolean currentOwnerIsMe =
-                subInfoCollectLockOwner == null || InetUtils.getSelfIp().equals(subInfoCollectLockOwner);
+                subInfoCollectLockOwner == null || InetUtils.getSelfIP().equals(subInfoCollectLockOwner);
         
         if (currentOwnerIsMe) {
             return true;
@@ -115,7 +115,7 @@ public boolean canCurrentServerOwnTheLock() {
     }
     
     public String currentServer() {
-        return InetUtils.getSelfIp();
+        return InetUtils.getSelfIP();
     }
     
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -419,7 +419,7 @@ public void run() {
                         }
                     } else {
                         // remove config info
-                        persistService.removeConfigInfo(dataId, group, tenant, InetUtils.getSelfIp(), null);
+                        persistService.removeConfigInfo(dataId, group, tenant, InetUtils.getSelfIP(), null);
                         LOGGER.warn(
                                 "[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId="
                                         + group);

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -106,7 +106,7 @@ public void mergeAll() {
             return;
         }
         for (ConfigInfoChanged item : persistService.findAllAggrGroup()) {
-            addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), InetUtils.getSelfIp());
+            addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), InetUtils.getSelfIP());
         }
     }
     
@@ -163,7 +163,7 @@ public void run() {
                                 ContentUtils.truncateContent(cf.getContent()));
                     } else {
                         // remove
-                        persistService.removeConfigInfo(dataId, group, tenant, InetUtils.getSelfIp(), null);
+                        persistService.removeConfigInfo(dataId, group, tenant, InetUtils.getSelfIP(), null);
                         LOGGER.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId="
                                 + group);
                     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -84,7 +84,7 @@ public boolean process(AbstractDelayTask task) {
                         ContentUtils.truncateContent(cf.getContent()));
                 
                 ConfigTraceService
-                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIp(),
+                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIP(),
                                 ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
             } else {
                 // remove
@@ -98,7 +98,7 @@ public boolean process(AbstractDelayTask task) {
                         "[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
                 
                 ConfigTraceService
-                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIp(),
+                        .logPersistenceEvent(dataId, group, tenant, null, time.getTime(), InetUtils.getSelfIP(),
                                 ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
             }
             NotifyCenter.publishEvent(new ConfigDataChangeEvent(false, dataId, group, tenant, tag, time.getTime()));

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -33,7 +33,7 @@ public class StandaloneMemberLookup extends AbstractMemberLookup {
     @Override
     public void start() {
         if (start.compareAndSet(false, true)) {
-            String url = InetUtils.getSelfIp() + ":" + ApplicationUtils.getPort();
+            String url = InetUtils.getSelfIP() + ":" + ApplicationUtils.getPort();
             afterLookup(MemberUtils.readServerConf(Collections.singletonList(url)));
         }
     }

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -86,7 +86,7 @@ public void environmentPrepared(ConfigurableEnvironment environment) {
             System.setProperty(MODE_PROPERTY_KEY_FUNCTION_MODE, ApplicationUtils.FUNCTION_MODE_NAMING);
         }
         
-        System.setProperty(LOCAL_IP_PROPERTY_KEY, InetUtils.getSelfIp());
+        System.setProperty(LOCAL_IP_PROPERTY_KEY, InetUtils.getSelfIP());
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NetUtils.java
Patch:
@@ -32,7 +32,7 @@ public class NetUtils {
      * @return local server address
      */
     public static String localServer() {
-        return InetUtils.getSelfIp() + UtilsAndCommons.IP_PORT_SPLITER + ApplicationUtils.getPort();
+        return InetUtils.getSelfIP() + UtilsAndCommons.IP_PORT_SPLITER + ApplicationUtils.getPort();
     }
     
     /**

File: sys/src/main/java/com/alibaba/nacos/sys/utils/ApplicationUtils.java
Patch:
@@ -346,7 +346,7 @@ public static List<String> getPropertyList(String key) {
     
     public static String getLocalAddress() {
         if (StringUtils.isBlank(localAddress)) {
-            localAddress = InetUtils.getSelfIp() + ":" + getPort();
+            localAddress = InetUtils.getSelfIP() + ":" + getPort();
         }
         return localAddress;
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -357,7 +357,7 @@ public void test_f_id_generator_leader_transfer() throws Exception {
         // transfer leader to ip:8807
         
         Map<String, String> transfer = new HashMap<>();
-        transfer.put(JRaftConstants.TRANSFER_LEADER, InetUtils.getSelfIp() + ":9847");
+        transfer.put(JRaftConstants.TRANSFER_LEADER, InetUtils.getSelfIP() + ":9847");
         RestResult<String> result = protocol7.execute(transfer);
         System.out.println(result);
         Assert.assertTrue(result.ok());
@@ -372,7 +372,7 @@ public void test_f_id_generator_leader_transfer() throws Exception {
         // transfer leader to ip:8808
         
         transfer = new HashMap<>();
-        transfer.put(JRaftConstants.TRANSFER_LEADER, InetUtils.getSelfIp() + ":9848");
+        transfer.put(JRaftConstants.TRANSFER_LEADER, InetUtils.getSelfIP() + ":9848");
         result = protocol8.execute(transfer);
         System.out.println(result);
         Assert.assertTrue(result.ok());
@@ -387,7 +387,7 @@ public void test_f_id_generator_leader_transfer() throws Exception {
         // transfer leader to ip:8809
         
         transfer = new HashMap<>();
-        transfer.put(JRaftConstants.TRANSFER_LEADER, InetUtils.getSelfIp() + ":9849");
+        transfer.put(JRaftConstants.TRANSFER_LEADER, InetUtils.getSelfIP() + ":9849");
         result = protocol9.execute(transfer);
         System.out.println(result);
         Assert.assertTrue(result.ok());

File: test/src/test/java/com/alibaba/nacos/test/core/BaseClusterTest.java
Patch:
@@ -90,7 +90,7 @@ public class BaseClusterTest extends HttpClient4Test {
     static {
         System.getProperties().setProperty("nacos.core.auth.enabled", "false");
         System.getProperties().setProperty("embeddedStorage", "true");
-        String ip = InetUtils.getSelfIp();
+        String ip = InetUtils.getSelfIP();
         clusterInfo = "nacos.member.list=" + ip + ":8847," + ip + ":8848," + ip + ":8849";
         
         NotifyCenter.registerSubscriber(new Subscriber<RaftDbErrorEvent>() {

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -69,7 +69,7 @@ public void before() throws Exception {
 		DiskUtils.forceMkdir(Paths.get(path, "conf").toString());
 		File file = Paths.get(path, "conf", name).toFile();
 		DiskUtils.touch(file);
-		String ip = InetUtils.getSelfIp();
+		String ip = InetUtils.getSelfIP();
 		DiskUtils.writeFile(file, (ip + ":8848," + ip + ":8847," + ip + ":8849").getBytes(
 				StandardCharsets.UTF_8), false);
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2292,7 +2292,7 @@ public ConfigHistoryInfo detailConfigHistory(Long nid) {
                     .queryForObject(sqlFetchRows, new Object[] {nid}, HISTORY_DETAIL_ROW_MAPPER);
             return historyInfo;
         } catch (DataAccessException e) {
-            LogUtil.FATAL_LOG.error("[list-config-history] error, nid:{}", new Object[] {nid}, e);
+            LogUtil.FATAL_LOG.error("[detail-config-history] error, nid:{}", new Object[] {nid}, e);
             throw e;
         }
     }

File: api/src/main/java/com/alibaba/nacos/api/remote/RequestCallBack.java
Patch:
@@ -26,7 +26,7 @@
  * @author liuzunfei
  * @version $Id: PushCallBack.java, v 0.1 2020年09月01日 6:33 PM liuzunfei Exp $
  */
-public interface RequestCallBack {
+public interface RequestCallBack<T extends Response> {
     
     /**
      * get executor on callback.
@@ -47,7 +47,7 @@ public interface RequestCallBack {
      *
      * @param response response received.
      */
-    public void onResponse(Response response);
+    public void onResponse(T response);
     
     /**
      * called on failed.

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushResponseHandler.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.naming.remote.request.NotifySubscriberRequest;
 import com.alibaba.nacos.api.naming.remote.response.NotifySubscriberResponse;
 import com.alibaba.nacos.api.remote.request.Request;
+import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
 import com.alibaba.nacos.common.remote.client.ServerRequestHandler;
@@ -37,7 +38,7 @@ public NamingPushResponseHandler(ServiceInfoHolder serviceInfoHolder) {
     }
 
     @Override
-    public Response requestReply(Request request) {
+    public Response requestReply(Request request, RequestMeta requestMeta) {
         if (request instanceof NotifySubscriberRequest) {
             NotifySubscriberRequest notifyResponse = (NotifySubscriberRequest) request;
             serviceInfoHolder.processServiceInfo(notifyResponse.getServiceInfo());

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConnection.java
Patch:
@@ -26,7 +26,6 @@
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.api.remote.response.ResponseCode;
-import com.alibaba.nacos.common.remote.GrpcUtils;
 import com.alibaba.nacos.common.remote.client.Connection;
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import com.google.common.util.concurrent.FutureCallback;

File: common/src/main/java/com/alibaba/nacos/common/remote/client/rsocket/RsocketConnection.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
-import com.alibaba.nacos.common.remote.RsocketUtils;
 import com.alibaba.nacos.common.remote.client.Connection;
 import com.alibaba.nacos.common.remote.client.RpcClient;
 import io.rsocket.Payload;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CommunicationController.java
Patch:
@@ -127,7 +127,8 @@ public SampleResult getSubClientConfigByIp(HttpServletRequest request, HttpServl
         SampleResult result = longPollingService.getCollectSubscribleInfoByIp(ip);
         Connection connectionByIp = connectionManager.getConnectionByIp(ip);
         if (connectionByIp != null) {
-            Set<GroupKeyContext> listenKeys = configChangeListenContext.getListenKeys(connectionByIp.getConnectionId());
+            Set<GroupKeyContext> listenKeys = configChangeListenContext
+                    .getListenKeys(connectionByIp.getMetaInfo().getConnectionId());
             Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>(listenKeys.size(), 1);
             for (GroupKeyContext listenKey : listenKeys) {
                 lisentersGroupkeyStatus.put(listenKey.getGroupkey(), listenKey.getMd5());

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigConnectionEventListener.java
Patch:
@@ -41,7 +41,7 @@ public void clientConnected(Connection connect) {
     
     @Override
     public void clientDisConnected(Connection connect) {
-        String connectionId = connect.getConnectionId();
+        String connectionId = connect.getMetaInfo().getConnectionId();
         Loggers.RPC.info("client disconnected,clear config listen context, connetionId is {},client ip is {}",
                 connectionId, connect.getMetaInfo().getClientIp());
         configChangeListenContext.clearContextForConnectionId(connectionId);

File: core/src/main/java/com/alibaba/nacos/core/cluster/remote/ClusterRpcClientProxy.java
Patch:
@@ -94,7 +94,8 @@ private void refresh(List<Member> members) throws NacosException {
         //shutdown and remove old members.
         Set<Map.Entry<String, RpcClient>> allClientEntrys = RpcClientFactory.getAllClientEntrys();
         Iterator<Map.Entry<String, RpcClient>> iterator = allClientEntrys.iterator();
-        List<String> newMemberKeys = members.stream().map(a -> memberClientKey(a)).collect(Collectors.toList());
+        List<String> newMemberKeys = members.stream().filter(a -> MemberUtils.isSupportedLongCon(a))
+                .map(a -> memberClientKey(a)).collect(Collectors.toList());
         while (iterator.hasNext()) {
             Map.Entry<String, RpcClient> next1 = iterator.next();
             if (next1.getKey().startsWith("Cluster-") && !newMemberKeys.contains(next1.getKey())) {

File: core/src/main/java/com/alibaba/nacos/core/remote/core/RpcAckCallbackInitorOrCleaner.java
Patch:
@@ -32,11 +32,11 @@ public class RpcAckCallbackInitorOrCleaner extends ClientConnectionEventListener
     
     @Override
     public void clientConnected(Connection connect) {
-        RpcAckCallbackSynchronizer.initContextIfNecessary(connect.getConnectionId());
+        RpcAckCallbackSynchronizer.initContextIfNecessary(connect.getMetaInfo().getConnectionId());
     }
     
     @Override
     public void clientDisConnected(Connection connect) {
-        RpcAckCallbackSynchronizer.clearContext(connect.getConnectionId());
+        RpcAckCallbackSynchronizer.clearContext(connect.getMetaInfo().getConnectionId());
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/ConnectionBasedClientManager.java
Patch:
@@ -54,7 +54,7 @@ public void clientConnected(Connection connect) {
         if (!RemoteConstants.LABEL_MODULE_NAMING.equals(connect.getMetaInfo().getLabel(RemoteConstants.LABEL_MODULE))) {
             return;
         }
-        clientConnected(new ConnectionBasedClient(connect.getConnectionId(), true));
+        clientConnected(new ConnectionBasedClient(connect.getMetaInfo().getConnectionId(), true));
     }
     
     @Override
@@ -73,7 +73,7 @@ public boolean syncClientConnected(String clientId) {
     
     @Override
     public void clientDisConnected(Connection connect) {
-        clientDisconnected(connect.getConnectionId());
+        clientDisconnected(connect.getMetaInfo().getConnectionId());
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/storage/kv/FileKvStorage.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.ByteUtils;
 import com.alibaba.nacos.core.exception.ErrorCode;
 import com.alibaba.nacos.core.exception.KvStorageException;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 
 import java.io.File;
 import java.io.IOException;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftConsistencyServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.exception.runtime.NacosRuntimeException;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;;
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/ClusterVersionJudgementTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.core.distributed.raft.RaftConfig;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.storage.kv.KvStorage;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: sys/src/test/java/com/alibaba/nacos/sys/env/NacosAutoRefreshPropertySourceLoaderTest.java
Patch:
@@ -36,6 +36,7 @@
 import org.springframework.test.context.junit4.SpringRunner;
 
 import java.io.File;
+import java.io.IOException;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.concurrent.CountDownLatch;
@@ -61,7 +62,7 @@ public static void after() {
     }
 
     @Test
-    public void testConfigFileAutoRefresh() throws URISyntaxException, InterruptedException, NacosException {
+    public void testConfigFileAutoRefresh() throws URISyntaxException, InterruptedException, NacosException, IOException {
         final URL url = ClassLoader.getSystemResource("application.properties");
         ApplicationUtils.setContextPath(url.getPath());
         final String val1 = environment.getProperty("name");

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -107,6 +107,9 @@ public void run() {
                 udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8), ack.getBytes(UTF_8).length,
                         packet.getSocketAddress()));
             } catch (Exception e) {
+                if (closed) {
+                    return;
+                }
                 NAMING_LOGGER.error("[NA] error while receiving push data", e);
             }
         }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -263,7 +263,7 @@ public void loadFromOldData() {
                                         .setData(ByteString.copyFrom(serializer.serialize(request))).build())
                                 .whenComplete(((response, throwable) -> {
                                     if (throwable == null) {
-                                        Loggers.RAFT.error("submit old raft data result : {}", response);
+                                        Loggers.RAFT.info("submit old raft data result : {}", response);
                                     } else {
                                         Loggers.RAFT.error("submit old raft data occur exception : {}", throwable);
                                     }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckReactor.java
Patch:
@@ -66,6 +66,7 @@ public static void cancelCheck(ClientBeatCheckTask task) {
         }
         try {
             scheduledFuture.cancel(true);
+            futureMap.remove(task.taskKey());
         } catch (Exception e) {
             Loggers.EVT_LOG.error("[CANCEL-CHECK] cancel failed!", e);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ConcurrentDiskUtil.java
Patch:
@@ -143,11 +143,12 @@ public static Boolean writeFileContent(File file, String content, String charset
                 }
             } while (null == lock);
             
-            ByteBuffer sendBuffer = ByteBuffer.wrap(content.getBytes(charsetName));
+            byte[] contentBytes = content.getBytes(charsetName);
+            ByteBuffer sendBuffer = ByteBuffer.wrap(contentBytes);
             while (sendBuffer.hasRemaining()) {
                 channel.write(sendBuffer);
             }
-            channel.truncate(content.length());
+            channel.truncate(contentBytes.length);
         } catch (FileNotFoundException e) {
             throw new IOException("file not exist");
         } finally {

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -48,4 +48,7 @@ public static Serializer getDefault() {
         return SERIALIZER_MAP.get(defaultSerializer);
     }
     
+    public static Serializer getSerializer(String type) {
+        return SERIALIZER_MAP.get(type.toLowerCase());
+    }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -631,7 +631,7 @@ public List<Instance> updateIpAddresses(Service service, String action, boolean
         }
         
         Map<String, Instance> instanceMap;
-        if (datum != null) {
+        if (datum != null && null != datum.value) {
             instanceMap = setValid(((Instances) datum.value).getInstanceList(), currentInstances);
         } else {
             instanceMap = new HashMap<>(ips.length);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -146,7 +146,7 @@ public static byte[] getAllData(String server) throws Exception {
         }
         
         throw new IOException("failed to req API: " + "http://" + server + ApplicationUtils.getContextPath()
-                + UtilsAndCommons.NACOS_NAMING_CONTEXT + DATA_GET_URL + ". code: " + result.getCode() + " msg: "
+                + UtilsAndCommons.NACOS_NAMING_CONTEXT + ALL_DATA_GET_URL + ". code: " + result.getCode() + " msg: "
                 + result.getMessage());
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManager.java
Patch:
@@ -78,6 +78,7 @@ public interface ClientManager {
      * verify client.
      *
      * @param clientId client id
+     * @return true if client is valid, otherwise is false.
      */
-    void verifyClient(String clientId);
+    boolean verifyClient(String clientId);
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/ClientManagerDelegate.java
Patch:
@@ -76,8 +76,8 @@ public boolean isResponsibleClient(Client client) {
     }
     
     @Override
-    public void verifyClient(String clientId) {
-        getClientManagerById(clientId).verifyClient(clientId);
+    public boolean verifyClient(String clientId) {
+        return getClientManagerById(clientId).verifyClient(clientId);
     }
     
     private ClientManager getClientManagerById(String clientId) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/v2/client/manager/impl/ConnectionBasedClientManager.java
Patch:
@@ -103,13 +103,13 @@ public boolean isResponsibleClient(Client client) {
     }
     
     @Override
-    public void verifyClient(String clientId) {
+    public boolean verifyClient(String clientId) {
         ConnectionBasedClient client = clients.get(clientId);
         if (null != client) {
             client.setLastRenewTime();
-        } else {
-            // TODO get client from source
+            return true;
         }
+        return false;
     }
     
     private static class ExpiredClientCleaner implements Runnable {

File: naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java
Patch:
@@ -102,7 +102,7 @@ public List<Subscriber> getSubscribers(String serviceName, String namespaceId, b
                                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + SUBSCRIBER_ON_SYNC_URL, new ArrayList<>(),
                         paramValues);
                 
-                if (!result.ok()) {
+                if (result.ok()) {
                     Subscribers subscribers = JacksonUtils.toObj(result.getData(), Subscribers.class);
                     subscriberList.addAll(subscribers.getSubscribers());
                 }

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.http;
 
-import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.http.handler.ResponseHandler;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.http.param.Query;
@@ -103,7 +102,7 @@ protected HttpRequestBase build(String url, Header header, Object body, String m
         final BaseHttpMethod httpMethod = BaseHttpMethod.sourceOf(method);
         final HttpRequestBase httpRequestBase = httpMethod.init(url);
         HttpUtils.initRequestHeader(httpRequestBase, header);
-        HttpUtils.initRequestEntity(httpRequestBase, body, header.getValue(HttpHeaderConsts.CONTENT_TYPE));
+        HttpUtils.initRequestEntity(httpRequestBase, body, header);
         return httpRequestBase;
     }
     

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/DefaultHttpClientRequest.java
Patch:
@@ -65,7 +65,7 @@ static HttpRequestBase build(URI uri, String method, RequestHttpEntity requestHt
                 && requestHttpEntity.getBody() instanceof Map) {
             HttpUtils.initRequestFromEntity(httpRequestBase, (Map<String, String>) requestHttpEntity.getBody(), headers.getCharset());
         } else {
-            HttpUtils.initRequestEntity(httpRequestBase, requestHttpEntity.getBody(), headers.getValue(HttpHeaderConsts.CONTENT_TYPE));
+            HttpUtils.initRequestEntity(httpRequestBase, requestHttpEntity.getBody(), headers);
         }
         replaceDefaultConfig(httpRequestBase, requestHttpEntity.getHttpClientConfig());
         return httpRequestBase;

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/JdkHttpClientRequest.java
Patch:
@@ -90,7 +90,7 @@ public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity
         conn.setConnectTimeout(this.httpClientConfig.getConTimeOutMillis());
         conn.setReadTimeout(this.httpClientConfig.getReadTimeOutMillis());
         conn.setRequestMethod(httpMethod);
-        if (body != null) {
+        if (body != null && !"".equals(body)) {
             String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
             String bodyStr = JacksonUtils.toJson(body);
             if (MediaType.APPLICATION_FORM_URLENCODED.equals(contentType)) {

File: common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java
Patch:
@@ -26,7 +26,6 @@
  * Represents an HTTP request , consisting of headers and body.
  *
  * @author mai.jh
- * @date 2020/5/23
  */
 public class RequestHttpEntity {
     
@@ -36,7 +35,7 @@ public class RequestHttpEntity {
     
     private final Query query;
     
-    private Object body;
+    private final Object body;
     
     public RequestHttpEntity(Header header, Query query) {
         this(null, header, query);

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultSharePublisher.java
Patch:
@@ -97,7 +97,8 @@ public void receiveEvent(Event event) {
         // Get for Map, the algorithm is O(1).
         Set<Subscriber> subscribers = subMappings.get(slowEventType);
         if (null == subscribers) {
-            LOGGER.warn("[NotifyCenter] No subscribers for event " + slowEventType.getSimpleName());
+            LOGGER.debug("[NotifyCenter] No subscribers for slow event {}", slowEventType.getName());
+            return;
         }
         
         // Notification single event subscriber

File: common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java
Patch:
@@ -132,6 +132,7 @@ public Class<? extends Event> subscribeType() {
                 return ExpireEvent.class;
             }
             
+            @Override
             public boolean ignoreExpireEvent() {
                 return true;
             }

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionDistributedEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionStandaloneEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -45,7 +45,7 @@
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.time.DateFormatUtils;
 import org.slf4j.Logger;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -31,7 +31,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/ApplicationInfo.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.model.app;
 
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
  * ApplicationInfo.

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 /**
  * ConfigChangePublisher.

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -42,7 +42,7 @@
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.zaxxer.hikari.HikariDataSource;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.zaxxer.hikari.HikariDataSource;
 
 import java.io.File;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -49,8 +49,8 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/EmbeddedDumpService.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.stereotype.Component;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -27,8 +27,8 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -38,8 +38,8 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTaskProcessor.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -27,8 +27,8 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -57,7 +57,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
 import com.alibaba.nacos.core.utils.ClassUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.google.common.base.Preconditions;
 import com.google.protobuf.ByteString;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.sql.ModifyRequest;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.core.JdbcTemplate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.RowMapper;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/EmbeddedStorageContextUtils.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.event.ConfigDumpEvent;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 import java.sql.Timestamp;
 import java.util.ArrayList;

File: config/src/main/java/com/alibaba/nacos/config/server/service/trace/ConfigTraceService.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DiskUtil.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.StringUtils;
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.springframework.context.ApplicationContextInitializer;
 import org.springframework.context.ConfigurableApplicationContext;

File: config/src/test/java/com/alibaba/nacos/config/server/model/ConfigInfoTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.IdGenerator;
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;

File: config/src/test/java/com/alibaba/nacos/config/server/service/ConfigChangePublisherTest.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.console.controller;
 
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.auth.parser.ResourceParser;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/PathRequestCondition.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.auth.condition;
 
-import static com.alibaba.nacos.core.utils.Constants.REQUEST_PATH_SEPARATOR;
+import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 
 /**
  * request path info. method:{@link org.springframework.web.bind.annotation.RequestMapping#method()} path: {@link

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.cluster;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.Collections;

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.time.LocalDateTime;

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -33,13 +33,13 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.cluster.lookup.LookupFactory;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Commons;
-import com.alibaba.nacos.core.utils.Constants;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
-import com.alibaba.nacos.core.utils.InetUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.env.Constants;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.boot.web.context.WebServerInitializedEvent;
 import org.springframework.context.ApplicationListener;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -25,10 +25,10 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.Reader;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/LookupFactory.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 
 import java.io.File;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 import java.util.Collections;
 

File: core/src/main/java/com/alibaba/nacos/core/code/ControllerMethodsCache.java
Patch:
@@ -45,7 +45,8 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
-import static com.alibaba.nacos.core.utils.Constants.REQUEST_PATH_SEPARATOR;
+import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
+
 
 /**
  * Method cache.

File: core/src/main/java/com/alibaba/nacos/core/code/LoggingSpringApplicationRunListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.SpringApplication;

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -27,8 +27,8 @@
 
 import java.util.Arrays;
 
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * Standalone {@link Profile} {@link ApplicationListener} for {@link ApplicationEnvironmentPreparedEvent}.

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Commons;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import org.springframework.beans.factory.DisposableBean;
 import org.springframework.beans.factory.annotation.Autowired;

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/load/DistroLoadDataTask.java
Patch:
@@ -109,7 +109,7 @@ private boolean loadAllDataSnapshotFromRemote(String resourceType) {
                     return true;
                 }
             } catch (Exception e) {
-                Loggers.DISTRO.error("[DISTRO-INIT] load snapshot {} from {} failed.", resourceType, each.getAddress());
+                Loggers.DISTRO.error("[DISTRO-INIT] load snapshot {} from {} failed.", resourceType, each.getAddress(), e);
             }
         }
         return false;

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/SnowFlowerIdGenerator.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.distributed.id;
 
 import com.alibaba.nacos.consistency.IdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.google.common.base.Preconditions;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -39,7 +39,7 @@
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftOptionsBuilder;
 import com.alibaba.nacos.core.monitor.MetricsMonitor;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alipay.sofa.jraft.CliService;
 import com.alipay.sofa.jraft.Node;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java
Patch:
@@ -25,9 +25,9 @@
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
 import com.alibaba.nacos.core.distributed.raft.processor.NacosGetRequestProcessor;
 import com.alibaba.nacos.core.distributed.raft.processor.NacosLogProcessor;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alipay.sofa.jraft.CliService;
 import com.alipay.sofa.jraft.RouteTable;
 import com.alipay.sofa.jraft.Status;

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.common.http.HttpUtils;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.context.request.async.DeferredResult;
 import org.springframework.web.multipart.MultipartFile;

File: core/src/test/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListenerTest.java
Patch:
@@ -27,7 +27,7 @@
 import org.springframework.core.env.Environment;
 import org.springframework.test.context.junit4.SpringRunner;
 
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * {@link StandaloneProfileApplicationListener} Test.

File: core/src/test/java/com/alibaba/nacos/core/utils/SystemUtilsTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.io.FileUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
@@ -26,8 +27,8 @@
 import java.util.List;
 import java.util.Random;
 
-import static com.alibaba.nacos.core.utils.Constants.PREFER_HOSTNAME_OVER_IP_PROPERTY_NAME;
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.PREFER_HOSTNAME_OVER_IP_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_MODE_PROPERTY_NAME;
 
 /**
  * {@link ApplicationUtils} Test.

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/component/DistroDataStorageImpl.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.ephemeral.distro.component;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.transport.Serializer;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import org.apache.commons.collections.CollectionUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.core;
 
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NetUtils.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
  * Net Utils.

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.selector.LabelSelector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
 import com.fasterxml.jackson.core.type.TypeReference;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.web;
 
 import com.alibaba.nacos.common.utils.HttpMethod;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeerSet;

File: naming/src/test/java/com/alibaba/nacos/naming/core/ClusterTest.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Http;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.SwitchDomain.TcpHealthParams;
 

File: sys/src/main/java/com/alibaba/nacos/sys/env/Constants.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.sys.env;
 
 /**
  * Nacos common constants.

File: sys/src/main/java/com/alibaba/nacos/sys/file/FileChangeEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import java.io.Serializable;
 

File: sys/src/main/java/com/alibaba/nacos/sys/file/FileWatcher.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import java.nio.file.WatchEvent;
 import java.util.concurrent.Executor;

File: sys/src/main/java/com/alibaba/nacos/sys/file/WatchFileCenter.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -176,7 +176,7 @@ public WatchDirJob(String paths) throws NacosException {
             }
             
             this.callBackExecutor = ExecutorFactory
-                    .newSingleExecutorService(new NameThreadFactory("com.alibaba.nacos.core.file.watch-" + paths));
+                    .newSingleExecutorService(new NameThreadFactory("com.alibaba.nacos.sys.file.watch-" + paths));
             
             try {
                 WatchService service = FILE_SYSTEM.newWatchService();

File: sys/src/test/java/com/alibaba/nacos/sys/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.env;
+package com.alibaba.nacos.sys.env;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -29,8 +29,8 @@
 
 import java.util.HashSet;
 
-import static com.alibaba.nacos.core.env.NacosDefaultPropertySourceEnvironmentPostProcessor.PROPERTY_SOURCE_NAME;
-import static com.alibaba.nacos.core.env.NacosDefaultPropertySourceEnvironmentPostProcessor.RESOURCE_LOCATION_PATTERN;
+import static com.alibaba.nacos.sys.env.NacosDefaultPropertySourceEnvironmentPostProcessor.PROPERTY_SOURCE_NAME;
+import static com.alibaba.nacos.sys.env.NacosDefaultPropertySourceEnvironmentPostProcessor.RESOURCE_LOCATION_PATTERN;
 import static java.util.Arrays.asList;
 
 /**

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigCleanUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.config;
 
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 
 import java.io.IOException;
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftConstants;
 import com.alibaba.nacos.core.utils.GenericType;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.test.core.BaseClusterTest;
 
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -28,7 +28,8 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
 
-import static com.alibaba.nacos.core.utils.Constants.NACOS_SERVER_IP;
+import static com.alibaba.nacos.sys.env.Constants.NACOS_SERVER_IP;
+
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: test/src/test/java/com/alibaba/nacos/test/core/SnowFlowerIdGenerator_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.core;
 
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.http.HttpStatus;
 import org.junit.After;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -17,16 +17,16 @@
 package com.alibaba.nacos.test.core.cluster;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.cluster.lookup.AddressServerMemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.FileConfigMemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.LookupFactory;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.StandaloneMemberLookup;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.test.BaseTest;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.After;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.Constants;
 import org.junit.After;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.NacosNamingService;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.utils.NamingTestUtils;
 import org.junit.After;
 import org.junit.Assert;
@@ -119,7 +119,6 @@ public void autoDregDomClustersTest() throws Exception {
         Assert.assertEquals(0, instances.size());
     }
     
-    
     /**
      * 客户端停止上报实例心跳，服务端自动注销实例
      *
@@ -198,7 +197,6 @@ public void autoRegDomTest() throws Exception {
         Assert.assertEquals(2, instances.size());
     }
     
-    
     /**
      * 指定cluster中（单个、多个）实例,客户端停止上报实例心跳，服务端自动注销实例,恢复心跳，服务端自动注册实例
      *

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.BaseTest;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionDistributedEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionStandaloneEmbedStorage.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.context.annotation.Condition;
 import org.springframework.context.annotation.ConditionContext;
 import org.springframework.core.type.AnnotatedTypeMetadata;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -45,7 +45,7 @@
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.time.DateFormatUtils;
 import org.slf4j.Logger;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -31,7 +31,7 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/ApplicationInfo.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.model.app;
 
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
  * ApplicationInfo.

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 /**
  * ConfigChangePublisher.

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -42,7 +42,7 @@
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.zaxxer.hikari.HikariDataSource;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.zaxxer.hikari.HikariDataSource;
 
 import java.io.File;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -49,8 +49,8 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/EmbeddedDumpService.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.stereotype.Component;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -27,8 +27,8 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -32,8 +32,8 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTaskProcessor.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -27,8 +27,8 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -57,7 +57,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
 import com.alibaba.nacos.core.utils.ClassUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.google.common.base.Preconditions;
 import com.google.protobuf.ByteString;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.sql.ModifyRequest;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.core.JdbcTemplate;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.jdbc.core.RowMapper;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/EmbeddedStorageContextUtils.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.event.ConfigDumpEvent;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 
 import java.sql.Timestamp;
 import java.util.ArrayList;

File: config/src/main/java/com/alibaba/nacos/config/server/service/trace/ConfigTraceService.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DiskUtil.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.StringUtils;
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.springframework.context.ApplicationContextInitializer;
 import org.springframework.context.ConfigurableApplicationContext;

File: config/src/test/java/com/alibaba/nacos/config/server/model/ConfigInfoTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.IdGenerator;
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;

File: config/src/test/java/com/alibaba/nacos/config/server/service/ConfigChangePublisherTest.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.console.controller;
 
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestMapping;

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.auth.parser.ResourceParser;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/auth/condition/PathRequestCondition.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.auth.condition;
 
-import static com.alibaba.nacos.core.utils.Constants.REQUEST_PATH_SEPARATOR;
+import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
 
 /**
  * request path info. method:{@link org.springframework.web.bind.annotation.RequestMapping#method()} path: {@link

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.cluster;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.Collections;

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.time.LocalDateTime;

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -32,13 +32,13 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.cluster.lookup.LookupFactory;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Commons;
-import com.alibaba.nacos.core.utils.Constants;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
-import com.alibaba.nacos.core.utils.InetUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.env.Constants;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.boot.web.context.WebServerInitializedEvent;
 import org.springframework.context.ApplicationListener;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -25,10 +25,10 @@
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.GlobalExecutor;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.Reader;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/LookupFactory.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 
 import java.io.File;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 import java.util.Collections;
 

File: core/src/main/java/com/alibaba/nacos/core/code/ControllerMethodsCache.java
Patch:
@@ -45,7 +45,8 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
-import static com.alibaba.nacos.core.utils.Constants.REQUEST_PATH_SEPARATOR;
+import static com.alibaba.nacos.sys.env.Constants.REQUEST_PATH_SEPARATOR;
+
 
 /**
  * Method cache.

File: core/src/main/java/com/alibaba/nacos/core/code/LoggingSpringApplicationRunListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.SpringApplication;

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -27,8 +27,8 @@
 
 import java.util.Arrays;
 
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * Standalone {@link Profile} {@link ApplicationListener} for {@link ApplicationEnvironmentPreparedEvent}.

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -29,7 +29,7 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Commons;
 import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import org.springframework.beans.factory.DisposableBean;
 import org.springframework.beans.factory.annotation.Autowired;

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/SnowFlowerIdGenerator.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.core.distributed.id;
 
 import com.alibaba.nacos.consistency.IdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.google.common.base.Preconditions;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -39,7 +39,7 @@
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftOptionsBuilder;
 import com.alibaba.nacos.core.monitor.MetricsMonitor;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alipay.sofa.jraft.CliService;
 import com.alipay.sofa.jraft.Node;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java
Patch:
@@ -25,9 +25,9 @@
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
 import com.alibaba.nacos.core.distributed.raft.processor.NacosGetRequestProcessor;
 import com.alibaba.nacos.core.distributed.raft.processor.NacosLogProcessor;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import com.alipay.sofa.jraft.CliService;
 import com.alipay.sofa.jraft.RouteTable;
 import com.alipay.sofa.jraft.Status;

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.common.http.HttpUtils;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.web.context.request.async.DeferredResult;
 import org.springframework.web.multipart.MultipartFile;

File: core/src/test/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListenerTest.java
Patch:
@@ -27,7 +27,7 @@
 import org.springframework.core.env.Environment;
 import org.springframework.test.context.junit4.SpringRunner;
 
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * {@link StandaloneProfileApplicationListener} Test.

File: core/src/test/java/com/alibaba/nacos/core/utils/SystemUtilsTest.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.io.FileUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
@@ -26,8 +27,8 @@
 import java.util.List;
 import java.util.Random;
 
-import static com.alibaba.nacos.core.utils.Constants.PREFER_HOSTNAME_OVER_IP_PROPERTY_NAME;
-import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.PREFER_HOSTNAME_OVER_IP_PROPERTY_NAME;
+import static com.alibaba.nacos.sys.env.Constants.STANDALONE_MODE_PROPERTY_NAME;
 
 /**
  * {@link ApplicationUtils} Test.

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/component/DistroDataStorageImpl.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.ephemeral.distro.component;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.transport.Serializer;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.consistency.DataOperation;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import com.alibaba.nacos.naming.NamingApp;
 import com.alibaba.nacos.naming.consistency.Datum;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.NetUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftProxy.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import org.springframework.http.HttpMethod;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.auth.annotation.Secured;
 import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import org.apache.commons.collections.CollectionUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.core;
 
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.NetUtils;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.misc.Loggers;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.MapUtils;
 import org.apache.commons.lang3.StringUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.IOException;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NetUtils.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 
 /**
  * Net Utils.

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -16,9 +16,9 @@
 
 package com.alibaba.nacos.naming.misc;
 
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.springframework.util.StringUtils;
 
 import java.util.HashMap;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.http.Callback;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.HashMap;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.selector.LabelSelector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
 import com.fasterxml.jackson.core.type.TypeReference;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.naming.web;
 
 import com.alibaba.nacos.common.utils.HttpMethod;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.env.Constants;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming;
 
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeerSet;

File: naming/src/test/java/com/alibaba/nacos/naming/core/ClusterTest.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Http;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.SwitchDomain.TcpHealthParams;
 

File: sys/src/main/java/com/alibaba/nacos/sys/env/Constants.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.sys.env;
 
 /**
  * Nacos common constants.

File: sys/src/main/java/com/alibaba/nacos/sys/file/FileChangeEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import java.io.Serializable;
 

File: sys/src/main/java/com/alibaba/nacos/sys/file/FileWatcher.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import java.nio.file.WatchEvent;
 import java.util.concurrent.Executor;

File: sys/src/main/java/com/alibaba/nacos/sys/file/WatchFileCenter.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.file;
+package com.alibaba.nacos.sys.file;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
@@ -176,7 +176,7 @@ public WatchDirJob(String paths) throws NacosException {
             }
             
             this.callBackExecutor = ExecutorFactory
-                    .newSingleExecutorService(new NameThreadFactory("com.alibaba.nacos.core.file.watch-" + paths));
+                    .newSingleExecutorService(new NameThreadFactory("com.alibaba.nacos.sys.file.watch-" + paths));
             
             try {
                 WatchService service = FILE_SYSTEM.newWatchService();

File: sys/src/main/java/com/alibaba/nacos/sys/utils/DiskUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.sys.utils;
 
 import com.alibaba.nacos.common.utils.ByteUtils;
 import com.alibaba.nacos.common.utils.Objects;

File: sys/src/test/java/com/alibaba/nacos/sys/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.env;
+package com.alibaba.nacos.sys.env;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -29,8 +29,8 @@
 
 import java.util.HashSet;
 
-import static com.alibaba.nacos.core.env.NacosDefaultPropertySourceEnvironmentPostProcessor.PROPERTY_SOURCE_NAME;
-import static com.alibaba.nacos.core.env.NacosDefaultPropertySourceEnvironmentPostProcessor.RESOURCE_LOCATION_PATTERN;
+import static com.alibaba.nacos.sys.env.NacosDefaultPropertySourceEnvironmentPostProcessor.PROPERTY_SOURCE_NAME;
+import static com.alibaba.nacos.sys.env.NacosDefaultPropertySourceEnvironmentPostProcessor.RESOURCE_LOCATION_PATTERN;
 import static java.util.Arrays.asList;
 
 /**

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigCleanUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.config;
 
 import com.alibaba.nacos.client.config.impl.LocalConfigInfoProcessor;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
 
 import java.io.IOException;
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftConstants;
 import com.alibaba.nacos.core.utils.GenericType;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.test.core.BaseClusterTest;
 
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -28,7 +28,8 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
 
-import static com.alibaba.nacos.core.utils.Constants.NACOS_SERVER_IP;
+import static com.alibaba.nacos.sys.env.Constants.NACOS_SERVER_IP;
+
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: test/src/test/java/com/alibaba/nacos/test/core/SnowFlowerIdGenerator_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.core;
 
 import com.alibaba.nacos.core.distributed.id.SnowFlowerIdGenerator;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.core.env.StandardEnvironment;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.apache.http.HttpStatus;
 import org.junit.After;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -17,16 +17,16 @@
 package com.alibaba.nacos.test.core.cluster;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.cluster.lookup.AddressServerMemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.FileConfigMemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.LookupFactory;
 import com.alibaba.nacos.core.cluster.MemberLookup;
 import com.alibaba.nacos.core.cluster.lookup.StandaloneMemberLookup;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.InetUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.DiskUtils;
+import com.alibaba.nacos.sys.utils.InetUtils;
 import com.alibaba.nacos.test.BaseTest;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.After;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -24,8 +24,8 @@
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
-import com.alibaba.nacos.core.utils.Constants;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.env.Constants;
 import org.junit.After;
 import org.junit.AfterClass;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.NacosNamingService;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.After;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import com.alibaba.nacos.test.BaseTest;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.sys.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.http.param.Header;
+import com.alibaba.nacos.common.http.param.MediaType;
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -81,7 +82,8 @@ public static void initRequestEntity(HttpRequestBase requestBase, Object body, H
         }
         if (requestBase instanceof HttpEntityEnclosingRequest) {
             HttpEntityEnclosingRequest request = (HttpEntityEnclosingRequest) requestBase;
-            ContentType contentType = ContentType.create(header.getValue(HttpHeaderConsts.CONTENT_TYPE), header.getCharset());
+            MediaType mediaType = MediaType.valueOf(header.getValue(HttpHeaderConsts.CONTENT_TYPE));
+            ContentType contentType = ContentType.create(mediaType.getType(), mediaType.getCharset());
             HttpEntity entity;
             if (body instanceof byte[]) {
                 entity = new ByteArrayEntity((byte[]) body, contentType);

File: common/src/test/java/com/alibaba/nacos/common/notify/NotifyCenterTest.java
Patch:
@@ -132,6 +132,7 @@ public Class<? extends Event> subscribeType() {
                 return ExpireEvent.class;
             }
             
+            @Override
             public boolean ignoreExpireEvent() {
                 return true;
             }

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.http;
 
-import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.http.handler.ResponseHandler;
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.http.param.Query;
@@ -103,7 +102,7 @@ protected HttpRequestBase build(String url, Header header, Object body, String m
         final BaseHttpMethod httpMethod = BaseHttpMethod.sourceOf(method);
         final HttpRequestBase httpRequestBase = httpMethod.init(url);
         HttpUtils.initRequestHeader(httpRequestBase, header);
-        HttpUtils.initRequestEntity(httpRequestBase, body, header.getValue(HttpHeaderConsts.CONTENT_TYPE));
+        HttpUtils.initRequestEntity(httpRequestBase, body, header);
         return httpRequestBase;
     }
     

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/DefaultHttpClientRequest.java
Patch:
@@ -65,7 +65,7 @@ static HttpRequestBase build(URI uri, String method, RequestHttpEntity requestHt
                 && requestHttpEntity.getBody() instanceof Map) {
             HttpUtils.initRequestFromEntity(httpRequestBase, (Map<String, String>) requestHttpEntity.getBody(), headers.getCharset());
         } else {
-            HttpUtils.initRequestEntity(httpRequestBase, requestHttpEntity.getBody(), headers.getValue(HttpHeaderConsts.CONTENT_TYPE));
+            HttpUtils.initRequestEntity(httpRequestBase, requestHttpEntity.getBody(), headers);
         }
         replaceDefaultConfig(httpRequestBase, requestHttpEntity.getHttpClientConfig());
         return httpRequestBase;

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/JdkHttpClientRequest.java
Patch:
@@ -90,7 +90,7 @@ public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity
         conn.setConnectTimeout(this.httpClientConfig.getConTimeOutMillis());
         conn.setReadTimeout(this.httpClientConfig.getReadTimeOutMillis());
         conn.setRequestMethod(httpMethod);
-        if (body != null) {
+        if (body != null && !"".equals(body)) {
             String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
             String bodyStr = JacksonUtils.toJson(body);
             if (MediaType.APPLICATION_FORM_URLENCODED.equals(contentType)) {

File: common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java
Patch:
@@ -26,7 +26,6 @@
  * Represents an HTTP request , consisting of headers and body.
  *
  * @author mai.jh
- * @date 2020/5/23
  */
 public class RequestHttpEntity {
     
@@ -36,7 +35,7 @@ public class RequestHttpEntity {
     
     private final Query query;
     
-    private Object body;
+    private final Object body;
     
     public RequestHttpEntity(Header header, Query query) {
         this(null, header, query);

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/load/DistroLoadDataTask.java
Patch:
@@ -109,7 +109,7 @@ private boolean loadAllDataSnapshotFromRemote(String resourceType) {
                     return true;
                 }
             } catch (Exception e) {
-                Loggers.DISTRO.error("[DISTRO-INIT] load snapshot {} from {} failed.", resourceType, each.getAddress());
+                Loggers.DISTRO.error("[DISTRO-INIT] load snapshot {} from {} failed.", resourceType, each.getAddress(), e);
             }
         }
         return false;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.naming.healthcheck;
 
+import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
@@ -34,7 +35,6 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
-import java.net.HttpURLConnection;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.HashMap;
@@ -92,11 +92,11 @@ public void init() {
                             JacksonUtils.toJson(list));
                 }
                 
-                HttpClient.HttpResult httpResult = HttpClient.httpPost(
+                RestResult<String> httpResult = HttpClient.httpPost(
                         "http://" + server.getAddress() + ApplicationUtils.getContextPath()
                                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/api/healthCheckResult", null, params);
                 
-                if (httpResult.code != HttpURLConnection.HTTP_OK) {
+                if (!httpResult.ok()) {
                     Loggers.EVT_LOG.warn("[HEALTH-CHECK-SYNC] failed to send result to {}, result: {}", server,
                             JacksonUtils.toJson(list));
                 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.identify.Base64;
+import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.client.identify.CredentialService;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.config.utils;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.client.utils.IpUtil;
+import com.alibaba.nacos.common.utils.IpUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.List;
@@ -190,7 +190,7 @@ public static void checkBetaIps(String betaIps) throws NacosException {
         }
         String[] ipsArr = betaIps.split(",");
         for (String ip : ipsArr) {
-            if (!IpUtil.isIpv4(ip)) {
+            if (!IpUtils.isIpv4(ip)) {
                 throw new NacosException(NacosException.CLIENT_INVALID_PARAM, "betaIps invalid");
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
+import com.alibaba.nacos.common.tls.TlsSystemConfig;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -53,7 +54,7 @@ public class HttpClient {
     
     public static final int CON_TIME_OUT_MILLIS = Integer.getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     
-    private static final boolean ENABLE_HTTPS = Boolean.getBoolean("com.alibaba.nacos.client.naming.tls.enable");
+    private static final boolean ENABLE_HTTPS = Boolean.getBoolean(TlsSystemConfig.TLS_ENABLE);
     
     static {
         // limit max redirection

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.common.http.HttpClientFactory;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.lifecycle.Closeable;
+import com.alibaba.nacos.common.tls.TlsSystemConfig;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import org.slf4j.Logger;
 
@@ -40,7 +41,7 @@ public class NamingHttpClientManager implements Closeable {
     
     private static final int CON_TIME_OUT_MILLIS = Integer.getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     
-    private static final boolean ENABLE_HTTPS = Boolean.getBoolean("com.alibaba.nacos.client.naming.tls.enable");
+    private static final boolean ENABLE_HTTPS = Boolean.getBoolean(TlsSystemConfig.TLS_ENABLE);
     
     private static final int MAX_REDIRECTS = 5;
     
@@ -85,7 +86,7 @@ protected HttpClientConfig buildHttpClientConfig() {
             return HttpClientConfig.builder().setConTimeOutMillis(CON_TIME_OUT_MILLIS)
                     .setReadTimeOutMillis(READ_TIME_OUT_MILLIS).setMaxRedirects(MAX_REDIRECTS).build();
         }
-    
+        
         @Override
         protected Logger assignLogger() {
             return NAMING_LOGGER;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -596,7 +596,7 @@ public String callServer(String api, Map<String, String> params, Map<String, Str
         
         try {
             HttpRestResult<String> restResult = nacosRestTemplate
-                    .exchangeForm(url, header, params, body, method, String.class);
+                    .exchangeForm(url, header, Query.newInstance().initParams(params), body, method, String.class);
             end = System.currentTimeMillis();
             
             MetricsMonitor.getNamingRequestMonitor(method, url, String.valueOf(restResult.getCode()))

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/SignUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.client.naming.utils;
 
-import com.alibaba.nacos.client.identify.Base64;
+import com.alibaba.nacos.common.codec.Base64;
 
 import javax.crypto.Mac;
 import javax.crypto.spec.SecretKeySpec;

File: common/src/main/java/com/alibaba/nacos/common/codec/Base64.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.common.codec;
 
 import java.nio.charset.Charset;
 

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -229,7 +229,7 @@ public static String decode(String str, String encode) throws UnsupportedEncodin
      * @return {@link URI}
      */
     public static URI buildUri(String url, Query query) throws URISyntaxException {
-        if (!query.isEmpty()) {
+        if (query != null && !query.isEmpty()) {
             url = url + "?" + query.toQueryUrl();
         }
         return new URI(url);

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -56,7 +56,7 @@ public class DefaultPublisher extends Thread implements EventPublisher {
     
     protected volatile Long lastEventSequence = -1L;
     
-    private final AtomicReferenceFieldUpdater<DefaultPublisher, Long> updater = AtomicReferenceFieldUpdater
+    private static final AtomicReferenceFieldUpdater<DefaultPublisher, Long> UPDATER = AtomicReferenceFieldUpdater
             .newUpdater(DefaultPublisher.class, Long.class, "lastEventSequence");
     
     @Override
@@ -115,7 +115,7 @@ void openEventHandler() {
                 }
                 final Event event = queue.take();
                 receiveEvent(event);
-                updater.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
+                UPDATER.compareAndSet(this, lastEventSequence, Math.max(lastEventSequence, event.sequence()));
             }
         } catch (Throwable ex) {
             LOGGER.error("Event listener exception : {}", ex);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpAllBetaTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump all beta task.
  *
  * @author Nacos
  * @date 2020/7/5 12:19 PM
  */
-public class DumpAllBetaTask extends AbstractTask {
+public class DumpAllBetaTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpAllBetaConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpAllTagTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump all tag task.
  *
  * @author Nacos
  * @date 2020/7/5 12:19 PM
  */
-public class DumpAllTagTask extends AbstractTask {
+public class DumpAllTagTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpAllTagConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpAllTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump all task.
  *
  * @author Nacos
  * @date 2020/7/5 12:17 PM
  */
-public class DumpAllTask extends AbstractTask {
+public class DumpAllTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpAllConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpChangeTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump change task.
  *
  * @author Nacos
  * @date 2020/7/5 12:19 PM
  */
-public class DumpChangeTask extends AbstractTask {
+public class DumpChangeTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpChangeConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpTask.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump data task.
  *
  * @author Nacos
  */
-public class DumpTask extends AbstractTask {
+public class DumpTask extends AbstractDelayTask {
     
     public DumpTask(String groupKey, long lastModified, String handleIp) {
         this.groupKey = groupKey;
@@ -56,7 +56,7 @@ public DumpTask(String groupKey, String tag, long lastModified, String handleIp,
     }
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     final String groupKey;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDataTask.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.service.merge;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Represents the task of aggregating data.
  *
  * @author jiuRen
  */
-class MergeDataTask extends AbstractTask {
+class MergeDataTask extends AbstractDelayTask {
     
     MergeDataTask(String dataId, String groupId, String tenant, String clientIp) {
         this(dataId, groupId, tenant, null, clientIp);
@@ -42,7 +42,7 @@ class MergeDataTask extends AbstractTask {
     }
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public String getId() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTask.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.service.notify;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Notify task.
  *
  * @author Nacos
  */
-public class NotifyTask extends AbstractTask {
+public class NotifyTask extends AbstractDelayTask {
     
     private String dataId;
     
@@ -76,7 +76,7 @@ public void setLastModified(long lastModified) {
     }
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
         // Perform merge, but do nothing, tasks with the same dataId and group, later will replace the previous
         
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -128,7 +128,7 @@ public CompletableFuture<RestResult<String>> dataImport(File file) {
     
     @Override
     public Boolean update(List<ModifyRequest> modifyRequests, BiConsumer<Boolean, Throwable> consumer) {
-        return update(modifyRequests);
+        return update(transactionTemplate, jdbcTemplate, modifyRequests, consumer);
     }
     
     @Override

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -33,8 +33,7 @@ public class SerializeFactory {
     
     private static final Map<String, Serializer> SERIALIZER_MAP = new HashMap<String, Serializer>(4);
     
-    @SuppressWarnings("checkstyle:StaticVariableName")
-    public static String DEFAULT_SERIALIZER = HESSIAN_INDEX;
+    public static String defaultSerializer = HESSIAN_INDEX;
     
     static {
         Serializer serializer = new HessianSerializer();
@@ -46,7 +45,7 @@ public class SerializeFactory {
     }
     
     public static Serializer getDefault() {
-        return SERIALIZER_MAP.get(DEFAULT_SERIALIZER);
+        return SERIALIZER_MAP.get(defaultSerializer);
     }
     
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/utils/DiskUtils.java
Patch:
@@ -266,7 +266,7 @@ public static boolean writeFile(File file, byte[] content, boolean append) throw
                 String errMsg = ioe.getMessage();
                 if (NO_SPACE_CN.equals(errMsg) || NO_SPACE_EN.equals(errMsg) || errMsg.contains(DISK_QUATA_CN) || errMsg
                         .contains(DISK_QUATA_EN)) {
-                    LOGGER.warn("磁盘满，自杀退出");
+                    LOGGER.warn("Disk full, suicide exits");
                     System.exit(0);
                 }
             } else {

File: core/src/main/java/com/alibaba/nacos/core/utils/Loggers.java
Patch:
@@ -33,6 +33,8 @@ public class Loggers {
     
     public static final Logger RAFT = LoggerFactory.getLogger("com.alibaba.nacos.core.protocol.raft");
     
+    public static final Logger DISTRO = LoggerFactory.getLogger("com.alibaba.nacos.core.protocol.distro");
+    
     public static final Logger CLUSTER = LoggerFactory.getLogger("com.alibaba.nacos.core.cluster");
     
 }

File: core/src/test/java/com/alibaba/nacos/core/storage/RocksStorageTest.java
Patch:
@@ -54,7 +54,7 @@ public void testRocksStorageSnapshotSave() throws Throwable {
         try {
             RocksStorage storage = RocksStorage.createDefault("test", DIR);
             storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
-            storage.snapshotSave(Paths.get(DIR, "snapshot").toString());
+            storage.doSnapshot(Paths.get(DIR, "snapshot").toString());
         } catch (Throwable ex) {
             Assert.fail(ex.getMessage());
         }
@@ -64,7 +64,7 @@ public void testRocksStorageSnapshotSave() throws Throwable {
     public void testRocksStorageSnapshotLoad() throws Throwable {
         RocksStorage storage = RocksStorage.createDefault("test", DIR);
         storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
-        storage.snapshotSave(Paths.get(DIR, "snapshot").toString());
+        storage.snapshotLoad(Paths.get(DIR, "snapshot").toString());
         storage.shutdown();
         ThreadUtils.sleep(5_000L);
         storage = RocksStorage.createDefault("test", Paths.get(ApplicationUtils.getNacosTmpDir(), "snapshot_load").toString());

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/NacosMcpService.java
Patch:
@@ -95,7 +95,7 @@ public void run() {
             
             for (String namespace : namespaces) {
                 
-                Map<String, Service> services = serviceManager.getServiceMap(namespace);
+                Map<String, Service> services = serviceManager.chooseServiceMap(namespace);
                 
                 if (services.isEmpty()) {
                     continue;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DelegateConsistencyServiceImpl.java
Patch:
@@ -58,7 +58,7 @@ public DelegateConsistencyServiceImpl(ClusterVersionJudgement versionJudgement,
     }
     
     private void init() {
-        this.versionJudgement.registerObserver(isAllNewVersion -> switchNewPersistentService = isAllNewVersion);
+        this.versionJudgement.registerObserver(isAllNewVersion -> switchNewPersistentService = isAllNewVersion, -1);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftListener.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.naming.consistency.persistent.ClusterVersionJudgement;
+import com.alibaba.nacos.naming.misc.Loggers;
 import org.springframework.context.ApplicationEvent;
 import org.springframework.context.event.SmartApplicationListener;
 import org.springframework.stereotype.Component;
@@ -55,11 +56,12 @@ private void init() {
         this.versionJudgement.registerObserver(isAllNewVersion -> {
             stopUpdate = isAllNewVersion;
             if (stopUpdate) {
+                Loggers.RAFT.warn("start to move old raft protocol metadata");
                 Member self = memberManager.getSelf();
                 self.delExtendVal(GROUP);
                 memberManager.update(self);
             }
-        });
+        }, -2);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -46,6 +46,8 @@ public class Cluster extends com.alibaba.nacos.api.naming.pojo.Cluster implement
     
     private static final String CLUSTER_NAME_SYNTAX = "[0-9a-zA-Z-]+";
     
+    private static final long serialVersionUID = 8940123791150907510L;
+    
     /**
      * a addition for same site routing, can group multiple sites into a region, like Hangzhou, Shanghai, etc.
      */

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -47,6 +47,8 @@ public class Instance extends com.alibaba.nacos.api.naming.pojo.Instance impleme
     
     private static final double MIN_WEIGHT_VALUE = 0.00D;
     
+    private static final long serialVersionUID = -6527721638428975306L;
+    
     private volatile long lastBeat = System.currentTimeMillis();
     
     @JsonIgnore

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class Instances implements Record {
     
+    private static final long serialVersionUID = 5500823673993740145L;
+    
     private List<Instance> instanceList = new ArrayList<>();
     
     public List<Instance> getInstanceList() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -62,8 +62,11 @@
 @JsonInclude(Include.NON_NULL)
 public class Service extends com.alibaba.nacos.api.naming.pojo.Service implements Record, RecordListener<Instances> {
     
+    
     private static final String SERVICE_NAME_SYNTAX = "[0-9a-zA-Z@\\.:_-]+";
     
+    private static final long serialVersionUID = -1341508935415925039L;
+    
     @JsonIgnore
     private ClientBeatCheckTask clientBeatCheckTask = new ClientBeatCheckTask(this);
     

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -36,6 +36,8 @@
 @Component
 public class SwitchDomain implements Record, Cloneable {
     
+    private static final long serialVersionUID = 7619505097145337232L;
+    
     private List<String> masters;
     
     private Map<String, Integer> adWeightMap = new HashMap<>();

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/Record.java
Patch:
@@ -16,13 +16,15 @@
 
 package com.alibaba.nacos.naming.pojo;
 
+import java.io.Serializable;
+
 /**
  * Record to transfer and store in Nacos cluster.
  *
  * @author nkorange
  * @since 1.0.0
  */
-public interface Record {
+public interface Record extends Serializable {
     
     /**
      * get the checksum of this record, usually for record comparison.

File: test/src/test/java/com/alibaba/nacos/test/common/NacosAsyncRestTemplate_ITCase.java
Patch:
@@ -149,7 +149,7 @@ public void test_url_by_map() throws Exception {
         Map<String, String> param = new HashMap<>();
         param.put("serviceName", "app-test");
         CallbackMap<Map> callbackMap = new CallbackMap<>();
-        nacosRestTemplate.get(url, Header.newInstance(), param, Map.class, callbackMap);
+        nacosRestTemplate.get(url, Header.newInstance(), Query.newInstance().initParams(param), Map.class, callbackMap);
         Thread.sleep(2000);
         HttpRestResult<Map> restResult = callbackMap.getRestResult();
         System.out.println(restResult.getData());

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_Interceptors_ITCase.java
Patch:
@@ -24,7 +24,6 @@
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.client.response.HttpClientResponse;
 import com.alibaba.nacos.common.http.param.Header;
-import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.model.RequestHttpEntity;
 import org.junit.Assert;
 import org.junit.Before;
@@ -119,7 +118,7 @@ public void test_url_post_config() throws Exception {
         param.put("group", "DEFAULT_GROUP");
         param.put("content", "aaa=b");
         HttpRestResult<String> restResult = nacosRestTemplate
-                .postForm(url, Header.newInstance(), Query.EMPTY, param, String.class);
+                .postForm(url, Header.newInstance(), param, String.class);
         Assert.assertEquals(500, restResult.getCode());
         Assert.assertEquals("Stop request", restResult.getData());
         System.out.println(restResult.getData());

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -585,6 +585,7 @@ public void onConnected() {
             
                 @Override
                 public void onDisConnect() {
+                    System.out.println("clear listen context...");
                     Collection<CacheData> values = cacheMap.get().values();
                 
                     for (CacheData cacheData : values) {

File: common/src/main/java/com/alibaba/nacos/common/remote/client/Connection.java
Patch:
@@ -68,6 +68,7 @@ public boolean isAbandon() {
     
     /**
      * Setter method for property <tt>abandon</tt>.
+     * connection event will be ignored if connection is abandoned.
      *
      * @param abandon value to be assigned to property abandon
      */

File: common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClientFactory.java
Patch:
@@ -52,11 +52,10 @@ public static Set<Map.Entry<String, RpcClient>> getAllClientEntrys() {
      * @param clientName client name.
      */
     public static void destroyClient(String clientName) throws NacosException {
-        RpcClient rpcClient = clientMap.get(clientName);
+        RpcClient rpcClient = clientMap.remove(clientName);
         if (rpcClient != null) {
             rpcClient.shutdown();
         }
-        clientMap.remove(clientName);
     }
     
     public static RpcClient getClient(String clientName) {

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigConnectionEventListener.java
Patch:
@@ -42,7 +42,8 @@ public void clientConnected(Connection connect) {
     @Override
     public void clientDisConnected(Connection connect) {
         String connectionId = connect.getConnectionId();
-        Loggers.RPC.info("client disconnected,clear config listen context, connetionId is {}", connectionId);
+        Loggers.RPC.info("client disconnected,clear config listen context, connetionId is {},client ip is {}",
+                connectionId, connect.getMetaInfo().getClientIp());
         configChangeListenContext.clearContextForConnectionId(connectionId);
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/BaseRpcServer.java
Patch:
@@ -93,7 +93,7 @@ public void run() {
      * Stop Server.
      * @throws excetpion throw if stop server fail.
      */
-    public void stopServer() throws Exception {
+    public final void stopServer() throws Exception {
         shundownServer();
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseGrpcServer.java
Patch:
@@ -170,7 +170,7 @@ private void addServices(MutableHandlerRegistry handlerRegistry, ServerIntercept
     @Override
     public void shundownServer() {
         if (server != null) {
-            server.shutdown();
+            server.shutdownNow();
         }
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcClusterServer.java
Patch:
@@ -25,7 +25,7 @@
  * @version $Id: BaseGrpcServer.java, v 0.1 2020年07月13日 3:42 PM liuzunfei Exp $
  */
 @Service
-public class BaseRpcServer extends BaseGrpcServer {
+public class GrpcClusterServer extends BaseGrpcServer {
     
     private static final int PORT_OFFSET = 1001;
     

File: common/src/main/java/com/alibaba/nacos/common/http/param/Header.java
Patch:
@@ -45,7 +45,6 @@ private Header() {
         addParam(HttpHeaderConsts.CONTENT_TYPE, MediaType.APPLICATION_JSON);
         addParam(HttpHeaderConsts.ACCEPT_CHARSET, "UTF-8");
         addParam(HttpHeaderConsts.ACCEPT_ENCODING, "gzip");
-        addParam(HttpHeaderConsts.CONTENT_ENCODING, "gzip");
     }
     
     public static Header newInstance() {

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -50,17 +50,17 @@ public class IoUtils {
      *
      * @param raw compress stream
      * @return byte array after decompress
-     * @throws Exception exception
+     * @throws IOException exception
      */
-    public static byte[] tryDecompress(InputStream raw) throws Exception {
+    public static byte[] tryDecompress(InputStream raw) throws IOException {
         GZIPInputStream gis = null;
         ByteArrayOutputStream out = null;
         try {
             gis = new GZIPInputStream(raw);
             out = new ByteArrayOutputStream();
             copy(gis, out);
             return out.toByteArray();
-        } catch (Exception e) {
+        } catch (IOException e) {
             e.printStackTrace();
         } finally {
             if (out != null) {

File: api/src/main/java/com/alibaba/nacos/api/naming/utils/NamingUtils.java
Patch:
@@ -28,6 +28,9 @@
 public class NamingUtils {
     
     public static String getGroupedName(final String serviceName, final String groupName) {
+        if (StringUtils.isBlank(serviceName)) {
+            throw new IllegalArgumentException("Param 'serviceName' is illegal, serviceName is blank");
+        }
         final String resultGroupedName = groupName + Constants.SERVICE_INFO_SPLITER + serviceName;
         return resultGroupedName.intern();
     }

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -188,4 +188,6 @@ public class Constants {
     
     public static final String HTTP_PREFIX = "http";
     
+    public static final String COLON = ":";
+    
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/cluster/ConfigChangeClusterSyncRequest.java
Patch:
@@ -47,7 +47,6 @@ public boolean isBeta() {
         return "Y".equalsIgnoreCase(isBeta);
     }
     
-    
     /**
      * Getter method for property <tt>dataId</tt>.
      *

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigChangeNotifyResponse.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 
 /**
+ * config change notify response from client.
  * @author liuzunfei
  * @version $Id: ConfigChangeNotifyResponse.java, v 0.1 2020年09月01日 2:59 PM liuzunfei Exp $
  */

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/ServiceListRequest.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.alibaba.nacos.api.naming.remote.request;
 
-import com.alibaba.nacos.api.naming.remote.NamingRemoteConstants;
-
 /**
  * Service list request.
  *

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/ServiceQueryRequest.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.alibaba.nacos.api.naming.remote.request;
 
-import com.alibaba.nacos.api.naming.remote.NamingRemoteConstants;
-
 /**
  * Nacos naming query request.
  *

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/SubscribeServiceRequest.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.alibaba.nacos.api.naming.remote.request;
 
-import com.alibaba.nacos.api.naming.remote.NamingRemoteConstants;
-
 /**
  * Nacos naming subscribe service request.
  *

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/response/NotifySubscriberResponse.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.remote.response.Response;
 
 /**
+ * response for notify service subscribe.
  * @author liuzunfei
  * @version $Id: NotifySubscriberResponse.java, v 0.1 2020年08月06日 5:28 PM liuzunfei Exp $
  */

File: api/src/main/java/com/alibaba/nacos/api/remote/RequestCallBack.java
Patch:
@@ -45,7 +45,7 @@ public interface RequestCallBack {
     /**
      * called on success.
      *
-     * @param response
+     * @param response response received.
      */
     public void onResponse(Response response);
     

File: api/src/main/java/com/alibaba/nacos/api/remote/request/ServerPushRequest.java
Patch:
@@ -22,6 +22,7 @@
  * @author liuzunfei
  * @version $Id: ServerPushResponse.java, v 0.1 2020年07月20日 1:21 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class ServerPushRequest extends Request {
 
 }

File: client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.http.HttpRestResult;
-import com.alibaba.nacos.client.config.impl.ServerListManager;
 import com.alibaba.nacos.common.lifecycle.Closeable;
 
 import java.util.Map;

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -32,7 +32,6 @@
 import java.net.ConnectException;
 import java.net.HttpURLConnection;
 import java.net.SocketTimeoutException;
-import java.util.HashMap;
 import java.util.Map;
 import java.util.Properties;
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -17,8 +17,8 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.client.identify.CredentialService;
+import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.crypto.Mac;
@@ -66,7 +66,6 @@ public static Map<String, String> getSignHeaders(String groupKey, String tenant,
         return getSignHeaders(resource, secretKey);
     }
     
-    
     public static Map<String, String> getSignHeaders(Map<String, String> paramValues, String secretKey) {
         if (null == paramValues) {
             return null;

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.api.remote.RemoteConstants;
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
+import com.alibaba.nacos.api.remote.response.ResponseCode;
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.client.naming.cache.ServiceInfoHolder;
@@ -185,7 +186,7 @@ public boolean serverHealthy() {
     private <T extends Response> T requestToServer(Request request, Class<T> responseClass) throws NacosException {
         try {
             Response response = rpcClient.request(request);
-            if (200 != response.getResultCode()) {
+            if (ResponseCode.SUCCESS.getCode() != response.getResultCode()) {
                 throw new NacosException(response.getErrorCode(), response.getMessage());
             }
             if (responseClass.isAssignableFrom(response.getClass())) {

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerRequestHandler.java
Patch:
@@ -31,6 +31,7 @@ public interface ServerRequestHandler {
      * Handle logic when response received.
      *
      * @param request request
+     * @return response.
      */
     Response requestReply(Request request);
     

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -50,6 +50,7 @@
  * @author liuzunfei
  * @version $Id: GrpcClient.java, v 0.1 2020年07月13日 9:16 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class GrpcClient extends RpcClient {
     
     static final Logger LOGGER = LoggerFactory.getLogger("com.alibaba.nacos.common.remote.client");
@@ -101,7 +102,6 @@ private void shuntDownChannel(ManagedChannel managedChannel) {
         }
     }
     
-    
     /**
      * Send Heart Beat Request.
      */

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -127,7 +127,6 @@ public static byte[] tryCompress(String str, String encoding) {
         return out.toByteArray();
     }
     
-    
     private static BufferedReader toBufferedReader(Reader reader) {
         return reader instanceof BufferedReader ? (BufferedReader) reader : new BufferedReader(reader);
     }

File: common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java
Patch:
@@ -18,8 +18,6 @@
 
 import org.slf4j.Logger;
 
-import static org.slf4j.LoggerFactory.getLogger;
-
 /**
  * Logger utils.
  *

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CommunicationController.java
Patch:
@@ -103,7 +103,7 @@ public SampleResult getSubClientConfig(@RequestParam("dataId") String dataId, @R
         String groupKey = GroupKey2.getKey(dataId, group, tenant);
         Set<String> listenersClients = configChangeListenContext.getListeners(groupKey);
         SampleResult rpcSample = new SampleResult();
-        Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>();
+        Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>(listenersClients.size(), 1);
         for (String connectionId : listenersClients) {
             Connection client = connectionManager.getConnection(connectionId);
             if (client != null) {
@@ -128,7 +128,7 @@ public SampleResult getSubClientConfigByIp(HttpServletRequest request, HttpServl
         Connection connectionByIp = connectionManager.getConnectionByIp(ip);
         if (connectionByIp != null) {
             Set<GroupKeyContext> listenKeys = configChangeListenContext.getListenKeys(connectionByIp.getConnectionId());
-            Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>();
+            Map<String, String> lisentersGroupkeyStatus = new HashMap<String, String>(listenKeys.size(), 1);
             for (GroupKeyContext listenKey : listenKeys) {
                 lisentersGroupkeyStatus.put(listenKey.getGroupkey(), listenKey.getMd5());
             }

File: core/src/main/java/com/alibaba/nacos/core/monitor/MetricsMonitor.java
Patch:
@@ -43,7 +43,6 @@ public final class MetricsMonitor {
     
     private static AtomicInteger longConnection = new AtomicInteger();
     
-    
     static {
         RAFT_READ_INDEX_FAILED = NacosMeterRegistry.summary("protocol", "raft_read_index_failed");
         RAFT_FROM_LEADER = NacosMeterRegistry.summary("protocol", "raft_read_from_leader");

File: core/src/main/java/com/alibaba/nacos/core/remote/ClientConnectionEventListener.java
Patch:
@@ -26,6 +26,7 @@
  * @author liuzunfei
  * @version $Id: ClientConnectionEventListener.java, v 0.1 2020年07月16日 3:06 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class ClientConnectionEventListener {
     
     /**

File: core/src/main/java/com/alibaba/nacos/core/remote/RequestHandler.java
Patch:
@@ -30,6 +30,7 @@
  * @author liuzunfei
  * @author xiweng.yy
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class RequestHandler<T extends Request, S extends Response> {
     
     @Autowired

File: core/src/main/java/com/alibaba/nacos/core/remote/core/RpcAckCallbackInitorOrCleaner.java
Patch:
@@ -23,15 +23,16 @@
 
 /**
  * RemoteConnectionEventListener.
+ *
  * @author liuzunfei
  * @version $Id: RemoteConnectionEventListener.java, v 0.1 2020年08月10日 1:04 AM liuzunfei Exp $
  */
 @Component
-public class RemoteConnectionEventListener extends ClientConnectionEventListener {
+public class RpcAckCallbackInitorOrCleaner extends ClientConnectionEventListener {
     
     @Override
     public void clientConnected(Connection connect) {
-    
+        RpcAckCallbackSynchronizer.initContextIfNecessary(connect.getConnectionId());
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/remote/core/ServerLoaderInfoRequestHandler.java
Patch:
@@ -47,7 +47,7 @@ public class ServerLoaderInfoRequestHandler extends RequestHandler<ServerLoaderI
     public ServerLoaderInfoResponse handle(ServerLoaderInfoRequest request, RequestMeta meta) throws NacosException {
         ServerLoaderInfoResponse serverLoaderInfoResponse = new ServerLoaderInfoResponse();
         serverLoaderInfoResponse.putMetricsValue("conCount", String.valueOf(connectionManager.currentClientsCount()));
-        Map<String, String> filter = new HashMap<String, String>();
+        Map<String, String> filter = new HashMap<String, String>(2);
         filter.put(RemoteConstants.LABEL_SOURCE, RemoteConstants.LABEL_SOURCE_SDK);
         serverLoaderInfoResponse
                 .putMetricsValue("sdkConCount", String.valueOf(connectionManager.currentClientsCount(filter)));
@@ -66,4 +66,4 @@ public static double getSystemCpuLoad() {
         return osmxb.getSystemLoadAverage();
         
     }
-}
\ No newline at end of file
+}

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/BaseRpcServer.java
Patch:
@@ -22,10 +22,10 @@
  * Grpc implementation as  a rpc server.
  *
  * @author liuzunfei
- * @version $Id: GrpcServer.java, v 0.1 2020年07月13日 3:42 PM liuzunfei Exp $
+ * @version $Id: BaseGrpcServer.java, v 0.1 2020年07月13日 3:42 PM liuzunfei Exp $
  */
 @Service
-public class GrpcClusterServer extends GrpcServer {
+public class BaseRpcServer extends BaseGrpcServer {
     
     private static final int PORT_OFFSET = 1001;
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcBiStreamRequestAcceptor.java
Patch:
@@ -33,8 +33,8 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
-import static com.alibaba.nacos.core.remote.grpc.GrpcServer.CONTEXT_KEY_CHANNEL;
-import static com.alibaba.nacos.core.remote.grpc.GrpcServer.CONTEXT_KEY_CONN_ID;
+import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CHANNEL;
+import static com.alibaba.nacos.core.remote.grpc.BaseGrpcServer.CONTEXT_KEY_CONN_ID;
 
 /**
  * grpc bi stream request .

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcSdkServer.java
Patch:
@@ -22,10 +22,10 @@
  * Grpc implementation as  a rpc server.
  *
  * @author liuzunfei
- * @version $Id: GrpcServer.java, v 0.1 2020年07月13日 3:42 PM liuzunfei Exp $
+ * @version $Id: BaseGrpcServer.java, v 0.1 2020年07月13日 3:42 PM liuzunfei Exp $
  */
 @Service
-public class GrpcSdkServer extends GrpcServer {
+public class GrpcSdkServer extends BaseGrpcServer {
     
     private static final int PORT_OFFSET = 1000;
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/PushAckIdGenerator.java
Patch:
@@ -28,11 +28,13 @@ public class PushAckIdGenerator {
     
     private static AtomicLong id = new AtomicLong(0L);
     
+    private static final int ID_PREV_REGEN_OFFSET = 1000;
+    
     /**
      * get server push id.
      */
     public static long getNextId() {
-        if (id.longValue() > Long.MAX_VALUE - 1000) {
+        if (id.longValue() > Long.MAX_VALUE - ID_PREV_REGEN_OFFSET) {
             id.getAndSet(0L);
         }
         return id.incrementAndGet();

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/remote/request/ForwardInstanceRequest.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.naming.cluster.remote.request;
 
-import com.alibaba.nacos.api.naming.remote.NamingRemoteConstants;
 import com.alibaba.nacos.api.naming.remote.request.InstanceRequest;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 

File: naming/src/main/java/com/alibaba/nacos/naming/remote/handler/ForwardInstanceRequestHandler.java
Patch:
@@ -70,7 +70,7 @@ public InstanceResponse handle(ForwardInstanceRequest request, RequestMeta meta)
     private void addRemotingConnectionIfAbsent(RequestMeta sourceRequestMeta) {
         if (null == remotingConnectionHolder.getRemotingConnection(sourceRequestMeta.getConnectionId())) {
             ConnectionMetaInfo metaInfo = new ConnectionMetaInfo(sourceRequestMeta.getConnectionId(),
-                    sourceRequestMeta.getClientIp(), "cluster", sourceRequestMeta.getClientVersion(), new HashMap<>());
+                    sourceRequestMeta.getClientIp(), "cluster", sourceRequestMeta.getClientVersion(), new HashMap<>(2));
             remotingConnectionHolder.clientConnected(new ClusterConnection(metaInfo));
         }
     }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroHttpData.java
Patch:
@@ -33,8 +33,8 @@ public class DistroHttpData extends DistroData {
     
     private Object deserializedContent;
     
-    public DistroHttpData(DistroKey distroKey, byte[] content, Object deserializedContent) {
-        super(distroKey, content);
+    public DistroHttpData(DistroKey distroKey, Object deserializedContent) {
+        setDistroKey(distroKey);
         this.deserializedContent = deserializedContent;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -84,8 +84,7 @@ public ResponseEntity onSyncDatum(@RequestBody Map<String, Datum<Instances>> dat
                         .isDefaultInstanceEphemeral()) {
                     serviceManager.createEmptyService(namespaceId, serviceName, true);
                 }
-                DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(entry.getKey()), null,
-                        entry.getValue());
+                DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(entry.getKey()), entry.getValue());
                 distroProtocol.onReceive(distroHttpData);
             }
         }
@@ -101,7 +100,7 @@ public ResponseEntity onSyncDatum(@RequestBody Map<String, Datum<Instances>> dat
      */
     @PutMapping("/checksum")
     public ResponseEntity syncChecksum(@RequestParam String source, @RequestBody Map<String, String> dataMap) {
-        DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(source), null, dataMap);
+        DistroHttpData distroHttpData = new DistroHttpData(createDistroKey(source), dataMap);
         distroProtocol.onVerify(distroHttpData);
         return ResponseEntity.ok("ok");
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -88,8 +88,8 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
             }
             
             if (CollectionUtils.isEmpty(domSet)) {
-                result.put("doms", JacksonUtils.transferToJsonNode(new HashSet<>()));
                 result.put("count", 0);
+                result.set("doms", JacksonUtils.transferToJsonNode(new HashSet<>()));
                 return result;
             }
             
@@ -99,8 +99,8 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
                 }
             }
             
-            result.put("doms", JacksonUtils.transferToJsonNode(doms));
             result.put("count", doms.size());
+            result.set("doms", JacksonUtils.transferToJsonNode(doms));
             return result;
         }
         
@@ -116,8 +116,8 @@ public ObjectNode allDomNames(HttpServletRequest request) throws Exception {
             count += doms.get(namespaceId).size();
         }
         
-        result.put("doms", JacksonUtils.transferToJsonNode(doms));
         result.put("count", count);
+        result.set("doms", JacksonUtils.transferToJsonNode(doms));
         
         return result;
     }

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
+import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import org.slf4j.Logger;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -48,6 +48,7 @@
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
+import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -101,7 +101,7 @@ public void onEvent(Event event) {
                         }
                     }
                     if (!httpQueue.isEmpty()) {
-                        ConfigExecutor.executeAsyncNotify(new AsyncTask(nacosAsyncRestTemplate, queue));
+                        ConfigExecutor.executeAsyncNotify(new AsyncTask(nacosAsyncRestTemplate, httpQueue));
                     }
                     if (!rpcQueue.isEmpty()) {
                         ConfigExecutor.executeAsyncNotify(new AsyncRpcTask(rpcQueue));

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/remote/grpc/GrpcClusterClient.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
+import com.alibaba.nacos.common.remote.client.RpcClientFactory;
 import com.alibaba.nacos.common.remote.client.grpc.GrpcClient;
 import com.alibaba.nacos.naming.cluster.remote.ClusterClient;
 
@@ -32,7 +33,7 @@ public class GrpcClusterClient implements ClusterClient {
     private final GrpcClient grpcClient;
     
     public GrpcClusterClient(String targetAddress) {
-        this.grpcClient = new GrpcClient(new SingleServerListFactory(targetAddress));
+        this.grpcClient = new GrpcClient(targetAddress);
     }
     
     @Override

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
+import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import org.slf4j.Logger;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientProxy.java
Patch:
@@ -48,6 +48,7 @@
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
+import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -101,7 +101,7 @@ public void onEvent(Event event) {
                         }
                     }
                     if (!httpQueue.isEmpty()) {
-                        ConfigExecutor.executeAsyncNotify(new AsyncTask(nacosAsyncRestTemplate, queue));
+                        ConfigExecutor.executeAsyncNotify(new AsyncTask(nacosAsyncRestTemplate, httpQueue));
                     }
                     if (!rpcQueue.isEmpty()) {
                         ConfigExecutor.executeAsyncNotify(new AsyncRpcTask(rpcQueue));

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/remote/grpc/GrpcClusterClient.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
+import com.alibaba.nacos.common.remote.client.RpcClientFactory;
 import com.alibaba.nacos.common.remote.client.grpc.GrpcClient;
 import com.alibaba.nacos.naming.cluster.remote.ClusterClient;
 
@@ -32,7 +33,7 @@ public class GrpcClusterClient implements ClusterClient {
     private final GrpcClient grpcClient;
     
     public GrpcClusterClient(String targetAddress) {
-        this.grpcClient = new GrpcClient(new SingleServerListFactory(targetAddress));
+        this.grpcClient = new GrpcClient(targetAddress);
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/storage/StorageFactory.java
Patch:
@@ -27,7 +27,7 @@
  */
 public final class StorageFactory {
     
-    public static KvStorage createKVStorage(KvStorage.KVType type, final String label, final String baseDir) {
+    public static KvStorage createKVStorage(KvStorage.KVType type, final String label, final String baseDir) throws Exception {
         switch (type) {
             case File:
                 return new FileKVStorage(baseDir);

File: core/src/main/java/com/alibaba/nacos/core/storage/kv/FileKVStorage.java
Patch:
@@ -45,8 +45,9 @@ public class FileKVStorage implements KvStorage {
     
     private final ReentrantReadWriteLock.WriteLock writeLock = lock.writeLock();
     
-    public FileKVStorage(String baseDir) {
+    public FileKVStorage(String baseDir) throws IOException {
         this.baseDir = baseDir;
+        DiskUtils.forceMkdir(baseDir);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/impl/PersistentServiceProcessor.java
Patch:
@@ -122,7 +122,7 @@ enum Op {
     private volatile boolean hasError = false;
     
     public PersistentServiceProcessor(final ProtocolManager protocolManager,
-            final ClusterVersionJudgement versionJudgement, final RaftStore oldStore) {
+            final ClusterVersionJudgement versionJudgement, final RaftStore oldStore) throws Exception {
         this.protocol = protocolManager.getCpProtocol();
         this.oldStore = oldStore;
         this.versionJudgement = versionJudgement;
@@ -235,6 +235,7 @@ public void loadFromOldData() {
                         request.setValues(values);
                         CompletableFuture future = protocol.submitAsync(
                                 Log.newBuilder().setGroup(Constants.NAMING_PERSISTENT_SERVICE_GROUP)
+                                        .setOperation(Op.Write.name())
                                         .setData(ByteString.copyFrom(serializer.serialize(request))).build())
                                 .whenComplete(((response, throwable) -> {
                                     if (throwable == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -299,7 +299,7 @@ public synchronized void write(final Datum datum) throws Exception {
                 String oldDatumKey = datum.key
                         .replace(Constants.DEFAULT_GROUP + Constants.SERVICE_INFO_SPLITER, StringUtils.EMPTY);
                 
-                cacheFile = cacheFile(cacheFileName(namespaceId, datum.key));
+                cacheFile = cacheFile(cacheFileName(namespaceId, oldDatumKey));
                 if (cacheFile.exists() && !cacheFile.delete()) {
                     Loggers.RAFT.error("[RAFT-DELETE] failed to delete old format datum: {}, value: {}", datum.key,
                             datum.value);

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -46,6 +46,8 @@ public class Cluster extends com.alibaba.nacos.api.naming.pojo.Cluster implement
     
     private static final String CLUSTER_NAME_SYNTAX = "[0-9a-zA-Z-]+";
     
+    private static final long serialVersionUID = 8940123791150907510L;
+    
     /**
      * a addition for same site routing, can group multiple sites into a region, like Hangzhou, Shanghai, etc.
      */

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -47,6 +47,8 @@ public class Instance extends com.alibaba.nacos.api.naming.pojo.Instance impleme
     
     private static final double MIN_WEIGHT_VALUE = 0.00D;
     
+    private static final long serialVersionUID = -6527721638428975306L;
+    
     private volatile long lastBeat = System.currentTimeMillis();
     
     @JsonIgnore

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class Instances implements Record {
     
+    private static final long serialVersionUID = 5500823673993740145L;
+    
     private List<Instance> instanceList = new ArrayList<>();
     
     public List<Instance> getInstanceList() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -62,8 +62,11 @@
 @JsonInclude(Include.NON_NULL)
 public class Service extends com.alibaba.nacos.api.naming.pojo.Service implements Record, RecordListener<Instances> {
     
+    
     private static final String SERVICE_NAME_SYNTAX = "[0-9a-zA-Z@\\.:_-]+";
     
+    private static final long serialVersionUID = -1341508935415925039L;
+    
     @JsonIgnore
     private ClientBeatCheckTask clientBeatCheckTask = new ClientBeatCheckTask(this);
     

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -36,6 +36,8 @@
 @Component
 public class SwitchDomain implements Record, Cloneable {
     
+    private static final long serialVersionUID = 7619505097145337232L;
+    
     private List<String> masters;
     
     private Map<String, Integer> adWeightMap = new HashMap<>();

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/Record.java
Patch:
@@ -16,13 +16,15 @@
 
 package com.alibaba.nacos.naming.pojo;
 
+import java.io.Serializable;
+
 /**
  * Record to transfer and store in Nacos cluster.
  *
  * @author nkorange
  * @since 1.0.0
  */
-public interface Record {
+public interface Record extends Serializable {
     
     /**
      * get the checksum of this record, usually for record comparison.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/component/DistroCallback.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component;
+package com.alibaba.nacos.core.distributed.distro.component;
 
 /**
  * Distro callback.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/component/DistroComponentHolder.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component;
+package com.alibaba.nacos.core.distributed.distro.component;
 
 import org.springframework.stereotype.Component;
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/component/DistroDataProcessor.java
Patch:
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component;
+package com.alibaba.nacos.core.distributed.distro.component;
 
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroData;
 
 /**
  * Distro data processor.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/component/DistroDataStorage.java
Patch:
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component;
+package com.alibaba.nacos.core.distributed.distro.component;
 
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroData;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 
 /**
  * Distro data storage.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/component/DistroTransportAgent.java
Patch:
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component;
+package com.alibaba.nacos.core.distributed.distro.component;
 
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroData;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 
 /**
  * Distro transport agent.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/entity/DistroKey.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity;
+package com.alibaba.nacos.core.distributed.distro.entity;
 
 import java.util.Objects;
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/exception/DistroException.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.exception;
+package com.alibaba.nacos.core.distributed.distro.exception;
 
 /**
  * Distro exception.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/delay/DistroDelayTaskExecuteEngine.java
Patch:
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.task.delay;
+package com.alibaba.nacos.core.distributed.distro.task.delay;
 
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
 import com.alibaba.nacos.common.task.engine.NacosDelayTaskExecuteEngine;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
-import com.alibaba.nacos.naming.misc.Loggers;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
+import com.alibaba.nacos.core.utils.Loggers;
 
 /**
  * Distro delay task execute engine.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/execute/AbstractDistroExecuteTask.java
Patch:
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.task.execute;
+package com.alibaba.nacos.core.distributed.distro.task.execute;
 
 import com.alibaba.nacos.common.task.AbstractExecuteTask;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 
 /**
  * Abstract distro execute task.

File: core/src/main/java/com/alibaba/nacos/core/distributed/distro/task/execute/DistroExecuteWorkersManager.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.task.execute;
+package com.alibaba.nacos.core.distributed.distro.task.execute;
 
 /**
  * Distro execute workers manager.

File: core/src/main/java/com/alibaba/nacos/core/utils/Loggers.java
Patch:
@@ -33,6 +33,8 @@ public class Loggers {
     
     public static final Logger RAFT = LoggerFactory.getLogger("com.alibaba.nacos.core.protocol.raft");
     
+    public static final Logger DISTRO = LoggerFactory.getLogger("com.alibaba.nacos.core.protocol.distro");
+    
     public static final Logger CLUSTER = LoggerFactory.getLogger("com.alibaba.nacos.core.cluster");
     
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroHttpData.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroData;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 
 /**
  * Distro http received data.

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/combined/DistroHttpCombinedKey.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.ephemeral.distro.combined;
 
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 
 import java.util.LinkedList;
 import java.util.List;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/combined/DistroHttpDelayTaskProcessor.java
Patch:
@@ -18,9 +18,9 @@
 
 import com.alibaba.nacos.common.task.AbstractDelayTask;
 import com.alibaba.nacos.common.task.NacosTaskProcessor;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.task.DistroTaskEngineHolder;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.task.delay.DistroDelayTask;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.task.DistroTaskEngineHolder;
+import com.alibaba.nacos.core.distributed.distro.task.delay.DistroDelayTask;
 import com.alibaba.nacos.naming.misc.GlobalConfig;
 
 /**

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/component/DistroDataStorageImpl.java
Patch:
@@ -22,9 +22,9 @@
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DataStore;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.combined.DistroHttpCombinedKey;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component.DistroDataStorage;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroData;
+import com.alibaba.nacos.core.distributed.distro.component.DistroDataStorage;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 import com.alibaba.nacos.naming.core.DistroMapper;
 
 import java.util.HashMap;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.naming.consistency.ApplyAction;
+import com.alibaba.nacos.consistency.DataOperation;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.Instance;
@@ -79,7 +79,7 @@ public synchronized void loadDatums(RaftCore.Notifier notifier, ConcurrentMap<St
                     datum = readDatum(datumFile, cache.getName());
                     if (datum != null) {
                         datums.put(datum.key, datum);
-                        notifier.addTask(datum.key, ApplyAction.CHANGE);
+                        notifier.addTask(datum.key, DataOperation.CHANGE);
                     }
                 }
                 continue;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -22,9 +22,9 @@
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DistroHttpData;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.combined.DistroHttpCombinedKey;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.DistroProtocol;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
+import com.alibaba.nacos.core.distributed.distro.DistroProtocol;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroData;
+import com.alibaba.nacos.core.distributed.distro.entity.DistroKey;
 import com.alibaba.nacos.naming.core.Instances;
 import com.alibaba.nacos.naming.core.ServiceManager;
 import com.alibaba.nacos.naming.misc.Loggers;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -128,7 +128,7 @@ public CompletableFuture<RestResult<String>> dataImport(File file) {
     
     @Override
     public Boolean update(List<ModifyRequest> modifyRequests, BiConsumer<Boolean, Throwable> consumer) {
-        return update(modifyRequests);
+        return update(transactionTemplate, jdbcTemplate, modifyRequests, consumer);
     }
     
     @Override

File: client/src/test/java/com/alibaba/nacos/client/ConfigTest.java
Patch:
@@ -208,7 +208,7 @@ public void run() {
     
         });
     
-        th.start();
+        //th.start();
         
         Listener listener = new AbstractListener() {
             @Override

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcClient.java
Patch:
@@ -171,6 +171,7 @@ private boolean serverCheck(RequestGrpc.RequestFutureStub requestBlockingStub) {
     private StreamObserver<Payload> bindRequestStream(final BiRequestStreamGrpc.BiRequestStreamStub streamStub) {
         
         final StreamObserver<Payload> payloadStreamObserver = streamStub.requestBiStream(new StreamObserver<Payload>() {
+    
             @Override
             public void onNext(Payload payload) {
                 LOGGER.debug(" stream server reuqust receive  ,original info :{}", payload.toString());
@@ -195,9 +196,6 @@ public void onNext(Payload payload) {
             
             @Override
             public void onError(Throwable throwable) {
-                throwable.printStackTrace();
-                System.out.println("on error ,switch server ");
-                switchServerAsync();
             }
             
             @Override

File: core/src/main/java/com/alibaba/nacos/core/remote/core/HeartBeatRequestHandler.java
Patch:
@@ -14,13 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.remote;
+package com.alibaba.nacos.core.remote.core;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.remote.request.HeartBeatRequest;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.HeartBeatResponse;
 import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.core.remote.ConnectionManager;
+import com.alibaba.nacos.core.remote.RequestHandler;
 import com.alibaba.nacos.core.remote.event.RemotingHeartBeatEvent;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcConnection.java
Patch:
@@ -67,7 +67,7 @@ public Response sendRequest(Request request, long timeoutMills) throws NacosExce
     @Override
     public void sendRequestNoAck(Request request) throws NacosException {
         try {
-            streamObserver.onNext(GrpcUtils.convert(request, buildMeta()));
+            streamObserver.onNext(GrpcUtils.convert(request, buildMeta(request.getClass().getName())));
         } catch (Exception e) {
             if (e instanceof StatusRuntimeException) {
                 throw new ConnectionAlreadyClosedException(e);
@@ -76,8 +76,8 @@ public void sendRequestNoAck(Request request) throws NacosException {
         }
     }
     
-    Metadata buildMeta() {
-        Metadata meta = Metadata.newBuilder().setClientIp(NetUtils.localIP())
+    Metadata buildMeta(String type) {
+        Metadata meta = Metadata.newBuilder().setClientIp(NetUtils.localIP()).setType(type)
                 .setClientVersion(VersionUtils.getFullClientVersion()).build();
         return meta;
     }

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcServer.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.core.remote.RequestHandlerRegistry;
 import com.alibaba.nacos.core.remote.RpcServer;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.core.utils.Loggers;
 import io.grpc.Attributes;
 import io.grpc.Context;
 import io.grpc.Contexts;
@@ -109,6 +110,7 @@ public Attributes transportReady(Attributes transportAttrs) {
                     @Override
                     public void transportTerminated(Attributes transportAttrs) {
                         String connectionid = transportAttrs.get(TRANS_KEY_CONN_ID);
+                        Loggers.RPC.info(" connection transportTerminated,connectionid = {} ", connectionid);
                         connectionManager.unregister(connectionid);
                     }
                 }).build();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/newimpl/component/DistroComponentHolder.java
Patch:
@@ -36,7 +36,7 @@ public class DistroComponentHolder {
     
     private final Map<String, DistroFailedTaskHandler> failedTaskHandlerMap = new HashMap<>();
     
-    private final Map<String, DistroDataProcessor> dataProcessorConcurrentMap = new HashMap<>();
+    private final Map<String, DistroDataProcessor> dataProcessorMap = new HashMap<>();
     
     public DistroTransportAgent findTransportAgent(String type) {
         return transportAgentMap.get(type);
@@ -67,10 +67,10 @@ public void registerFailedTaskHandler(String type, DistroFailedTaskHandler faile
     }
     
     public void registerDataProcessor(DistroDataProcessor dataProcessor) {
-        dataProcessorConcurrentMap.putIfAbsent(dataProcessor.processType(), dataProcessor);
+        dataProcessorMap.putIfAbsent(dataProcessor.processType(), dataProcessor);
     }
     
     public DistroDataProcessor findDataProcessor(String processType) {
-        return dataProcessorConcurrentMap.get(processType);
+        return dataProcessorMap.get(processType);
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImplTest.java
Patch:
@@ -86,8 +86,8 @@ public class DistroConsistencyServiceImplTest extends BaseTest {
     public void setUp() throws Exception {
         doReturn(distroComponentHolder).when(context).getBean(DistroComponentHolder.class);
         doReturn(distroTaskEngineHolder).when(context).getBean(DistroTaskEngineHolder.class);
-        distroConsistencyService = new DistroConsistencyServiceImpl(distroMapper, dataStore, serializer,
-                serverMemberManager, switchDomain, globalConfig, distroProtocol);
+        distroConsistencyService = new DistroConsistencyServiceImpl(distroMapper, dataStore, serializer, switchDomain,
+                globalConfig, distroProtocol);
         ReflectionTestUtils.setField(distroConsistencyService, "notifier", notifier);
         ReflectionTestUtils.setField(distroConsistencyService, "distroProtocol", distroProtocol);
         listeners = (Map<String, ConcurrentLinkedQueue<RecordListener>>) ReflectionTestUtils

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/component/DistroDataStorageImpl.java
Patch:
@@ -60,7 +60,7 @@ public DistroData getDistroData(DistroKey distroKey) {
     }
     
     @Override
-    public DistroData getVerifyData(DistroKey distroKey) {
+    public DistroData getVerifyData() {
         Map<String, String> keyChecksums = new HashMap<>(64);
         for (String key : dataStore.keys()) {
             if (!distroMapper.responsible(KeyBuilder.getServiceName(key))) {
@@ -75,6 +75,7 @@ public DistroData getVerifyData(DistroKey distroKey) {
         if (keyChecksums.isEmpty()) {
             return null;
         }
+        DistroKey distroKey = new DistroKey("checksum", KeyBuilder.INSTANCE_LIST_KEY_PREFIX);
         return new DistroData(distroKey, ApplicationUtils.getBean(Serializer.class).serialize(keyChecksums));
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/newimpl/component/DistroDataStorage.java
Patch:
@@ -37,8 +37,7 @@ public interface DistroDataStorage {
     /**
      * Get verify datum.
      *
-     * @param distroKey key of distro datum
      * @return verify datum
      */
-    DistroData getVerifyData(DistroKey distroKey);
+    DistroData getVerifyData();
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/newimpl/task/verify/DistroVerifyTask.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.naming.consistency.ApplyAction;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.component.DistroComponentHolder;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroData;
-import com.alibaba.nacos.naming.consistency.ephemeral.distro.newimpl.entity.DistroKey;
 import com.alibaba.nacos.naming.misc.Loggers;
 
 import java.util.List;
@@ -58,7 +57,7 @@ public void run() {
     }
     
     private void verifyForDataStorage(String type, List<Member> targetServer) {
-        DistroData distroData = distroComponentHolder.findDataStorage(type).getVerifyData(new DistroKey());
+        DistroData distroData = distroComponentHolder.findDataStorage(type).getVerifyData();
         if (null == distroData) {
             return;
         }

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/InstanceRequest.java
Patch:
@@ -42,7 +42,6 @@ public void setType(String type) {
         this.type = type;
     }
     
-    @Override
     public String getType() {
         return this.type;
     }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/ServerRequestHandler.java
Patch:
@@ -16,7 +16,8 @@
 
 package com.alibaba.nacos.common.remote.client;
 
-import com.alibaba.nacos.api.remote.request.ServerPushRequest;
+import com.alibaba.nacos.api.remote.request.Request;
+import com.alibaba.nacos.api.remote.response.Response;
 
 /**
  * ServerPushResponseHandler.
@@ -31,6 +32,6 @@ public interface ServerRequestHandler {
      *
      * @param request request
      */
-    void requestReply(ServerPushRequest request);
+    Response requestReply(Request request);
     
 }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/rsocket/RsocketConnection.java
Patch:
@@ -63,12 +63,10 @@ public void asyncRequest(Request request, final FutureCallback<Response> callbac
             response.subscribe(new Consumer<Payload>() {
                 @Override
                 public void accept(Payload payload) {
-                    System.out.println("asyncRequest..." + payload.getDataUtf8());
                     callback.onSuccess(RsocketUtils.parseResponseFromPayload(payload));
                 }
             });
         } catch (Exception e) {
-            System.out.println("asyncRequest exception ..." + e.getMessage());
             callback.onFailure(e);
         }
     }

File: common/src/main/java/com/alibaba/nacos/common/utils/LoggerUtils.java
Patch:
@@ -18,6 +18,8 @@
 
 import org.slf4j.Logger;
 
+import static org.slf4j.LoggerFactory.getLogger;
+
 /**
  * Logger utils.
  *

File: common/src/test/java/com/alibaba/nacos/common/remote/RSocketRpcClientTest.java
Patch:
@@ -36,7 +36,7 @@ public class RSocketRpcClientTest {
     public void testConectToServer() throws Exception {
         JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
         System.out.println(compiler.getSourceVersions());
-        RsocketRpcClient rsocketRpcClient = new RsocketRpcClient();
+        RsocketRpcClient rsocketRpcClient = new RsocketRpcClient("");
         RpcClient.ServerInfo serverInfo = new RpcClient.ServerInfo();
         serverInfo.setServerIp("127.0.0.1");
         serverInfo.setServerPort(9948);

File: consistency/src/main/java/com/alibaba/nacos/consistency/SerializeFactory.java
Patch:
@@ -33,8 +33,7 @@ public class SerializeFactory {
     
     private static final Map<String, Serializer> SERIALIZER_MAP = new HashMap<String, Serializer>(4);
     
-    @SuppressWarnings("checkstyle:StaticVariableName")
-    public static String DEFAULT_SERIALIZER = HESSIAN_INDEX;
+    public static String defaultSerializer = HESSIAN_INDEX;
     
     static {
         Serializer serializer = new HessianSerializer();
@@ -46,7 +45,7 @@ public class SerializeFactory {
     }
     
     public static Serializer getDefault() {
-        return SERIALIZER_MAP.get(DEFAULT_SERIALIZER);
+        return SERIALIZER_MAP.get(defaultSerializer);
     }
     
 }

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/NacosMcpService.java
Patch:
@@ -95,7 +95,7 @@ public void run() {
             
             for (String namespace : namespaces) {
                 
-                Map<String, Service> services = serviceManager.getServiceMap(namespace);
+                Map<String, Service> services = serviceManager.chooseServiceMap(namespace);
                 
                 if (services.isEmpty()) {
                     continue;

File: common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java
Patch:
@@ -44,7 +44,7 @@
 public abstract class AbstractHttpClientFactory implements HttpClientFactory {
     
     @Override
-    public final NacosRestTemplate createNacosRestTemplate() {
+    public NacosRestTemplate createNacosRestTemplate() {
         HttpClientConfig httpClientConfig = buildHttpClientConfig();
         final JdkHttpClientRequest clientRequest = new JdkHttpClientRequest(httpClientConfig);
         
@@ -66,13 +66,13 @@ public void onChanged(String filePath) {
     }
     
     @Override
-    public final NacosAsyncRestTemplate createNacosAsyncRestTemplate() {
+    public NacosAsyncRestTemplate createNacosAsyncRestTemplate() {
         RequestConfig requestConfig = getRequestConfig();
         return new NacosAsyncRestTemplate(assignLogger(), new DefaultAsyncHttpClientRequest(
                 HttpAsyncClients.custom().setDefaultRequestConfig(requestConfig).build()));
     }
     
-    private RequestConfig getRequestConfig() {
+    protected RequestConfig getRequestConfig() {
         HttpClientConfig httpClientConfig = buildHttpClientConfig();
         return RequestConfig.custom().setConnectTimeout(httpClientConfig.getConTimeOutMillis())
                 .setSocketTimeout(httpClientConfig.getReadTimeOutMillis())

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/utils/DiskUtils.java
Patch:
@@ -266,7 +266,7 @@ public static boolean writeFile(File file, byte[] content, boolean append) throw
                 String errMsg = ioe.getMessage();
                 if (NO_SPACE_CN.equals(errMsg) || NO_SPACE_EN.equals(errMsg) || errMsg.contains(DISK_QUATA_CN) || errMsg
                         .contains(DISK_QUATA_EN)) {
-                    LOGGER.warn("磁盘满，自杀退出");
+                    LOGGER.warn("Disk full, suicide exits");
                     System.exit(0);
                 }
             } else {

File: core/src/test/java/com/alibaba/nacos/core/storage/RocksStorageTest.java
Patch:
@@ -54,7 +54,7 @@ public void testRocksStorageSnapshotSave() throws Throwable {
         try {
             RocksStorage storage = RocksStorage.createDefault("test", DIR);
             storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
-            storage.snapshotSave(Paths.get(DIR, "snapshot").toString());
+            storage.doSnapshot(Paths.get(DIR, "snapshot").toString());
         } catch (Throwable ex) {
             Assert.fail(ex.getMessage());
         }
@@ -64,7 +64,7 @@ public void testRocksStorageSnapshotSave() throws Throwable {
     public void testRocksStorageSnapshotLoad() throws Throwable {
         RocksStorage storage = RocksStorage.createDefault("test", DIR);
         storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
-        storage.snapshotSave(Paths.get(DIR, "snapshot").toString());
+        storage.snapshotLoad(Paths.get(DIR, "snapshot").toString());
         storage.shutdown();
         ThreadUtils.sleep(5_000L);
         storage = RocksStorage.createDefault("test", Paths.get(ApplicationUtils.getNacosTmpDir(), "snapshot_load").toString());

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DelegateConsistencyServiceImpl.java
Patch:
@@ -58,7 +58,7 @@ public DelegateConsistencyServiceImpl(ClusterVersionJudgement versionJudgement,
     }
     
     private void init() {
-        this.versionJudgement.registerObserver(isAllNewVersion -> switchNewPersistentService = isAllNewVersion);
+        this.versionJudgement.registerObserver(isAllNewVersion -> switchNewPersistentService = isAllNewVersion, -1);
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -182,7 +182,7 @@ public void init() throws Exception {
                 masterTask.cancel(true);
                 heartbeatTask.cancel(true);
             }
-        });
+        }, 100);
     
         NotifyCenter.registerSubscriber(notifier);
     

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftListener.java
Patch:
@@ -59,7 +59,7 @@ private void init() {
                 self.delExtendVal(GROUP);
                 memberManager.update(self);
             }
-        });
+        }, -2);
     }
     
     @Override

File: common/src/main/java/com/alibaba/nacos/common/remote/client/rsocket/RsocketConnection.java
Patch:
@@ -63,10 +63,12 @@ public void asyncRequest(Request request, final FutureCallback<Response> callbac
             response.subscribe(new Consumer<Payload>() {
                 @Override
                 public void accept(Payload payload) {
+                    System.out.println("asyncRequest..." + payload.getDataUtf8());
                     callback.onSuccess(RsocketUtils.parseResponseFromPayload(payload));
                 }
             });
         } catch (Exception e) {
+            System.out.println("asyncRequest exception ..." + e.getMessage());
             callback.onFailure(e);
         }
     }
@@ -80,7 +82,6 @@ private RequestMeta buildMeta() {
     
     @Override
     public void close() {
-        System.out.println("close.." + rSocketClient);
         if (this.rSocketClient != null && !rSocketClient.isDisposed()) {
             rSocketClient.dispose();
         }

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcUtils.java
Patch:
@@ -42,7 +42,7 @@ public class GrpcUtils {
      * @param request request.
      * @return
      */
-    public static GrpcResponse convert(Request request, String ackId) {
+    public static GrpcResponse convert(Request request) {
     
         String jsonString = JacksonUtils.toJson(request);
         byte[] bytes = null;
@@ -53,7 +53,7 @@ public static GrpcResponse convert(Request request, String ackId) {
             return null;
         }
         GrpcMetadata metadata = GrpcMetadata.newBuilder().build();
-        GrpcResponse grpcResponse = GrpcResponse.newBuilder().setAck(ackId).setType(request.getType())
+        GrpcResponse grpcResponse = GrpcResponse.newBuilder().setType(request.getType())
                 .setBody(Any.newBuilder().setValue(ByteString.copyFrom(bytes))).build();
         return grpcResponse;
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
+import com.alibaba.nacos.common.tls.TlsSystemConfig;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -53,7 +54,7 @@ public class HttpClient {
     
     public static final int CON_TIME_OUT_MILLIS = Integer.getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     
-    private static final boolean ENABLE_HTTPS = Boolean.getBoolean("com.alibaba.nacos.client.naming.tls.enable");
+    private static final boolean ENABLE_HTTPS = Boolean.getBoolean(TlsSystemConfig.TLS_ENABLE);
     
     static {
         // limit max redirection

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.common.http.HttpClientFactory;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.lifecycle.Closeable;
+import com.alibaba.nacos.common.tls.TlsSystemConfig;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import org.slf4j.Logger;
 
@@ -40,7 +41,7 @@ public class NamingHttpClientManager implements Closeable {
     
     private static final int CON_TIME_OUT_MILLIS = Integer.getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     
-    private static final boolean ENABLE_HTTPS = Boolean.getBoolean("com.alibaba.nacos.client.naming.tls.enable");
+    private static final boolean ENABLE_HTTPS = Boolean.getBoolean(TlsSystemConfig.TLS_ENABLE);
     
     private static final int MAX_REDIRECTS = 5;
     
@@ -85,7 +86,7 @@ protected HttpClientConfig buildHttpClientConfig() {
             return HttpClientConfig.builder().setConTimeOutMillis(CON_TIME_OUT_MILLIS)
                     .setReadTimeOutMillis(READ_TIME_OUT_MILLIS).setMaxRedirects(MAX_REDIRECTS).build();
         }
-    
+        
         @Override
         protected Logger assignLogger() {
             return NAMING_LOGGER;

File: common/src/main/java/com/alibaba/nacos/common/utils/IpUtils.java
Patch:
@@ -46,4 +46,4 @@ private static boolean isMatch(String data, Pattern pattern) {
         Matcher mat = pattern.matcher(data);
         return mat.find();
     }
-}
+}
\ No newline at end of file

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.identify.Base64;
+import com.alibaba.nacos.common.codec.Base64;
 import com.alibaba.nacos.client.identify.CredentialService;
 import com.alibaba.nacos.common.utils.StringUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.client.config.utils;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.client.utils.IpUtil;
+import com.alibaba.nacos.common.utils.IpUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.List;
@@ -190,7 +190,7 @@ public static void checkBetaIps(String betaIps) throws NacosException {
         }
         String[] ipsArr = betaIps.split(",");
         for (String ip : ipsArr) {
-            if (!IpUtil.isIpv4(ip)) {
+            if (!IpUtils.isIpv4(ip)) {
                 throw new NacosException(NacosException.CLIENT_INVALID_PARAM, "betaIps invalid");
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/SignUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.client.naming.utils;
 
-import com.alibaba.nacos.client.identify.Base64;
+import com.alibaba.nacos.common.codec.Base64;
 
 import javax.crypto.Mac;
 import javax.crypto.spec.SecretKeySpec;

File: common/src/main/java/com/alibaba/nacos/common/codec/Base64.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.identify;
+package com.alibaba.nacos.common.codec;
 
 import java.nio.charset.Charset;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpAllBetaTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump all beta task.
  *
  * @author Nacos
  * @date 2020/7/5 12:19 PM
  */
-public class DumpAllBetaTask extends AbstractTask {
+public class DumpAllBetaTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpAllBetaConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpAllTagTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump all tag task.
  *
  * @author Nacos
  * @date 2020/7/5 12:19 PM
  */
-public class DumpAllTagTask extends AbstractTask {
+public class DumpAllTagTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpAllTagConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpAllTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump all task.
  *
  * @author Nacos
  * @date 2020/7/5 12:17 PM
  */
-public class DumpAllTask extends AbstractTask {
+public class DumpAllTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpAllConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpChangeTask.java
Patch:
@@ -16,18 +16,18 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump change task.
  *
  * @author Nacos
  * @date 2020/7/5 12:19 PM
  */
-public class DumpChangeTask extends AbstractTask {
+public class DumpChangeTask extends AbstractDelayTask {
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public static final String TASK_ID = "dumpChangeConfigTask";

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpTask.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.service.dump.task;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Dump data task.
  *
  * @author Nacos
  */
-public class DumpTask extends AbstractTask {
+public class DumpTask extends AbstractDelayTask {
     
     public DumpTask(String groupKey, long lastModified, String handleIp) {
         this.groupKey = groupKey;
@@ -56,7 +56,7 @@ public DumpTask(String groupKey, String tag, long lastModified, String handleIp,
     }
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     final String groupKey;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDataTask.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.service.merge;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Represents the task of aggregating data.
  *
  * @author jiuRen
  */
-class MergeDataTask extends AbstractTask {
+class MergeDataTask extends AbstractDelayTask {
     
     MergeDataTask(String dataId, String groupId, String tenant, String clientIp) {
         this(dataId, groupId, tenant, null, clientIp);
@@ -42,7 +42,7 @@ class MergeDataTask extends AbstractTask {
     }
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
     }
     
     public String getId() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTask.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.service.notify;
 
-import com.alibaba.nacos.config.server.manager.AbstractTask;
+import com.alibaba.nacos.common.task.AbstractDelayTask;
 
 /**
  * Notify task.
  *
  * @author Nacos
  */
-public class NotifyTask extends AbstractTask {
+public class NotifyTask extends AbstractDelayTask {
     
     private String dataId;
     
@@ -76,7 +76,7 @@ public void setLastModified(long lastModified) {
     }
     
     @Override
-    public void merge(AbstractTask task) {
+    public void merge(AbstractDelayTask task) {
         // Perform merge, but do nothing, tasks with the same dataId and group, later will replace the previous
         
     }

File: address/src/main/java/com/alibaba/nacos/address/configuration/AddressServerSpringConfiguration.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.configuration;
 
 import com.alibaba.nacos.address.auth.AddressServerAuthManager;
-import com.alibaba.nacos.core.auth.AuthManager;
+import com.alibaba.nacos.auth.AuthManager;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;

File: auth/src/main/java/com/alibaba/nacos/auth/common/ActionTypes.java
Patch:
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Resource action type definitions.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public enum ActionTypes {

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthSystemTypes.java
Patch:
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Types of all auth implementations.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public enum AuthSystemTypes {

File: auth/src/main/java/com/alibaba/nacos/auth/common/env/ReloadableConfigs.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.env;
+package com.alibaba.nacos.auth.common.env;
 
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Value;
@@ -31,6 +31,7 @@
  * Reload application.properties.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 @Component

File: auth/src/main/java/com/alibaba/nacos/auth/exception/AccessException.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
 
 /**
  * Exception to be thrown if authorization is failed.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class AccessException extends NacosException {

File: auth/src/main/java/com/alibaba/nacos/auth/model/Permission.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 
 /**
  * Permission to auth.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class Permission implements Serializable {

File: auth/src/main/java/com/alibaba/nacos/auth/model/Resource.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 
 /**
  * Resource used in authorization.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class Resource implements Serializable {

File: auth/src/main/java/com/alibaba/nacos/auth/model/User.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 
 /**
  * User information in authorization.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class User implements Serializable {

File: auth/src/main/java/com/alibaba/nacos/auth/parser/DefaultResourceParser.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.parser;
 
 import org.apache.commons.lang3.StringUtils;
 
 /**
  * Default resource parser.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class DefaultResourceParser implements ResourceParser {

File: auth/src/main/java/com/alibaba/nacos/auth/parser/ResourceParser.java
Patch:
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.parser;
 
 /**
  * Resource parser.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public interface ResourceParser {

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ConfigResourceParser.java
Patch:
@@ -16,11 +16,10 @@
 
 package com.alibaba.nacos.config.server.auth;
 
-import com.alibaba.nacos.core.auth.Resource;
-import com.alibaba.nacos.core.auth.ResourceParser;
-
 import javax.servlet.http.HttpServletRequest;
 
+import com.alibaba.nacos.auth.model.Resource;
+import com.alibaba.nacos.auth.parser.ResourceParser;
 import org.apache.commons.lang3.StringUtils;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -17,6 +17,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.MapUtils;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
@@ -43,8 +45,6 @@
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.time.DateFormatUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.config.server.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.Objects;
@@ -29,8 +31,6 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import com.alibaba.nacos.core.auth.User;
+import com.alibaba.nacos.auth.model.User;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/PermissionController.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/RoleController.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.console.exception;
 
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.core.auth.AccessException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.http.HttpStatus;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthConfig.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.console.security.nacos;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthSystemTypes;
 import com.alibaba.nacos.console.filter.JwtAuthenticationTokenFilter;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.AuthSystemTypes;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Bean;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.console.security.nacos.roles;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.config.server.auth.PermissionInfo;
 import com.alibaba.nacos.config.server.auth.PermissionPersistService;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.auth.RolePersistService;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.Permission;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.lang.Collections;
 import org.apache.commons.lang3.StringUtils;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUser.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.security.nacos.users;
 
-import com.alibaba.nacos.core.auth.User;
+import com.alibaba.nacos.auth.model.User;
 
 /**
  * Nacos User.

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.console.security.nacos.users;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.config.server.auth.UserPersistService;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.core.auth.AuthConfigs;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.scheduling.annotation.Scheduled;

File: console/src/test/java/com/alibaba/nacos/console/controller/UserControllerTest.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthSystemTypes;
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.console.security.nacos.NacosAuthManager;
 import com.alibaba.nacos.console.security.nacos.users.NacosUser;
-import com.alibaba.nacos.core.auth.AccessException;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.AuthSystemTypes;
 import com.fasterxml.jackson.databind.JsonNode;
 import org.junit.Before;
 import org.junit.Test;

File: core/src/main/java/com/alibaba/nacos/core/storage/kv/RocksBackupInfo.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.storage;
+package com.alibaba.nacos.core.storage.kv;
 
 /**
  * RocksDB backup info.

File: core/src/main/java/com/alibaba/nacos/core/storage/kv/RocksDBUtils.java
Patch:
@@ -15,7 +15,7 @@
  *
  */
 
-package com.alibaba.nacos.core.storage;
+package com.alibaba.nacos.core.storage.kv;
 
 import com.alipay.sofa.jraft.util.Platform;
 import com.alipay.sofa.jraft.util.Utils;

File: core/src/main/java/com/alibaba/nacos/core/utils/DiskUtils.java
Patch:
@@ -256,7 +256,7 @@ public static byte[] readFileBytes(String path, String fileName) {
      * @param append  write append mode
      * @return write success
      */
-    public static boolean writeFile(File file, byte[] content, boolean append) {
+    public static boolean writeFile(File file, byte[] content, boolean append) throws IOException {
         try (FileChannel fileChannel = new FileOutputStream(file, append).getChannel()) {
             ByteBuffer buffer = ByteBuffer.wrap(content);
             fileChannel.write(buffer);
@@ -269,6 +269,8 @@ public static boolean writeFile(File file, byte[] content, boolean append) {
                     LOGGER.warn("磁盘满，自杀退出");
                     System.exit(0);
                 }
+            } else {
+                throw ioe;
             }
         }
         return false;

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -132,7 +132,6 @@ public void run() {
         };
         
         GlobalExecutor.runWithoutThread(ipAutoRefresh);
-        GlobalExecutor.scheduleByCommon(ipAutoRefresh, delayMs);
     }
     
     public static String getSelfIp() {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -21,9 +21,9 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.Cluster;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckerFactory;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -19,9 +19,9 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -22,9 +22,9 @@
 import com.alibaba.nacos.api.naming.NamingResponseCode;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.naming.controllers;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -21,10 +21,10 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.api.selector.SelectorType;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Cluster;

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingResourceParser.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
-import com.alibaba.nacos.core.auth.Resource;
-import com.alibaba.nacos.core.auth.ResourceParser;
+import com.alibaba.nacos.auth.model.Resource;
+import com.alibaba.nacos.auth.parser.ResourceParser;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/persistent/impl/NamingSnapshotOperationTest.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.RaftConfig;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.core.storage.RocksStorage;
+import com.alibaba.nacos.core.storage.kv.RocksStorage;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.DiskUtils;
 import org.junit.After;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/AuthBase.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.AuthConfigs;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.databind.JsonNode;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -16,9 +16,9 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.Nacos;
+import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.core.auth.Permission;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: core/src/test/java/com/alibaba/nacos/core/storage/RocksStorageTest.java
Patch:
@@ -45,14 +45,14 @@ public void before() throws Throwable {
     @Test
     public void testCreateRocksStorage() throws Throwable {
         RocksStorage storage = RocksStorage.createDefault("test", DIR);
-        storage.write("liaochuntao".getBytes(), "liaochuntao".getBytes());
+        storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
     }
     
     @Test
     public void testRocksStorageSnapshotSave() throws Throwable {
         try {
             RocksStorage storage = RocksStorage.createDefault("test", DIR);
-            storage.write("liaochuntao".getBytes(), "liaochuntao".getBytes());
+            storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
             storage.snapshotSave(Paths.get(DIR, "snapshot").toString());
         } catch (Throwable ex) {
             Assert.fail(ex.getMessage());
@@ -62,7 +62,7 @@ public void testRocksStorageSnapshotSave() throws Throwable {
     @Test
     public void testRocksStorageSnapshotLoad() throws Throwable {
         RocksStorage storage = RocksStorage.createDefault("test", DIR);
-        storage.write("liaochuntao".getBytes(), "liaochuntao".getBytes());
+        storage.put("liaochuntao".getBytes(), "liaochuntao".getBytes());
         storage.snapshotSave(Paths.get(DIR, "snapshot").toString());
         storage.shutdown();
         ThreadUtils.sleep(5_000L);

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigRequestTypeConstants.java
Patch:
@@ -35,4 +35,7 @@ public class ConfigRequestTypeConstants extends RequestTypeConstants {
     
     public static final String CONFIG_CHANGE_NOTIFY = "CONFIG_CHANGE_NOTIFY";
     
+    public static final String CONFIG_CHANGE_CLUSTER_SYNC = "CONFIG_CHANGE_CLUSTER_SYNC";
+    
+    
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigResponseTypeConstants.java
Patch:
@@ -35,4 +35,6 @@ public class ConfigResponseTypeConstants extends ResponseTypeConstants {
     
     public static final String CONFIG_NOTIFY = "CONFIG_NOTIFY";
     
+    public static final String CONFIG_CHANGE_CLUSTER_SYNC = "CONFIG_CHANGE_CLUSTER_SYNC";
+    
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/response/PushCallBack.java
Patch:
@@ -24,6 +24,8 @@
  */
 public interface PushCallBack {
     
+    public long getTimeout();
+    
     public void onSuccess();
     
     public void onFail(Exception e);

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingGrpcClientProxy.java
Patch:
@@ -62,7 +62,7 @@ public class NamingGrpcClientProxy implements NamingClientProxy {
     public NamingGrpcClientProxy(String namespaceId, ServerListFactory serverListFactory,
             ServiceInfoHolder serviceInfoHolder) throws NacosException {
         this.namespaceId = namespaceId;
-        this.rpcClient = RpcClientFactory.getClient("naming", ConnectionType.GRPC);
+        this.rpcClient = RpcClientFactory.createClient("naming", ConnectionType.GRPC);
         this.namingGrpcConnectionEventListener = new NamingGrpcConnectionEventListener(this);
         start(serverListFactory, serviceInfoHolder);
     }

File: common/src/main/java/com/alibaba/nacos/common/remote/client/grpc/GrpcConnection.java
Patch:
@@ -50,7 +50,8 @@ public class GrpcConnection extends Connection {
     /**
      * executor to execute future request.
      */
-    static ExecutorService aynsRequestExecutor = Executors.newScheduledThreadPool(10);
+    static ExecutorService aynsRequestExecutor = Executors
+            .newScheduledThreadPool(Runtime.getRuntime().availableProcessors());
     
     /**
      * grpc channel.

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigChangeNotifier.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.remote;
 
 import com.alibaba.nacos.api.config.remote.request.ConfigChangeNotifyRequest;
-import com.alibaba.nacos.api.remote.response.PushCallBack;
+import com.alibaba.nacos.api.remote.response.AbstractPushCallBack;
 import com.alibaba.nacos.common.utils.CollectionUtils;
 import com.alibaba.nacos.core.remote.RpcPushService;
 import com.alibaba.nacos.core.utils.Loggers;
@@ -60,7 +60,8 @@ public void configDataChanged(String groupKey, final ConfigChangeNotifyRequest n
     
         if (!CollectionUtils.isEmpty(clients)) {
             for (final String client : clients) {
-                rpcPushService.pushWithCallback(client, notifyRequet, new PushCallBack() {
+                rpcPushService.pushWithCallback(client, notifyRequet, new AbstractPushCallBack(500L) {
+                 
                     @Override
                     public void onSuccess() {
                         Loggers.CORE.info("push callback success.,groupKey={},clientId={}", groupKey, client);

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -28,6 +28,7 @@
 import com.alibaba.nacos.common.notify.Event;
 import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
+import com.alibaba.nacos.common.remote.ConnectionType;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.VersionUtils;
@@ -134,6 +135,7 @@ protected void init() throws NacosException {
         this.localAddress = InetUtils.getSelfIp() + ":" + port;
         this.self = MemberUtils.singleParse(this.localAddress);
         this.self.setExtendVal(MemberMetaDataConstants.VERSION, VersionUtils.version);
+        this.self.setExtendVal(MemberMetaDataConstants.SUPPORT_REMOTE_C_TYPE, ConnectionType.RSOCKET.getType());
         serverList.put(self.getAddress(), self);
         
         // register NodeChangeEvent publisher to NotifyManager

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/remote/ClusterConnection.java
Patch:
@@ -20,8 +20,7 @@
 import com.alibaba.nacos.api.remote.response.PushCallBack;
 import com.alibaba.nacos.core.remote.Connection;
 import com.alibaba.nacos.core.remote.ConnectionMetaInfo;
-
-import java.util.concurrent.Future;
+import com.alibaba.nacos.core.remote.PushFuture;
 
 /**
  * Cluster connection.
@@ -49,7 +48,7 @@ public void sendRequestNoAck(ServerPushRequest request) throws Exception {
     }
     
     @Override
-    public Future<Boolean> sendRequestWithFuture(ServerPushRequest request) throws Exception {
+    public PushFuture sendRequestWithFuture(ServerPushRequest request) throws Exception {
         return null;
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/remote/handler/ForwardInstanceRequestHandler.java
Patch:
@@ -33,6 +33,7 @@
 import com.google.common.collect.Lists;
 import org.springframework.stereotype.Component;
 
+import java.util.HashMap;
 import java.util.List;
 
 /**
@@ -79,7 +80,7 @@ public Response handle(Request request, RequestMeta meta) throws NacosException
     private void addRemotingConnectionIfAbsent(RequestMeta sourceRequestMeta) {
         if (null == remotingConnectionHolder.getRemotingConnection(sourceRequestMeta.getConnectionId())) {
             ConnectionMetaInfo metaInfo = new ConnectionMetaInfo(sourceRequestMeta.getConnectionId(),
-                    sourceRequestMeta.getClientIp(), "cluster", sourceRequestMeta.getClientVersion());
+                    sourceRequestMeta.getClientIp(), "cluster", sourceRequestMeta.getClientVersion(), new HashMap<>());
             remotingConnectionHolder.clientConnected(new ClusterConnection(metaInfo));
         }
     }

File: address/src/main/java/com/alibaba/nacos/address/configuration/AddressServerSpringConfiguration.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.address.configuration;
 
 import com.alibaba.nacos.address.auth.AddressServerAuthManager;
-import com.alibaba.nacos.core.auth.AuthManager;
+import com.alibaba.nacos.auth.AuthManager;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;

File: auth/src/main/java/com/alibaba/nacos/auth/common/ActionTypes.java
Patch:
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Resource action type definitions.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public enum ActionTypes {

File: auth/src/main/java/com/alibaba/nacos/auth/common/AuthSystemTypes.java
Patch:
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.common;
 
 /**
  * Types of all auth implementations.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public enum AuthSystemTypes {

File: auth/src/main/java/com/alibaba/nacos/auth/common/env/ReloadableConfigs.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.env;
+package com.alibaba.nacos.auth.common.env;
 
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Value;
@@ -31,6 +31,7 @@
  * Reload application.properties.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 @Component

File: auth/src/main/java/com/alibaba/nacos/auth/exception/AccessException.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
 
 /**
  * Exception to be thrown if authorization is failed.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class AccessException extends NacosException {

File: auth/src/main/java/com/alibaba/nacos/auth/model/Permission.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 
 /**
  * Permission to auth.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class Permission implements Serializable {

File: auth/src/main/java/com/alibaba/nacos/auth/model/Resource.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 
 /**
  * Resource used in authorization.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class Resource implements Serializable {

File: auth/src/main/java/com/alibaba/nacos/auth/model/User.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.model;
 
 import java.io.Serializable;
 
 /**
  * User information in authorization.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class User implements Serializable {

File: auth/src/main/java/com/alibaba/nacos/auth/parser/DefaultResourceParser.java
Patch:
@@ -14,14 +14,15 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.parser;
 
 import org.apache.commons.lang3.StringUtils;
 
 /**
  * Default resource parser.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public class DefaultResourceParser implements ResourceParser {

File: auth/src/main/java/com/alibaba/nacos/auth/parser/ResourceParser.java
Patch:
@@ -14,12 +14,13 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.auth;
+package com.alibaba.nacos.auth.parser;
 
 /**
  * Resource parser.
  *
  * @author nkorange
+ * @author mai.jh
  * @since 1.2.0
  */
 public interface ResourceParser {

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ConfigResourceParser.java
Patch:
@@ -16,11 +16,10 @@
 
 package com.alibaba.nacos.config.server.auth;
 
-import com.alibaba.nacos.core.auth.Resource;
-import com.alibaba.nacos.core.auth.ResourceParser;
-
 import javax.servlet.http.HttpServletRequest;
 
+import com.alibaba.nacos.auth.model.Resource;
+import com.alibaba.nacos.auth.parser.ResourceParser;
 import org.apache.commons.lang3.StringUtils;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -17,6 +17,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.MapUtils;
 import com.alibaba.nacos.config.server.auth.ConfigResourceParser;
@@ -43,8 +45,6 @@
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.InetUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.time.DateFormatUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.alibaba.nacos.config.server.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.Objects;
@@ -29,8 +31,6 @@
 import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/RequestUtil.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-import com.alibaba.nacos.core.auth.User;
+import com.alibaba.nacos.auth.model.User;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/PermissionController.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/controller/RoleController.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.DeleteMapping;

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.console.exception;
 
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.core.auth.AccessException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.http.HttpStatus;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/JwtTokenManager.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.security.nacos;
 
-import com.alibaba.nacos.core.auth.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import io.jsonwebtoken.Claims;
 import io.jsonwebtoken.Jwts;
 import io.jsonwebtoken.SignatureAlgorithm;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthConfig.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.console.security.nacos;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthSystemTypes;
 import com.alibaba.nacos.console.filter.JwtAuthenticationTokenFilter;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.AuthSystemTypes;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Bean;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.console.security.nacos.roles;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.config.server.auth.PermissionInfo;
 import com.alibaba.nacos.config.server.auth.PermissionPersistService;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.auth.RolePersistService;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;
 import com.alibaba.nacos.console.security.nacos.users.NacosUserDetailsServiceImpl;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.Permission;
 import com.alibaba.nacos.core.utils.Loggers;
 import io.jsonwebtoken.lang.Collections;
 import org.apache.commons.lang3.StringUtils;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUser.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.console.security.nacos.users;
 
-import com.alibaba.nacos.core.auth.User;
+import com.alibaba.nacos.auth.model.User;
 
 /**
  * Nacos User.

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.console.security.nacos.users;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.config.server.auth.UserPersistService;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.core.auth.AuthConfigs;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.scheduling.annotation.Scheduled;

File: console/src/test/java/com/alibaba/nacos/console/controller/UserControllerTest.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.console.controller;
 
+import com.alibaba.nacos.auth.common.AuthConfigs;
+import com.alibaba.nacos.auth.common.AuthSystemTypes;
+import com.alibaba.nacos.auth.exception.AccessException;
 import com.alibaba.nacos.console.security.nacos.NacosAuthManager;
 import com.alibaba.nacos.console.security.nacos.users.NacosUser;
-import com.alibaba.nacos.core.auth.AccessException;
-import com.alibaba.nacos.core.auth.AuthConfigs;
-import com.alibaba.nacos.core.auth.AuthSystemTypes;
 import com.fasterxml.jackson.databind.JsonNode;
 import org.junit.Before;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -21,9 +21,9 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.Cluster;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckerFactory;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -19,9 +19,9 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -22,9 +22,9 @@
 import com.alibaba.nacos.api.naming.NamingResponseCode;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.naming.controllers;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -21,10 +21,10 @@
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.api.selector.SelectorType;
+import com.alibaba.nacos.auth.annotation.Secured;
+import com.alibaba.nacos.auth.common.ActionTypes;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.ActionTypes;
-import com.alibaba.nacos.core.auth.Secured;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Cluster;

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingResourceParser.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
-import com.alibaba.nacos.core.auth.Resource;
-import com.alibaba.nacos.core.auth.ResourceParser;
+import com.alibaba.nacos.auth.model.Resource;
+import com.alibaba.nacos.auth.parser.ResourceParser;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/AuthBase.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
+import com.alibaba.nacos.auth.common.AuthConfigs;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-import com.alibaba.nacos.core.auth.AuthConfigs;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.databind.JsonNode;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -16,9 +16,9 @@
 package com.alibaba.nacos.test.core.auth;
 
 import com.alibaba.nacos.Nacos;
+import com.alibaba.nacos.auth.model.Permission;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.core.auth.Permission;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import com.fasterxml.jackson.core.type.TypeReference;

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -132,7 +132,6 @@ public void run() {
         };
         
         GlobalExecutor.runWithoutThread(ipAutoRefresh);
-        GlobalExecutor.scheduleByCommon(ipAutoRefresh, delayMs);
     }
     
     public static String getSelfIp() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/RowMapperManager.java
Patch:
@@ -475,6 +475,7 @@ public ConfigHistoryInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
             configHistoryInfo.setTenant(rs.getString("tenant_id"));
             configHistoryInfo.setAppName(rs.getString("app_name"));
             configHistoryInfo.setSrcIp(rs.getString("src_ip"));
+            configHistoryInfo.setSrcUser(rs.getString("src_user"));
             configHistoryInfo.setOpType(rs.getString("op_type"));
             configHistoryInfo.setCreatedTime(rs.getTimestamp("gmt_create"));
             configHistoryInfo.setLastModifiedTime(rs.getTimestamp("gmt_modified"));

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -2005,7 +2005,7 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
             int pageSize) {
         String tenantTmp = StringUtils.isBlank(tenant) ? StringUtils.EMPTY : tenant;
         String sqlCountRows = "select count(*) from his_config_info where data_id = ? and group_id = ? and tenant_id = ?";
-        String sqlFetchRows = "select nid,data_id,group_id,tenant_id,app_name,src_ip,op_type,gmt_create,gmt_modified from his_config_info where data_id = ? and group_id = ? and tenant_id = ? order by nid desc";
+        String sqlFetchRows = "select nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified from his_config_info where data_id = ? and group_id = ? and tenant_id = ? order by nid desc";
         
         PaginationHelper<ConfigHistoryInfo> helper = createPaginationHelper();
         return helper.fetchPage(sqlCountRows, sqlFetchRows, new Object[] {dataId, group, tenantTmp}, pageNo, pageSize,

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -2240,7 +2240,7 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
         String tenantTmp = StringUtils.isBlank(tenant) ? StringUtils.EMPTY : tenant;
         String sqlCountRows = "select count(*) from his_config_info where data_id = ? and group_id = ? and tenant_id = ?";
         String sqlFetchRows =
-                "select nid,data_id,group_id,tenant_id,app_name,src_ip,op_type,gmt_create,gmt_modified from his_config_info "
+                "select nid,data_id,group_id,tenant_id,app_name,src_ip,src_user,op_type,gmt_create,gmt_modified from his_config_info "
                         + "where data_id = ? and group_id = ? and tenant_id = ? order by nid desc";
         
         Page<ConfigHistoryInfo> page = null;
@@ -2249,7 +2249,8 @@ public Page<ConfigHistoryInfo> findConfigHistory(String dataId, String group, St
                     .fetchPage(sqlCountRows, sqlFetchRows, new Object[] {dataId, group, tenantTmp}, pageNo, pageSize,
                             HISTORY_LIST_ROW_MAPPER);
         } catch (DataAccessException e) {
-            LogUtil.FATAL_LOG.error("[list-config-history] error, dataId:{}, group:{}", new Object[] {dataId, group}, e);
+            LogUtil.FATAL_LOG
+                    .error("[list-config-history] error, dataId:{}, group:{}", new Object[] {dataId, group}, e);
             throw e;
         }
         return page;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/NacosAuthManager.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
+import com.alibaba.nacos.config.server.utils.RequestUtil;
 import com.alibaba.nacos.console.security.nacos.roles.NacosRoleServiceImpl;
 import com.alibaba.nacos.console.security.nacos.users.NacosUser;
 import com.alibaba.nacos.core.auth.AccessException;
@@ -90,7 +91,7 @@ public User login(Object request) throws AccessException {
                 }
             }
         }
-        
+        req.setAttribute(RequestUtil.NACOS_USER_KEY, user);
         return user;
     }
     

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -33,7 +33,6 @@
 import javax.servlet.http.HttpServletResponse;
 import java.io.IOException;
 import java.lang.reflect.Method;
-import java.net.URI;
 
 /**
  * Unified filter to handle authentication and authorization.
@@ -73,8 +72,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
         
         try {
             
-            String path = new URI(req.getRequestURI()).getPath();
-            Method method = methodsCache.getMethod(req.getMethod(), path);
+            Method method = methodsCache.getMethod(req);
             
             if (method == null) {
                 chain.doFilter(request, response);

File: core/src/main/java/com/alibaba/nacos/core/utils/Constants.java
Patch:
@@ -61,4 +61,6 @@ public interface Constants {
     String COMMA_DIVISION = ",";
     
     String NACOS_SERVER_HEADER = "Nacos-Server";
+    
+    String REQUEST_PATH_SEPARATOR = "-->";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -96,7 +96,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isNotBlank(serviceName)) {
                 serviceName = serviceName.trim();
             }
-            Method method = controllerMethodsCache.getMethod(req.getMethod(), path);
+            Method method = controllerMethodsCache.getMethod(req);
             
             if (method == null) {
                 throw new NoSuchMethodException(req.getMethod() + " " + path);

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -39,7 +39,9 @@
  * Base http client.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link com.alibaba.nacos.common.http.client.request.HttpClientRequest}
  */
+@Deprecated
 public abstract class BaseHttpClient {
     
     protected <T> RestResult<T> execute(CloseableHttpClient httpClient, final Type type, HttpUriRequest request)

File: common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java
Patch:
@@ -30,7 +30,9 @@
  * Use the same HttpClient object in the same space.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link HttpClientBeanHolder}
  */
+@Deprecated
 public class HttpClientManager {
     
     private static final Logger LOGGER = LoggerFactory.getLogger(HttpClientManager.class);

File: common/src/main/java/com/alibaba/nacos/common/http/NAsyncHttpClient.java
Patch:
@@ -25,7 +25,9 @@
  * Nacos async http client interface.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate}
  */
+@Deprecated
 @SuppressWarnings("all")
 public interface NAsyncHttpClient extends NHttpClient {
     

File: common/src/main/java/com/alibaba/nacos/common/http/NHttpClient.java
Patch:
@@ -22,7 +22,9 @@
  * Nacos http client interface.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link com.alibaba.nacos.common.http.client.request.HttpClientRequest}
  */
+@Deprecated
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public interface NHttpClient extends Closeable {
 

File: common/src/main/java/com/alibaba/nacos/common/http/NSyncHttpClient.java
Patch:
@@ -26,7 +26,9 @@
  * Nacos sync http client.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link com.alibaba.nacos.common.http.client.NacosRestTemplate}
  */
+@Deprecated
 @SuppressWarnings("all")
 public interface NSyncHttpClient extends NHttpClient {
     

File: common/src/main/java/com/alibaba/nacos/common/http/NacosAsyncHttpClient.java
Patch:
@@ -29,7 +29,9 @@
  * Nacos async http client.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link com.alibaba.nacos.common.http.client.request.DefaultAsyncHttpClientRequest}
  */
+@Deprecated
 class NacosAsyncHttpClient extends BaseHttpClient implements NAsyncHttpClient {
     
     private CloseableHttpAsyncClient asyncClient;

File: common/src/main/java/com/alibaba/nacos/common/http/NacosSyncHttpClient.java
Patch:
@@ -30,7 +30,9 @@
  * Nacos sync http client.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
+ * @deprecated Refer to the new {@link com.alibaba.nacos.common.http.client.request.JdkHttpClientRequest}
  */
+@Deprecated
 class NacosSyncHttpClient extends BaseHttpClient implements NSyncHttpClient {
     
     private CloseableHttpClient client;

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -257,7 +257,7 @@ public void receiveConfigInfo(String configInfo) {
     public void test_e_derby_ops() throws Exception {
         String url = "http://127.0.0.1:8848/nacos/v1/cs/ops/derby";
         Query query = Query.newInstance().addParam("sql", "select * from users");
-        RestResult<List<Map<String, Object>>> result = httpClient
+        RestResult<List<Map<String, Object>>> result = restTemplate
                 .get(url, Header.EMPTY, query, new GenericType<RestResult<List<Map<String, Object>>>>() {
                 }.getType());
         System.out.println(result.getData());
@@ -271,7 +271,7 @@ public void test_e_derby_ops() throws Exception {
     public void test_g_derby_ops_no_select() throws Exception {
         String url = "http://127.0.0.1:8848/nacos/v1/cs/ops/derby";
         Query query = Query.newInstance().addParam("sql", "update users set username='nacos'");
-        RestResult<Object> result = httpClient.get(url, Header.EMPTY, query, new GenericType<RestResult<Object>>() {
+        RestResult<Object> result = restTemplate.get(url, Header.EMPTY, query, new GenericType<RestResult<Object>>() {
         }.getType());
         System.out.println(result);
         Assert.assertFalse(result.ok());

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RolePersistService.java
Patch:
@@ -18,6 +18,8 @@
 
 import com.alibaba.nacos.config.server.model.Page;
 
+import java.util.List;
+
 /**
  * Role CRUD service.
  *
@@ -37,4 +39,5 @@ public interface RolePersistService {
     
     void deleteRole(String role, String username);
     
+    List<String> findRolesLikeRoleName(String role);
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientIpWhiteList.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.config.server.model.AclInfo;
-import com.alibaba.nacos.config.server.utils.JSONUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
@@ -76,7 +76,7 @@ public static void load(String content) {
         }
         DEFAULT_LOG.warn("[clientIpWhiteList] {}", content);
         try {
-            AclInfo acl = (AclInfo) JSONUtils.deserializeObject(content, AclInfo.class);
+            AclInfo acl = JacksonUtils.toObj(content, AclInfo.class);
             isOpen = acl.getIsOpen();
             CLIENT_IP_WHITELIST.set(acl.getIps());
         } catch (Exception ioe) {

File: test/src/test/java/com/alibaba/nacos/test/common/NacosAsyncRestTemplate_ITCase.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.Map;
 
 /**
- * NacosAsyncRestTemplate_ITCase
+ * NacosAsyncRestTemplate_ITCase.
  *
  * @author mai.jh
  */

File: api/src/main/java/com/alibaba/nacos/api/remote/response/PushCallBack.java
Patch:
@@ -26,7 +26,7 @@ public interface PushCallBack {
     
     public void onSuccess();
     
-    public void onFail();
+    public void onFail(Exception e);
     
     public void onTimeout();
     

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestHandlerReactor.java
Patch:
@@ -65,7 +65,9 @@ public void request(GrpcRequest grpcRequest, StreamObserver<GrpcResponse> respon
             PushAckRequest request = JacksonUtils
                     .toObj(grpcRequest.getBody().getValue().toStringUtf8(), PushAckRequest.class);
             GrpcAckSynchronizer.ackNotify(request.getAckId(), request.isSuccess());
+            responseObserver.onNext(GrpcUtils.convert(new ServerCheckResponse(), ""));
             responseObserver.onCompleted();
+            return;
         }
         
         RequestHandler requestHandler = requestHandlerRegistry.getByRequestType(type);

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/SnowFlowerIdGenerator.java
Patch:
@@ -88,7 +88,7 @@ public class SnowFlowerIdGenerator implements IdGenerator {
             try {
                 address = InetAddress.getLocalHost();
             } catch (final UnknownHostException e) {
-                throw new IllegalStateException("Cannot get LocalHost InetAddress, please check your network!");
+                throw new IllegalStateException("Cannot get LocalHost InetAddress, please check your network!", e);
             }
             byte[] ipAddressByteArray = address.getAddress();
             this.workerId = (((ipAddressByteArray[ipAddressByteArray.length - 2] & 0B11) << Byte.SIZE) + (

File: common/src/main/java/com/alibaba/nacos/common/http/param/MediaType.java
Patch:
@@ -44,6 +44,6 @@ private MediaType() {
     
     public static final String TEXT_HTML = "text/html";
     
-    public static final String TEXT_PLAIN = "text/xml";
+    public static final String TEXT_PLAIN = "text/plain";
     
 }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/AbstractConfigRequest.java
Patch:
@@ -23,7 +23,7 @@
  * @author liuzunfei
  * @version $Id: ConfigCommonRequest.java, v 0.1 2020年07月13日 9:05 PM liuzunfei Exp $
  */
-public abstract class ConfigCommonRequest extends Request {
+public abstract class AbstractConfigRequest extends Request {
 
     @Override
     public String getModule() {

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigBatchListenRequest.java
Patch:
@@ -22,7 +22,7 @@
  * @author liuzunfei
  * @version $Id: ConfigBatchListenRequest.java, v 0.1 2020年07月27日 7:46 PM liuzunfei Exp $
  */
-public class ConfigBatchListenRequest extends ConfigCommonRequest {
+public class ConfigBatchListenRequest extends AbstractConfigRequest {
     
     private static final String Y = "Y";
     

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigPublishRequest.java
Patch:
@@ -25,7 +25,7 @@
  * @author liuzunfei
  * @version $Id: ConfigPublishRequest.java, v 0.1 2020年07月16日 4:30 PM liuzunfei Exp $
  */
-public class ConfigPublishRequest extends ConfigCommonRequest {
+public class ConfigPublishRequest extends AbstractConfigRequest {
     
     String dataId;
     
@@ -59,7 +59,7 @@ public String getAdditionParam(String key) {
      */
     public void putAdditonalParam(String key, String value) {
         if (additonMap == null) {
-            additonMap = new HashMap<String, String>();
+            additonMap = new HashMap<String, String>(2);
         }
         additonMap.put(key, value);
     }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigQueryRequest.java
Patch:
@@ -22,7 +22,7 @@
  * @author liuzunfei
  * @version $Id: ConfigQueryRequest.java, v 0.1 2020年07月13日 9:06 PM liuzunfei Exp $
  */
-public class ConfigQueryRequest extends ConfigCommonRequest {
+public class ConfigQueryRequest extends AbstractConfigRequest {
     
     private String dataId;
     

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigRemoveRequest.java
Patch:
@@ -22,7 +22,7 @@
  * @author liuzunfei
  * @version $Id: ConfigRemoveRequest.java, v 0.1 2020年07月16日 4:31 PM liuzunfei Exp $
  */
-public class ConfigRemoveRequest extends ConfigCommonRequest {
+public class ConfigRemoveRequest extends AbstractConfigRequest {
     
     String dataId;
     
@@ -119,4 +119,4 @@ public String getTenant() {
     public void setTenant(String tenant) {
         this.tenant = tenant;
     }
-}
\ No newline at end of file
+}

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/AbstractNamingRequest.java
Patch:
@@ -23,18 +23,18 @@
  *
  * @author liuzunfei
  */
-public abstract class NamingCommonRequest extends Request {
+public abstract class AbstractNamingRequest extends Request {
     
     private String namespace;
     
     private String serviceName;
     
     private String groupName;
     
-    public NamingCommonRequest() {
+    public AbstractNamingRequest() {
     }
     
-    public NamingCommonRequest(String namespace, String serviceName, String groupName) {
+    public AbstractNamingRequest(String namespace, String serviceName, String groupName) {
         this.namespace = namespace;
         this.serviceName = serviceName;
         this.groupName = groupName;

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/InstanceRequest.java
Patch:
@@ -23,7 +23,7 @@
  *
  * @author xiweng.yy
  */
-public class InstanceRequest extends NamingCommonRequest {
+public class InstanceRequest extends AbstractNamingRequest {
     
     private String type;
     

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/ServiceListRequest.java
Patch:
@@ -23,7 +23,7 @@
  *
  * @author xiweng.yy
  */
-public class ServiceListRequest extends NamingCommonRequest {
+public class ServiceListRequest extends AbstractNamingRequest {
     
     private int pageNo;
     

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/ServiceQueryRequest.java
Patch:
@@ -23,7 +23,7 @@
  *
  * @author xiweng.yy
  */
-public class ServiceQueryRequest extends NamingCommonRequest {
+public class ServiceQueryRequest extends AbstractNamingRequest {
     
     private String cluster;
     

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/request/SubscribeServiceRequest.java
Patch:
@@ -23,7 +23,7 @@
  *
  * @author xiweng.yy
  */
-public class SubscribeServiceRequest extends NamingCommonRequest {
+public class SubscribeServiceRequest extends AbstractNamingRequest {
     
     private boolean subscribe;
     

File: api/src/main/java/com/alibaba/nacos/api/remote/connection/Connection.java
Patch:
@@ -27,6 +27,7 @@
  * @author liuzunfei
  * @version $Id: Connection.java, v 0.1 2020年07月13日 7:08 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class Connection {
     
     public static final String HEALTHY = "healthy";

File: api/src/main/java/com/alibaba/nacos/api/remote/connection/ConnectionType.java
Patch:
@@ -23,6 +23,9 @@
  */
 public enum ConnectionType {
     
+    /**
+     * gRPC connection.
+     */
     GRPC("GRPC", "Grpc Connection");
     
     String type;

File: api/src/main/java/com/alibaba/nacos/api/remote/request/InternalRequest.java
Patch:
@@ -22,6 +22,7 @@
  * @author liuzunfei
  * @version $Id: InternalRequest.java, v 0.1 2020年07月22日 8:33 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class InternalRequest extends Request {
     
     @Override

File: api/src/main/java/com/alibaba/nacos/api/remote/request/Request.java
Patch:
@@ -24,6 +24,7 @@
  *
  * @author liuzunfei
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class Request {
     
     private final Map<String, String> headers = new HashMap<String, String>();

File: api/src/main/java/com/alibaba/nacos/api/remote/response/Response.java
Patch:
@@ -24,6 +24,7 @@
  * @author liuzunfei
  * @version $Id: Response.java, v 0.1 2020年07月13日 6:03 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class Response {
     
     int resultCode = ResponseCode.SUCCESS.getCode();

File: api/src/main/java/com/alibaba/nacos/api/remote/response/ServerPushResponse.java
Patch:
@@ -22,6 +22,7 @@
  * @author liuzunfei
  * @version $Id: ServerPushResponse.java, v 0.1 2020年07月20日 1:21 PM liuzunfei Exp $
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class ServerPushResponse extends Response {
     
     /**

File: common/src/main/java/com/alibaba/nacos/common/notify/DefaultPublisher.java
Patch:
@@ -85,6 +85,7 @@ public synchronized void start() {
         }
     }
     
+    @Override
     public long currentEventSize() {
         return queue.size();
     }

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerLoaderController.java
Patch:
@@ -52,5 +52,4 @@ public ResponseEntity updateMaxClients(@RequestParam Integer maxclients) {
         return ResponseEntity.ok().body("success");
     }
     
-    
 }

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -75,7 +75,7 @@ public void unregister(String connectionId) {
         if (remove != null) {
             remove.closeGrapcefully();
             Loggers.GRPC.info(" connection unregistered successfully,connectionid = {} ", connectionId);
-            clientConnectionEventListenerRegistry.notifyClientConnected(remove);
+            clientConnectionEventListenerRegistry.notifyClientDisConnected(remove);
         }
     }
     

File: core/src/main/java/com/alibaba/nacos/core/remote/HeartBeatRequestHandler.java
Patch:
@@ -23,7 +23,9 @@
 import com.alibaba.nacos.api.remote.request.RequestTypeConstants;
 import com.alibaba.nacos.api.remote.response.HeartBeatResponse;
 import com.alibaba.nacos.api.remote.response.Response;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.core.remote.event.RemotingHeartBeatEvent;
 import com.google.common.collect.Lists;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
@@ -51,6 +53,7 @@ public Request parseBodyString(String bodyString) {
     public Response handle(Request request, RequestMeta meta) throws NacosException {
         String connectionId = meta.getConnectionId();
         connectionManager.refreshActiveTime(connectionId);
+        NotifyCenter.publishEvent(new RemotingHeartBeatEvent(connectionId, meta.getClientIp(), meta.getClientVersion()));
         return new HeartBeatResponse();
     }
     

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -346,7 +346,7 @@ private void updateIfChanged(List<String> newList) {
     private List<String> getApacheServerList(String url, String name) {
         try {
             HttpRestResult<String> httpResult = nacosRestTemplate.get(url, Header.EMPTY, Query.EMPTY, String.class);
-
+            
             if (httpResult.ok()) {
                 if (DEFAULT_NAME.equals(name)) {
                     EnvUtil.setSelfEnv(httpResult.getHeader().getOriginalResponseHeader());
@@ -367,7 +367,7 @@ private List<String> getApacheServerList(String url, String name) {
                 return result;
             } else {
                 LOGGER.error("[check-serverlist] error. addressServerUrl: {}, code: {}", addressServerUrl,
-                    httpResult.getCode());
+                        httpResult.getCode());
                 return null;
             }
         } catch (Exception e) {

File: common/src/main/java/com/alibaba/nacos/common/http/param/MediaType.java
Patch:
@@ -44,6 +44,6 @@ private MediaType() {
     
     public static final String TEXT_HTML = "text/html";
     
-    public static final String TEXT_PLAIN = "text/xml";
+    public static final String TEXT_PLAIN = "text/plain";
     
 }

File: core/src/main/java/com/alibaba/nacos/core/exception/RocksStorageException.java
Patch:
@@ -20,6 +20,8 @@
 import com.alibaba.nacos.api.exception.NacosException;
 
 /**
+ * RocksDB Exception.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class RocksStorageException extends NacosException {

File: core/src/main/java/com/alibaba/nacos/core/storage/RocksDBUtils.java
Patch:
@@ -33,8 +33,11 @@
 import org.rocksdb.util.SizeUnit;
 
 /**
+ * RocksDB utils.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("all")
 public final class RocksDBUtils {
     
     public static RocksBackupInfo convertToRocksBackupInfo(BackupInfo info) {
@@ -47,7 +50,6 @@ public static RocksBackupInfo convertToRocksBackupInfo(BackupInfo info) {
         return backupInfo;
     }
     
-    
     public static DBOptions getDefaultRocksDBOptions() {
         // Turn based on https://github.com/facebook/rocksdb/wiki/RocksDB-Tuning-Guide
         final DBOptions opts = new DBOptions();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/BaseRaftEvent.java
Patch:
@@ -21,9 +21,11 @@
 /**
  * Base raft event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:46 PM
  */
+@Deprecated
 public abstract class BaseRaftEvent extends ApplicationEvent {
     
     private final RaftPeer raftPeer;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/LeaderElectFinishedEvent.java
Patch:
@@ -19,9 +19,11 @@
 /**
  * Leader election finished event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:25 PM
  */
+@Deprecated
 public class LeaderElectFinishedEvent extends BaseRaftEvent {
     
     public LeaderElectFinishedEvent(Object source, RaftPeer raftPeer, RaftPeer local) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/MakeLeaderEvent.java
Patch:
@@ -19,9 +19,11 @@
 /**
  * Make leader event.
  *
+ * @deprecated will remove in 1.4.x
  * @author pbting
  * @date 2019-07-01 8:45 PM
  */
+@Deprecated
 public class MakeLeaderEvent extends BaseRaftEvent {
     
     public MakeLeaderEvent(Object source, RaftPeer raftPeer, RaftPeer local) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeer.java
Patch:
@@ -26,8 +26,10 @@
 /**
  * Raft peer.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 public class RaftPeer {
     
     public String ip;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -49,8 +49,10 @@
 /**
  * Sets of raft peers.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 @Component
 @DependsOn("ProtocolManager")
 public class RaftPeerSet extends MemberChangeListener {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftProxy.java
Patch:
@@ -28,8 +28,10 @@
 /**
  * Raft http proxy.
  *
+ * @deprecated will remove in 1.4.x
  * @author nacos
  */
+@Deprecated
 @Component
 public class RaftProxy {
     

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -79,7 +79,7 @@ public void failed(Exception ex) {
             
             @Override
             public void cancelled() {
-            
+                callback.onCancel();
             }
         });
     }

File: common/src/main/java/com/alibaba/nacos/common/http/client/request/DefaultAsyncHttpClientRequest.java
Patch:
@@ -68,7 +68,7 @@ public void failed(Exception ex) {
             
             @Override
             public void cancelled() {
-            
+                callback.onCancel();
             }
         });
         

File: api/src/main/java/com/alibaba/nacos/api/common/ResponseCode.java
Patch:
@@ -24,6 +24,7 @@
  * <li> Global and common code starts with 10001.
  * <li> Naming module code starts with 20001.
  * <li> Config module code starts with 30001.
+ * <li> Core module code starts with 40001.
  *
  * @author nkorange
  * @since 1.2.0

File: naming/src/main/java/com/alibaba/nacos/naming/utils/Constants.java
Patch:
@@ -18,6 +18,8 @@
 package com.alibaba.nacos.naming.utils;
 
 /**
+ * Naming module code starts with 20001.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class Constants {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -2194,7 +2194,7 @@ public ConfigInfoWrapper queryConfigInfo(final String dataId, final String group
     
     @Override
     public boolean isExistTable(String tableName) {
-        String sql = String.format("select 1 from %s limit 1", tableName);
+        String sql = String.format("SELECT 1 FROM %s FETCH FIRST ROW ONLY", tableName);
         try {
             databaseOperate.queryOne(sql, Integer.class);
             return true;

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/NamingRemoteConstants.java
Patch:
@@ -33,4 +33,6 @@ public class NamingRemoteConstants {
     public static final String SUBSCRIBE_SERVICE = "subscribeService";
     
     public static final String NOTIFY_SUBSCRIBER = "notifySubscriber";
+    
+    public static final String LIST_SERVICE = "listService";
 }

File: api/src/main/java/com/alibaba/nacos/api/remote/ResponseRegistry.java
Patch:
@@ -26,6 +26,7 @@
 import com.alibaba.nacos.api.naming.remote.response.InstanceResponse;
 import com.alibaba.nacos.api.naming.remote.response.NotifySubscriberResponse;
 import com.alibaba.nacos.api.naming.remote.response.QueryServiceResponse;
+import com.alibaba.nacos.api.naming.remote.response.ServiceListResponse;
 import com.alibaba.nacos.api.naming.remote.response.SubscribeServiceResponse;
 import com.alibaba.nacos.api.remote.response.ConnectResetResponse;
 import com.alibaba.nacos.api.remote.response.ConnectionUnregisterResponse;
@@ -67,6 +68,7 @@ public class ResponseRegistry {
         REGISTRY_RESPONSES.put(NamingRemoteConstants.QUERY_SERVICE, QueryServiceResponse.class);
         REGISTRY_RESPONSES.put(NamingRemoteConstants.SUBSCRIBE_SERVICE, SubscribeServiceResponse.class);
         REGISTRY_RESPONSES.put(NamingRemoteConstants.NOTIFY_SUBSCRIBER, NotifySubscriberResponse.class);
+        REGISTRY_RESPONSES.put(NamingRemoteConstants.LIST_SERVICE, ServiceListResponse.class);
     }
     
     public static Class getClassByType(String type) {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/NamingClientProxyDelegate.java
Patch:
@@ -106,7 +106,7 @@ public void updateService(Service service, AbstractSelector selector) throws Nac
     @Override
     public ListView<String> getServiceList(int pageNo, int pageSize, String groupName, AbstractSelector selector)
             throws NacosException {
-        return httpClientProxy.getServiceList(pageNo, pageSize, groupName, selector);
+        return getExecuteClientProxy().getServiceList(pageNo, pageSize, groupName, selector);
     }
     
     @Override
@@ -135,7 +135,7 @@ public void updateBeatInfo(Set<Instance> modifiedInstances) {
     
     @Override
     public boolean serverHealthy() {
-        return httpClientProxy.serverHealthy();
+        return grpcClientProxy.serverHealthy() || httpClientProxy.serverHealthy();
     }
     
     private NamingClientProxy getExecuteClientProxy() {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -62,7 +62,7 @@ private void init(Properties properties) throws NacosException {
         InitUtils.initSerialization();
         InitUtils.initWebRootContext();
         ServerListManager serverListManager = new ServerListManager(properties);
-        serverProxy = new NamingHttpClientProxy(namespace, serverListManager, properties);
+        serverProxy = new NamingHttpClientProxy(namespace, serverListManager, properties, null);
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/remote/PushCallBack.java
Patch:
@@ -24,8 +24,8 @@
  */
 public interface PushCallBack {
     
-    public void onSuccess();
+    public void onCompleted();
     
     public void onException();
     
-}
\ No newline at end of file
+}

File: core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcConnection.java
Patch:
@@ -43,6 +43,5 @@ public void sendResponse(Response reponse) {
     
     @Override
     public void closeGrapcefully() {
-        //Empty implements
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
-import com.alibaba.nacos.client.naming.net.NamingProxy;
+import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.utils.ValidatorUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -48,7 +48,7 @@ public class NacosNamingMaintainService implements NamingMaintainService {
     
     private String serverList;
     
-    private NamingProxy serverProxy;
+    private NamingHttpClientProxy serverProxy;
     
     public NacosNamingMaintainService(String serverList) throws NacosException {
         Properties properties = new Properties();
@@ -66,7 +66,7 @@ private void init(Properties properties) throws NacosException {
         InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
-        serverProxy = new NamingProxy(namespace, endpoint, serverList, properties);
+        serverProxy = new NamingHttpClientProxy(namespace, endpoint, serverList, properties);
     }
     
     private void initServerAddr(Properties properties) {

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/gprc/NamingPushResponseHandler.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.naming.net.gprc;
+package com.alibaba.nacos.client.naming.remote.gprc;
 
 import com.alibaba.nacos.api.naming.remote.response.NotifySubscriberResponse;
 import com.alibaba.nacos.api.remote.response.Response;

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/HttpClient.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.naming.net;
+package com.alibaba.nacos.client.naming.remote.http;
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;

File: client/src/main/java/com/alibaba/nacos/client/naming/remote/http/NamingHttpClientManager.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.client.naming.net;
+package com.alibaba.nacos.client.naming.remote.http;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.http.AbstractHttpClientFactory;

File: client/src/main/java/com/alibaba/nacos/client/remote/RpcClient.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.response.Response;
 import com.alibaba.nacos.client.utils.LogUtils;
+import com.alibaba.nacos.common.lifecycle.Closeable;
 import org.slf4j.Logger;
 
 import javax.annotation.PostConstruct;
@@ -35,7 +36,7 @@
  * @author liuzunfei
  * @version $Id: RpcClient.java, v 0.1 2020年07月13日 9:15 PM liuzunfei Exp $
  */
-public abstract class RpcClient {
+public abstract class RpcClient implements Closeable {
     
     private static final Logger LOGGER = LogUtils.logger(RpcClient.class);
     
@@ -181,5 +182,4 @@ public void registerServerPushResponseHandler(ServerPushResponseHandler serverPu
     public ServerListFactory getServerListFactory() {
         return serverListFactory;
     }
-    
 }

File: client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.beat.BeatReactor;
-import com.alibaba.nacos.client.naming.net.NamingProxy;
+import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientProxy;
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -34,7 +34,7 @@
 public class BeatReactorTest {
     
     @Mock
-    private NamingProxy namingProxy;
+    private NamingHttpClientProxy namingHttpClientProxy;
     
     @Test
     public void test() throws NoSuchFieldException, IllegalAccessException, InterruptedException, NacosException {
@@ -48,7 +48,7 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup
         beatInfo.setScheduled(false);
         beatInfo.setPeriod(1000L);
     
-        BeatReactor beatReactor = new BeatReactor(namingProxy);
+        BeatReactor beatReactor = new BeatReactor(namingHttpClientProxy);
         beatReactor.addBeatInfo("testService", beatInfo);
         
         Assert.assertEquals(1, getActiveThread(beatReactor));

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.test.naming;
 
 import com.alibaba.nacos.api.naming.pojo.Instance;
-import com.alibaba.nacos.client.naming.net.NamingHttpClientManager;
+import com.alibaba.nacos.client.naming.remote.http.NamingHttpClientManager;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingHttpClientProxy_ITCase.java
Patch:
@@ -46,7 +46,7 @@
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
     webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
-public class NamingProxy_ITCase {
+public class NamingHttpClientProxy_ITCase {
     @LocalServerPort
     private int port;
     @Autowired

File: api/src/main/java/com/alibaba/nacos/api/config/remote/request/ConfigChangeListenRequest.java
Patch:
@@ -16,15 +16,13 @@
 
 package com.alibaba.nacos.api.config.remote.request;
 
-
 /**
  * ConfigChangeListenRequest.
  * @author liuzunfei
  * @version $Id: ConfigChangeListenRequest.java, v 0.1 2020年07月13日 9:01 PM liuzunfei Exp $
  */
 public class ConfigChangeListenRequest extends ConfigCommonRequest {
     
-    
     private static final String LISTEN = "listen";
     
     private static final String UNLISTEN = "unlisten";
@@ -37,7 +35,6 @@ public class ConfigChangeListenRequest extends ConfigCommonRequest {
     
     private String operation = LISTEN;
     
-    
     public boolean isCancelListen() {
         return UNLISTEN.equals(this.operation);
     }

File: api/src/main/java/com/alibaba/nacos/api/config/remote/response/ConfigQueryResponse.java
Patch:
@@ -61,8 +61,8 @@ public void addLabel(String key, String value) {
     /**
      * Buid fail response.
      *
-     * @param errorCode
-     * @param message
+     * @param errorCode errorCode.
+     * @param message message.
      * @return
      */
     public static ConfigQueryResponse buildFailResponse(int errorCode, String message) {

File: api/src/main/java/com/alibaba/nacos/api/remote/connection/ConnectionType.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.api.remote.connection;
 
 /**
- * ConnectionType
+ * ConnectionType.
  * @author liuzunfei
  * @version $Id: ConnectionType.java, v 0.1 2020年07月13日 7:15 PM liuzunfei Exp $
  */

File: api/src/main/java/com/alibaba/nacos/api/remote/request/HeartBeatRequest.java
Patch:
@@ -13,10 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.api.remote.request;
 
+package com.alibaba.nacos.api.remote.request;
 
 /**
+ * HeartBeatRequest.
  * @author liuzunfei
  * @version $Id: HeartBeatRequest.java, v 0.1 2020年07月14日 11:38 AM liuzunfei Exp $
  */

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -217,7 +217,6 @@ private boolean removeConfigInner(String tenant, String dataId, String group, St
         }
     }
     
-    
     private boolean removeConfigInRpc(String tenant, String dataId, String group, String tag) {
         
         try {

File: client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java
Patch:
@@ -31,7 +31,7 @@
 public interface HttpAgent extends Closeable {
 
     /**
-     * get server list manager
+     * get server list manager.
      * @return
      */
     ServerListManager getServerListManager();

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfiRemoveRequestHandler.java
Patch:
@@ -31,6 +31,7 @@
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.core.remote.RequestHandler;
+import com.alibaba.nacos.core.utils.Loggers;
 import com.google.common.collect.Lists;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -84,7 +85,7 @@ public Response handle(Request request, RequestMeta meta) throws NacosException
             return ConfigRemoveResponse.buildSuccessResponse();
             
         } catch (Exception e) {
-            e.printStackTrace();
+            Loggers.GRPC_DIGEST.error("remove config error,error msg is {}", e.getMessage(), e);
             return ConfigRemoveResponse.buildFailResponse(e.getMessage());
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigQueryRequestHandler.java
Patch:
@@ -121,7 +121,7 @@ private ConfigQueryResponse getContext(String dataId, String group, String tenan
                         }
                     }
                     String configType = cacheItem.getType();
-                    response.setContentType(configType);
+                    response.setContentType((null != configType) ? configType : "text");
                 }
                 File file = null;
                 ConfigInfoBase configInfoBase = null;
@@ -134,7 +134,7 @@ private ConfigQueryResponse getContext(String dataId, String group, String tenan
                     } else {
                         file = DiskUtil.targetBetaFile(dataId, group, tenant);
                     }
-                    response.addLabel("beta", "Y");
+                    response.addLabel("isBeta", "Y");
                 } else {
                     if (StringUtils.isBlank(tag)) {
                         if (isUseTag(cacheItem, autoTag)) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ParamUtils.java
Patch:
@@ -155,5 +155,4 @@ public static void checkTenant(String tenant) {
         }
     }
     
-    
 }

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionHeathyChecker.java
Patch:
@@ -13,9 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.core.remote;
 
 /**
+ * ConnectionHeathyChecker.
  * @author liuzunfei
  * @version $Id: ConnectionHeathyChecker.java, v 0.1 2020年07月14日 12:01 AM liuzunfei Exp $
  */

File: core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java
Patch:
@@ -20,9 +20,7 @@
 import com.alibaba.nacos.core.utils.Loggers;
 import org.springframework.stereotype.Service;
 
-import java.util.ArrayList;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 
 /**
@@ -36,7 +34,6 @@ public class ConnectionManager {
     
     Map<String, Connection> connetions = new HashMap<String, Connection>();
     
-    
     /**
      * register a new connect.
      *

File: core/src/main/java/com/alibaba/nacos/core/remote/NacosRemoteConstants.java
Patch:
@@ -28,5 +28,4 @@ public class NacosRemoteConstants {
     
     public static final String LISTEN_CONTEXT_NAMING = "NAMING";
     
-    
 }

File: client/src/main/java/com/alibaba/nacos/client/identify/Base64.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.client.identify;
 
-import java.nio.charset.StandardCharsets;
+import java.nio.charset.Charset;
 
 /**
  * Provides Base64 encoding and decoding as defined by <a href="http://www.ietf.org/rfc/rfc2045.txt">RFC 2045</a>.
@@ -179,7 +179,7 @@ public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator != null) {
             if (containsAlphabetOrPad(lineSeparator)) {
                 String sep = null;
-                sep = new String(lineSeparator, StandardCharsets.UTF_8);
+                sep = new String(lineSeparator, Charset.forName("UTF-8"));
                 throw new IllegalArgumentException("lineSeparator must not contain base64 characters: [" + sep + "]");
             }
             if (lineLength > 0) {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/SignUtil.java
Patch:
@@ -21,7 +21,6 @@
 import javax.crypto.Mac;
 import javax.crypto.spec.SecretKeySpec;
 import java.nio.charset.Charset;
-import java.nio.charset.StandardCharsets;
 
 /**
  * Sign util.
@@ -31,7 +30,7 @@
  */
 public class SignUtil {
     
-    public static final Charset UTF8 = StandardCharsets.UTF_8;
+    private static final Charset UTF8 = Charset.forName("UTF-8");
     
     public SignUtil() {
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/remote/NamingRemoteConstants.java
Patch:
@@ -28,8 +28,9 @@ public class NamingRemoteConstants {
     
     public static final String DE_REGISTER_INSTANCE = "deregisterInstance";
     
-    public static final String SUBSCRIBE_SERVICE = "subscribeService";
-    
     public static final String QUERY_SERVICE = "queryService";
     
+    public static final String SUBSCRIBE_SERVICE = "subscribeService";
+    
+    public static final String NOTIFY_SUBSCRIBER = "notifySubscriber";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/remote/handler/InstanceRequestHandler.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.naming.remote.NamingRemoteConstants;
 import com.alibaba.nacos.api.naming.remote.request.InstanceRequest;
 import com.alibaba.nacos.api.naming.remote.response.InstanceResponse;
+import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.api.remote.request.Request;
 import com.alibaba.nacos.api.remote.request.RequestMeta;
 import com.alibaba.nacos.api.remote.response.Response;
@@ -56,7 +57,7 @@ public InstanceRequest parseBodyString(String bodyString) {
     public Response handle(Request request, RequestMeta meta) throws NacosException {
         InstanceRequest instanceRequest = (InstanceRequest) request;
         String namespace = instanceRequest.getNamespace();
-        String serviceName = instanceRequest.getServiceName();
+        String serviceName = NamingUtils.getGroupedName(instanceRequest.getServiceName(), instanceRequest.getGroupName());
         switch (instanceRequest.getType()) {
             case NamingRemoteConstants.REGISTER_INSTANCE:
                 return registerInstance(namespace, serviceName, instanceRequest, meta);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
+import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.common.utils.UuidUtils;
@@ -39,7 +40,9 @@
  * Http tool.
  *
  * @author Nacos
+ * @deprecated Use NacosRestTemplate{@link NacosRestTemplate} unified http client
  */
+@Deprecated
 public class HttpSimpleClient {
     
     /**

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -109,7 +109,7 @@ public class NamingProxy implements Closeable {
     
     public NamingProxy(String namespaceId, String endpoint, String serverList, Properties properties) {
         
-        this.securityProxy = new SecurityProxy(properties);
+        this.securityProxy = new SecurityProxy(properties, nacosRestTemplate);
         this.properties = properties;
         this.setServerPort(DEFAULT_SERVER_PORT);
         this.namespaceId = namespaceId;
@@ -608,7 +608,7 @@ public String callServer(String api, Map<String, String> params, Map<String, Str
             if (HttpStatus.SC_NOT_MODIFIED == restResult.getCode()) {
                 return StringUtils.EMPTY;
             }
-            throw new NacosException(restResult.getCode(), restResult.getData());
+            throw new NacosException(restResult.getCode(), restResult.getMessage());
         } catch (Exception e) {
             NAMING_LOGGER.error("[NA] failed to request", e);
             throw new NacosException(NacosException.SERVER_ERROR, e);

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.naming.net.NamingHttpClientManager;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
@@ -46,7 +45,7 @@ public class SecurityProxy {
     
     private static final String LOGIN_URL = "/v1/auth/users/login";
     
-    private final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getInstance().getNacosRestTemplate();
+    private final NacosRestTemplate nacosRestTemplate;
     
     private String contextPath;
     
@@ -85,11 +84,12 @@ public class SecurityProxy {
      *
      * @param properties a bunch of properties to read
      */
-    public SecurityProxy(Properties properties) {
+    public SecurityProxy(Properties properties, NacosRestTemplate nacosRestTemplate) {
         username = properties.getProperty(PropertyKeyConst.USERNAME, StringUtils.EMPTY);
         password = properties.getProperty(PropertyKeyConst.PASSWORD, StringUtils.EMPTY);
         contextPath = properties.getProperty(PropertyKeyConst.CONTEXT_PATH, "/nacos");
         contextPath = contextPath.startsWith("/") ? contextPath : "/" + contextPath;
+        this.nacosRestTemplate = nacosRestTemplate;
     }
     
     /**

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.SystemPropertyKeyConst;
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.client.config.impl.HttpSimpleClient;
 import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
@@ -82,7 +81,7 @@ public class ParamUtil {
         LOGGER.info("[settings] [http-client] connect timeout:{}", connectTimeout);
         
         try {
-            InputStream in = HttpSimpleClient.class.getClassLoader().getResourceAsStream("application.properties");
+            InputStream in = ValidatorUtils.class.getClassLoader().getResourceAsStream("application.properties");
             Properties props = new Properties();
             props.load(in);
             String val = null;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -19,13 +19,13 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.SystemPropertyKeyConst;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.client.config.impl.EventDispatcher.ServerlistChangeEvent;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.utils.EnvUtil;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.lifecycle.Closeable;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
@@ -335,7 +335,8 @@ private void updateIfChanged(List<String> newList) {
         iterator = iterator();
         currentServerAddr = iterator.next();
         
-        EventDispatcher.fireEvent(new ServerlistChangeEvent());
+        // Using unified event processor, NotifyCenter
+        NotifyCenter.publishEvent(new ServerlistChangeEvent());
         LOGGER.info("[{}] [update-serverlist] serverlist updated to {}", name, serverUrls);
     }
     

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -290,7 +290,9 @@ private static boolean publishEvent(final Class<? extends Event> eventType, fina
             EventPublisher publisher = INSTANCE.publisherMap.get(topic);
             return publisher.publish(event);
         }
-        throw new NoSuchElementException("There are no [" + topic + "] publishers for this event, please register");
+        
+        LOGGER.warn("There are no [{}] publishers for this event, please register", topic);
+        return false;
     }
     
     /**

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -79,7 +79,7 @@
  */
 public class NamingProxy implements Closeable {
     
-    private final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getNacosRestTemplate();
+    private final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getInstance().getNacosRestTemplate();
     
     private static final int DEFAULT_SERVER_PORT = 8848;
     
@@ -591,7 +591,7 @@ public String callServer(String api, Map<String, String> params, Map<String, Str
             if (!curServer.contains(UtilAndComs.SERVER_ADDR_IP_SPLITER)) {
                 curServer = curServer + UtilAndComs.SERVER_ADDR_IP_SPLITER + serverPort;
             }
-            url = NamingHttpClientManager.getPrefix() + curServer + api;
+            url = NamingHttpClientManager.getInstance().getPrefix() + curServer + api;
         }
         
         try {
@@ -714,6 +714,7 @@ public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         NAMING_LOGGER.info("{} do shutdown begin", className);
         ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
+        NamingHttpClientManager.getInstance().shutdown();
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -46,7 +46,7 @@ public class SecurityProxy {
     
     private static final String LOGIN_URL = "/v1/auth/users/login";
     
-    private final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getNacosRestTemplate();
+    private final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getInstance().getNacosRestTemplate();
     
     private String contextPath;
     

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -33,7 +33,7 @@
  */
 public class NamingBase extends HttpClient4Test {
 
-    private static final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getNacosRestTemplate();
+    private static final NacosRestTemplate nacosRestTemplate = NamingHttpClientManager.getInstance().getNacosRestTemplate();
 
     public static final String TEST_DOM_1 = "nacos.test.1";
     public static final String TEST_IP_4_DOM_1 = "127.0.0.1";

File: common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java
Patch:
@@ -35,7 +35,7 @@
  */
 public final class HttpClientBeanHolder {
     
-    private static final Logger LOGGER = LoggerFactory.getLogger(HttpClientManager.class);
+    private static final Logger LOGGER = LoggerFactory.getLogger(HttpClientBeanHolder.class);
     
     private static final Map<String, NacosRestTemplate> SINGLETON_REST = new HashMap<String, NacosRestTemplate>(10);
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDataChangeEvent.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.config.server.utils.event.EventDispatcher.Event;
+import com.alibaba.nacos.common.notify.Event;
 import org.apache.commons.lang3.StringUtils;
 
 /**
  * ConfigDataChangeEvent.
  *
  * @author Nacos
  */
-public class ConfigDataChangeEvent implements Event {
+public class ConfigDataChangeEvent extends Event {
     
     public final boolean isBeta;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/LocalDataChangeEvent.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.config.server.utils.event.EventDispatcher.Event;
+import com.alibaba.nacos.common.notify.Event;
 
 import java.util.List;
 
@@ -25,7 +25,7 @@
  *
  * @author Nacos
  */
-public class LocalDataChangeEvent implements Event {
+public class LocalDataChangeEvent extends Event {
     
     public final String groupKey;
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigChangePublisher.java
Patch:
@@ -16,9 +16,9 @@
 
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.config.server.utils.event.EventDispatcher;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 
 /**
@@ -30,13 +30,14 @@ public class ConfigChangePublisher {
     
     /**
      * Notify ConfigChange.
+     *
      * @param event ConfigDataChangeEvent instance.
      */
     public static void notifyConfigChange(ConfigDataChangeEvent event) {
         if (PropertyUtil.isEmbeddedStorage() && !ApplicationUtils.getStandaloneMode()) {
             return;
         }
-        EventDispatcher.fireEvent(event);
+        NotifyCenter.publishEvent(event);
     }
     
 }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/NotifyTaskQueueMonitorTask.java
Patch:
@@ -17,8 +17,7 @@
 package com.alibaba.nacos.config.server.monitor;
 
 import com.alibaba.nacos.config.server.service.notify.AsyncNotifyService;
-
-import java.util.concurrent.ScheduledThreadPoolExecutor;
+import com.alibaba.nacos.config.server.utils.ConfigExecutor;
 
 import static com.alibaba.nacos.config.server.utils.LogUtil.MEMORY_LOG;
 
@@ -37,7 +36,7 @@ public class NotifyTaskQueueMonitorTask implements Runnable {
     
     @Override
     public void run() {
-        int size = ((ScheduledThreadPoolExecutor) notifySingleService.getExecutor()).getQueue().size();
+        int size = ConfigExecutor.asyncNotifyQueueSize();
         MEMORY_LOG.info("toNotifyTaskSize = {}", size);
         MetricsMonitor.getNotifyTaskMonitor().set(size);
     }

File: common/src/main/java/com/alibaba/nacos/common/notify/NotifyCenter.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.notify;
 
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.exception.runtime.NacosRuntimeException;
 import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
@@ -310,8 +309,7 @@ public static EventPublisher registerToSharePublisher(final Class<? extends Slow
      * @param eventType    class Instances type of the event type.
      * @param queueMaxSize the publisher's queue max size.
      */
-    public static EventPublisher registerToPublisher(final Class<? extends Event> eventType, final int queueMaxSize)
-            throws NacosException {
+    public static EventPublisher registerToPublisher(final Class<? extends Event> eventType, final int queueMaxSize) {
         if (ClassUtils.isAssignableFrom(SlowEvent.class, eventType)) {
             return INSTANCE.sharePublisher;
         }

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -20,8 +20,8 @@
 import com.alibaba.nacos.common.executor.NameThreadFactory;
 import com.alibaba.nacos.common.executor.ThreadPoolManager;
 import com.alibaba.nacos.common.http.HttpClientManager;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.file.WatchFileCenter;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.InetUtils;

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.distributed;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.consistency.Config;
 import com.alibaba.nacos.consistency.ap.APProtocol;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
@@ -25,7 +26,6 @@
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import org.springframework.beans.factory.DisposableBean;
@@ -49,7 +49,7 @@
 @SuppressWarnings("all")
 @Component(value = "ProtocolManager")
 @DependsOn("serverMemberManager")
-public class ProtocolManager implements ApplicationListener<ContextStartedEvent>, DisposableBean, MemberChangeListener {
+public class ProtocolManager extends MemberChangeListener implements ApplicationListener<ContextStartedEvent>, DisposableBean {
     
     private CPProtocol cpProtocol;
     
@@ -85,7 +85,7 @@ private static Set<String> toCPMembersInfo(Collection<Member> members) {
     @PostConstruct
     public void init() {
         this.memberManager = memberManager;
-        NotifyCenter.registerSubscribe(this);
+        NotifyCenter.registerSubscriber(this);
     }
     
     public CPProtocol getCpProtocol() {

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.LoggerUtils;
@@ -30,7 +31,6 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftUtils;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alipay.sofa.jraft.Closure;
 import com.alipay.sofa.jraft.Iterator;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftErrorEvent.java
Patch:
@@ -16,15 +16,15 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.common.notify.Event;
 
 /**
  * The RAFT protocol runs an exception event. If this event is published, it means that the current raft Group cannot
  * continue to run normally
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class RaftErrorEvent implements Event {
+public class RaftErrorEvent extends Event {
     
     private static final long serialVersionUID = 3016514657754158167L;
     

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftEvent.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 import java.util.Collections;
 import java.util.List;
@@ -27,7 +27,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public class RaftEvent implements SlowEvent {
+public class RaftEvent extends SlowEvent {
     
     private static final long serialVersionUID = -4304258594602886451L;
     

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.core.notify.NotifyCenter;
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.NotifyCenter;
+import com.alibaba.nacos.common.notify.SlowEvent;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -229,7 +229,7 @@ public static boolean isIP(String str) {
      * {@link com.alibaba.nacos.core.cluster.ServerMemberManager} is listener.
      */
     @SuppressWarnings({"PMD.ClassNamingShouldBeCamelRule", "checkstyle:AbbreviationAsWordInName"})
-    public static class IPChangeEvent implements SlowEvent {
+    public static class IPChangeEvent extends SlowEvent {
         
         private String oldIp;
         

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.naming.cluster;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
@@ -54,7 +54,7 @@
  * @deprecated 1.3.0 This object will be deleted sometime after version 1.3.0
  */
 @Component("serverListManager")
-public class ServerListManager implements MemberChangeListener {
+public class ServerListManager extends MemberChangeListener {
     
     private static final String LOCALHOST_SITE = UtilsAndCommons.UNKNOWN_SITE;
     
@@ -69,7 +69,7 @@ public class ServerListManager implements MemberChangeListener {
     public ServerListManager(final SwitchDomain switchDomain, final ServerMemberManager memberManager) {
         this.switchDomain = switchDomain;
         this.memberManager = memberManager;
-        NotifyCenter.registerSubscribe(this);
+        NotifyCenter.registerSubscriber(this);
         this.servers = new ArrayList<>(memberManager.allMembers());
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -16,12 +16,12 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -53,7 +53,7 @@
  */
 @Component
 @DependsOn("ProtocolManager")
-public class RaftPeerSet implements MemberChangeListener {
+public class RaftPeerSet extends MemberChangeListener {
     
     private final ServerMemberManager memberManager;
     
@@ -75,7 +75,7 @@ public RaftPeerSet(ServerMemberManager memberManager) {
     
     @PostConstruct
     public void init() {
-        NotifyCenter.registerSubscribe(this);
+        NotifyCenter.registerSubscriber(this);
         changePeers(memberManager.allMembers());
     }
     

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -16,12 +16,12 @@
 
 package com.alibaba.nacos.naming.core;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.NodeState;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
@@ -40,7 +40,7 @@
  * @author nkorange
  */
 @Component("distroMapper")
-public class DistroMapper implements MemberChangeListener {
+public class DistroMapper extends MemberChangeListener {
     
     /**
      * List of service nodes, you must ensure that the order of healthyList is the same for all nodes.
@@ -65,7 +65,7 @@ public List<String> getHealthyList() {
      */
     @PostConstruct
     public void init() {
-        NotifyCenter.registerSubscribe(this);
+        NotifyCenter.registerSubscriber(this);
         this.healthyList = MemberUtils.simpleMembers(memberManager.allMembers());
     }
     

File: test/src/test/java/com/alibaba/nacos/test/common/NacosAsyncRestTemplate_ITCase.java
Patch:
@@ -41,7 +41,6 @@
  * NacosAsyncRestTemplate_ITCase
  *
  * @author mai.jh
- * @date 2020/5/29
  */
 @SuppressWarnings("all")
 @FixMethodOrder(MethodSorters.JVM)

File: test/src/test/java/com/alibaba/nacos/test/common/NacosRestTemplate_ITCase.java
Patch:
@@ -46,7 +46,6 @@
  *  NacosRestTemplate_ITCase
  *
  * @author mai.jh
- * @date 2020/5/30
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},

File: common/src/main/java/com/alibaba/nacos/common/http/HttpRestResult.java
Patch:
@@ -33,8 +33,8 @@ public class HttpRestResult<T> extends RestResult<T> {
     public HttpRestResult() {
     }
     
-    public HttpRestResult(Header header, int code, T data) {
-        super(code, data);
+    public HttpRestResult(Header header, int code, T data, String message) {
+        super(code, message, data);
         this.header = header;
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.Objects;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.event.DerbyImportEvent;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -30,7 +31,6 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.auth.ActionTypes;
 import com.alibaba.nacos.core.auth.Secured;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDumpEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.common.notify.Event;
 
 /**
  * ConfigDumpEvent.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class ConfigDumpEvent implements Event {
+public class ConfigDumpEvent extends Event {
     
     private static final long serialVersionUID = -8776888606458370294L;
     
@@ -222,7 +222,7 @@ public ConfigDumpEventBuilder lastModifiedTs(long lastModifiedTs) {
             this.lastModifiedTs = lastModifiedTs;
             return this;
         }
-    
+        
         /**
          * Build a configDumpEvent.
          *

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/DerbyImportEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 /**
  * Data import event.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class DerbyImportEvent implements SlowEvent {
+public class DerbyImportEvent extends SlowEvent {
     
     private static final long serialVersionUID = 3299565864352399053L;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/DerbyLoadEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 /**
  * DerbyLoadEvent.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class DerbyLoadEvent implements SlowEvent {
+public class DerbyLoadEvent extends SlowEvent {
     
     public static final DerbyLoadEvent INSTANCE = new DerbyLoadEvent();
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDbErrorEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 /**
  * RaftDBErrorEvent.
  *
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
-public class RaftDbErrorEvent implements SlowEvent {
+public class RaftDbErrorEvent extends SlowEvent {
     
     private static final long serialVersionUID = 101591819161802336L;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDbErrorRecoverEvent.java
Patch:
@@ -17,14 +17,14 @@
 package com.alibaba.nacos.config.server.model.event;
 
 import com.alibaba.nacos.common.JustForTest;
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.common.notify.Event;
 
 /**
  * RaftDBErrorRecoverEvent.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @JustForTest
-public class RaftDbErrorRecoverEvent implements Event {
+public class RaftDbErrorRecoverEvent extends Event {
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.config.server.service.repository.embedded;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.DerbyLoadEvent;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -27,7 +28,6 @@
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.enums.FileTypeEnum;
@@ -48,7 +49,6 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
-import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.google.common.base.Joiner;
 import com.google.common.collect.Lists;
 import org.apache.commons.collections.CollectionUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.common.utils.Objects;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.event.DerbyImportEvent;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -30,7 +31,6 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.auth.ActionTypes;
 import com.alibaba.nacos.core.auth.Secured;
-import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDumpEvent.java
Patch:
@@ -222,7 +222,7 @@ public ConfigDumpEventBuilder lastModifiedTs(long lastModifiedTs) {
             this.lastModifiedTs = lastModifiedTs;
             return this;
         }
-    
+        
         /**
          * Build a configDumpEvent.
          *

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.config.server.service.repository.embedded;
 
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.model.event.DerbyLoadEvent;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
@@ -27,7 +28,6 @@
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -21,6 +21,8 @@
 import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.notify.Event;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.common.notify.listener.Subscriber;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
@@ -54,8 +56,6 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.common.notify.Event;
-import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.GenericType;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.enums.FileTypeEnum;
@@ -48,7 +49,6 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
-import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.google.common.base.Joiner;
 import com.google.common.collect.Lists;
 import org.apache.commons.collections.CollectionUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -30,7 +30,7 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.auth.ActionTypes;
 import com.alibaba.nacos.core.auth.Secured;
-import com.alibaba.nacos.core.notify.NotifyCenter;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDumpEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.common.notify.Event;
 
 /**
  * ConfigDumpEvent.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class ConfigDumpEvent implements Event {
+public class ConfigDumpEvent extends Event {
     
     private static final long serialVersionUID = -8776888606458370294L;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/DerbyImportEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 /**
  * Data import event.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class DerbyImportEvent implements SlowEvent {
+public class DerbyImportEvent extends SlowEvent {
     
     private static final long serialVersionUID = 3299565864352399053L;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/DerbyLoadEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 /**
  * DerbyLoadEvent.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class DerbyLoadEvent implements SlowEvent {
+public class DerbyLoadEvent extends SlowEvent {
     
     public static final DerbyLoadEvent INSTANCE = new DerbyLoadEvent();
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDbErrorEvent.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.SlowEvent;
+import com.alibaba.nacos.common.notify.SlowEvent;
 
 /**
  * RaftDBErrorEvent.
  *
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
-public class RaftDbErrorEvent implements SlowEvent {
+public class RaftDbErrorEvent extends SlowEvent {
     
     private static final long serialVersionUID = 101591819161802336L;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDbErrorRecoverEvent.java
Patch:
@@ -17,14 +17,14 @@
 package com.alibaba.nacos.config.server.model.event;
 
 import com.alibaba.nacos.common.JustForTest;
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.common.notify.Event;
 
 /**
  * RaftDBErrorRecoverEvent.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @JustForTest
-public class RaftDbErrorRecoverEvent implements Event {
+public class RaftDbErrorRecoverEvent extends Event {
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java
Patch:
@@ -23,15 +23,15 @@
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.service.SwitchService;
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
-import com.alibaba.nacos.core.notify.Event;
-import com.alibaba.nacos.core.notify.listener.Subscribe;
+import com.alibaba.nacos.common.notify.Event;
+import com.alibaba.nacos.common.notify.listener.Subscriber;
 
 /**
  * Dump config subscriber.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class DumpConfigHandler implements Subscribe<ConfigDumpEvent> {
+public class DumpConfigHandler extends Subscriber<ConfigDumpEvent> {
     
     /**
      * trigger config dump event.

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -27,7 +27,7 @@
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
 import com.alibaba.nacos.core.utils.DiskUtils;
-import com.alibaba.nacos.core.notify.NotifyCenter;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;
 import com.alipay.sofa.jraft.util.CRC64;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -48,7 +48,7 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
-import com.alibaba.nacos.core.notify.NotifyCenter;
+import com.alibaba.nacos.common.notify.NotifyCenter;
 import com.google.common.base.Joiner;
 import com.google.common.collect.Lists;
 import org.apache.commons.collections.CollectionUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -45,7 +45,7 @@ public class ExternalDataSourceProperties {
     
     public static final int DEFAULT_MAX_POOL_SIZE = 20;
     
-    public static final int DEFAULT_MINIMUM_IDLE = 50;
+    public static final int DEFAULT_MINIMUM_IDLE = 20;
     
     private Integer num;
     

File: client/src/test/java/com/alibaba/nacos/client/ConfigTest.java
Patch:
@@ -27,7 +27,6 @@
 import org.junit.Ignore;
 import org.junit.Test;
 
-import java.util.Objects;
 import java.util.Properties;
 import java.util.Scanner;
 

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDbErrorRecoverEvent.java
Patch:
@@ -24,8 +24,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-@SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 @JustForTest
-public class RaftDBErrorRecoverEvent implements Event {
+public class RaftDbErrorRecoverEvent implements Event {
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/PrintMemoryTask.java
Patch:
@@ -22,6 +22,8 @@
 import static com.alibaba.nacos.config.server.utils.LogUtil.MEMORY_LOG;
 
 /**
+ * Print memory task.
+ *
  * @author zongtanghu
  */
 public class PrintMemoryTask implements Runnable {

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/DataSourceService.java
Patch:
@@ -66,9 +66,9 @@ public interface DataSourceService {
     /**
      * Get current db url.
      *
-     * @return
+     * @return database url
      */
-    String getCurrentDBUrl();
+    String getCurrentDbUrl();
     
     /**
      * Get heath information.

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceProperties.java
Patch:
@@ -117,13 +117,13 @@ List<HikariDataSource> build(Environment environment, Callback<HikariDataSource>
         return dataSources;
     }
     
-    interface Callback<DataSource> {
+    interface Callback<D> {
         
         /**
          * Perform custom logic.
          *
-         * @param dataSource dataSource.
+         * @param datasource dataSource.
          */
-        void accept(DataSource dataSource);
+        void accept(D datasource);
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -175,7 +175,7 @@ public TransactionTemplate getTransactionTemplate() {
     }
     
     @Override
-    public String getCurrentDBUrl() {
+    public String getCurrentDbUrl() {
         DataSource ds = this.jt.getDataSource();
         if (ds == null) {
             return StringUtils.EMPTY;

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -186,7 +186,7 @@ public TransactionTemplate getTransactionTemplate() {
     }
     
     @Override
-    public String getCurrentDBUrl() {
+    public String getCurrentDbUrl() {
         return "jdbc:derby:" + ApplicationUtils.getNacosHome() + File.separator + derbyBaseDir + ";create=true";
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/task/DumpTask.java
Patch:
@@ -69,7 +69,6 @@ public void merge(AbstractTask task) {
     
     final String tag;
     
-    
     public String getGroupKey() {
         return groupKey;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -174,7 +174,7 @@ public TransactionTemplate getTransactionTemplate() {
     
     @SuppressWarnings("checkstyle:AbbreviationAsWordInName")
     public String getCurrentDBUrl() {
-        return this.dataSourceService.getCurrentDBUrl();
+        return this.dataSourceService.getCurrentDbUrl();
     }
     
     public DatabaseOperate getDatabaseOperate() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -166,7 +166,7 @@ public TransactionTemplate getTransactionTemplate() {
     
     @SuppressWarnings("checkstyle:AbbreviationAsWordInName")
     public String getCurrentDBUrl() {
-        return this.dataSourceService.getCurrentDBUrl();
+        return this.dataSourceService.getCurrentDbUrl();
     }
     
     @Override

File: example/src/main/java/com/alibaba/nacos/example/App.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.example;
 
 import java.util.Properties;
@@ -22,7 +23,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 
 /**
- * Hello world!
+ * Hello world.
  *
  * @author xxc
  */

File: example/src/main/java/com/alibaba/nacos/example/ConfigExample.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.example;
 
 import java.util.Properties;
@@ -24,7 +25,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 
 /**
- * Config service example
+ * Config service example.
  *
  * @author Nacos
  */

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/CollectionTypes.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.istio.mcp;
 
-
 /**
  * The collection types supported by Nacos.
  *

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -106,7 +106,7 @@ private Object logClientRequest(String requestType, ProceedingJoinPoint pjp, Htt
         final long rt = System.currentTimeMillis() - st;
         // rt | status | requestIp | opType | dataId | group | datumId | md5 |
         // appName
-        LogUtil.clientLog
+        LogUtil.CLIENT_LOG
                 .info("{}|{}|{}|{}|{}|{}|{}|{}|{}", rt, retVal, requestIp, requestType, dataId, group, tenant, md5,
                         appName);
         return retVal;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImpl.java
Patch:
@@ -78,7 +78,7 @@ public Page<PermissionInfo> getPermissions(String role, int pageNo, int pageSize
             return pageInfo;
             
         } catch (CannotGetJdbcConnectionException e) {
-            LogUtil.fatalLog.error("[db-error] " + e.toString(), e);
+            LogUtil.FATAL_LOG.error("[db-error] " + e.toString(), e);
             throw e;
         }
     }
@@ -97,7 +97,7 @@ public void addPermission(String role, String resource, String action) {
         try {
             jt.update(sql, role, resource, action);
         } catch (CannotGetJdbcConnectionException e) {
-            LogUtil.fatalLog.error("[db-error] " + e.toString(), e);
+            LogUtil.FATAL_LOG.error("[db-error] " + e.toString(), e);
             throw e;
         }
     }
@@ -115,7 +115,7 @@ public void deletePermission(String role, String resource, String action) {
         try {
             jt.update(sql, role, resource, action);
         } catch (CannotGetJdbcConnectionException e) {
-            LogUtil.fatalLog.error("[db-error] " + e.toString(), e);
+            LogUtil.FATAL_LOG.error("[db-error] " + e.toString(), e);
             throw e;
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/filter/NacosWebFilter.java
Patch:
@@ -27,7 +27,7 @@
 import javax.servlet.ServletResponse;
 import java.io.IOException;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.defaultLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.DEFAULT_LOG;
 
 /**
  * Web encode filter.
@@ -66,7 +66,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
         try {
             chain.doFilter(request, response);
         } catch (IOException | ServletException ioe) {
-            defaultLog.debug("Filter catch exception, " + ioe.toString(), ioe);
+            DEFAULT_LOG.debug("Filter catch exception, " + ioe.toString(), ioe);
             throw ioe;
         }
     }

File: config/src/main/java/com/alibaba/nacos/config/server/manager/TaskManager.java
Patch:
@@ -39,7 +39,7 @@
  */
 public final class TaskManager implements TaskManagerMBean {
     
-    private static final Logger LOGGER = LogUtil.defaultLog;
+    private static final Logger LOGGER = LogUtil.DEFAULT_LOG;
     
     private final ConcurrentHashMap<String, AbstractTask> tasks = new ConcurrentHashMap<String, AbstractTask>();
     
@@ -62,7 +62,7 @@ public void run() {
                     Thread.sleep(100);
                     TaskManager.this.process();
                 } catch (Throwable e) {
-                    LogUtil.dumpLog.error("execute dump process has error : {}", e);
+                    LogUtil.DUMP_LOG.error("execute dump process has error : {}", e);
                 }
             }
         }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/NotifyTaskQueueMonitorTask.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.util.concurrent.ScheduledThreadPoolExecutor;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.memoryLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.MEMORY_LOG;
 
 /**
  * NotifyTaskQueueMonitorTask.
@@ -38,7 +38,7 @@ public class NotifyTaskQueueMonitorTask implements Runnable {
     @Override
     public void run() {
         int size = ((ScheduledThreadPoolExecutor) notifySingleService.getExecutor()).getQueue().size();
-        memoryLog.info("toNotifyTaskSize = {}", size);
+        MEMORY_LOG.info("toNotifyTaskSize = {}", size);
         MetricsMonitor.getNotifyTaskMonitor().set(size);
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/PrintGetConfigResponeTask.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.monitor;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.memoryLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.MEMORY_LOG;
 
 /**
  * PrintGetConfigResponeTask.
@@ -26,7 +26,7 @@
 public class PrintGetConfigResponeTask implements Runnable {
     @Override
     public void run() {
-        memoryLog.info(ResponseMonitor.getStringForPrint());
+        MEMORY_LOG.info(ResponseMonitor.getStringForPrint());
     }
     
 }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/PrintMemoryTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.service.ClientTrackService;
 import com.alibaba.nacos.config.server.service.ConfigCacheService;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.memoryLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.MEMORY_LOG;
 
 /**
  * @author zongtanghu
@@ -31,7 +31,7 @@ public void run() {
         int groupCount = ConfigCacheService.groupCount();
         int subClientCount = ClientTrackService.subscribeClientCount();
         long subCount = ClientTrackService.subscriberCount();
-        memoryLog.info("groupCount = {}, subscriberClientCount = {}, subscriberCount = {}", groupCount, subClientCount,
+        MEMORY_LOG.info("groupCount = {}, subscriberClientCount = {}, subscriberCount = {}", groupCount, subClientCount,
                 subCount);
         MetricsMonitor.getConfigCountMonitor().set(groupCount);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllBetaProcessor.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.defaultLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.DEFAULT_LOG;
 
 /**
  * Dump all beta processor.
@@ -55,13 +55,13 @@ public boolean process(String taskType, AbstractTask task) {
                     boolean result = ConfigCacheService
                             .dumpBeta(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getContent(),
                                     cf.getLastModified(), cf.getBetaIps());
-                    LogUtil.dumpLog.info("[dump-all-beta-ok] result={}, {}, {}, length={}, md5={}", result,
+                    LogUtil.DUMP_LOG.info("[dump-all-beta-ok] result={}, {}, {}, length={}, md5={}", result,
                             GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(),
                             cf.getContent().length(), cf.getMd5());
                 }
                 
                 actualRowCount += page.getPageItems().size();
-                defaultLog.info("[all-dump-beta] {} / {}", actualRowCount, rowCount);
+                DEFAULT_LOG.info("[all-dump-beta] {} / {}", actualRowCount, rowCount);
             }
         }
         return true;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllProcessor.java
Patch:
@@ -31,7 +31,7 @@
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.defaultLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.DEFAULT_LOG;
 
 /**
  * Dump all processor.
@@ -74,11 +74,11 @@ public boolean process(String taskType, AbstractTask task) {
                     
                     final String content = cf.getContent();
                     final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
-                    LogUtil.dumpLog.info("[dump-all-ok] {}, {}, length={}, md5={}",
+                    LogUtil.DUMP_LOG.info("[dump-all-ok] {}, {}, length={}, md5={}",
                             GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(), content.length(),
                             md5);
                 }
-                defaultLog.info("[all-dump] {} / {}", lastMaxId, currentMaxId);
+                DEFAULT_LOG.info("[all-dump] {} / {}", lastMaxId, currentMaxId);
             } else {
                 lastMaxId += PAGE_SIZE;
             }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/processor/DumpAllTagProcessor.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 
-import static com.alibaba.nacos.config.server.utils.LogUtil.defaultLog;
+import static com.alibaba.nacos.config.server.utils.LogUtil.DEFAULT_LOG;
 
 /**
  * Dump all tag processor.
@@ -54,13 +54,13 @@ public boolean process(String taskType, AbstractTask task) {
                     boolean result = ConfigCacheService
                             .dumpTag(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getTag(), cf.getContent(),
                                     cf.getLastModified());
-                    LogUtil.dumpLog.info("[dump-all-Tag-ok] result={}, {}, {}, length={}, md5={}", result,
+                    LogUtil.DUMP_LOG.info("[dump-all-Tag-ok] result={}, {}, {}, length={}, md5={}", result,
                             GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(),
                             cf.getContent().length(), cf.getMd5());
                 }
                 
                 actualRowCount += page.getPageItems().size();
-                defaultLog.info("[all-dump-tag] {} / {}", actualRowCount, rowCount);
+                DEFAULT_LOG.info("[all-dump-tag] {} / {}", actualRowCount, rowCount);
             }
         }
         return true;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/StandaloneDatabaseOperateImpl.java
Patch:
@@ -60,7 +60,7 @@ protected void init() {
         DataSourceService dataSourceService = DynamicDataSource.getInstance().getDataSource();
         jdbcTemplate = dataSourceService.getJdbcTemplate();
         transactionTemplate = dataSourceService.getTransactionTemplate();
-        LogUtil.defaultLog.info("use StandaloneDatabaseOperateImpl");
+        LogUtil.DEFAULT_LOG.info("use StandaloneDatabaseOperateImpl");
     }
     
     @Override
@@ -120,7 +120,7 @@ public CompletableFuture<RestResult<String>> dataImport(File file) {
                 return RestResult.<String>builder()
                         .withCode(BooleanUtils.and(results.toArray(new Boolean[0])) ? 200 : 500).withData("").build();
             } catch (Throwable ex) {
-                LogUtil.defaultLog.error("An exception occurred when external data was imported into Derby : {}", ex);
+                LogUtil.DEFAULT_LOG.error("An exception occurred when external data was imported into Derby : {}", ex);
                 return RestResultUtils.failed(ex.getMessage());
             }
         });

File: config/src/main/java/com/alibaba/nacos/config/server/utils/AppNameUtils.java
Patch:
@@ -21,7 +21,7 @@
 import java.io.File;
 
 /**
- * App util
+ * App util.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DerbyUtils.java
Patch:
@@ -20,6 +20,8 @@
 import java.util.regex.Pattern;
 
 /**
+ * Derby util.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public final class DerbyUtils {
@@ -30,7 +32,7 @@ public final class DerbyUtils {
     
     /**
      * Because Derby's database table name is uppercase, you need to do a conversion to the insert statement that was
-     * inserted
+     * inserted.
      *
      * @param sql external database insert sql
      * @return derby insert sql

File: config/src/main/java/com/alibaba/nacos/config/server/utils/JSONUtils.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.config.server.utils;
 
-
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -26,11 +25,11 @@
 
 
 /**
- * json util
+ * Json util.
  *
  * @author Nacos
  */
-@SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
+@SuppressWarnings({"PMD.ClassNamingShouldBeCamelRule", "checkstyle:AbbreviationAsWordInName"})
 public class JSONUtils {
     
     static ObjectMapper mapper = new ObjectMapper();

File: config/src/main/java/com/alibaba/nacos/config/server/utils/Protocol.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.utils;
 
 /**
- * 用来处理协议相关的操作
+ * Used to handle protocol-related operations.
  *
  * @author zhidao
  * @version 1.0 2011/05/03
@@ -27,7 +27,7 @@ public class Protocol {
     /**
      * 解析类于2.0.4(major.minor.bug-fix这样的版本为数字)
      *
-     * @param version
+     * @param version version
      * @return
      */
     public static int getVersionNumber(String version) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/StatConstants.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.utils;
 
 /**
- * Stat constant
+ * Stat constant.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/utils/TimeUtils.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.Calendar;
 
 /**
- * Time util
+ * Time util.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/utils/TraceLogUtil.java
Patch:
@@ -20,19 +20,19 @@
 import org.slf4j.LoggerFactory;
 
 /**
- * Trace Util
+ * Trace util.
  *
  * @author Nacos
  */
 public class TraceLogUtil {
     
     /**
-     * 记录server各个接口的请求记录
+     * Record requests for each interface of the Server.
      */
     public static Logger requestLog = LoggerFactory.getLogger("com.alibaba.nacos.config.request");
     
     /**
-     * 记录各个client的轮询请求记录
+     * Record polling request records for each client.
      */
     public static Logger pollingLog = LoggerFactory.getLogger("com.alibaba.nacos.config.polling");
     

File: config/src/main/java/com/alibaba/nacos/config/server/utils/UrlAnalysisUtils.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.regex.Pattern;
 
 /**
- * 分析url的工具类
+ * Url util.
  *
  * @author leiwen.zh
  */

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -169,14 +169,14 @@ private void registerClusterEvent() {
         NotifyCenter.registerSubscribe(new Subscribe<InetUtils.IPChangeEvent>() {
             @Override
             public void onEvent(InetUtils.IPChangeEvent event) {
-                String oldAddress = event.getOldIp() + ":" + port;
                 String newAddress = event.getNewIp() + ":" + port;
                 ServerMemberManager.this.localAddress = newAddress;
                 ApplicationUtils.setLocalAddress(localAddress);
-                
+    
                 Member self = ServerMemberManager.this.self;
                 self.setIp(event.getNewIp());
-                
+    
+                String oldAddress = event.getOldIp() + ":" + port;
                 ServerMemberManager.this.serverList.remove(oldAddress);
                 ServerMemberManager.this.serverList.put(newAddress, self);
                 

File: core/src/main/java/com/alibaba/nacos/core/notify/DefaultPublisher.java
Patch:
@@ -27,7 +27,6 @@
 import java.util.concurrent.ArrayBlockingQueue;
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.Executor;
-import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
 
 import static com.alibaba.nacos.core.notify.NotifyCenter.RING_BUFFER_SIZE;
@@ -85,6 +84,7 @@ public synchronized void start() {
         }
     }
     
+    @Override
     public long currentEventSize() {
         return queue.size();
     }

File: core/src/main/java/com/alibaba/nacos/core/utils/DiskUtils.java
Patch:
@@ -96,7 +96,7 @@ public static void touch(File file) throws IOException {
      * {@code Path} is associated with the same {@code FileSystem} as the given
      * directory.
      *
-     * <p> The details as to how the name of the file is constructed is
+     * <p>The details as to how the name of the file is constructed is
      * implementation dependent and therefore not specified. Where possible
      * the {@code prefix} and {@code suffix} are used to construct candidate
      * names in the same manner as the {@link
@@ -452,7 +452,7 @@ public static void decompress(final String sourceFile, final String outputDir, f
      * to free internal resources. This can be done by calling the
      * {@link org.apache.commons.io.LineIterator#close()} or
      * {@link org.apache.commons.io.LineIterator#closeQuietly(org.apache.commons.io.LineIterator)} method.
-     * <p>
+     * </p>
      * The recommended usage pattern is:
      * <pre>
      * LineIterator it = FileUtils.lineIterator(file, "UTF-8");
@@ -468,6 +468,7 @@ public static void decompress(final String sourceFile, final String outputDir, f
      * <p>
      * If an exception occurs during the creation of the iterator, the
      * underlying stream is closed.
+     * </p>
      *
      * @param file  the file to open for input, must not be <code>null</code>
      * @param encoding  the encoding to use, <code>null</code> means platform default

File: istio/src/main/java/com/alibaba/nacos/istio/IstioApp.java
Patch:
@@ -13,13 +13,16 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.istio;
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
+ * Istio starter.
+ *
  * @author nkorange
  * @since 1.1.4
  */

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/CollectionTypes.java
Patch:
@@ -13,16 +13,17 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.istio.mcp;
 
 
 /**
- * The collection types supported by Nacos
+ * The collection types supported by Nacos.
  *
  * @author nkorange
  * @since 1.1.4
  */
 public class CollectionTypes {
-
+    
     public static final String SERVICE_ENTRY = "istio/networking/v1alpha3/serviceentries";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/KeyBuilder.java
Patch:
@@ -81,8 +81,8 @@ public static boolean matchServiceMetaKey(String key, String namespaceId, String
     }
     
     public static boolean matchSwitchKey(String key) {
-        return key.endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME) ||
-                key.endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME + UtilsAndCommons.RAFT_CACHE_FILE_SUFFIX);
+        return key.endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME) || key
+                .endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME + UtilsAndCommons.RAFT_CACHE_FILE_SUFFIX);
     }
     
     public static boolean matchServiceName(String key, String namespaceId, String serviceName) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -29,7 +29,6 @@
 import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.JsonNode;
-
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
 
@@ -128,8 +127,8 @@ public synchronized Datum load(String key) throws Exception {
                 Loggers.RAFT.warn("warning: encountered directory in cache dir: {}", cache.getAbsolutePath());
             }
             
-            if (!StringUtils.equals(cache.getName(), encodeDatumKey(key)) &&
-                    !StringUtils.equals(cache.getName(), encodeDatumKey(key) + RAFT_CACHE_FILE_SUFFIX)) {
+            if (!StringUtils.equals(cache.getName(), encodeDatumKey(key)) && !StringUtils
+                    .equals(cache.getName(), encodeDatumKey(key) + RAFT_CACHE_FILE_SUFFIX)) {
                 continue;
             }
             

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/DynamicDataSource.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 
 /**
- * datasource adapter
+ * Datasource adapter.
  *
  * @author Nacos
  */

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -362,6 +362,8 @@ public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         NAMING_LOGGER.info("{} do shutdown begin", className);
         ThreadUtils.shutdownThreadPool(executor, NAMING_LOGGER);
+        pushReceiver.shutdown();
+        failoverReactor.shutdown();
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.manager.AbstractTask;
 
 /**
- * Notify task
+ * Notify task.
  *
  * @author Nacos
  */
@@ -77,7 +77,7 @@ public void setLastModified(long lastModified) {
     
     @Override
     public void merge(AbstractTask task) {
-        // 进行merge, 但什么都不做, 相同的dataId和group的任务，后来的会代替之前的
+        // Perform merge, but do nothing, tasks with the same dataId and group, later will replace the previous
         
     }
     

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/ModifyRequest.java
Patch:
@@ -20,7 +20,7 @@
 import java.util.Arrays;
 
 /**
- * Represents a database UPDATE or INSERT or DELETE statement
+ * Represents a database UPDATE or INSERT or DELETE statement.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -33,6 +33,6 @@ public interface HttpHeaderConsts {
     String CONTENT_ENCODING = "Content-Encoding";
     String CONNECTION = "Connection";
     String REQUEST_ID = "RequestId";
-    String REQUEST_MODULE = "REQUEST_MODULE";
+    String REQUEST_MODULE = "Request-Module";
     
 }

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -118,7 +118,7 @@ public static void shutdownThreadPool(ExecutorService executor, Logger logger) {
         while (retry > 0) {
             retry--;
             try {
-                if (executor.awaitTermination(10, TimeUnit.SECONDS)) {
+                if (executor.awaitTermination(1, TimeUnit.SECONDS)) {
                     return;
                 }
             } catch (InterruptedException e) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PaginationHelper.java
Patch:
@@ -20,6 +20,8 @@
 import org.springframework.jdbc.core.RowMapper;
 
 /**
+ * Pagination Utils interface.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.AbstractMethodOrInterfaceMethodMustUseJavadocRule")

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -45,6 +45,8 @@
 import javax.sql.DataSource;
 
 /**
+ * Derby Snapshot operation.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class DerbySnapshotOperation implements SnapshotOperation {

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DistributedDatabaseOperateImpl.java
Patch:
@@ -85,6 +85,8 @@
 import java.util.stream.Collectors;
 
 /**
+ * Distributed Database Operate.
+ *
  * <pre>
  *                   ┌────────────────────┐
  *               ┌──▶│   PersistService   │
@@ -123,7 +125,7 @@
  *       4:execute result    └───────────────┘    └─────────────────────┘   │
  *               │                   │                       ▲              │
  *               │                   │                       │              │
- *               │                   │                  3:onApply         2:submit(List<ModifyRequest>)
+ *               │                   │                  3:onApply         2:submit(List&lt;ModifyRequest&gt;)
  *               │                   │                       │              │
  *               │                   ▼                       │              │
  *               │           ┌──────────────┐                │              │

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -480,7 +480,7 @@ public ListView<String> getServiceList(int pageNo, int pageSize, String groupNam
         String result = reqApi(UtilAndComs.nacosUrlBase + "/service/list", params, HttpMethod.GET);
         
         JsonNode json = JacksonUtils.toObj(result);
-        ListView<String> listView = new ListView<>();
+        ListView<String> listView = new ListView<String>();
         listView.setCount(json.get("count").asInt());
         listView.setData(JacksonUtils.toObj(json.get("doms").toString(), new TypeReference<List<String>>() {
         }));

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -128,7 +128,7 @@ public boolean login(String server) {
         
         if (StringUtils.isNotBlank(username)) {
             Map<String, String> params = new HashMap<String, String>(2);
-            Map<String, String> bodyMap = new HashMap<>(2);
+            Map<String, String> bodyMap = new HashMap<String, String>(2);
             params.put("username", username);
             bodyMap.put("password", password);
             String url = "http://" + server + contextPath + LOGIN_URL;

File: client/src/test/java/com/alibaba/nacos/client/ConfigTest.java
Patch:
@@ -56,7 +56,7 @@ public static void test() throws Exception {
         boolean result = configService.publishConfig(dataId, group, content);
         Assert.assertTrue(result);
         
-        ThreadUtils.sleep(10_000);
+        ThreadUtils.sleep(10000L);
         
         String response = configService.getConfigAndSignListener(dataId, group, 5000, new AbstractListener() {
             @Override
@@ -70,7 +70,7 @@ public void receiveConfigInfo(String configInfo) {
         System.out.println("input content");
         while (scanner.hasNextLine()) {
             String s = scanner.next();
-            if (Objects.equals("exit", s)) {
+            if ("exit".equals(s)) {
                 scanner.close();
                 return;
             }

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -52,13 +52,13 @@ public void testServiceList() throws Exception {
         NamingService namingService = NacosFactory.createNamingService(properties);
         namingService.registerInstance("nacos.test.1", instance);
         
-        ThreadUtils.sleep(5_000L);
+        ThreadUtils.sleep(5000L);
         
         List<Instance> list = namingService.getAllInstances("nacos.test.1");
         
         System.out.println(list);
         
-        ThreadUtils.sleep(30_000L);
+        ThreadUtils.sleep(30000L);
         //        ExpressionSelector expressionSelector = new ExpressionSelector();
         //        expressionSelector.setExpression("INSTANCE.metadata.registerSource = 'dubbo'");
         //        ListView<String> serviceList = namingService.getServicesOfServer(1, 10, expressionSelector);

File: config/src/main/java/com/alibaba/nacos/config/server/controller/parameters/SameNamespaceCloneConfigBean.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.config.server.controller.parameters;
 
 /**
+ * SameNamespaceCloneConfigBean.
+ *
  * @author klw(213539 @ qq.com)
- * @ClassName: SameNamespaceCloneConfigBean
- * @Description: 同namespace克隆接口的配制bean
  * @date 2019/12/13 16:10
  */
 public class SameNamespaceCloneConfigBean {

File: config/src/main/java/com/alibaba/nacos/config/server/exception/NJdbcException.java
Patch:
@@ -19,6 +19,8 @@
 import org.springframework.dao.DataAccessException;
 
 /**
+ * NJdbcException.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")

File: config/src/main/java/com/alibaba/nacos/config/server/exception/NacosConfigException.java
Patch:
@@ -17,6 +17,8 @@
 package com.alibaba.nacos.config.server.exception;
 
 /**
+ * NacosConfigException.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class NacosConfigException extends RuntimeException {

File: config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java
Patch:
@@ -45,7 +45,7 @@
 
 /**
  * If the embedded distributed storage is enabled, all requests are routed to the Leader node for processing, and the
- * maximum number of forwards for a single request cannot exceed three
+ * maximum number of forwards for a single request cannot exceed three.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */

File: config/src/main/java/com/alibaba/nacos/config/server/manager/TaskManagerMBean.java
Patch:
@@ -17,15 +17,15 @@
 package com.alibaba.nacos.config.server.manager;
 
 /**
- * tasks
+ * TaskManagerMBean.
  *
  * @author Nacos
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public interface TaskManagerMBean {
     
     /**
-     * get task info
+     * Get task info.
      *
      * @return info
      */

File: config/src/main/java/com/alibaba/nacos/config/server/model/AclInfo.java
Patch:
@@ -20,12 +20,12 @@
 import java.util.List;
 
 /**
- * acl info
+ * Acl info.
  *
  * @author Nacos
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
-public class ACLInfo implements Serializable {
+public class AclInfo implements Serializable {
     
     private static final long serialVersionUID = 1383026926036269457L;
     

File: config/src/main/java/com/alibaba/nacos/config/server/model/AuthType.java
Patch:
@@ -17,13 +17,13 @@
 package com.alibaba.nacos.config.server.model;
 
 /**
- * auth type
+ * Auth type.
  *
  * @author Nacos
  */
 public enum AuthType {
     /**
-     * auth type
+     * Auth type.
      */
     GROUP,
     GROUP_DATAID,

File: config/src/main/java/com/alibaba/nacos/config/server/model/CacheItem.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.Map;
 
 /**
- * cache item
+ * Cache item.
  *
  * @author Nacos
  */
@@ -125,7 +125,7 @@ public void setType(String type) {
     public volatile long lastModifiedTs;
     
     /**
-     * use for beta
+     * Use for beta.
      */
     public volatile boolean isBeta = false;
     
@@ -142,5 +142,4 @@ public void setType(String type) {
     public SimpleReadWriteLock rwLock = new SimpleReadWriteLock();
     
     public String type;
-    
 }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigAdvanceInfo.java
Patch:
@@ -19,7 +19,7 @@
 import java.io.Serializable;
 
 /**
- * Config advance info
+ * Config advance info.
  *
  * @author Nacos
  */
@@ -126,5 +126,4 @@ public String getConfigTags() {
     public void setConfigTags(String configTags) {
         this.configTags = configTags;
     }
-    
 }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfo.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.model;
 
 /**
- * 配置信息类
+ * ConfigInfo.
  *
  * @author boyan
  * @date 2010-5-4
@@ -33,7 +33,6 @@ public class ConfigInfo extends ConfigInfoBase {
     private String type;
     
     public ConfigInfo() {
-    
     }
     
     public ConfigInfo(String dataId, String group, String content) {

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoAggr.java
Patch:
@@ -22,7 +22,7 @@
 import java.io.Serializable;
 
 /**
- * 聚合前的配置信息类
+ * ConfigInfoAggr.
  *
  * @author leiwen.zh
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBetaWrapper.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.model;
 
 /**
+ * ConfigInfoBetaWrapper.
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class ConfigInfoBetaWrapper extends ConfigInfo4Beta {

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoChanged.java
Patch:
@@ -19,7 +19,7 @@
 import java.io.Serializable;
 
 /**
- * 变化的配置信息, 聚合时使用
+ * ConfigInfoChanged.
  *
  * @author leiwen.zh
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoTagWrapper.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.model;
 
 /**
+ * ConfigInfoTagWrapper.
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class ConfigInfoTagWrapper extends ConfigInfo4Tag {

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoWrapper.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.model;
 
 /**
- * ConfigInfo Wrapper
+ * ConfigInfo Wrapper.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/GroupInfo.java
Patch:
@@ -22,7 +22,7 @@
 import java.io.Serializable;
 
 /**
- * group info
+ * GroupInfo.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/HistoryContext.java
Patch:
@@ -19,7 +19,7 @@
 import java.io.Serializable;
 
 /**
- * history context
+ * HistoryContext.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/SameConfigPolicy.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.config.server.model;
 
 /**
+ * SameConfigPolicy.
+ *
  * @author klw
- * @ClassName: SameConfigPolicy
- * @Description: processing policy of the same configuration
  * @date 2019/5/21 10:55
  */
 public enum SameConfigPolicy {

File: config/src/main/java/com/alibaba/nacos/config/server/model/SubInfo.java
Patch:
@@ -20,7 +20,7 @@
 import java.sql.Timestamp;
 
 /**
- * sub 数据结构体
+ * SubInfo.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/TenantInfo.java
Patch:
@@ -19,7 +19,7 @@
 import java.io.Serializable;
 
 /**
- * tenant info
+ * TenantInfo.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/User.java
Patch:
@@ -19,7 +19,7 @@
 import java.io.Serializable;
 
 /**
- * user info
+ * User.
  *
  * @author wfnuser
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/ApplicationPublishRecord.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.model.app;
 
 /**
- * Application Publish Record
+ * ApplicationPublishRecord.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/GroupKey.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 
 /**
- * config key util
+ * GroupKey.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/model/capacity/Capacity.java
Patch:
@@ -23,7 +23,7 @@
 import java.sql.Timestamp;
 
 /**
- * Capacity
+ * Capacity.
  *
  * @author hexu.hxy
  * @date 2018/3/13

File: config/src/main/java/com/alibaba/nacos/config/server/model/capacity/GroupCapacity.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.model.capacity;
 
 /**
- * Group Capacity
+ * Group Capacity.
  *
  * @author hexu.hxy
  * @date 2018/3/13

File: config/src/main/java/com/alibaba/nacos/config/server/model/capacity/TenantCapacity.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.model.capacity;
 
 /**
- * Tenant Capacity
+ * Tenant Capacity.
  *
  * @author hexu.hxy
  * @date 2018/3/13

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/DerbyLoadEvent.java
Patch:
@@ -19,6 +19,8 @@
 import com.alibaba.nacos.core.notify.SlowEvent;
 
 /**
+ * DerbyLoadEvent.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class DerbyLoadEvent implements SlowEvent {

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorEvent.java
Patch:
@@ -19,6 +19,8 @@
 import com.alibaba.nacos.core.notify.SlowEvent;
 
 /**
+ * RaftDBErrorEvent.
+ *
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorRecoverEvent.java
Patch:
@@ -20,6 +20,8 @@
 import com.alibaba.nacos.core.notify.Event;
 
 /**
+ * RaftDBErrorRecoverEvent.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientIpWhiteList.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.config.server.service;
 
-import com.alibaba.nacos.config.server.model.ACLInfo;
+import com.alibaba.nacos.config.server.model.AclInfo;
 import com.alibaba.nacos.config.server.utils.JSONUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
@@ -70,7 +70,7 @@ static public void load(String content) {
         }
         defaultLog.warn("[clientIpWhiteList] {}", content);
         try {
-            ACLInfo acl = (ACLInfo) JSONUtils.deserializeObject(content, ACLInfo.class);
+            AclInfo acl = (AclInfo) JSONUtils.deserializeObject(content, AclInfo.class);
             isOpen = acl.getIsOpen();
             CLIENT_IP_WHITELIST.set(acl.getIps());
         } catch (Exception ioe) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/ExternalDumpService.java
Patch:
@@ -25,6 +25,8 @@
 import javax.annotation.PostConstruct;
 
 /**
+ * External dump service.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @Conditional(ConditionOnExternalStorage.class)
@@ -33,7 +35,7 @@ public class ExternalDumpService extends DumpService {
     
     /**
      * Here you inject the dependent objects constructively, ensuring that some of the dependent functionality is
-     * initialized ahead of time
+     * initialized ahead of time.
      *
      * @param persistService {@link PersistService}
      * @param memberManager  {@link ServerMemberManager}

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDataTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.manager.AbstractTask;
 
 /**
- * 表示对数据进行聚合的任务。
+ * Represents the task of aggregating data.
  *
  * @author jiuRen
  */
@@ -36,7 +36,7 @@ class MergeDataTask extends AbstractTask {
         this.tag = tag;
         this.clientIp = clientIp;
         
-        // 聚合延迟
+        // aggregation delay
         setTaskInterval(DELAY);
         setLastProcessTime(System.currentTimeMillis());
     }

File: config/src/main/java/com/alibaba/nacos/config/server/Config.java
Patch:
@@ -21,7 +21,7 @@
 import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
- * Config main
+ * Config main.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ConfigResourceParser.java
Patch:
@@ -24,7 +24,7 @@
 import org.apache.commons.lang3.StringUtils;
 
 /**
- * Config resource parser
+ * Config resource parser.
  *
  * @author nkorange
  * @since 1.2.0

File: config/src/main/java/com/alibaba/nacos/config/server/auth/PermissionPersistService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.model.Page;
 
 /**
- * Permission CRUD service
+ * Permission CRUD service.
  *
  * @author nkorange
  * @since 1.2.0

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RoleInfo.java
Patch:
@@ -19,7 +19,7 @@
 import java.io.Serializable;
 
 /**
- * Role Info
+ * Role Info.
  *
  * @author nkorange
  * @since 1.2.0

File: config/src/main/java/com/alibaba/nacos/config/server/auth/RolePersistService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.model.Page;
 
 /**
- * Role CRUD service
+ * Role CRUD service.
  *
  * @author nkorange
  * @since 1.2.0

File: config/src/main/java/com/alibaba/nacos/config/server/auth/UserPersistService.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.config.server.model.User;
 
 /**
- * User CRUD service
+ * User CRUD service.
  *
  * @author nkorange
  * @since 1.2.0

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionOnEmbeddedStorage.java
Patch:
@@ -22,6 +22,8 @@
 import org.springframework.core.type.AnnotatedTypeMetadata;
 
 /**
+ * Judge whether to user EmbeddedStorage by condition.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class ConditionOnEmbeddedStorage implements Condition {

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionOnExternalStorage.java
Patch:
@@ -22,6 +22,8 @@
 import org.springframework.core.type.AnnotatedTypeMetadata;
 
 /**
+ * Judge whether to user ExternalStorage by condition.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class ConditionOnExternalStorage implements Condition {

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionStandaloneEmbedStorage.java
Patch:
@@ -23,7 +23,8 @@
 import org.springframework.core.type.AnnotatedTypeMetadata;
 
 /**
- * when embeddedStorage==false
+ * Judge whether to user StandaloneEmbedStorage by condition.
+ * When embeddedStorage==false.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -123,6 +123,7 @@ public RestResult<Object> derbyOps(@RequestParam(value = "sql") String sql) {
     
     /**
      * // TODO the front page should appear operable The external data source is imported into derby.
+     *
      * <p>mysqldump --defaults-file="XXX" --host=0.0.0.0 --protocol=tcp --user=XXX --extended-insert=FALSE \
      * --complete-insert=TRUE \ --skip-triggers --no-create-info --skip-column-statistics "{SCHEMA}" "{TABLE_NAME}"
      *

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -29,7 +29,7 @@
 import javax.annotation.PostConstruct;
 
 /**
- * health service
+ * Health service.
  *
  * @author Nacos
  */

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.Map;
 
 /**
- * Config longpolling
+ * Config longpolling.
  *
  * @author Nacos
  */
@@ -49,7 +49,7 @@ public ListenerController(ConfigSubService configSubService) {
     }
     
     /**
-     * 获取客户端订阅配置信息
+     * Get subscribe information from client side.
      */
     @GetMapping
     public GroupkeyListenserStatus getAllSubClientConfigByIp(@RequestParam("ip") String ip,
@@ -69,7 +69,7 @@ public GroupkeyListenserStatus getAllSubClientConfigByIp(@RequestParam("ip") Str
                         configMd5Status.put(config.getKey(), config.getValue());
                     }
                 } else {
-                    // 默认值获取公共配置，如果想看所有配置，要加all
+                    // Get common config default value, if want to get all config, you need to add "all".
                     if (all) {
                         configMd5Status.put(config.getKey(), config.getValue());
                     } else {

File: address/src/main/java/com/alibaba/nacos/address/AddressServer.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.address;
 
 import org.springframework.boot.SpringApplication;
@@ -26,8 +27,9 @@
  */
 @SpringBootApplication(scanBasePackages = "com.alibaba.nacos")
 public class AddressServer {
+    
     public static void main(String[] args) {
-
+        
         SpringApplication.run(AddressServer.class, args);
     }
 }

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtils.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.utils;
 
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.NotThreadSafe;
 
 import java.util.Collection;
@@ -139,7 +138,7 @@ public static void putIfValNoEmpty(Map target, Object key, Object value) {
      */
     @NotThreadSafe
     public static Object computeIfAbsent(Map target, Object key, BiFunction mappingFunction, Object param1,
-            Object param2) throws NacosException {
+            Object param2) {
         
         Objects.requireNonNull(key, "key");
         Objects.requireNonNull(key, "mappingFunction");

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -106,7 +106,7 @@ public DistroConsistencyServiceImpl(DistroMapper distroMapper, DataStore dataSto
     
     @PostConstruct
     public void init() {
-        GlobalExecutor.submit(loadDataTask);
+        GlobalExecutor.submitLoadDataTask(loadDataTask);
         GlobalExecutor.submitDistroNotifyTask(notifier);
     }
     
@@ -117,7 +117,7 @@ public void run() {
             try {
                 load();
                 if (!initialized) {
-                    GlobalExecutor.submit(this, globalConfig.getLoadDataRetryDelayMillis());
+                    GlobalExecutor.submitLoadDataTask(this, globalConfig.getLoadDataRetryDelayMillis());
                 } else {
                     Loggers.DISTRO.info("load data success");
                 }

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
 
 /**
  * @author nkorange
@@ -61,7 +62,7 @@ public void testServiceList() throws Exception {
 
         System.out.println(list);
 
-        ThreadUtils.sleep(60_000L);
+        ThreadUtils.sleep(30_000L);
 //        ExpressionSelector expressionSelector = new ExpressionSelector();
 //        expressionSelector.setExpression("INSTANCE.metadata.registerSource = 'dubbo'");
 //        ListView<String> serviceList = namingService.getServicesOfServer(1, 10, expressionSelector);

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedPermissionPersistServiceImpl.java
Patch:
@@ -18,9 +18,9 @@
 
 import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.repository.EmbeddedStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
-import com.alibaba.nacos.config.server.service.repository.DatabaseOperate;
+import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedRolePersistServiceImpl.java
Patch:
@@ -18,9 +18,9 @@
 
 import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.repository.EmbeddedStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
-import com.alibaba.nacos.config.server.service.repository.DatabaseOperate;
+import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedUserPersistServiceImpl.java
Patch:
@@ -19,9 +19,9 @@
 import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.config.server.service.repository.EmbeddedStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
-import com.alibaba.nacos.config.server.service.repository.DatabaseOperate;
+import com.alibaba.nacos.config.server.service.repository.embedded.DatabaseOperate;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Conditional;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.config.server.configuration.ConditionOnExternalStorage;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.repository.ExternalStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImpl.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.config.server.configuration.ConditionOnExternalStorage;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.repository.ExternalStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalUserPersistServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.configuration.ConditionOnExternalStorage;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.model.User;
-import com.alibaba.nacos.config.server.service.repository.ExternalStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/DerbyLoadEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.repository;
+package com.alibaba.nacos.config.server.model.event;
 
 import com.alibaba.nacos.core.notify.SlowEvent;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/DerbySnapshotOperation.java
Patch:
@@ -14,8 +14,9 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.repository;
+package com.alibaba.nacos.config.server.service.repository.embedded;
 
+import com.alibaba.nacos.config.server.model.event.DerbyLoadEvent;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.datasource.LocalDataSourceServiceImpl;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/embedded/EmbeddedPaginationHelperImpl.java
Patch:
@@ -13,9 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.config.server.service.repository;
+package com.alibaba.nacos.config.server.service.repository.embedded;
 
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import java.util.List;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -14,9 +14,10 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.repository;
+package com.alibaba.nacos.config.server.service.repository.extrnal;
 
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.utils.ApplicationUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/extrnal/ExternalStoragePersistServiceImpl.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.repository;
+package com.alibaba.nacos.config.server.service.repository.extrnal;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.utils.MD5Utils;
@@ -40,6 +40,8 @@
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
+import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.ParamUtils;
 import com.google.common.base.Joiner;

File: consistency/src/main/java/com/alibaba/nacos/consistency/ProtocolMetaData.java
Patch:
@@ -188,4 +188,4 @@ void setData(Object data) {
             }
         }
     }
-}
\ No newline at end of file
+}

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigDerbyRaft_DITCase.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorRecoverEvent;
-import com.alibaba.nacos.config.server.service.repository.EmbeddedStoragePersistServiceImpl;
+import com.alibaba.nacos.config.server.service.repository.embedded.EmbeddedStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;

File: test/src/test/java/com/alibaba/nacos/test/core/BaseClusterTest.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.common.http.NSyncHttpClient;
 import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
-import com.alibaba.nacos.config.server.service.repository.DistributedDatabaseOperateImpl;
+import com.alibaba.nacos.config.server.service.repository.embedded.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.notify.Event;

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberMetaDataConstants.java
Patch:
@@ -39,6 +39,8 @@ public class MemberMetaDataConstants {
     public static final String VERSION = "version";
     
     public static final String[] META_KEY_LIST = new String[] {SITE_KEY, AD_WEIGHT, RAFT_PORT, WEIGHT,
-                                                               LAST_REFRESH_TIME, VERSION};
+            LAST_REFRESH_TIME, VERSION};
     
+    public static final String[] META_KEY_LIST_WITHOUT_LAST_REFRESH_TIME = new String[] {SITE_KEY, AD_WEIGHT, RAFT_PORT,
+            WEIGHT, VERSION};
 }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -213,7 +213,7 @@ public Object listDetail(@RequestParam(required = false) boolean withInstances,
         ObjectNode result = JacksonUtils.createEmptyJsonNode();
         
         List<Service> services = new ArrayList<>();
-        
+        final int total = serviceManager.getPagedService(namespaceId, pageNo - 1, pageSize, param, containedInstance, services, hasIpCount);
         if (CollectionUtils.isEmpty(services)) {
             result.replace("serviceList", JacksonUtils.transferToJsonNode(Collections.emptyList()));
             result.put("count", 0);
@@ -232,8 +232,6 @@ public Object listDetail(@RequestParam(required = false) boolean withInstances,
             serviceViews.add(serviceView);
         }
         
-        int total = serviceManager
-                .getPagedService(namespaceId, pageNo - 1, pageSize, param, containedInstance, services, hasIpCount);
         result.replace("serviceList", JacksonUtils.transferToJsonNode(serviceViews));
         result.put("count", total);
         

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -139,7 +139,6 @@ public void onEvent(MembersChangeEvent event) {
         Collection<String> old = healthyList;
         healthyList = Collections.unmodifiableList(list);
         Loggers.SRV_LOG.info("[NACOS-DISTRO] healthy server list changed, old: {}, new: {}", old, healthyList);
-        old.clear();
     }
     
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/KeyBuilder.java
Patch:
@@ -81,7 +81,8 @@ public static boolean matchServiceMetaKey(String key, String namespaceId, String
     }
     
     public static boolean matchSwitchKey(String key) {
-        return key.endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME);
+        return key.endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME) ||
+                key.endsWith(UtilsAndCommons.SWITCH_DOMAIN_NAME + UtilsAndCommons.RAFT_CACHE_FILE_SUFFIX);
     }
     
     public static boolean matchServiceName(String key, String namespaceId, String serviceName) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -60,7 +60,7 @@ public class SwitchManager implements RecordListener<SwitchDomain> {
     public void init() {
         
         try {
-            consistencyService.listen(UtilsAndCommons.getSwitchDomainKey(), this);
+            consistencyService.listen(KeyBuilder.getSwitchDomainKey(), this);
         } catch (NacosException e) {
             Loggers.SRV_LOG.error("listen switch service failed.", e);
         }
@@ -79,7 +79,7 @@ public void update(String entry, String value, boolean debug) throws Exception {
         lock.lock();
         try {
             
-            Datum datum = consistencyService.get(UtilsAndCommons.getSwitchDomainKey());
+            Datum datum = consistencyService.get(KeyBuilder.getSwitchDomainKey());
             SwitchDomain switchDomain;
             
             if (datum != null && datum.value != null) {
@@ -291,7 +291,7 @@ public void update(String entry, String value, boolean debug) throws Exception {
             if (debug) {
                 update(switchDomain);
             } else {
-                consistencyService.put(UtilsAndCommons.getSwitchDomainKey(), switchDomain);
+                consistencyService.put(KeyBuilder.getSwitchDomainKey(), switchDomain);
             }
             
         } finally {

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -137,7 +137,8 @@ public boolean equals(Object o) {
     
     @Override
     public String toString() {
-        return "Member{" + "address='" + getAddress() + '\'' + '}';
+        return "Member{" + "ip='" + ip + '\'' + ", port=" + port + ", state=" + state + ", extendInfo=" + extendInfo
+                + '}';
     }
     
     @Override

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberChangeListener.java
Patch:
@@ -24,16 +24,16 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public interface MemberChangeListener extends Subscribe<MemberChangeEvent> {
+public interface MemberChangeListener extends Subscribe<MembersChangeEvent> {
     
     /**
      * return NodeChangeEvent.class info.
      *
-     * @return {@link MemberChangeEvent#getClass()}
+     * @return {@link MembersChangeEvent#getClass()}
      */
     @Override
     default Class<? extends Event> subscribeType() {
-        return MemberChangeEvent.class;
+        return MembersChangeEvent.class;
     }
     
     /**

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -134,7 +134,7 @@ public RestResult<String> report(@RequestBody Member node) {
     @PostMapping(value = "/switch/lookup")
     public RestResult<String> switchLookup(@RequestParam(name = "type") String type) {
         try {
-            memberManager.swithLookup(type);
+            memberManager.switchLookup(type);
             return RestResultUtils.success();
         } catch (Throwable ex) {
             return RestResultUtils.failed(ex.getMessage());

File: core/src/main/java/com/alibaba/nacos/core/file/WatchFileCenter.java
Patch:
@@ -82,7 +82,7 @@ public void run() {
     /**
      * Register {@link FileWatcher} in this directory.
      *
-     * @param paths directory
+     * @param paths   directory
      * @param watcher {@link FileWatcher}
      * @return register is success
      * @throws NacosException NacosException
@@ -142,7 +142,7 @@ public static void shutdown() {
     /**
      * Deregister {@link FileWatcher} in this directory.
      *
-     * @param path directory
+     * @param path    directory
      * @param watcher {@link FileWatcher}
      * @return deregister is success
      */

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
-import com.alibaba.nacos.core.cluster.MemberChangeEvent;
+import com.alibaba.nacos.core.cluster.MembersChangeEvent;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.NodeState;
@@ -87,7 +87,7 @@ public void init() {
      */
     public boolean contains(String serverAddress) {
         for (Member server : getServers()) {
-            if (Objects.equals(server, server.getAddress())) {
+            if (Objects.equals(serverAddress, server.getAddress())) {
                 return true;
             }
         }
@@ -99,7 +99,7 @@ public List<Member> getServers() {
     }
     
     @Override
-    public void onEvent(MemberChangeEvent event) {
+    public void onEvent(MembersChangeEvent event) {
         this.servers = new ArrayList<>(event.getMembers());
     }
     

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.client.naming.net;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.common.http.client.NacosRestTemplate;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
@@ -35,7 +36,9 @@
 
 /**
  * @author nkorange
+ * @deprecated Use NacosRestTemplate{@link NacosRestTemplate} unified http client
  */
+@Deprecated
 public class HttpClient {
 
     public static final int READ_TIME_OUT_MILLIS = Integer

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpMethod.java
Patch:
@@ -193,7 +193,7 @@ public void initEntity(Object body, String mediaType) throws Exception {
      * @throws Exception exception
      */
     public void initFromEntity(Map<String, String> body, String charset) throws Exception {
-        if (body.isEmpty()) {
+        if (body == null || body.isEmpty()) {
             return;
         }
         List<NameValuePair> params = new ArrayList<NameValuePair>(body.size());

File: common/src/main/java/com/alibaba/nacos/common/http/client/HttpClientResponse.java
Patch:
@@ -26,7 +26,6 @@
  * Represents a client-side HTTP response.
  *
  * @author mai.jh
- * @date 2020/5/23
  */
 public interface HttpClientResponse extends Closeable {
     

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -74,7 +74,7 @@ public void init() throws Exception {
     }
 
     @After
-    public void destroy() {
+    public void destroy() throws Exception{
         NamingBase.destoryServer(port);
     }
 

File: core/src/main/java/com/alibaba/nacos/core/file/WatchFileCenter.java
Patch:
@@ -276,4 +276,4 @@ private static void checkState() {
             throw new IllegalStateException("WatchFileCenter already shutdown");
         }
     }
-}
\ No newline at end of file
+}

File: consistency/src/main/java/com/alibaba/nacos/consistency/ap/APProtocol.java
Patch:
@@ -20,6 +20,8 @@
 import com.alibaba.nacos.consistency.ConsistencyProtocol;
 
 /**
+ * ap protocol.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")

File: consistency/src/main/java/com/alibaba/nacos/consistency/ap/LogProcessor4AP.java
Patch:
@@ -19,8 +19,11 @@
 import com.alibaba.nacos.consistency.LogProcessor;
 
 /**
+ * log processor for ap.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
 public abstract class LogProcessor4AP extends LogProcessor {
+
 }

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthSystemTypes.java
Patch:
@@ -17,15 +17,15 @@
 package com.alibaba.nacos.core.auth;
 
 /**
- * Types of all auth implementations
+ * Types of all auth implementations.
  *
  * @author nkorange
  * @since 1.2.0
  */
 public enum AuthSystemTypes {
-
+    
     /**
-     * Nacos builtin auth system
+     * Nacos builtin auth system.
      */
     NACOS
 }

File: core/src/main/java/com/alibaba/nacos/core/auth/DefaultResourceParser.java
Patch:
@@ -13,18 +13,19 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.core.auth;
 
 import org.apache.commons.lang3.StringUtils;
 
 /**
- * Default resource parser
+ * Default resource parser.
  *
  * @author nkorange
  * @since 1.2.0
  */
 public class DefaultResourceParser implements ResourceParser {
-
+    
     @Override
     public String parseName(Object request) {
         return StringUtils.EMPTY;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/exception/DuplicateRaftGroupException.java
Patch:
@@ -17,14 +17,14 @@
 package com.alibaba.nacos.core.distributed.raft.exception;
 
 /**
- * Duplicate groupId when creating Raft Group throws this exception
+ * Duplicate groupId when creating Raft Group throws this exception.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class DuplicateRaftGroupException extends RuntimeException {
-
+    
     private static final long serialVersionUID = -6276695537457486790L;
-
+    
     public DuplicateRaftGroupException(String group) {
         super("The Raft Group [" + group + "] is already used");
     }

File: core/src/main/java/com/alibaba/nacos/core/notify/SlowEvent.java
Patch:
@@ -17,9 +17,10 @@
 package com.alibaba.nacos.core.notify;
 
 /**
- * this event share one event-queue
+ * this event share one event-queue.
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public interface SlowEvent extends Event {
+
 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -193,7 +193,7 @@ static private void setHeaders(HttpURLConnection conn, List<String> headers, Str
                 conn.addRequestProperty(iter.next(), iter.next());
             }
         }
-        conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.VERSION);
+        conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.version);
         conn.addRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=" + encoding);
 
         String ts = String.valueOf(System.currentTimeMillis());

File: client/src/main/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLogging.java
Patch:
@@ -72,7 +72,7 @@ public void loadConfiguration() {
 
     private Configuration loadConfiguration(LoggerContext loggerContext, String location) {
         try {
-            URL url = ResourceUtils.getResourceURL(location);
+            URL url = ResourceUtils.getResourceUrl(location);
             ConfigurationSource source = getConfigurationSource(url);
             // since log4j 2.7 getConfiguration(LoggerContext loggerContext, ConfigurationSource source)
             return ConfigurationFactory.getInstance().getConfiguration(loggerContext, source);

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -41,7 +41,7 @@ public void loadConfiguration() {
 
         try {
             LoggerContext loggerContext = (LoggerContext)StaticLoggerBinder.getSingleton().getLoggerFactory();
-            new ContextInitializer(loggerContext).configureByResource(ResourceUtils.getResourceURL(location));
+            new ContextInitializer(loggerContext).configureByResource(ResourceUtils.getResourceUrl(location));
         } catch (Exception e) {
             throw new IllegalStateException("Could not initialize Logback Nacos logging from " + location, e);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -528,7 +528,7 @@ private void injectSecurityInfo(Map<String, String> params) {
 
     public List<String> builderHeaders() {
         List<String> headers = Arrays.asList(
-            HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.VERSION,
+            HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.version,
             HttpHeaderConsts.USER_AGENT_HEADER, UtilAndComs.VERSION,
             "Accept-Encoding", "gzip,deflate,sdch",
             "Connection", "Keep-Alive",

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -22,7 +22,7 @@
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.VERSION;
+    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.version;
 
     public static String WEB_CONTEXT = "/nacos";
 

File: common/src/main/java/com/alibaba/nacos/common/JustForTest.java
Patch:
@@ -17,7 +17,10 @@
 package com.alibaba.nacos.common;
 
 /**
+ * Just for test.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public @interface JustForTest {
+
 }

File: common/src/main/java/com/alibaba/nacos/common/http/NHttpClient.java
Patch:
@@ -19,6 +19,8 @@
 import java.io.Closeable;
 
 /**
+ * Nacos http client interface.
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")

File: common/src/main/java/com/alibaba/nacos/common/utils/UuidUtils.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.alibaba.nacos.common.utils;
 
 import java.util.UUID;
@@ -21,7 +22,7 @@
  * @author nkorange
  */
 public class UuidUtils {
-
+    
     public static String generateUuid() {
         return UUID.randomUUID().toString();
     }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ConfigExecutor.java
Patch:
@@ -29,7 +29,7 @@
  */
 public final class ConfigExecutor {
 
-	private static final Executor DUMP_EXECUTOR = ExecutorFactory.newFixExecutorService(
+	private static final Executor DUMP_EXECUTOR = ExecutorFactory.newFixedExecutorService(
 			Config.class.getCanonicalName(),
 			1,
 			new NameThreadFactory("nacos.config.embedded.dump"));

File: consistency/src/main/java/com/alibaba/nacos/consistency/ProtocolMetaData.java
Patch:
@@ -40,7 +40,7 @@
 @SuppressWarnings("PMD.Rule:CollectionInitShouldAssignCapacityRule")
 public final class ProtocolMetaData {
 
-    private static final Executor EXECUTOR = ExecutorFactory.Managed.newFixExecutorService(
+    private static final Executor EXECUTOR = ExecutorFactory.Managed.newFixedExecutorService(
             ProtocolMetaData.class.getCanonicalName(),
             4,
             new NameThreadFactory("com.alibaba.nacos.consistency.protocol.metadata"));

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -41,7 +41,7 @@ public ResponseEntity serverState() {
                 ApplicationUtils.STANDALONE_MODE_ALONE : ApplicationUtils.STANDALONE_MODE_CLUSTER);
 
         serverState.put("function_mode", ApplicationUtils.getFunctionMode());
-        serverState.put("version", VersionUtils.VERSION);
+        serverState.put("version", VersionUtils.version);
 
         return ResponseEntity.ok().body(serverState);
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/RaftExecutor.java
Patch:
@@ -51,11 +51,11 @@ public static void init(RaftConfig config) {
 						"4"));
 
 		raftCoreExecutor = ExecutorFactory.Managed
-                .newFixExecutorService(OWNER, raftCoreThreadNum,
+                .newFixedExecutorService(OWNER, raftCoreThreadNum,
 				        new NameThreadFactory("com.alibaba.naocs.core.raft-core"));
 
 		raftCliServiceExecutor = ExecutorFactory.Managed
-				.newFixExecutorService(OWNER, raftCliServiceThreadNum,
+				.newFixedExecutorService(OWNER, raftCliServiceThreadNum,
 						new NameThreadFactory("com.alibaba.naocs.core.raft-cli-service"));
 
 		raftCommonExecutor = ExecutorFactory.Managed
@@ -66,7 +66,7 @@ public static void init(RaftConfig config) {
 		snapshotNum = snapshotNum == 0 ? raftCoreThreadNum : snapshotNum;
 
 		raftSnapshotExecutor = ExecutorFactory.Managed.
-                newFixExecutorService(OWNER, snapshotNum,
+                newFixedExecutorService(OWNER, snapshotNum,
 				        new NameThreadFactory("com.alibaba.naocs.core.raft-snapshot"));
 
 	}

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -617,7 +617,7 @@ private static void setHeaders(HttpURLConnection conn, List<String> headers, Str
         
         conn.addRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=" + encoding);
         conn.addRequestProperty("Accept-Charset", encoding);
-        conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.VERSION);
+        conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.version);
         conn.addRequestProperty(HttpHeaderConsts.USER_AGENT_HEADER, UtilsAndCommons.SERVER_VERSION);
         conn.addRequestProperty(HttpHeaderConsts.REQUEST_SOURCE_HEADER, ApplicationUtils.getLocalAddress());
     }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -74,7 +74,7 @@ public class UtilsAndCommons {
     
     public static final String NACOS_SERVER_HEADER = "Nacos-Server";
     
-    public static final String NACOS_VERSION = VersionUtils.VERSION;
+    public static final String NACOS_VERSION = VersionUtils.version;
     
     public static final String SUPER_TOKEN = "xy";
     

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -211,9 +211,9 @@ private void closeExecutor() {
 	private void logStarting() {
 		if (!ApplicationUtils.getStandaloneMode()) {
 
-			scheduledExecutorService = ExecutorFactory
-					.newSingleScheduledExecutorService(getClass().getCanonicalName(),
-							new NameThreadFactory("nacos-starting"));
+            scheduledExecutorService = ExecutorFactory
+                .newSingleScheduledExecutorService(
+                    new NameThreadFactory("com.alibaba.nacos.core.nacos-starting"));
 
 			scheduledExecutorService.scheduleWithFixedDelay(() -> {
 				if (starting) {

File: core/src/main/java/com/alibaba/nacos/core/utils/GlobalExecutor.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.common.executor.ExecutorFactory;
 import com.alibaba.nacos.common.executor.NameThreadFactory;
 import java.util.concurrent.ScheduledExecutorService;
@@ -27,8 +26,8 @@
  */
 public class GlobalExecutor {
 
-    private static final ScheduledExecutorService COMMON_EXECUTOR = ExecutorFactory.newScheduledExecutorService(
-            GlobalExecutor.class.getCanonicalName(),
+    private static final ScheduledExecutorService COMMON_EXECUTOR = ExecutorFactory.Managed.newScheduledExecutorService(
+            ClassUtils.getCanonicalName(GlobalExecutor.class),
             4,
             new NameThreadFactory("com.alibaba.nacos.core.common")
     );

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -30,5 +30,8 @@ public interface HttpHeaderConsts {
     String ACCEPT_CHARSET = "Accept-Charset";
     String ACCEPT_ENCODING = "Accept-Encoding";
     String CONTENT_ENCODING = "Content-Encoding";
+    String CONNECTION = "Connection";
+    String REQUEST_ID = "RequestId";
+    String REQUEST_MODULE = "REQUEST_MODULE";
 
 }

File: common/src/main/java/com/alibaba/nacos/common/http/handler/ResponseHandler.java
Patch:
@@ -58,7 +58,7 @@ public static <T> HttpRestResult<T> responseEntityExtractor(HttpClientResponse r
         String contentType = headers.getValue(HttpHeaderConsts.CONTENT_TYPE);
         InputStream body = response.getBody();
         T extractBody = null;
-        if (MediaType.APPLICATION_JSON.equals(contentType) && HttpStatus.SC_OK == response.getStatusCode()) {
+        if (contentType != null && contentType.startsWith(MediaType.APPLICATION_JSON) && HttpStatus.SC_OK == response.getStatusCode()) {
             extractBody = convert(body, type);
         }
         if (extractBody == null) {

File: test/src/test/java/com/alibaba/nacos/test/common/NacosAsyncRestTemplate_ITCase.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.http.Callback;
-import com.alibaba.nacos.common.http.HttpClientManager;
+import com.alibaba.nacos.common.http.HttpClientBeanHolder;
 import com.alibaba.nacos.common.http.HttpRestResult;
 import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;
 import com.alibaba.nacos.common.http.param.Header;
@@ -53,7 +53,7 @@ public class NacosAsyncRestTemplate_ITCase {
     @LocalServerPort
     private int port;
 
-    private NacosAsyncRestTemplate nacosRestTemplate = HttpClientManager.getNacosAsyncRestTemplate();
+    private NacosAsyncRestTemplate nacosRestTemplate = HttpClientBeanHolder.getNacosAsyncRestTemplate();
 
     private final String CONFIG_INSTANCE_PATH = "/nacos/v1/ns";
     private String IP = null;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -484,10 +484,9 @@ public void run() {
 
         public void sendBeat() throws IOException, InterruptedException {
             RaftPeer local = peers.local();
-            if (local.state != RaftPeer.State.LEADER && !ApplicationUtils.getStandaloneMode()) {
+            if (ApplicationUtils.getStandaloneMode() || local.state != RaftPeer.State.LEADER) {
                 return;
             }
-
             if (Loggers.RAFT.isDebugEnabled()) {
                 Loggers.RAFT.debug("[RAFT] send beat with {} keys.", datums.size());
             }
@@ -683,7 +682,8 @@ public Integer onCompleted(Response response) throws Exception {
                                 return 1;
                             }
 
-                            List<JsonNode> datumList = JacksonUtils.toObj(response.getResponseBody(), new TypeReference<List<JsonNode>>() {});
+                            List<JsonNode> datumList = JacksonUtils.toObj(response.getResponseBody(), new TypeReference<List<JsonNode>>() {
+                            });
 
                             for (JsonNode datumJson : datumList) {
                                 OPERATE_LOCK.lock();

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -34,7 +34,7 @@
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.ValidatorUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
 import java.io.IOException;

File: client/src/main/java/com/alibaba/nacos/client/config/common/GroupKey.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.config.common;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Synthesize the form of dataId+groupId. Escapes reserved characters in dataId and groupId.

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -27,13 +27,13 @@
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
+import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
-import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.math.NumberUtils;
 import org.slf4j.Logger;
 
 import java.io.IOException;
@@ -335,7 +335,7 @@ private void initAkSk(Properties properties) {
     }
 
     private void initMaxRetry(Properties properties) {
-        maxRetry = NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.MAX_RETRY)), Constants.MAX_RETRY);
+        maxRetry = ConvertUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.MAX_RETRY)), Constants.MAX_RETRY);
     }
 
     @Override

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.client.config.utils.SnapShotSwitch;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
 import java.io.File;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.client.identify.Base64;
 import com.alibaba.nacos.client.identify.CredentialService;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import javax.crypto.Mac;
 import javax.crypto.SecretKey;

File: client/src/main/java/com/alibaba/nacos/client/config/listener/impl/PropertiesListener.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.api.config.listener.AbstractListener;
 import com.alibaba.nacos.client.utils.LogUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
 import java.io.IOException;

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.utils.IPUtil;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.List;
 

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialService.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
 import java.util.concurrent.ConcurrentHashMap;

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialWatcher.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.identify;
 
 import com.alibaba.nacos.client.utils.LogUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
 import java.io.*;

File: client/src/main/java/com/alibaba/nacos/client/identify/STSConfig.java
Patch:
@@ -15,7 +15,8 @@
  */
 package com.alibaba.nacos.client.identify;
 
-import org.apache.commons.lang3.StringUtils;
+
+import com.alibaba.nacos.common.utils.StringUtils;
 
 /**
  * Sts config

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -19,7 +19,7 @@
 import ch.qos.logback.classic.util.ContextInitializer;
 import com.alibaba.nacos.client.logging.AbstractNacosLogging;
 import com.alibaba.nacos.common.utils.ResourceUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.impl.StaticLoggerBinder;
 
 /**

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -28,7 +28,7 @@
 import com.alibaba.nacos.client.naming.net.NamingProxy;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.utils.ValidatorUtils;
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.Map;
 import java.util.Properties;

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/DiskCache.java
Patch:
@@ -20,8 +20,7 @@
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.BufferedReader;
 import java.io.File;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -27,9 +27,8 @@
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
 import com.alibaba.nacos.common.lifecycle.Closeable;
 import com.alibaba.nacos.common.utils.JacksonUtils;
-
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
-import org.apache.commons.lang3.StringUtils;
 
 import java.util.HashSet;
 import java.util.Map;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -18,8 +18,8 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.google.common.net.HttpHeaders;
-import org.apache.commons.lang3.StringUtils;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -130,9 +130,9 @@ private static HttpResult getResult(HttpURLConnection conn) throws IOException {
             inputStream = new GZIPInputStream(inputStream);
         }
         HttpResult httpResult = new HttpResult(respCode, IoUtils.toString(inputStream, getCharset(conn)), respHeaders);
-        
+
         //InputStream from HttpURLConnection can be closed automatically,but new GZIPInputStream can't be closed automatically
-        //so needs to close it manually 
+        //so needs to close it manually
         if (inputStream instanceof GZIPInputStream) {
             inputStream.close();
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
-import org.apache.commons.lang3.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.net.InetAddress;
 import java.net.UnknownHostException;

File: client/src/main/java/com/alibaba/nacos/client/security/SecurityProxy.java
Patch:
@@ -20,10 +20,10 @@
 import com.alibaba.nacos.client.naming.net.HttpClient;
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.JacksonUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.fasterxml.jackson.databind.JsonNode;
 
 import org.apache.commons.codec.Charsets;
-import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -19,8 +19,8 @@
 import com.alibaba.nacos.api.SystemPropertyKeyConst;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
-import org.apache.commons.lang3.StringUtils;
 
 import java.io.InputStream;
 import java.util.Properties;

File: common/src/main/java/com/alibaba/nacos/common/executor/ThreadPoolManager.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.common.executor;
 
 
-import com.alibaba.nacos.common.utils.ShutdownUtils;
 import com.alibaba.nacos.common.utils.ThreadUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -27,7 +26,6 @@
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutorService;
-import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
@@ -53,7 +51,7 @@ public final class ThreadPoolManager {
 
     static {
         INSTANCE.init();
-		ShutdownUtils.addShutdownHook(new Thread(new Runnable() {
+		ThreadUtils.addShutdownHook(new Thread(new Runnable() {
             @Override
             public void run() {
 				LOGGER.warn("[ThreadPoolManager] Start destroying ThreadPool");

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpMethod.java
Patch:
@@ -16,17 +16,16 @@
 
 package com.alibaba.nacos.common.http;
 
-import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.common.http.handler.RequestHandler;
 import com.alibaba.nacos.common.http.param.Header;
-import com.alibaba.nacos.common.http.param.MediaType;
 import com.alibaba.nacos.common.utils.HttpMethod;
 
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import org.apache.commons.lang3.StringUtils;
+
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.apache.http.HttpEntity;
 import org.apache.http.HttpEntityEnclosingRequest;
 import org.apache.http.HttpRequest;

File: common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java
Patch:
@@ -20,8 +20,8 @@
 import com.alibaba.nacos.common.http.client.DefaultHttpClientRequest;
 import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;
 import com.alibaba.nacos.common.http.client.NacosRestTemplate;
-import com.alibaba.nacos.common.utils.ShutdownUtils;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.ThreadUtils;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.impl.client.HttpClients;
 import org.apache.http.impl.nio.client.HttpAsyncClients;
@@ -61,7 +61,7 @@ public class HttpClientManager {
 
 
 	static {
-		ShutdownUtils.addShutdownHook(new Runnable() {
+        ThreadUtils.addShutdownHook(new Runnable() {
 			@Override
 			public void run() {
 				shutdown();

File: common/src/main/java/com/alibaba/nacos/common/utils/ByteUtils.java
Patch:
@@ -19,7 +19,6 @@
 import java.nio.charset.Charset;
 
 import com.alibaba.nacos.api.common.Constants;
-import org.apache.commons.lang3.StringUtils;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: common/src/main/java/com/alibaba/nacos/common/utils/ExceptionUtil.java
Patch:
@@ -15,10 +15,7 @@
  */
 package com.alibaba.nacos.common.utils;
 
-import org.apache.commons.lang3.StringUtils;
-
 import java.io.ByteArrayOutputStream;
-import java.io.IOException;
 import java.io.PrintStream;
 
 /**

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.common.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-import org.apache.commons.lang3.StringUtils;
 
 import java.io.*;
 import java.net.HttpURLConnection;

File: core/src/main/java/com/alibaba/nacos/core/file/WatchFileCenter.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.executor.ExecutorFactory;
 import com.alibaba.nacos.common.executor.NameThreadFactory;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
-import com.alibaba.nacos.common.utils.ShutdownUtils;
+import com.alibaba.nacos.common.utils.ThreadUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -67,7 +67,7 @@ public class WatchFileCenter {
 	private static final AtomicBoolean CLOSED = new AtomicBoolean(false);
 
 	static {
-		ShutdownUtils.addShutdownHook(new Runnable() {
+        ThreadUtils.addShutdownHook(new Runnable() {
 			@Override
 			public void run() {
 				shutdown();

File: core/src/main/java/com/alibaba/nacos/core/notify/NotifyCenter.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.utils.ConcurrentHashSet;
-import com.alibaba.nacos.common.utils.ShutdownUtils;
+import com.alibaba.nacos.common.utils.ThreadUtils;
 import com.alibaba.nacos.core.notify.listener.SmartSubscribe;
 import com.alibaba.nacos.core.notify.listener.Subscribe;
 import org.slf4j.Logger;
@@ -93,7 +93,7 @@ public class NotifyCenter {
 		}
 
 		INSTANCE.sharePublisher = BUILD_FACTORY.apply(SlowEvent.class, SHATE_BUFFER_SIZE);
-		ShutdownUtils.addShutdownHook(new Thread(() -> {
+        ThreadUtils.addShutdownHook(new Thread(() -> {
 			shutdown();
 		}));
 

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -48,17 +48,17 @@ public class NacosNamingMaintainService implements NamingMaintainService {
 
     private NamingProxy serverProxy;
 
-    public NacosNamingMaintainService(String serverList) {
+    public NacosNamingMaintainService(String serverList) throws NacosException  {
         Properties properties = new Properties();
         properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
         init(properties);
     }
 
-    public NacosNamingMaintainService(Properties properties) {
+    public NacosNamingMaintainService(Properties properties) throws NacosException  {
         init(properties);
     }
 
-    private void init(Properties properties) {
+    private void init(Properties properties) throws NacosException  {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
         InitUtils.initSerialization();

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -73,17 +73,17 @@ public class NacosNamingService implements NamingService {
 
     private NamingProxy serverProxy;
 
-    public NacosNamingService(String serverList) {
+    public NacosNamingService(String serverList) throws NacosException {
         Properties properties = new Properties();
         properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
         init(properties);
     }
 
-    public NacosNamingService(Properties properties) {
+    public NacosNamingService(Properties properties) throws NacosException  {
         init(properties);
     }
 
-    private void init(Properties properties) {
+    private void init(Properties properties) throws NacosException  {
         ValidatorUtils.checkInitParam(properties);
         this.namespace = InitUtils.initNamespaceForNaming(properties);
         InitUtils.initSerialization();

File: config/src/test/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourcePropertiesTest.java
Patch:
@@ -31,7 +31,7 @@ public class ExternalDataSourcePropertiesTest {
     public static final String USERNAME = "nacos_devtest";
 
     @Test
-    public void external_datasource_normaly() {
+    public void external_datasource_normally() {
         HikariDataSource expectedDataSource = new HikariDataSource();
         expectedDataSource.setJdbcUrl(JDBC_URL);
         expectedDataSource.setUsername(USERNAME);

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerGeneratorManager.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/main/java/com/alibaba/nacos/address/component/AddressServerManager.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/main/java/com/alibaba/nacos/address/constant/AddressServerConstants.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/main/java/com/alibaba/nacos/address/controller/ServerListController.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/main/java/com/alibaba/nacos/address/misc/Loggers.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/main/java/com/alibaba/nacos/address/util/AddressServerParamCheckUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/test/java/com/alibaba/nacos/address/AddressServerControllerTests.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/test/java/com/alibaba/nacos/address/ParamCheckUtilTests.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: address/src/test/java/com/alibaba/nacos/address/SimpleHttpTestUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: api/src/main/java/com/alibaba/nacos/api/SystemPropertyKeyConst.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigType.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
- * Licensed under the Apache License, Version 2.0  = the "License"");
+ * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *

File: api/src/main/java/com/alibaba/nacos/api/config/PropertyChangeType.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
- * Licensed under the Apache License, Version 2.0  = the "License"");
+ * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/SignUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: client/src/main/java/com/alibaba/nacos/client/utils/TemplateUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: client/src/test/java/com/alibaba/nacos/client/ConfigTest.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.client;

File: client/src/test/java/com/alibaba/nacos/client/config/common/GroupKeyTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2019 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtils.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.common.utils;

File: common/src/test/java/com/alibaba/nacos/common/utils/MD5UtilsTest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright 1999-2019 Alibaba Group Holding Ltd.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDataChangeEvent.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.model.event;
 

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/ConfigDumpEvent.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.config.server.model.event;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/LocalDataChangeEvent.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.model.event;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/DataSourceService.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.service.datasource;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/DynamicDataSource.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.service.datasource;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/ExternalDataSourceServiceImpl.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.service.datasource;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.service.datasource;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.config.server.service.dump;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/RowMapperManager.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.config.server.service.repository;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/DiskUtil.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package com.alibaba.nacos.config.server.utils;
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/AbstractProcessor.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.core.distributed.raft.processor;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/processor/NacosGetRequestProcessor.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.core.distributed.raft.processor;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftOps.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.core.distributed.raft.utils;

File: core/src/main/java/com/alibaba/nacos/core/notify/DefaultPublisher.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.core.notify;

File: core/src/main/java/com/alibaba/nacos/core/notify/EventPublisher.java
Patch:
@@ -1,5 +1,4 @@
 /*
- *
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
@@ -13,7 +12,6 @@
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 
 package com.alibaba.nacos.core.notify;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/BaseRaftEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/LeaderElectFinishedEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/MakeLeaderEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/events/InstanceHeartbeatTimeoutEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: naming/src/main/java/com/alibaba/nacos/naming/push/ServiceChangeEvent.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2019 the original author or authors.
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: common/src/main/java/com/alibaba/nacos/common/http/param/MediaType.java
Patch:
@@ -35,6 +35,8 @@ private MediaType() {}
 
     public static final String APPLICATION_XML = "application/xml";
 
+    public static final String APPLICATION_JSON = "application/json";
+
     public static final String MULTIPART_FORM_DATA = "multipart/form-data";
 
     public static final String TEXT_HTML = "text/html";

File: common/src/main/java/com/alibaba/nacos/common/http/param/Query.java
Patch:
@@ -52,10 +52,11 @@ public Object getValue(String key) {
         return params.get(key);
     }
 
-    public void initParams(Map<String, String> params) {
+    public Query initParams(Map<String, String> params) {
         for (Map.Entry<String, String> entry : params.entrySet()) {
             addParam(entry.getKey(), entry.getValue());
         }
+        return this;
     }
 
     public void initParams(List<String> list) {

File: api/src/main/java/com/alibaba/nacos/api/NacosFactory.java
Patch:
@@ -97,5 +97,4 @@ public static NamingMaintainService createMaintainService(String serverAddr) thr
     public static NamingMaintainService createMaintainService(Properties properties) throws NacosException {
         return NamingMaintainFactory.createMaintainService(properties);
     }
-
 }

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java
Patch:
@@ -58,5 +58,4 @@ public static ConfigService createConfigService(String serverAddr) throws NacosE
         properties.put(PropertyKeyConst.SERVER_ADDR, serverAddr);
         return createConfigService(properties);
     }
-
 }

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -145,5 +145,4 @@ public String toString() {
 	public static final int OVER_THRESHOLD = 503;
 
 	public static final int RESOURCE_NOT_FOUND = -404;
-
 }

File: client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
+import com.alibaba.nacos.common.lifecycle.Closeable;
 
 import java.io.IOException;
 import java.util.List;
@@ -27,7 +28,8 @@
  *
  * @author Nacos
  */
-public interface HttpAgent {
+public interface HttpAgent extends Closeable {
+
     /**
      * start to get nacos ip list
      * @return Nothing.

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_CITCase.java
Patch:
@@ -72,7 +72,6 @@ public void setUp() throws Exception {
         properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1"+":"+port);
         properties.put(PropertyKeyConst.CONTEXT_PATH, "/nacos");
         iconfig = NacosFactory.createConfigService(properties);
-
         agent = new MetricsHttpAgent(new ServerHttpAgent(properties));
         agent.start();
     }
@@ -85,6 +84,7 @@ public void cleanup() throws Exception {
             result = agent.httpDelete(CONFIG_CONTROLLER_PATH + "/", null, params, agent.getEncode(), TIME_OUT);
             Assert.assertEquals(HttpURLConnection.HTTP_OK, result.code);
             Assert.assertTrue(JacksonUtils.toObj(result.content).get("data").booleanValue());
+            Assert.assertTrue(JacksonUtils.toObj(result.content).get("data").booleanValue());
         } catch (Exception e) {
             e.printStackTrace();
             Assert.fail();

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_CITCase.java
Patch:
@@ -90,7 +90,7 @@ public void setUp() throws Exception {
     }
 
     @After
-    public void cleanup(){
+    public void cleanup() throws Exception{
         HttpSimpleClient.HttpResult result;
         try {
             List<String> params2 = Arrays.asList("dataId", "testNoAppname1.yml", "group", "EXPORT_IMPORT_TEST_GROUP", "beta", "false");
@@ -119,6 +119,7 @@ public void cleanup(){
         } catch (Exception e) {
             Assert.fail();
         }
+        agent.shutdown();
     }
 
     @Test()

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_CITCase.java
Patch:
@@ -84,8 +84,6 @@ public void cleanup() throws Exception {
             result = agent.httpDelete(CONFIG_CONTROLLER_PATH + "/", null, params, agent.getEncode(), TIME_OUT);
             Assert.assertEquals(HttpURLConnection.HTTP_OK, result.code);
             Assert.assertTrue(JacksonUtils.toObj(result.content).get("data").booleanValue());
-            iconfig.shutDown();
-            agent.shutdown();
             Assert.assertTrue(JacksonUtils.toObj(result.content).get("data").booleanValue());
         } catch (Exception e) {
             e.printStackTrace();

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_CITCase.java
Patch:
@@ -37,9 +37,9 @@
 import java.util.concurrent.TimeUnit;
 
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
-public class ConfigLongPollReturnChanges_ITCase {
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7005"},
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+public class ConfigLongPollReturnChanges_CITCase {
 
     @LocalServerPort
     private int port;

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_CITCase.java
Patch:
@@ -39,9 +39,9 @@
  * @date 2019-06-07 22:24
  **/
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
-public class ConfigLongPoll_ITCase {
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7004"},
+        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+public class ConfigLongPoll_CITCase {
 
     @LocalServerPort
     private int port;

File: test/src/test/java/com/alibaba/nacos/test/config/EmbeddedStorageContextUtils_CITCase.java
Patch:
@@ -29,7 +29,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class EmbeddedStorageContextUtils_ITCase {
+public class EmbeddedStorageContextUtils_CITCase {
 
 	@Test
 	public void test_multi_thread_sql_contexts() throws Exception {

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/JwtTokenManager.java
Patch:
@@ -57,7 +57,7 @@ public String createToken(Authentication authentication) {
 
     public String createToken(String userName) {
 
-        long now = (new Date()).getTime();
+        long now = System.currentTimeMillis();
 
         Date validity;
         validity = new Date(now + authConfigs.getTokenValidityInSeconds() * 1000L);

File: console/src/main/java/com/alibaba/nacos/console/utils/JwtTokenUtils.java
Patch:
@@ -104,7 +104,7 @@ public String createToken(Authentication authentication) {
         /**
          * Current time
          */
-        long now = (new Date()).getTime();
+        long now = System.currentTimeMillis();
         /**
          * Validity date
          */

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/EmbeddedDumpService.java
Patch:
@@ -160,6 +160,9 @@ private boolean shouldRetry(Throwable ex) {
 
 	@Override
 	protected boolean canExecute() {
+		if (ApplicationUtils.getStandaloneMode()) {
+			return true;
+		}
 		// if is derby + raft mode, only leader can execute
 		CPProtocol protocol = protocolManager.getCpProtocol();
 		return protocol.isLeader(Constants.CONFIG_MODEL_RAFT_GROUP);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/EmbeddedDumpService.java
Patch:
@@ -160,6 +160,9 @@ private boolean shouldRetry(Throwable ex) {
 
 	@Override
 	protected boolean canExecute() {
+		if (ApplicationUtils.getStandaloneMode()) {
+			return true;
+		}
 		// if is derby + raft mode, only leader can execute
 		CPProtocol protocol = protocolManager.getCpProtocol();
 		return protocol.isLeader(Constants.CONFIG_MODEL_RAFT_GROUP);

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/CPProtocol.java
Patch:
@@ -30,8 +30,7 @@ public interface CPProtocol<C extends Config, P extends LogProcessor4CP> extends
 	 *
 	 * @param group business module info
 	 * @return is leader
-	 * @throws Exception
 	 */
-	boolean isLeader(String group) throws Exception;
+	boolean isLeader(String group);
 
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -209,7 +209,7 @@ private void injectProtocolMetaData(ProtocolMetaData metaData) {
 	}
 
 	@Override
-	public boolean isLeader(String group) throws Exception {
+	public boolean isLeader(String group) {
 		Node node = raftServer.findNodeByGroup(group);
 		if (node == null) {
 			throw new NoSuchRaftGroupException(group);

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/exception/NoSuchRaftGroupException.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class NoSuchRaftGroupException extends Exception {
+public class NoSuchRaftGroupException extends RuntimeException {
 
 	private static final long serialVersionUID = 1755681688785678765L;
 

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/CPProtocol.java
Patch:
@@ -30,8 +30,7 @@ public interface CPProtocol<C extends Config, P extends LogProcessor4CP> extends
 	 *
 	 * @param group business module info
 	 * @return is leader
-	 * @throws Exception
 	 */
-	boolean isLeader(String group) throws Exception;
+	boolean isLeader(String group);
 
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -209,7 +209,7 @@ private void injectProtocolMetaData(ProtocolMetaData metaData) {
 	}
 
 	@Override
-	public boolean isLeader(String group) throws Exception {
+	public boolean isLeader(String group) {
 		Node node = raftServer.findNodeByGroup(group);
 		if (node == null) {
 			throw new NoSuchRaftGroupException(group);

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/exception/NoSuchRaftGroupException.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class NoSuchRaftGroupException extends Exception {
+public class NoSuchRaftGroupException extends RuntimeException {
 
 	private static final long serialVersionUID = 1755681688785678765L;
 

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -210,7 +210,8 @@ public void run() {
 
 						// This metadata information exists from 1.3.0 onwards "version"
 						if (server.getExtendVal(MemberMetaDataConstants.VERSION) != null) {
-							return;
+						    Loggers.SRV_LOG.debug("[SERVER-STATUS] target {} has extend val {} = {}, use new api report status", server.getAddress(), MemberMetaDataConstants.VERSION, server.getExtendVal(MemberMetaDataConstants.VERSION));
+							continue;
 						}
 
 						Message msg = new Message();
@@ -228,4 +229,4 @@ public void run() {
 		}
 	}
 
-}
\ No newline at end of file
+}

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -210,7 +210,8 @@ public void run() {
 
 						// This metadata information exists from 1.3.0 onwards "version"
 						if (server.getExtendVal(MemberMetaDataConstants.VERSION) != null) {
-							return;
+						    Loggers.SRV_LOG.debug("[SERVER-STATUS] target {} has extend val {} = {}, use new api report status", server.getAddress(), MemberMetaDataConstants.VERSION, server.getExtendVal(MemberMetaDataConstants.VERSION));
+							continue;
 						}
 
 						Message msg = new Message();
@@ -228,4 +229,4 @@ public void run() {
 		}
 	}
 
-}
\ No newline at end of file
+}

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -17,6 +17,8 @@
 
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 
 import java.io.PrintWriter;
 import java.io.Serializable;
@@ -32,6 +34,7 @@ public class ConfigInfoBase implements Serializable, Comparable<ConfigInfoBase>
     /**
      * 不能增加字段
      */
+    @JsonSerialize(using = ToStringSerializer.class)
     private long id;
     private String dataId;
     private String group;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -362,4 +362,4 @@ private static int getDelayTime(NotifySingleTask task) {
 	private static int INCREASE_STEPS = 1000;
 	private static int MAX_COUNT = 6;
 
-}
+}
\ No newline at end of file

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/IdGeneratorManager.java
Patch:
@@ -45,7 +45,7 @@ public IdGeneratorManager() {
             if (iterator.hasNext()) {
                 generator = iterator.next();
             } else {
-                generator = new SnakeFlowerIdGenerator();
+                generator = new SnowFlowerIdGenerator();
             }
             generator.init();
             return generator;

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/SnowFlowerIdGenerator.java
Patch:
@@ -24,7 +24,6 @@
 import java.net.InetAddress;
 import java.net.UnknownHostException;
 import java.text.SimpleDateFormat;
-import java.util.Calendar;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Map;
@@ -43,10 +42,10 @@
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public class SnakeFlowerIdGenerator implements IdGenerator {
+public class SnowFlowerIdGenerator implements IdGenerator {
 
 	private static final Logger logger = LoggerFactory
-			.getLogger(SnakeFlowerIdGenerator.class);
+			.getLogger(SnowFlowerIdGenerator.class);
 
 	/**
 	 * Start time intercept (2018-08-05 08:34)

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -368,10 +368,9 @@ public Page<ConfigInfo> searchConfig(@RequestParam("dataId") String dataId,
 			configAdvanceInfo.put("config_tags", configTags);
 		}
 		try {
-			Page<ConfigInfo> page = persistService
+			return persistService
 					.findConfigInfo4Page(pageNo, pageSize, dataId, group, tenant,
 							configAdvanceInfo);
-			return page;
 		}
 		catch (Exception e) {
 			String errorMsg =

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -368,9 +368,10 @@ public Page<ConfigInfo> searchConfig(@RequestParam("dataId") String dataId,
 			configAdvanceInfo.put("config_tags", configTags);
 		}
 		try {
-			return persistService
+			Page<ConfigInfo> page = persistService
 					.findConfigInfo4Page(pageNo, pageSize, dataId, group, tenant,
 							configAdvanceInfo);
+			return page;
 		}
 		catch (Exception e) {
 			String errorMsg =

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -17,6 +17,8 @@
 
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 
 import java.io.PrintWriter;
 import java.io.Serializable;
@@ -32,6 +34,7 @@ public class ConfigInfoBase implements Serializable, Comparable<ConfigInfoBase>
     /**
      * 不能增加字段
      */
+    @JsonSerialize(using = ToStringSerializer.class)
     private long id;
     private String dataId;
     private String group;

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -108,7 +108,7 @@ public Date addDay(Date date, int num) {
     public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         NAMING_LOGGER.info("{} do shutdown begin", className);
-        ThreadUtils.shutdownThreadPool(this.executorService, NAMING_LOGGER);
+        ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -46,7 +46,7 @@ public class EventDispatcher implements Closeable {
 
     public EventDispatcher() {
 
-        executor = Executors.newSingleThreadExecutor(new ThreadFactory() {
+        this.executor = Executors.newSingleThreadExecutor(new ThreadFactory() {
             @Override
             public Thread newThread(Runnable r) {
                 Thread thread = new Thread(r, "com.alibaba.nacos.naming.client.listener");
@@ -56,7 +56,7 @@ public Thread newThread(Runnable r) {
             }
         });
 
-        executor.execute(new Notifier());
+        this.executor.execute(new Notifier());
     }
 
     public void addListener(ServiceInfo serviceInfo, String clusters, EventListener listener) {
@@ -116,7 +116,7 @@ public void serviceChanged(ServiceInfo serviceInfo) {
     public void shutdown() throws NacosException {
         String className = this.getClass().getName();
         NAMING_LOGGER.info("{} do shutdown begin", className);
-        ThreadUtils.shutdownThreadPool(this.executor, NAMING_LOGGER);
+        ThreadUtils.shutdownThreadPool(executor, NAMING_LOGGER);
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -309,7 +309,7 @@ public void refreshOnly(String serviceName, String clusters) {
     public void shutdown() throws NacosException{
         String className = this.getClass().getName();
         NAMING_LOGGER.info("{} do shutdown begin", className);
-        ThreadUtils.shutdownThreadPool(this.executor, NAMING_LOGGER);
+        ThreadUtils.shutdownThreadPool(executor, NAMING_LOGGER);
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -98,8 +98,7 @@ public NamingProxy(String namespaceId, String endpoint, String serverList, Prope
                 this.nacosDomain = serverList;
             }
         }
-
-        initRefreshTask();
+        this.initRefreshTask();
     }
 
     private void initRefreshTask() {
@@ -586,7 +585,7 @@ public void setServerPort(int serverPort) {
     public void shutdown() throws NacosException{
         String className = this.getClass().getName();
         NAMING_LOGGER.info("{} do shutdown begin", className);
-        ThreadUtils.shutdownThreadPool(this.executorService, NAMING_LOGGER);
+        ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
         NAMING_LOGGER.info("{} do shutdown stop", className);
     }
 }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_ITCase.java
Patch:
@@ -88,7 +88,7 @@ public void cleanup() throws Exception {
             NacosFactory.destroyConfigService(iconfig);
             agent.shutdown();
             // Judge whether the register life cycle resource number equals to zero or not.
-            Assert.assertEquals(ResourceLifeCycleManager.getRegisterResourceNum(), 0);
+            Assert.assertEquals(0, ResourceLifeCycleManager.getRegisterResourceNum());
         } catch (Exception e) {
             e.printStackTrace();
             Assert.fail();

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_ITCase.java
Patch:
@@ -62,7 +62,7 @@ public void init() throws NacosException {
     public void destroy(){
         try {
             NacosFactory.destroyConfigService(configService);
-            Assert.assertEquals(ResourceLifeCycleManager.getRegisterResourceNum(), 0);
+            Assert.assertEquals(0, ResourceLifeCycleManager.getRegisterResourceNum());
         }catch (NacosException ex) {
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -65,7 +65,7 @@ public void init() throws NacosException {
     public void destroy(){
         try {
             NacosFactory.destroyConfigService(configService);
-            Assert.assertEquals(ResourceLifeCycleManager.getRegisterResourceNum(), 0);
+            Assert.assertEquals(0, ResourceLifeCycleManager.getRegisterResourceNum());
         }catch (NacosException ex) {
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -70,7 +70,7 @@ public void destroy(){
         super.destroy();
         try {
             NacosFactory.destroyConfigService(iconfig);
-            Assert.assertEquals(ResourceLifeCycleManager.getRegisterResourceNum(), 0);
+            Assert.assertEquals(0, ResourceLifeCycleManager.getRegisterResourceNum());
         }catch (NacosException ex) {
 
         }

File: test/src/test/java/com/alibaba/nacos/test/BaseTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.test;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.healthcheck.RsInfo;
 import org.junit.Test;
 
@@ -32,7 +32,7 @@ public class BaseTest {
 	@Test
 	public void test_rs_json() {
 		String json = "{\"cluster\":\"DEFAULT\",\"ip\":\"127.0.0.1\",\"metadata\":{},\"port\":60000,\"scheduled\":true,\"serviceName\":\"DEFAULT_GROUP@@jinhan9J7ye.Vj6hx.net\",\"weight\":1.0}";
-		RsInfo client = JSON.parseObject(json, RsInfo.class);
+		RsInfo client = JacksonUtils.toObj(json, RsInfo.class);
 		System.out.println(client);
 	}
 

File: test/src/test/java/com/alibaba/nacos/test/common/HttpUtils_ITCase.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.alibaba.nacos.test.common;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.common.http.HttpUtils;
 import com.alibaba.nacos.common.http.handler.ResponseHandler;
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.model.RestResult;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import com.alibaba.nacos.core.utils.GenericType;
 import org.junit.Assert;
@@ -44,7 +44,7 @@ public class HttpUtils_ITCase {
 
 	@Test
 	public void test_deserialization_type() throws Exception {
-		String json = JSON.toJSONString(list);
+		String json = JacksonUtils.toJson(list);
 		ArrayList<Integer> tmp = ResponseHandler.convert(json, new GenericType<List<Integer>>(){}.getType());
 		Assert.assertEquals(list, tmp);
 	}
@@ -58,7 +58,7 @@ public void test_rest_result() throws Exception {
 
 	@Test
 	public void test_deserialization_class() throws Exception {
-		String json = JSON.toJSONString(list);
+		String json = JacksonUtils.toJson(list);
 		ArrayList<Integer> tmp = ResponseHandler.convert(json, ClassUtils.resolveGenericType(new GenericType<List<Integer>>(){}.getClass()));
 		Assert.assertEquals(list, tmp);
 	}

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -131,7 +131,7 @@ protected void dumpOperate(DumpProcessor processor, DumpAllProcessor dumpAllProc
 					.addTask(DumpAllBetaTask.TASK_ID, new DumpAllBetaTask());
 
             Runnable dumpAllTag = () -> dumpAllTaskMgr
-                .addTask(DumpAllTagTask.TASK_ID, new DumpAllTagTask());
+                    .addTask(DumpAllTagTask.TASK_ID, new DumpAllTagTask());
 
 			Runnable clearConfigHistory = () -> {
 				log.warn("clearConfigHistory start");
@@ -221,10 +221,10 @@ protected void dumpOperate(DumpProcessor processor, DumpAllProcessor dumpAllProc
 						DUMP_ALL_INTERVAL_IN_MINUTE, TimeUnit.MINUTES);
 
 				ConfigExecutor.scheduleWithFixedDelay(dumpAllBeta, initialDelay,
-                    DUMP_ALL_INTERVAL_IN_MINUTE, TimeUnit.MINUTES);
+                        DUMP_ALL_INTERVAL_IN_MINUTE, TimeUnit.MINUTES);
 
                 ConfigExecutor.scheduleWithFixedDelay(dumpAllTag, initialDelay,
-                    DUMP_ALL_INTERVAL_IN_MINUTE, TimeUnit.MINUTES);
+                        DUMP_ALL_INTERVAL_IN_MINUTE, TimeUnit.MINUTES);
 			}
 
 			ConfigExecutor

File: address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.address.misc.Loggers;
 import com.alibaba.nacos.address.util.AddressServerParamCheckUtil;
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: api/src/main/java/com/alibaba/nacos/api/selector/ExpressionSelector.java
Patch:
@@ -29,7 +29,7 @@ public class ExpressionSelector extends AbstractSelector {
     private String expression;
 
     public ExpressionSelector() {
-        this.setType(SelectorType.label.name());
+        super(SelectorType.label.name());
     }
 
     public String getExpression() {

File: api/src/main/java/com/alibaba/nacos/api/selector/NoneSelector.java
Patch:
@@ -23,6 +23,6 @@
 public class NoneSelector extends AbstractSelector {
 
     public NoneSelector() {
-        this.setType(SelectorType.none.name());
+        super(SelectorType.none.name());
     }
 }

File: api/src/test/java/com/alibaba/nacos/api/annotation/NacosPropertiesTest.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.api.annotation;
 
-import com.alibaba.fastjson.JSON;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.mock.env.MockEnvironment;

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -56,8 +56,6 @@ public class NacosConfigService implements ConfigService {
 
     private static final long POST_TIMEOUT = 3000L;
 
-    private static final String EMPTY = "";
-
     /**
      * http agent
      */

File: client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java
Patch:
@@ -43,7 +43,7 @@ public void start() throws NacosException {
     @Override
     public HttpResult httpGet(String path, List<String> headers, List<String> paramValues, String encoding, long readTimeoutMs) throws IOException {
         Histogram.Timer timer = MetricsMonitor.getConfigRequestMonitor("GET", path, "NA");
-        HttpResult result = null;
+        HttpResult result;
         try {
             result = httpAgent.httpGet(path, headers, paramValues, encoding, readTimeoutMs);
         } catch (IOException e) {
@@ -59,7 +59,7 @@ public HttpResult httpGet(String path, List<String> headers, List<String> paramV
     @Override
     public HttpResult httpPost(String path, List<String> headers, List<String> paramValues, String encoding, long readTimeoutMs) throws IOException {
         Histogram.Timer timer = MetricsMonitor.getConfigRequestMonitor("POST", path, "NA");
-        HttpResult result = null;
+        HttpResult result;
         try {
             result = httpAgent.httpPost(path, headers, paramValues, encoding, readTimeoutMs);
         } catch (IOException e) {
@@ -75,7 +75,7 @@ public HttpResult httpPost(String path, List<String> headers, List<String> param
     @Override
     public HttpResult httpDelete(String path, List<String> headers, List<String> paramValues, String encoding, long readTimeoutMs) throws IOException {
         Histogram.Timer timer = MetricsMonitor.getConfigRequestMonitor("DELETE", path, "NA");
-        HttpResult result = null;
+        HttpResult result;
         try {
             result = httpAgent.httpDelete(path, headers, paramValues, encoding, readTimeoutMs);
         } catch (IOException e) {

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -24,11 +24,11 @@
 import com.alibaba.nacos.client.config.impl.SpasAdapter;
 import com.alibaba.nacos.client.identify.STSConfig;
 import com.alibaba.nacos.client.security.SecurityProxy;
-import com.alibaba.nacos.client.utils.JSONUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
 import org.apache.commons.lang3.StringUtils;
@@ -366,8 +366,7 @@ private STSCredential getSTSCredential() throws IOException {
             }
         }
         String stsResponse = getSTSResponse();
-        STSCredential stsCredentialTmp = JSONUtils.deserializeObject(stsResponse,
-            new TypeReference<STSCredential>() {
+        STSCredential stsCredentialTmp = JacksonUtils.toObj(stsResponse, new TypeReference<STSCredential>() {
             });
         sTSCredential = stsCredentialTmp;
         LOGGER.info("[getSTSCredential] code:{}, accessKeyId:{}, lastUpdated:{}, expiration:{}", sTSCredential.getCode(),

File: client/src/main/java/com/alibaba/nacos/client/config/impl/AbstractConfigChangeParser.java
Patch:
@@ -44,7 +44,7 @@ protected Map<String, ConfigChangeItem> filterChangeData(Map oldMap, Map newMap)
         Map<String, ConfigChangeItem> result = new HashMap<String, ConfigChangeItem>(16);
         for (Iterator<Map.Entry<String, Object>> entryItr = oldMap.entrySet().iterator(); entryItr.hasNext();) {
             Map.Entry<String, Object> e = entryItr.next();
-            ConfigChangeItem cci = null;
+            ConfigChangeItem cci;
             if (newMap.containsKey(e.getKey()))  {
                 if (e.getValue().equals(newMap.get(e.getKey()))) {
                     continue;

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -61,6 +61,7 @@ public NacosNamingMaintainService(Properties properties) {
     private void init(Properties properties) {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
+        InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         serverProxy = new NamingProxy(namespace, endpoint, serverList, properties);

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -34,7 +34,6 @@
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
-import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -44,7 +43,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Properties;
-import java.util.concurrent.TimeUnit;
 
 /**
  * Nacos Naming Service
@@ -88,6 +86,7 @@ public NacosNamingService(Properties properties) {
     private void init(Properties properties) {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
+        InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         initCacheDir();
@@ -208,7 +207,6 @@ public void registerInstance(String serviceName, String groupName, Instance inst
         serverProxy.registerService(NamingUtils.getGroupedName(serviceName, groupName), groupName, instance);
     }
 
-
     @Override
     public void deregisterInstance(String serviceName, String ip, int port) throws NacosException {
         deregisterInstance(serviceName, ip, port, Constants.DEFAULT_CLUSTER_NAME);

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -15,13 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.backups;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.cache.ConcurrentDiskUtil;
 import com.alibaba.nacos.client.naming.cache.DiskCache;
 import com.alibaba.nacos.client.naming.core.HostReactor;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
+import com.alibaba.nacos.common.utils.JacksonUtils;
+
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.BufferedReader;
@@ -180,7 +181,7 @@ public void run() {
                         String json;
                         if ((json = reader.readLine()) != null) {
                             try {
-                                dom = JSON.parseObject(json, ServiceInfo.class);
+                                dom = JacksonUtils.toObj(json, ServiceInfo.class);
                             } catch (Exception e) {
                                 NAMING_LOGGER.error("[NA] error while parsing cached dom : " + json, e);
                             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.naming.core;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
 
@@ -75,7 +75,7 @@ public void run() {
                 String json = new String(IoUtils.tryDecompress(packet.getData()), "UTF-8").trim();
                 NAMING_LOGGER.info("received push data: " + json + " from " + packet.getAddress().toString());
 
-                PushPacket pushPacket = JSON.parseObject(json, PushPacket.class);
+                PushPacket pushPacket = JacksonUtils.toObj(json, PushPacket.class);
                 String ack;
                 if ("dom".equals(pushPacket.type) || "service".equals(pushPacket.type)) {
                     hostReactor.processServiceJSON(pushPacket.data);
@@ -89,7 +89,7 @@ public void run() {
                     ack = "{\"type\": \"dump-ack\""
                         + ", \"lastRefTime\": \"" + pushPacket.lastRefTime
                         + "\", \"data\":" + "\""
-                        + StringUtils.escapeJavaScript(JSON.toJSONString(hostReactor.getServiceInfoMap()))
+                        + StringUtils.escapeJavaScript(JacksonUtils.toJson(hostReactor.getServiceInfoMap()))
                         + "\"}";
                 } else {
                     // do nothing send ack only

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -65,6 +65,7 @@ public void completed(HttpResponse response) {
 				try {
 					final String body = EntityUtils.toString(response.getEntity());
 					RestResult<T> data = ResponseHandler.convert(body, type);
+					data.setCode(response.getStatusLine().getStatusCode());
 					callback.onReceive(data);
 				}
 				catch (Throwable e) {

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -21,7 +21,6 @@
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
-import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;

File: common/src/main/java/com/alibaba/nacos/common/utils/ConvertUtils.java
Patch:
@@ -42,7 +42,7 @@ public static long toLong(String val, long defaultValue) {
         return Long.parseLong(val);
     }
 
-    public static boolean toBoolean(String val, boolean defaultValue) {
+    public static boolean toBool(String val, boolean defaultValue) {
         if (StringUtils.isBlank(val)) {
             return defaultValue;
         }

File: common/src/main/java/com/alibaba/nacos/common/utils/Observable.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.utils;
 
-import java.util.Objects;
 import java.util.Set;
 
 /**
@@ -25,7 +24,7 @@
 public class Observable {
 
 	private transient boolean changed = false;
-	private transient Set<Observer> obs = new ConcurrentHashSet<>();
+	private transient Set<Observer> obs = new ConcurrentHashSet<Observer>();
 	private volatile int observerCnt = 0;
 	private boolean alreadyAddObserver = false;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/Pair.java
Patch:
@@ -28,7 +28,7 @@ public class Pair<A, B> {
     }
 
     public static <A, B> Pair<A, B> with(A first, B second) {
-        return new Pair<>(first, second);
+        return new Pair<A, B>(first, second);
     }
 
     public A getFirst() {

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -28,7 +28,7 @@ public class VersionUtils {
     /**
      * 获取当前version
      */
-    public static final String VERSION_DEFAULT = "${project.version}";
+    public static final String VERSION_PLACEHOLDER = "${project.version}";
 
 
     static {
@@ -39,7 +39,7 @@ public class VersionUtils {
             Properties props = new Properties();
             props.load(in);
             String val = props.getProperty("version");
-            if (val != null && !VERSION_DEFAULT.equals(val)) {
+            if (val != null && !VERSION_PLACEHOLDER.equals(val)) {
                 VERSION = val;
             }
         } catch (Exception e) {

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
-import com.alibaba.nacos.config.server.service.ConfigService;
+import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
@@ -88,7 +88,7 @@ public Object interfaceRemoveAll(ProceedingJoinPoint pjp, HttpServletRequest req
     public Object interfaceGetConfig(ProceedingJoinPoint pjp, HttpServletRequest request, HttpServletResponse response,
                                      String dataId, String group, String tenant) throws Throwable {
         final String groupKey = GroupKey2.getKey(dataId, group, tenant);
-        final String md5 = ConfigService.getContentMd5(groupKey);
+        final String md5 = ConfigCacheService.getContentMd5(groupKey);
         MetricsMonitor.getConfigMonitor().incrementAndGet();
         return logClientRequest("get", pjp, request, response, dataId, group, tenant, md5);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalPermissionPersistServiceImpl.java
Patch:
@@ -16,15 +16,13 @@
 
 package com.alibaba.nacos.config.server.auth;
 
-import com.alibaba.nacos.config.server.configuration.ConditionOnEmbeddedStorage;
 import com.alibaba.nacos.config.server.configuration.ConditionOnExternalStorage;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.repository.ExternalStoragePersistServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
 import org.springframework.jdbc.core.JdbcTemplate;
@@ -33,7 +31,7 @@
 import javax.annotation.PostConstruct;
 import java.util.ArrayList;
 
-import static com.alibaba.nacos.config.server.service.RowMapperManager.PERMISSION_ROW_MAPPER;
+import static com.alibaba.nacos.config.server.service.repository.RowMapperManager.PERMISSION_ROW_MAPPER;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalRolePersistServiceImpl.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
 import org.springframework.jdbc.core.JdbcTemplate;
@@ -35,7 +34,7 @@
 import java.sql.SQLException;
 import java.util.ArrayList;
 
-import static com.alibaba.nacos.config.server.service.RowMapperManager.ROLE_INFO_ROW_MAPPER;
+import static com.alibaba.nacos.config.server.service.repository.RowMapperManager.ROLE_INFO_ROW_MAPPER;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: config/src/main/java/com/alibaba/nacos/config/server/auth/ExternalUserPersistServiceImpl.java
Patch:
@@ -23,7 +23,6 @@
 import com.alibaba.nacos.config.server.service.repository.PaginationHelper;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.dao.EmptyResultDataAccessException;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;
@@ -33,7 +32,7 @@
 import javax.annotation.PostConstruct;
 import java.util.ArrayList;
 
-import static com.alibaba.nacos.config.server.service.RowMapperManager.USER_ROW_MAPPER;
+import static com.alibaba.nacos.config.server.service.repository.RowMapperManager.USER_ROW_MAPPER;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -18,8 +18,8 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.DynamicDataSource;
-import com.alibaba.nacos.config.server.service.LocalDataSourceServiceImpl;
+import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
+import com.alibaba.nacos.config.server.service.datasource.LocalDataSourceServiceImpl;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.service.dump.DumpService;
 import com.alibaba.nacos.config.server.utils.LogUtil;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.DataSourceService;
-import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.InetUtils;
 import org.springframework.beans.factory.annotation.Autowired;

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorEvent.java
Patch:
@@ -15,13 +15,13 @@
  */
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.core.notify.SlowEvent;
 
 /**
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
-public class RaftDBErrorEvent implements Event {
+public class RaftDBErrorEvent implements SlowEvent {
 
 	private static final long serialVersionUID = 101591819161802336L;
 

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorRecoverEvent.java
Patch:
@@ -20,7 +20,6 @@
 import com.alibaba.nacos.core.notify.Event;
 
 /**
- *
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.config.server.service;
 
 import com.alibaba.nacos.config.server.model.SampleResult;
+import com.alibaba.nacos.config.server.model.event.LocalDataChangeEvent;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.GroupKey;
 import com.alibaba.nacos.config.server.utils.LogUtil;
@@ -302,7 +303,7 @@ class DataChangeTask implements Runnable {
         @Override
         public void run() {
             try {
-                ConfigService.getContentBetaMd5(groupKey);
+                ConfigCacheService.getContentBetaMd5(groupKey);
                 for (Iterator<ClientLongPolling> iter = allSubs.iterator(); iter.hasNext(); ) {
                     ClientLongPolling clientSub = iter.next();
                     if (clientSub.clientMd5Map.containsKey(groupKey)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -17,8 +17,8 @@
 
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
 import com.alibaba.nacos.config.server.model.capacity.GroupCapacity;
-import com.alibaba.nacos.config.server.service.DataSourceService;
-import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.collect.Lists;

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.config.server.service.capacity;
 
 import com.alibaba.nacos.config.server.model.capacity.TenantCapacity;
-import com.alibaba.nacos.config.server.service.DataSourceService;
-import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
+import com.alibaba.nacos.config.server.service.datasource.DynamicDataSource;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.collect.Lists;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.ConfigDataChangeEvent;
+import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
-import com.alibaba.nacos.config.server.service.ConfigDataChangeEvent;
+import com.alibaba.nacos.config.server.model.event.ConfigDataChangeEvent;
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ExternalStoragePaginationHelperImpl.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.config.server.service.repository;
 
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.sql.SqlContextUtils;
+import com.alibaba.nacos.config.server.service.sql.EmbeddedStorageContextUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.springframework.jdbc.core.JdbcTemplate;
@@ -210,7 +210,7 @@ public void updateLimit(final String sql, final Object[] args) {
 		try {
 			jdbcTemplate.update(sqlUpdate, args);
 		} finally {
-			SqlContextUtils.cleanCurrentSqlContext();
+			EmbeddedStorageContextUtils.cleanAllContext();
 		}
 	}
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/PersistService.java
Patch:
@@ -93,7 +93,8 @@ void updateConfigInfo(final ConfigInfo configInfo, final String srcIp, final Str
 	/**
 	 * 更新配置信息
 	 */
-	void updateConfigInfo4Beta(ConfigInfo configInfo, String srcIp, String srcUser, Timestamp time,
+	void updateConfigInfo4Beta(ConfigInfo configInfo,
+			String betaIps, String srcIp, String srcUser, Timestamp time,
 			boolean notify);
 
 	/**
@@ -798,4 +799,4 @@ Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoList, Stri
 	 * @return count by tenantId
 	 */
 	int tenantInfoCountByTenantId(String tenantId);
-}
+}
\ No newline at end of file

File: config/src/main/java/com/alibaba/nacos/config/server/utils/MD5Util.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.config.server.utils;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.ConfigService;
+import com.alibaba.nacos.config.server.service.ConfigCacheService;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
@@ -52,7 +52,8 @@ static public List<String> compareMd5(HttpServletRequest request,
             String groupKey = entry.getKey();
             String clientMd5 = entry.getValue();
             String ip = RequestUtil.getRemoteIp(request);
-            boolean isUptodate = ConfigService.isUptodate(groupKey, clientMd5, ip, tag);
+            boolean isUptodate = ConfigCacheService
+					.isUptodate(groupKey, clientMd5, ip, tag);
             if (!isUptodate) {
                 changedGroupKeys.add(groupKey);
             }

File: config/src/test/java/com/alibaba/nacos/config/server/controller/HealthControllerUnitTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.springframework.test.web.servlet.setup.MockMvcBuilders;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.service.DataSourceService;
+import com.alibaba.nacos.config.server.service.datasource.DataSourceService;
 
 /**
  * Created by qingliang on 2017/8/14.

File: config/src/test/java/com/alibaba/nacos/config/server/service/ClientTrackServiceTest.java
Patch:
@@ -40,7 +40,7 @@ public void test_trackClientMd5() {
         String groupKey = GroupKey2.getKey(dataId, group);
         String md5 = "xxxxxxxxxxxxx";
 
-        ConfigService.updateMd5(groupKey, md5, System.currentTimeMillis());
+        ConfigCacheService.updateMd5(groupKey, md5, System.currentTimeMillis());
 
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
         ClientTrackService.trackClientMd5(clientIp, groupKey, md5);
@@ -50,7 +50,7 @@ public void test_trackClientMd5() {
         Assert.assertEquals(1, ClientTrackService.subscriberCount());
 
         //服务端数据更新
-        ConfigService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis());
+        ConfigCacheService.updateMd5(groupKey, md5 + "111", System.currentTimeMillis());
         Assert.assertEquals(false, ClientTrackService.isClientUptodate(clientIp).get(groupKey));
     }
 

File: config/src/test/java/com/alibaba/nacos/config/server/service/DiskServiceUnitTest.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.config.server.utils.DiskUtil;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;

File: config/src/test/java/com/alibaba/nacos/config/server/service/RowMapperManagerTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.config.server.service.repository.RowMapperManager;
 import com.alibaba.nacos.core.utils.ClassUtils;
 import com.alibaba.nacos.config.server.model.User;
 import org.junit.Assert;

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/MetadataKey.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class Constants {
+public class MetadataKey {
 
     public static final String LEADER_META_DATA = "leader";
 

File: core/src/main/java/com/alibaba/nacos/core/auth/Secured.java
Patch:
@@ -44,7 +44,7 @@
     String resource() default StringUtils.EMPTY;
 
     /**
-     * Resource name parser. Should have lower priority than name()
+     * Resource name parser. Should have lower priority than resource()
      *
      * @return class type of resource parser
      */

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -134,9 +134,7 @@ public static void syncToFile(Collection<Member> members) {
 
 	@SuppressWarnings("PMD.UndefineMagicConstantRule")
 	public static Collection<Member> kRandom(Collection<Member> members,
-			Predicate<Member> filter) {
-		int k = ApplicationUtils
-				.getProperty("nacos.core.member.report.random-num", Integer.class, 3);
+			Predicate<Member> filter, int k) {
 
         Set<Member> kMembers = new HashSet<>();
 

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.core.cluster.lookup;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.file.FileChangeEvent;
-import com.alibaba.nacos.common.file.FileWatcher;
-import com.alibaba.nacos.common.file.WatchFileCenter;
+import com.alibaba.nacos.core.file.FileChangeEvent;
+import com.alibaba.nacos.core.file.FileWatcher;
+import com.alibaba.nacos.core.file.WatchFileCenter;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -17,10 +17,10 @@
 package com.alibaba.nacos.core.controller;
 
 import com.alibaba.nacos.common.model.RestResult;
-import com.alibaba.nacos.common.model.RestResultUtils;
 import com.alibaba.nacos.core.distributed.ProtocolManager;
-import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
 import com.alibaba.nacos.core.utils.Commons;
+import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.core.distributed.id.IdGeneratorManager;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftConfig.java
Patch:
@@ -19,12 +19,10 @@
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.consistency.Config;
 import com.alibaba.nacos.consistency.cp.LogProcessor4CP;
-import java.util.ArrayList;
-import java.util.Collection;
+
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
-import java.util.List;
 import java.util.Map;
 import java.util.Set;
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftEvent.java
Patch:
@@ -30,7 +30,7 @@ public class RaftEvent implements SlowEvent {
 
     private String groupId;
 
-    private String leader;
+    private String leader = null;
 
     private Long term = null;
 

File: core/src/main/java/com/alibaba/nacos/core/file/FileChangeEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.file;
+package com.alibaba.nacos.core.file;
 
 import java.io.Serializable;
 import java.nio.file.WatchEvent;

File: core/src/main/java/com/alibaba/nacos/core/file/FileWatcher.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.file;
+package com.alibaba.nacos.core.file;
 
 import java.nio.file.WatchEvent;
 import java.util.concurrent.Executor;

File: core/src/main/java/com/alibaba/nacos/core/file/WatchFileCenter.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.file;
+package com.alibaba.nacos.core.file;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.executor.ExecutorFactory;

File: core/src/main/java/com/alibaba/nacos/core/utils/ApplicationUtils.java
Patch:
@@ -17,9 +17,7 @@
 package com.alibaba.nacos.core.utils;
 
 import com.alibaba.nacos.common.JustForTest;
-import com.alibaba.nacos.common.utils.DiskUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
-import com.alibaba.nacos.common.utils.ShutdownUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.sun.management.OperatingSystemMXBean;
 import org.springframework.beans.BeansException;

File: core/src/main/java/com/alibaba/nacos/core/utils/DiskUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.utils;
+package com.alibaba.nacos.core.utils;
 
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
@@ -28,7 +28,6 @@
 import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
 import java.nio.channels.FileChannel;
-import java.nio.channels.FileLock;
 import java.nio.charset.Charset;
 import java.nio.charset.CharsetDecoder;
 import java.nio.charset.StandardCharsets;
@@ -41,6 +40,7 @@
 import java.util.zip.ZipInputStream;
 import java.util.zip.ZipOutputStream;
 
+import com.alibaba.nacos.common.utils.ByteUtils;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.io.output.NullOutputStream;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcher.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.naming.misc.*;
 import org.apache.commons.lang3.StringUtils;
@@ -125,7 +125,7 @@ public void run() {
                             syncTask.setTargetServer(member.getAddress());
 
                             if (Loggers.DISTRO.isDebugEnabled() && StringUtils.isNotBlank(key)) {
-                                Loggers.DISTRO.debug("add sync task: {}", JSON.toJSONString(syncTask));
+                                Loggers.DISTRO.debug("add sync task: {}", JacksonUtils.toJson(syncTask));
                             }
 
                             dataSyncer.submit(syncTask, 0);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -52,8 +52,8 @@ public void onApplicationEvent(ApplicationEvent event) {
 		if (event instanceof BaseRaftEvent) {
 			BaseRaftEvent raftEvent = (BaseRaftEvent) event;
 			RaftPeer local = raftEvent.getLocal();
-			String json = JSON.toJSONString(local);
-			Map map = JSON.parseObject(json, HashMap.class);
+			String json = JacksonUtils.toJson(local);
+			Map map = JacksonUtils.toObj(json, HashMap.class);
 			Member self = memberManager.getSelf();
 			self.setExtendVal(GROUP, map);
 			memberManager.update(self);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberChangeEvent;
@@ -171,7 +171,7 @@ public RaftPeer makeLeader(RaftPeer candidate) {
             leader = candidate;
             ApplicationUtils.publishEvent(new MakeLeaderEvent(this, leader, local()));
             Loggers.RAFT.info("{} has become the LEADER, local: {}, leader: {}",
-                leader.ip, JSON.toJSONString(local()), JSON.toJSONString(leader));
+                leader.ip, JacksonUtils.toJson(local()), JacksonUtils.toJson(leader));
         }
 
         for (final RaftPeer peer : peers.values()) {
@@ -189,7 +189,7 @@ public Integer onCompleted(Response response) throws Exception {
                                 return 1;
                             }
 
-                            update(JSON.parseObject(response.getResponseBody(), RaftPeer.class));
+                            update(JacksonUtils.toObj(response.getResponseBody(), RaftPeer.class));
 
                             return 0;
                         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.alibaba.nacos.naming.core;
 
-import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.naming.CommonParams;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
@@ -93,7 +93,7 @@ public List<Subscriber> getSubscribers(String serviceName, String namespaceId, b
                     + UtilsAndCommons.NACOS_NAMING_CONTEXT + SUBSCRIBER_ON_SYNC_URL, new ArrayList<>(), paramValues);
 
                 if (HttpURLConnection.HTTP_OK == result.code) {
-                    Subscribers subscribers = (Subscribers) JSONObject.parseObject(result.content, Subscribers.class);
+                    Subscribers subscribers = JacksonUtils.toObj(result.content, Subscribers.class);
                     subscriberList.addAll(subscribers.getSubscribers());
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -15,15 +15,14 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-
-import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.push.PushService;
+import com.fasterxml.jackson.annotation.JsonIgnore;
 
 import java.util.List;
 import java.util.concurrent.TimeUnit;
@@ -38,7 +37,7 @@ public class ClientBeatProcessor implements Runnable {
     private RsInfo rsInfo;
     private Service service;
 
-    @JSONField(serialize = false)
+    @JsonIgnore
     public PushService getPushService() {
         return ApplicationUtils.getBean(PushService.class);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Http;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
@@ -115,7 +115,7 @@ public void process(HealthCheckTask task) {
                     continue;
                 }
 
-                AbstractHealthChecker.Http healthChecker = (AbstractHealthChecker.Http) cluster.getHealthChecker();
+                Http healthChecker = (Http) cluster.getHealthChecker();
 
                 int ckPort = cluster.isUseIPPort4Check() ? ip.getPort() : cluster.getDefCkport();
                 URL host = new URL("http://" + ip.getIp() + ":" + ckPort);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/MysqlHealthCheckProcessor.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Mysql;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -146,7 +146,7 @@ public void run() {
                 Cluster cluster = task.getCluster();
                 String key = cluster.getService().getName() + ":" + cluster.getName() + ":" + ip.getIp() + ":" + ip.getPort();
                 Connection connection = CONNECTION_POOL.get(key);
-                AbstractHealthChecker.Mysql config = (AbstractHealthChecker.Mysql) cluster.getHealthChecker();
+                Mysql config = (Mysql) cluster.getHealthChecker();
 
                 if (connection == null || connection.isClosed()) {
                     MysqlDataSource dataSource = new MysqlDataSource();

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/RsInfo.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 
 import java.util.Map;
 
@@ -145,6 +145,6 @@ public void setMetadata(Map<String, String> metadata) {
 
     @Override
     public String toString() {
-        return JSON.toJSONString(this);
+        return JacksonUtils.toJson(this);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/extend/HealthCheckExtendProvider.java
Patch:
@@ -15,9 +15,9 @@
  */
 package com.alibaba.nacos.naming.healthcheck.extend;
 
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckProcessor;
-import com.alibaba.nacos.naming.healthcheck.HealthCheckType;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckType;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -110,6 +110,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
             setHeaders(conn, headers, encoding);
 
             if (StringUtils.isNotBlank(body)) {
+                conn.setDoOutput(true);
                 byte[] b = body.getBytes();
                 conn.setRequestProperty("Content-Length", String.valueOf(b.length));
                 conn.getOutputStream().write(b, 0, b.length);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -27,6 +27,7 @@
 /**
  * Report local server status to other server
  *
+ * @deprecated 1.3.0 This object will be deleted sometime after version 1.3.0
  * @author nacos
  */
 public class ServerStatusSynchronizer implements Synchronizer {
@@ -55,7 +56,6 @@ public Integer onCompleted(Response response) throws Exception {
                     if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {
                         Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}",
                             serverIP);
-
                         return 1;
                     }
                     return 0;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.Response;
@@ -50,7 +50,7 @@ public void send(final String serverIP, Message msg) {
         }
 
         try {
-            HttpClient.asyncHttpPostLarge(url, null, JSON.toJSONString(params), new AsyncCompletionHandler() {
+            HttpClient.asyncHttpPostLarge(url, null, JacksonUtils.toJson(params), new AsyncCompletionHandler() {
                 @Override
                 public Integer onCompleted(Response response) throws Exception {
                     if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.stereotype.Component;
 
@@ -368,7 +368,7 @@ public void setLightBeatEnabled(boolean lightBeatEnabled) {
 
     @Override
     public String toString() {
-        return JSON.toJSONString(this);
+        return JacksonUtils.toJson(this);
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -15,9 +15,9 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
@@ -78,7 +78,7 @@ public void update(String entry, String value, boolean debug) throws Exception {
 
             if (SwitchEntry.BATCH.equals(entry)) {
                 //batch update
-                SwitchDomain dom = JSON.parseObject(value, SwitchDomain.class);
+                SwitchDomain dom = JacksonUtils.toObj(value, SwitchDomain.class);
                 dom.setEnableStandalone(switchDomain.isEnableStandalone());
                 if (dom.getHttpHealthParams().getMin() < SwitchDomain.HttpHealthParams.MIN_MIN
                     || dom.getTcpHealthParams().getMin() < SwitchDomain.HttpHealthParams.MIN_MIN) {

File: test/src/test/java/com/alibaba/nacos/test/core/BaseClusterTest.java
Patch:
@@ -22,11 +22,11 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.common.http.HttpClientManager;
 import com.alibaba.nacos.common.http.NSyncHttpClient;
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.service.repository.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
-import com.alibaba.nacos.consistency.cp.Constants;
+import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.notify.Event;
 import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.notify.listener.Subscribe;
@@ -201,7 +201,7 @@ private static void run(final int index, final CountDownLatch latch, final Class
 				CPProtocol protocol = context.getBean(CPProtocol.class);
 
 				protocol.protocolMetaData()
-						.subscribe(operate.group(), Constants.LEADER_META_DATA,
+						.subscribe(operate.group(), MetadataKey.LEADER_META_DATA,
 								(o, arg) -> {
 									System.out.println("node : 884" + (7 + index) + "-> select leader is : " + arg);
 									if (finished[index].compareAndSet(false, true)) {

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -37,6 +37,8 @@ public class InetUtils_ITCase {
 
 	static {
 		System.setProperty("nacos.core.inet.auto-refresh", "3");
+		// For load InetUtils.class
+		InetUtils.getSelfIp();
 	}
 
 	@Test

File: test/src/test/java/com/alibaba/nacos/test/core/JacksonUtils.java
Patch:
@@ -46,7 +46,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class JscksonUtils {
+public class JacksonUtils {
 
 	static ObjectMapper mapper = new ObjectMapper();
 

File: test/src/test/java/com/alibaba/nacos/test/naming/RandomUtils.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.alibaba.nacos.test.naming;
 
-import com.alibaba.nacos.test.BaseTest;
-
 import java.util.*;
 
 /**
@@ -25,7 +23,7 @@
  * @author wangtong.wt
  * @date 2018/6/20
  */
-public class RandomUtils extends BaseTest {
+public class RandomUtils {
     private static Random rd = new Random();
     private static int UNICODE_START = 19968;
     private static int UNICODE_END = 40864;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -110,6 +110,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
             setHeaders(conn, headers, encoding);
 
             if (StringUtils.isNotBlank(body)) {
+                conn.setDoOutput(true);
                 byte[] b = body.getBytes();
                 conn.setRequestProperty("Content-Length", String.valueOf(b.length));
                 conn.getOutputStream().write(b, 0, b.length);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -110,6 +110,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
             setHeaders(conn, headers, encoding);
 
             if (StringUtils.isNotBlank(body)) {
+                conn.setDoOutput(true);
                 byte[] b = body.getBytes();
                 conn.setRequestProperty("Content-Length", String.valueOf(b.length));
                 conn.getOutputStream().write(b, 0, b.length);

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import java.util.concurrent.ThreadLocalRandom;
@@ -75,7 +74,6 @@ public static Member singleParse(String member) {
 		Map<String, Object> extendInfo = new HashMap<>(4);
 		// The Raft Port information needs to be set by default
 		extendInfo.put(MemberMetaDataConstants.RAFT_PORT, String.valueOf(calculateRaftPort(target)));
-		extendInfo.put(MemberMetaDataConstants.VERSION, VersionUtils.VERSION);
 		target.setExtendInfo(extendInfo);
 		return target;
 	}

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -139,6 +139,7 @@ protected void init() throws NacosException {
 		this.port = ApplicationUtils.getProperty("server.port", Integer.class, 8848);
 		this.localAddress = InetUtils.getSelfIp() + ":" + port;
 		this.self = MemberUtils.singleParse(this.localAddress);
+		this.self.setExtendVal(MemberMetaDataConstants.VERSION, VersionUtils.VERSION);
 		serverList.put(self.getAddress(), self);
 
 		// register NodeChangeEvent publisher to NotifyManager

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -17,7 +17,6 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
-import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import java.util.concurrent.ThreadLocalRandom;
@@ -75,7 +74,6 @@ public static Member singleParse(String member) {
 		Map<String, Object> extendInfo = new HashMap<>(4);
 		// The Raft Port information needs to be set by default
 		extendInfo.put(MemberMetaDataConstants.RAFT_PORT, String.valueOf(calculateRaftPort(target)));
-		extendInfo.put(MemberMetaDataConstants.VERSION, VersionUtils.VERSION);
 		target.setExtendInfo(extendInfo);
 		return target;
 	}

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -139,6 +139,7 @@ protected void init() throws NacosException {
 		this.port = ApplicationUtils.getProperty("server.port", Integer.class, 8848);
 		this.localAddress = InetUtils.getSelfIp() + ":" + port;
 		this.self = MemberUtils.singleParse(this.localAddress);
+		this.self.setExtendVal(MemberMetaDataConstants.VERSION, VersionUtils.VERSION);
 		serverList.put(self.getAddress(), self);
 
 		// register NodeChangeEvent publisher to NotifyManager

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -65,6 +65,7 @@ public void completed(HttpResponse response) {
 				try {
 					final String body = EntityUtils.toString(response.getEntity());
 					RestResult<T> data = ResponseHandler.convert(body, type);
+					data.setCode(response.getStatusLine().getStatusCode());
 					callback.onReceive(data);
 				}
 				catch (Throwable e) {

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -21,7 +21,6 @@
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
-import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtils.java
Patch:
@@ -21,7 +21,6 @@
 import java.util.Collection;
 import java.util.Dictionary;
 import java.util.Map;
-import java.util.Objects;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -15,13 +15,12 @@
  */
 package com.alibaba.nacos.common.utils;
 
-import org.apache.commons.lang3.CharSequenceUtils;
+import com.alibaba.nacos.api.common.Constants;
 
 import java.io.IOException;
 import java.io.StringWriter;
 import java.io.Writer;
 import java.nio.charset.Charset;
-import java.nio.charset.StandardCharsets;
 import java.util.Collection;
 import java.util.Locale;
 
@@ -41,7 +40,7 @@ public class StringUtils {
     public static final String EMPTY = "";
 
     public static String newString4UTF8(byte[] bytes) {
-        return new String(bytes, Charset.forName(StandardCharsets.UTF_8.name()));
+        return new String(bytes, Charset.forName(Constants.ENCODE));
     }
 
     public static boolean isBlank(String str) {

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -18,7 +18,6 @@
 
 import org.slf4j.Logger;
 
-import java.util.Objects;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.TimeUnit;

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -28,7 +28,7 @@ public class VersionUtils {
     /**
      * 获取当前version
      */
-    public static final String VERSION_DEFAULT = "${project.version}";
+    public static final String VERSION_PLACEHOLDER = "${project.version}";
 
 
     static {
@@ -39,7 +39,7 @@ public class VersionUtils {
             Properties props = new Properties();
             props.load(in);
             String val = props.getProperty("version");
-            if (val != null && !VERSION_DEFAULT.equals(val)) {
+            if (val != null && !VERSION_PLACEHOLDER.equals(val)) {
                 VERSION = val;
             }
         } catch (Exception e) {

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.common.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import java.util.concurrent.ThreadLocalRandom;
@@ -74,6 +75,7 @@ public static Member singleParse(String member) {
 		Map<String, Object> extendInfo = new HashMap<>(4);
 		// The Raft Port information needs to be set by default
 		extendInfo.put(MemberMetaDataConstants.RAFT_PORT, String.valueOf(calculateRaftPort(target)));
+		extendInfo.put(MemberMetaDataConstants.VERSION, VersionUtils.VERSION);
 		target.setExtendInfo(extendInfo);
 		return target;
 	}
@@ -134,9 +136,7 @@ public static void syncToFile(Collection<Member> members) {
 
 	@SuppressWarnings("PMD.UndefineMagicConstantRule")
 	public static Collection<Member> kRandom(Collection<Member> members,
-			Predicate<Member> filter) {
-		int k = ApplicationUtils
-				.getProperty("nacos.core.member.report.random-num", Integer.class, 3);
+			Predicate<Member> filter, int k) {
 
         Set<Member> kMembers = new HashSet<>();
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -204,7 +204,7 @@ public RestResult<String> execute(Map<String, String> args) {
 
 	private void injectProtocolMetaData(ProtocolMetaData metaData) {
 		Member member = memberManager.getSelf();
-		member.setExtendVal("raft_meta_data", metaData);
+		member.setExtendVal("raftMetaData", metaData);
 		memberManager.update(member);
 	}
 

File: core/src/main/java/com/alibaba/nacos/core/notify/NotifyCenter.java
Patch:
@@ -67,11 +67,11 @@ public class NotifyCenter {
 	static {
 		// Internal ArrayBlockingQueue buffer size. For applications with high write throughput,
 		// this value needs to be increased appropriately. default value is 16384
-		String ringBufferSizeProperty = "com.alibaba.nacos.core.notify.ringBufferSize";
+		String ringBufferSizeProperty = "nacos.core.notify.ring-buffer-size";
 		RING_BUFFER_SIZE = Integer.getInteger(ringBufferSizeProperty, 16384);
 
 		// The size of the public publisher's message staging queue buffer
-		String shareBufferSizeProperty = "com.alibaba.nacos.core.notify.shareBufferSize";
+		String shareBufferSizeProperty = "nacos.core.notify.share-buffer-size";
 		SHATE_BUFFER_SIZE = Integer.getInteger(shareBufferSizeProperty, 1024);
 
 		ServiceLoader<EventPublisher> loader = ServiceLoader.load(EventPublisher.class);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -27,6 +27,7 @@
 /**
  * Report local server status to other server
  *
+ * @deprecated 1.3.0 This object will be deleted sometime after version 1.3.0
  * @author nacos
  */
 public class ServerStatusSynchronizer implements Synchronizer {
@@ -55,7 +56,6 @@ public Integer onCompleted(Response response) throws Exception {
                     if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {
                         Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}",
                             serverIP);
-
                         return 1;
                     }
                     return 0;

File: test/src/test/java/com/alibaba/nacos/test/core/notify/NotifyCenter_ITCase.java
Patch:
@@ -47,7 +47,7 @@ private static class TestEvent implements Event {
 	}
 
 	static {
-		System.setProperty("com.alibaba.nacos.core.notify.shareBufferSize", "8");
+		System.setProperty("nacos.core.notify.share-buffer-size", "8");
 	}
 
 	@Test

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -134,9 +134,7 @@ public static void syncToFile(Collection<Member> members) {
 
 	@SuppressWarnings("PMD.UndefineMagicConstantRule")
 	public static Collection<Member> kRandom(Collection<Member> members,
-			Predicate<Member> filter) {
-		int k = ApplicationUtils
-				.getProperty("nacos.core.member.report.random-num", Integer.class, 3);
+			Predicate<Member> filter, int k) {
 
         Set<Member> kMembers = new HashSet<>();
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -204,7 +204,7 @@ public RestResult<String> execute(Map<String, String> args) {
 
 	private void injectProtocolMetaData(ProtocolMetaData metaData) {
 		Member member = memberManager.getSelf();
-		member.setExtendVal("raft_meta_data", metaData);
+		member.setExtendVal("raftMetaData", metaData);
 		memberManager.update(member);
 	}
 

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -21,7 +21,6 @@
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
-import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;

File: common/src/main/java/com/alibaba/nacos/common/utils/MapUtils.java
Patch:
@@ -21,7 +21,6 @@
 import java.util.Collection;
 import java.util.Dictionary;
 import java.util.Map;
-import java.util.Objects;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -18,7 +18,6 @@
 
 import org.slf4j.Logger;
 
-import java.util.Objects;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.TimeUnit;

File: common/src/test/java/com/alibaba/nacos/common/utils/MapUtilsTest.java
Patch:
@@ -11,7 +11,7 @@ public class MapUtilsTest {
 
 	@Test
 	public void test_map() {
-		Map<Object, Object> map = new HashMap<>();
+		Map<Object, Object> map = new HashMap<Object, Object>();
 
 		MapUtils.putIfValNoNull(map, "key-1", null);
 		Assert.assertFalse(map.containsKey("key-1"));
@@ -40,7 +40,7 @@ public void test_map() {
 		MapUtils.putIfValNoEmpty(map, "key-map", Collections.emptyMap());
 		Assert.assertFalse(map.containsKey("key-map"));
 
-		Map<String, String> map1 = new HashMap<>();
+		Map<String, String> map1 = new HashMap<String, String>();
 		map1.put("1123", "123");
 
 		MapUtils.putIfValNoEmpty(map, "key-map", map1);

File: common/src/main/java/com/alibaba/nacos/common/executor/ThreadPoolManager.java
Patch:
@@ -70,7 +70,7 @@ public static ThreadPoolManager getInstance() {
     private ThreadPoolManager() {}
 
     private void init() {
-        resourcesManager = new ConcurrentHashMap<>(8);
+        resourcesManager = new ConcurrentHashMap<String, Map<String, Set<ExecutorService>>>(8);
     }
 
     /**
@@ -90,7 +90,7 @@ public void register(String namespace, String group, ExecutorService executor) {
         synchronized (monitor) {
             Map<String, Set<ExecutorService>> map = resourcesManager.get(namespace);
             if (map == null) {
-            	map = new HashMap<>(8);
+            	map = new HashMap<String, Set<ExecutorService>>(8);
             	map.put(group, new HashSet<ExecutorService>());
 				map.get(group).add(executor);
 				resourcesManager.put(namespace, map);

File: common/src/main/java/com/alibaba/nacos/common/utils/Observable.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.common.utils;
 
-import java.util.Objects;
 import java.util.Set;
 
 /**
@@ -25,7 +24,7 @@
 public class Observable {
 
 	private transient boolean changed = false;
-	private transient Set<Observer> obs = new ConcurrentHashSet<>();
+	private transient Set<Observer> obs = new ConcurrentHashSet<Observer>();
 	private volatile int observerCnt = 0;
 	private boolean alreadyAddObserver = false;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/Pair.java
Patch:
@@ -28,7 +28,7 @@ public class Pair<A, B> {
     }
 
     public static <A, B> Pair<A, B> with(A first, B second) {
-        return new Pair<>(first, second);
+        return new Pair<A, B>(first, second);
     }
 
     public A getFirst() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/datasource/LocalDataSourceServiceImpl.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.zaxxer.hikari.HikariDataSource;
 import java.io.File;

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/DerbySnapshotOperation.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.TimerContext;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -17,9 +17,9 @@
 package com.alibaba.nacos.core.cluster.lookup;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.file.FileChangeEvent;
-import com.alibaba.nacos.common.file.FileWatcher;
-import com.alibaba.nacos.common.file.WatchFileCenter;
+import com.alibaba.nacos.core.file.FileChangeEvent;
+import com.alibaba.nacos.core.file.FileWatcher;
+import com.alibaba.nacos.core.file.WatchFileCenter;
 import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -18,9 +18,9 @@
 import com.alibaba.nacos.common.executor.ExecutorFactory;
 import com.alibaba.nacos.common.executor.NameThreadFactory;
 import com.alibaba.nacos.common.executor.ThreadPoolManager;
-import com.alibaba.nacos.common.file.WatchFileCenter;
+import com.alibaba.nacos.core.file.WatchFileCenter;
 import com.alibaba.nacos.common.http.HttpClientManager;
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.InetUtils;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftUtils.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.distributed.raft.utils;
 
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.consistency.SerializeFactory;
 import com.alibaba.nacos.consistency.entity.GetRequest;
 import com.alibaba.nacos.common.utils.ThreadUtils;
@@ -34,7 +34,6 @@
 import com.alipay.sofa.jraft.conf.Configuration;
 import com.alipay.sofa.jraft.entity.PeerId;
 import com.alipay.sofa.jraft.option.NodeOptions;
-import com.alipay.sofa.jraft.rpc.RaftRpcFactory;
 import com.alipay.sofa.jraft.rpc.RaftRpcServerFactory;
 import com.alipay.sofa.jraft.rpc.RpcServer;
 import com.alipay.sofa.jraft.rpc.impl.GrpcRaftRpcFactory;

File: core/src/main/java/com/alibaba/nacos/core/file/FileChangeEvent.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.file;
+package com.alibaba.nacos.core.file;
 
 import java.io.Serializable;
 import java.nio.file.WatchEvent;

File: core/src/main/java/com/alibaba/nacos/core/file/FileWatcher.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.file;
+package com.alibaba.nacos.core.file;
 
 import java.nio.file.WatchEvent;
 import java.util.concurrent.Executor;

File: core/src/main/java/com/alibaba/nacos/core/file/WatchFileCenter.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.file;
+package com.alibaba.nacos.core.file;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.common.executor.ExecutorFactory;

File: core/src/main/java/com/alibaba/nacos/core/utils/ApplicationUtils.java
Patch:
@@ -17,9 +17,7 @@
 package com.alibaba.nacos.core.utils;
 
 import com.alibaba.nacos.common.JustForTest;
-import com.alibaba.nacos.common.utils.DiskUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
-import com.alibaba.nacos.common.utils.ShutdownUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.sun.management.OperatingSystemMXBean;
 import org.springframework.beans.BeansException;

File: core/src/main/java/com/alibaba/nacos/core/utils/DiskUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.common.utils;
+package com.alibaba.nacos.core.utils;
 
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
@@ -28,7 +28,6 @@
 import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
 import java.nio.channels.FileChannel;
-import java.nio.channels.FileLock;
 import java.nio.charset.Charset;
 import java.nio.charset.CharsetDecoder;
 import java.nio.charset.StandardCharsets;
@@ -41,6 +40,7 @@
 import java.util.zip.ZipInputStream;
 import java.util.zip.ZipOutputStream;
 
+import com.alibaba.nacos.common.utils.ByteUtils;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.io.output.NullOutputStream;

File: test/src/test/java/com/alibaba/nacos/test/core/BaseClusterTest.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.common.http.HttpClientManager;
 import com.alibaba.nacos.common.http.NSyncHttpClient;
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.service.repository.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.cp.CPProtocol;

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -17,7 +17,7 @@
 package com.alibaba.nacos.test.core.cluster;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.utils.DiskUtils;
+import com.alibaba.nacos.core.utils.DiskUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.cluster.lookup.AddressServerMemberLookup;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -302,7 +302,6 @@ public void onSnapshotSave(SnapshotWriter writer, Closure done) {
 
 				@Override
 				public boolean onSnapshotLoad(SnapshotReader reader) {
-					System.out.println("snapshot load");
 					final Map<String, LocalFileMeta> metaMap = new HashMap<>(
 							reader.listFiles().size());
 					for (String fileName : reader.listFiles()) {

File: client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java
Patch:
@@ -28,12 +28,13 @@
  * @author Nacos
  */
 public interface HttpAgent {
+
     /**
      * start to get nacos ip list
      * @return Nothing.
      * @throws NacosException on get ip list error.
      */
-    void start() throws NacosException;
+    void fetchServerIpList() throws NacosException;
 
     /**
      * invoke http get method

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -86,7 +86,7 @@ public JsonNode beat(HttpServletRequest request, HttpServletResponse response) t
 
         JsonNode json = JacksonUtils.toObj(value);
 
-        RaftPeer peer = raftCore.receivedBeat(json.get("beat"));
+        RaftPeer peer = raftCore.receivedBeat(JacksonUtils.toObj(json.get("beat").asText()));
 
         return JacksonUtils.transferToJsonNode(peer);
     }
@@ -128,7 +128,7 @@ public String publish(HttpServletRequest request, HttpServletResponse response)
         String value = URLDecoder.decode(entity, "UTF-8");
         JsonNode json = JacksonUtils.toObj(value);
 
-        String key = json.get("key").toString();
+        String key = json.get("key").asText();
         if (KeyBuilder.matchInstanceListKey(key)) {
             raftConsistencyService.put(key, JacksonUtils.toObj(json.get("value").toString(), Instances.class));
             return "ok";
@@ -233,7 +233,7 @@ public String onDelete(HttpServletRequest request, HttpServletResponse response)
         String value = URLDecoder.decode(entity, "UTF-8");
         value = URLDecoder.decode(value, "UTF-8");
 
-        JsonNode jsonObject = JacksonUtils.createEmptyJsonNode();
+        JsonNode jsonObject = JacksonUtils.toObj(value);
 
         Datum datum = JacksonUtils.toObj(jsonObject.get("datum").toString(), Datum.class);
         RaftPeer source = JacksonUtils.toObj(jsonObject.get("source").toString(), RaftPeer.class);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -288,8 +288,8 @@ public String serviceStatus(HttpServletRequest request) throws Exception {
         JsonNode json = JacksonUtils.toObj(value);
 
         //format: service1@@checksum@@@service2@@checksum
-        String statuses = json.get("statuses").toString();
-        String serverIp = json.get("clientIP").toString();
+        String statuses = json.get("statuses").asText();
+        String serverIp = json.get("clientIP").asText();
 
         if (!memberManager.hasMember(serverIp)) {
             throw new NacosException(NacosException.INVALID_PARAM,

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -119,6 +119,7 @@ public void destroy() {
         }
     }
 
+    @JsonIgnore
     public HealthCheckTask getHealthCheckTask() {
         return checkTask;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -128,7 +128,7 @@ public String publish(HttpServletRequest request, HttpServletResponse response)
         String value = URLDecoder.decode(entity, "UTF-8");
         JsonNode json = JacksonUtils.toObj(value);
 
-        String key = json.get("key").toString();
+        String key = json.get("key").asText();
         if (KeyBuilder.matchInstanceListKey(key)) {
             raftConsistencyService.put(key, JacksonUtils.toObj(json.get("value").toString(), Instances.class));
             return "ok";

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -233,7 +233,7 @@ public String onDelete(HttpServletRequest request, HttpServletResponse response)
         String value = URLDecoder.decode(entity, "UTF-8");
         value = URLDecoder.decode(value, "UTF-8");
 
-        JsonNode jsonObject = JacksonUtils.createEmptyJsonNode();
+        JsonNode jsonObject = JacksonUtils.toObj(value);
 
         Datum datum = JacksonUtils.toObj(jsonObject.get("datum").toString(), Datum.class);
         RaftPeer source = JacksonUtils.toObj(jsonObject.get("source").toString(), RaftPeer.class);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -86,7 +86,7 @@ public JsonNode beat(HttpServletRequest request, HttpServletResponse response) t
 
         JsonNode json = JacksonUtils.toObj(value);
 
-        RaftPeer peer = raftCore.receivedBeat(json.get("beat"));
+        RaftPeer peer = raftCore.receivedBeat(JacksonUtils.toObj(json.get("beat").asText()));
 
         return JacksonUtils.transferToJsonNode(peer);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -119,6 +119,7 @@ public void destroy() {
         }
     }
 
+    @JsonIgnore
     public HealthCheckTask getHealthCheckTask() {
         return checkTask;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -288,8 +288,8 @@ public String serviceStatus(HttpServletRequest request) throws Exception {
         JsonNode json = JacksonUtils.toObj(value);
 
         //format: service1@@checksum@@@service2@@checksum
-        String statuses = json.get("statuses").toString();
-        String serverIp = json.get("clientIP").toString();
+        String statuses = json.get("statuses").asText();
+        String serverIp = json.get("clientIP").asText();
 
         if (!memberManager.hasMember(serverIp)) {
             throw new NacosException(NacosException.INVALID_PARAM,

File: api/src/main/java/com/alibaba/nacos/api/selector/AbstractSelector.java
Patch:
@@ -16,13 +16,16 @@
 package com.alibaba.nacos.api.selector;
 
 import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonTypeInfo;
+import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
 
 /**
  * Abstract selector that only contains a type
  *
  * @author nkorange
  * @since 0.7.0
  */
+@JsonTypeInfo(use = Id.NAME, property = "type", defaultImpl = NoneSelector.class)
 public abstract class AbstractSelector {
 
     /**

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -24,11 +24,11 @@
 import com.alibaba.nacos.client.config.impl.SpasAdapter;
 import com.alibaba.nacos.client.identify.STSConfig;
 import com.alibaba.nacos.client.security.SecurityProxy;
-import com.alibaba.nacos.client.utils.JSONUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
 import org.apache.commons.lang3.StringUtils;
@@ -366,8 +366,7 @@ private STSCredential getSTSCredential() throws IOException {
             }
         }
         String stsResponse = getSTSResponse();
-        STSCredential stsCredentialTmp = JSONUtils.deserializeObject(stsResponse,
-            new TypeReference<STSCredential>() {
+        STSCredential stsCredentialTmp = JacksonUtils.toObj(stsResponse, new TypeReference<STSCredential>() {
             });
         sTSCredential = stsCredentialTmp;
         LOGGER.info("[getSTSCredential] code:{}, accessKeyId:{}, lastUpdated:{}, expiration:{}", sTSCredential.getCode(),

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -61,6 +61,7 @@ public NacosNamingMaintainService(Properties properties) {
     private void init(Properties properties) {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
+        InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         serverProxy = new NamingProxy(namespace, endpoint, serverList, properties);

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -86,6 +86,7 @@ public NacosNamingService(Properties properties) {
     private void init(Properties properties) {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
+        InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         initCacheDir();

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -447,7 +447,7 @@ private Selector parseSelector(String selectorJsonString) throws Exception {
             case none:
                 return new NoneSelector();
             case label:
-                String expression = selectorJson.get("expression").toString();
+                String expression = selectorJson.get("expression").asText();
                 Set<String> labels = LabelSelector.parseExpression(expression);
                 LabelSelector labelSelector = new LabelSelector();
                 labelSelector.setExpression(expression);

File: naming/src/main/java/com/alibaba/nacos/naming/selector/Selector.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.naming.selector;
 
-import com.alibaba.nacos.api.selector.NoneSelector;
 import com.alibaba.nacos.naming.core.Instance;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -37,6 +37,8 @@ public class InetUtils_ITCase {
 
 	static {
 		System.setProperty("nacos.core.inet.auto-refresh", "3");
+		// For load InetUtils.class
+		InetUtils.getSelfIp();
 	}
 
 	@Test

File: test/src/test/java/com/alibaba/nacos/test/core/JacksonUtils.java
Patch:
@@ -46,7 +46,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class JscksonUtils {
+public class JacksonUtils {
 
 	static ObjectMapper mapper = new ObjectMapper();
 

File: test/src/test/java/com/alibaba/nacos/test/naming/RandomUtils.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.alibaba.nacos.test.naming;
 
-import com.alibaba.nacos.test.BaseTest;
-
 import java.util.*;
 
 /**
@@ -25,7 +23,7 @@
  * @author wangtong.wt
  * @date 2018/6/20
  */
-public class RandomUtils extends BaseTest {
+public class RandomUtils {
     private static Random rd = new Random();
     private static int UNICODE_START = 19968;
     private static int UNICODE_END = 40864;

File: test/src/test/java/com/alibaba/nacos/test/core/JacksonUtils.java
Patch:
@@ -46,7 +46,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class JscksonUtils {
+public class JacksonUtils {
 
 	static ObjectMapper mapper = new ObjectMapper();
 

File: api/src/main/java/com/alibaba/nacos/api/selector/AbstractSelector.java
Patch:
@@ -16,13 +16,16 @@
 package com.alibaba.nacos.api.selector;
 
 import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonTypeInfo;
+import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;
 
 /**
  * Abstract selector that only contains a type
  *
  * @author nkorange
  * @since 0.7.0
  */
+@JsonTypeInfo(use = Id.NAME, property = "type", defaultImpl = NoneSelector.class)
 public abstract class AbstractSelector {
 
     /**

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -24,11 +24,11 @@
 import com.alibaba.nacos.client.config.impl.SpasAdapter;
 import com.alibaba.nacos.client.identify.STSConfig;
 import com.alibaba.nacos.client.security.SecurityProxy;
-import com.alibaba.nacos.client.utils.JSONUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
 import org.apache.commons.lang3.StringUtils;
@@ -366,8 +366,7 @@ private STSCredential getSTSCredential() throws IOException {
             }
         }
         String stsResponse = getSTSResponse();
-        STSCredential stsCredentialTmp = JSONUtils.deserializeObject(stsResponse,
-            new TypeReference<STSCredential>() {
+        STSCredential stsCredentialTmp = JacksonUtils.toObj(stsResponse, new TypeReference<STSCredential>() {
             });
         sTSCredential = stsCredentialTmp;
         LOGGER.info("[getSTSCredential] code:{}, accessKeyId:{}, lastUpdated:{}, expiration:{}", sTSCredential.getCode(),

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -61,6 +61,7 @@ public NacosNamingMaintainService(Properties properties) {
     private void init(Properties properties) {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
+        InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         serverProxy = new NamingProxy(namespace, endpoint, serverList, properties);

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -86,6 +86,7 @@ public NacosNamingService(Properties properties) {
     private void init(Properties properties) {
         ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
+        InitUtils.initSerialization();
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         initCacheDir();

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -447,7 +447,7 @@ private Selector parseSelector(String selectorJsonString) throws Exception {
             case none:
                 return new NoneSelector();
             case label:
-                String expression = selectorJson.get("expression").toString();
+                String expression = selectorJson.get("expression").asText();
                 Set<String> labels = LabelSelector.parseExpression(expression);
                 LabelSelector labelSelector = new LabelSelector();
                 labelSelector.setExpression(expression);

File: naming/src/main/java/com/alibaba/nacos/naming/selector/Selector.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.naming.selector;
 
-import com.alibaba.nacos.api.selector.NoneSelector;
 import com.alibaba.nacos.naming.core.Instance;
 import com.fasterxml.jackson.annotation.JsonTypeInfo;
 import com.fasterxml.jackson.annotation.JsonTypeInfo.Id;

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -37,6 +37,8 @@ public class InetUtils_ITCase {
 
 	static {
 		System.setProperty("nacos.core.inet.auto-refresh", "3");
+		// For load InetUtils.class
+		InetUtils.getSelfIp();
 	}
 
 	@Test

File: test/src/test/java/com/alibaba/nacos/test/naming/RandomUtils.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.alibaba.nacos.test.naming;
 
-import com.alibaba.nacos.test.BaseTest;
-
 import java.util.*;
 
 /**
@@ -25,7 +23,7 @@
  * @author wangtong.wt
  * @date 2018/6/20
  */
-public class RandomUtils extends BaseTest {
+public class RandomUtils {
     private static Random rd = new Random();
     private static int UNICODE_START = 19968;
     private static int UNICODE_END = 40864;

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -25,5 +25,7 @@ public interface HttpHeaderConsts {
     String CLIENT_VERSION_HEADER = "Client-Version";
     String USER_AGENT_HEADER = "User-Agent";
     String REQUEST_SOURCE_HEADER = "Request-Source";
+    String CONTENT_TYPE = "Content-Type";
+    String CONTENT_LENGTH = "Content-Length";
 
 }

File: common/src/main/java/com/alibaba/nacos/common/http/param/MediaType.java
Patch:
@@ -35,6 +35,8 @@ private MediaType() {}
 
     public static final String APPLICATION_XML = "application/xml";
 
+    public static final String APPLICATION_JSON = "application/json;charset=UTF-8";
+
     public static final String MULTIPART_FORM_DATA = "multipart/form-data";
 
     public static final String TEXT_HTML = "text/html";

File: common/src/main/java/com/alibaba/nacos/common/http/param/Query.java
Patch:
@@ -52,10 +52,11 @@ public Object getValue(String key) {
         return params.get(key);
     }
 
-    public void initParams(Map<String, String> params) {
+    public Query initParams(Map<String, String> params) {
         for (Map.Entry<String, String> entry : params.entrySet()) {
             addParam(entry.getKey(), entry.getValue());
         }
+        return this;
     }
 
     public void initParams(List<String> list) {

File: api/src/test/java/com/alibaba/nacos/api/annotation/NacosPropertiesTest.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.api.annotation;
 
-import com.alibaba.fastjson.JSON;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.mock.env.MockEnvironment;

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -34,7 +34,6 @@
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
-import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -44,7 +43,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Properties;
-import java.util.concurrent.TimeUnit;
 
 /**
  * Nacos Naming Service

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -15,13 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.backups;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.cache.ConcurrentDiskUtil;
 import com.alibaba.nacos.client.naming.cache.DiskCache;
 import com.alibaba.nacos.client.naming.core.HostReactor;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
+import com.alibaba.nacos.common.utils.JacksonUtils;
+
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.BufferedReader;
@@ -180,7 +181,7 @@ public void run() {
                         String json;
                         if ((json = reader.readLine()) != null) {
                             try {
-                                dom = JSON.parseObject(json, ServiceInfo.class);
+                                dom = JacksonUtils.toObj(json, ServiceInfo.class);
                             } catch (Exception e) {
                                 NAMING_LOGGER.error("[NA] error while parsing cached dom : " + json, e);
                             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.naming.core;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
 
@@ -75,7 +75,7 @@ public void run() {
                 String json = new String(IoUtils.tryDecompress(packet.getData()), "UTF-8").trim();
                 NAMING_LOGGER.info("received push data: " + json + " from " + packet.getAddress().toString());
 
-                PushPacket pushPacket = JSON.parseObject(json, PushPacket.class);
+                PushPacket pushPacket = JacksonUtils.toObj(json, PushPacket.class);
                 String ack;
                 if ("dom".equals(pushPacket.type) || "service".equals(pushPacket.type)) {
                     hostReactor.processServiceJSON(pushPacket.data);
@@ -89,7 +89,7 @@ public void run() {
                     ack = "{\"type\": \"dump-ack\""
                         + ", \"lastRefTime\": \"" + pushPacket.lastRefTime
                         + "\", \"data\":" + "\""
-                        + StringUtils.escapeJavaScript(JSON.toJSONString(hostReactor.getServiceInfoMap()))
+                        + StringUtils.escapeJavaScript(JacksonUtils.toJson(hostReactor.getServiceInfoMap()))
                         + "\"}";
                 } else {
                     // do nothing send ack only

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedPermissionPersistServiceImpl.java
Patch:
@@ -74,13 +74,13 @@ public Page<PermissionInfo> getPermissions(String role, int pageNo, int pageSize
 	public void addPermission(String role, String resource, String action) {
 		String sql = "INSERT into permissions (role, resource, action) VALUES (?, ?, ?)";
 		EmbeddedStorageContextUtils.addSqlContext(sql, role, resource, action);
-		databaseOperate.smartUpdate();
+		databaseOperate.blockUpdate();
 	}
 
 	public void deletePermission(String role, String resource, String action) {
 		String sql = "DELETE from permissions WHERE role=? and resource=? and action=?";
 		EmbeddedStorageContextUtils.addSqlContext(sql, role, resource, action);
-		databaseOperate.smartUpdate();
+		databaseOperate.blockUpdate();
 	}
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/auth/EmbeddedUserPersistServiceImpl.java
Patch:
@@ -51,7 +51,7 @@ public void createUser(String username, String password) {
 
 		try {
 			EmbeddedStorageContextUtils.addSqlContext(sql, username, password, true);
-			databaseOperate.smartUpdate();
+			databaseOperate.blockUpdate();
 		} finally {
 			EmbeddedStorageContextUtils.cleanAllContext();
 		}
@@ -61,7 +61,7 @@ public void deleteUser(String username) {
 		String sql = "DELETE from users WHERE username=?";
 		try {
 			EmbeddedStorageContextUtils.addSqlContext(sql, username);
-			databaseOperate.smartUpdate();
+			databaseOperate.blockUpdate();
 		} finally {
 			EmbeddedStorageContextUtils.cleanAllContext();
 		}
@@ -72,7 +72,7 @@ public void updateUserPassword(String username, String password) {
 			EmbeddedStorageContextUtils.addSqlContext(
 					"UPDATE users SET password = ? WHERE username=?",
 					password, username);
-			databaseOperate.smartUpdate();
+			databaseOperate.blockUpdate();
 		} finally {
 			EmbeddedStorageContextUtils.cleanAllContext();
 		}

File: config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorRecoverEvent;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
+import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
@@ -115,7 +116,7 @@ public void destroy() {
 
 	private void listenerSelfInCluster() {
 		protocol.protocolMetaData().subscribe(Constants.CONFIG_MODEL_RAFT_GROUP,
-				com.alibaba.nacos.consistency.cp.Constants.RAFT_GROUP_MEMBER,
+				MetadataKey.RAFT_GROUP_MEMBER,
 				new Observer() {
 					@Override
 					public void update(Observable o, Object arg) {

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/MetadataKey.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class Constants {
+public class MetadataKey {
 
     public static final String LEADER_META_DATA = "leader";
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -301,13 +301,13 @@ public void run(Status status, long index, byte[] reqCtx) {
 							future.complete(response);
 						}
 						catch (Throwable t) {
-							future.completeExceptionally(t);
+							future.completeExceptionally(new ConsistencyException("The conformance protocol is temporarily unavailable for reading", t));
 						}
 						return;
 					}
 					Loggers.RAFT.error("ReadIndex has error : {}", status.getErrorMsg());
 					future.completeExceptionally(
-							new ConsistencyException("The conformance protocol is temporarily unavailable for reading"));
+							new ConsistencyException("The conformance protocol is temporarily unavailable for reading, " + status.getErrorMsg()));
 				}
 			});
 			return future;
@@ -327,7 +327,7 @@ public void readFromLeader(final GetRequest request,
 					@Override
 					public void accept(Response response, Throwable throwable) {
 						if (Objects.nonNull(throwable)) {
-							future.completeExceptionally(throwable);
+							future.completeExceptionally(new ConsistencyException("The conformance protocol is temporarily unavailable for reading", throwable));
 							return;
 						}
 						if (response.getSuccess()) {

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.LoggerUtils;

File: test/src/test/java/com/alibaba/nacos/test/core/BaseClusterTest.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.service.repository.DistributedDatabaseOperateImpl;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
-import com.alibaba.nacos.consistency.cp.Constants;
+import com.alibaba.nacos.consistency.cp.MetadataKey;
 import com.alibaba.nacos.core.notify.Event;
 import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.notify.listener.Subscribe;
@@ -201,7 +201,7 @@ private static void run(final int index, final CountDownLatch latch, final Class
 				CPProtocol protocol = context.getBean(CPProtocol.class);
 
 				protocol.protocolMetaData()
-						.subscribe(operate.group(), Constants.LEADER_META_DATA,
+						.subscribe(operate.group(), MetadataKey.LEADER_META_DATA,
 								(o, arg) -> {
 									System.out.println("node : 884" + (7 + index) + "-> select leader is : " + arg);
 									if (finished[index].compareAndSet(false, true)) {

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -387,7 +387,7 @@ public ListView<String> getServiceList(int pageNo, int pageSize, String groupNam
         JsonNode json = JacksonUtils.toObj(result);
         ListView<String> listView = new ListView<>();
         listView.setCount(json.get("count").asInt());
-        listView.setData(JacksonUtils.toObj(json.get("doms").asText(), new TypeReference<List<String>>() {}));
+        listView.setData(JacksonUtils.toObj(json.get("doms").toString(), new TypeReference<List<String>>() {}));
 
         return listView;
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.consistency.LogProcessor;
 import com.alibaba.nacos.consistency.cp.LogProcessor4CP;
@@ -305,7 +305,7 @@ public boolean onSnapshotLoad(SnapshotReader reader) {
 							fileMeta = new LocalFileMeta();
 						}
 						else {
-							fileMeta = JSON.parseObject(bytes, LocalFileMeta.class);
+							fileMeta = JacksonUtils.toObj(bytes, LocalFileMeta.class);
 						}
 
 						metaMap.put(fileName, fileMeta);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcher.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.naming.misc.*;
 import org.apache.commons.lang3.StringUtils;
@@ -125,7 +125,7 @@ public void run() {
                             syncTask.setTargetServer(member.getAddress());
 
                             if (Loggers.DISTRO.isDebugEnabled() && StringUtils.isNotBlank(key)) {
-                                Loggers.DISTRO.debug("add sync task: {}", JSON.toJSONString(syncTask));
+                                Loggers.DISTRO.debug("add sync task: {}", JacksonUtils.toJson(syncTask));
                             }
 
                             dataSyncer.submit(syncTask, 0);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftListener.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -52,8 +52,8 @@ public void onApplicationEvent(ApplicationEvent event) {
 		if (event instanceof BaseRaftEvent) {
 			BaseRaftEvent raftEvent = (BaseRaftEvent) event;
 			RaftPeer local = raftEvent.getLocal();
-			String json = JSON.toJSONString(local);
-			Map map = JSON.parseObject(json, HashMap.class);
+			String json = JacksonUtils.toJson(local);
+			Map map = JacksonUtils.toObj(json, HashMap.class);
 			Member self = memberManager.getSelf();
 			self.setExtendVal(GROUP, map);
 			memberManager.update(self);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberChangeListener;
 import com.alibaba.nacos.core.cluster.MemberChangeEvent;
@@ -171,7 +171,7 @@ public RaftPeer makeLeader(RaftPeer candidate) {
             leader = candidate;
             ApplicationUtils.publishEvent(new MakeLeaderEvent(this, leader, local()));
             Loggers.RAFT.info("{} has become the LEADER, local: {}, leader: {}",
-                leader.ip, JSON.toJSONString(local()), JSON.toJSONString(leader));
+                leader.ip, JacksonUtils.toJson(local()), JacksonUtils.toJson(leader));
         }
 
         for (final RaftPeer peer : peers.values()) {
@@ -189,7 +189,7 @@ public Integer onCompleted(Response response) throws Exception {
                                 return 1;
                             }
 
-                            update(JSON.parseObject(response.getResponseBody(), RaftPeer.class));
+                            update(JacksonUtils.toObj(response.getResponseBody(), RaftPeer.class));
 
                             return 0;
                         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/SubscribeManager.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.alibaba.nacos.naming.core;
 
-import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.naming.CommonParams;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
@@ -93,7 +93,7 @@ public List<Subscriber> getSubscribers(String serviceName, String namespaceId, b
                     + UtilsAndCommons.NACOS_NAMING_CONTEXT + SUBSCRIBER_ON_SYNC_URL, new ArrayList<>(), paramValues);
 
                 if (HttpURLConnection.HTTP_OK == result.code) {
-                    Subscribers subscribers = (Subscribers) JSONObject.parseObject(result.content, Subscribers.class);
+                    Subscribers subscribers = JacksonUtils.toObj(result.content, Subscribers.class);
                     subscriberList.addAll(subscribers.getSubscribers());
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -15,15 +15,14 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-
-import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.push.PushService;
+import com.fasterxml.jackson.annotation.JsonIgnore;
 
 import java.util.List;
 import java.util.concurrent.TimeUnit;
@@ -38,7 +37,7 @@ public class ClientBeatProcessor implements Runnable {
     private RsInfo rsInfo;
     private Service service;
 
-    @JSONField(serialize = false)
+    @JsonIgnore
     public PushService getPushService() {
         return ApplicationUtils.getBean(PushService.class);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/RsInfo.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 
 import java.util.Map;
 
@@ -145,6 +145,6 @@ public void setMetadata(Map<String, String> metadata) {
 
     @Override
     public String toString() {
-        return JSON.toJSONString(this);
+        return JacksonUtils.toJson(this);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.Response;
@@ -50,7 +50,7 @@ public void send(final String serverIP, Message msg) {
         }
 
         try {
-            HttpClient.asyncHttpPostLarge(url, null, JSON.toJSONString(params), new AsyncCompletionHandler() {
+            HttpClient.asyncHttpPostLarge(url, null, JacksonUtils.toJson(params), new AsyncCompletionHandler() {
                 @Override
                 public Integer onCompleted(Response response) throws Exception {
                     if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.stereotype.Component;
 
@@ -368,7 +368,7 @@ public void setLightBeatEnabled(boolean lightBeatEnabled) {
 
     @Override
     public String toString() {
-        return JSON.toJSONString(this);
+        return JacksonUtils.toJson(this);
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -15,9 +15,9 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
@@ -78,7 +78,7 @@ public void update(String entry, String value, boolean debug) throws Exception {
 
             if (SwitchEntry.BATCH.equals(entry)) {
                 //batch update
-                SwitchDomain dom = JSON.parseObject(value, SwitchDomain.class);
+                SwitchDomain dom = JacksonUtils.toObj(value, SwitchDomain.class);
                 dom.setEnableStandalone(switchDomain.isEnableStandalone());
                 if (dom.getHttpHealthParams().getMin() < SwitchDomain.HttpHealthParams.MIN_MIN
                     || dom.getTcpHealthParams().getMin() < SwitchDomain.HttpHealthParams.MIN_MIN) {

File: core/src/main/java/com/alibaba/nacos/core/auth/Secured.java
Patch:
@@ -44,7 +44,7 @@
     String resource() default StringUtils.EMPTY;
 
     /**
-     * Resource name parser. Should have lower priority than name()
+     * Resource name parser. Should have lower priority than resource()
      *
      * @return class type of resource parser
      */

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftEvent.java
Patch:
@@ -30,7 +30,7 @@ public class RaftEvent implements SlowEvent {
 
     private String groupId;
 
-    private String leader;
+    private String leader = null;
 
     private Long term = null;
 

File: api/src/test/java/com/alibaba/nacos/api/annotation/NacosPropertiesTest.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.api.annotation;
 
-import com.alibaba.fastjson.JSON;
 import org.junit.Assert;
 import org.junit.Test;
 import org.springframework.mock.env.MockEnvironment;

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -34,7 +34,6 @@
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
-import com.alibaba.nacos.client.security.SecurityProxy;
 import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -44,7 +43,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Properties;
-import java.util.concurrent.TimeUnit;
 
 /**
  * Nacos Naming Service

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -15,13 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.backups;
 
-import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.cache.ConcurrentDiskUtil;
 import com.alibaba.nacos.client.naming.cache.DiskCache;
 import com.alibaba.nacos.client.naming.core.HostReactor;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
+import com.alibaba.nacos.common.utils.JacksonUtils;
+
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.BufferedReader;
@@ -180,7 +181,7 @@ public void run() {
                         String json;
                         if ((json = reader.readLine()) != null) {
                             try {
-                                dom = JSON.parseObject(json, ServiceInfo.class);
+                                dom = JacksonUtils.toObj(json, ServiceInfo.class);
                             } catch (Exception e) {
                                 NAMING_LOGGER.error("[NA] error while parsing cached dom : " + json, e);
                             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.naming.core;
 
-import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.common.utils.JacksonUtils;
 import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
 
@@ -75,7 +75,7 @@ public void run() {
                 String json = new String(IoUtils.tryDecompress(packet.getData()), "UTF-8").trim();
                 NAMING_LOGGER.info("received push data: " + json + " from " + packet.getAddress().toString());
 
-                PushPacket pushPacket = JSON.parseObject(json, PushPacket.class);
+                PushPacket pushPacket = JacksonUtils.toObj(json, PushPacket.class);
                 String ack;
                 if ("dom".equals(pushPacket.type) || "service".equals(pushPacket.type)) {
                     hostReactor.processServiceJSON(pushPacket.data);
@@ -89,7 +89,7 @@ public void run() {
                     ack = "{\"type\": \"dump-ack\""
                         + ", \"lastRefTime\": \"" + pushPacket.lastRefTime
                         + "\", \"data\":" + "\""
-                        + StringUtils.escapeJavaScript(JSON.toJSONString(hostReactor.getServiceInfoMap()))
+                        + StringUtils.escapeJavaScript(JacksonUtils.toJson(hostReactor.getServiceInfoMap()))
                         + "\"}";
                 } else {
                     // do nothing send ack only

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ExternalStoragePersistServiceImpl.java
Patch:
@@ -630,7 +630,7 @@ public long findConfigMaxId() {
 		try {
 			return jt.queryForObject(sql, Long.class);
 		} catch (NullPointerException e) {
-			return 0l;
+			return 0;
 		}
 	}
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ExternalStoragePersistServiceImpl.java
Patch:
@@ -628,9 +628,9 @@ public int findConfigHistoryCountByTime(final Timestamp startTime) {
 	public long findConfigMaxId() {
 		String sql = "SELECT max(id) FROM config_info";
 		try {
-			return jt.queryForObject(sql, Integer.class);
+			return jt.queryForObject(sql, Long.class);
 		} catch (NullPointerException e) {
-			return 0;
+			return 0l;
 		}
 	}
 

File: address/src/main/java/com/alibaba/nacos/address/controller/AddressServerClusterController.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.address.misc.Loggers;
 import com.alibaba.nacos.address.util.AddressServerParamCheckUtil;
 import com.alibaba.nacos.api.common.Constants;
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;

File: api/src/main/java/com/alibaba/nacos/api/selector/ExpressionSelector.java
Patch:
@@ -29,7 +29,7 @@ public class ExpressionSelector extends AbstractSelector {
     private String expression;
 
     public ExpressionSelector() {
-        this.setType(SelectorType.label.name());
+        super(SelectorType.label.name());
     }
 
     public String getExpression() {

File: api/src/main/java/com/alibaba/nacos/api/selector/NoneSelector.java
Patch:
@@ -23,6 +23,6 @@
 public class NoneSelector extends AbstractSelector {
 
     public NoneSelector() {
-        this.setType(SelectorType.none.name());
+        super(SelectorType.none.name());
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Http;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
@@ -115,7 +115,7 @@ public void process(HealthCheckTask task) {
                     continue;
                 }
 
-                AbstractHealthChecker.Http healthChecker = (AbstractHealthChecker.Http) cluster.getHealthChecker();
+                Http healthChecker = (Http) cluster.getHealthChecker();
 
                 int ckPort = cluster.isUseIPPort4Check() ? ip.getPort() : cluster.getDefCkport();
                 URL host = new URL("http://" + ip.getIp() + ":" + ckPort);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/MysqlHealthCheckProcessor.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.impl.Mysql;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -146,7 +146,7 @@ public void run() {
                 Cluster cluster = task.getCluster();
                 String key = cluster.getService().getName() + ":" + cluster.getName() + ":" + ip.getIp() + ":" + ip.getPort();
                 Connection connection = CONNECTION_POOL.get(key);
-                AbstractHealthChecker.Mysql config = (AbstractHealthChecker.Mysql) cluster.getHealthChecker();
+                Mysql config = (Mysql) cluster.getHealthChecker();
 
                 if (connection == null || connection.isClosed()) {
                     MysqlDataSource dataSource = new MysqlDataSource();

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/extend/HealthCheckExtendProvider.java
Patch:
@@ -15,9 +15,9 @@
  */
 package com.alibaba.nacos.naming.healthcheck.extend;
 
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.AbstractHealthChecker;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckProcessor;
-import com.alibaba.nacos.naming.healthcheck.HealthCheckType;
+import com.alibaba.nacos.api.naming.pojo.healthcheck.HealthCheckType;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceManagerTest.java
Patch:
@@ -49,6 +49,9 @@ public class ServiceManagerTest extends BaseTest {
     @Before
     public void before() {
         super.before();
+        mockInjectHealthCheckProcessor();
+        mockInjectDistroMapper();
+        mockInjectSwitchDomain();
     }
 
     @Test

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorEvent.java
Patch:
@@ -15,13 +15,13 @@
  */
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.core.notify.SlowEvent;
 
 /**
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
-public class RaftDBErrorEvent implements Event {
+public class RaftDBErrorEvent implements SlowEvent {
 
 	private static final long serialVersionUID = 101591819161802336L;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/DistributedDatabaseOperateImpl.java
Patch:
@@ -155,7 +155,7 @@ protected void init() throws Exception {
 		this.transactionTemplate = dataSourceService.getTransactionTemplate();
 
 		// Registers a Derby Raft state machine failure event for node degradation processing
-		NotifyCenter.registerToPublisher(RaftDBErrorEvent.class, 8);
+		NotifyCenter.registerToSharePublisher(RaftDBErrorEvent.class);
 
 		NotifyCenter.registerSubscribe(new Subscribe<RaftDBErrorEvent>() {
 			@Override

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -175,6 +175,7 @@ public void onEvent(InetUtils.IPChangeEvent event) {
 				String oldAddress = event.getOldIp() + ":" + port;
 				String newAddress = event.getNewIp() + ":" + port;
 				ServerMemberManager.this.localAddress = newAddress;
+				ApplicationUtils.setLocalAddress(localAddress);
 
 				Member self = ServerMemberManager.this.self;
 				self.setIp(event.getNewIp());

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorEvent.java
Patch:
@@ -15,13 +15,13 @@
  */
 package com.alibaba.nacos.config.server.model.event;
 
-import com.alibaba.nacos.core.notify.Event;
+import com.alibaba.nacos.core.notify.SlowEvent;
 
 /**
  * @author <a href="mailto:liaochunyhm@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
-public class RaftDBErrorEvent implements Event {
+public class RaftDBErrorEvent implements SlowEvent {
 
 	private static final long serialVersionUID = 101591819161802336L;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/DistributedDatabaseOperateImpl.java
Patch:
@@ -155,7 +155,7 @@ protected void init() throws Exception {
 		this.transactionTemplate = dataSourceService.getTransactionTemplate();
 
 		// Registers a Derby Raft state machine failure event for node degradation processing
-		NotifyCenter.registerToPublisher(RaftDBErrorEvent.class, 8);
+		NotifyCenter.registerToSharePublisher(RaftDBErrorEvent.class);
 
 		NotifyCenter.registerSubscribe(new Subscribe<RaftDBErrorEvent>() {
 			@Override

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -175,6 +175,7 @@ public void onEvent(InetUtils.IPChangeEvent event) {
 				String oldAddress = event.getOldIp() + ":" + port;
 				String newAddress = event.getNewIp() + ":" + port;
 				ServerMemberManager.this.localAddress = newAddress;
+				ApplicationUtils.setLocalAddress(localAddress);
 
 				Member self = ServerMemberManager.this.self;
 				self.setIp(event.getNewIp());

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -301,7 +301,7 @@ private static String encodeDatumKey(String datumKey) {
         return datumKey.replace(':', '#');
     }
 
-    private static String decodeDatumKey(String DatumKey) {
-        return DatumKey.replace("#", ":");
+    private static String decodeDatumKey(String datumKey) {
+        return datumKey.replace("#", ":");
     }
 }

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpServiceTest.java
Patch:
@@ -16,7 +16,7 @@ public class DumpServiceTest {
     DumpService service;
 
     @Test
-    public void init() throws Exception {
+    public void init() throws Throwable {
         service.init();
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.Pair;
 import org.slf4j.Logger;
 
@@ -39,7 +38,7 @@ public static void start(String name) {
     public static void end(final Logger logger) {
         long endTime = System.currentTimeMillis();
         Pair<String, Long> record = TIME_RECORD.get();
-        LoggerUtils.printIfDebugEnabled(logger, "{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
+        logger.info("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
         TIME_RECORD.remove();
     }
 

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -30,6 +30,7 @@
  */
 public class StringUtils {
 
+    public static final String DOT = ".";
 
     private static final int INDEX_NOT_FOUND = -1;
 

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -39,7 +39,7 @@ public static void start(String name) {
     public static void end(final Logger logger) {
         long endTime = System.currentTimeMillis();
         Pair<String, Long> record = TIME_RECORD.get();
-        LoggerUtils.printIfDebugEnabled(logger, "{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
+        logger.info("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
         TIME_RECORD.remove();
     }
 

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingMaintainService.java
Patch:
@@ -38,6 +38,7 @@ public interface NamingMaintainService {
      * @param instance
      * @throws NacosException
      */
+    @Deprecated
     void updateInstance(String serviceName, Instance instance) throws NacosException;
 
     /**
@@ -48,6 +49,7 @@ public interface NamingMaintainService {
      * @param instance
      * @throws NacosException
      */
+    @Deprecated
     void updateInstance(String serviceName, String groupName, Instance instance) throws NacosException;
 
     /**

File: common/src/main/java/com/alibaba/nacos/common/executor/NameThreadFactory.java
Patch:
@@ -29,6 +29,9 @@ public class NameThreadFactory implements ThreadFactory {
 	private String name;
 
 	public NameThreadFactory(String name) {
+		if (!name.endsWith(".")) {
+			name += ".";
+		}
 		this.name = name;
 	}
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftMaintainService.java
Patch:
@@ -70,10 +70,10 @@ private RestResult<String> single(CliService cliService, String groupId, Node no
 			if (node == null) {
 				return RestResultUtils.failed("not this raft group : " + groupId);
 			}
-			final String command = args.keySet().iterator().next();
+			final String command = args.get(JRaftConstants.COMMAND_NAME);
 			JRaftOps ops = JRaftOps.sourceOf(command);
 			if (Objects.isNull(ops)) {
-				return RestResultUtils.failed("Not support command");
+				return RestResultUtils.failed("Not support command : " + command);
 			}
 			return ops.execute(cliService, groupId, node, args);
 		}

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftMaintainService.java
Patch:
@@ -70,10 +70,10 @@ private RestResult<String> single(CliService cliService, String groupId, Node no
 			if (node == null) {
 				return RestResultUtils.failed("not this raft group : " + groupId);
 			}
-			final String command = args.keySet().iterator().next();
+			final String command = args.get(JRaftConstants.COMMAND_NAME);
 			JRaftOps ops = JRaftOps.sourceOf(command);
 			if (Objects.isNull(ops)) {
-				return RestResultUtils.failed("Not support command");
+				return RestResultUtils.failed("Not support command : " + command);
 			}
 			return ops.execute(cliService, groupId, node, args);
 		}

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftServer.java
Patch:
@@ -528,7 +528,8 @@ boolean peerChange(JRaftMaintainService maintainService, Set<String> newPeers) {
 			public void accept(String group, RaftGroupTuple tuple) {
 				Map<String, String> params = new HashMap<>();
 				params.put(JRaftConstants.GROUP_ID, group);
-				params.put(JRaftConstants.REMOVE_PEERS, Joiner.on(",").join(waitRemove));
+				params.put(JRaftConstants.COMMAND_NAME, JRaftConstants.REMOVE_PEERS);
+				params.put(JRaftConstants.COMMAND_VALUE, Joiner.on(",").join(waitRemove));
 				RestResult<String> result = maintainService.execute(params);
 				if (result.ok()) {
 					successCnt.incrementAndGet();

File: core/src/main/java/com/alibaba/nacos/core/cluster/ServerMemberManager.java
Patch:
@@ -269,7 +269,7 @@ synchronized boolean memberChange(Collection<Member> members) {
 					.warn("[serverlist] self ip {} not in serverlist {}", self, members);
 		}
 
-		boolean hasChange = false;
+		boolean hasChange = members.size() == serverList.size();
 		ConcurrentSkipListMap<String, Member> tmpMap = new ConcurrentSkipListMap();
 		Set<String> tmpAddressInfo = new ConcurrentHashSet<>();
 		for (Member member : members) {

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -62,7 +62,7 @@ public RestResult<String> raftOps(@RequestBody Map<String, String> commands) {
 
 	@GetMapping(value = "/idInfo")
 	public RestResult<Map<String, Map<Object, Object>>> idInfo() {
-		Map<String, Map<Object, Object>> info = new HashMap<>(8);
+		Map<String, Map<Object, Object>> info = new HashMap<>(10);
 		idGeneratorManager.getGeneratorMap()
 				.forEach(
 						(resource, idGenerator) -> info.put(resource, idGenerator.info()));

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -62,7 +62,7 @@ public RestResult<String> raftOps(@RequestBody Map<String, String> commands) {
 
 	@GetMapping(value = "/idInfo")
 	public RestResult<Map<String, Map<Object, Object>>> idInfo() {
-		Map<String, Map<Object, Object>> info = new HashMap<>();
+		Map<String, Map<Object, Object>> info = new HashMap<>(8);
 		idGeneratorManager.getGeneratorMap()
 				.forEach(
 						(resource, idGenerator) -> info.put(resource, idGenerator.info()));

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -62,7 +62,7 @@ public RestResult<String> raftOps(@RequestBody Map<String, String> commands) {
 
 	@GetMapping(value = "/idInfo")
 	public RestResult<Map<String, Map<Object, Object>>> idInfo() {
-		Map<String, Map<Object, Object>> info = new HashMap<>();
+		Map<String, Map<Object, Object>> info = new HashMap<>(10);
 		idGeneratorManager.getGeneratorMap()
 				.forEach(
 						(resource, idGenerator) -> info.put(resource, idGenerator.info()));

File: config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java
Patch:
@@ -24,7 +24,6 @@
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorRecoverEvent;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.consistency.cp.CPProtocol;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;
@@ -33,7 +32,6 @@
 import com.alibaba.nacos.core.notify.Event;
 import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.notify.listener.SmartSubscribe;
-import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.ReuseHttpRequest;
 import com.alibaba.nacos.core.utils.ReuseHttpServletRequest;
 import com.alibaba.nacos.core.utils.ReuseUploadFileHttpServletRequest;

File: consistency/src/main/java/com/alibaba/nacos/consistency/ConsistencyProtocol.java
Patch:
@@ -17,10 +17,9 @@
 package com.alibaba.nacos.consistency;
 
 
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.consistency.entity.GetRequest;
-import com.alibaba.nacos.consistency.entity.GetResponse;
 import com.alibaba.nacos.consistency.entity.Log;
+import com.alibaba.nacos.consistency.entity.Response;
 
 import java.util.Collection;
 import java.util.Set;
@@ -72,7 +71,7 @@ public interface ConsistencyProtocol<T extends Config, P extends LogProcessor> e
      * @return data {@link GetRequest}
      * @throws Exception
      */
-    GetResponse getData(GetRequest request) throws Exception;
+    Response getData(GetRequest request) throws Exception;
 
     /**
      * Data operation, returning submission results synchronously

File: consistency/src/main/java/com/alibaba/nacos/consistency/exception/ConsistencyException.java
Patch:
@@ -41,4 +41,5 @@ public ConsistencyException(Throwable cause) {
     protected ConsistencyException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
         super(message, cause, enableSuppression, writableStackTrace);
     }
+
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/LookupFactory.java
Patch:
@@ -146,7 +146,6 @@ private static LookupType chooseLookup(String lookupType) {
 			}
 		}
 		File file = new File(ApplicationUtils.getClusterConfFilePath());
-
 		if (file.exists() || StringUtils.isNotBlank(ApplicationUtils.getMemberList())) {
 			return LookupType.FILE_CONFIG;
 		}

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -43,9 +43,10 @@ public CoreOpsController(ProtocolManager protocolManager) {
 	// Temporarily overpassed the raft operations interface
 	// {
 	//		"groupId": "xxx",
-	//		"transferLeader": "ip:{raft_port}",
-	//		"doSnapshot": "ip:{raft_port}",
+	//		"transferLeader": "ip:{raft_port}"
+	//		"doSnapshot": "ip:{raft_port}"
 	//		"resetRaftCluster": "ip:{raft_port},ip:{raft_port},ip:{raft_port},ip:{raft_port}"
+	//		"removePeer": "ip:{raft_port}"
 	// }
 
 	@PostMapping(value = "/raft")

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftConstants.java
Patch:
@@ -32,4 +32,6 @@ public class JRaftConstants {
 
 	public static final String DO_SNAPSHOT = "doSnapshot";
 
+	public static final String REMOVE_PEER = "removePeer";
+
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/IdGeneratorManager.java
Patch:
@@ -70,4 +70,7 @@ public long nextId(String resource) {
                 "ID resource for the time being.");
     }
 
+    public Map<String, IdGenerator> getGeneratorMap() {
+        return generatorMap;
+    }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -81,13 +81,14 @@ public String setLogLevel(@RequestParam String logName, @RequestParam String log
     @GetMapping(value = "/derby")
     public RestResult<Object> derbyOps(@RequestParam(value = "sql") String sql) {
         String selectSign = "select";
+        String limitSign = "ROWS FETCH NEXT";
         String limit = " OFFSET 0 ROWS FETCH NEXT 1000 ROWS ONLY";
         try {
             if (PropertyUtil.isEmbeddedStorage()) {
                 LocalDataSourceServiceImpl dataSourceService = (LocalDataSourceServiceImpl) DynamicDataSource
                         .getInstance().getDataSource();
                 if (StringUtils.startsWithIgnoreCase(sql, selectSign)) {
-                    if (!StringUtils.containsIgnoreCase(sql, "ROWS FETCH NEXT")) {
+                    if (!StringUtils.containsIgnoreCase(sql, limitSign)) {
                         sql += limit;
                     }
                     JdbcTemplate template = dataSourceService.getJdbcTemplate();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftOps.java
Patch:
@@ -33,6 +33,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("all")
 public enum JRaftOps {
 
 	TRANSFER_LEADER("transferLeader") {

File: core/src/main/java/com/alibaba/nacos/core/controller/CoreOpsController.java
Patch:
@@ -40,9 +40,10 @@ public class CoreOpsController {
 	// Temporarily overpassed the raft operations interface
 	// {
 	//		"groupId": "xxx",
-	//		"transferLeader": "ip:{raft_port}",
-	//		"doSnapshot": "ip:{raft_port}",
+	//		"transferLeader": "ip:{raft_port}"
+	//		"doSnapshot": "ip:{raft_port}"
 	//		"resetRaftCluster": "ip:{raft_port},ip:{raft_port},ip:{raft_port},ip:{raft_port}"
+	//		"removePeer": "ip:{raft_port}"
 	// }
 
 	@PostMapping(value = "/raft")

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftConstants.java
Patch:
@@ -32,4 +32,6 @@ public class JRaftConstants {
 
 	public static final String DO_SNAPSHOT = "doSnapshot";
 
+	public static final String REMOVE_PEER = "removePeer";
+
 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/EnlargeShrinksCapacity.java
Patch:
@@ -49,6 +49,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("all")
 public class EnlargeShrinksCapacity {
 
 	/**

File: client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.alibaba.nacos.client;
 
+import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.beat.BeatReactor;
@@ -38,7 +39,7 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup
         beatInfo.setScheduled(false);
         beatInfo.setPeriod(1000L);
 
-        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo, true);
+        Mockito.doReturn(new JSONObject()).when(namingProxy).sendBeat(beatInfo, true);
         beatReactor.addBeatInfo("testService", beatInfo);
 
         Assert.assertEquals(1, getActiveThread(beatReactor));

File: consistency/src/main/java/com/alibaba/nacos/consistency/ConsistencyProtocol.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.consistency;
 
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.consistency.entity.GetRequest;
 import com.alibaba.nacos.consistency.entity.GetResponse;
 import com.alibaba.nacos.consistency.entity.Log;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -104,7 +104,6 @@ public class JRaftProtocol
 
 	private final AtomicBoolean initialized = new AtomicBoolean(false);
 	private final AtomicBoolean shutdowned = new AtomicBoolean(false);
-	private final EnlargeShrinksCapacity enlargeShrinksCapacity;
 	private RaftConfig raftConfig;
 	private JRaftServer raftServer;
 	private JRaftOps jRaftOps;
@@ -118,7 +117,6 @@ public JRaftProtocol(ServerMemberManager memberManager) throws Exception {
 		this.memberManager = memberManager;
 		this.raftServer = new JRaftServer(failoverRetries);
 		this.jRaftOps = new JRaftOps(raftServer);
-		this.enlargeShrinksCapacity = new EnlargeShrinksCapacity(raftServer);
 	}
 
 	@Override
@@ -224,7 +222,6 @@ public void accept(Object o, Throwable throwable) {
 	@Override
 	public void memberChange(Set<String> addresses) {
 		this.raftConfig.setMembers(raftConfig.getSelfMember(), addresses);
-		enlargeShrinksCapacity.execute(this.raftConfig.getMembers());
 	}
 
 	@Override

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -37,8 +37,6 @@ public class InetUtils_ITCase {
 
 	static {
 		System.setProperty("nacos.core.inet.auto-refresh", "3");
-		// Triggers a static method block call
-		InetUtils.getSelfIp();
 	}
 
 	@Test

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -207,8 +207,10 @@ public HttpResult httpDelete(String path, List<String> headers, List<String> par
                     return result;
                 }
             } catch (ConnectException ce) {
+                ce.printStackTrace();
                 LOGGER.error("[NACOS ConnectException httpDelete] currentServerAddr:{}, err : {}", serverListMgr.getCurrentServerAddr(), ce.getMessage());
             } catch (SocketTimeoutException stoe) {
+                stoe.printStackTrace();
                 LOGGER.error("[NACOS SocketTimeoutException httpDelete] currentServerAddr:{}， err : {}", serverListMgr.getCurrentServerAddr(), stoe.getMessage());
             } catch (IOException ioe) {
                 LOGGER.error("[NACOS IOException httpDelete] currentServerAddr: " + serverListMgr.getCurrentServerAddr(), ioe);

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -28,23 +28,23 @@ public static void sleep(long millis) {
         try {
             Thread.sleep(millis);
         } catch (InterruptedException e) {
-            Thread.interrupted();
+            Thread.currentThread().interrupt();
         }
     }
 
     public static void latchAwait(CountDownLatch latch) {
         try {
             latch.await();
         } catch (InterruptedException e) {
-            Thread.interrupted();
+            Thread.currentThread().interrupt();
         }
     }
 
     public static void latchAwait(CountDownLatch latch, long time, TimeUnit unit) {
         try {
             latch.await(time, unit);
         } catch (InterruptedException e) {
-            Thread.interrupted();
+            Thread.currentThread().interrupt();
         }
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/NacosConfigConfiguration.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.config.server.filter.TransferToLeaderFilter;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Conditional;
 import org.springframework.context.annotation.Configuration;
 
 /**
@@ -40,6 +41,7 @@ public FilterRegistrationBean nacosWebFilterRegistration() {
 		return registration;
 	}
 
+	@Conditional(ConditionDistributedEmbedStorage.class)
 	@Bean
 	public FilterRegistrationBean transferToLeaderRegistration() {
 		FilterRegistrationBean<TransferToLeaderFilter> registration = new FilterRegistrationBean<>();
@@ -55,6 +57,7 @@ public NacosWebFilter nacosWebFilter() {
 		return new NacosWebFilter();
 	}
 
+	@Conditional(ConditionDistributedEmbedStorage.class)
 	@Bean
 	public TransferToLeaderFilter transferToLeader() {
 		return new TransferToLeaderFilter();

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/ExternalStoragePersistServiceImpl.java
Patch:
@@ -100,8 +100,8 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings(value = {"PMD.MethodReturnWrapperTypeRule"})
 @Conditional(value = ConditionOnExternalStorage.class)
-@SuppressWarnings(value = {"all", "PMD.MethodReturnWrapperTypeRule"})
 @Component
 public class ExternalStoragePersistServiceImpl implements PersistService {
 
@@ -163,8 +163,7 @@ public String getCurrentDBUrl() {
 
 	@Override
 	public <E> PaginationHelper<E> createPaginationHelper() {
-		ExternalStoragePaginationHelperImpl<E> helper = new ExternalStoragePaginationHelperImpl<>(jt);
-		return helper;
+		return new ExternalStoragePaginationHelperImpl<E>(jt);
 	}
 
 	// ----------------------- config_info 表 insert update delete

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_ITCase.java
Patch:
@@ -45,8 +45,8 @@
  * @date 2019-07-03
  **/
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ConfigBeta_ITCase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_ITCase.java
Patch:
@@ -43,8 +43,8 @@
  * @date 2019/5/23 15:26
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ConfigExportAndImportAPI_ITCase {
 
     private static final long TIME_OUT = 2000;

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -39,8 +39,8 @@
  * @date 2019-06-07 22:24
  **/
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ConfigLongPoll_ITCase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -43,7 +43,7 @@ public class InetUtils_ITCase {
 
 	@Test
 	public void test_InternetAddress_Change() throws Exception {
-		String testIp = "192.168.11.101";
+		String testIp = "1.1.1.1";
 		System.setProperty(NACOS_SERVER_IP, testIp);
 		CountDownLatch latch = new CountDownLatch(1);
 

File: test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -45,8 +45,8 @@
  * @since 1.2.0
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ConfigAuth_ITCase extends AuthBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -42,8 +42,8 @@
  * @since 1.2.0
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class NamingAuth_ITCase extends AuthBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -44,8 +44,8 @@
  * @since 1.2.0
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class Permission_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -44,8 +44,8 @@
  * @since 1.2.0
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class Role_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -44,8 +44,8 @@
  * @since 1.2.0
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class User_ITCase extends HttpClient4Test {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -46,8 +46,8 @@
  * @date 2018/11/13
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class AutoDeregisterInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -54,8 +54,8 @@
  * @author nkorange
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class CPInstancesAPI_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -39,8 +39,8 @@
 import java.util.concurrent.TimeUnit;
 
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ClientBeat_ITCase extends NamingBase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Cmdb_ITCase.java
Patch:
@@ -47,8 +47,8 @@
 import static com.alibaba.nacos.test.naming.NamingBase.*;
 
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 @Ignore
 public class Cmdb_ITCase {
 

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -42,8 +42,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class DeregisterInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -31,8 +31,8 @@
  * @author nkorange
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class MultiTenant_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -36,8 +36,8 @@
  * @author nkorange
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class MultiTenant_InstanceAPI_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -49,8 +49,8 @@
  * @date 2019-05-07 10:13
  **/
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class NamingMaintainService_ITCase extends BaseTest {
 
     private NamingMaintainService namingMaintainService;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -43,8 +43,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class RegisterInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -34,8 +34,8 @@
  * @author nkorange
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class RestAPI_ITCase extends NamingBase {
 
     @LocalServerPort

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -46,8 +46,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class SelectInstances_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -41,8 +41,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class SelectOneHealthyInstance_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -44,8 +44,8 @@
  * @author nkorange
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ServiceListTest_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -45,8 +45,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class SubscribeCluster_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Subscribe_ITCase.java
Patch:
@@ -47,8 +47,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class Subscribe_ITCase extends RestAPI_ITCase {
 
     private NamingService naming;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -44,8 +44,8 @@
  * @date 2018/6/20
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
-        webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos"},
+        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class Unsubscribe_ITCase {
 
     private NamingService naming;

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -42,7 +42,7 @@ public class GlobalExceptionHandler {
     @ExceptionHandler(IllegalArgumentException.class)
     public ResponseEntity<String> handleIllegalArgumentException(Exception ex) throws IOException {
         MetricsMonitor.getIllegalArgumentException().increment();
-        return ResponseEntity.status(400).body(ExceptionUtil.getStackTrace(ex));
+        return ResponseEntity.status(400).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 
     /**
@@ -53,7 +53,7 @@ public ResponseEntity<String> handleIllegalArgumentException(Exception ex) throw
     @ExceptionHandler(NacosException.class)
     public ResponseEntity<String> handleNacosException(NacosException ex) throws IOException {
         MetricsMonitor.getNacosException().increment();
-        return ResponseEntity.status(ex.getErrCode()).body(ExceptionUtil.getStackTrace(ex));
+        return ResponseEntity.status(ex.getErrCode()).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 
     /**
@@ -64,7 +64,7 @@ public ResponseEntity<String> handleNacosException(NacosException ex) throws IOE
     @ExceptionHandler(DataAccessException.class)
     public ResponseEntity<String> handleDataAccessException(DataAccessException ex) throws DataAccessException {
         MetricsMonitor.getDbException().increment();
-        return ResponseEntity.status(500).body(ExceptionUtil.getStackTrace(ex));
+        return ResponseEntity.status(500).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/DynamicDataSource.java
Patch:
@@ -24,8 +24,8 @@
  */
 public class DynamicDataSource {
 
-    private volatile DataSourceService localDataSourceService = null;
-    private volatile DataSourceService basicDataSourceService = null;
+    private DataSourceService localDataSourceService = null;
+    private DataSourceService basicDataSourceService = null;
 
     private static final DynamicDataSource INSTANCE = new DynamicDataSource();
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/LocalDataSourceServiceImpl.java
Patch:
@@ -109,10 +109,8 @@ private void doDerbyClean() throws Exception {
         try {
             DriverManager.getConnection("jdbc:derby:;shutdown=true");
         } catch (Exception e) {
-
             // An error is thrown when the Derby shutdown is executed, which should be ignored
-
-            if (!StringUtils.contains(e.getMessage().toLowerCase(), derbyShutdownErrMsg.toLowerCase())) {
+            if (!StringUtils.containsIgnoreCase(e.getMessage(), derbyShutdownErrMsg)) {
                 throw e;
             }
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -115,7 +115,7 @@ public void update(Observable o, Object arg) {
 						dumpOperate(processor, dumpAllProcessor, dumpAllBetaProcessor, dumpAllTagProcessor);
 					});
 					protocol.protocolMetaData()
-							.ubSubscribe(Constants.CONFIG_MODEL_RAFT_GROUP,
+							.unSubscribe(Constants.CONFIG_MODEL_RAFT_GROUP,
 									com.alibaba.nacos.consistency.cp.Constants.LEADER_META_DATA,
 									this);
 				}

File: consistency/src/main/java/com/alibaba/nacos/consistency/ap/APProtocol.java
Patch:
@@ -23,6 +23,6 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public interface APProtocol<C extends Config> extends ConsistencyProtocol<C> {
+public interface APProtocol<C extends Config, P extends LogProcessor4AP> extends ConsistencyProtocol<C, P> {
 
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/CPProtocol.java
Patch:
@@ -23,7 +23,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public interface CPProtocol<C extends Config> extends ConsistencyProtocol<C> {
+public interface CPProtocol<C extends Config, P extends LogProcessor4CP> extends ConsistencyProtocol<C, P> {
 
 	/**
 	 * Returns whether this node is a leader node

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -42,12 +42,12 @@ private ResponseEntity<String> handleAccessException(AccessException e) {
 
     @ExceptionHandler(IllegalArgumentException.class)
     private ResponseEntity<String> handleIllegalArgumentException(IllegalArgumentException e) {
-        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ExceptionUtil.getStackTrace(e));
+        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ExceptionUtil.getAllExceptionMsg(e));
     }
 
     @ExceptionHandler(Exception.class)
     private ResponseEntity<String> handleException(Exception e) {
         logger.error("CONSOLE", e);
-        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(ExceptionUtil.getStackTrace(e));
+        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(ExceptionUtil.getAllExceptionMsg(e));
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -135,8 +135,7 @@ public boolean equals(Object o) {
 
 	@Override
 	public String toString() {
-		return "Member{" + "ip='" + ip + '\'' + ", port=" + port + ", state=" + state
-				+ ", extendInfo=" + new TreeMap<>(extendInfo) + '}';
+		return "Member{" + "address='" + getAddress() + '\'' + '}';
 	}
 
 	@Override

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -62,7 +62,7 @@ public void start() throws NacosException {
 			}
 			catch (Throwable e) {
 				Loggers.CLUSTER
-						.error("An exception occurred in the launch file monitor : {}", e);
+						.error("An exception occurred in the launch file monitor : {}", e.getMessage());
 			}
 		}
 	}
@@ -81,7 +81,7 @@ private void readClusterConfFromDisk() {
 		catch (Throwable e) {
 			Loggers.CLUSTER
 					.error("nacos-XXXX [serverlist] failed to get serverlist from disk!, error : {}",
-							e);
+							e.getMessage());
 		}
 
 		afterLookup(tmpMembers);

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
@@ -101,7 +102,7 @@ public RestResult<String> report(@RequestBody Member node) {
         if (!node.check()) {
             return RestResultUtils.failedWithMsg(400, "Node information is illegal");
         }
-        Loggers.CLUSTER.debug("node state report, receive info : {}", node);
+        LoggerUtils.printIfDebugEnabled(Loggers.CLUSTER, "node state report, receive info : {}", node);
         node.setState(NodeState.UP);
         node.setFailAccessCnt(0);
         memberManager.update(node);
@@ -138,7 +139,7 @@ public RestResult<String> leave(@RequestBody Collection<String> params) throws E
                         public void onReceive(RestResult<String> result) {
                             try {
                                 if (result.ok()) {
-                                    Loggers.CLUSTER.debug("The node : [{}] success to process the request",
+                                    LoggerUtils.printIfDebugEnabled(Loggers.CLUSTER, "The node : [{}] success to process the request",
                                             member);
                                     MemberUtils.onSuccess(member);
                                 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/AbstractConsistencyProtocol.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public abstract class AbstractConsistencyProtocol<T extends Config, L extends LogProcessor> implements ConsistencyProtocol<T> {
+public abstract class AbstractConsistencyProtocol<T extends Config, L extends LogProcessor> implements ConsistencyProtocol<T, L> {
 
     protected final ProtocolMetaData metaData = new ProtocolMetaData();
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftOps.java
Patch:
@@ -43,7 +43,7 @@ public JRaftOps(JRaftServer raftServer) {
 	}
 
 	public RestResult<String> execute(String[] args) {
-		return RestResultUtils.failed("not support yeah");
+		return RestResultUtils.failed("not support yet");
 	}
 
 	public RestResult<String> execute(Map<String, String> args) {

File: core/src/main/java/com/alibaba/nacos/core/notify/NotifyCenter.java
Patch:
@@ -232,7 +232,7 @@ private static boolean publishEvent(final Class<? extends Event> eventType,
 			return publisher.publish(event);
 		}
 		throw new NoSuchElementException(
-				"There are no event publishers for this event, please register");
+				"There are no [" + topic + "] publishers for this event, please register");
 	}
 
 	/**

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.Pair;
 import org.slf4j.Logger;
 
@@ -38,7 +39,7 @@ public static void start(String name) {
     public static void end(final Logger logger) {
         long endTime = System.currentTimeMillis();
         Pair<String, Long> record = TIME_RECORD.get();
-        logger.debug("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
+        LoggerUtils.printIfDebugEnabled(logger, "{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
         TIME_RECORD.remove();
     }
 

File: test/src/test/java/com/alibaba/nacos/test/common/WatchFileCenter_ITCase.java
Patch:
@@ -36,6 +36,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Consumer;
@@ -111,7 +112,7 @@ public boolean interest(String context) {
 			ThreadUtils.sleep(10_000L);
 		}
 
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(3, count.get());
 	}
@@ -139,7 +140,7 @@ public void test_multi_file_modify() throws Exception {
 				}
 			});
 		}
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		ThreadUtils.sleep(5_000L);
 	}

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_ITCase.java
Patch:
@@ -84,7 +84,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
 
         configService.getConfig(dataId, group, 50);
 
-        latch.await();
+        latch.await(10_000L, TimeUnit.MILLISECONDS);
     }
 
     @Test
@@ -124,7 +124,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
         });
         configService.publishConfig(dataId, group, newData);
 
-        latch.await();
+        latch.await(10_000L, TimeUnit.MILLISECONDS);
     }
 
     @Test
@@ -162,7 +162,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
         });
         configService.removeConfig(dataId, group);
 
-        latch.await();
+        latch.await(10_000L, TimeUnit.MILLISECONDS);
     }
 
 }

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -25,6 +25,7 @@
 
 import java.util.Objects;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
 
 import static com.alibaba.nacos.core.utils.Constants.NACOS_SERVER_IP;
@@ -69,7 +70,7 @@ public Class<? extends Event> subscribeType() {
 		};
 
 		NotifyCenter.registerSubscribe(subscribe);
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(testIp, reference.get());
 		Assert.assertEquals(testIp, InetUtils.getSelfIp());

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 import java.util.concurrent.ConcurrentSkipListMap;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
@@ -119,7 +120,7 @@ public Class<? extends Event> subscribeType() {
 		boolean changed = memberManager.memberJoin(members);
 		Assert.assertTrue(changed);
 
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(1, integer.get());
 	}

File: test/src/test/java/com/alibaba/nacos/test/core/notify/NotifyCenter_ITCase.java
Patch:
@@ -252,8 +252,8 @@ public Class<? extends Event> subscribeType() {
 		NotifyCenter.publishEvent(new SlowE1());
 		NotifyCenter.publishEvent(new SlowE2());
 
-		latch1.await();
-		latch2.await();
+		latch1.await(10_000L, TimeUnit.MILLISECONDS);
+		latch2.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals("SlowE1", values[0]);
 		Assert.assertEquals("SlowE2", values[1]);

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -42,7 +42,7 @@ public class GlobalExceptionHandler {
     @ExceptionHandler(IllegalArgumentException.class)
     public ResponseEntity<String> handleIllegalArgumentException(Exception ex) throws IOException {
         MetricsMonitor.getIllegalArgumentException().increment();
-        return ResponseEntity.status(400).body(ExceptionUtil.getStackTrace(ex));
+        return ResponseEntity.status(400).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 
     /**
@@ -53,7 +53,7 @@ public ResponseEntity<String> handleIllegalArgumentException(Exception ex) throw
     @ExceptionHandler(NacosException.class)
     public ResponseEntity<String> handleNacosException(NacosException ex) throws IOException {
         MetricsMonitor.getNacosException().increment();
-        return ResponseEntity.status(ex.getErrCode()).body(ExceptionUtil.getStackTrace(ex));
+        return ResponseEntity.status(ex.getErrCode()).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 
     /**
@@ -64,7 +64,7 @@ public ResponseEntity<String> handleNacosException(NacosException ex) throws IOE
     @ExceptionHandler(DataAccessException.class)
     public ResponseEntity<String> handleDataAccessException(DataAccessException ex) throws DataAccessException {
         MetricsMonitor.getDbException().increment();
-        return ResponseEntity.status(500).body(ExceptionUtil.getStackTrace(ex));
+        return ResponseEntity.status(500).body(ExceptionUtil.getAllExceptionMsg(ex));
     }
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/DynamicDataSource.java
Patch:
@@ -24,8 +24,8 @@
  */
 public class DynamicDataSource {
 
-    private volatile DataSourceService localDataSourceService = null;
-    private volatile DataSourceService basicDataSourceService = null;
+    private DataSourceService localDataSourceService = null;
+    private DataSourceService basicDataSourceService = null;
 
     private static final DynamicDataSource INSTANCE = new DynamicDataSource();
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/LocalDataSourceServiceImpl.java
Patch:
@@ -109,10 +109,8 @@ private void doDerbyClean() throws Exception {
         try {
             DriverManager.getConnection("jdbc:derby:;shutdown=true");
         } catch (Exception e) {
-
             // An error is thrown when the Derby shutdown is executed, which should be ignored
-
-            if (!StringUtils.contains(e.getMessage().toLowerCase(), derbyShutdownErrMsg.toLowerCase())) {
+            if (!StringUtils.containsIgnoreCase(e.getMessage(), derbyShutdownErrMsg)) {
                 throw e;
             }
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -115,7 +115,7 @@ public void update(Observable o, Object arg) {
 						dumpOperate(processor, dumpAllProcessor, dumpAllBetaProcessor, dumpAllTagProcessor);
 					});
 					protocol.protocolMetaData()
-							.ubSubscribe(Constants.CONFIG_MODEL_RAFT_GROUP,
+							.unSubscribe(Constants.CONFIG_MODEL_RAFT_GROUP,
 									com.alibaba.nacos.consistency.cp.Constants.LEADER_META_DATA,
 									this);
 				}

File: consistency/src/main/java/com/alibaba/nacos/consistency/ap/APProtocol.java
Patch:
@@ -23,6 +23,6 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public interface APProtocol<C extends Config> extends ConsistencyProtocol<C> {
+public interface APProtocol<C extends Config, P extends LogProcessor4AP> extends ConsistencyProtocol<C, P> {
 
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/cp/CPProtocol.java
Patch:
@@ -23,7 +23,7 @@
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("all")
-public interface CPProtocol<C extends Config> extends ConsistencyProtocol<C> {
+public interface CPProtocol<C extends Config, P extends LogProcessor4CP> extends ConsistencyProtocol<C, P> {
 
 	/**
 	 * Returns whether this node is a leader node

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -42,12 +42,12 @@ private ResponseEntity<String> handleAccessException(AccessException e) {
 
     @ExceptionHandler(IllegalArgumentException.class)
     private ResponseEntity<String> handleIllegalArgumentException(IllegalArgumentException e) {
-        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ExceptionUtil.getStackTrace(e));
+        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ExceptionUtil.getAllExceptionMsg(e));
     }
 
     @ExceptionHandler(Exception.class)
     private ResponseEntity<String> handleException(Exception e) {
         logger.error("CONSOLE", e);
-        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(ExceptionUtil.getStackTrace(e));
+        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(ExceptionUtil.getAllExceptionMsg(e));
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -135,8 +135,7 @@ public boolean equals(Object o) {
 
 	@Override
 	public String toString() {
-		return "Member{" + "ip='" + ip + '\'' + ", port=" + port + ", state=" + state
-				+ ", extendInfo=" + new TreeMap<>(extendInfo) + '}';
+		return "Member{" + "address='" + getAddress() + '\'' + '}';
 	}
 
 	@Override

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -62,7 +62,7 @@ public void start() throws NacosException {
 			}
 			catch (Throwable e) {
 				Loggers.CLUSTER
-						.error("An exception occurred in the launch file monitor : {}", e);
+						.error("An exception occurred in the launch file monitor : {}", e.getMessage());
 			}
 		}
 	}
@@ -81,7 +81,7 @@ private void readClusterConfFromDisk() {
 		catch (Throwable e) {
 			Loggers.CLUSTER
 					.error("nacos-XXXX [serverlist] failed to get serverlist from disk!, error : {}",
-							e);
+							e.getMessage());
 		}
 
 		afterLookup(tmpMembers);

File: core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.model.RestResultUtils;
+import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;
@@ -101,7 +102,7 @@ public RestResult<String> report(@RequestBody Member node) {
         if (!node.check()) {
             return RestResultUtils.failedWithMsg(400, "Node information is illegal");
         }
-        Loggers.CLUSTER.debug("node state report, receive info : {}", node);
+        LoggerUtils.printIfDebugEnabled(Loggers.CLUSTER, "node state report, receive info : {}", node);
         node.setState(NodeState.UP);
         node.setFailAccessCnt(0);
         memberManager.update(node);
@@ -138,7 +139,7 @@ public RestResult<String> leave(@RequestBody Collection<String> params) throws E
                         public void onReceive(RestResult<String> result) {
                             try {
                                 if (result.ok()) {
-                                    Loggers.CLUSTER.debug("The node : [{}] success to process the request",
+                                    LoggerUtils.printIfDebugEnabled(Loggers.CLUSTER, "The node : [{}] success to process the request",
                                             member);
                                     MemberUtils.onSuccess(member);
                                 }

File: core/src/main/java/com/alibaba/nacos/core/distributed/AbstractConsistencyProtocol.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public abstract class AbstractConsistencyProtocol<T extends Config, L extends LogProcessor> implements ConsistencyProtocol<T> {
+public abstract class AbstractConsistencyProtocol<T extends Config, L extends LogProcessor> implements ConsistencyProtocol<T, L> {
 
     protected final ProtocolMetaData metaData = new ProtocolMetaData();
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftOps.java
Patch:
@@ -43,7 +43,7 @@ public JRaftOps(JRaftServer raftServer) {
 	}
 
 	public RestResult<String> execute(String[] args) {
-		return RestResultUtils.failed("not support yeah");
+		return RestResultUtils.failed("not support yet");
 	}
 
 	public RestResult<String> execute(Map<String, String> args) {

File: core/src/main/java/com/alibaba/nacos/core/notify/NotifyCenter.java
Patch:
@@ -232,7 +232,7 @@ private static boolean publishEvent(final Class<? extends Event> eventType,
 			return publisher.publish(event);
 		}
 		throw new NoSuchElementException(
-				"There are no event publishers for this event, please register");
+				"There are no [" + topic + "] publishers for this event, please register");
 	}
 
 	/**

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
+import com.alibaba.nacos.common.utils.LoggerUtils;
 import com.alibaba.nacos.common.utils.Pair;
 import org.slf4j.Logger;
 
@@ -38,7 +39,7 @@ public static void start(String name) {
     public static void end(final Logger logger) {
         long endTime = System.currentTimeMillis();
         Pair<String, Long> record = TIME_RECORD.get();
-        logger.debug("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
+        LoggerUtils.printIfDebugEnabled(logger, "{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
         TIME_RECORD.remove();
     }
 

File: test/src/test/java/com/alibaba/nacos/test/common/WatchFileCenter_ITCase.java
Patch:
@@ -36,6 +36,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.Consumer;
@@ -111,7 +112,7 @@ public boolean interest(String context) {
 			ThreadUtils.sleep(10_000L);
 		}
 
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(3, count.get());
 	}
@@ -139,7 +140,7 @@ public void test_multi_file_modify() throws Exception {
 				}
 			});
 		}
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		ThreadUtils.sleep(5_000L);
 	}

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_ITCase.java
Patch:
@@ -84,7 +84,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
 
         configService.getConfig(dataId, group, 50);
 
-        latch.await();
+        latch.await(10_000L, TimeUnit.MILLISECONDS);
     }
 
     @Test
@@ -124,7 +124,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
         });
         configService.publishConfig(dataId, group, newData);
 
-        latch.await();
+        latch.await(10_000L, TimeUnit.MILLISECONDS);
     }
 
     @Test
@@ -162,7 +162,7 @@ public void receiveConfigChange(ConfigChangeEvent event) {
         });
         configService.removeConfig(dataId, group);
 
-        latch.await();
+        latch.await(10_000L, TimeUnit.MILLISECONDS);
     }
 
 }

File: test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java
Patch:
@@ -25,6 +25,7 @@
 
 import java.util.Objects;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
 
 import static com.alibaba.nacos.core.utils.Constants.NACOS_SERVER_IP;
@@ -69,7 +70,7 @@ public Class<? extends Event> subscribeType() {
 		};
 
 		NotifyCenter.registerSubscribe(subscribe);
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(testIp, reference.get());
 		Assert.assertEquals(testIp, InetUtils.getSelfIp());

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/ServerMemberManager_ITCase.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 import java.util.concurrent.ConcurrentSkipListMap;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
@@ -119,7 +120,7 @@ public Class<? extends Event> subscribeType() {
 		boolean changed = memberManager.memberJoin(members);
 		Assert.assertTrue(changed);
 
-		latch.await();
+		latch.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(1, integer.get());
 	}

File: test/src/test/java/com/alibaba/nacos/test/core/notify/NotifyCenter_ITCase.java
Patch:
@@ -252,8 +252,8 @@ public Class<? extends Event> subscribeType() {
 		NotifyCenter.publishEvent(new SlowE1());
 		NotifyCenter.publishEvent(new SlowE2());
 
-		latch1.await();
-		latch2.await();
+		latch1.await(10_000L, TimeUnit.MILLISECONDS);
+		latch2.await(10_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals("SlowE1", values[0]);
 		Assert.assertEquals("SlowE2", values[1]);

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/DiscoveryMemberLookup.java
Patch:
@@ -182,7 +182,7 @@ public void onError(Throwable e) {
 				Loggers.CLUSTER.error("node state report task has error : {}", e);
 			}
 			finally {
-				TimerContext.end();
+				TimerContext.end(Loggers.CLUSTER);
 			}
 		}
 

File: common/src/main/java/com/alibaba/nacos/common/model/RestResultUtils.java
Patch:
@@ -76,8 +76,8 @@ public static <T> RestResult<T> failedWithMsg(int code, String errMsg) {
 				.build();
 	}
 
-	public static <T> RestResult<T> failedWithData(T data) {
-		return RestResult.<T>builder()
+	public static RestResult<Throwable> failedWithException(Throwable data) {
+		return RestResult.<Throwable>builder()
 				.withCode(500)
 				.withData(data)
 				.build();

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.ThreadUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.SampleResult;
 import com.alibaba.nacos.config.server.service.notify.NotifyService;
 import com.alibaba.nacos.config.server.utils.JSONUtils;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.config.server.utils.ThreadUtil;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
@@ -55,7 +55,7 @@ public ConfigSubService(ServerMemberManager memberManager) {
         this.memberManager = memberManager;
 
         scheduler = Executors.newScheduledThreadPool(
-            ThreadUtil.getSuitableThreadCount(), new ThreadFactory() {
+            ThreadUtils.getSuitableThreadCount(), new ThreadFactory() {
                 @Override
                 public Thread newThread(Runnable r) {
                     Thread t = new Thread(r);

File: core/src/main/java/com/alibaba/nacos/core/utils/Loggers.java
Patch:
@@ -34,5 +34,4 @@ public class Loggers {
 
     public static final Logger CLUSTER = LoggerFactory.getLogger("com.alibaba.nacos.core.cluster");
 
-    public static final Logger JOB_TIMER = LoggerFactory.getLogger("com.alibaba.nacos.core.job.timer");
 }

File: core/src/main/java/com/alibaba/nacos/core/utils/ReuseHttpServletRequest.java
Patch:
@@ -66,7 +66,6 @@ public Object getBody() throws Exception {
 				return HttpUtils.encodingParams(HttpUtils.translateParameterMap(stringMap),
 								StandardCharsets.UTF_8.name());
 			}
-			System.out.println("body : " + s);
 			return s;
 		}
 	}

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -50,7 +50,6 @@
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.CopyOnWriteArrayList;
-import java.util.concurrent.TimeUnit;
 
 /**
  * A consistency protocol algorithm called <b>Distro</b>

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -39,6 +39,9 @@
 @Component("distroMapper")
 public class DistroMapper implements MemberChangeListener {
 
+    /**
+     * List of service nodes, you must ensure that the order of healthyList is the same for all nodes
+     */
     private volatile List<String> healthyList = new ArrayList<>();
 
     private final SwitchDomain switchDomain;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -39,7 +39,7 @@
 public class HttpClient {
 
     public static final int READ_TIME_OUT_MILLIS = Integer
-        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 5000);
+        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 50000);
     public static final int CON_TIME_OUT_MILLIS = Integer
         .getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     private static final boolean ENABLE_HTTPS = Boolean

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -24,5 +24,6 @@ public interface HttpHeaderConsts {
 
     String CLIENT_VERSION_HEADER = "Client-Version";
     String USER_AGENT_HEADER = "User-Agent";
+    String REQUEST_SOURCE_HEADER = "Request-Source";
 
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -153,6 +153,7 @@ public static Collection<Member> readServerConf(Collection<String> members) {
 
 	public static List<String> simpleMembers(Collection<Member> members) {
 		return members.stream().map(Member::getAddress)
+				.sorted()
 				.collect(ArrayList::new, ArrayList::add, ArrayList::addAll);
 	}
 

File: core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java
Patch:
@@ -35,7 +35,7 @@ public static void start(String name) {
     public static void end() {
         long endTime = System.currentTimeMillis();
         Pair<String, Long> record = TIME_RECORD.get();
-        Loggers.JOB_TIMER.info("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
+        Loggers.JOB_TIMER.debug("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
         TIME_RECORD.remove();
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -163,9 +163,6 @@ public void signalPublish(String key, Record value) throws Exception {
 
             final RaftPeer leader = getLeader();
 
-            System.out.println("leader : " + leader);
-            System.out.println(peers);
-
             raftProxy.proxyPostLarge(leader.ip, API_PUB, params.toJSONString(), parameters);
             return;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.AsyncHttpClient;
 import com.ning.http.client.AsyncHttpClientConfig;
@@ -457,6 +458,7 @@ private static void setHeaders(HttpURLConnection conn, List<String> headers, Str
         conn.addRequestProperty("Accept-Charset", encoding);
         conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.VERSION);
         conn.addRequestProperty(HttpHeaderConsts.USER_AGENT_HEADER, UtilsAndCommons.SERVER_VERSION);
+        conn.addRequestProperty(HttpHeaderConsts.REQUEST_SOURCE_HEADER, ApplicationUtils.getLocalAddress());
     }
 
     public static String encodingParams(Map<String, String> params, String encoding)

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -39,7 +39,7 @@
 public class HttpClient {
 
     public static final int READ_TIME_OUT_MILLIS = Integer
-        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 50000);
+        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 5000);
     public static final int CON_TIME_OUT_MILLIS = Integer
         .getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     private static final boolean ENABLE_HTTPS = Boolean

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -45,7 +45,7 @@ public class AggrWhitelist {
      */
      public static boolean isAggrDataId(String dataId) {
         if (null == dataId) {
-            throw new IllegalArgumentException();
+            throw new IllegalArgumentException("dataId is null");
         }
 
         for (Pattern pattern : AGGR_DATAID_WHITELIST.get()) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/BasicDataSourceServiceImpl.java
Patch:
@@ -150,21 +150,21 @@ public synchronized void reload() throws IOException {
                 val = ApplicationUtils.getProperty("db.url." + i);
                 if (null == val) {
                     fatalLog.error("db.url." + i + " is null");
-                    throw new IllegalArgumentException();
+                    throw new IllegalArgumentException("db.url." + i + " is null");
                 }
                 ds.setUrl(val.trim());
 
                 val = ApplicationUtils.getProperty("db.user." + i, ApplicationUtils.getProperty("db.user"));
                 if (null == val) {
                     fatalLog.error("db.user." + i + " is null");
-                    throw new IllegalArgumentException();
+                    throw new IllegalArgumentException("db.user." + i + " is null");
                 }
                 ds.setUsername(val.trim());
 
                 val = ApplicationUtils.getProperty("db.password." + i, ApplicationUtils.getProperty("db.password"));
                 if (null == val) {
                     fatalLog.error("db.password." + i + " is null");
-                    throw new IllegalArgumentException();
+                    throw new IllegalArgumentException("db.password." + i + " is null");
                 }
                 ds.setPassword(val.trim());
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/ClientIpWhiteList.java
Patch:
@@ -39,7 +39,7 @@ public class ClientIpWhiteList {
      */
     static public boolean isLegalClient(String clientIp) {
         if (StringUtils.isBlank(clientIp)) {
-            throw new IllegalArgumentException();
+            throw new IllegalArgumentException("clientIp is empty");
         }
         clientIp = clientIp.trim();
         if (CLIENT_IP_WHITELIST.get().contains(clientIp)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigDataChangeEvent.java
Patch:
@@ -38,7 +38,7 @@ public ConfigDataChangeEvent(String dataId, String group, long gmtModified) {
 
     public ConfigDataChangeEvent(boolean isBeta, String dataId, String group, String tenant, long gmtModified) {
         if (null == dataId || null == group) {
-            throw new IllegalArgumentException();
+            throw new IllegalArgumentException("dataId is null or group is null");
         }
         this.isBeta = isBeta;
         this.dataId = dataId;
@@ -55,7 +55,7 @@ public ConfigDataChangeEvent(boolean isBeta, String dataId, String group, long g
     public ConfigDataChangeEvent(boolean isBeta, String dataId, String group, String tenant, String tag,
                                  long gmtModified) {
         if (null == dataId || null == group) {
-            throw new IllegalArgumentException();
+            throw new IllegalArgumentException("dataId is null or group is null");
         }
         this.isBeta = isBeta;
         this.dataId = dataId;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/event/EventDispatcher.java
Patch:
@@ -42,7 +42,7 @@ static public void addEventListener(AbstractEventListener listener) {
      */
     static public void fireEvent(Event event) {
         if (null == event) {
-            throw new IllegalArgumentException();
+            throw new IllegalArgumentException("event is null");
         }
 
         for (AbstractEventListener listener : getEntry(event.getClass()).listeners) {

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/LookupFactory.java
Patch:
@@ -143,6 +143,7 @@ private static MemberLookup find(LookupType type) {
 			LOOK_UP = new DiscoveryMemberLookup();
 			return LOOK_UP;
 		}
+		// unpossible to run here
 		throw new IllegalArgumentException();
 	}
 

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.core.utils;
 
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
+import com.alibaba.nacos.common.http.HttpUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import javax.servlet.http.HttpServletRequest;
@@ -36,7 +37,7 @@ public static String required(HttpServletRequest req, String key) {
         String encoding = req.getParameter("encoding");
         if (!StringUtils.isEmpty(encoding)) {
             try {
-                value = new String(value.getBytes(StandardCharsets.UTF_8), encoding);
+                value = HttpUtils.decode(new String(value.getBytes(StandardCharsets.UTF_8), encoding), encoding);
             } catch (UnsupportedEncodingException ignore) {
             }
         }
@@ -59,7 +60,7 @@ public static String optional(HttpServletRequest req, String key, String default
         String encoding = req.getParameter("encoding");
         if (!StringUtils.isEmpty(encoding)) {
             try {
-                value = new String(value.getBytes(StandardCharsets.UTF_8), encoding);
+                value = HttpUtils.decode(new String(value.getBytes(StandardCharsets.UTF_8), encoding), encoding);
             } catch (UnsupportedEncodingException ignore) {
             }
         }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -187,8 +187,7 @@ public boolean equals(Object obj) {
         }
 
         Instance host = (Instance) obj;
-
-        return strEquals(toString(), host.toString());
+        return strEquals(host.toString(), toString());
     }
 
     @Override

File: config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java
Patch:
@@ -102,6 +102,8 @@ public void doFilter(ServletRequest request, ServletResponse response,
 		ReuseHttpRequest req = null;
 		HttpServletResponse resp = (HttpServletResponse) response;
 
+		String urlString = ((HttpServletRequest) request).getRequestURI();
+
 		if (StringUtils.containsIgnoreCase(request.getContentType(),
 				MediaType.MULTIPART_FORM_DATA)) {
 			req = new ReuseUploadFileHttpServletRequest((HttpServletRequest) request);
@@ -110,12 +112,9 @@ public void doFilter(ServletRequest request, ServletResponse response,
 			req = new ReuseHttpServletRequest((HttpServletRequest) request);
 		}
 
-		String urlString = req.getRequestURI();
-
 		if (StringUtils.isNotBlank(req.getQueryString())) {
 			urlString += "?" + req.getQueryString();
 		}
-
 		try {
 			String path = new URI(req.getRequestURI()).getPath();
 			Method method = controllerMethodsCache.getMethod(req.getMethod(), path);

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -54,7 +54,7 @@ public class AddressServerMemberLookup extends AbstractMemberLookup {
 	private volatile boolean isAddressServerHealth = true;
 	private int addressServerFailCount = 0;
 	private int maxFailCount = 12;
-	private NSyncHttpClient syncHttpClient = HttpClientManager.getShareSyncHttpClient();
+	private NSyncHttpClient syncHttpClient = HttpClientManager.getSyncHttpClient();
 	private volatile boolean shutdown = false;
 
 	@Override

File: core/src/main/java/com/alibaba/nacos/core/distributed/ProtocolManager.java
Patch:
@@ -171,7 +171,7 @@ public void onEvent(MemberChangeEvent event) {
 		// time T2 after a period of time.
 		// (T1 < T2)
 
-		Set<Member> copy = new HashSet<>(event.getAllMembers());
+		Set<Member> copy = new HashSet<>(event.getMembers());
 
 		// Node change events between different protocols should not block each other
 		if (Objects.nonNull(apProtocol)) {

File: core/src/main/java/com/alibaba/nacos/core/utils/Loggers.java
Patch:
@@ -33,4 +33,6 @@ public class Loggers {
     public static final Logger RAFT = LoggerFactory.getLogger("com.alibaba.nacos.core.protocol.raft");
 
     public static final Logger CLUSTER = LoggerFactory.getLogger("com.alibaba.nacos.core.cluster");
+
+    public static final Logger JOB_TIMER = LoggerFactory.getLogger("com.alibaba.nacos.core.job.timer");
 }

File: test/src/test/java/com/alibaba/nacos/test/core/notify/NotifyCenter_ITCase.java
Patch:
@@ -35,7 +35,6 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-@Ignore
 @FixMethodOrder(value = MethodSorters.NAME_ASCENDING)
 public class NotifyCenter_ITCase {
 
@@ -103,7 +102,7 @@ public Class<? extends Event> subscribeType() {
 		System.out.println("TestEvent event num : " + NotifyCenter.getPublisher(TestEvent.class).currentEventSize());
 		System.out.println("TestSlowEvent event num : " + NotifyCenter.getPublisher(TestSlowEvent.class).currentEventSize());
 
-		latch.await();
+		latch.await(5_000L, TimeUnit.MILLISECONDS);
 
 		Assert.assertEquals(2, count.get());
 	}

File: common/src/main/java/com/alibaba/nacos/common/http/HttpUtils.java
Patch:
@@ -72,7 +72,6 @@ public static String buildUrl(boolean isHttps, String serverAddr, String... subP
     }
 
     public static Map<String, String> translateParameterMap(Map<String, String[]> parameterMap) {
-
         Map<String, String> map = new HashMap<String, String>(16);
         for (String key : parameterMap.keySet()) {
             map.put(key, parameterMap.get(key)[0]);

File: config/src/main/java/com/alibaba/nacos/config/server/manager/TaskManager.java
Patch:
@@ -62,6 +62,7 @@ public void run() {
                     Thread.sleep(100);
                     TaskManager.this.process();
                 } catch (Throwable e) {
+                    LogUtil.dumpLog.error("execute dump process has error : {}", e);
                 }
             }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -483,7 +483,7 @@ private boolean canExecute() {
 		catch (NoSuchRaftGroupException e) {
 			return true;
 		}
-		catch (Exception e) {
+		catch (Throwable e) {
 			// It's impossible to get to this point
 			throw new RuntimeException(e);
 		}

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -226,7 +226,6 @@ public boolean process(String taskType, AbstractTask task) {
                 return result;
             }
         }
-
     }
 
     final DumpService dumpService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -342,7 +342,9 @@ public Thread newThread(Runnable r) {
 	}
 
 	/**
-	 * get delayTime and also set failCount to task;失败时间指数增加，以免断网场景不断重试无效任务，影响正常同步
+	 * get delayTime and also set failCount to task;
+	 * The failure time index increases, so as not to retry invalid tasks in the offline
+	 * scene, which affects the normal synchronization
 	 *
 	 * @param task notify task
 	 * @return delay

File: common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java
Patch:
@@ -36,7 +36,7 @@ public class HttpClientManager {
 
 	private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);
 
-	private static final int TIMEOUT = 5000;
+	private static final int TIMEOUT = Integer.getInteger("nacos.http.timeout", 5000);
 
 	private static final RequestConfig DEFAULT_CONFIG = RequestConfig.custom()
 			.setConnectTimeout(TIMEOUT).setSocketTimeout(TIMEOUT << 1).build();

File: config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java
Patch:
@@ -166,16 +166,16 @@ public void doFilter(ServletRequest request, ServletResponse response,
 			chain.doFilter(request, response);
 		} catch (AccessControlException e) {
 			resp.sendError(HttpServletResponse.SC_FORBIDDEN, "access denied: " + ExceptionUtil
-					.getAllExceptionMsg(e));
+					.getStackTrace(e));
 			return;
 		} catch (NoSuchMethodException e) {
 			resp.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,
 					"no such api:" + req.getMethod() + ":" + req.getRequestURI());
 			return;
 		} catch (Throwable e) {
-			LogUtil.defaultLog.error("An exception occurred when the request was forwarded to the Leader node, {}", e);
+			LogUtil.defaultLog.error("An exception occurred when the request was forwarded to the Leader {}, error {}", leaderServer, e);
 			resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,
-					"Server failed," + ExceptionUtil.getAllExceptionMsg(e));
+					"Server failed," + e.toString());
 			return;
 		}
 

File: config/src/test/java/com/alibaba/nacos/config/server/service/dump/DumpServiceTest.java
Patch:
@@ -16,7 +16,7 @@ public class DumpServiceTest {
     DumpService service;
 
     @Test
-    public void init() {
+    public void init() throws Exception {
         service.init();
     }
 }

File: console/src/main/java/com/alibaba/nacos/console/exception/ConsoleExceptionHandler.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.console.exception;
 
+import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.auth.AccessException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -41,12 +42,12 @@ private ResponseEntity<String> handleAccessException(AccessException e) {
 
     @ExceptionHandler(IllegalArgumentException.class)
     private ResponseEntity<String> handleIllegalArgumentException(IllegalArgumentException e) {
-        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.toString());
+        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ExceptionUtil.getStackTrace(e));
     }
 
     @ExceptionHandler(Exception.class)
     private ResponseEntity<String> handleException(Exception e) {
         logger.error("CONSOLE", e);
-        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.toString());
+        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(ExceptionUtil.getStackTrace(e));
     }
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/DiscoveryMemberLookup.java
Patch:
@@ -183,8 +183,7 @@ public void onError(Throwable e) {
 				}
 			}
 			catch (Exception e) {
-				Loggers.CLUSTER.error("node state report task has error : {}",
-						ExceptionUtil.getAllExceptionMsg(e));
+				Loggers.CLUSTER.error("node state report task has error : {}", e);
 			}
 			finally {
 				TimerContext.end(Loggers.CLUSTER);

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/RaftEvent.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
-import com.alibaba.nacos.core.notify.Event;
 import com.alibaba.nacos.core.notify.SlowEvent;
 
 import java.util.Collections;

File: core/src/main/java/com/alibaba/nacos/core/notify/NotifyCenter.java
Patch:
@@ -391,6 +391,7 @@ boolean publish(Event event) {
 				return true;
 			} catch (InterruptedException ignore) {
 				Thread.interrupted();
+				LOGGER.warn("Unable to plug in due to interruption, synchronize sending time, event : {}", event);
 				receiveEvent(event);
 				return true;
 			} catch (Throwable ex) {

File: config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java
Patch:
@@ -88,7 +88,6 @@ public class TransferToLeaderFilter implements Filter {
 
 	@PostConstruct
 	protected void init() {
-		System.out.println(getClass());
 		LogUtil.defaultLog.info("Open the request and forward it to the leader");
 		listenerLeaderStatus();
 		registerSubscribe();

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -27,7 +27,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class Member {
+public class Member implements Cloneable {
 
     private String ip;
 

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.core.notify.Event;
 import com.alibaba.nacos.core.notify.NotifyCenter;
 import com.alibaba.nacos.core.notify.SlowEvent;
 import org.apache.commons.lang3.StringUtils;

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_ITCase.java
Patch:
@@ -379,7 +379,7 @@ public void nacos_addListener_2() throws Exception {
      * @author xiaochun.xxc
      * @since 3.6.8
      */
-    @Test(timeout = 5*TIME_OUT)
+    @Test(timeout = 5 * TIME_OUT)
     public void nacos_addListener_3() throws InterruptedException, NacosException {
         final AtomicInteger count = new AtomicInteger(0);
         final String content = "test-abc";

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_ITCase.java
Patch:
@@ -185,6 +185,7 @@ public void publishBetaConfig_noBetaIps() throws Exception {
                 .done(),
             String.class,
             HttpMethod.GET);
+        System.out.println(response1);
         Assert.assertTrue(response1.getStatusCode().is2xxSuccessful());
         System.out.println(response1.getBody());
         Assert.assertEquals(content, response1.getBody());

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_ITCase.java
Patch:
@@ -131,8 +131,9 @@ public void testExportByIds(){
         JSONArray resultConfigs = resultObj.getJSONArray("pageItems");
         JSONObject config1 = resultConfigs.getJSONObject(0);
         JSONObject config2 = resultConfigs.getJSONObject(1);
-        String exportByIdsUrl = "?export=true&tenant=&group=&appName=&ids=" + config1.getIntValue("id")
-            + "," + config2.getIntValue("id");
+        String exportByIdsUrl = "?export=true&tenant=&group=&appName=&ids=" + config1.getLongValue("id")
+            + "," + config2.getLongValue("id");
+        System.out.println(exportByIdsUrl);
         byte[] zipData = httpClient.download(SERVER_ADDR + CONFIG_CONTROLLER_PATH + exportByIdsUrl, null);
         ZipUtils.UnZipResult unZiped = ZipUtils.unzip(zipData);
         List<ZipUtils.ZipItem> zipItemList = unZiped.getZipItemList();

File: test/src/test/java/com/alibaba/nacos/test/core/cluster/MemberLookup_ITCase.java
Patch:
@@ -149,7 +149,7 @@ public void test_c_lookup_address_server() throws Exception {
 		try {
 			func(lookup);
 		} catch (NacosException e) {
-			e.printStackTrace();
+			System.out.println(e.getErrMsg());
 			Assert.assertTrue(StringUtils.containsIgnoreCase(e.getErrMsg(), "jmenv.tbsite.net"));
 		}
 	}

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -54,7 +54,7 @@ public class NacosConfigService implements ConfigService {
 
     private static final Logger LOGGER = LogUtils.logger(NacosConfigService.class);
 
-    private static final long POST_TIMEOUT = 10000L;
+    private static final long POST_TIMEOUT = 3000L;
 
     private static final String EMPTY = "";
 

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -31,6 +31,7 @@
 /**
  * @author nkorange
  */
+@Ignore
 public class NamingTest {
 
     @Test

File: config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java
Patch:
@@ -88,6 +88,7 @@ public class TransferToLeaderFilter implements Filter {
 
 	@PostConstruct
 	protected void init() {
+		System.out.println(getClass());
 		LogUtil.defaultLog.info("Open the request and forward it to the leader");
 		listenerLeaderStatus();
 		registerSubscribe();

File: config/src/main/java/com/alibaba/nacos/config/server/service/LocalDataSourceServiceImpl.java
Patch:
@@ -125,6 +125,7 @@ private synchronized void initialize(String jdbcUrl) {
         ds.setJdbcUrl(jdbcUrl);
         ds.setUsername(userName);
         ds.setPassword(password);
+        ds.setIdleTimeout(30_000L);
         ds.setMaximumPoolSize(80);
         ds.setConnectionTimeout(10000L);
         DataSourceTransactionManager tm = new DataSourceTransactionManager();

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -78,6 +78,7 @@ public class DumpService {
 
     @PostConstruct
     protected void init() {
+        DynamicDataSource.getInstance().getDataSource();
 
         // If using embedded distributed storage, you need to wait for the
         // underlying master to complete the selection

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -486,7 +486,6 @@ public void removeConfigInfo(final String dataId, final String group,
 				if (!result) {
 					throw new NacosConfigException("config deletion failed");
 				}
-
 			}
 			finally {
 				SqlContextUtils.cleanCurrentSqlContext();

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberLookup.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.cluster.lookup;
+package com.alibaba.nacos.core.cluster;
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.core.cluster.Member;

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -57,8 +57,7 @@ public static Member singleParse(String member) {
 		int defaultPort = 8848;
 		// Set the default Raft port information for securit
 
-		String[] memberDetails = member.split("\\?");
-		String address = memberDetails[0];
+		String address = member;
 		int port = defaultPort;
 		if (address.contains(SEMICOLON)) {
 			String[] info = address.split(SEMICOLON);

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/AddressServerMemberLookup.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.common.http.param.Header;
 import com.alibaba.nacos.common.http.param.Query;
 import com.alibaba.nacos.common.model.RestResult;
+import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.GenericType;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/DiscoveryMemberLookup.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.common.utils.TimerContext;
+import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.cluster.NodeState;

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/FileConfigMemberLookup.java
Patch:
@@ -20,17 +20,16 @@
 import com.alibaba.nacos.common.file.FileChangeEvent;
 import com.alibaba.nacos.common.file.FileWatcher;
 import com.alibaba.nacos.common.file.WatchFileCenter;
+import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.Member;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.Loggers;
 import org.apache.commons.lang3.StringUtils;
 
-import java.io.FileNotFoundException;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
-import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
  * Cluster.conf file managed cluster member node addressing pattern

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -16,12 +16,12 @@
 
 package com.alibaba.nacos.core.cluster.lookup;
 
+import com.alibaba.nacos.core.cluster.AbstractMemberLookup;
 import com.alibaba.nacos.core.cluster.MemberUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.core.utils.InetUtils;
 
 import java.util.Collections;
-import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
  * Member node addressing mode in stand-alone mode

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -124,7 +124,6 @@ public void failed(ConfigurableApplicationContext context, Throwable exception)
 
         LOGGER.error("Nacos failed to start, please see {} for more details.",
                 Paths.get(ApplicationUtils.getNacosHome(), "logs/nacos.log"));
-        context.close();
     }
 
     /**

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/BytesHolder.java
Patch:
@@ -36,7 +36,8 @@ public byte[] getBytes() {
 
 	public static BytesHolder create(byte[] bytes) {
 		BytesHolder holder = new BytesHolder();
-		holder.setBytes(bytes);
+		holder.bytes = bytes;
 		return holder;
 	}
+
 }

File: naming/src/main/java/com/alibaba/nacos/naming/exception/ResponseExceptionHandler.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.naming.exception;
 
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.core.auth.AccessException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
@@ -31,7 +30,7 @@
 public class ResponseExceptionHandler {
 
     @ExceptionHandler(NacosException.class)
-    private ResponseEntity<String> handleNacosException(NacosException e) {
+    public ResponseEntity<String> handleNacosException(NacosException e) {
         Loggers.SRV_LOG.error("got exception. {}", e.getErrMsg(), e);
         return ResponseEntity.status(e.getErrCode()).body(e.getMessage());
     }
@@ -50,7 +49,7 @@ public ResponseEntity<String> handleMissingParams(MissingServletRequestParameter
     }
 
     @ExceptionHandler(Exception.class)
-    private ResponseEntity<String> handleException(Exception e) {
+    public ResponseEntity<String> handleException(Exception e) {
         Loggers.SRV_LOG.error("got exception.", e);
         return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(e.toString());
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_ITCase.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.api.config.ConfigService;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.Assert;
 import org.junit.Before;
@@ -51,8 +52,6 @@ public class ConfigBeta_ITCase {
 
     private String url;
 
-    private ConfigService configService;
-
     @Autowired
     private TestRestTemplate restTemplate;
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigExportAndImportAPI_ITCase.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.client.config.http.ServerHttpAgent;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient;
 import com.alibaba.nacos.config.server.utils.ZipUtils;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.github.keran213539.commonOkHttp.CommonOkHttpClient;
 import com.github.keran213539.commonOkHttp.CommonOkHttpClientBuilder;
 import com.github.keran213539.commonOkHttp.UploadByteFile;
@@ -45,6 +46,7 @@
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigExportAndImportAPI_ITCase {
+
     private static final long TIME_OUT = 2000;
     private static final String CONFIG_CONTROLLER_PATH = "/v1/cs/configs";
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPollReturnChanges_ITCase.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.api.config.PropertyChangeType;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
@@ -37,9 +38,10 @@
 import java.util.concurrent.TimeUnit;
 
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001", "nacos.standalone=true"},
+@SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
 public class ConfigLongPollReturnChanges_ITCase {
+
     @LocalServerPort
     private int port;
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.config.ConfigService;
 import com.alibaba.nacos.api.config.listener.Listener;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: test/src/test/java/com/alibaba/nacos/test/config/DerbyRaftError_ITCase.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.consistency.Serializer;
 import com.alibaba.nacos.consistency.entity.Log;
 import com.alibaba.nacos.consistency.exception.ConsistencyException;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.google.common.collect.Lists;
 import com.google.protobuf.ByteString;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -23,6 +23,7 @@
 import com.alibaba.nacos.api.config.ConfigService;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.apache.http.HttpStatus;
 import org.junit.After;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/NamingAuth_ITCase.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.apache.http.HttpStatus;
 import org.junit.After;
 import org.junit.Assert;
@@ -84,7 +85,6 @@ public void writeWithReadPermission() throws Exception {
 
     @Test
     public void readWithReadPermission() throws Exception {
-
         properties.put(PropertyKeyConst.USERNAME, username2);
         properties.put(PropertyKeyConst.PASSWORD, password2);
         NamingService namingService1 = NacosFactory.createNamingService(properties);

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.core.auth.Permission;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.After;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Role_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.Nacos;
 import com.alibaba.nacos.config.server.auth.RoleInfo;
 import com.alibaba.nacos.config.server.model.Page;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.After;

File: test/src/test/java/com/alibaba/nacos/test/core/auth/User_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.model.User;
 import com.alibaba.nacos.console.utils.PasswordEncoderUtil;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.HttpClient4Test;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.After;

File: test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.After;
 import org.junit.Assert;
@@ -409,6 +410,7 @@ private void namingServiceCreate(String serviceName, String namespace, String gr
                 .done(),
             String.class,
             HttpMethod.POST);
+        System.out.println(response);
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
         Assert.assertEquals("ok", response.getBody());
     }
@@ -427,8 +429,7 @@ private void namingServiceDelete(String serviceName, String namespace, String gr
                 .done(),
             String.class,
             HttpMethod.DELETE);
-        System.out.print("resp = " + response.getBody());
-
+        System.out.println(response);
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
         Assert.assertEquals("ok", response.getBody());
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;

File: test/src/test/java/com/alibaba/nacos/test/naming/Cmdb_ITCase.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.*;
 import org.junit.runner.RunWith;

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -10,6 +10,7 @@
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -9,6 +9,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.NacosNamingService;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.BaseTest;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.Nacos;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.*;
 import org.junit.runner.RunWith;

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.naming.NamingFactory;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -25,6 +25,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: test/src/test/java/com/alibaba/nacos/test/naming/Subscribe_ITCase.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alibaba.nacos.test.base.Params;
 import org.junit.Assert;
 import org.junit.Before;

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.listener.NamingEvent;
 import com.alibaba.nacos.api.naming.pojo.Instance;
+import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -78,10 +78,10 @@ public class DumpService {
 
     @PostConstruct
     protected void init() {
+
         // If using embedded distributed storage, you need to wait for the
         // underlying master to complete the selection
-
-        if (PropertyUtil.isEmbeddedStorage()) {
+        if (PropertyUtil.isEmbeddedStorage() && !ApplicationUtils.getStandaloneMode()) {
 
             LogUtil.dumpLog.info("With embedded distributed storage, you need to wait for " +
                     "the underlying master to complete before you can perform the dump operation.");

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/BaseDatabaseOperate.java
Patch:
@@ -154,11 +154,11 @@ default Boolean update(TransactionTemplate transactionTemplate, JdbcTemplate jdb
                 return Boolean.TRUE;
             }
             catch (BadSqlGrammarException | DataIntegrityViolationException e) {
-                fatalLog.error("[db-error] " + e.toString(), e);
+                fatalLog.error("[db-error] sql : {}, args : {}, error : {}", errSql[0], args[0], e);
                 return false;
             }
             catch (CannotGetJdbcConnectionException e) {
-                fatalLog.error("[db-error] " + e.toString(), e);
+                fatalLog.error("[db-error] sql : {}, args : {}, error : {}", errSql[0], args[0], e);
                 throw e;
             } catch (DataAccessException e) {
                 fatalLog.error("[db-error] DataAccessException sql : {}, args : {}, error : {}",

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/EmbeddedStoragePersistServiceImpl.java
Patch:
@@ -166,7 +166,7 @@ public void addConfigInfo(final String srcIp, final String srcUser,
 
 		try {
 			long configId = idGeneratorManager.nextId(configInfoId);
-			long configHistoryId = idGeneratorManager.nextId(this.configHistoryId);
+			long hisId = idGeneratorManager.nextId(configHistoryId);
 
 			addConfigInfoAtomic(configId, srcIp, srcUser, configInfo, time,
 					configAdvanceInfo);
@@ -176,7 +176,7 @@ public void addConfigInfo(final String srcIp, final String srcUser,
 
 			addConfigTagsRelation(configId, configTags, configInfo.getDataId(),
 					configInfo.getGroup(), configInfo.getTenant());
-			insertConfigHistoryAtomic(configHistoryId, configInfo, srcIp, srcUser, time,
+			insertConfigHistoryAtomic(hisId, configInfo, srcIp, srcUser, time,
 					"I");
 
 			boolean result = databaseOperate.smartUpdate();

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -33,6 +33,7 @@
 import org.springframework.scheduling.annotation.Scheduled;
 import org.springframework.stereotype.Service;
 
+import javax.annotation.PostConstruct;
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.regex.Pattern;
@@ -179,7 +180,7 @@ public Page<PermissionInfo> getPermissionsByRoleFromDatabase(String role, int pa
     }
 
     public void addRole(String role, String username) {
-        if (userDetailsService.getUser(username) == null) {
+        if (userDetailsService.getUserFromDatabase(username) == null) {
             throw new IllegalArgumentException("user '" + username + "' not found!");
         }
         if (GLOBAL_ADMIN_ROLE.equals(role)) {

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/users/NacosUserDetailsServiceImpl.java
Patch:
@@ -28,6 +28,7 @@
 import org.springframework.security.core.userdetails.UsernameNotFoundException;
 import org.springframework.stereotype.Service;
 
+import javax.annotation.PostConstruct;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -136,7 +136,7 @@ public boolean equals(Object o) {
 	@Override
 	public String toString() {
 		return "Member{" + "ip='" + ip + '\'' + ", port=" + port + ", state=" + state
-				+ '}';
+				+ ", extendInfo=" + new TreeMap<>(extendInfo) + '}';
 	}
 
 	@Override

File: core/src/main/java/com/alibaba/nacos/core/cluster/lookup/StandaloneMemberLookup.java
Patch:
@@ -33,8 +33,7 @@ public class StandaloneMemberLookup extends AbstractMemberLookup {
 	@Override
 	public void start() {
 		if (start.compareAndSet(false, true)) {
-			String url = InetUtils.getSelfIp() + ":" + ApplicationUtils.getPort() + "?"
-					+ ApplicationUtils.getProperty("nacos.standalone.params", "");
+			String url = InetUtils.getSelfIp() + ":" + ApplicationUtils.getPort();
 			afterLookup(MemberUtils.readServerConf(Collections.singletonList(url)));
 		}
 	}

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -122,8 +122,8 @@ public void failed(ConfigurableApplicationContext context, Throwable exception)
 
         LOGGER.error("Startup errors : {}", exception);
 
-        LOGGER.error("Nacos failed to start, please see {}logs/nacos.log for more details.",
-                ApplicationUtils.getNacosHome());
+        LOGGER.error("Nacos failed to start, please see {} for more details.",
+                Paths.get(ApplicationUtils.getNacosHome(), "logs/nacos.log"));
         context.close();
     }
 

File: core/src/main/java/com/alibaba/nacos/core/notify/NotifyCenter.java
Patch:
@@ -277,7 +277,7 @@ public boolean test(Event event, Subscribe subscribe) {
 		};
 
 		Publisher(final Class<? extends Event> eventType) {
-			this.eventType = eventType;
+			this(eventType, RING_BUFFER_SIZE);
 		}
 
 		Publisher(final Class<? extends Event> eventType, final int queueMaxSize) {

File: test/src/test/java/com/alibaba/nacos/test/core/auth/ConfigAuth_ITCase.java
Patch:
@@ -156,6 +156,7 @@ public void readWithWritePermission() throws Exception {
 
         CountDownLatch latch = new CountDownLatch(1);
 
+        properties.put(PropertyKeyConst.NAMESPACE, namespace1);
         properties.put(PropertyKeyConst.USERNAME, username2);
         properties.put(PropertyKeyConst.PASSWORD, password2);
         iconfig = NacosFactory.createConfigService(properties);

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -177,7 +177,7 @@ public static void prepareServer(int localPort, String status) {
         headers.add("Nacos-Server");
         HttpClient.HttpResult result =
             HttpClient.request(url, headers, new HashMap<String, String>(), StringUtils.EMPTY, "UTF-8", "PUT");
-
+        System.out.println(result);
         Assert.assertEquals(HttpStatus.SC_OK, result.code);
 
 
@@ -187,7 +187,7 @@ public static void prepareServer(int localPort, String status) {
         headers.add("Nacos-Server");
         result =
             HttpClient.request(url, headers, new HashMap<String, String>(), StringUtils.EMPTY, "UTF-8", "PUT");
-
+        System.out.println(result);
         Assert.assertEquals(HttpStatus.SC_OK, result.code);
     }
 
@@ -198,7 +198,7 @@ public static void destoryServer(int localPort) {
         headers.add("Nacos-Server");
         HttpClient.HttpResult result =
             HttpClient.request(url, headers, new HashMap<String, String>(), StringUtils.EMPTY, "UTF-8", "PUT");
-
+        System.out.println(result);
         Assert.assertEquals(HttpStatus.SC_OK, result.code);
     }
 }

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.NoneSelector;
+import com.alibaba.nacos.test.BaseTest;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
@@ -49,7 +50,7 @@
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
-public class NamingMaintainService_ITCase {
+public class NamingMaintainService_ITCase extends BaseTest {
 
     private NamingMaintainService namingMaintainService;
     private NamingService namingService;

File: test/src/test/java/com/alibaba/nacos/test/naming/RandomUtils.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.test.naming;
 
+import com.alibaba.nacos.test.BaseTest;
+
 import java.util.*;
 
 /**
@@ -23,7 +25,7 @@
  * @author wangtong.wt
  * @date 2018/6/20
  */
-public class RandomUtils {
+public class RandomUtils extends BaseTest {
     private static Random rd = new Random();
     private static int UNICODE_START = 19968;
     private static int UNICODE_END = 40864;

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest_ITCase.java
Patch:
@@ -45,7 +45,7 @@
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Nacos.class, properties = {"server.servlet.context-path=/nacos", "server.port=7001"},
         webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
-public class ServiceListTest {
+public class ServiceListTest_ITCase {
 
     private NamingService naming;
 

File: common/src/main/java/com/alibaba/nacos/common/executor/ThreadPoolManager.java
Patch:
@@ -121,7 +121,7 @@ public synchronized void deregister(String namespace, String group, ExecutorServ
         }
     }
 
-    public synchronized void destroy(String namespace) {
+    public void destroy(String namespace) {
 	    final Object monitor = lockers.get(namespace);
 	    if (monitor == null) {
 	        throw new NoSuchElementException("This module does not have any thread pool resources : " + namespace);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.client.config.filter.impl.ConfigFilterChainManager;
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
-import com.alibaba.nacos.client.config.utils.MD5;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.TenantUtil;
 import org.slf4j.Logger;
@@ -242,7 +242,7 @@ public void run() {
     }
 
     static public String getMd5String(String config) {
-        return (null == config) ? Constants.NULL : MD5.getInstance().getMD5String(config);
+        return (null == config) ? Constants.NULL : MD5Utils.md5Hex(config, Constants.ENCODE);
     }
 
     private String loadCacheContentFromDiskLocal(String name, String dataId, String group, String tenant) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.client.config.http.HttpAgent;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.utils.ContentUtils;
-import com.alibaba.nacos.client.config.utils.MD5;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
@@ -279,7 +279,7 @@ private void checkLocalConfig(CacheData cacheData) {
         // 没有 -> 有
         if (!cacheData.isUseLocalConfigInfo() && path.exists()) {
             String content = LocalConfigInfoProcessor.getFailover(agent.getName(), dataId, group, tenant);
-            String md5 = MD5.getInstance().getMD5String(content);
+            String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             cacheData.setUseLocalConfigInfo(true);
             cacheData.setLocalConfigInfoVersion(path.lastModified());
             cacheData.setContent(content);
@@ -301,7 +301,7 @@ private void checkLocalConfig(CacheData cacheData) {
         if (cacheData.isUseLocalConfigInfo() && path.exists()
             && cacheData.getLocalConfigInfoVersion() != path.lastModified()) {
             String content = LocalConfigInfoProcessor.getFailover(agent.getName(), dataId, group, tenant);
-            String md5 = MD5.getInstance().getMD5String(content);
+            String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             cacheData.setUseLocalConfigInfo(true);
             cacheData.setLocalConfigInfoVersion(path.lastModified());
             cacheData.setContent(content);

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -38,8 +38,8 @@
  */
 public class HttpClient {
 
-    public static final int TIME_OUT_MILLIS = Integer
-        .getInteger("com.alibaba.nacos.client.naming.ctimeout", 50000);
+    public static final int READ_TIME_OUT_MILLIS = Integer
+        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 50000);
     public static final int CON_TIME_OUT_MILLIS = Integer
         .getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     private static final boolean ENABLE_HTTPS = Boolean
@@ -73,7 +73,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
 
             setHeaders(conn, headers, encoding);
             conn.setConnectTimeout(CON_TIME_OUT_MILLIS);
-            conn.setReadTimeout(TIME_OUT_MILLIS);
+            conn.setReadTimeout(READ_TIME_OUT_MILLIS);
             conn.setRequestMethod(method);
             conn.setDoOutput(true);
             if (StringUtils.isNotBlank(body)) {

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.aspect;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.ConfigService;
@@ -67,7 +67,7 @@ public class RequestLogAspect {
     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,
                                          HttpServletResponse response, String dataId, String group, String tenant,
                                          String content) throws Throwable {
-        final String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);
+        final String md5 = content == null ? null : MD5Utils.md5Hex(content, Constants.ENCODE);
         MetricsMonitor.getPublishMonitor().incrementAndGet();
         return logClientRequest("publish", pjp, request, response, dataId, group, tenant, md5);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.model;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 
 import java.io.PrintWriter;
@@ -47,7 +47,7 @@ public ConfigInfoBase(String dataId, String group, String content) {
         this.group = group;
         this.content = content;
         if (this.content != null) {
-            this.md5 = Md5Utils.getMD5(this.content, Constants.ENCODE);
+            this.md5 = MD5Utils.md5Hex(this.content, Constants.ENCODE);
         }
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/model/event/RaftDBErrorRecoverEvent.java
Patch:
@@ -16,16 +16,16 @@
 
 package com.alibaba.nacos.config.server.model.event;
 
+import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.core.notify.Event;
-import com.google.common.annotations.VisibleForTesting;
 
 /**
  *
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
-@VisibleForTesting
+@JustForTest
 public class RaftDBErrorRecoverEvent implements Event {
 	@Override
 	public Class<? extends Event> eventType() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.dump;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.AbstractTask;
 import com.alibaba.nacos.config.server.manager.TaskProcessor;
@@ -266,7 +266,7 @@ public boolean process(String taskType, AbstractTask task) {
                         cf.getLastModified(), cf.getType());
 
                     final String content = cf.getContent();
-                    final String md5 = Md5Utils.getMD5(content, Constants.ENCODE);
+                    final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
                     LogUtil.dumpLog.info("[dump-all-ok] {}, {}, length={}, md5={}",
                         GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(), content.length(), md5);
                 }
@@ -411,7 +411,7 @@ public boolean process(String taskType, AbstractTask task) {
             boolean result = ConfigService.dumpChange(cf.getDataId(), cf.getGroup(), cf.getTenant(),
                 cf.getContent(), cf.getLastModified());
             final String content = cf.getContent();
-            final String md5 = Md5Utils.getMD5(content, Constants.ENCODE);
+            final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             LogUtil.defaultLog.info(
                 "[dump-change-ok] {}, {}, length={}, md5={}",
                 new Object[] {

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -138,9 +138,7 @@ private void executeAsyncInvoke() {
 				String targetIp = task.getTargetIP();
 				if (memberManager.hasMember(targetIp)) {
 					// 启动健康检查且有不监控的ip则直接把放到通知队列，否则通知
-					boolean unHealthNeedDelay =
-							memberManager.isHealthCheck() && memberManager
-									.isUnHealth(targetIp);
+					boolean unHealthNeedDelay = memberManager.isUnHealth(targetIp);
 					if (unHealthNeedDelay) {
 						// target ip 不健康，则放入通知列表中
 						ConfigTraceService

File: config/src/main/java/com/alibaba/nacos/config/server/service/trace/ConfigTraceService.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.trace;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.LogUtil;
@@ -61,7 +61,7 @@ public static void logPersistenceEvent(String dataId, String group, String tenan
         }
         //localIp | dataid | group | tenant | requestIpAppName | ts | handleIp | event | type | [delayed = -1] | ext
         // (md5)
-        String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);
+        String md5 = content == null ? null : MD5Utils.md5Hex(content, Constants.ENCODE);
 
         LogUtil.traceLog.info("{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}", InetUtils.getSelfIp(), dataId, group, tenant,
             requestIpAppName, ts, handleIp, "persist", type, -1, md5);

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberUtils.java
Patch:
@@ -140,11 +140,9 @@ public static List<Member> kRandom(Collection<Member> members,
 		int totalSize = members.size();
 		for (int i = 0; i < 3 * totalSize && members.size() <= k; i++) {
 			for (Member member : members) {
-
 				if (filter.test(member)) {
 					tmp.add(member);
 				}
-
 			}
 		}
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.alibaba.nacos.core.distributed.raft;
 
+import com.alibaba.nacos.common.JustForTest;
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.consistency.LogFuture;
 import com.alibaba.nacos.consistency.ProtocolMetaData;
@@ -47,7 +48,6 @@
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import com.google.common.annotations.VisibleForTesting;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 
@@ -109,7 +109,7 @@ public class JRaftProtocol extends AbstractConsistencyProtocol<RaftConfig, LogPr
     private int failoverRetries = 1;
     private String failoverRetriesStr = String.valueOf(failoverRetries);
 
-    @VisibleForTesting
+    @JustForTest
     public static JRaftProtocol createNew() {
         return new JRaftProtocol();
     }

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -42,6 +42,9 @@
  */
 public class InetUtils {
 
+    /**
+     * {@link com.alibaba.nacos.core.cluster.ServerMemberManager} is listener
+     */
     @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
     public static class IPChangeEvent implements SlowEvent {
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -17,7 +17,8 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.annotation.JSONField;
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.apache.commons.lang3.StringUtils;
 
@@ -66,7 +67,7 @@ private String recalculateChecksum() {
             sb.append(",");
         }
 
-        return Md5Utils.getMD5(sb.toString(), "UTF-8");
+        return MD5Utils.md5Hex(sb.toString(), Constants.ENCODE);
     }
 
     public String convertMap2String(Map<String, String> map) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -17,8 +17,9 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.annotation.JSONField;
-import com.alibaba.nacos.common.utils.Md5Utils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
+import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.RecordListener;
 import com.alibaba.nacos.naming.healthcheck.ClientBeatCheckTask;
@@ -472,7 +473,7 @@ public synchronized void recalculateChecksum() {
             ipsString.append(",");
         }
 
-        checksum = Md5Utils.getMD5(ipsString.toString(), "UTF-8");
+        checksum = MD5Utils.md5Hex(ipsString.toString(), Constants.ENCODE);
     }
 
     private void updateOrAddCluster(Collection<Cluster> clusters) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.client.config.filter.impl.ConfigFilterChainManager;
 import com.alibaba.nacos.client.config.filter.impl.ConfigResponse;
 import com.alibaba.nacos.client.config.listener.impl.AbstractConfigChangeListener;
-import com.alibaba.nacos.client.config.utils.MD5;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.TenantUtil;
 import org.slf4j.Logger;
@@ -242,7 +242,7 @@ public void run() {
     }
 
     static public String getMd5String(String config) {
-        return (null == config) ? Constants.NULL : MD5.getInstance().getMD5String(config);
+        return (null == config) ? Constants.NULL : MD5Utils.md5Hex(config, Constants.ENCODE);
     }
 
     private String loadCacheContentFromDiskLocal(String name, String dataId, String group, String tenant) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.client.config.http.HttpAgent;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.utils.ContentUtils;
-import com.alibaba.nacos.client.config.utils.MD5;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
@@ -279,7 +279,7 @@ private void checkLocalConfig(CacheData cacheData) {
         // 没有 -> 有
         if (!cacheData.isUseLocalConfigInfo() && path.exists()) {
             String content = LocalConfigInfoProcessor.getFailover(agent.getName(), dataId, group, tenant);
-            String md5 = MD5.getInstance().getMD5String(content);
+            String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             cacheData.setUseLocalConfigInfo(true);
             cacheData.setLocalConfigInfoVersion(path.lastModified());
             cacheData.setContent(content);
@@ -301,7 +301,7 @@ private void checkLocalConfig(CacheData cacheData) {
         if (cacheData.isUseLocalConfigInfo() && path.exists()
             && cacheData.getLocalConfigInfoVersion() != path.lastModified()) {
             String content = LocalConfigInfoProcessor.getFailover(agent.getName(), dataId, group, tenant);
-            String md5 = MD5.getInstance().getMD5String(content);
+            String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             cacheData.setUseLocalConfigInfo(true);
             cacheData.setLocalConfigInfoVersion(path.lastModified());
             cacheData.setContent(content);

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.aspect;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.ConfigService;
@@ -67,7 +67,7 @@ public class RequestLogAspect {
     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,
                                          HttpServletResponse response, String dataId, String group, String tenant,
                                          String content) throws Throwable {
-        final String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);
+        final String md5 = content == null ? null : MD5Utils.md5Hex(content, Constants.ENCODE);
         MetricsMonitor.getPublishMonitor().incrementAndGet();
         return logClientRequest("publish", pjp, request, response, dataId, group, tenant, md5);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.model;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 
 import java.io.PrintWriter;
@@ -47,7 +47,7 @@ public ConfigInfoBase(String dataId, String group, String content) {
         this.group = group;
         this.content = content;
         if (this.content != null) {
-            this.md5 = Md5Utils.getMD5(this.content, Constants.ENCODE);
+            this.md5 = MD5Utils.md5Hex(this.content, Constants.ENCODE);
         }
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.config.server.service;
 
 import com.alibaba.nacos.common.utils.IoUtils;
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import org.apache.commons.io.FileUtils;
@@ -172,7 +172,7 @@ static public String getConfig(String dataId, String group, String tenant)
 
     static public String getLocalConfigMd5(String dataId, String group, String tenant)
         throws IOException {
-        return Md5Utils.getMD5(getConfig(dataId, group, tenant), Constants.ENCODE);
+        return MD5Utils.md5Hex(getConfig(dataId, group, tenant), Constants.ENCODE);
     }
 
     static public File heartBeatFile() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.config.server.service.dump;
 
 import com.alibaba.nacos.common.utils.IoUtils;
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -67,7 +67,7 @@ public class DumpService {
     PersistService persistService;
 
     @PostConstruct
-    public void init() {
+        public void init() {
         LogUtil.defaultLog.warn("DumpService start");
         DumpProcessor processor = new DumpProcessor(this);
         DumpAllProcessor dumpAllProcessor = new DumpAllProcessor(this);
@@ -347,7 +347,7 @@ public void run() {
                         ConfigInfo cf = MergeTaskProcessor.merge(dataId, group, tenant, datumList);
                         String aggrContent = cf.getContent();
                         String localContentMD5 = ConfigService.getContentMd5(GroupKey.getKey(dataId, group));
-                        String aggrConetentMD5 = Md5Utils.getMD5(aggrContent, Constants.ENCODE);
+                        String aggrConetentMD5 = MD5Utils.md5Hex(aggrContent, Constants.ENCODE);
 
                         if (!StringUtils.equals(localContentMD5, aggrConetentMD5)) {
                             persistService.insertOrUpdate(null, null, cf, time, null, false);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.dump;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.AbstractTask;
 import com.alibaba.nacos.config.server.manager.TaskProcessor;
@@ -265,7 +265,7 @@ public boolean process(String taskType, AbstractTask task) {
                         cf.getLastModified(), cf.getType());
 
                     final String content = cf.getContent();
-                    final String md5 = Md5Utils.getMD5(content, Constants.ENCODE);
+                    final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
                     LogUtil.dumpLog.info("[dump-all-ok] {}, {}, length={}, md5={}",
                         GroupKey2.getKey(cf.getDataId(), cf.getGroup()), cf.getLastModified(), content.length(), md5);
                 }
@@ -410,7 +410,7 @@ public boolean process(String taskType, AbstractTask task) {
             boolean result = ConfigService.dumpChange(cf.getDataId(), cf.getGroup(), cf.getTenant(),
                 cf.getContent(), cf.getLastModified());
             final String content = cf.getContent();
-            final String md5 = Md5Utils.getMD5(content, Constants.ENCODE);
+            final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
             LogUtil.defaultLog.info(
                 "[dump-change-ok] {}, {}, length={}, md5={}",
                 new Object[] {

File: config/src/main/java/com/alibaba/nacos/config/server/service/trace/ConfigTraceService.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.trace;
 
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.utils.LogUtil;
@@ -62,7 +62,7 @@ public static void logPersistenceEvent(String dataId, String group, String tenan
         }
         //localIp | dataid | group | tenant | requestIpAppName | ts | handleIp | event | type | [delayed = -1] | ext
         // (md5)
-        String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);
+        String md5 = content == null ? null : MD5Utils.md5Hex(content, Constants.ENCODE);
 
         LogUtil.traceLog.info("{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}", LOCAL_IP, dataId, group, tenant,
             requestIpAppName, ts, handleIp, "persist", type, -1, md5);

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -17,7 +17,8 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.annotation.JSONField;
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.apache.commons.lang3.StringUtils;
 
@@ -66,7 +67,7 @@ private String recalculateChecksum() {
             sb.append(",");
         }
 
-        return Md5Utils.getMD5(sb.toString(), "UTF-8");
+        return MD5Utils.md5Hex(sb.toString(), Constants.ENCODE);
     }
 
     public String convertMap2String(Map<String, String> map) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -17,7 +17,8 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.annotation.JSONField;
-import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.common.utils.MD5Utils;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.boot.SpringContext;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.RecordListener;
@@ -472,7 +473,7 @@ public synchronized void recalculateChecksum() {
             ipsString.append(",");
         }
 
-        checksum = Md5Utils.getMD5(ipsString.toString(), "UTF-8");
+        checksum = MD5Utils.md5Hex(ipsString.toString(), Constants.ENCODE);
     }
 
     private void updateOrAddCluster(Collection<Cluster> clusters) {

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -54,7 +54,7 @@ public class NacosConfigService implements ConfigService {
 
     private static final Logger LOGGER = LogUtils.logger(NacosConfigService.class);
 
-    private static final long POST_TIMEOUT = 3000L;
+    private static final long POST_TIMEOUT = 10000L;
 
     private static final String EMPTY = "";
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/PropertiesChangeParser.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.config.ConfigChangeItem;
-import com.alibaba.nacos.client.utils.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.io.IOException;
 import java.io.StringReader;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.utils.*;
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.slf4j.Logger;
 
 import java.io.IOException;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/YmlChangeParser.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.config.impl;
 
 import com.alibaba.nacos.api.config.ConfigChangeItem;
-import com.alibaba.nacos.client.utils.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.yaml.snakeyaml.Yaml;
 import java.util.*;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.naming.core;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.client.utils.StringUtils;
+import com.alibaba.nacos.common.utils.StringUtils;
 import com.alibaba.nacos.common.utils.IoUtils;
 
 import java.net.DatagramPacket;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/InitUtils.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.api.SystemPropertyKeyConst;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.client.utils.*;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.Properties;
 import java.util.concurrent.Callable;

File: client/src/main/java/com/alibaba/nacos/client/utils/AppNameUtils.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.common.utils.StringUtils;
+
 import java.io.File;
 
 /**

File: client/src/main/java/com/alibaba/nacos/client/utils/IPUtil.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.common.utils.StringUtils;
+
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 

File: client/src/main/java/com/alibaba/nacos/client/utils/TemplateUtils.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.common.utils.StringUtils;
+
 import java.util.concurrent.Callable;
 
 /**

File: client/src/main/java/com/alibaba/nacos/client/utils/TenantUtil.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.common.utils.StringUtils;
+
 /**
  * Tenant Util
  *

File: client/src/main/java/com/alibaba/nacos/client/utils/ValidatorUtils.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.client.utils;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
+import com.alibaba.nacos.common.utils.StringUtils;
 
 import java.util.Properties;
 import java.util.regex.Matcher;

File: client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java
Patch:
@@ -1,9 +1,6 @@
 package com.alibaba.nacos.client;
 
-import com.alibaba.fastjson.JSONObject;
-import com.alibaba.nacos.api.common.ResponseCode;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.beat.BeatReactor;
 import com.alibaba.nacos.client.naming.net.NamingProxy;

File: client/src/test/java/com/alibaba/nacos/client/utils/StringUtilsTest.java
Patch:
@@ -16,12 +16,13 @@
 
 package com.alibaba.nacos.client.utils;
 
+import com.alibaba.nacos.common.utils.StringUtils;
 import org.junit.Test;
 
 import java.util.ArrayList;
 import java.util.Collection;
 
-import static com.alibaba.nacos.client.utils.StringUtils.*;
+import static com.alibaba.nacos.common.utils.StringUtils.*;
 import static org.junit.Assert.*;
 
 /**

File: common/src/main/java/com/alibaba/nacos/common/executor/ExecutorFactory.java
Patch:
@@ -14,10 +14,8 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.executor;
+package com.alibaba.nacos.common.executor;
 
-import com.alibaba.nacos.common.ThreadPoolManager;
-import com.alibaba.nacos.common.utils.ShutdownUtils;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ForkJoinPool;

File: common/src/main/java/com/alibaba/nacos/common/executor/NameThreadFactory.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.executor;
+package com.alibaba.nacos.common.executor;
 
 import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.atomic.AtomicInteger;

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpMethod.java
Patch:
@@ -176,7 +176,7 @@ public static BaseHttpMethod sourceOf(String name) {
                 return method;
             }
         }
-        throw new IllegalArgumentException("Unsupported http method");
+        throw new IllegalArgumentException("Unsupported http method : " + name);
     }
 
 }

File: common/src/main/java/com/alibaba/nacos/common/http/Callback.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.common.http;
 
-import com.alibaba.nacos.common.model.HttpRestResult;
+import com.alibaba.nacos.common.model.RestResult;
 
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
@@ -26,9 +26,9 @@ public interface Callback<T> {
     /**
      * Callback after the request is responded
      *
-     * @param result {@link HttpRestResult}
+     * @param result {@link RestResult}
      */
-    void onReceive(HttpRestResult<T> result);
+    void onReceive(RestResult<T> result);
 
     /**
      * An error occurred during the request

File: common/src/main/java/com/alibaba/nacos/common/http/param/MediaType.java
Patch:
@@ -19,7 +19,9 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class MediaType {
+public final class MediaType {
+
+    private MediaType() {}
 
     public static final String APPLICATION_ATOM_XML = "application/atom+xml";
 

File: common/src/main/java/com/alibaba/nacos/common/model/RestResult.java
Patch:
@@ -23,9 +23,6 @@
  */
 public class RestResult<T> implements Serializable {
 
-    /**
-     *
-     */
     private static final long serialVersionUID = 6095433538316185017L;
 
     private int code;

File: common/src/main/java/com/alibaba/nacos/common/utils/ConcurrentHashSet.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.common.utils;
 
 import java.util.AbstractSet;
 import java.util.Iterator;

File: common/src/main/java/com/alibaba/nacos/common/utils/ConvertUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.common.utils;
 
 import org.apache.commons.lang3.StringUtils;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/DiskUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.common.utils;
 
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
@@ -39,6 +39,7 @@
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipInputStream;
 import java.util.zip.ZipOutputStream;
+
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.io.output.NullOutputStream;

File: common/src/main/java/com/alibaba/nacos/common/utils/ExceptionUtil.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.common.utils;
 
 import org.apache.commons.lang3.StringUtils;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/StringUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.client.utils;
+package com.alibaba.nacos.common.utils;
 
 import java.io.IOException;
 import java.io.StringWriter;

File: common/src/main/java/com/alibaba/nacos/common/utils/ThreadUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.common.utils;
 
 import java.util.concurrent.CountDownLatch;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/TimerContext.java
Patch:
@@ -14,9 +14,8 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.core.utils;
+package com.alibaba.nacos.common.utils;
 
-import org.javatuples.Pair;
 import org.slf4j.Logger;
 
 /**
@@ -34,7 +33,7 @@ public static void start(String name) {
     public static void end(Logger logger) {
         long endTime = System.currentTimeMillis();
         Pair<String, Long> record = TIME_RECORD.get();
-        logger.debug("{} cost time : {} ms", record.getValue0(), (endTime - record.getValue1()));
+        logger.debug("{} cost time : {} ms", record.getFirst(), (endTime - record.getSecond()));
         TIME_RECORD.remove();
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/CapacityManagementAspect.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.constant.CounterMode;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.service.capacity.CapacityService;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import org.apache.commons.lang3.StringUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionDistributedEmbedStorage.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.transaction;
+package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
@@ -27,7 +27,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class ConditionOnDistributedStore implements Condition {
+public class ConditionDistributedEmbedStorage implements Condition {
 
     @Override
     public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/ConditionStandaloneEmbedStorage.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.transaction;
+package com.alibaba.nacos.config.server.configuration;
 
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
@@ -27,10 +27,10 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
-public class ConditionOnDefaultStore implements Condition {
+public class ConditionStandaloneEmbedStorage implements Condition {
 
     @Override
     public boolean matches(ConditionContext context, AnnotatedTypeMetadata metadata) {
-        return !(PropertyUtil.isEmbeddedStorage() && !ApplicationUtils.getStandaloneMode());
+        return PropertyUtil.isEmbeddedStorage() && ApplicationUtils.getStandaloneMode();
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/configuration/NacosConfigConfiguration.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.alibaba.nacos.config.server.filter.NacosWebFilter;
 import com.alibaba.nacos.config.server.filter.TransferToLeaderFilter;
-import com.alibaba.nacos.config.server.service.transaction.ConditionOnDistributedStore;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Conditional;
@@ -42,7 +41,7 @@ public FilterRegistrationBean nacosWebFilterRegistration() {
 		return registration;
 	}
 
-	@Conditional(ConditionOnDistributedStore.class)
+	@Conditional(ConditionDistributedEmbedStorage.class)
 	@Bean
 	public FilterRegistrationBean transferToLeaderRegistration() {
 		FilterRegistrationBean<TransferToLeaderFilter> registration = new FilterRegistrationBean<>();
@@ -58,7 +57,7 @@ public NacosWebFilter nacosWebFilter() {
 		return new NacosWebFilter();
 	}
 
-	@Conditional(ConditionOnDistributedStore.class)
+	@Conditional(ConditionDistributedEmbedStorage.class)
 	@Bean
 	public TransferToLeaderFilter transferToLeader() {
 		return new TransferToLeaderFilter();

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HistoryController.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.model.ConfigHistoryInfo;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.ui.ModelMap;

File: config/src/main/java/com/alibaba/nacos/config/server/model/ACLInfo.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.model;
 
+import java.io.Serializable;
 import java.util.List;
 
 /**
@@ -23,8 +24,9 @@
  * @author Nacos
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
-public class ACLInfo {
+public class ACLInfo implements Serializable {
 
+    private static final long serialVersionUID = 1383026926036269457L;
     private Boolean isOpen;
     private List<String> ips;
 

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigHistoryInfo.java
Patch:
@@ -15,15 +15,17 @@
  */
 package com.alibaba.nacos.config.server.model;
 
+import java.io.Serializable;
 import java.sql.Timestamp;
 
 /**
  * history Info
  *
  * @author Nacos
  */
-public class ConfigHistoryInfo {
+public class ConfigHistoryInfo implements Serializable {
 
+    private static final long serialVersionUID = -7827521105376245603L;
     /**
      * id, nid, data_id, group_id, content, md5, gmt_create, gmt_modified, （配置创建时间，配置变更时间） src_user, src_ip, (变更操作者)
      * op_type（变更操作类型）

File: config/src/main/java/com/alibaba/nacos/config/server/model/SubInfo.java
Patch:
@@ -15,15 +15,17 @@
  */
 package com.alibaba.nacos.config.server.model;
 
+import java.io.Serializable;
 import java.sql.Timestamp;
 
 /**
  * sub 数据结构体
  *
  * @author Nacos
  */
-public class SubInfo {
+public class SubInfo implements Serializable {
 
+    private static final long serialVersionUID = -3900485932969066685L;
     private String appName;
     private String dataId;
     private String group;

File: config/src/main/java/com/alibaba/nacos/config/server/model/capacity/GroupCapacity.java
Patch:
@@ -22,6 +22,8 @@
  * @date 2018/3/13
  */
 public class GroupCapacity extends Capacity {
+
+    private static final long serialVersionUID = 5888791286289014878L;
     private String group;
 
     public String getGroup() {

File: config/src/main/java/com/alibaba/nacos/config/server/model/capacity/TenantCapacity.java
Patch:
@@ -22,6 +22,8 @@
  * @date 2018/3/13
  */
 public class TenantCapacity extends Capacity {
+
+    private static final long serialVersionUID = -1238179608935781384L;
     private String tenant;
 
     public String getTenant() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/CapacityService.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.nacos.config.server.model.capacity.Capacity;
 import com.alibaba.nacos.config.server.model.capacity.GroupCapacity;
 import com.alibaba.nacos.config.server.model.capacity.TenantCapacity;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.*;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
 import com.alibaba.nacos.config.server.model.ConfigInfoChanged;
 import com.alibaba.nacos.config.server.model.Page;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.config.server.model.ConfigInfoAggr;
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.ConfigDataChangeEvent;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.TimeUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -133,8 +133,9 @@ private void executeAsyncInvoke() {
                 if (memberManager.hasMember(
                     targetIp)) {
                     // 启动健康检查且有不监控的ip则直接把放到通知队列，否则通知
-                    if (memberManager.isHealthCheck()
-                        && memberManager.isUnHealth(targetIp)) {
+                    boolean unHealthNeedDelay = memberManager.isHealthCheck()
+                            && memberManager.isUnHealth(targetIp);
+                    if (unHealthNeedDelay) {
                         // target ip 不健康，则放入通知列表中
                         ConfigTraceService.logNotifyEvent(task.getDataId(), task.getGroup(), task.getTenant(), null,
                             task.getLastModified(),

File: config/src/main/java/com/alibaba/nacos/config/server/service/repository/DerbySnapshotOperation.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.transaction;
+package com.alibaba.nacos.config.server.service.repository;
 
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.consistency.snapshot.SnapshotOperation;
 import com.alibaba.nacos.consistency.snapshot.Writer;
 import com.alibaba.nacos.core.distributed.raft.utils.RaftExecutor;
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.common.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import com.alipay.sofa.jraft.util.CRC64;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/ModifyRequest.java
Patch:
@@ -14,12 +14,14 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.transaction;
+package com.alibaba.nacos.config.server.service.sql;
 
 import java.io.Serializable;
 import java.util.Arrays;
 
 /**
+ * Represents a database UPDATE or INSERT or DELETE statement
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 @SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")

File: config/src/main/java/com/alibaba/nacos/config/server/service/sql/SelectRequest.java
Patch:
@@ -14,12 +14,14 @@
  * limitations under the License.
  */
 
-package com.alibaba.nacos.config.server.service.transaction;
+package com.alibaba.nacos.config.server.service.sql;
 
 import java.io.Serializable;
 import java.util.Arrays;
 
 /**
+ * Represents a database SELECT statement
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class SelectRequest implements Serializable {

File: consistency/src/main/java/com/alibaba/nacos/consistency/ProtocolMetaData.java
Patch:
@@ -22,6 +22,7 @@
 import java.util.Map;
 import java.util.Observable;
 import java.util.Observer;
+import java.util.TreeMap;
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutorService;
@@ -57,9 +58,9 @@ public Map<String, Map<Object, Object>> getMetaDataMap() {
                 .map(entry -> {
                     return Pair.with(entry.getKey(), entry.getValue().getItemMap()
                             .entrySet().stream()
-                            .collect(HashMap::new, (m, e) -> m.put(e.getKey(), e.getValue().getData()), HashMap::putAll));
+                            .collect(TreeMap::new, (m, e) -> m.put(e.getKey(), e.getValue().getData()), TreeMap::putAll));
                 })
-                .collect(HashMap::new, (m, e) -> m.put(e.getValue0(), e.getValue1()), HashMap::putAll);
+                .collect(TreeMap::new, (m, e) -> m.put(e.getValue0(), e.getValue1()), TreeMap::putAll);
     }
 
     // Does not guarantee thread safety, there may be two updates of

File: console/src/main/java/com/alibaba/nacos/console/controller/HealthController.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.console.controller;
 
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.naming.controllers.OperatorController;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.common.model.RestResult;
 import com.alibaba.nacos.config.server.model.TenantInfo;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.console.model.Namespace;
 import com.alibaba.nacos.console.model.NamespaceAllInfo;
 import com.alibaba.nacos.console.security.nacos.NacosAuthConfig;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -89,9 +89,9 @@ private void reload() {
                 tmpPermissionInfoMap.put(role, permissionInfoPage.getPageItems());
             }
 
-            roleSet = tmpRoleSet;
-            roleInfoMap = tmpRoleInfoMap;
-            permissionInfoMap = tmpPermissionInfoMap;
+            roleSet.addAll(tmpRoleSet);
+            roleInfoMap.putAll(tmpRoleInfoMap);
+            permissionInfoMap.putAll(tmpPermissionInfoMap);
         } catch (Exception e) {
             Loggers.AUTH.warn("[LOAD-ROLES] load failed", e);
         }

File: console/src/test/java/com/alibaba/nacos/console/controller/HealthControllerTest.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.console.controller;
 
 import com.alibaba.fastjson.JSONObject;
-import com.alibaba.nacos.config.server.service.PersistService;
+import com.alibaba.nacos.config.server.service.repository.PersistService;
 import com.alibaba.nacos.naming.controllers.OperatorController;
 import org.junit.Assert;
 import org.junit.Before;

File: core/src/main/java/com/alibaba/nacos/core/auth/AccessException.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class AccessException extends NacosException {
 
+    private static final long serialVersionUID = -2926344920552803270L;
+
     public AccessException(){
 
     }

File: core/src/main/java/com/alibaba/nacos/core/auth/AuthFilter.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
 import com.alibaba.nacos.core.utils.Constants;
-import com.alibaba.nacos.core.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alibaba.nacos.core.utils.WebUtils;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/auth/User.java
Patch:
@@ -15,15 +15,17 @@
  */
 package com.alibaba.nacos.core.auth;
 
+import java.io.Serializable;
 
 /**
  * User information in authorization.
  *
  * @author nkorange
  * @since 1.2.0
  */
-public class User {
+public class User implements Serializable {
 
+    private static final long serialVersionUID = -8002966873087151367L;
     /**
      * Unique string representing user
      */

File: core/src/main/java/com/alibaba/nacos/core/cluster/IsolationEvent.java
Patch:
@@ -19,6 +19,8 @@
 import com.alibaba.nacos.core.notify.Event;
 
 /**
+ * Causes the server to handle the isolated state, unable to process any requests
+ *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
 public class IsolationEvent implements Event {

File: core/src/main/java/com/alibaba/nacos/core/cluster/Member.java
Patch:
@@ -32,7 +32,7 @@ public class Member {
 
     private int port = -1;
 
-    private NodeState state = NodeState.UP;
+    private volatile NodeState state = NodeState.UP;
 
     private Map<String, Object> extendInfo = new HashMap<>();
 
@@ -45,7 +45,6 @@ public Member() {
         extendInfo.put(MemberMetaDataConstants.SITE_KEY, "unknown");
         extendInfo.put(MemberMetaDataConstants.AD_WEIGHT, "0");
         extendInfo.put(MemberMetaDataConstants.WEIGHT, "1");
-        extendInfo.put(MemberMetaDataConstants.DISTRO_BEATS, null);
     }
 
     public static MemberBuilder builder() {

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberMetaDataConstants.java
Patch:
@@ -33,14 +33,11 @@ public class MemberMetaDataConstants {
 
 	public static final String WEIGHT = "weight";
 
-	public static final String DISTRO_BEATS = "distro_beats";
-
 	public static final String[] META_KEY_LIST = new String[]{
 			RAFT_PORT,
 			SITE_KEY,
 			AD_WEIGHT,
 			WEIGHT,
-			DISTRO_BEATS,
 	};
 
 }

File: core/src/main/java/com/alibaba/nacos/core/cluster/task/MemberShutdownTask.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos.core.cluster.task;
 
-import com.alibaba.fastjson.TypeReference;
 import com.alibaba.nacos.common.http.HttpClientManager;
 import com.alibaba.nacos.common.http.NSyncHttpClient;
 import com.alibaba.nacos.common.http.param.Header;
@@ -26,6 +25,7 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import com.alibaba.nacos.core.cluster.Task;
 import com.alibaba.nacos.core.utils.Commons;
+import com.alibaba.nacos.core.utils.GenericType;
 import com.alibaba.nacos.core.utils.Loggers;
 import java.util.Collection;
 import java.util.Collections;
@@ -37,7 +37,7 @@ public class MemberShutdownTask extends Task {
 
     private NSyncHttpClient httpClient;
 
-    private final TypeReference<RestResult<String>> typeReference = new TypeReference<RestResult<String>>() {
+    private final GenericType<RestResult<String>> typeReference = new GenericType<RestResult<String>>() {
     };
 
     public MemberShutdownTask(ServerMemberManager memberManager) {
@@ -66,7 +66,7 @@ public void executeBody() {
                     Commons.NACOS_CORE_CONTEXT + "/cluster/server/leave";
 
             try {
-                RestResult<String> result = httpClient.post(url, Header.EMPTY, Query.EMPTY, body, typeReference);
+                RestResult<String> result = httpClient.post(url, Header.EMPTY, Query.EMPTY, body, typeReference.getType());
                 Loggers.CLUSTER.info("{} the response of the target node to this logout operation : {}", member, result);
             } catch (Exception e) {
                 Loggers.CLUSTER.error("shutdown execute has error : {}", e);

File: core/src/main/java/com/alibaba/nacos/core/code/LoggingSpringApplicationRunListener.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.core.listener;
+package com.alibaba.nacos.core.code;
 
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import org.slf4j.Logger;

File: core/src/main/java/com/alibaba/nacos/core/code/StandaloneProfileApplicationListener.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.core.listener;
+package com.alibaba.nacos.core.code;
 
 import java.util.Arrays;
 

File: core/src/main/java/com/alibaba/nacos/core/code/StartingSpringApplicationRunListener.java
Patch:
@@ -13,9 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.core.listener;
+package com.alibaba.nacos.core.code;
 
-import com.alibaba.nacos.core.utils.DiskUtils;
+import com.alibaba.nacos.common.utils.DiskUtils;
 import com.alibaba.nacos.core.utils.ApplicationUtils;
 import java.io.File;
 import java.io.IOException;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/AbstractStateMachine.java
Patch:
@@ -170,7 +170,7 @@ public void onLeaderStart(final long term) {
         this.term = term;
         this.isLeader.set(true);
         this.leaderIp = node.getNodeId().getPeerId().getEndpoint().toString();
-        NotifyCenter.publishEvent(RaftEvent.class, RaftEvent.builder()
+        NotifyCenter.publishEvent(RaftEvent.builder()
                 .groupId(groupId)
                 .leader(leaderIp)
                 .term(term)
@@ -188,7 +188,7 @@ public void onLeaderStop(final Status status) {
     public void onStartFollowing(LeaderChangeContext ctx) {
         this.term = ctx.getTerm();
         this.leaderIp = ctx.getLeaderId().getEndpoint().toString();
-        NotifyCenter.publishEvent(RaftEvent.class, RaftEvent.builder()
+        NotifyCenter.publishEvent(RaftEvent.builder()
                 .groupId(groupId)
                 .leader(leaderIp)
                 .term(ctx.getTerm())
@@ -198,7 +198,7 @@ public void onStartFollowing(LeaderChangeContext ctx) {
 
     @Override
     public void onConfigurationCommitted(Configuration conf) {
-        NotifyCenter.publishEvent(RaftEvent.class, RaftEvent.builder()
+        NotifyCenter.publishEvent(RaftEvent.builder()
                 .groupId(groupId)
                 .leader(leaderIp)
                 .term(term)

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/NacosStateMachine.java
Patch:
@@ -24,7 +24,6 @@
 import com.alibaba.nacos.consistency.entity.Log;
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftConstants;
 import com.alibaba.nacos.core.distributed.raft.utils.JRaftLogOperation;
-import com.alibaba.nacos.core.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alipay.sofa.jraft.Iterator;
 import com.alipay.sofa.jraft.Status;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/FailoverClosureImpl.java
Patch:
@@ -16,10 +16,10 @@
 
 package com.alibaba.nacos.core.distributed.raft.utils;
 
+import com.alibaba.nacos.consistency.exception.ConsistencyException;
 import com.alibaba.nacos.core.distributed.raft.exception.NoLeaderException;
 import com.alibaba.nacos.core.utils.Loggers;
 import com.alipay.sofa.jraft.Status;
-import com.alipay.sofa.jraft.error.RetryAgainException;
 import java.io.IOException;
 import java.util.Objects;
 import java.util.concurrent.CompletableFuture;
@@ -73,9 +73,9 @@ public void run(Status status) {
                         this.retriesLeft);
             }
             if (Objects.nonNull(throwable)) {
-                future.completeExceptionally(throwable);
+                future.completeExceptionally(new ConsistencyException(throwable));
             } else {
-                future.completeExceptionally(new RetryAgainException("Maximum number of retries has been reached"));
+                future.completeExceptionally(new ConsistencyException("Maximum number of retries has been reached"));
             }
         }
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/RaftExecutor.java
Patch:
@@ -19,8 +19,8 @@
 import com.alibaba.nacos.core.distributed.raft.JRaftServer;
 import com.alibaba.nacos.core.distributed.raft.RaftConfig;
 import com.alibaba.nacos.core.distributed.raft.RaftSysConstants;
-import com.alibaba.nacos.core.executor.ExecutorFactory;
-import com.alibaba.nacos.core.executor.NameThreadFactory;
+import com.alibaba.nacos.common.executor.ExecutorFactory;
+import com.alibaba.nacos.common.executor.NameThreadFactory;
 
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.ScheduledExecutorService;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/RaftOptionsBuilder.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.alibaba.nacos.core.distributed.raft.RaftConfig;
 import com.alibaba.nacos.core.distributed.raft.RaftSysConstants;
-import com.alibaba.nacos.core.utils.ConvertUtils;
+import com.alibaba.nacos.common.utils.ConvertUtils;
 import com.alipay.sofa.jraft.option.RaftOptions;
 import com.alipay.sofa.jraft.option.ReadOnlyOption;
 import org.apache.commons.lang3.StringUtils;

File: core/src/main/java/com/alibaba/nacos/core/utils/ReuseHttpServletRequest.java
Patch:
@@ -18,9 +18,8 @@
 
 import com.alibaba.nacos.common.http.HttpUtils;
 import com.alibaba.nacos.common.http.param.MediaType;
-import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.ByteUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.tomcat.util.http.fileupload.IOUtils;
 
 import javax.servlet.ReadListener;
 import javax.servlet.ServletInputStream;
@@ -32,7 +31,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Map;

File: core/src/test/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListenerTest.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.core.listener;
 
+import com.alibaba.nacos.core.code.StandaloneProfileApplicationListener;
 import org.apache.commons.lang3.ArrayUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;

File: core/src/test/java/com/alibaba/nacos/core/utils/SystemUtilsTest.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.core.util;
+package com.alibaba.nacos.core.utils;
 
 
 import com.alibaba.nacos.core.utils.ApplicationUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DelegateConsistencyServiceImpl.java
Patch:
@@ -29,7 +29,7 @@
  * @author nkorange
  * @since 1.0.0
  */
-@DependsOn("serverMemberManager")
+@DependsOn("core")
 @Service("consistencyDelegate")
 public class DelegateConsistencyServiceImpl implements ConsistencyService {
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DataSyncer.java
Patch:
@@ -42,7 +42,7 @@
  * @since 1.0.0
  */
 @Component
-@DependsOn("serverMemberManager")
+@DependsOn("core")
 public class DataSyncer {
 
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -60,7 +60,7 @@
  * @author nkorange
  * @since 1.0.0
  */
-@DependsOn("serverMemberManager")
+@DependsOn("core")
 @org.springframework.stereotype.Service("distroConsistencyService")
 public class DistroConsistencyServiceImpl implements EphemeralConsistencyService {
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftConsistencyServiceImpl.java
Patch:
@@ -34,7 +34,7 @@
  * @author nkorange
  * @since 1.0.0
  */
-@DependsOn("serverMemberManager")
+@DependsOn("core")
 @Service
 public class RaftConsistencyServiceImpl implements PersistentConsistencyService {
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -57,7 +57,7 @@
 /**
  * @author nacos
  */
-@DependsOn("serverMemberManager")
+@DependsOn("core")
 @Component
 public class RaftCore {
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -49,7 +49,7 @@
  * @author nacos
  */
 @Component
-@DependsOn("serverMemberManager")
+@DependsOn("core")
 public class RaftPeerSet implements MemberChangeListener {
 
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.core.code.ControllerMethodsCache;
-import com.alibaba.nacos.core.utils.ExceptionUtil;
+import com.alibaba.nacos.common.utils.ExceptionUtil;
 import com.alibaba.nacos.core.utils.OverrideParameterRequestWrapper;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.misc.HttpClient;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -38,8 +38,8 @@
  */
 public class HttpClient {
 
-    public static final int TIME_OUT_MILLIS = Integer
-        .getInteger("com.alibaba.nacos.client.naming.ctimeout", 50000);
+    public static final int READ_TIME_OUT_MILLIS = Integer
+        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 50000);
     public static final int CON_TIME_OUT_MILLIS = Integer
         .getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     private static final boolean ENABLE_HTTPS = Boolean
@@ -73,7 +73,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
 
             setHeaders(conn, headers, encoding);
             conn.setConnectTimeout(CON_TIME_OUT_MILLIS);
-            conn.setReadTimeout(TIME_OUT_MILLIS);
+            conn.setReadTimeout(READ_TIME_OUT_MILLIS);
             conn.setRequestMethod(method);
             conn.setDoOutput(true);
             if (StringUtils.isNotBlank(body)) {

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -38,8 +38,8 @@
  */
 public class HttpClient {
 
-    public static final int TIME_OUT_MILLIS = Integer
-        .getInteger("com.alibaba.nacos.client.naming.ctimeout", 50000);
+    public static final int READ_TIME_OUT_MILLIS = Integer
+        .getInteger("com.alibaba.nacos.client.naming.rtimeout", 50000);
     public static final int CON_TIME_OUT_MILLIS = Integer
         .getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
     private static final boolean ENABLE_HTTPS = Boolean
@@ -73,7 +73,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
 
             setHeaders(conn, headers, encoding);
             conn.setConnectTimeout(CON_TIME_OUT_MILLIS);
-            conn.setReadTimeout(TIME_OUT_MILLIS);
+            conn.setReadTimeout(READ_TIME_OUT_MILLIS);
             conn.setRequestMethod(method);
             conn.setDoOutput(true);
             if (StringUtils.isNotBlank(body)) {

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/IdGeneratorManager.java
Patch:
@@ -107,7 +107,7 @@ protected void afterInject(ConsistencyProtocol<? extends Config> protocol) {
                     public void update(Observable o, Object arg) {
                         long term;
                         if (arg == null) {
-                            term = 0l;
+                            term = 0L;
                         } else {
                             term = Long.parseLong(String.valueOf(arg));
                         }

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.client.config.utils.ParamUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
+import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 
@@ -70,6 +71,7 @@ public class NacosConfigService implements ConfigService {
     private ConfigFilterChainManager configFilterChainManager = new ConfigFilterChainManager();
 
     public NacosConfigService(Properties properties) throws NacosException {
+        ValidatorUtils.checkInitParam(properties);
         String encodeTmp = properties.getProperty(PropertyKeyConst.ENCODE);
         if (StringUtils.isBlank(encodeTmp)) {
             encode = Constants.ENCODE;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -306,7 +306,7 @@ private List<String> getApacheServerList(String url, String name) {
                 List<String> lines = IoUtils.readLines(new StringReader(httpResult.content));
                 List<String> result = new ArrayList<String>(lines.size());
                 for (String serverAddr : lines) {
-                    if (org.apache.commons.lang3.StringUtils.isNotBlank(serverAddr)) {
+                    if (StringUtils.isNotBlank(serverAddr)) {
                         String[] ipPort = serverAddr.trim().split(":");
                         String ip = ipPort[0].trim();
                         if (ipPort.length == 1) {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.api.selector.NoneSelector;
 import com.alibaba.nacos.client.naming.net.NamingProxy;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
+import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.Map;
@@ -50,16 +51,15 @@ public class NacosNamingMaintainService implements NamingMaintainService {
     public NacosNamingMaintainService(String serverList) {
         Properties properties = new Properties();
         properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
-
         init(properties);
     }
 
     public NacosNamingMaintainService(Properties properties) {
-
         init(properties);
     }
 
     private void init(Properties properties) {
+        ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
         initServerAddr(properties);
         InitUtils.initWebRootContext();

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -35,6 +35,7 @@
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
 import com.alibaba.nacos.client.security.SecurityProxy;
+import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.math.NumberUtils;
@@ -77,7 +78,6 @@ public class NacosNamingService implements NamingService {
     public NacosNamingService(String serverList) {
         Properties properties = new Properties();
         properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
-
         init(properties);
     }
 
@@ -86,6 +86,7 @@ public NacosNamingService(Properties properties) {
     }
 
     private void init(Properties properties) {
+        ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
         initServerAddr(properties);
         InitUtils.initWebRootContext();

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -492,7 +492,7 @@ public String reqAPI(String api, Map<String, String> params, String body, List<S
         NAMING_LOGGER.error("request: {} failed, servers: {}, code: {}, msg: {}",
             api, servers, exception.getErrCode(), exception.getErrMsg());
 
-        throw new NacosException(exception.getErrCode(), "failed to req API:/api/" + api + " after all servers(" + servers + ") tried: "
+        throw new NacosException(exception.getErrCode(), "failed to req API:" + api + " after all servers(" + servers + ") tried: "
             + exception.getMessage());
 
     }

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -33,6 +33,7 @@
 import com.alibaba.nacos.client.config.utils.ParamUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
+import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 
@@ -70,6 +71,7 @@ public class NacosConfigService implements ConfigService {
     private ConfigFilterChainManager configFilterChainManager = new ConfigFilterChainManager();
 
     public NacosConfigService(Properties properties) throws NacosException {
+        ValidatorUtils.checkInitParam(properties);
         String encodeTmp = properties.getProperty(PropertyKeyConst.ENCODE);
         if (StringUtils.isBlank(encodeTmp)) {
             encode = Constants.ENCODE;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/PropertiesChangeParser.java
Patch:
@@ -38,10 +38,10 @@ public Map<String, ConfigChangeItem> doParse(String oldContent, String newConten
         Properties oldProps = new Properties();
         Properties newProps = new Properties();
 
-        if (StringUtils.isNotBlank(oldContent)) {
+        if (org.apache.commons.lang3.StringUtils.isNotBlank(oldContent)) {
             oldProps.load(new StringReader(oldContent));
         }
-        if (StringUtils.isNotBlank(newContent)) {
+        if (org.apache.commons.lang3.StringUtils.isNotBlank(newContent)) {
             newProps.load(new StringReader(newContent));
         }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/YmlChangeParser.java
Patch:
@@ -35,11 +35,11 @@ public Map<String, ConfigChangeItem> doParse(String oldContent, String newConten
         Map<String, Object> oldMap = Collections.emptyMap();
         Map<String, Object> newMap = Collections.emptyMap();
 
-        if (StringUtils.isNotBlank(oldContent)) {
+        if (org.apache.commons.lang3.StringUtils.isNotBlank(oldContent)) {
             oldMap = (new Yaml()).load(oldContent);
             oldMap = getFlattenedMap(oldMap);
         }
-        if (StringUtils.isNotBlank(newContent)) {
+        if (org.apache.commons.lang3.StringUtils.isNotBlank(newContent)) {
             newMap = (new Yaml()).load(newContent);
             newMap = getFlattenedMap(newMap);
         }
@@ -57,7 +57,7 @@ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> s
         for (Iterator<Map.Entry<String, Object>> itr = source.entrySet().iterator(); itr.hasNext(); ) {
             Map.Entry<String, Object> e = itr.next();
             String key = e.getKey();
-            if (StringUtils.isNotBlank(path)) {
+            if (org.apache.commons.lang3.StringUtils.isNotBlank(path)) {
                 if (e.getKey().startsWith("[")) {
                     key = path + key;
                 } else {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -27,6 +27,7 @@
 import com.alibaba.nacos.api.selector.NoneSelector;
 import com.alibaba.nacos.client.naming.net.NamingProxy;
 import com.alibaba.nacos.client.naming.utils.InitUtils;
+import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.Map;
@@ -50,16 +51,15 @@ public class NacosNamingMaintainService implements NamingMaintainService {
     public NacosNamingMaintainService(String serverList) {
         Properties properties = new Properties();
         properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
-
         init(properties);
     }
 
     public NacosNamingMaintainService(Properties properties) {
-
         init(properties);
     }
 
     private void init(Properties properties) {
+        ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
         initServerAddr(properties);
         InitUtils.initWebRootContext();

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -35,6 +35,7 @@
 import com.alibaba.nacos.client.naming.utils.InitUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
 import com.alibaba.nacos.client.security.SecurityProxy;
+import com.alibaba.nacos.client.utils.ValidatorUtils;
 import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.math.NumberUtils;
@@ -77,7 +78,6 @@ public class NacosNamingService implements NamingService {
     public NacosNamingService(String serverList) {
         Properties properties = new Properties();
         properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
-
         init(properties);
     }
 
@@ -86,6 +86,7 @@ public NacosNamingService(Properties properties) {
     }
 
     private void init(Properties properties) {
+        ValidatorUtils.checkInitParam(properties);
         namespace = InitUtils.initNamespaceForNaming(properties);
         initServerAddr(properties);
         InitUtils.initWebRootContext();

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/InitUtils.java
Patch:
@@ -77,7 +77,7 @@ public String call() {
             }
         });
 
-        if (StringUtils.isEmpty(tmpNamespace) && properties != null) {
+        if (org.apache.commons.lang3.StringUtils.isEmpty(tmpNamespace) && properties != null) {
             tmpNamespace = properties.getProperty(PropertyKeyConst.NAMESPACE);
         }
 
@@ -121,14 +121,14 @@ public static String initEndpoint(final Properties properties) {
         if (isUseEndpointParsingRule) {
             // Get the set domain name information
             endpointUrl = ParamUtil.parsingEndpointRule(properties.getProperty(PropertyKeyConst.ENDPOINT));
-            if (StringUtils.isBlank(endpointUrl)) {
+            if (org.apache.commons.lang3.StringUtils.isBlank(endpointUrl)) {
                 return "";
             }
         } else {
             endpointUrl = properties.getProperty(PropertyKeyConst.ENDPOINT);
         }
 
-        if (StringUtils.isBlank(endpointUrl)) {
+        if (org.apache.commons.lang3.StringUtils.isBlank(endpointUrl)) {
             return "";
         }
 

File: client/src/main/java/com/alibaba/nacos/client/utils/AppNameUtils.java
Patch:
@@ -66,7 +66,7 @@ private static String getAppNameByServerHome() {
         }
 
         if (serverHome != null && serverHome.startsWith(LINUX_ADMIN_HOME)) {
-            return StringUtils.substringBetween(serverHome, LINUX_ADMIN_HOME, File.separator);
+            return org.apache.commons.lang3.StringUtils.substringBetween(serverHome, LINUX_ADMIN_HOME, File.separator);
         }
 
         return null;

File: client/src/main/java/com/alibaba/nacos/client/utils/IPUtil.java
Patch:
@@ -38,7 +38,7 @@ public static boolean isIPV6(String addr) {
     }
 
     private static boolean isMatch(String data, Pattern pattern) {
-        if (StringUtils.isBlank(data)) {
+        if (org.apache.commons.lang3.StringUtils.isBlank(data)) {
             return false;
         }
         Matcher mat = pattern.matcher(data);

File: client/src/main/java/com/alibaba/nacos/client/utils/TemplateUtils.java
Patch:
@@ -25,7 +25,7 @@ public class TemplateUtils {
 
     public static void stringNotEmptyAndThenExecute(String source, Runnable runnable) {
 
-        if (StringUtils.isNotEmpty(source)) {
+        if (org.apache.commons.lang3.StringUtils.isNotEmpty(source)) {
 
             try {
                 runnable.run();
@@ -37,7 +37,7 @@ public static void stringNotEmptyAndThenExecute(String source, Runnable runnable
 
     public static String stringEmptyAndThenExecute(String source, Callable<String> callable) {
 
-        if (StringUtils.isEmpty(source)) {
+        if (org.apache.commons.lang3.StringUtils.isEmpty(source)) {
 
             try {
                 return callable.call();
@@ -51,7 +51,7 @@ public static String stringEmptyAndThenExecute(String source, Callable<String> c
 
     public static String stringBlankAndThenExecute(String source, Callable<String> callable) {
 
-        if (StringUtils.isBlank(source)) {
+        if (org.apache.commons.lang3.StringUtils.isBlank(source)) {
 
             try {
                 return callable.call();

File: client/src/main/java/com/alibaba/nacos/client/utils/TenantUtil.java
Patch:
@@ -40,7 +40,7 @@ public class TenantUtil {
     public static String getUserTenantForAcm() {
         String tmp = userTenant;
 
-        if (StringUtils.isBlank(userTenant)) {
+        if (org.apache.commons.lang3.StringUtils.isBlank(userTenant)) {
             tmp = System.getProperty("acm.namespace", "");
         }
 
@@ -55,7 +55,7 @@ public static String getUserTenantForAcm() {
     public static String getUserTenantForAns() {
         String tmp = userTenant;
 
-        if (StringUtils.isBlank(userTenant)) {
+        if (org.apache.commons.lang3.StringUtils.isBlank(userTenant)) {
             tmp = System.getProperty("ans.namespace");
         }
         return tmp;

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -15,11 +15,12 @@
  */
 package com.alibaba.nacos.config.server.aspect;
 
+import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.ConfigService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.config.server.utils.MD5;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import org.aspectj.lang.ProceedingJoinPoint;
 import org.aspectj.lang.annotation.Around;
@@ -66,7 +67,7 @@ public class RequestLogAspect {
     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,
                                          HttpServletResponse response, String dataId, String group, String tenant,
                                          String content) throws Throwable {
-        final String md5 = content == null ? null : MD5.getInstance().getMD5String(content);
+        final String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);
         MetricsMonitor.getPublishMonitor().incrementAndGet();
         return logClientRequest("publish", pjp, request, response, dataId, group, tenant, md5);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -15,7 +15,8 @@
  */
 package com.alibaba.nacos.config.server.model;
 
-import com.alibaba.nacos.config.server.utils.MD5;
+import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.config.server.constant.Constants;
 
 import java.io.PrintWriter;
 import java.io.Serializable;
@@ -46,7 +47,7 @@ public ConfigInfoBase(String dataId, String group, String content) {
         this.group = group;
         this.content = content;
         if (this.content != null) {
-            this.md5 = MD5.getInstance().getMD5String(this.content);
+            this.md5 = Md5Utils.getMD5(this.content, Constants.ENCODE);
         }
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -16,9 +16,9 @@
 package com.alibaba.nacos.config.server.service;
 
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.Md5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.config.server.utils.MD5;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
@@ -172,7 +172,7 @@ static public String getConfig(String dataId, String group, String tenant)
 
     static public String getLocalConfigMd5(String dataId, String group, String tenant)
         throws IOException {
-        return MD5.getInstance().getMD5String(getConfig(dataId, group, tenant));
+        return Md5Utils.getMD5(getConfig(dataId, group, tenant), Constants.ENCODE);
     }
 
     static public File heartBeatFile() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.config.server.service.dump;
 
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.Md5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -387,7 +388,8 @@ public void run() {
                         ConfigInfo cf = MergeTaskProcessor.merge(dataId, group, tenant, datumList);
                         String aggrContent = cf.getContent();
                         String localContentMD5 = ConfigService.getContentMd5(GroupKey.getKey(dataId, group));
-                        String aggrConetentMD5 = MD5.getInstance().getMD5String(aggrContent);
+                        String aggrConetentMD5 = Md5Utils.getMD5(aggrContent, Constants.ENCODE);
+
                         if (!StringUtils.equals(localContentMD5, aggrConetentMD5)) {
                             persistService.insertOrUpdate(null, null, cf, time, null, false);
                             log.info("[merge-ok] {}, {}, size={}, length={}, md5={}, content={}", dataId, group,

File: config/src/main/java/com/alibaba/nacos/config/server/service/transaction/DistributedDatabaseOperateImpl.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.config.server.service.transaction;
 
 import com.alibaba.fastjson.TypeReference;
+import com.alibaba.nacos.common.utils.Md5Utils;
 import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;
 import com.alibaba.nacos.config.server.service.LocalDataSourceServiceImpl;
 import com.alibaba.nacos.config.server.utils.LogUtil;
@@ -28,7 +29,6 @@
 import com.alibaba.nacos.config.server.exception.NJdbcException;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.RowMapperManager;
-import com.alibaba.nacos.config.server.utils.MD5;
 import com.alibaba.nacos.consistency.cp.LogProcessor4CP;
 import com.alibaba.nacos.consistency.entity.Log;
 import com.alibaba.nacos.consistency.exception.ConsistencyException;
@@ -245,7 +245,7 @@ public List<Map<String, Object>> queryMany(String sql, Object[] args) {
     @Override
     public Boolean update(List<ModifyRequest> sqlContext) {
         try {
-            final String key = group() + "-" + selfIp + "-" + MD5.getInstance().getMD5String(sqlContext.toString());
+            final String key = group() + "-" + selfIp + "-" + Md5Utils.getMD5(sqlContext.toString(), Constants.ENCODE);
             Log log = Log.newBuilder()
                     .setKey(key)
                     .setData(ByteString.copyFrom(serializer.serialize(sqlContext)))

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -15,11 +15,12 @@
  */
 package com.alibaba.nacos.config.server.aspect;
 
+import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.ConfigService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.config.server.utils.MD5;
 import com.alibaba.nacos.config.server.utils.RequestUtil;
 import org.aspectj.lang.ProceedingJoinPoint;
 import org.aspectj.lang.annotation.Around;
@@ -66,7 +67,7 @@ public class RequestLogAspect {
     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,
                                          HttpServletResponse response, String dataId, String group, String tenant,
                                          String content) throws Throwable {
-        final String md5 = content == null ? null : MD5.getInstance().getMD5String(content);
+        final String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);
         MetricsMonitor.getPublishMonitor().incrementAndGet();
         return logClientRequest("publish", pjp, request, response, dataId, group, tenant, md5);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -15,7 +15,8 @@
  */
 package com.alibaba.nacos.config.server.model;
 
-import com.alibaba.nacos.config.server.utils.MD5;
+import com.alibaba.nacos.common.utils.Md5Utils;
+import com.alibaba.nacos.config.server.constant.Constants;
 
 import java.io.PrintWriter;
 import java.io.Serializable;
@@ -46,7 +47,7 @@ public ConfigInfoBase(String dataId, String group, String content) {
         this.group = group;
         this.content = content;
         if (this.content != null) {
-            this.md5 = MD5.getInstance().getMD5String(this.content);
+            this.md5 = Md5Utils.getMD5(this.content, Constants.ENCODE);
         }
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -16,9 +16,9 @@
 package com.alibaba.nacos.config.server.service;
 
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.Md5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import com.alibaba.nacos.config.server.utils.MD5;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
@@ -172,7 +172,7 @@ static public String getConfig(String dataId, String group, String tenant)
 
     static public String getLocalConfigMd5(String dataId, String group, String tenant)
         throws IOException {
-        return MD5.getInstance().getMD5String(getConfig(dataId, group, tenant));
+        return Md5Utils.getMD5(getConfig(dataId, group, tenant), Constants.ENCODE);
     }
 
     static public File heartBeatFile() {

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.config.server.service.dump;
 
 import com.alibaba.nacos.common.utils.IoUtils;
+import com.alibaba.nacos.common.utils.Md5Utils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -346,7 +347,8 @@ public void run() {
                         ConfigInfo cf = MergeTaskProcessor.merge(dataId, group, tenant, datumList);
                         String aggrContent = cf.getContent();
                         String localContentMD5 = ConfigService.getContentMd5(GroupKey.getKey(dataId, group));
-                        String aggrConetentMD5 = MD5.getInstance().getMD5String(aggrContent);
+                        String aggrConetentMD5 = Md5Utils.getMD5(aggrContent, Constants.ENCODE);
+
                         if (!StringUtils.equals(localContentMD5, aggrConetentMD5)) {
                             persistService.insertOrUpdate(null, null, cf, time, null, false);
                             log.info("[merge-ok] {}, {}, size={}, length={}, md5={}, content={}", dataId, group,

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -304,7 +304,6 @@ public void refreshOnly(String serviceName, String clusters) {
 
     public class UpdateTask implements Runnable {
         long lastRefTime = Long.MAX_VALUE;
-        long delayTime = -1;
         private String clusters;
         private String serviceName;
 
@@ -315,6 +314,8 @@ public UpdateTask(String serviceName, String clusters) {
 
         @Override
         public void run() {
+            long delayTime = -1;
+
             try {
                 ServiceInfo serviceObj = serviceInfoMap.get(ServiceInfo.getKey(serviceName, clusters));
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -123,7 +123,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
                 String body = IoUtils.toString(req.getInputStream(), Charsets.UTF_8.name());
 
                 HttpClient.HttpResult result =
-                    HttpClient.request("http://" + distroMapper.mapSrv(groupedServiceName), headerList,
+                    HttpClient.request("http://" + distroMapper.mapSrv(groupedServiceName) + req.getRequestURI(), headerList,
                         HttpClient.translateParameterMap(req.getParameterMap()),
                         body, PROXY_CONNECT_TIMEOUT, PROXY_READ_TIMEOUT, Charsets.UTF_8.name(), req.getMethod());
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -280,6 +280,9 @@ public JSONObject beat(HttpServletRequest request) throws Exception {
         if (clientBeat != null) {
             if (StringUtils.isNotBlank(clientBeat.getCluster())) {
                 clusterName = clientBeat.getCluster();
+            } else {
+                // fix #2533
+                clientBeat.setCluster(clusterName);
             }
             ip = clientBeat.getIp();
             port = clientBeat.getPort();

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -280,6 +280,9 @@ public JSONObject beat(HttpServletRequest request) throws Exception {
         if (clientBeat != null) {
             if (StringUtils.isNotBlank(clientBeat.getCluster())) {
                 clusterName = clientBeat.getCluster();
+            } else {
+                // fix #2533
+                clientBeat.setCluster(clusterName);
             }
             ip = clientBeat.getIp();
             port = clientBeat.getPort();

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigOpsController.java
Patch:
@@ -81,10 +81,11 @@ public String setLogLevel(@RequestParam String logName, @RequestParam String log
 
     @GetMapping(value = "/derby")
     public RestResult<Object> derbyOps(@RequestParam(value = "sql") String sql) {
+        String selectSign = "select";
         if (!PropertyUtil.isUseMysql()) {
             LocalDataSourceServiceImpl dataSourceService = (LocalDataSourceServiceImpl) DynamicDataSource
                     .getInstance().getDataSource();
-            if (StringUtils.startsWithIgnoreCase(sql, "select")) {
+            if (StringUtils.startsWithIgnoreCase(sql, selectSign)) {
                 JdbcTemplate template = dataSourceService.getJdbcTemplate();
                 List<Map<String, Object>> result = template.queryForList(sql);
                 return RestResultUtils.success(result);

File: config/src/main/java/com/alibaba/nacos/config/server/service/transaction/BaseDatabaseOperate.java
Patch:
@@ -33,6 +33,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("PMD.AbstractMethodOrInterfaceMethodMustUseJavadocRule")
 public interface BaseDatabaseOperate {
 
     default  <R> R queryOne(JdbcTemplate jdbcTemplate, String sql, Class<R> cls) {
@@ -132,12 +133,12 @@ default List<Map<String, Object>> queryMany(JdbcTemplate jdbcTemplate, String sq
         }
     }
 
-    default Boolean update(TransactionTemplate transactionTemplate, JdbcTemplate jdbcTemplate, List<ModifyRequest> ModifyRequestContext) {
+    default Boolean update(TransactionTemplate transactionTemplate, JdbcTemplate jdbcTemplate, List<ModifyRequest> contexts) {
         return transactionTemplate.execute(status -> {
             String[] errSql = new String[]{null};
             Object[][] args = new Object[][]{null};
             try {
-                ModifyRequestContext.forEach(pair -> {
+                contexts.forEach(pair -> {
                     errSql[0] = pair.getSql();
                     args[0] = pair.getArgs();
                     LogUtil.defaultLog.debug("current sql : {}", errSql[0]);

File: config/src/main/java/com/alibaba/nacos/config/server/service/transaction/DatabaseOperate.java
Patch:
@@ -91,10 +91,10 @@ public interface DatabaseOperate {
     /**
      * data modify transaction
      *
-     * @param ModifyRequestContext {@link List< ModifyRequest >}
+     * @param modifyRequests {@link List< ModifyRequest >}
      * @return is success
      */
-    Boolean update(List<ModifyRequest> ModifyRequestContext);
+    Boolean update(List<ModifyRequest> modifyRequests);
 
     /**
      * data modify transaction

File: config/src/main/java/com/alibaba/nacos/config/server/service/transaction/LocalDatabaseOperateImpl.java
Patch:
@@ -83,7 +83,7 @@ public List<Map<String, Object>> queryMany(String sql, Object[] args) {
     }
 
     @Override
-    public Boolean update(List<ModifyRequest> ModifyRequestContext) {
-        return update(transactionTemplate, jdbcTemplate, ModifyRequestContext);
+    public Boolean update(List<ModifyRequest> requestList) {
+        return update(transactionTemplate, jdbcTemplate, requestList);
     }
 }

File: consistency/src/main/java/com/alibaba/nacos/consistency/LogFuture.java
Patch:
@@ -24,8 +24,11 @@
 public class LogFuture {
 
 	// If an exception occurs during apply, response==null
+
 	private final Object response;
+
 	// If apply succeeds, error==null
+
 	private final Throwable error;
 
 	public LogFuture(Object response, Throwable error) {

File: consistency/src/main/java/com/alibaba/nacos/consistency/LogProcessor.java
Patch:
@@ -29,6 +29,7 @@
  *
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class LogProcessor {
 
     protected ConsistencyProtocol<? extends Config> protocol;

File: core/src/main/java/com/alibaba/nacos/core/cluster/Task.java
Patch:
@@ -58,6 +58,7 @@ public void run() {
     }
 
     // init some resource
+
     public void init() {
 
     }

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftOps.java
Patch:
@@ -31,6 +31,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public class JRaftOps {
 
 	private final JRaftServer raftServer;

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftConstants.java
Patch:
@@ -19,6 +19,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public class JRaftConstants {
 
 	public static final String JRAFT_EXTEND_INFO_KEY = JRaftLogOperation.class.getCanonicalName();

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/utils/JRaftLogOperation.java
Patch:
@@ -19,6 +19,7 @@
 /**
  * @author <a href="mailto:liaochuntao@live.com">liaochuntao</a>
  */
+@SuppressWarnings("PMD.ClassNamingShouldBeCamelRule")
 public class JRaftLogOperation {
 
 	public static final String MODIFY_OPERATION = "modify";

File: core/src/main/java/com/alibaba/nacos/core/utils/ReuseHttpServletRequest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.nacos.core.utils;
 
 import com.alibaba.nacos.common.http.HttpUtils;
+import com.alibaba.nacos.common.http.param.MediaType;
 import com.alibaba.nacos.common.utils.IoUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.tomcat.util.http.fileupload.IOUtils;
@@ -60,7 +61,7 @@ public ReuseHttpServletRequest(HttpServletRequest request) throws IOException {
 
 	@Override
 	public Object getBody() throws Exception {
-		if (StringUtils.containsIgnoreCase(target.getContentType(), "multipart/form-data")) {
+		if (StringUtils.containsIgnoreCase(target.getContentType(), MediaType.MULTIPART_FORM_DATA)) {
 			return target.getParts();
 		} else {
 			String s = ByteUtils.toString(body);

File: client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.alibaba.nacos.client;
 
+import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.beat.BeatReactor;
@@ -38,7 +39,7 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup
         beatInfo.setScheduled(false);
         beatInfo.setPeriod(1000L);
 
-        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo, true);
+        Mockito.doReturn(new JSONObject()).when(namingProxy).sendBeat(beatInfo, true);
         beatReactor.addBeatInfo("testService", beatInfo);
 
         Assert.assertEquals(1, getActiveThread(beatReactor));

File: common/src/main/java/com/alibaba/nacos/common/http/BaseHttpClient.java
Patch:
@@ -50,6 +50,7 @@ protected <T> HttpRestResult<T> execute(CloseableHttpClient httpClient,
         try {
             final String body = EntityUtils.toString(response.getEntity());
             HttpRestResult<T> resResult = new HttpRestResult<T>();
+            resResult.setCode(response.getStatusLine().getStatusCode());
             resResult.setHttpCode(response.getStatusLine().getStatusCode());
             if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
                 RestResult<T> data = ResponseHandler.convert(body, reference);
@@ -82,6 +83,7 @@ public void completed(HttpResponse response) {
                 try {
                     final String body = EntityUtils.toString(response.getEntity());
                     HttpRestResult<T> resResult = new HttpRestResult<T>();
+                    resResult.setCode(response.getStatusLine().getStatusCode());
                     resResult.setHttpCode(response.getStatusLine().getStatusCode());
                     if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
                         RestResult<T> data = ResponseHandler.convert(body, reference);

File: config/src/main/java/com/alibaba/nacos/config/server/service/transaction/DistributedDatabaseOperateImpl.java
Patch:
@@ -48,7 +48,6 @@
 import com.google.protobuf.ByteString;
 import org.apache.commons.lang3.StringUtils;
 import org.javatuples.Pair;
-import org.slf4j.Logger;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Conditional;
 import org.springframework.dao.DataIntegrityViolationException;
@@ -90,7 +89,7 @@ protected void init() throws Exception {
         dataSourceService.cleanAndReopenDerby();
         jdbcTemplate = dataSourceService.getJdbcTemplate();
         transactionTemplate = dataSourceService.getTransactionTemplate();
-        selfIp = memberManager.self().getAddress();
+        selfIp = memberManager.getSelf().getAddress();
         NotifyCenter.registerPublisher(RaftDBErrorEvent::new, RaftDBErrorEvent.class);
         defaultLog.info("use DistributedTransactionServicesImpl");
     }

File: core/src/main/java/com/alibaba/nacos/core/cluster/MemberManager.java
Patch:
@@ -59,7 +59,7 @@ public interface MemberManager {
      *
      * @return {@link Member}
      */
-    Member self();
+    Member getSelf();
 
     /**
      * this node ip is the first in node collection

File: core/src/main/java/com/alibaba/nacos/core/cluster/task/MemberPingTask.java
Patch:
@@ -66,7 +66,7 @@ public void executeBody() {
 
         TimerContext.start("MemberPingTask");
         try {
-            final Member self = memberManager.self();
+            final Member self = memberManager.getSelf();
             // self node information is not ready
             if (!self.check()) {
                 return;

File: core/src/main/java/com/alibaba/nacos/core/cluster/task/MemberShutdownTask.java
Patch:
@@ -56,7 +56,7 @@ public void run() {
 
     @Override
     public void executeBody() {
-        Collection<Member> body = Collections.singletonList(memberManager.self());
+        Collection<Member> body = Collections.singletonList(memberManager.getSelf());
 
         Loggers.CLUSTER.info("Start broadcasting this node logout");
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/id/DefaultIdGenerator.java
Patch:
@@ -50,9 +50,7 @@ public DefaultIdGenerator(String resource) {
     @Override
     public void init() {
         idStore = ApplicationUtils.getBean(DefaultIdStore.class);
-
         // The first request requires an asynchronous request
-
         idStore.firstAcquire(resource, Integer.MAX_VALUE, this, bufferIndex);
     }
 

File: core/src/main/java/com/alibaba/nacos/core/distributed/raft/JRaftProtocol.java
Patch:
@@ -83,7 +83,7 @@ public void init(RaftConfig config) {
 
             loadLogProcessor(config.listLogProcessor());
 
-            this.selfAddress = memberManager.self().getAddress();
+            this.selfAddress = memberManager.getSelf().getAddress();
 
             NotifyCenter.registerPublisher(RaftEvent::new, RaftEvent.class);
             NotifyCenter.registerPublisher(RaftErrorEvent::new, RaftErrorEvent.class);
@@ -194,7 +194,7 @@ public RestResult<String> execute(Map<String, String> args) {
     }
 
     private void injectProtocolMetaData(ProtocolMetaData metaData) {
-        Member member = memberManager.self();
+        Member member = memberManager.getSelf();
         member.setExtendVal("raft_meta_data", metaData);
     }
 

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingSpringApplicationRunListener.java
Patch:
@@ -124,6 +124,7 @@ public void failed(ConfigurableApplicationContext context, Throwable exception)
 
         LOGGER.error("Nacos failed to start, please see {}logs/nacos.log for more details.",
                 ApplicationUtils.getNacosHome());
+        context.close();
     }
 
     /**

File: core/src/main/java/com/alibaba/nacos/core/utils/ApplicationUtils.java
Patch:
@@ -312,7 +312,7 @@ public static String resolveRequiredPlaceholders(String text) throws IllegalArgu
      */
     public static final String LOCAL_IP = InetUtils.getSelfIp();
 
-    private static Boolean isStandalone = false;
+    private static Boolean isStandalone = null;
 
     private static String functionModeType = null;
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftListener.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.core.cluster.ServerMemberManager;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.ApplicationEvent;
-import org.springframework.context.ApplicationListener;
 import org.springframework.context.event.SmartApplicationListener;
 import org.springframework.stereotype.Component;
 
@@ -55,7 +54,7 @@ public void onApplicationEvent(ApplicationEvent event) {
 			RaftPeer peers = raftEvent.getRaftPeer();
 			String json = JSON.toJSONString(peers);
 			Map map = JSON.parseObject(json, HashMap.class);
-			Member self = memberManager.self();
+			Member self = memberManager.getSelf();
 			self.setExtendVal(GROUP, map);
 			memberManager.update(self);
 		}

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -332,7 +332,7 @@ public JSONObject sendBeat(BeatInfo beatInfo, boolean lightBeatEnabled) throws N
             try {
                 body = "beat=" + URLEncoder.encode(JSON.toJSONString(beatInfo), "UTF-8");
             } catch (UnsupportedEncodingException e) {
-                throw new NacosException(NacosException.SERVER_ERROR, "encod beatInfo error", e);
+                throw new NacosException(NacosException.SERVER_ERROR, "encode beatInfo error", e);
             }
         }
         params.put(CommonParams.NAMESPACE_ID, namespaceId);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.boot.SpringContext;
+import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
@@ -65,7 +66,7 @@ public SwitchDomain getSwitchDomain() {
     }
 
     public String taskKey() {
-        return service.getName();
+        return KeyBuilder.buildServiceMetaKey(service.getNamespaceId(), service.getName());
     }
 
     @Override

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -142,7 +142,6 @@ public Boolean createNamespace(HttpServletRequest request, HttpServletResponse r
      * @return java.lang.Boolean
      */
     @GetMapping(params = "checkNamespaceIdExist=true")
-    @Secured(resource = NacosAuthConfig.CONSOLE_RESOURCE_NAME_PREFIX + "namespaces", action = ActionTypes.READ)
     public Boolean checkNamespaceIdExist(@RequestParam("customNamespaceId") String namespaceId){
         if(StringUtils.isBlank(namespaceId)){
             return false;

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -58,7 +58,6 @@ public class NamespaceController {
      * @return namespace list
      */
     @GetMapping
-    @Secured(resource = NacosAuthConfig.CONSOLE_RESOURCE_NAME_PREFIX + "namespaces", action = ActionTypes.READ)
     public RestResult<List<Namespace>> getNamespaces(HttpServletRequest request, HttpServletResponse response) {
         RestResult<List<Namespace>> rr = new RestResult<List<Namespace>>();
         rr.setCode(200);
@@ -86,7 +85,6 @@ public RestResult<List<Namespace>> getNamespaces(HttpServletRequest request, Htt
      * @return namespace all info
      */
     @GetMapping(params = "show=all")
-    @Secured(resource = NacosAuthConfig.CONSOLE_RESOURCE_NAME_PREFIX + "namespaces", action = ActionTypes.READ)
     public NamespaceAllInfo getNamespace(HttpServletRequest request, HttpServletResponse response,
                                          @RequestParam("namespaceId") String namespaceId) {
         // TODO 获取用kp

File: test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -119,7 +119,7 @@ public void registerInstance_ephemeral_true() throws Exception {
      * @TestStep :
      * @ExpectResult :
      */
-    @Test(expected = AssertionError.class)
+    @Test
     public void registerInstance_ephemeral_false() throws Exception {
         String serviceName = NamingBase.randomDomainName();
         namingServiceCreate(serviceName, TEST_NAMESPACE_1, TEST_GROUP_1);
@@ -174,7 +174,7 @@ public void createService() throws Exception {
      * @TestStep :
      * @ExpectResult :
      */
-    @Test(expected = AssertionError.class)
+    @Test
     public void deleteService_hasInstace() throws Exception {
         String serviceName = NamingBase.randomDomainName();
         namingServiceCreate(serviceName, TEST_NAMESPACE_1);

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -647,7 +647,7 @@ public void run() {
                 try {
                     udpSocket.receive(packet);
 
-                    String json = new String(packet.getData(), 0, packet.getLength(), Charset.forName("UTF-8")).trim();
+                    String json = new String(packet.getData(), 0, packet.getLength(), StandardCharsets.UTF_8).trim();
                     AckPacket ackPacket = JSON.parseObject(json, AckPacket.class);
 
                     InetSocketAddress socketAddress = (InetSocketAddress) packet.getSocketAddress();
@@ -667,7 +667,7 @@ public void run() {
 
                     long pushCost = System.currentTimeMillis() - udpSendTimeMap.get(ackKey);
 
-                    Loggers.PUSH.info("received ack: {} from: {}:, cost: {} ms, unacked: {}, total push: {}",
+                    Loggers.PUSH.info("received ack: {} from: {}:{}, cost: {} ms, unacked: {}, total push: {}",
                         json, ip, port, pushCost, ackMap.size(), totalPush);
 
                     pushCostMap.put(ackKey, pushCost);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/GlobalConfig.java
Patch:
@@ -28,7 +28,7 @@
 public class GlobalConfig {
 
     @Value("${nacos.naming.distro.taskDispatchPeriod:200}")
-    private int taskDispatchPeriod = 2000;
+    private int taskDispatchPeriod = 200;
 
     @Value("${nacos.naming.distro.batchSyncKeyCount:1000}")
     private int batchSyncKeyCount = 1000;

File: console/src/main/java/com/alibaba/nacos/console/security/nacos/roles/NacosRoleServiceImpl.java
Patch:
@@ -46,7 +46,7 @@
 @Service
 public class NacosRoleServiceImpl {
 
-    public static final String GLOBAL_ADMIN_ROLE = "GLOBAL_ADMIN";
+    public static final String GLOBAL_ADMIN_ROLE = "ROLE_ADMIN";
 
     @Autowired
     private AuthConfigs authConfigs;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -138,7 +138,7 @@ public JSONObject instanceList(@RequestParam(defaultValue = Constants.DEFAULT_NA
         return result;
     }
 
-    @Secured(action = ActionTypes.READ)
+    @Secured(resource = "naming/services", action = ActionTypes.READ)
     @GetMapping("/services")
     public Object listDetail(@RequestParam(required = false) boolean withInstances,
                              @RequestParam(defaultValue = Constants.DEFAULT_NAMESPACE_ID) String namespaceId,

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -423,7 +423,6 @@ public void easyRemoveService(String namespaceId, String serviceName) throws Exc
 
     public void addOrReplaceService(Service service) throws NacosException {
         consistencyService.put(KeyBuilder.buildServiceMetaKey(service.getNamespaceId(), service.getName()), service);
-
     }
 
     public void createEmptyService(String namespaceId, String serviceName, boolean local) throws NacosException {

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -278,8 +278,8 @@ private void injectSecurityInfo(List<String> params) {
             params.add(Constants.ACCESS_TOKEN);
             params.add(securityProxy.getAccessToken());
         }
-        if (StringUtils.isNotBlank(namespaceId)) {
-            params.add("tenant");
+        if (StringUtils.isNotBlank(namespaceId) && !params.contains(SpasAdapter.TENANT_KEY)) {
+            params.add(SpasAdapter.TENANT_KEY);
             params.add(namespaceId);
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/SpasAdapter.java
Patch:
@@ -101,5 +101,5 @@ public static String signWithhmacSHA1Encrypt(String encryptText, String encryptK
     }
 
     private static final String GROUP_KEY = "group";
-    private static final String TENANT_KEY = "tenant";
+    public static final String TENANT_KEY = "tenant";
 }

File: core/src/main/java/com/alibaba/nacos/core/listener/StartingSpringApplicationRunListener.java
Patch:
@@ -150,7 +150,7 @@ private void logClusterConf() {
     private void logFilePath() {
         String[] dirNames = new String[]{"logs", "conf", "data"};
         for (String dirName: dirNames) {
-            LOGGER.info("Nacos Log files: {}{}{}{}",  NACOS_HOME, File.separatorChar, dirName, File.separatorChar);
+            LOGGER.info("Nacos {} files: {}{}{}{}", dirName,  NACOS_HOME, File.separatorChar, dirName, File.separatorChar);
         }
     }
 

File: test/src/test/java/com/alibaba/nacos/test/core/auth/Permission_ITCase.java
Patch:
@@ -92,7 +92,7 @@ public void destroy() {
         response = request("/nacos/v1/auth/roles",
             Params.newParams()
                 .appendParam("role", "role1")
-                .appendParam("username", "username2")
+                .appendParam("username", "username3")
                 .appendParam("accessToken", accessToken)
                 .done(),
             String.class,

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.boot.SpringContext;
+import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
@@ -61,7 +62,7 @@ public GlobalConfig getGlobalConfig() {
     }
 
     public String taskKey() {
-        return service.getName();
+        return KeyBuilder.buildServiceMetaKey(service.getNamespaceId(), service.getName());
     }
 
     @Override

File: core/src/main/java/com/alibaba/nacos/core/env/ReloadableConfigs.java
Patch:
@@ -17,9 +17,7 @@
 
 
 import org.apache.commons.lang3.StringUtils;
-import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;
 import org.springframework.beans.factory.annotation.Value;
-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.scheduling.annotation.Scheduled;
 import org.springframework.stereotype.Component;
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -83,7 +83,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isNotBlank(serviceName)) {
                 serviceName = serviceName.trim();
             }
-            Method method = filterBase.getMethod(req.getMethod(), path);
+            Method method = controllerMethodsCache.getMethod(req.getMethod(), path);
 
             if (method == null) {
                 throw new NoSuchMethodException(req.getMethod() + " " + path);

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -80,6 +80,9 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isBlank(serviceName)) {
                 serviceName = req.getParameter("dom");
             }
+            if (StringUtils.isNotBlank(serviceName)) {
+                serviceName = serviceName.trim();
+            }
             Method method = filterBase.getMethod(req.getMethod(), path);
 
             if (method == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -78,7 +78,9 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isBlank(serviceName)) {
                 serviceName = req.getParameter("dom");
             }
-            serviceName = serviceName.trim();
+            if (StringUtils.isNotBlank(serviceName)) {
+                serviceName = serviceName.trim();
+            }
             Method method = filterBase.getMethod(req.getMethod(), path);
 
             if (method == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -78,6 +78,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isBlank(serviceName)) {
                 serviceName = req.getParameter("dom");
             }
+            serviceName = serviceName.trim();
             Method method = filterBase.getMethod(req.getMethod(), path);
 
             if (method == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -78,7 +78,6 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isBlank(serviceName)) {
                 serviceName = req.getParameter("dom");
             }
-            serviceName = serviceName.trim();
             Method method = filterBase.getMethod(req.getMethod(), path);
 
             if (method == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -78,6 +78,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             if (StringUtils.isBlank(serviceName)) {
                 serviceName = req.getParameter("dom");
             }
+            serviceName = serviceName.trim();
             Method method = filterBase.getMethod(req.getMethod(), path);
 
             if (method == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.boot.SpringContext;
+import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
@@ -61,7 +62,7 @@ public GlobalConfig getGlobalConfig() {
     }
 
     public String taskKey() {
-        return service.getName();
+        return KeyBuilder.buildServiceMetaKey(service.getNamespaceId(), service.getName());
     }
 
     @Override

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -176,7 +176,7 @@ static public String getLocalConfigMd5(String dataId, String group, String tenan
     }
 
     static public File heartBeatFile() {
-        return new File(NACOS_HOME, "status/heartBeat.txt");
+        return new File(NACOS_HOME, "status" + File.separator + "heartBeat.txt");
     }
 
     static public String relativePath(String dataId, String group) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -176,7 +176,7 @@ static public String getLocalConfigMd5(String dataId, String group, String tenan
     }
 
     static public File heartBeatFile() {
-        return new File(NACOS_HOME, "status/heartBeat.txt");
+        return new File(NACOS_HOME, "status" + File.separator + "heartBeat.txt");
     }
 
     static public String relativePath(String dataId, String group) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.boot.SpringContext;
+import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
@@ -61,7 +62,7 @@ public GlobalConfig getGlobalConfig() {
     }
 
     public String taskKey() {
-        return service.getName();
+        return KeyBuilder.buildServiceMetaKey(service.getNamespaceId(), service.getName());
     }
 
     @Override

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -144,4 +144,6 @@ public String toString() {
      */
     public static final int OVER_THRESHOLD = 503;
 
+    public static final int RESOURCE_NOT_FOUND = -404;
+
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/CommonParams.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class CommonParams {
 
+    public static final String CODE = "code";
+
     public static final String SERVICE_NAME = "serviceName";
 
     public static final String CLUSTER_NAME = "clusterName";
@@ -31,4 +33,5 @@ public class CommonParams {
 
     public static final String GROUP_NAME = "groupName";
 
+    public static final String LIGHT_BEAT_ENABLED = "lightBeatEnabled";
 }

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigContext.java
Patch:
@@ -15,11 +15,11 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
+import com.alibaba.nacos.api.config.filter.IConfigContext;
+
 import java.util.HashMap;
 import java.util.Map;
 
-import com.alibaba.nacos.api.config.filter.IConfigContext;
-
 /**
  * Config Context
  *

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainManager.java
Patch:
@@ -15,16 +15,15 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
-import java.util.List;
-
 import com.alibaba.nacos.api.config.filter.IConfigFilter;
 import com.alibaba.nacos.api.config.filter.IConfigFilterChain;
 import com.alibaba.nacos.api.config.filter.IConfigRequest;
 import com.alibaba.nacos.api.config.filter.IConfigResponse;
 import com.alibaba.nacos.api.exception.NacosException;
-
 import com.google.common.collect.Lists;
 
+import java.util.List;
+
 /**
  * Config Filter Chain Management
  *

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigRequest.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
-import java.util.HashMap;
-import java.util.Map;
-
 import com.alibaba.nacos.api.config.filter.IConfigContext;
 import com.alibaba.nacos.api.config.filter.IConfigRequest;
 
+import java.util.HashMap;
+import java.util.Map;
+
 /**
  * Config Request
  *

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigResponse.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
-import java.util.HashMap;
-import java.util.Map;
-
 import com.alibaba.nacos.api.config.filter.IConfigContext;
 import com.alibaba.nacos.api.config.filter.IConfigResponse;
 
+import java.util.HashMap;
+import java.util.Map;
+
 /**
  * Config Response
  *

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -22,12 +22,12 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.impl.ServerListManager;
 import com.alibaba.nacos.client.config.impl.SpasAdapter;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.identify.STSConfig;
-import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.client.utils.JSONUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
+import com.alibaba.nacos.client.utils.TemplateUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
 import org.apache.commons.lang3.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -17,10 +17,10 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.config.utils.MD5;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.UuidUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -17,10 +17,10 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.client.config.utils.ConcurrentDiskUtil;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.config.utils.JVMUtil;
 import com.alibaba.nacos.client.config.utils.SnapShotSwitch;
 import com.alibaba.nacos.client.utils.LogUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 

File: client/src/main/java/com/alibaba/nacos/client/config/utils/MD5.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.client.config.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-
 import com.google.common.collect.Maps;
+
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.util.Map;

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.client.config.utils;
 
-import java.util.List;
-
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.utils.IPUtil;
 import org.apache.commons.lang3.StringUtils;
 
+import java.util.List;
+
 /**
  * Param check util
  *

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -95,7 +95,8 @@ private void init(Properties properties) {
         serverProxy = new NamingProxy(namespace, endpoint, serverList);
         serverProxy.setProperties(properties);
         beatReactor = new BeatReactor(serverProxy, initClientBeatThreadCount(properties));
-        hostReactor = new HostReactor(eventDispatcher, serverProxy, cacheDir, isLoadCacheAtStart(properties), initPollingThreadCount(properties));
+        hostReactor = new HostReactor(eventDispatcher, serverProxy, cacheDir, isLoadCacheAtStart(properties),
+            initPollingThreadCount(properties));
     }
 
     private int initClientBeatThreadCount(Properties properties) {
@@ -198,8 +199,7 @@ public void registerInstance(String serviceName, String groupName, Instance inst
             beatInfo.setWeight(instance.getWeight());
             beatInfo.setMetadata(instance.getMetadata());
             beatInfo.setScheduled(false);
-            long instanceInterval = instance.getInstanceHeartBeatInterval();
-            beatInfo.setPeriod(instanceInterval == 0 ? DEFAULT_HEART_BEAT_INTERVAL : instanceInterval);
+            beatInfo.setPeriod(instance.getInstanceHeartBeatInterval());
 
             beatReactor.addBeatInfo(NamingUtils.getGroupedName(serviceName, groupName), beatInfo);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.client.naming.core;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 
 import java.net.DatagramPacket;
 import java.net.DatagramSocket;

File: client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.alibaba.nacos.client;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.beat.BeatReactor;
 import com.alibaba.nacos.client.naming.net.NamingProxy;
@@ -24,7 +25,7 @@ public class BeatReactorTest {
     private NamingProxy namingProxy;
 
     @Test
-    public void test() throws NoSuchFieldException, IllegalAccessException, InterruptedException {
+    public void test() throws NoSuchFieldException, IllegalAccessException, InterruptedException, NacosException {
         BeatReactor beatReactor = new BeatReactor(namingProxy);
 
         BeatInfo beatInfo = new BeatInfo();
@@ -37,7 +38,7 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup
         beatInfo.setScheduled(false);
         beatInfo.setPeriod(1000L);
 
-        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo);
+        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo, true);
         beatReactor.addBeatInfo("testService", beatInfo);
 
         Assert.assertEquals(1, getActiveThread(beatReactor));

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-
 import org.junit.Ignore;
 import org.junit.Test;
 

File: client/src/test/java/com/alibaba/nacos/client/StringUtilsTest.java
Patch:
@@ -6,8 +6,8 @@
 import java.util.ArrayList;
 import java.util.Collection;
 
-import static org.junit.Assert.*;
 import static com.alibaba.nacos.client.utils.StringUtils.*;
+import static org.junit.Assert.*;
 
 @Deprecated
 public class StringUtilsTest {

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -91,6 +91,9 @@ static public List<String> readLines(Reader input) throws IOException {
     }
 
     static public String toString(InputStream input, String encoding) throws IOException {
+        if (input == null) {
+            return StringUtils.EMPTY;
+        }
         return (null == encoding) ? toString(new InputStreamReader(input, Constants.ENCODE))
             : toString(new InputStreamReader(input, encoding));
     }

File: naming/src/main/java/com/alibaba/nacos/naming/boot/RunningConfig.java
Patch:
@@ -25,6 +25,7 @@
 import org.springframework.stereotype.Component;
 
 import javax.servlet.ServletContext;
+import java.util.TreeMap;
 
 /**
  * @author nkorange

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -31,7 +31,6 @@
 import org.codehaus.jackson.util.VersionUtil;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -16,14 +16,14 @@
 package com.alibaba.nacos.naming.controllers;
 
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.cluster.transport.Serializer;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DataStore;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DistroConsistencyServiceImpl;
 import com.alibaba.nacos.naming.core.Instances;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -19,14 +19,14 @@
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.core.*;
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.pojo.Subscriber;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -22,8 +22,6 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.builder.EqualsBuilder;
-import org.apache.commons.lang3.builder.HashCodeBuilder;
 import org.springframework.util.Assert;
 
 import java.util.*;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchEntry.java
Patch:
@@ -61,4 +61,6 @@ public class SwitchEntry {
     public static final String OVERRIDDEN_SERVER_STATUS = "overriddenServerStatus";
     public static final String DEFAULT_INSTANCE_EPHEMERAL = "defaultInstanceEphemeral";
     public static final String DISTRO_SERVER_EXPIRED_MILLIS = "distroServerExpiredMillis";
+    public static final String LIGHT_BEAT_ENABLED = "lightBeatEnabled";
+    public static final String AUTO_CHANGE_HEALTH_CHECK_ENABLED = "autoChangeHealthCheckEnabled";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -20,9 +20,9 @@
 import com.alibaba.fastjson.parser.ParserConfig;
 import com.alibaba.fastjson.serializer.SerializeConfig;
 import com.alibaba.fastjson.serializer.SerializerFeature;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.JsonAdapter;
 import com.alibaba.nacos.naming.selector.Selector;
 import com.alibaba.nacos.naming.selector.SelectorJsonAdapter;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -17,13 +17,12 @@
 
 
 import com.alibaba.nacos.api.cmdb.pojo.PreservedEntityTypes;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.naming.boot.SpringContext;
 import com.alibaba.nacos.naming.core.Instance;
-import com.alibaba.nacos.api.exception.NacosException;
-
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.ArrayList;

File: naming/src/main/java/com/alibaba/nacos/naming/web/AuthFilter.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.naming.acl.AuthChecker;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcherTest.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
 import com.alibaba.nacos.naming.misc.GlobalConfig;
-
 import org.junit.Before;
 import org.junit.Test;
 import org.springframework.test.util.ReflectionTestUtils;

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceManagerTest.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-
 import com.google.common.collect.Maps;
 import org.junit.Assert;
 import org.junit.Before;
@@ -33,7 +32,6 @@
 
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
 
 import static org.mockito.Mockito.when;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -58,8 +58,6 @@ public class UtilAndComs {
         .availableProcessors() > 1 ? Runtime.getRuntime().availableProcessors() / 2
         : 1;
 
-    public static final int DEFAULT_RESEND_BEAT_INTERVAL_SECONDS = 2;
-
     public static final String HTTP = "http://";
 
     public static final String HTTPS = "https://";

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -202,8 +202,6 @@ public void autoRegDomClustersTest() throws Exception {
 
         String serviceName = randomDomainName();
 
-        System.out.println(serviceName);
-
         naming.registerInstance(serviceName, "127.0.0.1", TEST_PORT, "c1");
         naming.registerInstance(serviceName, "127.0.0.2", TEST_PORT, "c2");
 

File: test/src/test/java/com/alibaba/nacos/test/naming/ClientBeat_ITCase.java
Patch:
@@ -89,7 +89,7 @@ public void testLightBeat() throws Exception {
             }
         }
 
-        // Sleep 30 seconds and see if instance list not changed:
+        // Sleep 35 seconds and see if instance list not changed:
         TimeUnit.SECONDS.sleep(35L);
 
         list = naming.getAllInstances(serviceName);
@@ -114,7 +114,7 @@ public void testLightBeat() throws Exception {
 
         Assert.assertTrue(response.getStatusCode().is2xxSuccessful());
 
-        // Sleep 30 seconds and see if instance list not changed:
+        // Sleep 35 seconds and see if instance list not changed:
         TimeUnit.SECONDS.sleep(35L);
 
         list = naming.getAllInstances(serviceName);

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -91,6 +91,9 @@ static public List<String> readLines(Reader input) throws IOException {
     }
 
     static public String toString(InputStream input, String encoding) throws IOException {
+        if (input == null) {
+            return StringUtils.EMPTY;
+        }
         return (null == encoding) ? toString(new InputStreamReader(input, Constants.ENCODE))
             : toString(new InputStreamReader(input, encoding));
     }

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -144,4 +144,6 @@ public String toString() {
      */
     public static final int OVER_THRESHOLD = 503;
 
+    public static final int RESOURCE_NOT_FOUND = -404;
+
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/CommonParams.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class CommonParams {
 
+    public static final String CODE = "code";
+
     public static final String SERVICE_NAME = "serviceName";
 
     public static final String CLUSTER_NAME = "clusterName";
@@ -31,4 +33,5 @@ public class CommonParams {
 
     public static final String GROUP_NAME = "groupName";
 
+    public static final String LIGHT_BEAT_ENABLED = "lightBeatEnabled";
 }

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigContext.java
Patch:
@@ -15,11 +15,11 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
+import com.alibaba.nacos.api.config.filter.IConfigContext;
+
 import java.util.HashMap;
 import java.util.Map;
 
-import com.alibaba.nacos.api.config.filter.IConfigContext;
-
 /**
  * Config Context
  *

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainManager.java
Patch:
@@ -15,16 +15,15 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
-import java.util.List;
-
 import com.alibaba.nacos.api.config.filter.IConfigFilter;
 import com.alibaba.nacos.api.config.filter.IConfigFilterChain;
 import com.alibaba.nacos.api.config.filter.IConfigRequest;
 import com.alibaba.nacos.api.config.filter.IConfigResponse;
 import com.alibaba.nacos.api.exception.NacosException;
-
 import com.google.common.collect.Lists;
 
+import java.util.List;
+
 /**
  * Config Filter Chain Management
  *

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigRequest.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
-import java.util.HashMap;
-import java.util.Map;
-
 import com.alibaba.nacos.api.config.filter.IConfigContext;
 import com.alibaba.nacos.api.config.filter.IConfigRequest;
 
+import java.util.HashMap;
+import java.util.Map;
+
 /**
  * Config Request
  *

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigResponse.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.client.config.filter.impl;
 
-import java.util.HashMap;
-import java.util.Map;
-
 import com.alibaba.nacos.api.config.filter.IConfigContext;
 import com.alibaba.nacos.api.config.filter.IConfigResponse;
 
+import java.util.HashMap;
+import java.util.Map;
+
 /**
  * Config Response
  *

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -22,12 +22,12 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.impl.ServerListManager;
 import com.alibaba.nacos.client.config.impl.SpasAdapter;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.identify.STSConfig;
-import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.client.utils.JSONUtils;
 import com.alibaba.nacos.client.utils.LogUtils;
 import com.alibaba.nacos.client.utils.ParamUtil;
+import com.alibaba.nacos.client.utils.TemplateUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.core.type.TypeReference;
 import org.apache.commons.lang3.StringUtils;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -17,10 +17,10 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.config.utils.MD5;
 import com.alibaba.nacos.client.utils.ParamUtil;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.common.utils.UuidUtils;
 import com.alibaba.nacos.common.utils.VersionUtils;
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -17,10 +17,10 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.client.config.utils.ConcurrentDiskUtil;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.config.utils.JVMUtil;
 import com.alibaba.nacos.client.config.utils.SnapShotSwitch;
 import com.alibaba.nacos.client.utils.LogUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 

File: client/src/main/java/com/alibaba/nacos/client/config/utils/MD5.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.client.config.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-
 import com.google.common.collect.Maps;
+
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.util.Map;

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -15,12 +15,12 @@
  */
 package com.alibaba.nacos.client.config.utils;
 
-import java.util.List;
-
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.utils.IPUtil;
 import org.apache.commons.lang3.StringUtils;
 
+import java.util.List;
+
 /**
  * Param check util
  *

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -95,7 +95,8 @@ private void init(Properties properties) {
         serverProxy = new NamingProxy(namespace, endpoint, serverList);
         serverProxy.setProperties(properties);
         beatReactor = new BeatReactor(serverProxy, initClientBeatThreadCount(properties));
-        hostReactor = new HostReactor(eventDispatcher, serverProxy, cacheDir, isLoadCacheAtStart(properties), initPollingThreadCount(properties));
+        hostReactor = new HostReactor(eventDispatcher, serverProxy, cacheDir, isLoadCacheAtStart(properties),
+            initPollingThreadCount(properties));
     }
 
     private int initClientBeatThreadCount(Properties properties) {
@@ -198,8 +199,7 @@ public void registerInstance(String serviceName, String groupName, Instance inst
             beatInfo.setWeight(instance.getWeight());
             beatInfo.setMetadata(instance.getMetadata());
             beatInfo.setScheduled(false);
-            long instanceInterval = instance.getInstanceHeartBeatInterval();
-            beatInfo.setPeriod(instanceInterval == 0 ? DEFAULT_HEART_BEAT_INTERVAL : instanceInterval);
+            beatInfo.setPeriod(instance.getInstanceHeartBeatInterval());
 
             beatReactor.addBeatInfo(NamingUtils.getGroupedName(serviceName, groupName), beatInfo);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -16,8 +16,8 @@
 package com.alibaba.nacos.client.naming.core;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 
 import java.net.DatagramPacket;
 import java.net.DatagramSocket;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -58,6 +58,8 @@ public class UtilAndComs {
         .availableProcessors() > 1 ? Runtime.getRuntime().availableProcessors() / 2
         : 1;
 
+    public static final int DEFAULT_RESEND_BEAT_INTERVAL_SECONDS = 2;
+
     public static final String HTTP = "http://";
 
     public static final String HTTPS = "https://";

File: client/src/test/java/com/alibaba/nacos/client/BeatReactorTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.alibaba.nacos.client;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.beat.BeatReactor;
 import com.alibaba.nacos.client.naming.net.NamingProxy;
@@ -24,7 +25,7 @@ public class BeatReactorTest {
     private NamingProxy namingProxy;
 
     @Test
-    public void test() throws NoSuchFieldException, IllegalAccessException, InterruptedException {
+    public void test() throws NoSuchFieldException, IllegalAccessException, InterruptedException, NacosException {
         BeatReactor beatReactor = new BeatReactor(namingProxy);
 
         BeatInfo beatInfo = new BeatInfo();
@@ -37,7 +38,7 @@ public void test() throws NoSuchFieldException, IllegalAccessException, Interrup
         beatInfo.setScheduled(false);
         beatInfo.setPeriod(1000L);
 
-        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo);
+        Mockito.doReturn(0L).when(namingProxy).sendBeat(beatInfo, true);
         beatReactor.addBeatInfo("testService", beatInfo);
 
         Assert.assertEquals(1, getActiveThread(beatReactor));

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.pojo.Instance;
-
 import org.junit.Ignore;
 import org.junit.Test;
 

File: client/src/test/java/com/alibaba/nacos/client/StringUtilsTest.java
Patch:
@@ -6,8 +6,8 @@
 import java.util.ArrayList;
 import java.util.Collection;
 
-import static org.junit.Assert.*;
 import static com.alibaba.nacos.client.utils.StringUtils.*;
+import static org.junit.Assert.*;
 
 @Deprecated
 public class StringUtilsTest {

File: naming/src/main/java/com/alibaba/nacos/naming/boot/RunningConfig.java
Patch:
@@ -25,6 +25,7 @@
 import org.springframework.stereotype.Component;
 
 import javax.servlet.ServletContext;
+import java.util.TreeMap;
 
 /**
  * @author nkorange

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -31,7 +31,6 @@
 import org.codehaus.jackson.util.VersionUtil;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -16,14 +16,14 @@
 package com.alibaba.nacos.naming.controllers;
 
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.cluster.transport.Serializer;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DataStore;
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DistroConsistencyServiceImpl;
 import com.alibaba.nacos.naming.core.Instances;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -19,14 +19,14 @@
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.core.*;
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.pojo.Subscriber;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -22,8 +22,6 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
-import org.apache.commons.lang3.builder.EqualsBuilder;
-import org.apache.commons.lang3.builder.HashCodeBuilder;
 import org.springframework.util.Assert;
 
 import java.util.*;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchEntry.java
Patch:
@@ -61,4 +61,6 @@ public class SwitchEntry {
     public static final String OVERRIDDEN_SERVER_STATUS = "overriddenServerStatus";
     public static final String DEFAULT_INSTANCE_EPHEMERAL = "defaultInstanceEphemeral";
     public static final String DISTRO_SERVER_EXPIRED_MILLIS = "distroServerExpiredMillis";
+    public static final String LIGHT_BEAT_ENABLED = "lightBeatEnabled";
+    public static final String AUTO_CHANGE_HEALTH_CHECK_ENABLED = "autoChangeHealthCheckEnabled";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -20,9 +20,9 @@
 import com.alibaba.fastjson.parser.ParserConfig;
 import com.alibaba.fastjson.serializer.SerializeConfig;
 import com.alibaba.fastjson.serializer.SerializerFeature;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.common.utils.VersionUtils;
-import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.JsonAdapter;
 import com.alibaba.nacos.naming.selector.Selector;
 import com.alibaba.nacos.naming.selector.SelectorJsonAdapter;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -17,13 +17,12 @@
 
 
 import com.alibaba.nacos.api.cmdb.pojo.PreservedEntityTypes;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.selector.ExpressionSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.naming.boot.SpringContext;
 import com.alibaba.nacos.naming.core.Instance;
-import com.alibaba.nacos.api.exception.NacosException;
-
 import org.apache.commons.lang3.StringUtils;
 
 import java.util.ArrayList;

File: naming/src/main/java/com/alibaba/nacos/naming/web/AuthFilter.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.naming.acl.AuthChecker;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcherTest.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
 import com.alibaba.nacos.naming.misc.GlobalConfig;
-
 import org.junit.Before;
 import org.junit.Test;
 import org.springframework.test.util.ReflectionTestUtils;

File: naming/src/test/java/com/alibaba/nacos/naming/core/ServiceManagerTest.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-
 import com.google.common.collect.Maps;
 import org.junit.Assert;
 import org.junit.Before;
@@ -33,7 +32,6 @@
 
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
 
 import static org.mockito.Mockito.when;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/CollectionUtils.java
Patch:
@@ -145,7 +145,7 @@ public static boolean isEmpty(Collection coll) {
     private static int getFreq(final Object obj, final Map freqMap) {
         Integer count = (Integer)freqMap.get(obj);
         if (count != null) {
-            return count;
+            return count.intValue();
         }
         return 0;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -119,7 +119,7 @@ public int getClusterUsage() {
         if (result == null) {
             throw new IllegalArgumentException("configInfoCount error");
         }
-        return result;
+        return result.intValue();
     }
 
     private boolean insertGroupCapacity(final String sql, final GroupCapacity capacity) {

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PaginationHelper.java
Patch:
@@ -148,7 +148,6 @@ public Page<E> fetchPageLimit(final JdbcTemplate jt, final String sqlCountRows,
         if (rowCountInt == null) {
             throw new IllegalArgumentException("fetchPageLimit error");
         }
-        //final int rowCount = rowCountInt.intValue();
 
         // 计算页数
         int pageCount = rowCountInt / pageSize;

File: config/src/main/java/com/alibaba/nacos/config/server/service/PersistService.java
Patch:
@@ -3490,7 +3490,7 @@ public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoLis
                 if (configInfo.getDataId().contains(SPOT)) {
                     String extName = configInfo.getDataId().substring(configInfo.getDataId().lastIndexOf(SPOT) + 1).toUpperCase();
                     try {
-                        type = FileTypeEnum.valueOf(extName).getFileType();
+                        type = FileTypeEnum.valueOf(extName.toUpperCase()).getFileType();
                     } catch (Exception ex) {
                         type = FileTypeEnum.TEXT.getFileType();
                     }

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -93,7 +93,7 @@ private void initNamespace(Properties properties) {
                 System.getProperty(SystemPropertyKeyConst.IS_USE_CLOUD_NAMESPACE_PARSING,
                     String.valueOf(Constants.DEFAULT_USE_CLOUD_NAMESPACE_PARSING)));
 
-        if (Boolean.valueOf(isUseCloudNamespaceParsing)) {
+        if (Boolean.parseBoolean(isUseCloudNamespaceParsing)) {
             namespaceTmp = TemplateUtils.stringBlankAndThenExecute(namespaceTmp, new Callable<String>() {
                 @Override
                 public String call() {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -202,7 +202,7 @@ public String call() {
             properties.getProperty(PropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                 System.getProperty(SystemPropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                     String.valueOf(ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE)));
-        if (Boolean.valueOf(isUseEndpointRuleParsing)) {
+        if (Boolean.parseBoolean(isUseEndpointRuleParsing)) {
             String endpointUrl = ParamUtil.parsingEndpointRule(endpointTmp);
             if (StringUtils.isNotBlank(endpointUrl)) {
                 serverAddrsStr = "";

File: client/src/main/java/com/alibaba/nacos/client/identify/STSConfig.java
Patch:
@@ -71,7 +71,7 @@ private STSConfig() {
 
         String cacheSecurityCredentials = System.getProperty("cache.security.credentials");
         if (!StringUtils.isBlank(cacheSecurityCredentials)) {
-            setCacheSecurityCredentials(Boolean.valueOf(cacheSecurityCredentials));
+            setCacheSecurityCredentials(Boolean.parseBoolean(cacheSecurityCredentials));
         }
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/InitUtils.java
Patch:
@@ -46,7 +46,7 @@ public static String initNamespaceForNaming(Properties properties) {
                 System.getProperty(SystemPropertyKeyConst.IS_USE_CLOUD_NAMESPACE_PARSING,
                     String.valueOf(Constants.DEFAULT_USE_CLOUD_NAMESPACE_PARSING)));
 
-        if (Boolean.valueOf(isUseCloudNamespaceParsing)) {
+        if (Boolean.parseBoolean(isUseCloudNamespaceParsing)) {
 
             tmpNamespace = TenantUtil.getUserTenantForAns();
             tmpNamespace = TemplateUtils.stringEmptyAndThenExecute(tmpNamespace, new Callable<String>() {
@@ -116,7 +116,7 @@ public static String initEndpoint(final Properties properties) {
                 System.getProperty(SystemPropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                     String.valueOf(ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE)));
 
-        boolean isUseEndpointParsingRule = Boolean.valueOf(isUseEndpointRuleParsing);
+        boolean isUseEndpointParsingRule = Boolean.parseBoolean(isUseEndpointRuleParsing);
         String endpointUrl;
         if (isUseEndpointParsingRule) {
             // Get the set domain name information

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -50,7 +50,7 @@ public static boolean getSwitchBoolean(String key, boolean defaultValue) {
         boolean rtn = defaultValue;
         try {
             String value = switches.get(key);
-            rtn = value != null ? Boolean.valueOf(value).booleanValue() : defaultValue;
+            rtn = value != null ? Boolean.parseBoolean(value) : defaultValue;
         } catch (Exception e) {
             rtn = defaultValue;
             LogUtil.fatalLog.error("corrupt switch value {}={}", key, switches.get(key));

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -97,7 +97,7 @@ public void init() {
             logger.info("notifyConnectTimeout:{}", notifyConnectTimeout);
             setNotifySocketTimeout(Integer.parseInt(env.getProperty("notifySocketTimeout", "200")));
             logger.info("notifySocketTimeout:{}", notifySocketTimeout);
-            setHealthCheck(Boolean.valueOf(env.getProperty("isHealthCheck", "true")));
+            setHealthCheck(Boolean.parseBoolean(env.getProperty("isHealthCheck", "true")));
             logger.info("isHealthCheck:{}", isHealthCheck);
             setMaxHealthCheckFailCount(Integer.parseInt(env.getProperty("maxHealthCheckFailCount", "12")));
             logger.info("maxHealthCheckFailCount:{}", maxHealthCheckFailCount);
@@ -138,7 +138,7 @@ public static boolean isHealthCheck() {
     }
 
     private boolean getBoolean(String key, boolean defaultValue) {
-        return Boolean.valueOf(getString(key, String.valueOf(defaultValue)));
+        return Boolean.parseBoolean(getString(key, String.valueOf(defaultValue)));
     }
 
     private int getInt(String key, int defaultValue) {

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -51,7 +51,7 @@ public class InetUtils {
     private static List<String> ignoredInterfaces = new ArrayList<String>();
 
     static {
-        useOnlySiteLocalInterface = Boolean.valueOf(PropertyUtil.getProperty(USE_ONLY_SITE_INTERFACES));
+        useOnlySiteLocalInterface = Boolean.parseBoolean(PropertyUtil.getProperty(USE_ONLY_SITE_INTERFACES));
 
         List<String> networks = PropertyUtil.getPropertyList(PREFERRED_NETWORKS);
         for (String preferred : networks) {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -358,7 +358,7 @@ public JSONObject subscribers(HttpServletRequest request) {
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
             Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
-        boolean aggregation = Boolean.valueOf(WebUtils.optional(request, "aggregation", String.valueOf(Boolean.TRUE)));
+        boolean aggregation = Boolean.parseBoolean(WebUtils.optional(request, "aggregation", String.valueOf(Boolean.TRUE)));
 
         JSONObject result = new JSONObject();
 

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.common.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.*;
@@ -39,7 +38,7 @@ public static byte[] tryDecompress(InputStream raw) throws Exception {
         try {
             gis = new GZIPInputStream(raw);
             out = new ByteArrayOutputStream();
-            IOUtils.copy(gis, out);
+            copy(gis, out);
             return out.toByteArray();
         } catch (Exception e) {
             e.printStackTrace();

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -15,8 +15,9 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.utils.RegexParser;
-import org.apache.commons.io.IOUtils;
+
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
@@ -66,7 +67,7 @@ public static void load(String content) {
         defaultLog.warn("[aggr-dataIds] {}", content);
 
         try {
-            List<String> lines = IOUtils.readLines(new StringReader(content));
+            List<String> lines = IoUtils.readLines(new StringReader(content));
             compile(lines);
         } catch (Exception ioe) {
             defaultLog.error("failed to load aggr whitelist, " + ioe.toString(), ioe);

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.notify.NotifyService;
@@ -23,7 +24,6 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.RunningConfigUtils;
 import com.alibaba.nacos.config.server.utils.event.EventDispatcher;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpResponse;
 import org.apache.http.client.config.RequestConfig;
@@ -257,7 +257,7 @@ private List<String> getApacheServerList() {
                 if (HttpServletResponse.SC_OK == result.code) {
                     isAddressServerHealth = true;
                     addressServerFailCcount = 0;
-                    List<String> lines = IOUtils.readLines(new StringReader(result.content));
+                    List<String> lines = IoUtils.readLines(new StringReader(result.content));
                     List<String> ips = new ArrayList<String>(lines.size());
                     for (String serverAddr : lines) {
                         if (StringUtils.isNotBlank(serverAddr)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -15,8 +15,9 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import org.apache.commons.io.IOUtils;
+
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
@@ -83,7 +84,7 @@ public static void load(String config) {
 
         Map<String, String> map = new HashMap<String, String>(30);
         try {
-            for (String line : IOUtils.readLines(new StringReader(config))) {
+            for (String line : IoUtils.readLines(new StringReader(config))) {
                 if (!StringUtils.isBlank(line) && !line.startsWith("#")) {
                     String[] array = line.split("=");
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.dump;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -25,7 +26,7 @@
 import com.alibaba.nacos.config.server.service.PersistService.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.service.merge.MergeTaskProcessor;
 import com.alibaba.nacos.config.server.utils.*;
-import org.apache.commons.io.IOUtils;
+
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -178,7 +179,7 @@ private void dumpConfigInfo(DumpAllProcessor dumpAllProcessor)
                 File heartbeatFile = DiskUtil.heartBeatFile();
                 if (heartbeatFile.exists()) {
                     fis = new FileInputStream(heartbeatFile);
-                    String heartheatTempLast = IOUtils.toString(fis, Constants.ENCODE);
+                    String heartheatTempLast = IoUtils.toString(fis, Constants.ENCODE);
                     heartheatLastStamp = Timestamp.valueOf(heartheatTempLast);
                     if (TimeUtils.getCurrentTime().getTime()
                         - heartheatLastStamp.getTime() < timeStep * 60 * 60 * 1000) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyService.java
Patch:
@@ -18,7 +18,6 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.service.ServerListService;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
@@ -77,9 +76,9 @@ static public HttpResult invokeURL(String url, List<String> headers, String enco
             String resp = null;
 
             if (HttpServletResponse.SC_OK == respCode) {
-                resp = IOUtils.toString(conn.getInputStream());
+                resp = IoUtils.toString(conn.getInputStream(),encoding);
             } else {
-                resp = IOUtils.toString(conn.getErrorStream());
+                resp = IoUtils.toString(conn.getErrorStream(),encoding);
             }
             return new HttpResult(respCode, resp);
         } finally {

File: core/src/main/java/com/alibaba/nacos/core/utils/PropertyUtil.java
Patch:
@@ -38,7 +38,7 @@ public class PropertyUtil {
         InputStream inputStream = null;
         try {
             String baseDir = System.getProperty("nacos.home");
-            if (!StringUtils.isBlank(baseDir)) {
+            if (StringUtils.isNotBlank(baseDir)) {
                 inputStream = new FileInputStream(baseDir + "/conf/application.properties");
             } else {
                 inputStream = PropertyUtil.class

File: common/src/main/java/com/alibaba/nacos/common/utils/IoUtils.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.common.utils;
 
 import com.alibaba.nacos.api.common.Constants;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.*;
@@ -39,7 +38,7 @@ public static byte[] tryDecompress(InputStream raw) throws Exception {
         try {
             gis = new GZIPInputStream(raw);
             out = new ByteArrayOutputStream();
-            IOUtils.copy(gis, out);
+            copy(gis, out);
             return out.toByteArray();
         } catch (Exception e) {
             e.printStackTrace();

File: config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java
Patch:
@@ -15,8 +15,9 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.utils.RegexParser;
-import org.apache.commons.io.IOUtils;
+
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
@@ -66,7 +67,7 @@ public static void load(String content) {
         defaultLog.warn("[aggr-dataIds] {}", content);
 
         try {
-            List<String> lines = IOUtils.readLines(new StringReader(content));
+            List<String> lines = IoUtils.readLines(new StringReader(content));
             compile(lines);
         } catch (Exception ioe) {
             defaultLog.error("failed to load aggr whitelist, " + ioe.toString(), ioe);

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.notify.NotifyService;
@@ -23,7 +24,6 @@
 import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.RunningConfigUtils;
 import com.alibaba.nacos.config.server.utils.event.EventDispatcher;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpResponse;
 import org.apache.http.client.config.RequestConfig;
@@ -257,7 +257,7 @@ private List<String> getApacheServerList() {
                 if (HttpServletResponse.SC_OK == result.code) {
                     isAddressServerHealth = true;
                     addressServerFailCcount = 0;
-                    List<String> lines = IOUtils.readLines(new StringReader(result.content));
+                    List<String> lines = IoUtils.readLines(new StringReader(result.content));
                     List<String> ips = new ArrayList<String>(lines.size());
                     for (String serverAddr : lines) {
                         if (StringUtils.isNotBlank(serverAddr)) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -15,8 +15,9 @@
  */
 package com.alibaba.nacos.config.server.service;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.utils.LogUtil;
-import org.apache.commons.io.IOUtils;
+
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
@@ -83,7 +84,7 @@ public static void load(String config) {
 
         Map<String, String> map = new HashMap<String, String>(30);
         try {
-            for (String line : IOUtils.readLines(new StringReader(config))) {
+            for (String line : IoUtils.readLines(new StringReader(config))) {
                 if (!StringUtils.isBlank(line) && !line.startsWith("#")) {
                     String[] array = line.split("=");
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.dump;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
@@ -25,7 +26,7 @@
 import com.alibaba.nacos.config.server.service.PersistService.ConfigInfoWrapper;
 import com.alibaba.nacos.config.server.service.merge.MergeTaskProcessor;
 import com.alibaba.nacos.config.server.utils.*;
-import org.apache.commons.io.IOUtils;
+
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -178,7 +179,7 @@ private void dumpConfigInfo(DumpAllProcessor dumpAllProcessor)
                 File heartbeatFile = DiskUtil.heartBeatFile();
                 if (heartbeatFile.exists()) {
                     fis = new FileInputStream(heartbeatFile);
-                    String heartheatTempLast = IOUtils.toString(fis, Constants.ENCODE);
+                    String heartheatTempLast = IoUtils.toString(fis, Constants.ENCODE);
                     heartheatLastStamp = Timestamp.valueOf(heartheatTempLast);
                     if (TimeUtils.getCurrentTime().getTime()
                         - heartheatLastStamp.getTime() < timeStep * 60 * 60 * 1000) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyService.java
Patch:
@@ -18,7 +18,6 @@
 import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.service.ServerListService;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
@@ -77,9 +76,9 @@ static public HttpResult invokeURL(String url, List<String> headers, String enco
             String resp = null;
 
             if (HttpServletResponse.SC_OK == respCode) {
-                resp = IOUtils.toString(conn.getInputStream());
+                resp = IoUtils.toString(conn.getInputStream(),encoding);
             } else {
-                resp = IOUtils.toString(conn.getErrorStream());
+                resp = IoUtils.toString(conn.getErrorStream(),encoding);
             }
             return new HttpResult(respCode, resp);
         } finally {

File: core/src/main/java/com/alibaba/nacos/core/utils/PropertyUtil.java
Patch:
@@ -38,7 +38,7 @@ public class PropertyUtil {
         InputStream inputStream = null;
         try {
             String baseDir = System.getProperty("nacos.home");
-            if (!StringUtils.isBlank(baseDir)) {
+            if (StringUtils.isNotBlank(baseDir)) {
                 inputStream = new FileInputStream(baseDir + "/conf/application.properties");
             } else {
                 inputStream = PropertyUtil.class

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -93,7 +93,7 @@ private void initNamespace(Properties properties) {
                 System.getProperty(SystemPropertyKeyConst.IS_USE_CLOUD_NAMESPACE_PARSING,
                     String.valueOf(Constants.DEFAULT_USE_CLOUD_NAMESPACE_PARSING)));
 
-        if (Boolean.valueOf(isUseCloudNamespaceParsing)) {
+        if (Boolean.parseBoolean(isUseCloudNamespaceParsing)) {
             namespaceTmp = TemplateUtils.stringBlankAndThenExecute(namespaceTmp, new Callable<String>() {
                 @Override
                 public String call() {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -202,7 +202,7 @@ public String call() {
             properties.getProperty(PropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                 System.getProperty(SystemPropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                     String.valueOf(ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE)));
-        if (Boolean.valueOf(isUseEndpointRuleParsing)) {
+        if (Boolean.parseBoolean(isUseEndpointRuleParsing)) {
             String endpointUrl = ParamUtil.parsingEndpointRule(endpointTmp);
             if (StringUtils.isNotBlank(endpointUrl)) {
                 serverAddrsStr = "";

File: client/src/main/java/com/alibaba/nacos/client/identify/STSConfig.java
Patch:
@@ -71,7 +71,7 @@ private STSConfig() {
 
         String cacheSecurityCredentials = System.getProperty("cache.security.credentials");
         if (!StringUtils.isBlank(cacheSecurityCredentials)) {
-            setCacheSecurityCredentials(Boolean.valueOf(cacheSecurityCredentials));
+            setCacheSecurityCredentials(Boolean.parseBoolean(cacheSecurityCredentials));
         }
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/InitUtils.java
Patch:
@@ -46,7 +46,7 @@ public static String initNamespaceForNaming(Properties properties) {
                 System.getProperty(SystemPropertyKeyConst.IS_USE_CLOUD_NAMESPACE_PARSING,
                     String.valueOf(Constants.DEFAULT_USE_CLOUD_NAMESPACE_PARSING)));
 
-        if (Boolean.valueOf(isUseCloudNamespaceParsing)) {
+        if (Boolean.parseBoolean(isUseCloudNamespaceParsing)) {
 
             tmpNamespace = TenantUtil.getUserTenantForAns();
             tmpNamespace = TemplateUtils.stringEmptyAndThenExecute(tmpNamespace, new Callable<String>() {
@@ -116,7 +116,7 @@ public static String initEndpoint(final Properties properties) {
                 System.getProperty(SystemPropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                     String.valueOf(ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE)));
 
-        boolean isUseEndpointParsingRule = Boolean.valueOf(isUseEndpointRuleParsing);
+        boolean isUseEndpointParsingRule = Boolean.parseBoolean(isUseEndpointRuleParsing);
         String endpointUrl;
         if (isUseEndpointParsingRule) {
             // Get the set domain name information

File: config/src/main/java/com/alibaba/nacos/config/server/service/SwitchService.java
Patch:
@@ -49,7 +49,7 @@ public static boolean getSwitchBoolean(String key, boolean defaultValue) {
         boolean rtn = defaultValue;
         try {
             String value = switches.get(key);
-            rtn = value != null ? Boolean.valueOf(value).booleanValue() : defaultValue;
+            rtn = value != null ? Boolean.parseBoolean(value) : defaultValue;
         } catch (Exception e) {
             rtn = defaultValue;
             LogUtil.fatalLog.error("corrupt switch value {}={}", key, switches.get(key));

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -97,7 +97,7 @@ public void init() {
             logger.info("notifyConnectTimeout:{}", notifyConnectTimeout);
             setNotifySocketTimeout(Integer.parseInt(env.getProperty("notifySocketTimeout", "200")));
             logger.info("notifySocketTimeout:{}", notifySocketTimeout);
-            setHealthCheck(Boolean.valueOf(env.getProperty("isHealthCheck", "true")));
+            setHealthCheck(Boolean.parseBoolean(env.getProperty("isHealthCheck", "true")));
             logger.info("isHealthCheck:{}", isHealthCheck);
             setMaxHealthCheckFailCount(Integer.parseInt(env.getProperty("maxHealthCheckFailCount", "12")));
             logger.info("maxHealthCheckFailCount:{}", maxHealthCheckFailCount);
@@ -138,7 +138,7 @@ public static boolean isHealthCheck() {
     }
 
     private boolean getBoolean(String key, boolean defaultValue) {
-        return Boolean.valueOf(getString(key, String.valueOf(defaultValue)));
+        return Boolean.parseBoolean(getString(key, String.valueOf(defaultValue)));
     }
 
     private int getInt(String key, int defaultValue) {

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -51,7 +51,7 @@ public class InetUtils {
     private static List<String> ignoredInterfaces = new ArrayList<String>();
 
     static {
-        useOnlySiteLocalInterface = Boolean.valueOf(PropertyUtil.getProperty(USE_ONLY_SITE_INTERFACES));
+        useOnlySiteLocalInterface = Boolean.parseBoolean(PropertyUtil.getProperty(USE_ONLY_SITE_INTERFACES));
 
         List<String> networks = PropertyUtil.getPropertyList(PREFERRED_NETWORKS);
         for (String preferred : networks) {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -358,7 +358,7 @@ public JSONObject subscribers(HttpServletRequest request) {
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
             Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
-        boolean aggregation = Boolean.valueOf(WebUtils.optional(request, "aggregation", String.valueOf(Boolean.TRUE)));
+        boolean aggregation = Boolean.parseBoolean(WebUtils.optional(request, "aggregation", String.valueOf(Boolean.TRUE)));
 
         JSONObject result = new JSONObject();
 

File: address/src/test/java/com/alibaba/nacos/address/SimpleHttpTestUtils.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.address;
 
+import com.alibaba.nacos.common.utils.IoUtils;
+
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
@@ -172,9 +174,7 @@ private static String doExecute(String reqUrl, Map<String, String> paramMap, Str
         } catch (IOException e) {
             e.printStackTrace();
         } finally {
-            if (urlCon != null) {
-                urlCon.disconnect();
-            }
+            IoUtils.closeQuietly(urlCon);
         }
         return responseContent;
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -149,6 +149,9 @@ public void setMetadata(Map<String, String> metadata) {
     }
 
     public void addMetadata(String key, String value) {
+        if (this.metadata == null) {
+            this.metadata = new HashMap<String, String>(4);
+        }
         this.metadata.put(key, value);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.impl.EventDispatcher.ServerlistChangeEvent;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
-import com.alibaba.nacos.client.config.utils.IOUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 
 import com.alibaba.nacos.client.utils.*;
 import org.slf4j.Logger;
@@ -305,7 +305,7 @@ private List<String> getApacheServerList(String url, String name) {
                 if (DEFAULT_NAME.equals(name)) {
                     EnvUtil.setSelfEnv(httpResult.headers);
                 }
-                List<String> lines = IOUtils.readLines(new StringReader(httpResult.content));
+                List<String> lines = IoUtils.readLines(new StringReader(httpResult.content));
                 List<String> result = new ArrayList<String>(lines.size());
                 for (String serverAddr : lines) {
                     if (org.apache.commons.lang3.StringUtils.isNotBlank(serverAddr)) {

File: client/src/main/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLogging.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.logging.log4j2;
 
 import com.alibaba.nacos.client.logging.AbstractNacosLogging;
-import com.alibaba.nacos.common.util.ResourceUtils;
+import com.alibaba.nacos.common.utils.ResourceUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.core.Appender;
 import org.apache.logging.log4j.core.LoggerContext;

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -18,7 +18,7 @@
 import ch.qos.logback.classic.LoggerContext;
 import ch.qos.logback.classic.util.ContextInitializer;
 import com.alibaba.nacos.client.logging.AbstractNacosLogging;
-import com.alibaba.nacos.common.util.ResourceUtils;
+import com.alibaba.nacos.common.utils.ResourceUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.impl.StaticLoggerBinder;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.naming.core;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.client.naming.utils.IoUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
 
 import java.net.DatagramPacket;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 
 /**
  * @author xuanyin.zy

File: common/src/main/java/com/alibaba/nacos/common/utils/HttpMethod.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 /**
  * @author nkorange

File: common/src/main/java/com/alibaba/nacos/common/utils/Md5Utils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.io.UnsupportedEncodingException;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/Pair.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import org.apache.commons.lang3.StringUtils;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/ResourceUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.io.File;
 import java.io.FileNotFoundException;

File: common/src/main/java/com/alibaba/nacos/common/utils/UuidUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.util.UUID;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.io.InputStream;
 import java.util.Properties;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -244,7 +244,7 @@ public boolean process(String taskType, AbstractTask task) {
         while (lastMaxId < currentMaxId) {
             Page<PersistService.ConfigInfoWrapper> page = persistService.findAllConfigInfoFragment(lastMaxId,
                 PAGE_SIZE);
-            if (page != null && page.getPageItems() != null) {
+            if (page != null && page.getPageItems() != null && !page.getPageItems().isEmpty()) {
                 for (PersistService.ConfigInfoWrapper cf : page.getPageItems()) {
                     long id = cf.getId();
                     lastMaxId = id > lastMaxId ? id : lastMaxId;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyService.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.notify;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.service.ServerListService;
 import org.apache.commons.io.IOUtils;
@@ -82,9 +83,7 @@ static public HttpResult invokeURL(String url, List<String> headers, String enco
             }
             return new HttpResult(respCode, resp);
         } finally {
-            if (conn != null) {
-                conn.disconnect();
-            }
+            IoUtils.closeQuietly(conn);
         }
     }
 

File: console/src/main/java/com/alibaba/nacos/Nacos.java
Patch:
@@ -21,6 +21,8 @@
 import org.springframework.boot.web.servlet.ServletComponentScan;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
+import java.util.concurrent.*;
+
 /**
  * @author nacos
  */

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.console.controller;
 
 
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.SystemUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.common.util.IoUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.sun.management.OperatingSystemMXBean;
 import org.apache.commons.lang3.StringUtils;
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.TypeReference;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.util.IoUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.Response;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.fastjson.serializer.SerializeConfig;
 import com.alibaba.fastjson.serializer.SerializerFeature;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.JsonAdapter;
 import com.alibaba.nacos.naming.selector.Selector;

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.web;
 
-import com.alibaba.nacos.common.util.HttpMethod;
+import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -426,7 +426,7 @@ public Integer onCompleted(Response response) throws Exception {
         }
     }
 
-    public RaftPeer receivedVote(RaftPeer remote) {
+    public synchronized RaftPeer receivedVote(RaftPeer remote) {
         if (!peers.contains(remote)) {
             throw new IllegalStateException("can not find peer: " + remote.ip);
         }

File: console/src/main/java/com/alibaba/nacos/Nacos.java
Patch:
@@ -21,6 +21,8 @@
 import org.springframework.boot.web.servlet.ServletComponentScan;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
+import java.util.concurrent.*;
+
 /**
  * @author nacos
  */

File: address/src/test/java/com/alibaba/nacos/address/SimpleHttpTestUtils.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.address;
 
+import com.alibaba.nacos.common.utils.IoUtils;
+
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
@@ -172,9 +174,7 @@ private static String doExecute(String reqUrl, Map<String, String> paramMap, Str
         } catch (IOException e) {
             e.printStackTrace();
         } finally {
-            if (urlCon != null) {
-                urlCon.disconnect();
-            }
+            IoUtils.closeQuietly(urlCon);
         }
         return responseContent;
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -32,7 +32,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.client.config.impl.EventDispatcher.ServerlistChangeEvent;
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
-import com.alibaba.nacos.client.config.utils.IOUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 
 import com.alibaba.nacos.client.utils.*;
 import org.slf4j.Logger;
@@ -305,7 +305,7 @@ private List<String> getApacheServerList(String url, String name) {
                 if (DEFAULT_NAME.equals(name)) {
                     EnvUtil.setSelfEnv(httpResult.headers);
                 }
-                List<String> lines = IOUtils.readLines(new StringReader(httpResult.content));
+                List<String> lines = IoUtils.readLines(new StringReader(httpResult.content));
                 List<String> result = new ArrayList<String>(lines.size());
                 for (String serverAddr : lines) {
                     if (org.apache.commons.lang3.StringUtils.isNotBlank(serverAddr)) {

File: client/src/main/java/com/alibaba/nacos/client/logging/log4j2/Log4J2NacosLogging.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.logging.log4j2;
 
 import com.alibaba.nacos.client.logging.AbstractNacosLogging;
-import com.alibaba.nacos.common.util.ResourceUtils;
+import com.alibaba.nacos.common.utils.ResourceUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.core.Appender;
 import org.apache.logging.log4j.core.LoggerContext;

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -18,7 +18,7 @@
 import ch.qos.logback.classic.LoggerContext;
 import ch.qos.logback.classic.util.ContextInitializer;
 import com.alibaba.nacos.client.logging.AbstractNacosLogging;
-import com.alibaba.nacos.common.util.ResourceUtils;
+import com.alibaba.nacos.common.utils.ResourceUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.slf4j.impl.StaticLoggerBinder;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.naming.core;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.client.naming.utils.IoUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
 
 import java.net.DatagramPacket;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 
 /**
  * @author xuanyin.zy

File: common/src/main/java/com/alibaba/nacos/common/utils/HttpMethod.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 /**
  * @author nkorange

File: common/src/main/java/com/alibaba/nacos/common/utils/Md5Utils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.io.UnsupportedEncodingException;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/Pair.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import org.apache.commons.lang3.StringUtils;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/ResourceUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.io.File;
 import java.io.FileNotFoundException;

File: common/src/main/java/com/alibaba/nacos/common/utils/UuidUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.util.UUID;
 

File: common/src/main/java/com/alibaba/nacos/common/utils/VersionUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.common.utils;
 
 import java.io.InputStream;
 import java.util.Properties;

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyService.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.service.notify;
 
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.config.server.manager.TaskManager;
 import com.alibaba.nacos.config.server.service.ServerListService;
 import org.apache.commons.io.IOUtils;
@@ -82,9 +83,7 @@ static public HttpResult invokeURL(String url, List<String> headers, String enco
             }
             return new HttpResult(respCode, resp);
         } finally {
-            if (conn != null) {
-                conn.disconnect();
-            }
+            IoUtils.closeQuietly(conn);
         }
     }
 

File: console/src/main/java/com/alibaba/nacos/console/controller/ServerStateController.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.console.controller;
 
 
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.core.utils.SystemUtils;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.GetMapping;

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.alibaba.nacos.core.utils;
 
-import com.alibaba.nacos.common.util.IoUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.sun.management.OperatingSystemMXBean;
 import org.apache.commons.lang3.StringUtils;
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.TypeReference;
 import com.alibaba.nacos.api.exception.NacosException;
-import com.alibaba.nacos.common.util.IoUtils;
+import com.alibaba.nacos.common.utils.IoUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.common.constant.HttpHeaderConsts;
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.Response;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.fastjson.serializer.SerializeConfig;
 import com.alibaba.fastjson.serializer.SerializerFeature;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
-import com.alibaba.nacos.common.util.VersionUtils;
+import com.alibaba.nacos.common.utils.VersionUtils;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.JsonAdapter;
 import com.alibaba.nacos.naming.selector.Selector;

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.web;
 
-import com.alibaba.nacos.common.util.HttpMethod;
+import com.alibaba.nacos.common.utils.HttpMethod;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerStatus;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -244,7 +244,7 @@ public boolean process(String taskType, AbstractTask task) {
         while (lastMaxId < currentMaxId) {
             Page<PersistService.ConfigInfoWrapper> page = persistService.findAllConfigInfoFragment(lastMaxId,
                 PAGE_SIZE);
-            if (page != null && page.getPageItems() != null) {
+            if (page != null && page.getPageItems() != null && !page.getPageItems().isEmpty()) {
                 for (PersistService.ConfigInfoWrapper cf : page.getPageItems()) {
                     long id = cf.getId();
                     lastMaxId = id > lastMaxId ? id : lastMaxId;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -384,6 +384,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
         // now try to enable the push
         try {
             if (udpPort > 0 && pushService.canEnablePush(agent)) {
+
                 pushService.addClient(namespaceId, serviceName,
                     clusters,
                     agent,
@@ -394,7 +395,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
                 cacheMillis = switchDomain.getPushCacheMillis(serviceName);
             }
         } catch (Exception e) {
-            Loggers.SRV_LOG.error("[NACOS-API] failed to added push client", e);
+            Loggers.SRV_LOG.error("[NACOS-API] failed to added push client {}, {}:{}", clientInfo, clientIP, udpPort, e);
             cacheMillis = switchDomain.getDefaultCacheMillis();
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -384,6 +384,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
         // now try to enable the push
         try {
             if (udpPort > 0 && pushService.canEnablePush(agent)) {
+
                 pushService.addClient(namespaceId, serviceName,
                     clusters,
                     agent,
@@ -394,7 +395,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
                 cacheMillis = switchDomain.getPushCacheMillis(serviceName);
             }
         } catch (Exception e) {
-            Loggers.SRV_LOG.error("[NACOS-API] failed to added push client", e);
+            Loggers.SRV_LOG.error("[NACOS-API] failed to added push client {}, {}:{}", clientInfo, clientIP, udpPort, e);
             cacheMillis = switchDomain.getDefaultCacheMillis();
         }
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -150,7 +150,7 @@ public void setMetadata(Map<String, String> metadata) {
 
     public void addMetadata(String key, String value) {
         if (this.metadata == null) {
-            this.metadata = new HashMap<String, String>();
+            this.metadata = new HashMap<String, String>(4);
         }
         this.metadata.put(key, value);
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -149,6 +149,9 @@ public void setMetadata(Map<String, String> metadata) {
     }
 
     public void addMetadata(String key, String value) {
+        if (this.metadata == null) {
+            this.metadata = new HashMap<String, String>();
+        }
         this.metadata.put(key, value);
     }
 

File: address/src/test/java/com/alibaba/nacos/address/AddressServerControllerTests.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.address;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.HashMap;
@@ -23,6 +24,7 @@
  * @author pbting
  * @date 2019-06-18 2:37 PM
  */
+@Ignore
 public class AddressServerControllerTests {
 
     private static final String PRODUCT_NACOS = "nacos";

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigBeta_ITCase.java
Patch:
@@ -159,6 +159,7 @@ public void publishBetaConfig_noBetaIps_beta() throws Exception {
      */
     @Test
     public void publishBetaConfig_noBetaIps() throws Exception {
+
         HttpHeaders headers = new HttpHeaders(); //不存在betaIps
 
         ResponseEntity<String> response = request(CONFIG_CONTROLLER_PATH + "/configs", headers,

File: api/src/main/java/com/alibaba/nacos/api/naming/PreservedMetadataKeys.java
Patch:
@@ -33,4 +33,6 @@ public class PreservedMetadataKeys {
     public static final String IP_DELETE_TIMEOUT = "preserved.ip.delete.timeout";
 
     public static final String HEART_BEAT_INTERVAL = "preserved.heart.beat.interval";
+
+    public static final String INSTANCE_ID_GENERATOR = "preserved.instance.id.generator";
 }

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/InstanceControllerTest.java
Patch:
@@ -152,7 +152,7 @@ public void getInstances() throws Exception {
     @Test
     public void getNullServiceInstances() throws Exception {
         Mockito.when(serviceManager.getService(Constants.DEFAULT_NAMESPACE_ID, TEST_SERVICE_NAME)).thenReturn(null);
-        
+
         MockHttpServletRequestBuilder builder =
             MockMvcRequestBuilders.get(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/list")
                 .param("serviceName", TEST_SERVICE_NAME);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -128,7 +128,7 @@ public String updateSwitch(@RequestParam(required = false) boolean debug,
     }
 
     @GetMapping("/metrics")
-    public JSONObject metrics() {
+    public JSONObject metrics(HttpServletRequest request) {
 
         JSONObject result = new JSONObject();
 

File: istio/src/main/java/com/alibaba/nacos/istio/mcp/CollectionTypes.java
Patch:
@@ -2,6 +2,8 @@
 
 
 /**
+ * The collection types supported by Nacos
+ *
  * @author nkorange
  * @since 1.1.4
  */

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -62,6 +62,8 @@ public class Constants {
 
     public static final String CONFIG_VERSION = "Config-Version";
 
+    public static final String CONFIG_TYPE = "Config-Type";
+
     public static final String IF_MODIFIED_SINCE = "If-Modified-Since";
 
     public static final String SPACING_INTERVAL = "client-spacing-interval";

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -170,9 +170,9 @@ private String getConfigInner(String tenant, String dataId, String group, long t
         }
 
         try {
-            content = worker.getServerConfig(dataId, group, tenant, timeoutMs);
+            String[] ct = worker.getServerConfig(dataId, group, tenant, timeoutMs);
 
-            cr.setContent(content);
+            cr.setContent(ct[0]);
 
             configFilterChainManager.doFilter(null, cr);
             content = cr.getContent();

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigService.java
Patch:
@@ -57,9 +57,10 @@ static public boolean hasGroupKey(String groupKey) {
     /**
      * 保存配置文件，并缓存md5.
      */
-    static public boolean dump(String dataId, String group, String tenant, String content, long lastModifiedTs) {
+    static public boolean dump(String dataId, String group, String tenant, String content, long lastModifiedTs, String type) {
         String groupKey = GroupKey2.getKey(dataId, group, tenant);
-        makeSure(groupKey);
+        CacheItem ci = makeSure(groupKey);
+        ci.setType(type);
         final int lockResult = tryWriteLock(groupKey);
         assert (lockResult != 0);
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpTask.java
Patch:
@@ -187,7 +187,7 @@ public boolean process(String taskType, AbstractTask task) {
 
                 boolean result;
                 if (null != cf) {
-                    result = ConfigService.dump(dataId, group, tenant, cf.getContent(), lastModified);
+                    result = ConfigService.dump(dataId, group, tenant, cf.getContent(), lastModified, cf.getType());
 
                     if (result) {
                         ConfigTraceService.logDumpEvent(dataId, group, tenant, null, lastModified, handleIp,
@@ -261,7 +261,7 @@ public boolean process(String taskType, AbstractTask task) {
                     }
 
                     boolean result = ConfigService.dump(cf.getDataId(), cf.getGroup(), cf.getTenant(), cf.getContent(),
-                        cf.getLastModified());
+                        cf.getLastModified(), cf.getType());
 
                     final String content = cf.getContent();
                     final String md5 = MD5.getInstance().getMD5String(content);

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -73,7 +73,7 @@ public void listen(ServerChangeListener listener) {
     @PostConstruct
     public void init() {
         GlobalExecutor.registerServerListUpdater(new ServerListUpdater());
-        GlobalExecutor.registerServerStatusReporter(new ServerStatusReporter(), 5000);
+        GlobalExecutor.registerServerStatusReporter(new ServerStatusReporter(), 2000);
     }
 
     private List<Server> refreshServerList() {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -58,7 +58,7 @@ public class SwitchDomain implements Record, Cloneable {
 
     private List<String> incrementalList = new ArrayList<>();
 
-    private long serverStatusSynchronizationPeriodMillis = TimeUnit.SECONDS.toMillis(15);
+    private long serverStatusSynchronizationPeriodMillis = TimeUnit.SECONDS.toMillis(2);
 
     private long serviceStatusSynchronizationPeriodMillis = TimeUnit.SECONDS.toMillis(5);
 
@@ -71,7 +71,7 @@ public class SwitchDomain implements Record, Cloneable {
     /**
      * The server is regarded as expired if its two reporting interval is lagger than this variable.
      */
-    private long distroServerExpiredMillis = TimeUnit.SECONDS.toMillis(30);
+    private long distroServerExpiredMillis = TimeUnit.SECONDS.toMillis(10);
 
     /**
      * since which version, push can be enabled

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchEntry.java
Patch:
@@ -46,7 +46,7 @@ public class SwitchEntry {
     public static final int MIN_PUSH_CACHE_TIME_MIILIS = 10000;
     public static final int MIN_CACHE_TIME_MIILIS = 1000;
     public static final int MIN_SERVICE_SYNC_TIME_MIILIS = 5000;
-    public static final int MIN_SERVER_SYNC_TIME_MIILIS = 15000;
+    public static final int MIN_SERVER_SYNC_TIME_MIILIS = 1000;
 
     public static final String ACTION_ADD = "add";
     public static final String ACTION_REPLACE = "replace";
@@ -60,4 +60,5 @@ public class SwitchEntry {
 
     public static final String OVERRIDDEN_SERVER_STATUS = "overriddenServerStatus";
     public static final String DEFAULT_INSTANCE_EPHEMERAL = "defaultInstanceEphemeral";
+    public static final String DISTRO_SERVER_EXPIRED_MILLIS = "distroServerExpiredMillis";
 }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.config.server.controller;
 
 import com.alibaba.nacos.config.server.constant.Constants;
-import com.alibaba.nacos.config.server.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.config.server.model.*;
 import com.alibaba.nacos.config.server.result.ResultBuilder;
 import com.alibaba.nacos.config.server.result.code.ResultCodeEnum;

File: config/src/main/java/com/alibaba/nacos/config/server/exception/GlobalExceptionHandler.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.config.server.exception;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import org.springframework.dao.DataAccessException;
 import org.springframework.jdbc.CannotGetJdbcConnectionException;

File: config/src/main/java/com/alibaba/nacos/config/server/service/PersistService.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.config.server.service;
 
 import com.alibaba.nacos.config.server.enums.FileTypeEnum;
-import com.alibaba.nacos.config.server.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.config.server.model.*;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.MD5;

File: config/src/main/java/com/alibaba/nacos/config/server/utils/ParamUtils.java
Patch:
@@ -17,7 +17,7 @@
 
 import java.util.Map;
 
-import com.alibaba.nacos.config.server.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 
 import org.apache.commons.lang3.StringUtils;
 

File: console/src/main/java/com/alibaba/nacos/console/controller/NamespaceController.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.console.controller;
 
-import com.alibaba.nacos.config.server.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.config.server.model.RestResult;
 import com.alibaba.nacos.config.server.model.TenantInfo;
 import com.alibaba.nacos.config.server.service.PersistService;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckTask;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.pojo.ClusterInfo;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -24,7 +24,7 @@
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckType;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.naming.consistency.ephemeral.distro.DistroConsistencyServiceImpl;
 import com.alibaba.nacos.naming.core.Instances;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -26,7 +26,7 @@
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.RsInfo;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -30,7 +30,7 @@
 import com.alibaba.nacos.naming.core.Instances;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.NetUtils;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -25,7 +25,7 @@
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.core.*;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.pojo.Subscriber;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.annotation.JSONField;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckStatus;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;

File: naming/src/main/java/com/alibaba/nacos/naming/exception/ResponseExceptionHandler.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.exception;
 
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.misc.Loggers;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
@@ -30,8 +31,8 @@ public class ResponseExceptionHandler {
 
     @ExceptionHandler(NacosException.class)
     private ResponseEntity<String> handleNacosException(NacosException e) {
-        Loggers.SRV_LOG.error("got exception. {}", e.getErrorMsg(), e);
-        return ResponseEntity.status(e.getErrorCode()).body(e.getMessage());
+        Loggers.SRV_LOG.error("got exception. {}", e.getErrMsg(), e);
+        return ResponseEntity.status(e.getErrCode()).body(e.getMessage());
     }
 
     @ExceptionHandler(IllegalArgumentException.class)

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.fastjson.serializer.SerializerFeature;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.common.util.VersionUtils;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.healthcheck.JsonAdapter;
 import com.alibaba.nacos.naming.selector.Selector;
 import com.alibaba.nacos.naming.selector.SelectorJsonAdapter;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/LabelSelector.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.cmdb.service.CmdbReader;
 import com.alibaba.nacos.naming.boot.SpringContext;
 import com.alibaba.nacos.naming.core.Instance;
-import com.alibaba.nacos.naming.exception.NacosException;
+import com.alibaba.nacos.api.exception.NacosException;
 
 import org.apache.commons.lang3.StringUtils;
 

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/ClusterControllerTest.java
Patch:
@@ -16,10 +16,10 @@
 package com.alibaba.nacos.naming.controllers;
 
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.BaseTest;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.Service;
-import com.alibaba.nacos.naming.exception.NacosException;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import org.junit.Assert;
 import org.junit.Before;

File: naming/src/test/java/com/alibaba/nacos/naming/selector/LabelSelectorTest.java
Patch:
@@ -1,7 +1,6 @@
 package com.alibaba.nacos.naming.selector;
 
-import com.alibaba.nacos.naming.exception.NacosException;
-
+import com.alibaba.nacos.api.exception.NacosException;
 import org.apache.commons.lang3.StringUtils;
 import org.junit.Assert;
 import org.junit.Test;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -191,7 +191,7 @@ public int healthyInstanceCount() {
         return healthyCount;
     }
 
-    public boolean meetProtectThreshold() {
+    public boolean triggerFlag() {
         return (healthyInstanceCount() * 1.0 / allIPs().size()) <= getProtectThreshold();
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -311,9 +311,7 @@ private Instance parseInstance(HttpServletRequest request) throws Exception {
             instance.setMetadata(UtilsAndCommons.parseMetadata(metadata));
         }
 
-        if (!instance.validate()) {
-            throw new NacosException(NacosException.INVALID_PARAM, "instance format invalid:" + instance);
-        }
+        instance.validate();
 
         return instance;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -317,9 +317,7 @@ private Instance parseInstance(HttpServletRequest request) throws Exception {
             instance.setMetadata(UtilsAndCommons.parseMetadata(metadata));
         }
 
-        if (!instance.validate()) {
-            throw new NacosException(NacosException.INVALID_PARAM, "instance format invalid:" + instance);
-        }
+        instance.validate();
 
         return instance;
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -20,7 +20,9 @@
 import com.alibaba.nacos.client.config.utils.IOUtils;
 import com.alibaba.nacos.client.config.utils.MD5;
 import com.alibaba.nacos.client.utils.ParamUtil;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.util.UuidUtils;
+import com.alibaba.nacos.common.util.VersionUtils;
 
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
@@ -201,7 +203,7 @@ static private void setHeaders(HttpURLConnection conn, List<String> headers, Str
                 conn.addRequestProperty(iter.next(), iter.next());
             }
         }
-        conn.addRequestProperty("Client-Version", ParamUtil.getClientVersion());
+        conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.VERSION);
         conn.addRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=" + encoding);
 
         String ts = String.valueOf(System.currentTimeMillis());

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -61,7 +61,7 @@ public JSONObject allDomNames(HttpServletRequest request) throws Exception {
         JSONObject result = new JSONObject();
         // For old DNS-F client:
         String dnsfVersion = "1.0.1";
-        String agent = request.getHeader("Client-Version");
+        String agent = WebUtils.getUserAgent(request);
         ClientInfo clientInfo = new ClientInfo(agent);
         if (clientInfo.type == ClientInfo.ClientType.DNS &&
             clientInfo.version.compareTo(VersionUtil.parseVersion(dnsfVersion)) <= 0) {
@@ -122,7 +122,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
             Constants.DEFAULT_NAMESPACE_ID);
 
         String dom = WebUtils.required(request, "dom");
-        String agent = request.getHeader("Client-Version");
+        String agent = WebUtils.getUserAgent(request);
         String clusters = WebUtils.optional(request, "clusters", StringUtils.EMPTY);
         String clientIP = WebUtils.optional(request, "clientIP", StringUtils.EMPTY);
         Integer udpPort = Integer.parseInt(WebUtils.optional(request, "udpPort", "0"));

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -97,7 +98,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             // proxy request to other server if necessary:
             if (method.isAnnotationPresent(CanDistro.class) && !distroMapper.responsible(groupedServiceName)) {
 
-                String userAgent = req.getHeader("User-Agent");
+                String userAgent = req.getHeader(HttpHeaderConsts.USER_AGENT_HEADER);
 
                 if (StringUtils.isNotBlank(userAgent) && userAgent.contains(UtilsAndCommons.NACOS_SERVER_HEADER)) {
                     // This request is sent from peer server, should not be redirected again:

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.net.HttpClient;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import org.apache.http.HttpStatus;
 import org.junit.Assert;
 
@@ -173,7 +174,7 @@ public static void prepareServer(int localPort) {
     public static void prepareServer(int localPort, String status) {
         String url = "http://127.0.0.1:" + localPort + "/nacos/v1/ns/operator/switches?entry=overriddenServerStatus&value=" + status;
         List<String> headers = new ArrayList<String>();
-        headers.add("User-Agent");
+        headers.add(HttpHeaderConsts.USER_AGENT_HEADER);
         headers.add("Nacos-Server");
         HttpClient.HttpResult result =
             HttpClient.request(url, headers, new HashMap<String, String>(), "UTF-8", "PUT");

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -237,7 +237,7 @@ public String update(HttpServletRequest request) throws Exception {
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
             Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
-        float protectThreshold = NumberUtils.toFloat(WebUtils.required(request, "protectThreshold"));
+        float protectThreshold = NumberUtils.toFloat(WebUtils.optional(request, "protectThreshold", "0"));
         String metadata = WebUtils.optional(request, "metadata", StringUtils.EMPTY);
         String selector = WebUtils.optional(request, "selector", StringUtils.EMPTY);
 

File: core/src/main/java/com/alibaba/nacos/core/utils/Constants.java
Patch:
@@ -56,6 +56,6 @@ public interface Constants {
     String IP_ADDRESS = "nacos.inetutils.ip-address";
     String PREFER_HOSTNAME_OVER_IP = "nacos.inetutils.prefer-hostname-over-ip";
     String SYSTEM_PREFER_HOSTNAME_OVER_IP = "nacos.preferHostnameOverIp";
-    String WEN_CONTEXT_PATH = "server.servlet.context-path";
+    String WEB_CONTEXT_PATH = "server.servlet.context-path";
     String COMMA_DIVISION = ",";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/boot/RunningConfig.java
Patch:
@@ -59,7 +59,7 @@ public static int getServerPort() {
     public static String getContextPath() {
 
         if (!isServerInitialized) {
-            String contextPath = PropertyUtil.getProperty(Constants.WEN_CONTEXT_PATH);
+            String contextPath = PropertyUtil.getProperty(Constants.WEB_CONTEXT_PATH);
             if (Constants.ROOT_WEB_CONTEXT_PATH.equals(contextPath)) {
                 return StringUtils.EMPTY;
             } else {

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigAllInfo.java
Patch:
@@ -97,12 +97,10 @@ public void setEffect(String effect) {
         this.effect = effect;
     }
 
-    @Override
     public String getType() {
         return type;
     }
 
-    @Override
     public void setType(String type) {
         this.type = type;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/PersistService.java
Patch:
@@ -3466,15 +3466,15 @@ public List<ConfigAllInfo> findAllConfigInfo4Export(final String dataId, final S
      * failData: import failed data (only with abort for the same configs)
      * skipData: data skipped at import  (only with skip for the same configs)
      */
-    public Map<String, Object> batchInsertOrUpdate(List<ConfigInfo> configInfoList, String srcUser, String srcIp,
+    public Map<String, Object> batchInsertOrUpdate(List<ConfigAllInfo> configInfoList, String srcUser, String srcIp,
                                                    Map<String, Object> configAdvanceInfo, Timestamp time, boolean notify, SameConfigPolicy policy) throws NacosException {
         int succCount = 0;
         int skipCount = 0;
         List<Map<String, String>> failData = null;
         List<Map<String, String>> skipData = null;
 
         for (int i = 0; i < configInfoList.size(); i++) {
-            ConfigInfo configInfo = configInfoList.get(i);
+            ConfigAllInfo configInfo = configInfoList.get(i);
             try {
                 ParamUtils.checkParam(configInfo.getDataId(), configInfo.getGroup(), "datumId", configInfo.getContent());
             } catch (NacosException e) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckProcessorDelegate.java
Patch:
@@ -50,7 +50,7 @@ public void process(HealthCheckTask task) {
         String type = task.getCluster().getHealthChecker().getType();
         HealthCheckProcessor processor = healthCheckProcessorMap.get(type);
         if(processor == null){
-            processor = healthCheckProcessorMap.get("none");
+            processor = healthCheckProcessorMap.get(NoneHealthCheckProcessor.TYPE);
         }
 
         processor.process(task);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -47,6 +47,8 @@
 @Component
 public class HttpHealthCheckProcessor implements HealthCheckProcessor {
 
+    public static final String TYPE = "HTTP";
+
     @Autowired
     private SwitchDomain switchDomain;
 
@@ -79,7 +81,7 @@ public class HttpHealthCheckProcessor implements HealthCheckProcessor {
 
     @Override
     public String getType() {
-        return "HTTP";
+        return TYPE;
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/MysqlHealthCheckProcessor.java
Patch:
@@ -45,6 +45,8 @@
 @Component
 public class MysqlHealthCheckProcessor implements HealthCheckProcessor {
 
+    public static final String TYPE = "MYSQL";
+
     @Autowired
     private HealthCheckCommon healthCheckCommon;
 
@@ -83,7 +85,7 @@ public MysqlHealthCheckProcessor() {
 
     @Override
     public String getType() {
-        return "MYSQL";
+        return TYPE;
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/NoneHealthCheckProcessor.java
Patch:
@@ -26,12 +26,14 @@
 @Component
 public class NoneHealthCheckProcessor implements HealthCheckProcessor {
 
+    public static final String TYPE = "NONE";
+
     @Override
     public void process(HealthCheckTask task) {
     }
 
     @Override
     public String getType() {
-        return "NONE";
+        return TYPE;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/TcpSuperSenseProcessor.java
Patch:
@@ -43,6 +43,8 @@
 @Component
 public class TcpSuperSenseProcessor implements HealthCheckProcessor, Runnable {
 
+    public static final String TYPE = "TCP";
+
     @Autowired
     private HealthCheckCommon healthCheckCommon;
 
@@ -420,6 +422,6 @@ public Void call() {
 
     @Override
     public String getType() {
-        return "TCP";
+        return TYPE;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckProcessorDelegate.java
Patch:
@@ -50,7 +50,7 @@ public void process(HealthCheckTask task) {
         String type = task.getCluster().getHealthChecker().getType();
         HealthCheckProcessor processor = healthCheckProcessorMap.get(type);
         if(processor == null){
-            processor = healthCheckProcessorMap.get("none");
+            processor = healthCheckProcessorMap.get(NoneHealthCheckProcessor.TYPE);
         }
 
         processor.process(task);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -47,6 +47,8 @@
 @Component
 public class HttpHealthCheckProcessor implements HealthCheckProcessor {
 
+    public static final String TYPE = "HTTP";
+
     @Autowired
     private SwitchDomain switchDomain;
 
@@ -79,7 +81,7 @@ public class HttpHealthCheckProcessor implements HealthCheckProcessor {
 
     @Override
     public String getType() {
-        return "HTTP";
+        return TYPE;
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/MysqlHealthCheckProcessor.java
Patch:
@@ -45,6 +45,8 @@
 @Component
 public class MysqlHealthCheckProcessor implements HealthCheckProcessor {
 
+    public static final String TYPE = "MYSQL";
+
     @Autowired
     private HealthCheckCommon healthCheckCommon;
 
@@ -83,7 +85,7 @@ public MysqlHealthCheckProcessor() {
 
     @Override
     public String getType() {
-        return "MYSQL";
+        return TYPE;
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/NoneHealthCheckProcessor.java
Patch:
@@ -26,12 +26,14 @@
 @Component
 public class NoneHealthCheckProcessor implements HealthCheckProcessor {
 
+    public static final String TYPE = "NONE";
+
     @Override
     public void process(HealthCheckTask task) {
     }
 
     @Override
     public String getType() {
-        return "NONE";
+        return TYPE;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/TcpSuperSenseProcessor.java
Patch:
@@ -43,6 +43,8 @@
 @Component
 public class TcpSuperSenseProcessor implements HealthCheckProcessor, Runnable {
 
+    public static final String TYPE = "TCP";
+
     @Autowired
     private HealthCheckCommon healthCheckCommon;
 
@@ -420,6 +422,6 @@ public Void call() {
 
     @Override
     public String getType() {
-        return "TCP";
+        return TYPE;
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckProcessorDelegate.java
Patch:
@@ -50,7 +50,7 @@ public void process(HealthCheckTask task) {
         String type = task.getCluster().getHealthChecker().getType();
         HealthCheckProcessor processor = healthCheckProcessorMap.get(type);
         if(processor == null){
-            processor = healthCheckProcessorMap.get("none");
+            processor = healthCheckProcessorMap.get("NONE");
         }
 
         processor.process(task);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -237,7 +237,7 @@ public String update(HttpServletRequest request) throws Exception {
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
             Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
-        float protectThreshold = NumberUtils.toFloat(WebUtils.required(request, "protectThreshold"));
+        float protectThreshold = NumberUtils.toFloat(WebUtils.optional(request, "protectThreshold", "0"));
         String metadata = WebUtils.optional(request, "metadata", StringUtils.EMPTY);
         String selector = WebUtils.optional(request, "selector", StringUtils.EMPTY);
 

File: common/src/main/java/com/alibaba/nacos/common/constant/HttpHeaderConsts.java
Patch:
@@ -17,6 +17,8 @@
 
 /**
  * Nacos header constants
+ *
+ * @author ly
  */
 public interface HttpHeaderConsts {
 

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -162,4 +162,6 @@ public class Constants {
     public static final String NULL_STRING = "null";
 
     public static final String NUMBER_PATTERN = "^\\d+$";
+
+    public static final String ANY_PATTERN = ".*";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -269,10 +269,10 @@ public JSONObject searchService(HttpServletRequest request) {
 
         Map<String, List<Service>> services = new HashMap<>(16);
         if (StringUtils.isNotBlank(namespaceId)) {
-            services.put(namespaceId, serviceManager.searchServices(namespaceId, ".*" + expr + ".*"));
+            services.put(namespaceId, serviceManager.searchServices(namespaceId, Constants.ANY_PATTERN + expr + Constants.ANY_PATTERN));
         } else {
             for (String namespace : serviceManager.getAllNamespaces()) {
-                services.put(namespace, serviceManager.searchServices(namespace, ".*" + expr + ".*"));
+                services.put(namespace, serviceManager.searchServices(namespace, Constants.ANY_PATTERN + expr + Constants.ANY_PATTERN));
             }
         }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -20,7 +20,9 @@
 import com.alibaba.nacos.client.config.utils.IOUtils;
 import com.alibaba.nacos.client.config.utils.MD5;
 import com.alibaba.nacos.client.utils.ParamUtil;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.common.util.UuidUtils;
+import com.alibaba.nacos.common.util.VersionUtils;
 
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
@@ -201,7 +203,7 @@ static private void setHeaders(HttpURLConnection conn, List<String> headers, Str
                 conn.addRequestProperty(iter.next(), iter.next());
             }
         }
-        conn.addRequestProperty("Client-Version", ParamUtil.getClientVersion());
+        conn.addRequestProperty(HttpHeaderConsts.CLIENT_VERSION_HEADER, VersionUtils.VERSION);
         conn.addRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=" + encoding);
 
         String ts = String.valueOf(System.currentTimeMillis());

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.utils.NamingUtils;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.ServiceManager;
@@ -61,7 +62,7 @@ public JSONObject allDomNames(HttpServletRequest request) throws Exception {
         JSONObject result = new JSONObject();
         // For old DNS-F client:
         String dnsfVersion = "1.0.1";
-        String agent = request.getHeader("Client-Version");
+        String agent = request.getHeader(HttpHeaderConsts.USER_AGENT_HEADER);
         ClientInfo clientInfo = new ClientInfo(agent);
         if (clientInfo.type == ClientInfo.ClientType.DNS &&
             clientInfo.version.compareTo(VersionUtil.parseVersion(dnsfVersion)) <= 0) {
@@ -122,7 +123,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
             Constants.DEFAULT_NAMESPACE_ID);
 
         String dom = WebUtils.required(request, "dom");
-        String agent = request.getHeader("Client-Version");
+        String agent = request.getHeader(HttpHeaderConsts.USER_AGENT_HEADER);
         String clusters = WebUtils.optional(request, "clusters", StringUtils.EMPTY);
         String clientIP = WebUtils.optional(request, "clientIP", StringUtils.EMPTY);
         Integer udpPort = Integer.parseInt(WebUtils.optional(request, "udpPort", "0"));

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.Loggers;
@@ -97,7 +98,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             // proxy request to other server if necessary:
             if (method.isAnnotationPresent(CanDistro.class) && !distroMapper.responsible(groupedServiceName)) {
 
-                String userAgent = req.getHeader("User-Agent");
+                String userAgent = req.getHeader(HttpHeaderConsts.USER_AGENT_HEADER);
 
                 if (StringUtils.isNotBlank(userAgent) && userAgent.contains(UtilsAndCommons.NACOS_SERVER_HEADER)) {
                     // This request is sent from peer server, should not be redirected again:

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.client.naming.net.HttpClient;
+import com.alibaba.nacos.common.constant.HttpHeaderConsts;
 import org.apache.http.HttpStatus;
 import org.junit.Assert;
 
@@ -173,7 +174,7 @@ public static void prepareServer(int localPort) {
     public static void prepareServer(int localPort, String status) {
         String url = "http://127.0.0.1:" + localPort + "/nacos/v1/ns/operator/switches?entry=overriddenServerStatus&value=" + status;
         List<String> headers = new ArrayList<String>();
-        headers.add("User-Agent");
+        headers.add(HttpHeaderConsts.USER_AGENT_HEADER);
         headers.add("Nacos-Server");
         HttpClient.HttpResult result =
             HttpClient.request(url, headers, new HashMap<String, String>(), "UTF-8", "PUT");

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -162,4 +162,6 @@ public class Constants {
     public static final String NULL_STRING = "null";
 
     public static final String NUMBER_PATTERN = "^\\d+$";
+
+    public static final String ANY_PATTERN = ".*";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -269,10 +269,10 @@ public JSONObject searchService(HttpServletRequest request) {
 
         Map<String, List<Service>> services = new HashMap<>(16);
         if (StringUtils.isNotBlank(namespaceId)) {
-            services.put(namespaceId, serviceManager.searchServices(namespaceId, ".*" + expr + ".*"));
+            services.put(namespaceId, serviceManager.searchServices(namespaceId, Constants.ANY_PATTERN + expr + Constants.ANY_PATTERN));
         } else {
             for (String namespace : serviceManager.getAllNamespaces()) {
-                services.put(namespace, serviceManager.searchServices(namespace, ".*" + expr + ".*"));
+                services.put(namespace, serviceManager.searchServices(namespace, Constants.ANY_PATTERN + expr + Constants.ANY_PATTERN));
             }
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -376,6 +376,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
                 Loggers.SRV_LOG.debug("no instance to serve for service: " + serviceName);
             }
             result.put("name", serviceName);
+            result.put("clusters", clusters);
             result.put("hosts", new JSONArray());
             return result;
         }

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -162,4 +162,6 @@ public class Constants {
     public static final String NULL_STRING = "null";
 
     public static final String NUMBER_PATTERN = "^\\d+$";
+
+    public static final String ANY_PATTERN = ".*";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -153,7 +153,7 @@ public Object listDetail(HttpServletRequest request) {
             String keyword = WebUtils.optional(request, "keyword", StringUtils.EMPTY);
 
             List<Service> serviceList = new ArrayList<>(8);
-            serviceManager.getPagedService(namespaceId, pageNo, pageSize, keyword, StringUtils.EMPTY, serviceList);
+            serviceManager.getPagedService(namespaceId, pageNo, pageSize, keyword, StringUtils.EMPTY, serviceList, false);
 
             for (Service service : serviceList) {
                 ServiceDetailInfo serviceDetailInfo = new ServiceDetailInfo();
@@ -259,9 +259,10 @@ private JSONObject serviceList(HttpServletRequest request) {
         int pageSize = Integer.parseInt(WebUtils.required(request, "pageSize"));
         String keyword = WebUtils.optional(request, "keyword", StringUtils.EMPTY);
         String containedInstance = WebUtils.optional(request, "instance", StringUtils.EMPTY);
+        boolean hasIpCount = Boolean.parseBoolean(WebUtils.optional(request, "hasIpCount", "false"));
 
         List<Service> services = new ArrayList<>();
-        int total = serviceManager.getPagedService(namespaceId, page - 1, pageSize, keyword, containedInstance, services);
+        int total = serviceManager.getPagedService(namespaceId, page - 1, pageSize, keyword, containedInstance, services, hasIpCount);
 
         if (CollectionUtils.isEmpty(services)) {
             result.put("serviceList", Collections.emptyList());

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -375,7 +375,7 @@ public void run() {
 
     private void checkDistroHeartbeat() {
 
-        Loggers.EPHEMERAL.debug("check distro heartbeat.");
+        Loggers.SRV_LOG.debug("check distro heartbeat.");
 
         List<Server> servers = distroConfig.get(LOCALHOST_SITE);
         if (CollectionUtils.isEmpty(servers)) {

File: cmdb/src/main/java/com/alibaba/nacos/cmdb/controllers/OperationController.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.cmdb.controllers;
 
-import com.alibaba.nacos.cmdb.core.SwitchAndOptions;
 import com.alibaba.nacos.cmdb.memory.CmdbProvider;
 import com.alibaba.nacos.cmdb.utils.UtilsAndCommons;
 import com.alibaba.nacos.core.utils.WebUtils;

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.alibaba.nacos.config.server.aspect;
 
-import com.alibaba.nacos.config.server.service.ConfigService;
 import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
+import com.alibaba.nacos.config.server.service.ConfigService;
 import com.alibaba.nacos.config.server.utils.GroupKey2;
 import com.alibaba.nacos.config.server.utils.LogUtil;
 import com.alibaba.nacos.config.server.utils.MD5;
@@ -61,7 +61,7 @@ public class RequestLogAspect {
 
     /**
      * publishSingle
-     * */
+     */
     @Around(CLIENT_INTERFACE_PUBLISH_SINGLE_CONFIG)
     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,
                                          HttpServletResponse response, String dataId, String group, String tenant,
@@ -73,7 +73,7 @@ public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest
 
     /**
      * removeAll
-     * */
+     */
     @Around(CLIENT_INTERFACE_REMOVE_ALL_CONFIG)
     public Object interfaceRemoveAll(ProceedingJoinPoint pjp, HttpServletRequest request, HttpServletResponse response,
                                      String dataId, String group, String tenant) throws Throwable {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/CapacityController.java
Patch:
@@ -45,7 +45,9 @@ public class CapacityController {
     private final CapacityService capacityService;
 
     @Autowired
-    public CapacityController(CapacityService capacityService) {this.capacityService = capacityService;}
+    public CapacityController(CapacityService capacityService) {
+        this.capacityService = capacityService;
+    }
 
     @ResponseBody
     @RequestMapping(method = RequestMethod.GET)

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -45,7 +45,9 @@ public class HealthController {
     private String heathWarnStr = "WARN";
 
     @Autowired
-    public HealthController(DynamicDataSource dynamicDataSource) {this.dynamicDataSource = dynamicDataSource;}
+    public HealthController(DynamicDataSource dynamicDataSource) {
+        this.dynamicDataSource = dynamicDataSource;
+    }
 
     @PostConstruct
     public void init() {

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -46,7 +46,9 @@ public class ListenerController {
     private final ConfigSubService configSubService;
 
     @Autowired
-    public ListenerController(ConfigSubService configSubService) {this.configSubService = configSubService;}
+    public ListenerController(ConfigSubService configSubService) {
+        this.configSubService = configSubService;
+    }
 
     /**
      * 获取客户端订阅配置信息

File: config/src/main/java/com/alibaba/nacos/config/server/model/SubscriberStatus.java
Patch:
@@ -27,7 +27,8 @@ public class SubscriberStatus {
     Boolean status;
     String serverIp;
 
-    public SubscriberStatus() {}
+    public SubscriberStatus() {
+    }
 
     public SubscriberStatus(String groupKey, Boolean status, String md5, Long lastTime) {
         this.groupKey = groupKey;

File: config/src/test/java/com/alibaba/nacos/config/server/service/AggrWhitelistTest.java
Patch:
@@ -24,7 +24,6 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/transport/FastJsonSerializer.java
Patch:
@@ -23,13 +23,10 @@
 import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.stereotype.Component;
 
-import java.io.UnsupportedEncodingException;
 import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Map;
 
-import static org.apache.commons.lang3.CharEncoding.UTF_8;
-
 /**
  * Use FastJSON to serialize data
  *

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -177,7 +177,8 @@ public synchronized Datum readDatum(File file, String namespaceId) throws IOExce
                     instancesDatum.key = key;
                     instancesDatum.value = new Instances();
                     instancesDatum.value.setInstanceList(JSON.parseObject(jsonObject.getString("value"),
-                        new TypeReference<List<Instance>>(){}));
+                        new TypeReference<List<Instance>>() {
+                        }));
                     if (!instancesDatum.value.getInstanceList().isEmpty()) {
                         for (Instance instance : instancesDatum.value.getInstanceList()) {
                             instance.setEphemeral(false);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -74,7 +74,7 @@ public String onSyncDatum(HttpServletRequest request, HttpServletResponse respon
         String entity = IOUtils.toString(request.getInputStream(), "UTF-8");
 
         if (StringUtils.isBlank(entity)) {
-            Loggers.EPHEMERAL.error("[onSync] receive empty entity!");
+            Loggers.DISTRO.error("[onSync] receive empty entity!");
             throw new NacosException(NacosException.INVALID_PARAM, "receive empty entity!");
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.naming.core.DistroMapper;
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
+import com.alibaba.nacos.naming.healthcheck.events.InstanceHeartbeatTimeoutEvent;
 import com.alibaba.nacos.naming.misc.*;
 import com.alibaba.nacos.naming.push.PushService;
 import com.ning.http.client.AsyncCompletionHandler;
@@ -82,6 +83,7 @@ public void run() {
                                 instance.getIp(), instance.getPort(), instance.getClusterName(), service.getName(),
                                 UtilsAndCommons.LOCALHOST_SITE, instance.getInstanceHeartBeatTimeOut(), instance.getLastBeat());
                             getPushService().serviceChanged(service);
+                            SpringContext.getAppContext().publishEvent(new InstanceHeartbeatTimeoutEvent(this, instance));
                         }
                     }
                 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -88,8 +88,8 @@ public void run() {
                     }
                     Map<String, String> params = new HashMap<>(10);
                     params.put("result", JSON.toJSONString(list));
-                    if (Loggers.DEBUG_LOG.isDebugEnabled()) {
-                        Loggers.DEBUG_LOG.debug("[HEALTH-SYNC] server: {}, healthCheckResults: {}",
+                    if (Loggers.SRV_LOG.isDebugEnabled()) {
+                        Loggers.SRV_LOG.debug("[HEALTH-SYNC] server: {}, healthCheckResults: {}",
                             server, JSON.toJSONString(list));
                     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -54,7 +54,7 @@ public static void syncCheckSums(Map<String, String> checksumMap, String server)
                     @Override
                     public Object onCompleted(Response response) throws Exception {
                         if (HttpURLConnection.HTTP_OK != response.getStatusCode()) {
-                            Loggers.EPHEMERAL.error("failed to req API: {}, code: {}, msg: {}",
+                            Loggers.DISTRO.error("failed to req API: {}, code: {}, msg: {}",
                                 "http://" + server + RunningConfig.getContextPath() +
                                     UtilsAndCommons.NACOS_NAMING_CONTEXT + TIMESTAMP_SYNC_URL,
                                 response.getStatusCode(), response.getResponseBody());
@@ -64,13 +64,13 @@ public Object onCompleted(Response response) throws Exception {
 
                     @Override
                     public void onThrowable(Throwable t) {
-                        Loggers.EPHEMERAL.error("failed to req API:" + "http://" + server
+                        Loggers.DISTRO.error("failed to req API:" + "http://" + server
                             + RunningConfig.getContextPath()
                             + UtilsAndCommons.NACOS_NAMING_CONTEXT + TIMESTAMP_SYNC_URL, t);
                     }
                 });
         } catch (Exception e) {
-            Loggers.EPHEMERAL.warn("NamingProxy", e);
+            Loggers.DISTRO.warn("NamingProxy", e);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -79,7 +79,9 @@ public Message get(String serverIP, String key) {
 
         String result;
         try {
-            Loggers.SRV_LOG.info("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
+            if (Loggers.SRV_LOG.isDebugEnabled()) {
+                Loggers.SRV_LOG.debug("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
+            }
             result = NamingProxy.reqAPI(RunningConfig.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/" + "statuses", params, serverIP);
         } catch (Exception e) {

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -275,7 +275,9 @@ public static void removeClientIfZombie() {
             size += clientConcurrentMap.size();
         }
 
-        Loggers.PUSH.info("[NACOS-PUSH] clientMap size: {}", size);
+        if (Loggers.PUSH.isDebugEnabled()) {
+            Loggers.PUSH.debug("[NACOS-PUSH] clientMap size: {}", size);
+        }
 
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -74,7 +74,7 @@ public String onSyncDatum(HttpServletRequest request, HttpServletResponse respon
         String entity = IOUtils.toString(request.getInputStream(), "UTF-8");
 
         if (StringUtils.isBlank(entity)) {
-            Loggers.EPHEMERAL.error("[onSync] receive empty entity!");
+            Loggers.DISTRO.error("[onSync] receive empty entity!");
             throw new NacosException(NacosException.INVALID_PARAM, "receive empty entity!");
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -88,8 +88,8 @@ public void run() {
                     }
                     Map<String, String> params = new HashMap<>(10);
                     params.put("result", JSON.toJSONString(list));
-                    if (Loggers.DEBUG_LOG.isDebugEnabled()) {
-                        Loggers.DEBUG_LOG.debug("[HEALTH-SYNC] server: {}, healthCheckResults: {}",
+                    if (Loggers.SRV_LOG.isDebugEnabled()) {
+                        Loggers.SRV_LOG.debug("[HEALTH-SYNC] server: {}, healthCheckResults: {}",
                             server, JSON.toJSONString(list));
                     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -54,7 +54,7 @@ public static void syncCheckSums(Map<String, String> checksumMap, String server)
                     @Override
                     public Object onCompleted(Response response) throws Exception {
                         if (HttpURLConnection.HTTP_OK != response.getStatusCode()) {
-                            Loggers.EPHEMERAL.error("failed to req API: {}, code: {}, msg: {}",
+                            Loggers.DISTRO.error("failed to req API: {}, code: {}, msg: {}",
                                 "http://" + server + RunningConfig.getContextPath() +
                                     UtilsAndCommons.NACOS_NAMING_CONTEXT + TIMESTAMP_SYNC_URL,
                                 response.getStatusCode(), response.getResponseBody());
@@ -64,13 +64,13 @@ public Object onCompleted(Response response) throws Exception {
 
                     @Override
                     public void onThrowable(Throwable t) {
-                        Loggers.EPHEMERAL.error("failed to req API:" + "http://" + server
+                        Loggers.DISTRO.error("failed to req API:" + "http://" + server
                             + RunningConfig.getContextPath()
                             + UtilsAndCommons.NACOS_NAMING_CONTEXT + TIMESTAMP_SYNC_URL, t);
                     }
                 });
         } catch (Exception e) {
-            Loggers.EPHEMERAL.warn("NamingProxy", e);
+            Loggers.DISTRO.warn("NamingProxy", e);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -79,7 +79,9 @@ public Message get(String serverIP, String key) {
 
         String result;
         try {
-            Loggers.SRV_LOG.info("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
+            if (Loggers.SRV_LOG.isDebugEnabled()) {
+                Loggers.SRV_LOG.debug("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
+            }
             result = NamingProxy.reqAPI(RunningConfig.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/" + "statuses", params, serverIP);
         } catch (Exception e) {

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -275,7 +275,9 @@ public static void removeClientIfZombie() {
             size += clientConcurrentMap.size();
         }
 
-        Loggers.PUSH.info("[NACOS-PUSH] clientMap size: {}", size);
+        if (Loggers.PUSH.isDebugEnabled()) {
+            Loggers.PUSH.debug("[NACOS-PUSH] clientMap size: {}", size);
+        }
 
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -643,11 +643,11 @@ public Map<String, Service> getServiceMap(String namespaceId) {
 
     public int getPagedService(String namespaceId, int startPage, int pageSize, String keyword, String containedInstance, List<Service> serviceList, boolean hasIpCount) {
 
-        if (chooseServiceMap(namespaceId) == null ) {
+        if (chooseServiceMap(namespaceId) == null) {
             return 0;
         }
 
-        List<Service> matchList = searchServices(namespaceId, StringUtils.isNotBlank(keyword)?".*" + keyword + ".*":null, hasIpCount);
+        List<Service> matchList = searchServices(namespaceId, StringUtils.isNotBlank(keyword) ? ".*" + keyword + ".*" : null, hasIpCount);
 
         if (StringUtils.isNotBlank(containedInstance)) {
 

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -154,7 +154,7 @@
     /**
      * The placeholder of {@link NacosProperties#ENABLE_REMOTE_SYNC_CONFIG enableRemoteSyncConfig}, the value is <code>"${nacos.enableRemoteSyncConfig:}"</code>
      */
-    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + "}";
+    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + ":}";
 
     /**
      * The property of "endpoint"

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -32,6 +32,7 @@
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.utils.*;
+import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.util.HttpMethod;
@@ -481,18 +482,17 @@ public String reqAPI(String api, Map<String, String> params, List<String> server
     private void checkSignature(Map<String, String> params) {
         String ak = getAccessKey();
         String sk = getSecretKey();
+        params.put("app", AppNameUtils.getAppName());
         if (StringUtils.isEmpty(ak) && StringUtils.isEmpty(sk)) {
             return;
         }
 
         try {
-            String app = System.getProperty("project.name");
             String signData = getSignData(params.get("serviceName"));
             String signature = SignUtil.sign(signData, sk);
             params.put("signature", signature);
             params.put("data", signData);
             params.put("ak", ak);
-            params.put("app", app);
         } catch (Exception e) {
             e.printStackTrace();
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
+import com.alibaba.nacos.common.util.VersionUtils;
+
 /**
  * @author xuanyin.zy
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v1.1.1";
+    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.VERSION;
 
     public static String WEB_CONTEXT = "/nacos";
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -143,6 +143,9 @@ public void onChange(String key, Service service) throws Exception {
 
             if (oldDom != null) {
                 oldDom.update(service);
+                // re-listen to handle the situation when the underlying listener is removed:
+                consistencyService.listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), true), oldDom);
+                consistencyService.listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), false), oldDom);
             } else {
                 putService(service);
                 service.init();

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -52,7 +52,7 @@ public FilterRegistrationBean authFilterRegistration() {
         FilterRegistrationBean<AuthFilter> registration = new FilterRegistrationBean<>();
 
         registration.setFilter(authFilter());
-        registration.addUrlPatterns("/api/*", "/raft/*");
+        registration.addUrlPatterns("/v1/ns/*");
         registration.setName("authFilter");
         registration.setOrder(5);
 

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -154,7 +154,7 @@
     /**
      * The placeholder of {@link NacosProperties#ENABLE_REMOTE_SYNC_CONFIG enableRemoteSyncConfig}, the value is <code>"${nacos.enableRemoteSyncConfig:}"</code>
      */
-    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + "}";
+    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + ":}";
 
     /**
      * The property of "endpoint"

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -32,6 +32,7 @@
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.utils.*;
+import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.util.HttpMethod;
@@ -481,18 +482,17 @@ public String reqAPI(String api, Map<String, String> params, List<String> server
     private void checkSignature(Map<String, String> params) {
         String ak = getAccessKey();
         String sk = getSecretKey();
+        params.put("app", AppNameUtils.getAppName());
         if (StringUtils.isEmpty(ak) && StringUtils.isEmpty(sk)) {
             return;
         }
 
         try {
-            String app = System.getProperty("project.name");
             String signData = getSignData(params.get("serviceName"));
             String signature = SignUtil.sign(signData, sk);
             params.put("signature", signature);
             params.put("data", signData);
             params.put("ak", ak);
-            params.put("app", app);
         } catch (Exception e) {
             e.printStackTrace();
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
+import com.alibaba.nacos.common.util.VersionUtils;
+
 /**
  * @author xuanyin.zy
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v1.1.1";
+    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.VERSION;
 
     public static String WEB_CONTEXT = "/nacos";
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -96,7 +96,7 @@ public String update(HttpServletRequest request) throws Exception {
         if (StringUtils.isBlank(healthyString)) {
             throw new IllegalArgumentException("Param 'healthy' is required.");
         }
-        
+
         valid = BooleanUtils.toBoolean(healthyString);
 
         Service service = serviceManager.getService(namespaceId, serviceName);
@@ -108,7 +108,7 @@ public String update(HttpServletRequest request) throws Exception {
                     Loggers.EVT_LOG.info((valid ? "[IP-ENABLED]" : "[IP-DISABLED]") + " ips: "
                         + instance.getIp() + ":" + instance.getPort() + "@" + instance.getClusterName()
                         + ", service: " + serviceName + ", msg: update thought HealthController api");
-                    pushService.serviceChanged(namespaceId, service.getName());
+                    pushService.serviceChanged(service);
                     break;
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -375,6 +375,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
             if (Loggers.DEBUG_LOG.isDebugEnabled()) {
                 Loggers.DEBUG_LOG.debug("no instance to serve for service: " + serviceName);
             }
+            result.put("name", serviceName);
             result.put("hosts", new JSONArray());
             return result;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -239,7 +239,7 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {
         }
 
         setLastModifiedMillis(System.currentTimeMillis());
-        getPushService().serviceChanged(namespaceId, getName());
+        getPushService().serviceChanged(this);
         StringBuilder stringBuilder = new StringBuilder();
 
         for (Instance instance : allIPs()) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -83,7 +83,7 @@ public void run() {
                         instance.setHealthy(true);
                         Loggers.EVT_LOG.info("service: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: client beat ok",
                             cluster.getService().getName(), ip, port, cluster.getName(), UtilsAndCommons.LOCALHOST_SITE);
-                        getPushService().serviceChanged(service.getNamespaceId(), this.service.getName());
+                        getPushService().serviceChanged(service);
                     }
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -52,7 +52,7 @@ public FilterRegistrationBean authFilterRegistration() {
         FilterRegistrationBean<AuthFilter> registration = new FilterRegistrationBean<>();
 
         registration.setFilter(authFilter());
-        registration.addUrlPatterns("/api/*", "/raft/*");
+        registration.addUrlPatterns("/v1/ns/*");
         registration.setName("authFilter");
         registration.setOrder(5);
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -52,7 +52,7 @@ public FilterRegistrationBean authFilterRegistration() {
         FilterRegistrationBean<AuthFilter> registration = new FilterRegistrationBean<>();
 
         registration.setFilter(authFilter());
-        registration.addUrlPatterns("/api/*", "/raft/*");
+        registration.addUrlPatterns("/v1/ns/*");
         registration.setName("authFilter");
         registration.setOrder(5);
 

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -32,6 +32,7 @@
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.utils.*;
+import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.util.HttpMethod;
@@ -481,18 +482,17 @@ public String reqAPI(String api, Map<String, String> params, List<String> server
     private void checkSignature(Map<String, String> params) {
         String ak = getAccessKey();
         String sk = getSecretKey();
+        params.put("app", AppNameUtils.getAppName());
         if (StringUtils.isEmpty(ak) && StringUtils.isEmpty(sk)) {
             return;
         }
 
         try {
-            String app = System.getProperty("project.name");
             String signData = getSignData(params.get("serviceName"));
             String signature = SignUtil.sign(signData, sk);
             params.put("signature", signature);
             params.put("data", signData);
             params.put("ak", ak);
-            params.put("app", app);
         } catch (Exception e) {
             e.printStackTrace();
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
+import com.alibaba.nacos.common.util.VersionUtils;
+
 /**
  * @author xuanyin.zy
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v1.1.1";
+    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.VERSION;
 
     public static String WEB_CONTEXT = "/nacos";
 

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -154,7 +154,7 @@
     /**
      * The placeholder of {@link NacosProperties#ENABLE_REMOTE_SYNC_CONFIG enableRemoteSyncConfig}, the value is <code>"${nacos.enableRemoteSyncConfig:}"</code>
      */
-    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + "}";
+    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + ":}";
 
     /**
      * The property of "endpoint"

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -52,7 +52,7 @@ public FilterRegistrationBean authFilterRegistration() {
         FilterRegistrationBean<AuthFilter> registration = new FilterRegistrationBean<>();
 
         registration.setFilter(authFilter());
-        registration.addUrlPatterns("/api/*", "/raft/*");
+        registration.addUrlPatterns("/v1/ns/*");
         registration.setName("authFilter");
         registration.setOrder(5);
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -143,6 +143,9 @@ public void onChange(String key, Service service) throws Exception {
 
             if (oldDom != null) {
                 oldDom.update(service);
+                // re-listen to handle the situation when the underlying listener is removed:
+                consistencyService.listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), true), oldDom);
+                consistencyService.listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), false), oldDom);
             } else {
                 putService(service);
                 service.init();

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -104,7 +104,7 @@ public Thread newThread(Runnable r) {
     private Map<String, String> syncChecksumTasks = new ConcurrentHashMap<>(16);
 
     @PostConstruct
-    public void init() throws Exception {
+    public void init() {
         GlobalExecutor.submit(new Runnable() {
             @Override
             public void run() {
@@ -154,6 +154,7 @@ public void put(String key, Record value) throws NacosException {
     @Override
     public void remove(String key) throws NacosException {
         onRemove(key);
+        listeners.remove(key);
     }
 
     @Override
@@ -186,8 +187,6 @@ public void onRemove(String key) {
             return;
         }
 
-        listeners.remove(key);
-
         notifier.addTask(key, ApplyAction.DELETE);
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -143,6 +143,9 @@ public void onChange(String key, Service service) throws Exception {
 
             if (oldDom != null) {
                 oldDom.update(service);
+                // re-listen to handle the situation when the underlying listener is removed:
+                consistencyService.listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), true), oldDom);
+                consistencyService.listen(KeyBuilder.buildInstanceListKey(service.getNamespaceId(), service.getName(), false), oldDom);
             } else {
                 putService(service);
                 service.init();

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java
Patch:
@@ -74,7 +74,7 @@ public String onSyncDatum(HttpServletRequest request, HttpServletResponse respon
         String entity = IOUtils.toString(request.getInputStream(), "UTF-8");
 
         if (StringUtils.isBlank(entity)) {
-            Loggers.EPHEMERAL.error("[onSync] receive empty entity!");
+            Loggers.DISTRO.error("[onSync] receive empty entity!");
             throw new NacosException(NacosException.INVALID_PARAM, "receive empty entity!");
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckCommon.java
Patch:
@@ -88,8 +88,8 @@ public void run() {
                     }
                     Map<String, String> params = new HashMap<>(10);
                     params.put("result", JSON.toJSONString(list));
-                    if (Loggers.DEBUG_LOG.isDebugEnabled()) {
-                        Loggers.DEBUG_LOG.debug("[HEALTH-SYNC] server: {}, healthCheckResults: {}",
+                    if (Loggers.SRV_LOG.isDebugEnabled()) {
+                        Loggers.SRV_LOG.debug("[HEALTH-SYNC] server: {}, healthCheckResults: {}",
                             server, JSON.toJSONString(list));
                     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -54,7 +54,7 @@ public static void syncCheckSums(Map<String, String> checksumMap, String server)
                     @Override
                     public Object onCompleted(Response response) throws Exception {
                         if (HttpURLConnection.HTTP_OK != response.getStatusCode()) {
-                            Loggers.EPHEMERAL.error("failed to req API: {}, code: {}, msg: {}",
+                            Loggers.DISTRO.error("failed to req API: {}, code: {}, msg: {}",
                                 "http://" + server + RunningConfig.getContextPath() +
                                     UtilsAndCommons.NACOS_NAMING_CONTEXT + TIMESTAMP_SYNC_URL,
                                 response.getStatusCode(), response.getResponseBody());
@@ -64,13 +64,13 @@ public Object onCompleted(Response response) throws Exception {
 
                     @Override
                     public void onThrowable(Throwable t) {
-                        Loggers.EPHEMERAL.error("failed to req API:" + "http://" + server
+                        Loggers.DISTRO.error("failed to req API:" + "http://" + server
                             + RunningConfig.getContextPath()
                             + UtilsAndCommons.NACOS_NAMING_CONTEXT + TIMESTAMP_SYNC_URL, t);
                     }
                 });
         } catch (Exception e) {
-            Loggers.EPHEMERAL.warn("NamingProxy", e);
+            Loggers.DISTRO.warn("NamingProxy", e);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -79,7 +79,9 @@ public Message get(String serverIP, String key) {
 
         String result;
         try {
-            Loggers.SRV_LOG.info("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
+            if (Loggers.SRV_LOG.isDebugEnabled()) {
+                Loggers.SRV_LOG.debug("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
+            }
             result = NamingProxy.reqAPI(RunningConfig.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/" + "statuses", params, serverIP);
         } catch (Exception e) {

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -275,7 +275,9 @@ public static void removeClientIfZombie() {
             size += clientConcurrentMap.size();
         }
 
-        Loggers.PUSH.info("[NACOS-PUSH] clientMap size: {}", size);
+        if (Loggers.PUSH.isDebugEnabled()) {
+            Loggers.PUSH.debug("[NACOS-PUSH] clientMap size: {}", size);
+        }
 
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -294,7 +294,6 @@ public String queryList(String serviceName, String clusters, int udpPort, boolea
         params.put("udpPort", String.valueOf(udpPort));
         params.put("clientIP", NetUtils.localIP());
         params.put("healthyOnly", String.valueOf(healthyOnly));
-        params.put("app", AppNameUtils.getAppName());
 
         return reqAPI(UtilAndComs.NACOS_URL_BASE + "/instance/list", params, HttpMethod.GET);
     }
@@ -483,18 +482,17 @@ public String reqAPI(String api, Map<String, String> params, List<String> server
     private void checkSignature(Map<String, String> params) {
         String ak = getAccessKey();
         String sk = getSecretKey();
+        params.put("app", AppNameUtils.getAppName());
         if (StringUtils.isEmpty(ak) && StringUtils.isEmpty(sk)) {
             return;
         }
 
         try {
-            String app = System.getProperty("project.name");
             String signData = getSignData(params.get("serviceName"));
             String signature = SignUtil.sign(signData, sk);
             params.put("signature", signature);
             params.put("data", signData);
             params.put("ak", ak);
-            params.put("app", app);
         } catch (Exception e) {
             e.printStackTrace();
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
+import com.alibaba.nacos.common.util.VersionUtils;
+
 /**
  * @author xuanyin.zy
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v1.1.1";
+    public static final String VERSION = "Nacos-Java-Client:v" + VersionUtils.VERSION;
 
     public static String WEB_CONTEXT = "/nacos";
 

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -32,6 +32,7 @@
 import com.alibaba.nacos.client.monitor.MetricsMonitor;
 import com.alibaba.nacos.client.naming.beat.BeatInfo;
 import com.alibaba.nacos.client.naming.utils.*;
+import com.alibaba.nacos.client.utils.AppNameUtils;
 import com.alibaba.nacos.client.utils.StringUtils;
 import com.alibaba.nacos.client.utils.TemplateUtils;
 import com.alibaba.nacos.common.util.HttpMethod;
@@ -293,6 +294,7 @@ public String queryList(String serviceName, String clusters, int udpPort, boolea
         params.put("udpPort", String.valueOf(udpPort));
         params.put("clientIP", NetUtils.localIP());
         params.put("healthyOnly", String.valueOf(healthyOnly));
+        params.put("app", AppNameUtils.getAppName());
 
         return reqAPI(UtilAndComs.NACOS_URL_BASE + "/instance/list", params, HttpMethod.GET);
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -20,7 +20,7 @@
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v1.0.1";
+    public static final String VERSION = "Nacos-Java-Client:v1.1.1";
 
     public static String WEB_CONTEXT = "/nacos";
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -375,6 +375,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
             if (Loggers.DEBUG_LOG.isDebugEnabled()) {
                 Loggers.DEBUG_LOG.debug("no instance to serve for service: " + serviceName);
             }
+            result.put("name", serviceName);
             result.put("hosts", new JSONArray());
             return result;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -375,6 +375,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
             if (Loggers.DEBUG_LOG.isDebugEnabled()) {
                 Loggers.DEBUG_LOG.debug("no instance to serve for service: " + serviceName);
             }
+            result.put("name", serviceName);
             result.put("hosts", new JSONArray());
             return result;
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -20,7 +20,7 @@
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Java-Client:v1.0.1";
+    public static final String VERSION = "Nacos-Java-Client:v1.1.1";
 
     public static String WEB_CONTEXT = "/nacos";
 

File: api/src/main/java/com/alibaba/nacos/api/annotation/NacosProperties.java
Patch:
@@ -154,7 +154,7 @@
     /**
      * The placeholder of {@link NacosProperties#ENABLE_REMOTE_SYNC_CONFIG enableRemoteSyncConfig}, the value is <code>"${nacos.enableRemoteSyncConfig:}"</code>
      */
-    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + "}";
+    String ENABLE_REMOTE_SYNC_CONFIG_PLACEHOLDER = "${" + PREFIX + ENABLE_REMOTE_SYNC_CONFIG + ":}";
 
     /**
      * The property of "endpoint"

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -274,7 +274,7 @@ private void updateIfChanged(List<String> newList) {
             return;
         }
 
-        List<String> newServerAddrList = new ArrayList<>();
+        List<String> newServerAddrList = new ArrayList<String>();
         for (String server : newList) {
             if (server.startsWith(HTTP) || server.startsWith(HTTPS)) {
                 newServerAddrList.add(server);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -34,12 +34,10 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.utils.IOUtils;
 
-import com.alibaba.nacos.client.identify.Constants;
 import com.alibaba.nacos.client.utils.*;
 import org.slf4j.Logger;
 
 
-import org.slf4j.Logger;
 
 /**
  * Serverlist Manager

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -86,10 +86,10 @@ public BeatTask(BeatInfo beatInfo) {
 
         @Override
         public void run() {
-            long result = serverProxy.sendBeat(beatInfo);
             if (beatInfo.isStopped()) {
                 return;
             }
+            long result = serverProxy.sendBeat(beatInfo);
             long nextTime = result > 0 ? result : beatInfo.getPeriod();
             executorService.schedule(new BeatTask(beatInfo), nextTime, TimeUnit.MILLISECONDS);
         }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -34,12 +34,10 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.utils.IOUtils;
 
-import com.alibaba.nacos.client.identify.Constants;
 import com.alibaba.nacos.client.utils.*;
 import org.slf4j.Logger;
 
 
-import org.slf4j.Logger;
 
 /**
  * Serverlist Manager

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -238,7 +238,9 @@ public void deregisterInstance(String serviceName, Instance instance) throws Nac
 
     @Override
     public void deregisterInstance(String serviceName, String groupName, Instance instance) throws NacosException {
-        beatReactor.removeBeatInfo(NamingUtils.getGroupedName(serviceName, groupName), instance.getIp(), instance.getPort());
+        if (instance.isEphemeral()) {
+            beatReactor.removeBeatInfo(NamingUtils.getGroupedName(serviceName, groupName), instance.getIp(), instance.getPort());
+        }
         serverProxy.deregisterService(NamingUtils.getGroupedName(serviceName, groupName), instance);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -64,6 +64,9 @@ public void addBeatInfo(String serviceName, BeatInfo beatInfo) {
     public void removeBeatInfo(String serviceName, String ip, int port) {
         NAMING_LOGGER.info("[BEAT] removing beat: {}:{}:{} from beat map.", serviceName, ip, port);
         BeatInfo beatInfo = dom2Beat.remove(buildKey(serviceName, ip, port));
+        if (beatInfo == null) {
+            return;
+        }
         beatInfo.setStopped(true);
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -217,6 +217,7 @@ public void updateInstance(String serviceName, String groupName, Instance instan
         params.put("ip", instance.getIp());
         params.put("port", String.valueOf(instance.getPort()));
         params.put("weight", String.valueOf(instance.getWeight()));
+        params.put("enabled", String.valueOf(instance.isEnabled()));
         params.put("ephemeral", String.valueOf(instance.isEphemeral()));
         params.put("metadata", JSON.toJSONString(instance.getMetadata()));
 

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -218,7 +218,7 @@ public void updateInstance(String serviceName, String groupName, Instance instan
         params.put("ip", instance.getIp());
         params.put("port", String.valueOf(instance.getPort()));
         params.put("weight", String.valueOf(instance.getWeight()));
-        params.put("enable", String.valueOf(instance.isEnabled()));
+        params.put("enabled", String.valueOf(instance.isEnabled()));
         params.put("ephemeral", String.valueOf(instance.isEphemeral()));
         params.put("metadata", JSON.toJSONString(instance.getMetadata()));
 

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingMaintainService_ITCase.java
Patch:
@@ -99,7 +99,6 @@ public void updateInstance() throws NacosException {
         List<Instance> instances = namingService.getAllInstances(serviceName, true);
 
         Assert.assertEquals(instances.size(), 1);
-        Assert.assertFalse(instances.get(0).isEnabled());
         System.out.println(instances.get(0));
     }
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -55,7 +55,7 @@ public class Cluster {
      */
     private boolean useIPPort4Check = true;
 
-    private Map<String, String> metadata = new HashMap<String, String>();
+    private Map<String, String> metadata = new HashMap<>();
 
     public Cluster() {
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -21,9 +21,9 @@
 import com.alibaba.fastjson.TypeReference;
 import com.alibaba.nacos.common.util.IoUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
-import com.alibaba.nacos.naming.consistency.RecordListener;
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
+import com.alibaba.nacos.naming.consistency.RecordListener;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftConsistencyServiceImpl;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeer;
@@ -57,7 +57,8 @@
  * @since 1.0.0
  */
 @RestController
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/raft")
+@RequestMapping({UtilsAndCommons.NACOS_NAMING_CONTEXT + "/raft",
+    UtilsAndCommons.NACOS_SERVER_CONTEXT + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/raft"})
 public class RaftController {
 
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -109,6 +109,7 @@ public void init() {
             return;
         }
         checkTask = new HealthCheckTask(this);
+
         HealthCheckReactor.scheduleCheck(checkTask);
         inited = true;
     }
@@ -299,7 +300,7 @@ public List<Instance> subtract(Collection<Instance> a, Collection<Instance> b) {
             mapa.put(o.getIp() + ":" + o.getPort(), o);
         }
 
-        List<Instance> result = new ArrayList<Instance>();
+        List<Instance> result = new ArrayList<>();
 
         for (Instance o : a) {
             if (!mapa.containsKey(o.getIp() + ":" + o.getPort())) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -78,7 +78,7 @@ public class Service extends com.alibaba.nacos.api.naming.pojo.Service implement
      */
     private long pushCacheMillis = 0L;
 
-    private Map<String, Cluster> clusterMap = new HashMap<String, Cluster>();
+    private Map<String, Cluster> clusterMap = new HashMap<>();
 
     public Service() {
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -218,6 +218,7 @@ public void updateInstance(String serviceName, String groupName, Instance instan
         params.put("ip", instance.getIp());
         params.put("port", String.valueOf(instance.getPort()));
         params.put("weight", String.valueOf(instance.getWeight()));
+        params.put("enable", String.valueOf(instance.isEnabled()));
         params.put("ephemeral", String.valueOf(instance.isEphemeral()));
         params.put("metadata", JSON.toJSONString(instance.getMetadata()));
 

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -323,7 +323,7 @@ private STSCredential getSTSCredential() throws IOException {
             }
         }
         String stsResponse = getSTSResponse();
-        STSCredential stsCredentialTmp = (STSCredential) JSONUtils.deserializeObject(stsResponse,
+        STSCredential stsCredentialTmp = JSONUtils.deserializeObject(stsResponse,
             new TypeReference<STSCredential>() {
             });
         sTSCredential = stsCredentialTmp;

File: client/src/main/java/com/alibaba/nacos/client/utils/JSONUtils.java
Patch:
@@ -15,11 +15,12 @@
  */
 package com.alibaba.nacos.client.utils;
 
-import java.io.IOException;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
 
+import java.io.IOException;
+
 /**
  * Json tool
  *
@@ -42,7 +43,7 @@ public static Object deserializeObject(String s, Class<?> clazz) throws IOExcept
         return mapper.readValue(s, clazz);
     }
 
-    public static Object deserializeObject(String s, TypeReference<?> typeReference)
+    public static <T> T deserializeObject(String s, TypeReference<T> typeReference)
         throws IOException {
         return mapper.readValue(s, typeReference);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -187,10 +187,10 @@ public SampleResult call() throws Exception {
                  */
                 if (result.code == HttpURLConnection.HTTP_OK) {
                     String json = result.content;
-                    Object resultObj = JSONUtils.deserializeObject(json,
+                    SampleResult resultObj = JSONUtils.deserializeObject(json,
                         new TypeReference<SampleResult>() {
                         });
-                    return (SampleResult)resultObj;
+                    return resultObj;
 
                 } else {
 

File: config/src/main/java/com/alibaba/nacos/config/server/utils/JSONUtils.java
Patch:
@@ -15,11 +15,12 @@
  */
 package com.alibaba.nacos.config.server.utils;
 
-import java.io.IOException;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
 
+import java.io.IOException;
+
 
 /**
  * json util
@@ -43,7 +44,7 @@ public static Object deserializeObject(String s, Class<?> clazz) throws IOExcept
         return mapper.readValue(s, clazz);
     }
 
-    public static Object deserializeObject(String s, TypeReference<?> typeReference)
+    public static <T> T deserializeObject(String s, TypeReference<T> typeReference)
         throws IOException {
         return mapper.readValue(s, typeReference);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/ResponseMonitor.java
Patch:
@@ -24,8 +24,8 @@
  * @author Nacos
  */
 public class ResponseMonitor {
-    static AtomicLong[] getConfigCountDetail = new AtomicLong[8];
-    static AtomicLong getConfigCount = new AtomicLong();
+    private static AtomicLong[] getConfigCountDetail = new AtomicLong[8];
+    private static AtomicLong getConfigCount = new AtomicLong();
     private static final int MS_50 = 50;
     private static final int MS_100 = 100;
     private static final int MS_200 = 200;

File: client/src/main/java/com/alibaba/nacos/client/config/filter/impl/ConfigFilterChainManager.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.api.config.filter.IConfigRequest;
 import com.alibaba.nacos.api.config.filter.IConfigResponse;
 import com.alibaba.nacos.api.exception.NacosException;
+
 import com.google.common.collect.Lists;
 
 /**
@@ -72,8 +73,7 @@ public VirtualFilterChain(List<? extends IConfigFilter> additionalFilters) {
 
         @Override
         public void doFilter(final IConfigRequest request, final IConfigResponse response) throws NacosException {
-            if (this.currentPosition == this.additionalFilters.size()) {
-            } else {
+            if (this.currentPosition != this.additionalFilters.size()) {
                 this.currentPosition++;
                 IConfigFilter nextFilter = this.additionalFilters.get(this.currentPosition - 1);
                 nextFilter.doFilter(request, response, this);

File: client/src/main/java/com/alibaba/nacos/client/config/utils/ParamUtils.java
Patch:
@@ -43,9 +43,7 @@ public static boolean isValid(String param) {
         int length = param.length();
         for (int i = 0; i < length; i++) {
             char ch = param.charAt(i);
-            if (Character.isLetterOrDigit(ch)) {
-            } else if (isValidChar(ch)) {
-            } else {
+            if (!Character.isLetterOrDigit(ch) && !isValidChar(ch)) {
                 return false;
             }
         }

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java
Patch:
@@ -42,7 +42,7 @@ public static ConfigService createConfigService(Properties properties) throws Na
             ConfigService vendorImpl = (ConfigService) constructor.newInstance(properties);
             return vendorImpl;
         } catch (Throwable e) {
-            throw new NacosException(-400, e.getMessage());
+            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);
         }
     }
 

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java
Patch:
@@ -34,7 +34,7 @@ public static NamingService createNamingService(String serverList) throws NacosE
             NamingService vendorImpl = (NamingService)constructor.newInstance(serverList);
             return vendorImpl;
         } catch (Throwable e) {
-            throw new NacosException(-400, e.getMessage());
+            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);
         }
     }
 
@@ -45,7 +45,7 @@ public static NamingService createNamingService(Properties properties) throws Na
             NamingService vendorImpl = (NamingService)constructor.newInstance(properties);
             return vendorImpl;
         } catch (Throwable e) {
-            throw new NacosException(-400, e.getMessage());
+            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);
         }
     }
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingMaintainFactory.java
Patch:
@@ -34,7 +34,7 @@ public static NamingMaintainService createMaintainService(String serverList) thr
             NamingMaintainService vendorImpl = (NamingMaintainService)constructor.newInstance(serverList);
             return vendorImpl;
         } catch (Throwable e) {
-            throw new NacosException(-400, e.getMessage());
+            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);
         }
     }
 
@@ -45,7 +45,7 @@ public static NamingMaintainService createMaintainService(Properties properties)
             NamingMaintainService vendorImpl = (NamingMaintainService)constructor.newInstance(properties);
             return vendorImpl;
         } catch (Throwable e) {
-            throw new NacosException(-400, e.getMessage());
+            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);
         }
     }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -237,7 +237,7 @@ public String getServerConfig(String dataId, String group, String tenant, long r
                 "[%s] [sub-server] get server config exception, dataId=%s, group=%s, tenant=%s", agent.getName(),
                 dataId, group, tenant);
             LOGGER.error(message, e);
-            throw new NacosException(NacosException.SERVER_ERROR, e.getMessage());
+            throw new NacosException(NacosException.SERVER_ERROR, e);
         }
 
         switch (result.code) {

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -18,8 +18,6 @@
 import com.alibaba.nacos.api.common.Constants;
 import org.apache.commons.lang3.StringUtils;
 
-import java.lang.reflect.InvocationTargetException;
-
 /**
  * Nacos Exception
  *

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -66,7 +66,7 @@ public void addBeatInfo(String serviceName, BeatInfo beatInfo) {
     public void removeBeatInfo(String serviceName, String ip, int port) {
         NAMING_LOGGER.info("[BEAT] removing beat: {}:{}:{} from beat map.", serviceName, ip, port);
         BeatInfo beatInfo = dom2Beat.remove(buildKey(serviceName, ip, port));
-        beatInfo.setStop(true);
+        beatInfo.setStopped(true);
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
 
@@ -86,7 +86,7 @@ public BeatTask(BeatInfo beatInfo) {
         @Override
         public void run() {
             long result = serverProxy.sendBeat(beatInfo);
-            if (beatInfo.isStop()) {
+            if (beatInfo.isStopped()) {
                 return;
             }
             long nextTime = result > 0 ? result : beatInfo.getPeriod();

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -16,7 +16,6 @@
 package com.alibaba.nacos.api.naming.pojo;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.PreservedMetadataKeys;
 import org.apache.commons.lang3.StringUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -123,7 +123,7 @@ public void init() throws Exception {
 
         long start = System.currentTimeMillis();
 
-        datums = raftStore.loadDatums(notifier);
+        raftStore.loadDatums(notifier, datums);
 
         setTerm(NumberUtils.toLong(raftStore.loadMeta().getProperty("term"), 0L));
 

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -89,7 +89,7 @@ public void run() {
             if (beatInfo.isStop()) {
                 return;
             }
-            long nextTime = result > 0 ? System.currentTimeMillis() + result : System.currentTimeMillis() + beatInfo.getPeriod();
+            long nextTime = result > 0 ? result : beatInfo.getPeriod();
             executorService.schedule(new BeatTask(beatInfo), nextTime, TimeUnit.MILLISECONDS);
         }
     }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -123,7 +123,7 @@ public void init() throws Exception {
 
         long start = System.currentTimeMillis();
 
-        datums = raftStore.loadDatums(notifier);
+        raftStore.loadDatums(notifier, datums);
 
         setTerm(NumberUtils.toLong(raftStore.loadMeta().getProperty("term"), 0L));
 

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -196,7 +196,6 @@ public void registerInstance(String serviceName, String groupName, Instance inst
             beatInfo.setWeight(instance.getWeight());
             beatInfo.setMetadata(instance.getMetadata());
             beatInfo.setScheduled(false);
-            beatInfo.setTime(System.currentTimeMillis());
             long instanceInterval = instance.getInstanceHeartBeatInterval();
             beatInfo.setPeriod(instanceInterval == 0 ? DEFAULT_HEART_BEAT_INTERVAL : instanceInterval);
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -46,9 +46,9 @@ public class PropertyKeyConst {
 
     public final static String ENCODE = "encode";
 
-    public final static String CONFIG_LONG_POLL_TIMEOUT = "config.long-poll.timeout";
+    public final static String CONFIG_LONG_POLL_TIMEOUT = "configLongPollTimeout";
 
-    public final static String CONFIG_RETRY_TIME = "config.retry.time";
+    public final static String CONFIG_RETRY_TIME = "configRetryTime";
 
     public final static String MAX_RETRY = "maxRetry";
 

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigurationProperties.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.annotation.NacosProperties;
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.config.ConfigType;
 
 import java.lang.annotation.*;
 
@@ -54,7 +55,7 @@
      *
      * @return default value is <code>false</code>
      */
-    boolean yaml() default false;
+    ConfigType type() default ConfigType.PROPERTIES;
 
     /**
      * It indicates the properties of current doBind bean is auto-refreshed when Nacos configuration is changed.

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -473,10 +473,10 @@ public void run() {
 
     private void init(Properties properties) {
 
-        timeout = Math.max(NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT)),
+        timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),
             Constants.CONFIG_LONG_POLL_TIMEOUT), Constants.MIN_CONFIG_LONG_POLL_TIMEOUT);
 
-        taskPenaltyTime = NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.CONFIG_RETRY_TIME)), Constants.CONFIG_RETRY_TIME);
+        taskPenaltyTime = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_RETRY_TIME), Constants.CONFIG_RETRY_TIME);
 
         enableRemoteSyncConfig = Boolean.parseBoolean(properties.getProperty(PropertyKeyConst.ENABLE_REMOTE_SYNC_CONFIG));
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -51,7 +51,8 @@ public void init() throws NacosException {
         Properties properties = new Properties();
         properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1:" + port);
         properties.put(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT, "20000");
-        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 3000);
+        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, "3000");
+        properties.put(PropertyKeyConst.MAX_RETRY, "5");
         configService = NacosFactory.createConfigService(properties);
     }
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -52,6 +52,8 @@ public class PropertyKeyConst {
 
     public final static String MAX_RETRY = "maxRetry";
 
+    public final static String ENABLE_REMOTE_SYNC_CONFIG = "enableRemoteSyncConfig";
+
     public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
 
     public final static String NAMING_CLIENT_BEAT_THREAD_COUNT = "namingClientBeatThreadCount";

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/AbstractHealthChecker.java
Patch:
@@ -193,6 +193,7 @@ public boolean equals(Object obj) {
 
         }
 
+        @Override
         public Tcp clone() throws CloneNotSupportedException {
             Tcp config = new Tcp();
             config.setType(this.type);

File: client/src/main/java/com/alibaba/nacos/client/config/impl/TimerService.java
Patch:
@@ -36,6 +36,7 @@ static public ScheduledFuture<?> scheduleWithFixedDelay(Runnable command, long i
     @SuppressWarnings("PMD.ThreadPoolCreationRule")
     static ScheduledExecutorService scheduledExecutor = Executors
         .newSingleThreadScheduledExecutor(new ThreadFactory() {
+            @Override
             public Thread newThread(Runnable r) {
                 Thread t = new Thread(r);
                 t.setName("com.alibaba.nacos.client.Timer");

File: client/src/main/java/com/alibaba/nacos/client/identify/CredentialService.java
Patch:
@@ -85,6 +85,7 @@ public void free() {
         LOGGER.info("[{}] {} is freed", appName, this.getClass().getSimpleName());
     }
 
+    @Override
     public Credentials getCredential() {
         Credentials localCredential = credentials;
         if (localCredential.valid()) {

File: client/src/main/java/com/alibaba/nacos/client/identify/Credentials.java
Patch:
@@ -38,6 +38,7 @@ public Credentials() {
         this(null, null, null);
     }
 
+    @Override
     public String getAccessKey() {
         return accessKey;
     }
@@ -46,6 +47,7 @@ public void setAccessKey(String accessKey) {
         this.accessKey = accessKey;
     }
 
+    @Override
     public String getSecretKey() {
         return secretKey;
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -118,7 +118,7 @@ public void run() {
                     String failover = ConcurrentDiskUtil.getFileContent(failoverDir + UtilAndComs.FAILOVER_SWITCH,
                         Charset.defaultCharset().toString());
                     if (!StringUtils.isEmpty(failover)) {
-                        List<String> lines = Arrays.asList(failover.split(DiskCache.getLineSeperator()));
+                        List<String> lines = Arrays.asList(failover.split(DiskCache.getLineSeparator()));
 
                         for (String line : lines) {
                             String line1 = line.trim();
@@ -212,6 +212,7 @@ public void run() {
     }
 
     class DiskFileWriter extends TimerTask {
+        @Override
         public void run() {
             Map<String, ServiceInfo> map = hostReactor.getServiceInfoMap();
             for (Map.Entry<String, ServiceInfo> entry : map.entrySet()) {

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -140,9 +140,7 @@ public ServiceInfo processServiceJSON(String json) {
 
                 if (!oldHostMap.containsKey(key)) {
                     newHosts.add(host);
-                    continue;
                 }
-
             }
 
             for (Map.Entry<String, Instance> entry : oldHostMap.entrySet()) {
@@ -154,7 +152,6 @@ public ServiceInfo processServiceJSON(String json) {
 
                 if (!newHostMap.containsKey(key)) {
                     remvHosts.add(host);
-                    continue;
                 }
 
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -35,7 +35,7 @@ public class PushReceiver implements Runnable {
 
     private ScheduledExecutorService executorService;
 
-    public static final int UDP_MSS = 64 * 1024;
+    private static final int UDP_MSS = 64 * 1024;
 
     private DatagramSocket udpSocket;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/GenericPoller.java
Patch:
@@ -31,10 +31,12 @@ public GenericPoller(List<T> items) {
         this.items = items;
     }
 
+    @Override
     public T next() {
         return items.get(Math.abs(index.getAndIncrement() % items.size()));
     }
 
+    @Override
     public Poller<T> refresh(List<T> items) {
         return new GenericPoller<T>(items);
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/ThreadLocalRandom.java
Patch:
@@ -146,6 +146,7 @@ private static long newSeed() {
      * The actual ThreadLocal
      */
     private static final ThreadLocal<ThreadLocalRandom> localRandom = new ThreadLocal<ThreadLocalRandom>() {
+        @Override
         protected ThreadLocalRandom initialValue() {
             return new ThreadLocalRandom();
         }
@@ -165,13 +166,15 @@ public static ThreadLocalRandom current() {
      *
      * @throws UnsupportedOperationException always
      */
+    @Override
     public void setSeed(long seed) {
         if (initialized) {
             throw new UnsupportedOperationException();
         }
         rnd = (seed ^ multiplier) & mask;
     }
 
+    @Override
     protected int next(int bits) {
         rnd = (rnd * multiplier + addend) & mask;
         return (int)(rnd >>> (48 - bits));

File: cmdb/src/main/java/com/alibaba/nacos/cmdb/memory/CmdbProvider.java
Patch:
@@ -54,8 +54,6 @@ public class CmdbProvider implements CmdbReader, CmdbWriter {
 
     private Set<String> entityTypeSet = new HashSet<>();
 
-    private List<EntityEvent> eventList = new ArrayList<>();
-
     private long eventTimestamp = System.currentTimeMillis();
 
     public CmdbProvider() throws NacosException {

File: config/src/main/java/com/alibaba/nacos/config/server/manager/TaskManager.java
Patch:
@@ -55,6 +55,7 @@ public final class TaskManager implements TaskManagerMBean {
 
     class ProcessRunnable implements Runnable {
 
+        @Override
         public void run() {
             while (!TaskManager.this.closed.get()) {
                 try {
@@ -248,6 +249,7 @@ public void setDefaultTaskProcessor(TaskProcessor defaultTaskProcessor) {
         }
     }
 
+    @Override
     public String getTaskInfos() {
         StringBuilder sb = new StringBuilder();
         for (String taskType : this.taskProcessors.keySet()) {

File: config/src/main/java/com/alibaba/nacos/config/server/model/ConfigInfoBase.java
Patch:
@@ -94,6 +94,7 @@ public void dump(PrintWriter writer) {
         writer.write(this.content);
     }
 
+    @Override
     public int compareTo(ConfigInfoBase o) {
         if (o == null) {
             return 1;

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/GroupKey.java
Patch:
@@ -54,6 +54,7 @@ public void setGroup(String group) {
         this.group = group;
     }
 
+    @Override
     public String toString() {
         return dataId + "+" + group;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/monitor/MemoryMonitor.java
Patch:
@@ -82,8 +82,6 @@ public void run() {
 
 class NotifyTaskQueueMonitorTask implements Runnable {
     final private AsyncNotifyService notifySingleService;
-    private AtomicInteger notifyTask = new AtomicInteger();
-
 
     NotifyTaskQueueMonitorTask(AsyncNotifyService notifySingleService) {
         this.notifySingleService = notifySingleService;

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -371,6 +371,7 @@ class ClientLongPolling implements Runnable {
         @Override
         public void run() {
             asyncTimeoutFuture = scheduler.schedule(new Runnable() {
+                @Override
                 public void run() {
                     try {
                         getRetainIps().put(ClientLongPolling.this.ip, System.currentTimeMillis());

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -319,10 +319,12 @@ public NotifySingleTask(String dataId, String group, String tenant, String tag,
             // this.executor = executor;
         }
 
+        @Override
         public void setFailCount(int count) {
             this.failCount = count;
         }
 
+        @Override
         public int getFailCount() {
             return failCount;
         }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/SimpleFlowData.java
Patch:
@@ -35,6 +35,7 @@ public class SimpleFlowData {
     @SuppressWarnings("PMD.ThreadPoolCreationRule")
     private ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {
 
+        @Override
         public Thread newThread(Runnable r) {
             Thread t = new Thread(r);
             t.setName("nacos flow control thread");
@@ -52,6 +53,7 @@ public SimpleFlowData(int slotCount, int interval) {
         }
         timer.scheduleAtFixedRate(new Runnable() {
 
+            @Override
             public void run() {
                 rotateSlot();
             }

File: config/src/main/java/com/alibaba/nacos/config/server/utils/SimpleIPFlowData.java
Patch:
@@ -38,6 +38,7 @@ public class SimpleIPFlowData {
     @SuppressWarnings("PMD.ThreadPoolCreationRule")
     private ScheduledExecutorService timer = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {
 
+        @Override
         public Thread newThread(Runnable r) {
             Thread t = new Thread(r);
             t.setName("nacos ip flow control thread");
@@ -49,6 +50,7 @@ public Thread newThread(Runnable r) {
 
     class DefaultIPFlowDataManagerTask implements Runnable {
 
+        @Override
         public void run() {
             rotateSlot();
         }

File: config/src/test/java/com/alibaba/nacos/config/server/service/DiskServiceUnitTest.java
Patch:
@@ -34,8 +34,6 @@ public class DiskServiceUnitTest {
 
     private DiskUtil diskService;
 
-    private ServletContext servletContext;
-
     private File tempFile;
 
     private String path;

File: core/src/main/java/com/alibaba/nacos/core/utils/InetUtils.java
Patch:
@@ -114,8 +114,7 @@ public static InetAddress findFirstNonLoopbackAddress() {
                     log.info("Testing interface: " + ifc.getDisplayName());
                     if (ifc.getIndex() < lowest || result == null) {
                         lowest = ifc.getIndex();
-                    }
-                    else if (result != null) {
+                    } else if (result != null) {
                         continue;
                     }
 

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -42,15 +42,15 @@ public class SystemUtils {
     /**
      * Standalone mode or not
      */
-    public static boolean STANDALONE_MODE =  Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
+    public static final boolean STANDALONE_MODE =  Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
 
     public static final String STANDALONE_MODE_ALONE = "standalone";
     public static final String STANDALONE_MODE_CLUSTER = "cluster";
 
     /**
      * server
      */
-    public static String FUNCTION_MODE = System.getProperty(FUNCTION_MODE_PROPERTY_NAME);
+    public static final String FUNCTION_MODE = System.getProperty(FUNCTION_MODE_PROPERTY_NAME);
 
     public static final String FUNCTION_MODE_CONFIG = "config";
     public static final String FUNCTION_MODE_NAMING = "naming";

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -56,7 +56,7 @@ public class ServerListManager {
 
     private Set<String> liveSites = new HashSet<>();
 
-    public final String LOCALHOST_SITE = UtilsAndCommons.UNKNOWN_SITE;
+    private final static String LOCALHOST_SITE = UtilsAndCommons.UNKNOWN_SITE;
 
     private long lastHealthServerMillis = 0L;
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -427,6 +427,7 @@ public void update(Service vDom) {
         recalculateChecksum();
     }
 
+    @Override
     public String getChecksum() {
         if (StringUtils.isEmpty(checksum)) {
             recalculateChecksum();

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -55,7 +55,7 @@ public class HttpHealthCheckProcessor implements HealthCheckProcessor {
 
     private static AsyncHttpClient asyncHttpClient;
 
-    public static final int CONNECT_TIMEOUT_MS = 500;
+    private static final int CONNECT_TIMEOUT_MS = 500;
 
     static {
         try {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/RsInfo.java
Patch:
@@ -143,6 +143,7 @@ public void setMetadata(Map<String, String> metadata) {
         this.metadata = metadata;
     }
 
+    @Override
     public String toString() {
         return JSON.toJSONString(this);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/TcpSuperSenseProcessor.java
Patch:
@@ -59,13 +59,13 @@ public class TcpSuperSenseProcessor implements HealthCheckProcessor, Runnable {
     /**
      * this value has been carefully tuned, do not modify unless you're confident
      */
-    public static final int NIO_THREAD_COUNT = Runtime.getRuntime().availableProcessors() <= 1 ?
+    private static final int NIO_THREAD_COUNT = Runtime.getRuntime().availableProcessors() <= 1 ?
         1 : Runtime.getRuntime().availableProcessors() / 2;
 
     /**
      * because some hosts doesn't support keep-alive connections, disabled temporarily
      */
-    public static final long TCP_KEEP_ALIVE_MILLIS = 0;
+    private static final long TCP_KEEP_ALIVE_MILLIS = 0;
 
     private static ScheduledExecutorService TCP_CHECK_EXECUTOR
         = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {
@@ -111,7 +111,6 @@ public void process(HealthCheckTask task) {
         if (CollectionUtils.isEmpty(ips)) {
             return;
         }
-        Service service = task.getCluster().getService();
 
         for (Instance ip : ips) {
 

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/PerformanceLoggerThread.java
Patch:
@@ -134,7 +134,6 @@ public void run() {
             try {
                 int serviceCount = serviceManager.getServiceCount();
                 int ipCount = serviceManager.getInstanceCount();
-                long maxPushMaxCost = getMaxPushCost();
                 long maxPushCost = getMaxPushCost();
                 long avgPushCost = getAvgPushCost();
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/OverrideParameterRequestWrapper.java
Patch:
@@ -73,6 +73,7 @@ public Map<String, String[]> getParameterMap() {
         return params;
     }
 
+    @Override
     public String[] getParameterValues(String name) {
         return params.get(name);
     }

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -83,7 +83,7 @@ public void receiveConfigInfo(String configInfo) {
             }
         });
 
-        TimeUnit.SECONDS.sleep(30);
+        TimeUnit.SECONDS.sleep(10);
 
     }
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -52,6 +52,8 @@ public class PropertyKeyConst {
 
     public final static String MAX_RETRY = "maxRetry";
 
+    public final static String ENABLE_REMOTE_SYNC_CONFIG = "enableRemoteSyncConfig";
+
     public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
 
     public final static String NAMING_CLIENT_BEAT_THREAD_COUNT = "namingClientBeatThreadCount";

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -82,7 +82,7 @@ public void receiveConfigInfo(String configInfo) {
             }
         });
 
-        TimeUnit.SECONDS.sleep(30);
+        TimeUnit.SECONDS.sleep(10);
 
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -100,7 +100,7 @@ public synchronized ScheduledFuture<?> addTask(UpdateTask task) {
     public ServiceInfo processServiceJSON(String json) {
         ServiceInfo serviceInfo = JSON.parseObject(json, ServiceInfo.class);
         ServiceInfo oldService = serviceInfoMap.get(serviceInfo.getKey());
-        if (serviceInfo.getHosts() == null || serviceInfo.getHosts().isEmpty() || !serviceInfo.validate()) {
+        if (serviceInfo.getHosts() == null || !serviceInfo.validate()) {
             //empty or error push, just ignore
             return oldService;
         }

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -52,6 +52,8 @@ public class PropertyKeyConst {
 
     public final static String MAX_RETRY = "maxRetry";
 
+    public final static String ENABLE_REMOTE_SYNC_CONFIG = "enableRemoteSyncConfig";
+
     public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
 
     public final static String NAMING_CLIENT_BEAT_THREAD_COUNT = "namingClientBeatThreadCount";

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigService.java
Patch:
@@ -37,7 +37,7 @@ public interface ConfigService {
     String getConfig(String dataId, String group, long timeoutMs) throws NacosException;
 
     /**
-     * Get config
+     * Get config and register Listener
      *
      * @param dataId    dataId
      * @param group     group

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -82,7 +82,7 @@ public void receiveConfigInfo(String configInfo) {
             }
         });
 
-        TimeUnit.SECONDS.sleep(30);
+        TimeUnit.SECONDS.sleep(10);
 
     }
 

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigurationProperties.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.annotation.NacosProperties;
 import com.alibaba.nacos.api.common.Constants;
+import com.alibaba.nacos.api.config.ConfigType;
 
 import java.lang.annotation.*;
 
@@ -54,7 +55,7 @@
      *
      * @return default value is <code>false</code>
      */
-    boolean yaml() default false;
+    String type() default ConfigType.PROPERTIES;
 
     /**
      * It indicates the properties of current doBind bean is auto-refreshed when Nacos configuration is changed.

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -457,10 +457,10 @@ public void run() {
 
     private void init(Properties properties) {
 
-        timeout = Math.max(NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT)),
+        timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),
             Constants.CONFIG_LONG_POLL_TIMEOUT), Constants.MIN_CONFIG_LONG_POLL_TIMEOUT);
 
-        taskPenaltyTime = NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.CONFIG_RETRY_TIME)), Constants.CONFIG_RETRY_TIME);
+        taskPenaltyTime = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_RETRY_TIME), Constants.CONFIG_RETRY_TIME);
     }
 
     class LongPollingRunnable implements Runnable {

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -51,7 +51,8 @@ public void init() throws NacosException {
         Properties properties = new Properties();
         properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1:" + port);
         properties.put(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT, "20000");
-        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 3000);
+        properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, "3000");
+        properties.put(PropertyKeyConst.MAX_RETRY, "5");
         configService = NacosFactory.createConfigService(properties);
     }
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -46,9 +46,9 @@ public class PropertyKeyConst {
 
     public final static String ENCODE = "encode";
 
-    public final static String CONFIG_LONG_POLL_TIMEOUT = "config.long-poll.timeout";
+    public final static String CONFIG_LONG_POLL_TIMEOUT = "configLongPollTimeout";
 
-    public final static String CONFIG_RETRY_TIME = "config.retry.time";
+    public final static String CONFIG_RETRY_TIME = "configRetryTime";
 
     public final static String MAX_RETRY = "maxRetry";
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -118,6 +118,8 @@ public class UtilsAndCommons {
 
     public static final String DATA_BASE_DIR = NACOS_HOME + File.separator + "data" + File.separator + "naming";
 
+    public static final String NUMBER_PATTERN = "^\\d+$";
+
     public static final ScheduledExecutorService SERVICE_SYNCHRONIZATION_EXECUTOR;
 
     public static final ScheduledExecutorService SERVICE_UPDATE_EXECUTOR;

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -82,7 +82,7 @@ public NacosConfigService(Properties properties) throws NacosException {
         initNamespace(properties);
         agent = new MetricsHttpAgent(new ServerHttpAgent(properties));
         agent.start();
-        worker = new ClientWorker(agent, configFilterChainManager);
+        worker = new ClientWorker(agent, configFilterChainManager, properties);
     }
 
     private void initNamespace(Properties properties) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java
Patch:
@@ -406,6 +406,7 @@ public void run() {
                     }
 
                 }
+
             }, timeoutTime, TimeUnit.MILLISECONDS);
 
             allSubs.add(this);

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -25,6 +25,7 @@
 import org.junit.runner.RunWith;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.boot.web.server.LocalServerPort;
+import org.springframework.test.annotation.Repeat;
 import org.springframework.test.context.junit4.SpringRunner;
 
 import java.util.Arrays;
@@ -112,7 +113,6 @@ public void dregDomTest() throws Exception {
     public void dregDomClusterTest() throws Exception {
 
         String serviceName = randomDomainName();
-
         System.out.println(serviceName);
 
         naming.registerInstance(serviceName, "127.0.0.1", TEST_PORT, "c1");

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -287,7 +287,7 @@ private void initAkSk(Properties properties) {
     }
 
     private void initMaxRetry(Properties properties) {
-        maxRetry = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.MAX_RETRY), Constants.MAX_RETRY);
+        maxRetry = NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.MAX_RETRY)), Constants.MAX_RETRY);
     }
 
     @Override

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java
Patch:
@@ -457,9 +457,10 @@ public void run() {
 
     private void init(Properties properties) {
 
-        timeout = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT), Constants.CONFIG_LONG_POLL_TIMEOUT);
+        timeout = Math.max(NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT)),
+            Constants.CONFIG_LONG_POLL_TIMEOUT), Constants.MIN_CONFIG_LONG_POLL_TIMEOUT);
 
-        taskPenaltyTime = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_RETRY_TIME), Constants.CONFIG_RETRY_TIME);
+        taskPenaltyTime = NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.CONFIG_RETRY_TIME)), Constants.CONFIG_RETRY_TIME);
     }
 
     class LongPollingRunnable implements Runnable {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -90,8 +90,7 @@ private void init(Properties properties) {
         serverProxy = new NamingProxy(namespace, endpoint, serverList);
         serverProxy.setProperties(properties);
         beatReactor = new BeatReactor(serverProxy, initClientBeatThreadCount(properties));
-        hostReactor = new HostReactor(eventDispatcher, serverProxy, cacheDir, isLoadCacheAtStart(properties),
-            initPollingThreadCount(properties));
+        hostReactor = new HostReactor(eventDispatcher, serverProxy, cacheDir, isLoadCacheAtStart(properties), initPollingThreadCount(properties));
     }
 
     private int initClientBeatThreadCount(Properties properties) {

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigLongPoll_ITCase.java
Patch:
@@ -50,7 +50,7 @@ public class ConfigLongPoll_ITCase {
     public void init() throws NacosException {
         Properties properties = new Properties();
         properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1:" + port);
-        properties.put(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT, 2000);
+        properties.put(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT, "20000");
         properties.put(PropertyKeyConst.CONFIG_RETRY_TIME, 3000);
         configService = NacosFactory.createConfigService(properties);
     }

File: client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java
Patch:
@@ -66,8 +66,7 @@ public class ServerHttpAgent implements HttpAgent {
     public HttpResult httpGet(String path, List<String> headers, List<String> paramValues, String encoding,
                               long readTimeoutMs) throws IOException {
         final long endTime = System.currentTimeMillis() + readTimeoutMs;
-
-        boolean isSSL = false;
+        final boolean isSSL = false;
 
         String currentServerAddr = serverListMgr.getCurrentServerAddr();
         int maxRetry = this.maxRetry;

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -45,6 +45,8 @@
  */
 @SuppressWarnings("PMD.ServiceOrDaoClassShouldEndWithImplRule")
 public class NacosNamingService implements NamingService {
+    private static final String DEFAULT_PORT = "8080";
+
     /**
      * Each Naming instance should have different namespace.
      */
@@ -74,7 +76,6 @@ public NacosNamingService(String serverList) {
     }
 
     public NacosNamingService(Properties properties) {
-
         init(properties);
     }
 
@@ -148,7 +149,7 @@ private void initCacheDir() {
             cacheDir = System.getProperty("user.home") + "/nacos/naming/" + namespace;
         }
     }
-
+  
     @Override
     public void registerInstance(String serviceName, String ip, int port) throws NacosException {
         registerInstance(serviceName, ip, port, Constants.DEFAULT_CLUSTER_NAME);

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/ConcurrentDiskUtil.java
Patch:
@@ -211,6 +211,6 @@ private static void sleep(int time) {
         }
     }
 
-    static final int RETRY_COUNT = 10;
-    static final int SLEEP_BASETIME = 10;
+    private static final int RETRY_COUNT = 10;
+    private static final int SLEEP_BASETIME = 10;
 }

File: client/src/main/java/com/alibaba/nacos/client/utils/StringUtils.java
Patch:
@@ -38,15 +38,14 @@ public static boolean isBlank(String str) {
             return true;
         }
         for (int i = 0; i < strLen; i++) {
-            if ((Character.isWhitespace(str.charAt(i)) == false)) {
+            if (!Character.isWhitespace(str.charAt(i))) {
                 return false;
             }
         }
         return true;
     }
 
     public static boolean isNotBlank(String str) {
-
         return !isBlank(str);
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -41,7 +41,7 @@
 @Component("serverListManager")
 public class ServerListManager {
 
-    public static final int STABLE_PERIOD = 60 * 1000;
+    private static final int STABLE_PERIOD = 60 * 1000;
 
     @Autowired
     private SwitchDomain switchDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.Response;
+import org.springframework.util.StringUtils;
 
 import java.net.HttpURLConnection;
 import java.util.HashMap;
@@ -31,7 +32,7 @@
 public class ServerStatusSynchronizer implements Synchronizer {
     @Override
     public void send(final String serverIP, Message msg) {
-        if (serverIP == null) {
+        if (StringUtils.isEmpty(serverIP)) {
             return;
         }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingMaintainService.java
Patch:
@@ -60,7 +60,7 @@ public NacosNamingMaintainService(Properties properties) {
     }
 
     private void init(Properties properties) {
-        namespace = InitUtils.initNamespace(properties);
+        namespace = InitUtils.initNamespaceForNaming(properties);
         initServerAddr(properties);
         InitUtils.initWebRootContext();
 

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -79,7 +79,7 @@ public NacosNamingService(Properties properties) {
     }
 
     private void init(Properties properties) {
-        namespace = InitUtils.initNamespace(properties);
+        namespace = InitUtils.initNamespaceForNaming(properties);
         initServerAddr(properties);
         InitUtils.initWebRootContext();
         initCacheDir();

File: client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java
Patch:
@@ -21,8 +21,8 @@
 import com.alibaba.nacos.client.naming.cache.DiskCache;
 import com.alibaba.nacos.client.naming.core.HostReactor;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
-import com.alibaba.nacos.client.naming.utils.StringUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
+import com.alibaba.nacos.client.utils.StringUtils;
 
 import java.io.BufferedReader;
 import java.io.File;

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/DiskCache.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
-import com.alibaba.nacos.client.naming.utils.StringUtils;
+import com.alibaba.nacos.client.utils.StringUtils;
 
 import java.io.BufferedReader;
 import java.io.File;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -23,8 +23,8 @@
 import com.alibaba.nacos.client.naming.backups.FailoverReactor;
 import com.alibaba.nacos.client.naming.cache.DiskCache;
 import com.alibaba.nacos.client.naming.net.NamingProxy;
-import com.alibaba.nacos.client.naming.utils.StringUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
+import com.alibaba.nacos.client.utils.StringUtils;
 
 import java.util.*;
 import java.util.concurrent.*;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.client.naming.utils.IoUtils;
-import com.alibaba.nacos.client.naming.utils.StringUtils;
+import com.alibaba.nacos.client.utils.StringUtils;
 
 import java.net.DatagramPacket;
 import java.net.DatagramSocket;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.client.naming.utils.IoUtils;
-import com.alibaba.nacos.client.naming.utils.StringUtils;
+import com.alibaba.nacos.client.utils.StringUtils;
 import com.google.common.net.HttpHeaders;
 
 import java.io.IOException;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/IoUtils.java
Patch:
@@ -16,6 +16,8 @@
 package com.alibaba.nacos.client.naming.utils;
 
 
+import com.alibaba.nacos.client.utils.StringUtils;
+
 import java.io.*;
 import java.nio.channels.FileChannel;
 import java.util.ArrayList;

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
+import com.alibaba.nacos.client.utils.StringUtils;
+
 import java.net.InetAddress;
 import java.net.UnknownHostException;
 

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -33,7 +33,7 @@ public class ParamUtil {
 
     private final static Logger LOGGER = LogUtils.logger(ParamUtil.class);
 
-    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "true";
+    public final static boolean USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = true;
 
     private static final Pattern PATTERN = Pattern.compile("\\$\\{[^}]+\\}");
     private static String defaultContextPath = "nacos";

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -42,7 +42,7 @@ public class SystemUtils {
     /**
      * Standalone mode or not
      */
-    public static boolean STANDALONE_MODE = Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
+    public static boolean STANDALONE_MODE =  Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
 
     public static final String STANDALONE_MODE_ALONE = "standalone";
     public static final String STANDALONE_MODE_CLUSTER = "cluster";

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -31,6 +31,7 @@
 import com.alibaba.nacos.naming.push.PushService;
 import com.alibaba.nacos.naming.web.CanDistro;
 import com.google.common.collect.Lists;
+import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.ResponseEntity;
@@ -95,7 +96,8 @@ public String update(HttpServletRequest request) throws Exception {
         if (StringUtils.isBlank(healthyString)) {
             throw new IllegalArgumentException("Param 'healthy' is required.");
         }
-
+        
+        valid = BooleanUtils.toBoolean(healthyString);
 
         Service service = serviceManager.getService(namespaceId, serviceName);
         // Only health check "none" need update health status with api

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -31,6 +31,7 @@
 import com.alibaba.nacos.naming.push.PushService;
 import com.alibaba.nacos.naming.web.CanDistro;
 import com.google.common.collect.Lists;
+import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.ResponseEntity;
@@ -95,7 +96,8 @@ public String update(HttpServletRequest request) throws Exception {
         if (StringUtils.isBlank(healthyString)) {
             throw new IllegalArgumentException("Param 'healthy' is required.");
         }
-
+        
+        valid = BooleanUtils.toBoolean(healthyString);
 
         Service service = serviceManager.getService(namespaceId, serviceName);
         // Only health check "none" need update health status with api

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -31,6 +31,7 @@
 import com.alibaba.nacos.naming.push.PushService;
 import com.alibaba.nacos.naming.web.CanDistro;
 import com.google.common.collect.Lists;
+import org.apache.commons.lang3.BooleanUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.ResponseEntity;
@@ -95,7 +96,8 @@ public String update(HttpServletRequest request) throws Exception {
         if (StringUtils.isBlank(healthyString)) {
             throw new IllegalArgumentException("Param 'healthy' is required.");
         }
-
+        
+        valid = BooleanUtils.toBoolean(healthyString);
 
         Service service = serviceManager.getService(namespaceId, serviceName);
         // Only health check "none" need update health status with api

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -299,7 +299,9 @@ public String queryList(String serviceName, String clusters, int udpPort, boolea
 
     public long sendBeat(BeatInfo beatInfo) {
         try {
-            NAMING_LOGGER.info("[BEAT] {} sending beat to server: {}", namespaceId, beatInfo.toString());
+            if (NAMING_LOGGER.isDebugEnabled()) {
+                NAMING_LOGGER.debug("[BEAT] {} sending beat to server: {}", namespaceId, beatInfo.toString());
+            }
             Map<String, String> params = new HashMap<String, String>(4);
             params.put("beat", JSON.toJSONString(beatInfo));
             params.put(CommonParams.NAMESPACE_ID, namespaceId);

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -299,7 +299,9 @@ public String queryList(String serviceName, String clusters, int udpPort, boolea
 
     public long sendBeat(BeatInfo beatInfo) {
         try {
-            NAMING_LOGGER.info("[BEAT] {} sending beat to server: {}", namespaceId, beatInfo.toString());
+            if (NAMING_LOGGER.isDebugEnabled()) {
+                NAMING_LOGGER.debug("[BEAT] {} sending beat to server: {}", namespaceId, beatInfo.toString());
+            }
             Map<String, String> params = new HashMap<String, String>(4);
             params.put("beat", JSON.toJSONString(beatInfo));
             params.put(CommonParams.NAMESPACE_ID, namespaceId);

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -42,8 +42,7 @@ public class SystemUtils {
     /**
      * Standalone mode or not
      */
-    public static boolean STANDALONE_MODE =  Boolean.parseBoolean(
-        System.getenv(STANDALONE_MODE_PROPERTY_NAME));
+    public static boolean STANDALONE_MODE =  Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
 
     public static final String STANDALONE_MODE_ALONE = "standalone";
     public static final String STANDALONE_MODE_CLUSTER = "cluster";

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -42,7 +42,8 @@ public class SystemUtils {
     /**
      * Standalone mode or not
      */
-    public static boolean STANDALONE_MODE = Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
+    public static boolean STANDALONE_MODE =  Boolean.parseBoolean(
+        System.getenv(STANDALONE_MODE_PROPERTY_NAME));
 
     public static final String STANDALONE_MODE_ALONE = "standalone";
     public static final String STANDALONE_MODE_CLUSTER = "cluster";

File: common/src/main/java/com/alibaba/nacos/common/util/IoUtils.java
Patch:
@@ -86,7 +86,6 @@ static public List<String> readLines(Reader input) throws IOException {
                 break;
             }
         }
-
         return list;
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -541,7 +541,9 @@ public RestResult<Map<String, Object>> cloneConfig(HttpServletRequest request,
         Map<String, Object> failedData = new HashMap<>(4);
         rr.setData(failedData);
 
-        if(persistService.tenantInfoCountByTenantId(namespace) <= 0){
+        if("public".equals(namespace)){
+            namespace = "";
+        } else if(persistService.tenantInfoCountByTenantId(namespace) <= 0){
             rr.setCode(5001);
             failedData.put("succCount", 0);
             rr.setMessage("namespace does not exist");

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -103,6 +103,8 @@ public class Constants {
 
     public static final int FLOW_CONTROL_INTERVAL = 1000;
 
+    public static final float DEFAULT_PROTECT_THRESHOLD = 0.0F;
+
     public static final String LINE_SEPARATOR = Character.toString((char)1);
 
     public static final String WORD_SEPARATOR = Character.toString((char)2);

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingService.java
Patch:
@@ -19,10 +19,12 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
+import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.selector.AbstractSelector;
 
 import java.util.List;
+import java.util.Map;
 
 /**
  * Naming Service

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -274,7 +274,7 @@ public CacheData(ConfigFilterChainManager configFilterChainManager, String name,
      */
     private volatile boolean isUseLocalConfig = false;
     /**
-     * last motify time
+     * last modify time
      */
     private volatile long localConfigLastModified;
     private volatile String content;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -125,7 +125,7 @@ public void run() {
                     if (!CollectionUtils.isEmpty(listeners)) {
                         for (EventListener listener : listeners) {
                             List<Instance> hosts = Collections.unmodifiableList(serviceInfo.getHosts());
-                            listener.onEvent(new NamingEvent(serviceInfo.getName(), hosts));
+                            listener.onEvent(new NamingEvent(serviceInfo.getName(), serviceInfo.getGroupName(), serviceInfo.getClusters(), hosts));
                         }
                     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -28,6 +28,8 @@ public class UtilAndComs {
 
     public static String NACOS_URL_INSTANCE = NACOS_URL_BASE + "/instance";
 
+    public static String NACOS_URL_SERVICE = NACOS_URL_BASE + "/service";
+
     public static final String ENCODING = "UTF-8";
 
     public static final String ENV_LIST_KEY = "envList";

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -215,8 +215,7 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {
                 if (!clusterMap.containsKey(instance.getClusterName())) {
                     Loggers.SRV_LOG.warn("cluster: {} not found, ip: {}, will create new cluster with default configuration.",
                         instance.getClusterName(), instance.toJSON());
-                    Cluster cluster = new Cluster(instance.getClusterName());
-                    cluster.setService(this);
+                    Cluster cluster = new Cluster(instance.getClusterName(), this);
                     cluster.init();
                     getClusterMap().put(instance.getClusterName(), cluster);
                 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.servers.Server;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
@@ -357,7 +358,7 @@ public void createEmptyService(String namespaceId, String serviceName, boolean l
             service = new Service();
             service.setName(serviceName);
             service.setNamespaceId(namespaceId);
-            service.setGroupName(Constants.DEFAULT_GROUP);
+            service.setGroupName(NamingUtils.getGroupName(serviceName));
             // now validate the service. if failed, exception will be thrown
             service.setLastModifiedMillis(System.currentTimeMillis());
             service.recalculateChecksum();
@@ -485,8 +486,7 @@ public List<Instance> updateIpAddresses(Service service, String action, boolean
 
         for (Instance instance : ips) {
             if (!service.getClusterMap().containsKey(instance.getClusterName())) {
-                Cluster cluster = new Cluster(instance.getClusterName());
-                cluster.setService(service);
+                Cluster cluster = new Cluster(instance.getClusterName(), service);
                 cluster.init();
                 service.getClusterMap().put(instance.getClusterName(), cluster);
                 Loggers.SRV_LOG.warn("cluster: {} not found, ip: {}, will create new cluster with default configuration.",

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcherTest.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
 import com.alibaba.nacos.naming.misc.GlobalConfig;
+import com.alibaba.nacos.naming.misc.Loggers;
 import org.junit.Before;
 import org.junit.Test;
 import org.springframework.test.util.ReflectionTestUtils;

File: naming/src/test/java/com/alibaba/nacos/naming/misc/UtilsAndCommonsTest.java
Patch:
@@ -36,9 +36,6 @@ public void testControllerPathsDefaultValues() {
         MockEnvironment environment = new MockEnvironment();
 
         Assert.assertEquals(DEFAULT_NACOS_NAMING_CONTEXT, environment.resolvePlaceholders(NACOS_NAMING_CONTEXT));
-
-
-        Assert.assertEquals("/nacos/v1/ns", DEFAULT_NACOS_NAMING_CONTEXT);
     }
 
     @Test(expected = IllegalArgumentException.class)

File: core/src/main/java/com/alibaba/nacos/core/utils/SystemUtils.java
Patch:
@@ -42,7 +42,8 @@ public class SystemUtils {
     /**
      * Standalone mode or not
      */
-    public static boolean STANDALONE_MODE = Boolean.getBoolean(STANDALONE_MODE_PROPERTY_NAME);
+    public static boolean STANDALONE_MODE =  Boolean.parseBoolean(
+        System.getenv(STANDALONE_MODE_PROPERTY_NAME));
 
     public static final String STANDALONE_MODE_ALONE = "standalone";
     public static final String STANDALONE_MODE_CLUSTER = "cluster";

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -77,8 +77,8 @@ public void run() {
                     if (!instance.isMarked()) {
                         if (instance.isHealthy()) {
                             instance.setHealthy(false);
-                            Loggers.EVT_LOG.info("{POS} {IP-DISABLED} valid: {}:{}@{}, region: {}, msg: client timeout after {}, last beat: {}",
-                                instance.getIp(), instance.getPort(), instance.getClusterName(),
+                            Loggers.EVT_LOG.info("{POS} {IP-DISABLED} valid: {}:{}@{}@{}, region: {}, msg: client timeout after {}, last beat: {}",
+                                instance.getIp(), instance.getPort(), instance.getClusterName(), service.getName(),
                                 UtilsAndCommons.LOCALHOST_SITE, ClientBeatProcessor.CLIENT_BEAT_TIMEOUT, instance.getLastBeat());
                             getPushService().serviceChanged(service.getNamespaceId(), service.getName());
                         }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -61,7 +61,7 @@ public Integer onCompleted(Response response) throws Exception {
                 }
             });
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: " + serverIP, e);
+            Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}", serverIP, e);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -119,10 +119,10 @@ public String update(HttpServletRequest request) throws Exception {
 
     @ResponseBody
     @RequestMapping(value = "checkers", method = RequestMethod.GET)
-    public ResponseEntity checkers(){
+    public ResponseEntity checkers() {
         List<Class> classes = HealthCheckType.getLoadedHealthCheckerClasses();
         Map<String, AbstractHealthChecker> checkerMap = new HashMap<>(8);
-        for(Class clazz : classes){
+        for (Class clazz : classes) {
             try {
                 AbstractHealthChecker checker = (AbstractHealthChecker) clazz.newInstance();
                 checkerMap.put(checker.getType(), checker);

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -279,7 +279,7 @@ private Boolean isQuickStart() {
     }
 
     private int getRetentionDays() {
-        String val = env.getProperty("retention.days");
+        String val = env.getProperty("nacos.config.retention.days");
         if (null == val) {
             return retentionDays;
         }
@@ -291,7 +291,7 @@ private int getRetentionDays() {
                 retentionDays = tmp;
             }
         } catch (NumberFormatException nfe) {
-            fatalLog.error("read retention.days wrong", nfe);
+            fatalLog.error("read nacos.config.retention.days wrong", nfe);
         }
 
         return retentionDays;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -121,15 +121,15 @@ public String update(HttpServletRequest request) throws Exception {
     @RequestMapping(value = "checkers", method = RequestMethod.GET)
     public ResponseEntity checkers(){
         List<Class> classes = HealthCheckType.getLoadedHealthCheckerClasses();
-        Map<String, AbstractHealthChecker> demos = new HashMap<>(8);
+        Map<String, AbstractHealthChecker> checkerMap = new HashMap<>(8);
         for(Class clazz : classes){
             try {
                 AbstractHealthChecker checker = (AbstractHealthChecker) clazz.newInstance();
-                demos.put(checker.getType(), checker);
+                checkerMap.put(checker.getType(), checker);
             } catch (InstantiationException | IllegalAccessException e) {
                 e.printStackTrace();
             }
         }
-        return ResponseEntity.ok(demos);
+        return ResponseEntity.ok(checkerMap);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -121,7 +121,7 @@ public String update(HttpServletRequest request) throws Exception {
     @RequestMapping(value = "checkers", method = RequestMethod.GET)
     public ResponseEntity checkers(){
         List<Class> classes = HealthCheckType.getLoadedHealthCheckerClasses();
-        Map<String, AbstractHealthChecker> demos = new HashMap<>();
+        Map<String, AbstractHealthChecker> demos = new HashMap<>(8);
         for(Class clazz : classes){
             try {
                 AbstractHealthChecker checker = (AbstractHealthChecker) clazz.newInstance();

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -103,6 +103,8 @@ public class Constants {
 
     public static final int FLOW_CONTROL_INTERVAL = 1000;
 
+    public static final float DEFAULT_PROTECT_THRESHOLD = 0.0F;
+
     public static final String LINE_SEPARATOR = Character.toString((char)1);
 
     public static final String WORD_SEPARATOR = Character.toString((char)2);

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingService.java
Patch:
@@ -19,10 +19,12 @@
 import com.alibaba.nacos.api.naming.listener.EventListener;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ListView;
+import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.api.selector.AbstractSelector;
 
 import java.util.List;
+import java.util.Map;
 
 /**
  * Naming Service

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -28,6 +28,8 @@ public class UtilAndComs {
 
     public static String NACOS_URL_INSTANCE = NACOS_URL_BASE + "/instance";
 
+    public static String NACOS_URL_SERVICE = NACOS_URL_BASE + "/service";
+
     public static final String ENCODING = "UTF-8";
 
     public static final String ENV_LIST_KEY = "envList";

File: naming/src/test/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcherTest.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
 import com.alibaba.nacos.naming.misc.GlobalConfig;
+import com.alibaba.nacos.naming.misc.Loggers;
 import org.junit.Before;
 import org.junit.Test;
 import org.springframework.test.util.ReflectionTestUtils;

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingMaintainFactory.java
Patch:
@@ -29,7 +29,7 @@ public class NamingMaintainFactory {
 
     public static NamingMaintainService createMaintainService(String serverList) throws NacosException {
         try {
-            Class<?> driverImplClass = Class.forName("com.alibaba.nacos.client.naming.NacosMaintainService");
+            Class<?> driverImplClass = Class.forName("com.alibaba.nacos.client.naming.NacosNamingMaintainService");
             Constructor constructor = driverImplClass.getConstructor(String.class);
             NamingMaintainService vendorImpl = (NamingMaintainService)constructor.newInstance(serverList);
             return vendorImpl;
@@ -40,7 +40,7 @@ public static NamingMaintainService createMaintainService(String serverList) thr
 
     public static NamingMaintainService createMaintainService(Properties properties) throws NacosException {
         try {
-            Class<?> driverImplClass = Class.forName("com.alibaba.nacos.client.naming.NacosMaintainService");
+            Class<?> driverImplClass = Class.forName("com.alibaba.nacos.client.naming.NacosNamingMaintainService");
             Constructor constructor = driverImplClass.getConstructor(Properties.class);
             NamingMaintainService vendorImpl = (NamingMaintainService)constructor.newInstance(properties);
             return vendorImpl;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -67,9 +67,7 @@ public String update(HttpServletRequest request) throws Exception {
         Cluster cluster = service.getClusterMap().get(clusterName);
         if (cluster == null) {
             Loggers.SRV_LOG.warn("[UPDATE-CLUSTER] cluster not exist, will create it: {}, service: {}", clusterName, serviceName);
-            cluster = new Cluster();
-            cluster.setName(clusterName);
-            cluster.setService(service);
+            cluster = new Cluster(clusterName, service);
         }
 
         cluster.setDefCkport(NumberUtils.toInt(checkPort));

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -215,8 +215,7 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {
                 if (!clusterMap.containsKey(instance.getClusterName())) {
                     Loggers.SRV_LOG.warn("cluster: {} not found, ip: {}, will create new cluster with default configuration.",
                         instance.getClusterName(), instance.toJSON());
-                    Cluster cluster = new Cluster(instance.getClusterName());
-                    cluster.setService(this);
+                    Cluster cluster = new Cluster(instance.getClusterName(), this);
                     cluster.init();
                     getClusterMap().put(instance.getClusterName(), cluster);
                 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -486,8 +486,7 @@ public List<Instance> updateIpAddresses(Service service, String action, boolean
 
         for (Instance instance : ips) {
             if (!service.getClusterMap().containsKey(instance.getClusterName())) {
-                Cluster cluster = new Cluster(instance.getClusterName());
-                cluster.setService(service);
+                Cluster cluster = new Cluster(instance.getClusterName(), service);
                 cluster.init();
                 service.getClusterMap().put(instance.getClusterName(), cluster);
                 Loggers.SRV_LOG.warn("cluster: {} not found, ip: {}, will create new cluster with default configuration.",

File: naming/src/test/java/com/alibaba/nacos/naming/misc/UtilsAndCommonsTest.java
Patch:
@@ -36,9 +36,6 @@ public void testControllerPathsDefaultValues() {
         MockEnvironment environment = new MockEnvironment();
 
         Assert.assertEquals(DEFAULT_NACOS_NAMING_CONTEXT, environment.resolvePlaceholders(NACOS_NAMING_CONTEXT));
-
-
-        Assert.assertEquals("/nacos/v1/ns", DEFAULT_NACOS_NAMING_CONTEXT);
     }
 
     @Test(expected = IllegalArgumentException.class)

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -274,7 +274,7 @@ public CacheData(ConfigFilterChainManager configFilterChainManager, String name,
      */
     private volatile boolean isUseLocalConfig = false;
     /**
-     * last motify time
+     * last modify time
      */
     private volatile long localConfigLastModified;
     private volatile String content;

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -111,7 +111,7 @@ public class Constants {
 
     public static final String CONFIG_CONTROLLER_PATH = BASE_PATH + "/configs";
 
-    public static final String HEALTH_CONTROLLER_PATH = BASE_PATH + "//health";
+    public static final String HEALTH_CONTROLLER_PATH = BASE_PATH + "/health";
 
     public static final String HISTORY_CONTROLLER_PATH = BASE_PATH + "/history";
 

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -103,7 +103,7 @@ public class Constants {
 
     public static final int FLOW_CONTROL_INTERVAL = 1000;
 
-    public static final float PROTECT_THRESHOLD = 0.0F;
+    public static final float DEFAULT_PROTECT_THRESHOLD = 0.0F;
 
     public static final String LINE_SEPARATOR = Character.toString((char)1);
 

File: api/src/main/java/com/alibaba/nacos/api/naming/MaintainFactory.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  * @author liaochuntao
- * @since 1.0.0
+ * @since 1.0.1
  */
 public class MaintainFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/InitUtils.java
Patch:
@@ -31,7 +31,7 @@
 /**
  * @author liaochuntao
  */
-public class NamingUtils {
+public class InitUtils {
 
     public static final String initNamespace(Properties properties) {
         String tmpNamespace = null;

File: client/src/test/java/com/alibaba/nacos/client/naming/NacosMaintainServiceTest.java
Patch:
@@ -26,6 +26,7 @@
 public class NacosMaintainServiceTest {
 
     private MaintainService maintainService;
+    private NamingService namingService;
 
     @Before
     public void before() throws NacosException {
@@ -75,7 +76,7 @@ public void test2updateService() {
     @Test
     public void test3selectOneService() {
         try {
-            Service service = maintainService.selectOneService("nacos-api");
+            Service service = maintainService.queryService("nacos-api");
             System.out.println("service : " + service.toString());
         } catch (NacosException e) {
             NAMING_LOGGER.error(e.getErrMsg());

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -111,7 +111,7 @@ public class Constants {
 
     public static final String CONFIG_CONTROLLER_PATH = BASE_PATH + "/configs";
 
-    public static final String HEALTH_CONTROLLER_PATH = BASE_PATH + "/health";
+    public static final String HEALTH_CONTROLLER_PATH = BASE_PATH + "//health";
 
     public static final String HISTORY_CONTROLLER_PATH = BASE_PATH + "/history";
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/CacheData.java
Patch:
@@ -274,7 +274,7 @@ public CacheData(ConfigFilterChainManager configFilterChainManager, String name,
      */
     private volatile boolean isUseLocalConfig = false;
     /**
-     * last motify time
+     * last modify time
      */
     private volatile long localConfigLastModified;
     private volatile String content;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -77,8 +77,8 @@ public void run() {
                     if (!instance.isMarked()) {
                         if (instance.isHealthy()) {
                             instance.setHealthy(false);
-                            Loggers.EVT_LOG.info("{POS} {IP-DISABLED} valid: {}:{}@{}, region: {}, msg: client timeout after {}, last beat: {}",
-                                instance.getIp(), instance.getPort(), instance.getClusterName(),
+                            Loggers.EVT_LOG.info("{POS} {IP-DISABLED} valid: {}:{}@{}@{}, region: {}, msg: client timeout after {}, last beat: {}",
+                                instance.getIp(), instance.getPort(), instance.getClusterName(), service.getName(),
                                 UtilsAndCommons.LOCALHOST_SITE, ClientBeatProcessor.CLIENT_BEAT_TIMEOUT, instance.getLastBeat());
                             getPushService().serviceChanged(service.getNamespaceId(), service.getName());
                         }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -61,7 +61,7 @@ public Integer onCompleted(Response response) throws Exception {
                 }
             });
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: " + serverIP, e);
+            Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}", serverIP, e);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -77,8 +77,8 @@ public void run() {
                     if (!instance.isMarked()) {
                         if (instance.isHealthy()) {
                             instance.setHealthy(false);
-                            Loggers.EVT_LOG.info("{POS} {IP-DISABLED} valid: {}:{}@{}, region: {}, msg: client timeout after {}, last beat: {}",
-                                instance.getIp(), instance.getPort(), instance.getClusterName(),
+                            Loggers.EVT_LOG.info("{POS} {IP-DISABLED} valid: {}:{}@{}@{}, region: {}, msg: client timeout after {}, last beat: {}",
+                                instance.getIp(), instance.getPort(), instance.getClusterName(), service.getName(),
                                 UtilsAndCommons.LOCALHOST_SITE, ClientBeatProcessor.CLIENT_BEAT_TIMEOUT, instance.getLastBeat());
                             getPushService().serviceChanged(service.getNamespaceId(), service.getName());
                         }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -61,7 +61,7 @@ public Integer onCompleted(Response response) throws Exception {
                 }
             });
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: " + serverIP, e);
+            Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}", serverIP, e);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/extend/HealthCheckExtendProvider.java
Patch:
@@ -1,6 +1,3 @@
-package com.alibaba.nacos.naming.healthcheck.extend;
-
-import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 /*
  * Copyright 1999-2018 Alibaba Group Holding Ltd.
  *
@@ -16,6 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+package com.alibaba.nacos.naming.healthcheck.extend;
+
+import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckProcessor;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckType;
 import org.springframework.beans.BeansException;

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.servers.Server;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
@@ -357,7 +358,7 @@ public void createEmptyService(String namespaceId, String serviceName, boolean l
             service = new Service();
             service.setName(serviceName);
             service.setNamespaceId(namespaceId);
-            service.setGroupName(Constants.DEFAULT_GROUP);
+            service.setGroupName(NamingUtils.getGroupName(serviceName));
             // now validate the service. if failed, exception will be thrown
             service.setLastModifiedMillis(System.currentTimeMillis());
             service.recalculateChecksum();

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.api.naming.utils.NamingUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.servers.Server;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
@@ -357,7 +358,7 @@ public void createEmptyService(String namespaceId, String serviceName, boolean l
             service = new Service();
             service.setName(serviceName);
             service.setNamespaceId(namespaceId);
-            service.setGroupName(Constants.DEFAULT_GROUP);
+            service.setGroupName(NamingUtils.getGroupName(serviceName));
             // now validate the service. if failed, exception will be thrown
             service.setLastModifiedMillis(System.currentTimeMillis());
             service.recalculateChecksum();

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -181,7 +181,7 @@ public String call() {
 
         String endpointTmp = properties.getProperty(PropertyKeyConst.ENDPOINT);
         if (Boolean.valueOf(properties.getProperty(PropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE, ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE))) {
-            String endpointUrl = ParamUtil.parsingEndpointRule(endpointPortTmp);
+            String endpointUrl = ParamUtil.parsingEndpointRule(endpointTmp);
             if (StringUtils.isNotBlank(endpointUrl)) {
                 serverAddrsStr = "";
             }

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -33,7 +33,7 @@ public class ParamUtil {
 
     private final static Logger LOGGER = LogUtils.logger(ParamUtil.class);
 
-    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "false";
+    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "true";
 
     private static final Pattern PATTERN = Pattern.compile("\\$\\{[^}]+\\}");
     private static String defaultContextPath = "nacos";

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -181,7 +181,7 @@ public String call() {
 
         String endpointTmp = properties.getProperty(PropertyKeyConst.ENDPOINT);
         if (Boolean.valueOf(properties.getProperty(PropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE, ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE))) {
-            String endpointUrl = ParamUtil.parsingEndpointRule(endpointPortTmp);
+            String endpointUrl = ParamUtil.parsingEndpointRule(endpointTmp);
             if (StringUtils.isNotBlank(endpointUrl)) {
                 serverAddrsStr = "";
             }

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -33,7 +33,7 @@ public class ParamUtil {
 
     private final static Logger LOGGER = LogUtils.logger(ParamUtil.class);
 
-    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "false";
+    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "true";
 
     private static final Pattern PATTERN = Pattern.compile("\\$\\{[^}]+\\}");
     private static String defaultContextPath = "nacos";

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -33,7 +33,7 @@ public class ParamUtil {
 
     private final static Logger LOGGER = LogUtils.logger(ParamUtil.class);
 
-    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "false";
+    public final static String USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE = "true";
 
     private static final Pattern PATTERN = Pattern.compile("\\$\\{[^}]+\\}");
     private static String defaultContextPath = "nacos";

File: client/src/main/java/com/alibaba/nacos/client/config/utils/TenantUtil.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class TenantUtil {
 
-    static String userTenant = "";
+    private static String userTenant = "";
 
     static {
         userTenant = System.getProperty("tenant.id", "");

File: client/src/main/java/com/alibaba/nacos/client/config/utils/TenantUtil.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class TenantUtil {
 
-    static String userTenant = "";
+    private static String userTenant = "";
 
     static {
         userTenant = System.getProperty("tenant.id", "");

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -131,7 +131,7 @@ public void dregDomClusterTest() throws Exception {
 
         instances = naming.getAllInstances(serviceName);
 
-        Assert.assertEquals(instances.size(), 1);
+        Assert.assertEquals(1, instances.size());
 
         instances = naming.getAllInstances(serviceName, Arrays.asList("c2"));
         Assert.assertEquals(instances.size(), 1);

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -202,7 +202,7 @@ public void multipleTenant_getInstance() throws Exception {
                 .appendParam("namespaceId", "namespace-2")
                 .done(),
             String.class);
-        Assert.assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
+        Assert.assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
 
         response = request("/nacos/v1/ns/instance/list",
             Params.newParams()

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -131,7 +131,7 @@ public void dregDomClusterTest() throws Exception {
 
         instances = naming.getAllInstances(serviceName);
 
-        Assert.assertEquals(instances.size(), 1);
+        Assert.assertEquals(1, instances.size());
 
         instances = naming.getAllInstances(serviceName, Arrays.asList("c2"));
         Assert.assertEquals(instances.size(), 1);

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -202,7 +202,7 @@ public void multipleTenant_getInstance() throws Exception {
                 .appendParam("namespaceId", "namespace-2")
                 .done(),
             String.class);
-        Assert.assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
+        Assert.assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
 
         response = request("/nacos/v1/ns/instance/list",
             Params.newParams()

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -64,6 +64,7 @@ public Cluster() {
 
     public Cluster(String clusterName) {
         this.setName(clusterName);
+        validate();
     }
 
     public int getDefIPPort() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -64,6 +64,7 @@ public Cluster() {
 
     public Cluster(String clusterName) {
         this.setName(clusterName);
+        validate();
     }
 
     public int getDefIPPort() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -64,6 +64,7 @@ public Cluster() {
 
     public Cluster(String clusterName) {
         this.setName(clusterName);
+        validate();
     }
 
     public int getDefIPPort() {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -187,6 +187,8 @@ public void onRemove(String key) {
             return;
         }
 
+        listeners.remove(key);
+
         notifier.addTask(key, ApplyAction.DELETE);
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftConsistencyServiceImpl.java
Patch:
@@ -62,9 +62,11 @@ public void remove(String key) throws NacosException {
                 Datum datum = new Datum();
                 datum.key = key;
                 raftCore.onDelete(datum.key, peers.getLeader());
+                raftCore.unlistenAll(key);
                 return;
             }
             raftCore.signalDelete(key);
+            raftCore.unlistenAll(key);
         } catch (Exception e) {
             Loggers.RAFT.error("Raft remove failed.", e);
             throw new NacosException(NacosException.SERVER_ERROR, "Raft remove failed, key:" + key);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -121,6 +121,7 @@ public String deregister(HttpServletRequest request) throws Exception {
         return "ok";
     }
 
+    @CanDistro
     @RequestMapping(value = "", method = RequestMethod.PUT)
     public String update(HttpServletRequest request) throws Exception {
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -168,7 +168,9 @@ public void onDelete(String key) throws Exception {
         if (service != null) {
             service.destroy();
             consistencyService.remove(KeyBuilder.buildInstanceListKey(namespace, name, true));
+
             consistencyService.remove(KeyBuilder.buildInstanceListKey(namespace, name, false));
+
             consistencyService.unlisten(KeyBuilder.buildServiceMetaKey(namespace, name), service);
             Loggers.SRV_LOG.info("[DEAD-SERVICE] {}", service.toJSON());
         }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -72,7 +72,9 @@ public void run() {
             if (distroMapper.responsible(cluster.getService().getName()) &&
                 switchDomain.isHealthCheckEnabled(cluster.getService().getName())) {
                 healthCheckProcessor.process(this);
-                Loggers.EVT_LOG.debug("[HEALTH-CHECK] schedule health check task: {}", cluster.getService().getName());
+                if (Loggers.EVT_LOG.isDebugEnabled()) {
+                    Loggers.EVT_LOG.debug("[HEALTH-CHECK] schedule health check task: {}", cluster.getService().getName());
+                }
             }
         } catch (Throwable e) {
             Loggers.SRV_LOG.error("[HEALTH-CHECK] error while process health check for {}:{}",

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -69,6 +69,7 @@ public String update(HttpServletRequest request) throws Exception {
             Loggers.SRV_LOG.warn("[UPDATE-CLUSTER] cluster not exist, will create it: {}, service: {}", clusterName, serviceName);
             cluster = new Cluster();
             cluster.setName(clusterName);
+            cluster.setService(service);
         }
 
         cluster.setDefCkport(NumberUtils.toInt(checkPort));

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -69,6 +69,7 @@ public String update(HttpServletRequest request) throws Exception {
             Loggers.SRV_LOG.warn("[UPDATE-CLUSTER] cluster not exist, will create it: {}, service: {}", clusterName, serviceName);
             cluster = new Cluster();
             cluster.setName(clusterName);
+            cluster.setService(service);
         }
 
         cluster.setDefCkport(NumberUtils.toInt(checkPort));

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -99,7 +99,9 @@ public void init() {
     }
 
     public void destroy() {
-        checkTask.setCancelled(true);
+        if (checkTask != null) {
+            checkTask.setCancelled(true);
+        }
     }
 
     public HealthCheckTask getHealthCheckTask() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -217,6 +217,7 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {
                         instance.getClusterName(), instance.toJSON());
                     Cluster cluster = new Cluster(instance.getClusterName());
                     cluster.setService(this);
+                    cluster.init();
                     getClusterMap().put(instance.getClusterName(), cluster);
                 }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.utils.IOUtils;
 import com.alibaba.nacos.client.utils.*;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.slf4j.Logger;
 
 import java.io.IOException;
@@ -396,7 +395,6 @@ public RandomizedServerAddress(String ip) {
         }
 
         @Override
-        @SuppressFBWarnings("EQ_COMPARETO_USE_OBJECT_EQUALS")
         public int compareTo(RandomizedServerAddress other) {
             if (this.priority != other.priority) {
                 return other.priority - this.priority;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -25,7 +25,6 @@
 import com.alibaba.nacos.client.naming.net.NamingProxy;
 import com.alibaba.nacos.client.naming.utils.StringUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 import java.util.*;
 import java.util.concurrent.*;
@@ -267,7 +266,6 @@ public void scheduleUpdateIfAbsent(String serviceName, String clusters) {
         }
     }
 
-    @SuppressFBWarnings("NN_NAKED_NOTIFY")
     public void updateServiceNow(String serviceName, String clusters) {
         ServiceInfo oldService = getSerivceInfo0(serviceName, clusters);
         try {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/IoUtils.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 import java.io.*;
 import java.nio.channels.FileChannel;
@@ -163,7 +162,6 @@ public static void cleanDirectory(File directory) throws IOException {
         }
     }
 
-    @SuppressFBWarnings("BIT_IOR_OF_SIGNED_BYTE")
     public static boolean isGzipStream(byte[] bytes) {
 
         int minByteArraySize = 2;

File: naming/src/main/java/com/alibaba/nacos/naming/boot/RunningConfig.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.web.context.WebServerInitializedEvent;
@@ -39,7 +38,6 @@ public class RunningConfig implements ApplicationListener<WebServerInitializedEv
     @Autowired
     private ServletContext servletContext;
 
-    @SuppressFBWarnings("ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD")
     @Override
     public void onApplicationEvent(WebServerInitializedEvent event) {
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
@@ -57,7 +56,6 @@ public void init(FilterConfig filterConfig) throws ServletException {
 
     }
 
-    @SuppressFBWarnings("HRS_REQUEST_PARAMETER_TO_HTTP_HEADER")
     @Override
     public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {
         HttpServletRequest req = (HttpServletRequest) servletRequest;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -21,7 +21,6 @@
 import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;
 import com.alibaba.nacos.client.config.utils.IOUtils;
 import com.alibaba.nacos.client.utils.*;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.slf4j.Logger;
 
 import java.io.IOException;
@@ -396,7 +395,6 @@ public RandomizedServerAddress(String ip) {
         }
 
         @Override
-        @SuppressFBWarnings("EQ_COMPARETO_USE_OBJECT_EQUALS")
         public int compareTo(RandomizedServerAddress other) {
             if (this.priority != other.priority) {
                 return other.priority - this.priority;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -25,7 +25,6 @@
 import com.alibaba.nacos.client.naming.net.NamingProxy;
 import com.alibaba.nacos.client.naming.utils.StringUtils;
 import com.alibaba.nacos.client.naming.utils.UtilAndComs;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 import java.util.*;
 import java.util.concurrent.*;
@@ -267,7 +266,6 @@ public void scheduleUpdateIfAbsent(String serviceName, String clusters) {
         }
     }
 
-    @SuppressFBWarnings("NN_NAKED_NOTIFY")
     public void updateServiceNow(String serviceName, String clusters) {
         ServiceInfo oldService = getSerivceInfo0(serviceName, clusters);
         try {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/IoUtils.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.client.naming.utils;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 
 import java.io.*;
 import java.nio.channels.FileChannel;
@@ -163,7 +162,6 @@ public static void cleanDirectory(File directory) throws IOException {
         }
     }
 
-    @SuppressFBWarnings("BIT_IOR_OF_SIGNED_BYTE")
     public static boolean isGzipStream(byte[] bytes) {
 
         int minByteArraySize = 2;

File: naming/src/main/java/com/alibaba/nacos/naming/boot/RunningConfig.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.web.context.WebServerInitializedEvent;
@@ -39,7 +38,6 @@ public class RunningConfig implements ApplicationListener<WebServerInitializedEv
     @Autowired
     private ServletContext servletContext;
 
-    @SuppressFBWarnings("ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD")
     @Override
     public void onApplicationEvent(WebServerInitializedEvent event) {
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.SwitchDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 
@@ -57,7 +56,6 @@ public void init(FilterConfig filterConfig) throws ServletException {
 
     }
 
-    @SuppressFBWarnings("HRS_REQUEST_PARAMETER_TO_HTTP_HEADER")
     @Override
     public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {
         HttpServletRequest req = (HttpServletRequest) servletRequest;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ApiController.java
Patch:
@@ -24,6 +24,7 @@
 import com.alibaba.nacos.naming.core.ServiceManager;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.push.ClientInfo;
+import com.alibaba.nacos.naming.web.CanDistro;
 import com.alibaba.nacos.naming.web.OverrideParameterRequestWrapper;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -138,6 +139,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
             agent, clusters, clientIP, udpPort, env, isCheck, app, tenant, healthyOnly);
     }
 
+    @CanDistro
     @RequestMapping("/clientBeat")
     public JSONObject clientBeat(HttpServletRequest request) throws Exception {
         OverrideParameterRequestWrapper requestWrapper = OverrideParameterRequestWrapper.buildRequest(request);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DistroConsistencyServiceImpl.java
Patch:
@@ -411,7 +411,8 @@ public void run() {
                     }
 
                     if (Loggers.EPHEMERAL.isDebugEnabled()) {
-                        Loggers.EPHEMERAL.debug("[NACOS-DISTRO] datum change notified, key: {}, listener count: {}", datumKey, count);
+                        Loggers.EPHEMERAL.debug("[NACOS-DISTRO] datum change notified, key: {}, listener count: {}, action: {}",
+                            datumKey, count, action.name());
                     }
                 } catch (Throwable e) {
                     Loggers.EPHEMERAL.error("[NACOS-DISTRO] Error while handling notifying task", e);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/RaftController.java
Patch:
@@ -50,7 +50,7 @@
 import java.util.Map;
 
 /**
- * HTTP interfaces for Raft consistency protocol. These interfaces should only be invoked by Nacos server itself.
+ * Methods for Raft consistency protocol. These methods should only be invoked by Nacos server itself.
  *
  * @author nkorange
  * @since 1.0.0
@@ -83,7 +83,6 @@ public JSONObject vote(HttpServletRequest request, HttpServletResponse response)
     public JSONObject beat(HttpServletRequest request, HttpServletResponse response) throws Exception {
 
         String entity = new String(IoUtils.tryDecompress(request.getInputStream()), "UTF-8");
-//        String value = Arrays.asList(entity).toArray(new String[1])[0];
         String value = URLDecoder.decode(entity, "UTF-8");
         value = URLDecoder.decode(value, "UTF-8");
 
@@ -240,7 +239,6 @@ public String onDelete(HttpServletRequest request, HttpServletResponse response)
         response.setHeader("Content-Encode", "gzip");
 
         String entity = IOUtils.toString(request.getInputStream(), "UTF-8");
-//        String value = Arrays.asList(entity).toArray(new String[1])[0];
         String value = URLDecoder.decode(entity, "UTF-8");
         value = URLDecoder.decode(value, "UTF-8");
         JSONObject jsonObject = JSON.parseObject(value);

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -112,6 +112,7 @@ public Service getService() {
 
     public void setService(Service service) {
         this.service = service;
+        this.setServiceName(service.getName());
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -181,7 +181,7 @@ public static Instance fromJSON(String json) {
         }
 
         if (ip == null) {
-            throw new IllegalArgumentException("malfomed ip config: " + json);
+            throw new IllegalArgumentException("malformed ip config: " + json);
         }
 
         if (ip.getWeight() > MAX_WEIGHT_VALUE) {
@@ -195,7 +195,7 @@ public static Instance fromJSON(String json) {
         }
 
         if (!ip.validate()) {
-            throw new IllegalArgumentException("malfomed ip config: " + json);
+            throw new IllegalArgumentException("malformed ip config: " + json);
         }
 
         return ip;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -44,9 +44,9 @@
  * Service of Nacos server side
  * <p>
  * We introduce a 'service --> cluster --> instance' model, in which service stores a list of clusters,
- * which contains a list of instances.
+ * which contain a list of instances.
  * <p>
- * This class inherits from Service in API module and stores some fields that do not expose to client.
+ * This class inherits from Service in API module and stores some fields that do not have to expose to client.
  *
  * @author nkorange
  */

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -187,7 +187,8 @@ public JSONObject detail(HttpServletRequest request) throws Exception {
 
         List<Instance> ips = service.allIPs(clusters);
         if (ips == null || ips.isEmpty()) {
-            throw new IllegalStateException("no ips found for cluster " + cluster + " in service " + serviceName);
+            throw new NacosException(NacosException.NOT_FOUND,
+                "no ips found for cluster " + cluster + " in service " + serviceName);
         }
 
         for (Instance instance : ips) {
@@ -205,7 +206,7 @@ public JSONObject detail(HttpServletRequest request) throws Exception {
             }
         }
 
-        throw new IllegalStateException("no matched ip found!");
+        throw new NacosException(NacosException.NOT_FOUND, "no matched ip found!");
     }
 
     @CanDistro

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -96,9 +96,8 @@ public String update(HttpServletRequest request) throws Exception {
 
         cluster.setHealthChecker(abstractHealthChecker);
         cluster.setMetadata(UtilsAndCommons.parseMetadata(metadata));
-
+        cluster.init();
         service.getClusterMap().put(clusterName, cluster);
-
         service.setLastModifiedMillis(System.currentTimeMillis());
         service.recalculateChecksum();
         service.validate();

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -481,6 +481,7 @@ public List<Instance> updateIpAddresses(Service service, String action, boolean
             if (!service.getClusterMap().containsKey(instance.getClusterName())) {
                 Cluster cluster = new Cluster(instance.getClusterName());
                 cluster.setService(service);
+                cluster.init();
                 service.getClusterMap().put(instance.getClusterName(), cluster);
                 Loggers.SRV_LOG.warn("cluster: {} not found, ip: {}, will create new cluster with default configuration.",
                     instance.getClusterName(), instance.toJSON());

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -63,7 +63,7 @@ public synchronized ConcurrentHashMap<String, Datum> loadDatums(RaftCore.Notifie
                     datum = readDatum(datumFile, cache.getName());
                     if (datum != null) {
                         datums.put(datum.key, datum);
-                        notifier.addTask(datum, ApplyAction.CHANGE);
+                        notifier.addTask(datum.key, ApplyAction.CHANGE);
                     }
                 }
                 continue;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -241,7 +241,8 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {
             stringBuilder.append(instance.toIPAddr()).append("_").append(instance.isHealthy()).append(",");
         }
 
-        Loggers.EVT_LOG.info("[IP-UPDATED] service: {}, ips: {}", getName(), stringBuilder.toString());
+        Loggers.EVT_LOG.info("[IP-UPDATED] namespace: {}, service: {}, ips: {}",
+            getNamespaceId(), getName(), stringBuilder.toString());
 
     }
 
@@ -285,7 +286,7 @@ public List<Instance> allIPs(List<String> clusters) {
         for (String cluster : clusters) {
             Cluster clusterObj = clusterMap.get(cluster);
             if (clusterObj == null) {
-                throw new IllegalArgumentException("can not find cluster: " + cluster + ", service:" + getName());
+                continue;
             }
 
             allIPs.addAll(clusterObj.allIPs());

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -253,7 +253,8 @@ public void updatedHealthStatus(String namespaceId, String serviceName, String s
             stringBuilder.append(instance.toIPAddr()).append("_").append(instance.isHealthy()).append(",");
         }
 
-        Loggers.EVT_LOG.info("[IP-UPDATED] service: {}, ips: {}", service.getName(), stringBuilder.toString());
+        Loggers.EVT_LOG.info("[IP-UPDATED] namespace: {}, service: {}, ips: {}",
+            service.getNamespaceId(), service.getName(), stringBuilder.toString());
 
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/FilterBase.java
Patch:
@@ -47,6 +47,7 @@ public void init() {
         initClassMethod(RaftController.class);
         initClassMethod(DistroController.class);
         initClassMethod(OperatorController.class);
+        initClassMethod(ApiController.class);
     }
 
     public Method getMethod(String httpMethod, String path) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -241,7 +241,8 @@ public void updateIPs(Collection<Instance> instances, boolean ephemeral) {
             stringBuilder.append(instance.toIPAddr()).append("_").append(instance.isHealthy()).append(",");
         }
 
-        Loggers.EVT_LOG.info("[IP-UPDATED] service: {}, ips: {}", getName(), stringBuilder.toString());
+        Loggers.EVT_LOG.info("[IP-UPDATED] namespace: {}, service: {}, ips: {}",
+            getNamespaceId(), getName(), stringBuilder.toString());
 
     }
 
@@ -285,7 +286,7 @@ public List<Instance> allIPs(List<String> clusters) {
         for (String cluster : clusters) {
             Cluster clusterObj = clusterMap.get(cluster);
             if (clusterObj == null) {
-                throw new IllegalArgumentException("can not find cluster: " + cluster + ", service:" + getName());
+                continue;
             }
 
             allIPs.addAll(clusterObj.allIPs());

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -253,7 +253,8 @@ public void updatedHealthStatus(String namespaceId, String serviceName, String s
             stringBuilder.append(instance.toIPAddr()).append("_").append(instance.isHealthy()).append(",");
         }
 
-        Loggers.EVT_LOG.info("[IP-UPDATED] service: {}, ips: {}", service.getName(), stringBuilder.toString());
+        Loggers.EVT_LOG.info("[IP-UPDATED] namespace: {}, service: {}, ips: {}",
+            service.getNamespaceId(), service.getName(), stringBuilder.toString());
 
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/FilterBase.java
Patch:
@@ -47,6 +47,7 @@ public void init() {
         initClassMethod(RaftController.class);
         initClassMethod(DistroController.class);
         initClassMethod(OperatorController.class);
+        initClassMethod(ApiController.class);
     }
 
     public Method getMethod(String httpMethod, String path) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -54,9 +54,6 @@ public class Service extends com.alibaba.nacos.api.naming.pojo.Service implement
 
     private static final String SERVICE_NAME_SYNTAX = "[0-9a-zA-Z@\\.:_-]+";
 
-    @JSONField(serialize = false)
-    private ClientBeatProcessor clientBeatProcessor = new ClientBeatProcessor();
-
     @JSONField(serialize = false)
     private ClientBeatCheckTask clientBeatCheckTask = new ClientBeatCheckTask(this);
 
@@ -104,6 +101,7 @@ public void setIpDeleteTimeout(long ipDeleteTimeout) {
     }
 
     public void processClientBeat(final RsInfo rsInfo) {
+        ClientBeatProcessor clientBeatProcessor = new ClientBeatProcessor();
         clientBeatProcessor.setService(this);
         clientBeatProcessor.setRsInfo(rsInfo);
         HealthCheckReactor.scheduleNow(clientBeatProcessor);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -89,7 +89,7 @@ public class SwitchDomain implements Record, Cloneable {
 
     private String overriddenServerStatus = null;
 
-    private String serverMode = "MIXED";
+    private String serverMode = "AP";
 
     public boolean isEnableAuthentication() {
         return enableAuthentication;

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -54,9 +54,6 @@ public class Service extends com.alibaba.nacos.api.naming.pojo.Service implement
 
     private static final String SERVICE_NAME_SYNTAX = "[0-9a-zA-Z@\\.:_-]+";
 
-    @JSONField(serialize = false)
-    private ClientBeatProcessor clientBeatProcessor = new ClientBeatProcessor();
-
     @JSONField(serialize = false)
     private ClientBeatCheckTask clientBeatCheckTask = new ClientBeatCheckTask(this);
 
@@ -104,6 +101,7 @@ public void setIpDeleteTimeout(long ipDeleteTimeout) {
     }
 
     public void processClientBeat(final RsInfo rsInfo) {
+        ClientBeatProcessor clientBeatProcessor = new ClientBeatProcessor();
         clientBeatProcessor.setService(this);
         clientBeatProcessor.setRsInfo(rsInfo);
         HealthCheckReactor.scheduleNow(clientBeatProcessor);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -89,7 +89,7 @@ public class SwitchDomain implements Record, Cloneable {
 
     private String overriddenServerStatus = null;
 
-    private String serverMode = "MIXED";
+    private String serverMode = "AP";
 
     public boolean isEnableAuthentication() {
         return enableAuthentication;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -557,7 +557,7 @@ public void onThrowable(Throwable t) {
                         }
                     });
                 } catch (Exception e) {
-                    Loggers.RAFT.error("VIPSRV error while sending heart-beat to peer: {} {}", server, e);
+                    Loggers.RAFT.error("error while sending heart-beat to peer: {} {}", server, e);
                     MetricsMonitor.getLeaderSendBeatFailedException().increment();
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -154,7 +154,7 @@ public boolean matchUnlistenKey(String key) {
     @Override
     public void onChange(String key, Instances value) throws Exception {
 
-        Loggers.RAFT.info("[NACOS-RAFT] datum is changed, key: {}, value: {}", key, value);
+        Loggers.SRV_LOG.info("[NACOS-RAFT] datum is changed, key: {}, value: {}", key, value);
 
         for (Instance ip : value.getInstanceList()) {
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -112,7 +112,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
 
             return getResult(conn);
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("[VIPSRV] Exception while request: {}, caused: {}", url, e);
+            Loggers.SRV_LOG.warn("Exception while request: {}, caused: {}", url, e);
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {
             if (conn != null) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -139,10 +139,9 @@ public void setSendBeatOnly(boolean sendBeatOnly) {
     // the followings are not implemented
 
     public String getName() {
-        return "00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00";
+        return UtilsAndCommons.SWITCH_DOMAIN_NAME;
     }
 
-
     public void update(SwitchDomain domain) {
 
     }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -77,7 +77,7 @@ public class UtilsAndCommons {
 
     public static final String IPADDRESS_DATA_ID_PRE = "com.alibaba.nacos.naming.iplist.";
 
-    public static final String SWITCH_DOMAIN_NAME = "00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00";
+    public static final String SWITCH_DOMAIN_NAME = "00-00---000-NACOS_SWITCH_DOMAIN-000---00-00";
 
     public static final String CIDR_REGEX = "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]+";
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -89,7 +89,7 @@ public class SwitchDomain implements Record, Cloneable {
 
     private String overriddenServerStatus = null;
 
-    private String serverMode = "MIXED";
+    private String serverMode = "AP";
 
     public boolean isEnableAuthentication() {
         return enableAuthentication;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -79,8 +79,8 @@ public static byte[] getData(List<String> keys, String server) throws Exception
 
         Map<String, String> params = new HashMap<>(8);
         params.put("keys", StringUtils.join(keys, ","));
-        HttpClient.HttpResult result = HttpClient.httpGet("http://" + server + RunningConfig.getContextPath()
-            + UtilsAndCommons.NACOS_NAMING_CONTEXT + DATA_GET_URL, new ArrayList<>(), params);
+        HttpClient.HttpResult result = HttpClient.httpGetLarge("http://" + server + RunningConfig.getContextPath()
+            + UtilsAndCommons.NACOS_NAMING_CONTEXT + DATA_GET_URL, new HashMap<>(8), JSON.toJSONString(params));
 
         if (HttpURLConnection.HTTP_OK == result.code) {
             return result.content.getBytes();

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -25,6 +25,7 @@
 import java.nio.charset.Charset;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
@@ -40,7 +41,7 @@ public class Instances implements Record {
 
     private long lastCalculateTime = 0L;
 
-    private List<Instance> instanceList;
+    private List<Instance> instanceList = new ArrayList<>();
 
     public List<Instance> getInstanceList() {
         return instanceList;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.misc;
 
+import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.Response;
@@ -49,7 +50,7 @@ public void send(final String serverIP, Message msg) {
         }
 
         try {
-            HttpClient.asyncHttpPost(url, null, params, new AsyncCompletionHandler() {
+            HttpClient.asyncHttpPostLarge(url, null, JSON.toJSONString(params), new AsyncCompletionHandler() {
                 @Override
                 public Integer onCompleted(Response response) throws Exception {
                     if (response.getStatusCode() != HttpURLConnection.HTTP_OK) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -557,7 +557,7 @@ public void onThrowable(Throwable t) {
                         }
                     });
                 } catch (Exception e) {
-                    Loggers.RAFT.error("VIPSRV error while sending heart-beat to peer: {} {}", server, e);
+                    Loggers.RAFT.error("error while sending heart-beat to peer: {} {}", server, e);
                     MetricsMonitor.getLeaderSendBeatFailedException().increment();
                 }
             }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -154,7 +154,7 @@ public boolean matchUnlistenKey(String key) {
     @Override
     public void onChange(String key, Instances value) throws Exception {
 
-        Loggers.RAFT.info("[NACOS-RAFT] datum is changed, key: {}, value: {}", key, value);
+        Loggers.SRV_LOG.info("[NACOS-RAFT] datum is changed, key: {}, value: {}", key, value);
 
         for (Instance ip : value.getInstanceList()) {
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -112,7 +112,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
 
             return getResult(conn);
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("[VIPSRV] Exception while request: {}, caused: {}", url, e);
+            Loggers.SRV_LOG.warn("Exception while request: {}, caused: {}", url, e);
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {
             if (conn != null) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -139,10 +139,9 @@ public void setSendBeatOnly(boolean sendBeatOnly) {
     // the followings are not implemented
 
     public String getName() {
-        return "00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00";
+        return UtilsAndCommons.SWITCH_DOMAIN_NAME;
     }
 
-
     public void update(SwitchDomain domain) {
 
     }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -77,7 +77,7 @@ public class UtilsAndCommons {
 
     public static final String IPADDRESS_DATA_ID_PRE = "com.alibaba.nacos.naming.iplist.";
 
-    public static final String SWITCH_DOMAIN_NAME = "00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00";
+    public static final String SWITCH_DOMAIN_NAME = "00-00---000-NACOS_SWITCH_DOMAIN-000---00-00";
 
     public static final String CIDR_REGEX = "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]+";
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -106,6 +106,7 @@ private void deleteIP(Instance instance) {
             NamingProxy.Request request = NamingProxy.Request.newRequest();
             request.appendParam("ip", instance.getIp())
                 .appendParam("port", String.valueOf(instance.getPort()))
+                .appendParam("ephemeral", "true")
                 .appendParam("clusterName", instance.getClusterName())
                 .appendParam("serviceName", service.getName())
                 .appendParam("namespaceId", service.getNamespaceId());

File: cmdb/src/main/java/com/alibaba/nacos/cmdb/controllers/OperationController.java
Patch:
@@ -40,7 +40,7 @@ public class OperationController {
     @Autowired
     private CmdbProvider cmdbProvider;
 
-    @RequestMapping(value = "/updateSwitch", method = RequestMethod.POST)
+    @RequestMapping(value = "/switch", method = RequestMethod.PUT)
     public String updateSwitch(HttpServletRequest request) throws Exception {
 
         String entry = WebUtils.required(request, "entry");
@@ -64,7 +64,7 @@ public String updateSwitch(HttpServletRequest request) throws Exception {
         return "ok";
     }
 
-    @RequestMapping(value = "/queryLabel", method = RequestMethod.GET)
+    @RequestMapping(value = "/label", method = RequestMethod.GET)
     public String queryLabel(HttpServletRequest request) throws Exception {
         String entry = WebUtils.required(request, "entry");
         String label = WebUtils.required(request, "label");

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -38,6 +38,7 @@
 import org.springframework.web.bind.annotation.RestController;
 
 import javax.servlet.http.HttpServletRequest;
+import java.net.URLDecoder;
 import java.util.*;
 
 /**
@@ -397,13 +398,13 @@ private List<String> filterServiceMetadata(String namespaceId, List<String> serv
         return filteredServices;
     }
 
-    private Selector parseSelector(String selectorJsonString) throws NacosException {
+    private Selector parseSelector(String selectorJsonString) throws Exception {
 
         if (StringUtils.isBlank(selectorJsonString)) {
             return new NoneSelector();
         }
 
-        JSONObject selectorJson = JSON.parseObject(selectorJsonString);
+        JSONObject selectorJson = JSON.parseObject(URLDecoder.decode(selectorJsonString, "UTF-8"));
         switch (SelectorType.valueOf(selectorJson.getString("type"))) {
             case none:
                 return new NoneSelector();

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -473,8 +473,8 @@ private void updateOrAddCluster(Collection<Cluster> clusters) {
         for (Cluster cluster : clusters) {
             Cluster oldCluster = clusterMap.get(cluster.getName());
             if (oldCluster != null) {
-                oldCluster.update(cluster);
                 oldCluster.setService(this);
+                oldCluster.update(cluster);
             } else {
                 cluster.init();
                 cluster.setService(this);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -20,9 +20,9 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.cluster.ServerMode;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
+import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.RecordListener;
-import com.alibaba.nacos.naming.consistency.Datum;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
@@ -70,7 +70,7 @@ public void update(String entry, String value, boolean debug) throws Exception {
             Datum datum = consistencyService.get(UtilsAndCommons.getSwitchDomainKey());
             SwitchDomain switchDomain;
 
-            if (datum != null) {
+            if (datum != null && datum.value != null) {
                 switchDomain = (SwitchDomain) datum.value;
             } else {
                 switchDomain = this.switchDomain.clone();

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/ServiceDetailView.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.naming.pojo.Cluster;
-import com.alibaba.nacos.naming.core.Service;
+import com.alibaba.nacos.api.naming.pojo.Service;
 
 import java.util.List;
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -80,7 +80,7 @@ public Message get(String serverIP, String key) {
         try {
             Loggers.SRV_LOG.info("[STATUS-SYNCHRONIZE] sync service status from: {}, service: {}", serverIP, key);
             result = NamingProxy.reqAPI(RunningConfig.getContextPath()
-                + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/" + "listWithHealthStatus", params, serverIP);
+                + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/" + "statuses", params, serverIP);
         } catch (Exception e) {
             Loggers.SRV_LOG.warn("[STATUS-SYNCHRONIZE] Failed to get service status from " + serverIP, e);
             return null;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/DataSyncer.java
Patch:
@@ -49,7 +49,7 @@ public class DataSyncer implements ServerChangeListener {
     private DataStore dataStore;
 
     @Autowired
-    private PartitionConfig partitionConfig;
+    private GlobalConfig partitionConfig;
 
     @Autowired
     private Serializer serializer;

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/distro/TaskDispatcher.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.naming.consistency.ephemeral.distro;
 
 import com.alibaba.nacos.naming.cluster.servers.Server;
+import com.alibaba.nacos.naming.misc.GlobalConfig;
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.NetUtils;
@@ -38,7 +39,7 @@
 public class TaskDispatcher {
 
     @Autowired
-    private PartitionConfig partitionConfig;
+    private GlobalConfig partitionConfig;
 
     @Autowired
     private DataSyncer dataSyncer;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -223,7 +223,7 @@ public JSONObject list(HttpServletRequest request) throws Exception {
         }
 
         for (int i = start; i < end; i++) {
-            serviceNameList.add(i, serviceNameList.get(i).replace(groupName + Constants.SERVICE_INFO_SPLITER, ""));
+            serviceNameList.set(i, serviceNameList.get(i).replace(groupName + Constants.SERVICE_INFO_SPLITER, ""));
         }
 
         result.put("doms", serviceNameList.subList(start, end));

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -40,11 +40,11 @@ public void send(final String serverIP, Message msg) {
         params.put("serverStatus", msg.getData());
 
         String url = "http://" + serverIP + ":" + RunningConfig.getServerPort()
-            + RunningConfig.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/operator/serverStatus";
+            + RunningConfig.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/operator/server/status";
 
         if (serverIP.contains(UtilsAndCommons.IP_PORT_SPLITER)) {
             url = "http://" + serverIP + RunningConfig.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT
-                + "/operator/serverStatus";
+                + "/operator/server/status";
         }
 
         try {

File: test/src/test/java/com/alibaba/nacos/test/naming/CPInstancesAPI_ITCase.java
Patch:
@@ -151,7 +151,7 @@ public void registerInstance_ephemeral_false_deregisterInstance() throws Excepti
         instance.setPort(80);
         naming1.registerInstance(serviceName, TEST_GROUP_1, instance);
         naming1.deregisterInstance(serviceName, TEST_GROUP_1, "11.11.11.11", 80, "c1");
-        
+
         namingServiceDelete(serviceName, TEST_NAMESPACE_1, TEST_GROUP_1);
     }
 
@@ -358,7 +358,7 @@ private void namingServiceCreate(String serviceName, String namespace, String gr
         ResponseEntity<String> response = request(NamingBase.NAMING_CONTROLLER_PATH + "/service",
             Params.newParams()
                 .appendParam("serviceName", serviceName)
-                .appendParam("protectThreshold", "3")
+                .appendParam("protectThreshold", "0.3")
                 .appendParam("namespaceId", namespace)
                 .appendParam("groupName", groupName)
                 .done(),

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -69,7 +69,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
         HttpURLConnection conn = null;
         try {
             String encodedContent = encodingParams(paramValues, encoding);
-            url += (null == encodedContent) ? "" : ("?" + encodedContent);
+            url += (StringUtils.isEmpty(encodedContent)) ? "" : ("?" + encodedContent);
 
             conn = (HttpURLConnection) new URL(url).openConnection();
 
@@ -174,7 +174,7 @@ private static void setHeaders(HttpURLConnection conn, List<String> headers, Str
     private static String encodingParams(Map<String, String> params, String encoding)
         throws UnsupportedEncodingException {
         if (null == params || params.isEmpty()) {
-            return null;
+            return "";
         }
 
         params.put("encoding", encoding);

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -172,8 +172,6 @@ private static void setHeaders(HttpURLConnection conn, List<String> headers, Str
     }
 
     private static String encodingParams(Map<String, String> params, String encoding)
-        throws UnsupportedEncodingException {
-        StringBuilder sb = new StringBuilder();
         throws UnsupportedEncodingException {
         if (null == params || params.isEmpty()) {
             return null;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -402,7 +402,7 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
             result.put("name", serviceName);
             result.put("cacheMillis", cacheMillis);
             result.put("lastRefTime", System.currentTimeMillis());
-            result.put("checksum", service.getChecksum() + System.currentTimeMillis());
+            result.put("checksum", service.getChecksum());
             result.put("useSpecifiedURL", false);
             result.put("clusters", clusters);
             result.put("env", env);

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatInfo.java
Patch:
@@ -30,7 +30,7 @@ public class BeatInfo {
     private String serviceName;
     private String cluster;
     private Map<String, String> metadata;
-    private boolean scheduled;
+    private volatile boolean scheduled;
 
     @Override
     public String toString() {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/partition/TaskDispatcher.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.naming.misc.GlobalExecutor;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.NetUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -94,7 +95,8 @@ public void run() {
                     String key = queue.poll(partitionConfig.getTaskDispatchPeriod(),
                         TimeUnit.MILLISECONDS);
 
-                    if (dataSyncer.getServers() == null || dataSyncer.getServers().isEmpty()) {
+                    if (StringUtils.isBlank(key) || dataSyncer.getServers() == null ||
+                        dataSyncer.getServers().isEmpty()) {
                         continue;
                     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.naming.core;
 
 import com.alibaba.fastjson.JSON;
+import com.alibaba.fastjson.annotation.JSONField;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.pojo.Record;
 import org.apache.commons.lang3.RandomStringUtils;
@@ -55,6 +56,7 @@ public String toString() {
     }
 
     @Override
+    @JSONField(serialize = false)
     public String getChecksum() {
         recalculateChecksum();
         return cachedChecksum;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -296,7 +296,7 @@ public JSONObject searchService(HttpServletRequest request) {
         return result;
     }
 
-    @RequestMapping("/serviceStatus")
+    @RequestMapping(value = "/status", method = RequestMethod.POST)
     public String serviceStatus(HttpServletRequest request) {
         //format: service1@@checksum@@@service2@@checksum
         String statuses = WebUtils.required(request, "statuses");

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -31,11 +31,11 @@
  */
 public class NamingProxy {
 
-    private static final String DATA_ON_SYNC_URL = "/partition/onSync";
+    private static final String DATA_ON_SYNC_URL = "/partition/datum";
 
-    private static final String DATA_GET_URL = "/partition/get";
+    private static final String DATA_GET_URL = "/partition/datum";
 
-    private static final String TIMESTAMP_SYNC_URL = "/partition/syncTimestamps";
+    private static final String TIMESTAMP_SYNC_URL = "/partition/timestamps";
 
     public static void syncTimestamps(Map<String, String> timestamps, String server) {
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServiceStatusSynchronizer.java
Patch:
@@ -41,11 +41,11 @@ public void send(final String serverIP, Message msg) {
 
 
         String url = "http://" + serverIP + ":" + RunningConfig.getServerPort() + RunningConfig.getContextPath() +
-                UtilsAndCommons.NACOS_NAMING_CONTEXT + "/service/serviceStatus";
+                UtilsAndCommons.NACOS_NAMING_CONTEXT + "/service/status";
 
         if (serverIP.contains(UtilsAndCommons.IP_PORT_SPLITER)) {
             url = "http://" + serverIP + RunningConfig.getContextPath() +
-                    UtilsAndCommons.NACOS_NAMING_CONTEXT + "/service/serviceStatus";
+                    UtilsAndCommons.NACOS_NAMING_CONTEXT + "/service/status";
         }
 
         try {

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -191,17 +191,17 @@ public void registerService(String serviceName, String groupName, Instance insta
 
     }
 
-    public void deregisterService(String serviceName, String ip, int port, String cluster) throws NacosException {
+    public void deregisterService(String serviceName, String ip, int port, String clusterName) throws NacosException {
 
         NAMING_LOGGER.info("[DEREGISTER-SERVICE] {} deregistering service {} with instance: {}:{}@{}",
-            namespaceId, serviceName, ip, port, cluster);
+            namespaceId, serviceName, ip, port, clusterName);
 
         final Map<String, String> params = new HashMap<String, String>(8);
         params.put(CommonParams.NAMESPACE_ID, namespaceId);
         params.put("ip", ip);
         params.put("port", String.valueOf(port));
         params.put(CommonParams.SERVICE_NAME, serviceName);
-        params.put(CommonParams.CLUSTER_NAME, cluster);
+        params.put(CommonParams.CLUSTER_NAME, clusterName);
 
         reqAPI(UtilAndComs.NACOS_URL_INSTANCE, params, HttpMethod.DELETE);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instance.java
Patch:
@@ -218,9 +218,9 @@ public boolean equals(Object obj) {
     @JSONField(serialize = false)
     public String getDatumKey() {
         if (getPort() > 0) {
-            return getIp() + ":" + getPort() + ":" + UtilsAndCommons.LOCALHOST_SITE;
+            return getIp() + ":" + getPort() + ":" + UtilsAndCommons.LOCALHOST_SITE + ":" + getClusterName();
         } else {
-            return getIp() + ":" + UtilsAndCommons.LOCALHOST_SITE;
+            return getIp() + ":" + UtilsAndCommons.LOCALHOST_SITE + ":" + getClusterName();
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -97,7 +97,7 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
                     headerList.add(req.getHeader(headerName));
                 }
                 HttpClient.HttpResult result =
-                    HttpClient.request(distroMapper.mapSrv(serviceName) + urlString, headerList, new HashMap<>(2)
+                    HttpClient.request("http://" + distroMapper.mapSrv(serviceName) + urlString, headerList, new HashMap<>(2)
                         , PROXY_CONNECT_TIMEOUT, PROXY_READ_TIMEOUT, "UTF-8", req.getMethod());
 
                 try {

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -238,6 +238,7 @@ public void multipleTenant_group_equalIP() throws Exception {
     @Test
     public void multipleTenant_group_getInstances() throws Exception {
         String serviceName = randomDomainName();
+        System.out.println(serviceName);
         naming1.registerInstance(serviceName, TEST_GROUP_1,"11.11.11.22", 80);
         naming1.registerInstance(serviceName, TEST_GROUP_2,"11.11.11.11", 80);
 
@@ -247,9 +248,7 @@ public void multipleTenant_group_getInstances() throws Exception {
 
         List<Instance> instances = naming1.getAllInstances(serviceName);
 
-        Assert.assertEquals(1, instances.size());
-        Assert.assertEquals("11.11.11.11", instances.get(0).getIp());
-        Assert.assertEquals(80, instances.get(0).getPort());
+        Assert.assertEquals(0, instances.size());
 
         instances = naming.getAllInstances(serviceName);
         Assert.assertEquals(1, instances.size());

File: naming/src/main/java/com/alibaba/nacos/naming/web/NamingConfig.java
Patch:
@@ -29,7 +29,7 @@ public class NamingConfig {
     public FilterRegistrationBean distroFilterRegistration() {
         FilterRegistrationBean<DistroFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(distroFilter());
-        registration.addUrlPatterns("/*");
+        registration.addUrlPatterns("/v1/ns/*");
         registration.setName("distroFilter");
         registration.setOrder(6);
 
@@ -40,7 +40,7 @@ public FilterRegistrationBean distroFilterRegistration() {
     public FilterRegistrationBean trafficReviseFilterRegistration() {
         FilterRegistrationBean<TrafficReviseFilter> registration = new FilterRegistrationBean<>();
         registration.setFilter(trafficReviseFilter());
-        registration.addUrlPatterns("/*");
+        registration.addUrlPatterns("/v1/ns/*");
         registration.setName("trafficReviseFilter");
         registration.setOrder(1);
 

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -124,4 +124,6 @@ public class Constants {
     public static final String DEFAULT_NAMESPACE_ID = "public";
 
     public static final int WRITE_REDIRECT_CODE = 307;
+
+    public static final String SERVICE_INFO_SPLITER = "@@";
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/cache/DiskCache.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.client.naming.cache;
 
 import com.alibaba.fastjson.JSON;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.ServiceInfo;
 import com.alibaba.nacos.client.naming.utils.CollectionUtils;
@@ -44,7 +45,6 @@ public static void write(ServiceInfo dom, String dir) {
             makeSureCacheDirExists(dir);
 
 
-
             File file = new File(dir, dom.getKeyEncoded());
             if (!file.exists()) {
                 // add another !file.exists() to avoid conflicted creating-new-file from multi-instances
@@ -93,8 +93,8 @@ public static Map<String, ServiceInfo> read(String cacheDir) {
 
                 String fileName = URLDecoder.decode(file.getName(), "UTF-8");
 
-                if (!(fileName.endsWith(ServiceInfo.SPLITER + "meta") || fileName.endsWith(
-                    ServiceInfo.SPLITER + "special-url"))) {
+                if (!(fileName.endsWith(Constants.SERVICE_INFO_SPLITER + "meta") || fileName.endsWith(
+                    Constants.SERVICE_INFO_SPLITER + "special-url"))) {
                     ServiceInfo dom = new ServiceInfo(fileName);
                     List<Instance> ips = new ArrayList<Instance>();
                     dom.setHosts(ips);

File: naming/src/main/java/com/alibaba/nacos/naming/acl/AuthChecker.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.acl;
 
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Service;
@@ -67,7 +68,7 @@ public void doRaftAuth(HttpServletRequest req) throws Exception {
     public void doAuth(Map<String, String[]> params, HttpServletRequest req) throws Exception {
 
         String namespaceId = WebUtils.optional(req, CommonParams.NAMESPACE_ID,
-            UtilsAndCommons.DEFAULT_NAMESPACE_ID);
+            Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.optional(req, "name", "");
         if (StringUtils.isEmpty(serviceName)) {
             serviceName = WebUtils.optional(req, "serviceName", "");

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.core.utils.WebUtils;
@@ -50,7 +51,7 @@ public class ClusterController {
     public String update(HttpServletRequest request) throws Exception {
 
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
-            UtilsAndCommons.DEFAULT_NAMESPACE_ID);
+            Constants.DEFAULT_NAMESPACE_ID);
         String clusterName = WebUtils.required(request, CommonParams.CLUSTER_NAME);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
         String healthChecker = WebUtils.required(request, "healthChecker");

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.naming.controllers;
 
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
@@ -71,7 +72,7 @@ public JSONObject server(HttpServletRequest request) {
     public String update(HttpServletRequest request) throws Exception {
 
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
-            UtilsAndCommons.DEFAULT_NAMESPACE_ID);
+            Constants.DEFAULT_NAMESPACE_ID);
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
         String ip = WebUtils.required(request, "ip");
         int port = Integer.parseInt(WebUtils.required(request, "port"));

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.naming.CommonParams;
 import com.alibaba.nacos.core.utils.SystemUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
@@ -154,7 +155,7 @@ public JSONObject metrics(HttpServletRequest request) {
     @RequestMapping("/getResponsibleServer4Dom")
     public JSONObject getResponsibleServer4Dom(HttpServletRequest request) {
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
-            UtilsAndCommons.DEFAULT_NAMESPACE_ID);
+            Constants.DEFAULT_NAMESPACE_ID);
         String dom = WebUtils.required(request, "dom");
         Service service = serviceManager.getService(namespaceId, dom);
 
@@ -181,7 +182,7 @@ public JSONObject getHealthyServerList(HttpServletRequest request) {
     @RequestMapping("/responsible")
     public JSONObject responsible(HttpServletRequest request) {
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
-            UtilsAndCommons.DEFAULT_NAMESPACE_ID);
+            Constants.DEFAULT_NAMESPACE_ID);
         String dom = WebUtils.required(request, "dom");
         Service service = serviceManager.getService(namespaceId, dom);
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.cluster.ServerMode;
 import com.alibaba.nacos.naming.consistency.ConsistencyService;
+import com.alibaba.nacos.naming.consistency.KeyBuilder;
 import com.alibaba.nacos.naming.consistency.RecordListener;
 import com.alibaba.nacos.naming.consistency.Datum;
 import org.apache.commons.lang3.StringUtils;
@@ -400,12 +401,12 @@ public SwitchDomain getSwitchDomain() {
 
     @Override
     public boolean interests(String key) {
-        return key.contains(UtilsAndCommons.SWITCH_DOMAIN_NAME);
+        return KeyBuilder.matchSwitchKey(key);
     }
 
     @Override
     public boolean matchUnlistenKey(String key) {
-        return key.contains(UtilsAndCommons.SWITCH_DOMAIN_NAME);
+        return KeyBuilder.matchSwitchKey(key);
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/web/FilterBase.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.web;
 
+import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.controllers.*;
 import org.springframework.stereotype.Component;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -50,7 +51,7 @@ public void init() {
     }
 
     public Method getMethod(String httpMethod, String path) {
-        String key = httpMethod + "-->" + path;
+        String key = httpMethod + "-->" + path.replace("/nacos", "");
         return methodCache.get(key);
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/TrafficReviseFilter.java
Patch:
@@ -98,7 +98,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
             return;
         }
 
-        resp.getWriter().write("service is " + serverStatusManager.getServerStatus().name() + " now, please try again later!");
+        resp.getWriter().write("server is " + serverStatusManager.getServerStatus().name() + " now, please try again later!");
         resp.setStatus(HttpServletResponse.SC_SERVICE_UNAVAILABLE);
     }
 }

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/InstanceControllerTest.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.BaseTest;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftPeerSet;
 import com.alibaba.nacos.naming.core.Cluster;
@@ -84,7 +85,7 @@ public void registerInstance() throws Exception {
         ipList.add(instance);
         service.updateIPs(ipList, false);
 
-        Mockito.when(serviceManager.getService(UtilsAndCommons.DEFAULT_NAMESPACE_ID, "nacos.test.1")).thenReturn(service);
+        Mockito.when(serviceManager.getService(Constants.DEFAULT_NAMESPACE_ID, "nacos.test.1")).thenReturn(service);
 
         MockHttpServletRequestBuilder builder =
                 MockMvcRequestBuilders.put("/naming/instance")
@@ -129,7 +130,7 @@ public void getInstances() throws Exception {
         ipList.add(instance);
         service.updateIPs(ipList, false);
 
-        Mockito.when(serviceManager.getService(UtilsAndCommons.DEFAULT_NAMESPACE_ID, "nacos.test.1")).thenReturn(service);
+        Mockito.when(serviceManager.getService(Constants.DEFAULT_NAMESPACE_ID, "nacos.test.1")).thenReturn(service);
 
         MockHttpServletRequestBuilder builder =
                 MockMvcRequestBuilders.get("/v1/ns/instances")

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -508,7 +508,7 @@ public void reCalculateCheckSum4Dom() throws Exception {
 
         ResponseEntity<String> response = request("/nacos/v1/ns/api/reCalculateCheckSum4Dom",
                 Params.newParams()
-                        .appendParam(CommonParams.NAMESPACE_ID, UtilsAndCommons.DEFAULT_NAMESPACE_ID)
+                        .appendParam(CommonParams.NAMESPACE_ID, Constants.DEFAULT_NAMESPACE_ID)
                         .appendParam("dom", NamingBase.TEST_DOM_1)
                         .done(),
                 String.class);

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -35,6 +35,7 @@ public NacosException() {
     }
 
     public NacosException(int errCode, String errMsg) {
+        super(errMsg);
         this.errCode = errCode;
         this.errMsg = errMsg;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -128,7 +128,6 @@ public String updateSwitch(HttpServletRequest request) throws Exception {
         return "ok";
     }
 
-
     @RequestMapping(value = "/metrics", method = RequestMethod.GET)
     public JSONObject metrics(HttpServletRequest request) {
 

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -52,6 +52,9 @@ public class DeregisterInstance_ITCase {
 
     @Before
     public void init() throws Exception {
+
+        NamingBase.setServerStatusUp(port);
+
         if (naming == null) {
             //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -183,7 +183,7 @@ public void run() {
                     if (serviceKey == null) {
                         continue;
                     }
-                    GlobalExecutor.sumbitServiceUpdate(new ServiceUpdater(serviceKey));
+                    GlobalExecutor.submitServiceUpdate(new ServiceUpdater(serviceKey));
                 }
             } catch (Exception e) {
                 Loggers.EVT_LOG.error("[UPDATE-DOMAIN] Exception while update service: {}", serviceKey, e);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/GlobalExecutor.java
Patch:
@@ -159,7 +159,7 @@ public static void submit(Runnable runnable) {
         executorService.submit(runnable);
     }
 
-    public static void sumbitServiceUpdate(Runnable runnable) {
+    public static void submitServiceUpdate(Runnable runnable) {
         serviceUpdateExecutor.execute(runnable);
     }
 }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -44,7 +44,7 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * 软负载客户端发布数据专用控制器

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -41,7 +41,7 @@
 import java.util.List;
 import java.util.Map;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.pullLog;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -27,7 +27,7 @@
 
 import javax.annotation.PostConstruct;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * health service

File: config/src/main/java/com/alibaba/nacos/config/server/model/app/ApplicationInfo.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.config.server.model.app;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * app info

File: config/src/main/java/com/alibaba/nacos/config/server/service/BasicDataSourceServiceImpl.java
Patch:
@@ -40,7 +40,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.support.TransactionTemplate;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.service.PersistService.CONFIG_INFO4BETA_ROW_MAPPER;
 import static com.alibaba.nacos.config.server.utils.LogUtil.defaultLog;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigService.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.Map.Entry;
 import java.util.concurrent.ConcurrentHashMap;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.*;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -29,7 +29,7 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
-import static com.alibaba.nacos.common.util.SystemUtils.NACOS_HOME;
+import static com.alibaba.nacos.core.utils.SystemUtils.NACOS_HOME;
 
 /**
  * 磁盘操作工具类。

File: config/src/main/java/com/alibaba/nacos/config/server/service/DynamicDataSource.java
Patch:
@@ -21,7 +21,7 @@
 import org.springframework.context.ApplicationContextAware;
 import org.springframework.stereotype.Component;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * datasource adapter

File: config/src/main/java/com/alibaba/nacos/config/server/service/LocalDataSourceServiceImpl.java
Patch:
@@ -40,9 +40,9 @@
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 
-import static com.alibaba.nacos.common.util.SystemUtils.NACOS_HOME;
-import static com.alibaba.nacos.common.util.SystemUtils.NACOS_HOME_KEY;
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.NACOS_HOME;
+import static com.alibaba.nacos.core.utils.SystemUtils.NACOS_HOME_KEY;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * local data source

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -48,9 +48,9 @@
 import java.util.concurrent.ThreadFactory;
 import java.util.concurrent.TimeUnit;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
-import static com.alibaba.nacos.common.util.SystemUtils.readClusterConf;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.readClusterConf;
 import static com.alibaba.nacos.config.server.utils.LogUtil.defaultLog;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -35,7 +35,7 @@
 import java.sql.*;
 import java.util.List;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -34,7 +34,7 @@
 import java.sql.*;
 import java.util.List;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -46,8 +46,8 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 
 /**

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -33,7 +33,7 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * 数据聚合服务。

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * Merge task processor

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/AsyncNotifyService.java
Patch:
@@ -45,7 +45,7 @@
 import java.util.Queue;
 import java.util.concurrent.*;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * Async notify service

File: config/src/main/java/com/alibaba/nacos/config/server/service/notify/NotifyTaskProcessor.java
Patch:
@@ -32,7 +32,7 @@
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * 通知服务。数据库变更后，通知所有server，包括自己，加载新数据。

File: config/src/main/java/com/alibaba/nacos/config/server/service/trace/ConfigTraceService.java
Patch:
@@ -23,7 +23,7 @@
 
 import java.util.concurrent.TimeUnit;
 
-import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+import static com.alibaba.nacos.core.utils.SystemUtils.LOCAL_IP;
 
 /**
  * Config trace

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PaginationHelper.java
Patch:
@@ -21,7 +21,7 @@
 
 import java.util.List;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * 分页辅助类

File: config/src/main/java/com/alibaba/nacos/config/server/utils/PropertyUtil.java
Patch:
@@ -22,7 +22,7 @@
 
 import javax.annotation.PostConstruct;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * properties utils

File: core/src/main/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListener.java
Patch:
@@ -25,9 +25,9 @@
 
 import java.util.Arrays;
 
-import static com.alibaba.nacos.common.util.Constants.STANDALONE_SPRING_PROFILE;
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
+import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * Standalone {@link Profile} {@link ApplicationListener} for {@link ApplicationEnvironmentPreparedEvent}

File: core/src/test/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListenerTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.springframework.core.env.Environment;
 import org.springframework.test.context.junit4.SpringRunner;
 
-import static com.alibaba.nacos.common.util.Constants.STANDALONE_SPRING_PROFILE;
+import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
 
 /**
  * {@link StandaloneProfileApplicationListener} Test

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.misc;
 
-import com.alibaba.nacos.common.util.SystemUtils;
+import com.alibaba.nacos.core.utils.SystemUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -29,7 +29,7 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.TimeUnit;
 
-import static com.alibaba.nacos.common.util.SystemUtils.*;
+import static com.alibaba.nacos.core.utils.SystemUtils.*;
 
 /**
  * @author nacos

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/IpAddressInfo.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class IpAddressInfo implements Serializable {
 
-    private boolean             valid;
+    private boolean            valid;
 
     private Map<String, String> metadata;
 
@@ -34,7 +34,7 @@ public class IpAddressInfo implements Serializable {
 
     private Double              weight;
 
-    private boolean             enabled;
+    private boolean            enabled;
 
     public boolean isEnabled() {
         return enabled;

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -516,6 +516,7 @@ private static Receiver.AckEntry udpPush(Receiver.AckEntry ackEntry) {
         if (ackEntry.getRetryTimes() > MAX_RETRY_TIMES) {
             Loggers.PUSH.warn("max re-push times reached, retry times {}, key: {}", ackEntry.retryTimes, ackEntry.key);
             ackMap.remove(ackEntry.key);
+            udpSendTimeMap.remove(ackEntry.key);
             failedPush += 1;
             return ackEntry;
         }
@@ -540,6 +541,7 @@ private static Receiver.AckEntry udpPush(Receiver.AckEntry ackEntry) {
             Loggers.PUSH.error("[NACOS-PUSH] failed to push data: {} to client: {}, error: {}",
                 ackEntry.data, ackEntry.origin.getAddress().getHostAddress(), e);
             ackMap.remove(ackEntry.key);
+            udpSendTimeMap.remove(ackEntry.key);
             failedPush += 1;
 
             return null;

File: naming/src/main/java/com/alibaba/nacos/naming/raft/PeerSet.java
Patch:
@@ -28,7 +28,7 @@
 import java.net.HttpURLConnection;
 import java.util.*;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * @author nacos

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -41,7 +41,7 @@
 import java.util.concurrent.locks.ReentrantLock;
 import java.util.zip.GZIPOutputStream;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * @author nacos
@@ -268,7 +268,7 @@ public STATE onContentWriteCompleted() {
 
             }
 
-            if (!latch.await(UtilsAndCommons.RAFT_PUBLISH_TIMEOUT, TimeUnit.MILLISECONDS)) {
+            if (!STANDALONE_MODE && !latch.await(UtilsAndCommons.RAFT_PUBLISH_TIMEOUT, TimeUnit.MILLISECONDS)) {
                 // only majority servers return success can we consider this update success
                 Loggers.RAFT.info("data publish failed, caused failed to notify majority, key={}", key);
                 throw new IllegalStateException("data publish failed, caused failed to notify majority, key=" + key);

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftStore.java
Patch:
@@ -31,8 +31,8 @@
 import java.nio.channels.FileChannel;
 import java.util.Properties;
 
-import static com.alibaba.nacos.common.util.SystemUtils.NACOS_HOME;
-import static com.alibaba.nacos.common.util.SystemUtils.NACOS_HOME_KEY;
+import static com.alibaba.nacos.core.utils.SystemUtils.NACOS_HOME;
+import static com.alibaba.nacos.core.utils.SystemUtils.NACOS_HOME_KEY;
 
 /**
  * @author nacos

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -23,7 +23,7 @@
 import org.slf4j.impl.StaticLoggerBinder;
 
 /**
- * Support for Logback version 0.9.19 or higher
+ * Support for Logback version 1.0.8 or higher
  *
  * @author <a href="mailto:huangxiaoyu1018@gmail.com">hxy1991</a>
  * @since 0.9.0

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -59,13 +59,13 @@ public Thread newThread(Runnable r) {
     }
 
     public void addBeatInfo(String dom, BeatInfo beatInfo) {
-        NAMING_LOGGER.info("BEAT", "adding beat: {} to beat map.", beatInfo);
+        NAMING_LOGGER.info("[BEAT] adding beat: {} to beat map.", beatInfo);
         dom2Beat.put(buildKey(dom, beatInfo.getIp(), beatInfo.getPort()), beatInfo);
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
 
     public void removeBeatInfo(String dom, String ip, int port) {
-        NAMING_LOGGER.info("BEAT", "removing beat: {}:{}:{} from beat map.", dom, ip, port);
+        NAMING_LOGGER.info("[BEAT] removing beat: {}:{}:{} from beat map.", dom, ip, port);
         dom2Beat.remove(buildKey(dom, ip, port));
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
@@ -88,7 +88,7 @@ public void run() {
                     executorService.schedule(new BeatTask(beatInfo), 0, TimeUnit.MILLISECONDS);
                 }
             } catch (Exception e) {
-                NAMING_LOGGER.error("CLIENT-BEAT", "Exception while scheduling beat.", e);
+                NAMING_LOGGER.error("[CLIENT-BEAT] Exception while scheduling beat.", e);
             } finally {
                 executorService.schedule(this, clientBeatInterval, TimeUnit.MILLISECONDS);
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -58,7 +58,7 @@ public Thread newThread(Runnable r) {
 
     public void addListener(ServiceInfo serviceInfo, String clusters, EventListener listener) {
 
-        NAMING_LOGGER.info("LISTENER", "adding " + serviceInfo.getName() + " with " + clusters + " to listener map");
+        NAMING_LOGGER.info("[LISTENER] adding " + serviceInfo.getName() + " with " + clusters + " to listener map");
         List<EventListener> observers = Collections.synchronizedList(new ArrayList<EventListener>());
         observers.add(listener);
 
@@ -72,7 +72,7 @@ public void addListener(ServiceInfo serviceInfo, String clusters, EventListener
 
     public void removeListener(String serviceName, String clusters, EventListener listener) {
 
-        NAMING_LOGGER.info("LISTENER", "removing " + serviceName + " with " + clusters + " from listener map");
+        NAMING_LOGGER.info("[LISTENER] removing " + serviceName + " with " + clusters + " from listener map");
 
         List<EventListener> observers = observerMap.get(ServiceInfo.getKey(serviceName, clusters));
         if (observers != null) {
@@ -130,7 +130,7 @@ public void run() {
                     }
 
                 } catch (Exception e) {
-                    NAMING_LOGGER.error("NA", "notify error for service: "
+                    NAMING_LOGGER.error("[NA] notify error for service: "
                         + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -58,7 +58,7 @@ public Thread newThread(Runnable r) {
 
             executorService.execute(this);
         } catch (Exception e) {
-            NAMING_LOGGER.error("NA", "init udp socket failed", e);
+            NAMING_LOGGER.error("[NA] init udp socket failed", e);
         }
     }
 
@@ -101,7 +101,7 @@ public void run() {
                 udpSocket.send(new DatagramPacket(ack.getBytes(Charset.forName("UTF-8")),
                     ack.getBytes(Charset.forName("UTF-8")).length, packet.getSocketAddress()));
             } catch (Exception e) {
-                NAMING_LOGGER.error("NA", "error while receiving push data", e);
+                NAMING_LOGGER.error("[NA] error while receiving push data", e);
             }
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -80,11 +80,11 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
                             + InetAddress.getByName(conn.getURL().getHost()).getHostAddress());
                 }
             } catch (Exception e1) {
-                NAMING_LOGGER.error("NA", "failed to request ", e1);
+                NAMING_LOGGER.error("[NA] failed to request ", e1);
                 //ignore
             }
 
-            NAMING_LOGGER.error("NA", "failed to request ", e);
+            NAMING_LOGGER.error("[NA] failed to request ", e);
 
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {

File: naming/src/main/java/com/alibaba/nacos/naming/pojo/IpAddressInfo.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class IpAddressInfo implements Serializable {
 
-    private boolean             valid;
+    private boolean            valid;
 
     private Map<String, String> metadata;
 
@@ -34,7 +34,7 @@ public class IpAddressInfo implements Serializable {
 
     private Double              weight;
 
-    private boolean             enabled;
+    private boolean            enabled;
 
     public boolean isEnabled() {
         return enabled;

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -268,7 +268,7 @@ public STATE onContentWriteCompleted() {
 
             }
 
-            if (!latch.await(UtilsAndCommons.RAFT_PUBLISH_TIMEOUT, TimeUnit.MILLISECONDS)) {
+            if (!STANDALONE_MODE && !latch.await(UtilsAndCommons.RAFT_PUBLISH_TIMEOUT, TimeUnit.MILLISECONDS)) {
                 // only majority servers return success can we consider this update success
                 Loggers.RAFT.info("data publish failed, caused failed to notify majority, key={}", key);
                 throw new IllegalStateException("data publish failed, caused failed to notify majority, key=" + key);

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -526,13 +526,15 @@ private IpAddress getIPAddress(HttpServletRequest request) {
             cluster = WebUtils.optional(request, "clusterName", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
         }
         boolean enabled = BooleanUtils.toBoolean(WebUtils.optional(request, "enable", "true"));
+        boolean healthy = BooleanUtils.toBoolean(WebUtils.optional(request, "healthy", "true"));
 
         IpAddress ipAddress = new IpAddress();
         ipAddress.setPort(Integer.parseInt(port));
         ipAddress.setIp(ip);
         ipAddress.setWeight(Double.parseDouble(weight));
         ipAddress.setClusterName(cluster);
         ipAddress.setEnabled(enabled);
+        ipAddress.setValid(healthy);
 
         if (!ipAddress.validate()) {
             throw new IllegalArgumentException("malfomed ip config: " + ipAddress);

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -23,7 +23,7 @@
 import org.slf4j.impl.StaticLoggerBinder;
 
 /**
- * Support for Logback version 0.9.19 or higher
+ * Support for Logback version 1.0.8 or higher
  *
  * @author <a href="mailto:huangxiaoyu1018@gmail.com">hxy1991</a>
  * @since 0.9.0

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -59,13 +59,13 @@ public Thread newThread(Runnable r) {
     }
 
     public void addBeatInfo(String dom, BeatInfo beatInfo) {
-        NAMING_LOGGER.info("BEAT", "adding beat: {} to beat map.", beatInfo);
+        NAMING_LOGGER.info("[BEAT] adding beat: {} to beat map.", beatInfo);
         dom2Beat.put(buildKey(dom, beatInfo.getIp(), beatInfo.getPort()), beatInfo);
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
 
     public void removeBeatInfo(String dom, String ip, int port) {
-        NAMING_LOGGER.info("BEAT", "removing beat: {}:{}:{} from beat map.", dom, ip, port);
+        NAMING_LOGGER.info("[BEAT] removing beat: {}:{}:{} from beat map.", dom, ip, port);
         dom2Beat.remove(buildKey(dom, ip, port));
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
@@ -88,7 +88,7 @@ public void run() {
                     executorService.schedule(new BeatTask(beatInfo), 0, TimeUnit.MILLISECONDS);
                 }
             } catch (Exception e) {
-                NAMING_LOGGER.error("CLIENT-BEAT", "Exception while scheduling beat.", e);
+                NAMING_LOGGER.error("[CLIENT-BEAT] Exception while scheduling beat.", e);
             } finally {
                 executorService.schedule(this, clientBeatInterval, TimeUnit.MILLISECONDS);
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -58,7 +58,7 @@ public Thread newThread(Runnable r) {
 
     public void addListener(ServiceInfo serviceInfo, String clusters, EventListener listener) {
 
-        NAMING_LOGGER.info("LISTENER", "adding " + serviceInfo.getName() + " with " + clusters + " to listener map");
+        NAMING_LOGGER.info("[LISTENER] adding " + serviceInfo.getName() + " with " + clusters + " to listener map");
         List<EventListener> observers = Collections.synchronizedList(new ArrayList<EventListener>());
         observers.add(listener);
 
@@ -72,7 +72,7 @@ public void addListener(ServiceInfo serviceInfo, String clusters, EventListener
 
     public void removeListener(String serviceName, String clusters, EventListener listener) {
 
-        NAMING_LOGGER.info("LISTENER", "removing " + serviceName + " with " + clusters + " from listener map");
+        NAMING_LOGGER.info("[LISTENER] removing " + serviceName + " with " + clusters + " from listener map");
 
         List<EventListener> observers = observerMap.get(ServiceInfo.getKey(serviceName, clusters));
         if (observers != null) {
@@ -130,7 +130,7 @@ public void run() {
                     }
 
                 } catch (Exception e) {
-                    NAMING_LOGGER.error("NA", "notify error for service: "
+                    NAMING_LOGGER.error("[NA] notify error for service: "
                         + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -58,7 +58,7 @@ public Thread newThread(Runnable r) {
 
             executorService.execute(this);
         } catch (Exception e) {
-            NAMING_LOGGER.error("NA", "init udp socket failed", e);
+            NAMING_LOGGER.error("[NA] init udp socket failed", e);
         }
     }
 
@@ -101,7 +101,7 @@ public void run() {
                 udpSocket.send(new DatagramPacket(ack.getBytes(Charset.forName("UTF-8")),
                     ack.getBytes(Charset.forName("UTF-8")).length, packet.getSocketAddress()));
             } catch (Exception e) {
-                NAMING_LOGGER.error("NA", "error while receiving push data", e);
+                NAMING_LOGGER.error("[NA] error while receiving push data", e);
             }
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -80,11 +80,11 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
                             + InetAddress.getByName(conn.getURL().getHost()).getHostAddress());
                 }
             } catch (Exception e1) {
-                NAMING_LOGGER.error("NA", "failed to request ", e1);
+                NAMING_LOGGER.error("[NA] failed to request ", e1);
                 //ignore
             }
 
-            NAMING_LOGGER.error("NA", "failed to request ", e);
+            NAMING_LOGGER.error("[NA] failed to request ", e);
 
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {

File: client/src/main/java/com/alibaba/nacos/client/logging/logback/LogbackNacosLogging.java
Patch:
@@ -23,7 +23,7 @@
 import org.slf4j.impl.StaticLoggerBinder;
 
 /**
- * Support for Logback version 0.9.19 or higher
+ * Support for Logback version 1.0.8 or higher
  *
  * @author <a href="mailto:huangxiaoyu1018@gmail.com">hxy1991</a>
  * @since 0.9.0

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -59,13 +59,13 @@ public Thread newThread(Runnable r) {
     }
 
     public void addBeatInfo(String dom, BeatInfo beatInfo) {
-        NAMING_LOGGER.info("BEAT", "adding beat: {} to beat map.", beatInfo);
+        NAMING_LOGGER.info("[BEAT] adding beat: {} to beat map.", beatInfo);
         dom2Beat.put(buildKey(dom, beatInfo.getIp(), beatInfo.getPort()), beatInfo);
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
 
     public void removeBeatInfo(String dom, String ip, int port) {
-        NAMING_LOGGER.info("BEAT", "removing beat: {}:{}:{} from beat map.", dom, ip, port);
+        NAMING_LOGGER.info("[BEAT] removing beat: {}:{}:{} from beat map.", dom, ip, port);
         dom2Beat.remove(buildKey(dom, ip, port));
         MetricsMonitor.getDom2BeatSizeMonitor().set(dom2Beat.size());
     }
@@ -88,7 +88,7 @@ public void run() {
                     executorService.schedule(new BeatTask(beatInfo), 0, TimeUnit.MILLISECONDS);
                 }
             } catch (Exception e) {
-                NAMING_LOGGER.error("CLIENT-BEAT", "Exception while scheduling beat.", e);
+                NAMING_LOGGER.error("[CLIENT-BEAT] Exception while scheduling beat.", e);
             } finally {
                 executorService.schedule(this, clientBeatInterval, TimeUnit.MILLISECONDS);
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -58,7 +58,7 @@ public Thread newThread(Runnable r) {
 
     public void addListener(ServiceInfo serviceInfo, String clusters, EventListener listener) {
 
-        NAMING_LOGGER.info("LISTENER", "adding " + serviceInfo.getName() + " with " + clusters + " to listener map");
+        NAMING_LOGGER.info("[LISTENER] adding " + serviceInfo.getName() + " with " + clusters + " to listener map");
         List<EventListener> observers = Collections.synchronizedList(new ArrayList<EventListener>());
         observers.add(listener);
 
@@ -72,7 +72,7 @@ public void addListener(ServiceInfo serviceInfo, String clusters, EventListener
 
     public void removeListener(String serviceName, String clusters, EventListener listener) {
 
-        NAMING_LOGGER.info("LISTENER", "removing " + serviceName + " with " + clusters + " from listener map");
+        NAMING_LOGGER.info("[LISTENER] removing " + serviceName + " with " + clusters + " from listener map");
 
         List<EventListener> observers = observerMap.get(ServiceInfo.getKey(serviceName, clusters));
         if (observers != null) {
@@ -130,7 +130,7 @@ public void run() {
                     }
 
                 } catch (Exception e) {
-                    NAMING_LOGGER.error("NA", "notify error for service: "
+                    NAMING_LOGGER.error("[NA] notify error for service: "
                         + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -58,7 +58,7 @@ public Thread newThread(Runnable r) {
 
             executorService.execute(this);
         } catch (Exception e) {
-            NAMING_LOGGER.error("NA", "init udp socket failed", e);
+            NAMING_LOGGER.error("[NA] init udp socket failed", e);
         }
     }
 
@@ -101,7 +101,7 @@ public void run() {
                 udpSocket.send(new DatagramPacket(ack.getBytes(Charset.forName("UTF-8")),
                     ack.getBytes(Charset.forName("UTF-8")).length, packet.getSocketAddress()));
             } catch (Exception e) {
-                NAMING_LOGGER.error("NA", "error while receiving push data", e);
+                NAMING_LOGGER.error("[NA] error while receiving push data", e);
             }
         }
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -80,11 +80,11 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
                             + InetAddress.getByName(conn.getURL().getHost()).getHostAddress());
                 }
             } catch (Exception e1) {
-                NAMING_LOGGER.error("NA", "failed to request ", e1);
+                NAMING_LOGGER.error("[NA] failed to request ", e1);
                 //ignore
             }
 
-            NAMING_LOGGER.error("NA", "failed to request ", e);
+            NAMING_LOGGER.error("[NA] failed to request ", e);
 
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -526,15 +526,15 @@ private IpAddress getIPAddress(HttpServletRequest request) {
             cluster = WebUtils.optional(request, "clusterName", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
         }
         boolean enabled = BooleanUtils.toBoolean(WebUtils.optional(request, "enable", "true"));
-        boolean valid = BooleanUtils.toBoolean(WebUtils.optional(request, "valid", "true"));
+        boolean healthy = BooleanUtils.toBoolean(WebUtils.optional(request, "healthy", "true"));
 
         IpAddress ipAddress = new IpAddress();
         ipAddress.setPort(Integer.parseInt(port));
         ipAddress.setIp(ip);
         ipAddress.setWeight(Double.parseDouble(weight));
         ipAddress.setClusterName(cluster);
         ipAddress.setEnabled(enabled);
-        ipAddress.setValid(valid);
+        ipAddress.setValid(healthy);
 
         if (!ipAddress.validate()) {
             throw new IllegalArgumentException("malfomed ip config: " + ipAddress);

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -526,13 +526,15 @@ private IpAddress getIPAddress(HttpServletRequest request) {
             cluster = WebUtils.optional(request, "clusterName", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
         }
         boolean enabled = BooleanUtils.toBoolean(WebUtils.optional(request, "enable", "true"));
+        boolean valid = BooleanUtils.toBoolean(WebUtils.optional(request, "valid", "true"));
 
         IpAddress ipAddress = new IpAddress();
         ipAddress.setPort(Integer.parseInt(port));
         ipAddress.setIp(ip);
         ipAddress.setWeight(Double.parseDouble(weight));
         ipAddress.setClusterName(cluster);
         ipAddress.setEnabled(enabled);
+        ipAddress.setValid(valid);
 
         if (!ipAddress.validate()) {
             throw new IllegalArgumentException("malfomed ip config: " + ipAddress);

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/IoUtils.java
Patch:
@@ -23,6 +23,8 @@
 import java.util.List;
 import java.util.zip.GZIPInputStream;
 
+import static com.alibaba.nacos.client.utils.LogUtils.NAMING_LOGGER;
+
 /**
  * @author nkorange
  */
@@ -34,7 +36,7 @@ static public String toString(InputStream input, String encoding) {
             return (null == encoding) ? toString(new InputStreamReader(input, "UTF-8"))
                 : toString(new InputStreamReader(input, encoding));
         } catch (Exception e) {
-            LogUtils.LOG.error("NA", "read input failed.", e);
+            NAMING_LOGGER.error("NA", "read input failed.", e);
             return StringUtils.EMPTY;
         }
     }

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.naming.cluster;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.common.util.SystemUtils;
+import com.alibaba.nacos.core.utils.SystemUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.cluster.servers.Server;
 import com.alibaba.nacos.naming.cluster.servers.ServerChangeListener;
@@ -30,7 +30,7 @@
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 
-import static com.alibaba.nacos.common.util.SystemUtils.*;
+import static com.alibaba.nacos.core.utils.SystemUtils.*;
 
 /**
  * The manager to globally refresh and operate server list.

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftCore.java
Patch:
@@ -50,7 +50,7 @@
 import java.util.concurrent.locks.ReentrantLock;
 import java.util.zip.GZIPOutputStream;
 
-import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
+import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
 
 /**
  * @author nacos

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.naming.consistency.persistent.raft;
 
 import com.alibaba.fastjson.JSON;
-import com.alibaba.nacos.common.util.SystemUtils;
+import com.alibaba.nacos.core.utils.SystemUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.servers.Server;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -477,7 +477,8 @@ public JSONObject doSrvIPXT(String namespaceId, String serviceName, String agent
 
                 ipObj.put("ip", instance.getIp());
                 ipObj.put("port", instance.getPort());
-                ipObj.put("valid", entry.getKey()); // deprecated since nacos 1.0.0
+                // deprecated since nacos 1.0.0:
+                ipObj.put("valid", entry.getKey());
                 ipObj.put("healthy", entry.getKey());
                 ipObj.put("marked", instance.isMarked());
                 ipObj.put("instanceId", instance.getInstanceId());

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.naming.CommonParams;
-import com.alibaba.nacos.common.util.SystemUtils;
+import com.alibaba.nacos.core.utils.SystemUtils;
 import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.ServerStatusManager;

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.core;
 
-import com.alibaba.nacos.common.util.SystemUtils;
+import com.alibaba.nacos.core.utils.SystemUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.servers.Server;
 import com.alibaba.nacos.naming.cluster.servers.ServerChangeListener;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -32,7 +32,7 @@
 import java.util.Map;
 import java.util.concurrent.*;
 
-import static com.alibaba.nacos.common.util.SystemUtils.NACOS_HOME;
+import static com.alibaba.nacos.core.utils.SystemUtils.NACOS_HOME;
 
 /**
  * @author nacos

File: core/src/main/java/com/alibaba/nacos/core/listener/StandaloneProfileApplicationListener.java
Patch:
@@ -25,9 +25,9 @@
 
 import java.util.Arrays;
 
+import static com.alibaba.nacos.core.utils.Constants.STANDALONE_MODE_PROPERTY_NAME;
 import static com.alibaba.nacos.core.utils.Constants.STANDALONE_SPRING_PROFILE;
 import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE;
-import static com.alibaba.nacos.core.utils.SystemUtils.STANDALONE_MODE_PROPERTY_NAME;
 
 /**
  * Standalone {@link Profile} {@link ApplicationListener} for {@link ApplicationEnvironmentPreparedEvent}

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -51,7 +51,6 @@ public class Instance {
     /**
      * instance health status
      */
-    @JSONField(name = "valid")
     private boolean healthy = true;
 
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -79,7 +79,7 @@ public JSONObject serviceList(HttpServletRequest request) throws Exception {
             // FIXME should be optimized:
             int validCount = 0;
             for (Instance instance : service.allIPs()) {
-                if (instance.isValid()) {
+                if (instance.isHealthy()) {
                     validCount++;
                 }
             }
@@ -297,7 +297,7 @@ private List<IpAddressInfo> getIpAddressInfos(List<Instance> instances) {
             ipAddressInfo.setIp(ipAddress.getIp());
             ipAddressInfo.setPort(ipAddress.getPort());
             ipAddressInfo.setMetadata(ipAddress.getMetadata());
-            ipAddressInfo.setValid(ipAddress.isValid());
+            ipAddressInfo.setValid(ipAddress.isHealthy());
             ipAddressInfo.setWeight(ipAddress.getWeight());
             ipAddressInfo.setEnabled(ipAddress.isEnabled());
             ipAddressInfos.add(ipAddressInfo);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -106,7 +106,7 @@ public String update(HttpServletRequest request) throws Exception {
             if (HealthCheckType.NONE.name().equals(service.getClusterMap().get(clusterName).getHealthChecker().getType())) {
                 for (Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {
                     if (instance.getIp().equals(ip) && instance.getPort() == port) {
-                        instance.setValid(valid);
+                        instance.setHealthy(valid);
                         Loggers.EVT_LOG.info((valid ? "[IP-ENABLED]" : "[IP-DISABLED]") + " ips: "
                             + instance.getIp() + ":" + instance.getPort() + "@" + instance.getClusterName()
                             + ", service: " + serviceName + ", msg: update thought HealthController api");

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -139,13 +139,13 @@ public void updateIPs(List<Instance> ips, boolean ephemeral) {
                 // because the checker has the most precise result
                 // Only when ip is not marked, don't we update the health status of IP:
                 if (!ip.isMarked()) {
-                    ip.setValid(oldIP.isValid());
+                    ip.setHealthy(oldIP.isHealthy());
                 }
 
-                if (ip.isValid() != oldIP.isValid()) {
+                if (ip.isHealthy() != oldIP.isHealthy()) {
                     // ip validation status updated
                     Loggers.EVT_LOG.info("{} {SYNC} IP-{} {}:{}@{}",
-                        getService().getName(), (ip.isValid() ? "ENABLED" : "DISABLED"), ip.getIp(), ip.getPort(), getName());
+                        getService().getName(), (ip.isHealthy() ? "ENABLED" : "DISABLED"), ip.getIp(), ip.getPort(), getName());
                 }
 
                 if (ip.getWeight() != oldIP.getWeight()) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Instances.java
Patch:
@@ -69,7 +69,7 @@ private void recalculateChecksum() {
         Collections.sort(instanceList);
         for (Instance ip : instanceList) {
             String string = ip.getIp() + ":" + ip.getPort() + "_" + ip.getWeight() + "_"
-                + ip.isValid() + "_" + ip.getClusterName();
+                + ip.isHealthy() + "_" + ip.getClusterName();
             sb.append(string);
             sb.append(",");
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -173,6 +173,7 @@ public void registerService(String serviceName, String groupName, Instance insta
         params.put("weight", String.valueOf(instance.getWeight()));
         params.put("enable", String.valueOf(instance.isEnabled()));
         params.put("healthy", String.valueOf(instance.isHealthy()));
+        params.put("ephemeral", String.valueOf(instance.isEphemeral()));
         params.put("metadata", JSON.toJSONString(instance.getMetadata()));
 
         reqAPI(UtilAndComs.NACOS_URL_INSTANCE, params, HttpMethod.POST);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/partition/PartitionConsistencyServiceImpl.java
Patch:
@@ -130,7 +130,8 @@ public void onReceiveTimestamps(Map<String, String> timestamps, String server) {
             if (isResponsible(entry.getKey())) {
                 // this key should not be sent from remote server:
                 Loggers.EPHEMERAL.error("receive responsible key timestamp of " + entry.getKey() + " from " + server);
-                continue;
+                // abort the procedure:
+                return;
             }
             if (!dataStore.contains(entry.getKey()) ||
                 dataStore.get(entry.getKey()).value == null ||

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -316,7 +316,7 @@ public String callServer(String api, Map<String, String> params, String curServe
         end = System.currentTimeMillis();
 
         MetricsMonitor.getNamingRequestMonitor(method, url, String.valueOf(result.code))
-            .record(end - start, TimeUnit.MILLISECONDS);
+            .observe(end - start);
 
         if (HttpURLConnection.HTTP_OK == result.code) {
             return result.content;
@@ -382,3 +382,4 @@ public String getNamespaceId() {
         return namespaceId;
     }
 }
+

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/transport/Serializer.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.alibaba.fastjson.TypeReference;
 import com.alibaba.nacos.naming.consistency.Datum;
+import com.alibaba.nacos.naming.pojo.Record;
 
 import java.util.Map;
 
@@ -65,5 +66,5 @@ public interface Serializer {
      * @param clazz target type
      * @return deserialized data map
      */
-    <T> Map<String, Datum<T>> deserializeMap(byte[] data, Class<T> clazz);
+    <T extends Record> Map<String, Datum<T>> deserializeMap(byte[] data, Class<T> clazz);
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ConsistencyService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.naming.consistency;
 
 import com.alibaba.nacos.api.exception.NacosException;
+import com.alibaba.nacos.naming.pojo.Record;
 
 /**
  * Consistence service for all implementations to derive.
@@ -39,7 +40,7 @@ public interface ConsistencyService {
      * @throws NacosException
      * @see
      */
-    void put(String key, Object value) throws NacosException;
+    void put(String key, Record value) throws NacosException;
 
     /**
      * Remove a data from Nacos cluster

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DataListener.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.alibaba.nacos.naming.consistency;
 
+import com.alibaba.nacos.naming.pojo.Record;
+
 /**
  * Data listener public interface
  *
  * @author nacos
  */
-public interface DataListener<T> {
+public interface DataListener<T extends Record> {
 
     /**
      * Determine if the listener was registered with this key

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/Datum.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.alibaba.nacos.naming.consistency;
 
+import com.alibaba.nacos.naming.pojo.Record;
+
 import java.util.concurrent.atomic.AtomicLong;
 
 /**
  * @author nacos
  */
-public class Datum<T> {
+public class Datum<T extends Record> {
 
     public String key;
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/DelegateConsistencyServiceImpl.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.naming.consistency.ephemeral.EphemeralConsistencyService;
 import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyService;
 import com.alibaba.nacos.naming.core.DistroMapper;
+import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
@@ -41,7 +42,7 @@ public class DelegateConsistencyServiceImpl implements ConsistencyService {
     private EphemeralConsistencyService ephemeralConsistencyService;
 
     @Override
-    public void put(String key, Object value) throws NacosException {
+    public void put(String key, Record value) throws NacosException {
         mapConsistencyService(key).put(key, value);
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/partition/DataSyncer.java
Patch:
@@ -114,7 +114,7 @@ public void run() {
                         Loggers.EPHEMERAL.debug("sync keys: {}", keys);
                     }
 
-                    Map<String, Datum<?>> datumMap = dataStore.batchGet(keys);
+                    Map<String, Datum> datumMap = dataStore.batchGet(keys);
 
                     if (datumMap == null || datumMap.isEmpty()) {
                         // clear all flags of this task:
@@ -206,8 +206,7 @@ public void run() {
                         continue;
                     }
 
-
-                    keyChecksums.put(key, dataStore.get(key).timestamp.get());
+                    keyChecksums.put(key, dataStore.get(key).value.getChecksum());
                 }
 
                 if (keyChecksums.isEmpty()) {

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftConsistencyServiceImpl.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyService;
 import com.alibaba.nacos.naming.misc.Loggers;
+import com.alibaba.nacos.naming.pojo.Record;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
@@ -36,7 +37,7 @@ public class RaftConsistencyServiceImpl implements PersistentConsistencyService
     private RaftCore raftCore;
 
     @Override
-    public void put(String key, Object value) throws NacosException {
+    public void put(String key, Record value) throws NacosException {
         try {
             raftCore.signalPublish(key, value);
         } catch (Exception e) {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/PartitionController.java
Patch:
@@ -92,7 +92,8 @@ public String onSync(HttpServletRequest request, HttpServletResponse response) t
     public String syncTimestamps(HttpServletRequest request, HttpServletResponse response) throws Exception {
         String source = WebUtils.required(request, "source");
         String entity = IOUtils.toString(request.getInputStream(), "UTF-8");
-        Map<String, Long> dataMap = serializer.deserialize(entity.getBytes(), new TypeReference<Map<String, Long>>() {
+        Map<String, String> dataMap =
+            serializer.deserialize(entity.getBytes(), new TypeReference<Map<String, String>>() {
         });
 
         for (String key : dataMap.keySet()) {
@@ -112,7 +113,7 @@ public String syncTimestamps(HttpServletRequest request, HttpServletResponse res
     public void get(HttpServletRequest request, HttpServletResponse response) throws Exception {
         String keys = WebUtils.required(request, "keys");
         String keySplitter = ",";
-        Map<String, Datum<?>> datumMap = new HashMap<>(64);
+        Map<String, Datum> datumMap = new HashMap<>(64);
         for (String key : keys.split(keySplitter)) {
             datumMap.put(key, consistencyService.get(key));
         }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -36,7 +36,7 @@ public class NamingProxy {
 
     private static final String TIMESTAMP_SYNC_URL = "/partition/syncTimestamps";
 
-    public static void syncTimestamps(Map<String, Long> timestamps, String server) {
+    public static void syncTimestamps(Map<String, String> timestamps, String server) {
 
         try {
             Map<String, String> headers = new HashMap<>(128);

File: naming/src/test/java/com/alibaba/nacos/naming/raft/RaftStoreTest.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.nacos.naming.consistency.Datum;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftCore;
 import com.alibaba.nacos.naming.consistency.persistent.raft.RaftStore;
+import com.alibaba.nacos.naming.core.Instances;
 import org.junit.Assert;
 import org.junit.Test;
 import org.mockito.Mock;
@@ -38,7 +39,7 @@ public void wrietDatum() throws Exception {
 
         Datum datum = new Datum();
         datum.key = "1.2.3.4";
-        datum.value = "value1";
+        datum.value = new Instances();
 
         raftStore.write(datum);
 

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/partition/PartitionConsistencyServiceImpl.java
Patch:
@@ -89,7 +89,7 @@ public void onPut(String key, Object value) {
             Datum<Instances> datum = new Datum<>();
             datum.value = (Instances) value;
             datum.key = key;
-            datum.timestamp.set(System.currentTimeMillis());
+            datum.timestamp.incrementAndGet();
             dataStore.put(key, datum);
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -305,10 +305,9 @@ private String registerInstance(HttpServletRequest request) throws Exception {
 
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
         String clusterName = WebUtils.optional(request, CommonParams.CLUSTER_NAME, UtilsAndCommons.DEFAULT_CLUSTER_NAME);
+        String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID, UtilsAndCommons.DEFAULT_NAMESPACE_ID);
         String app = WebUtils.optional(request, "app", "DEFAULT");
         String metadata = WebUtils.optional(request, "metadata", StringUtils.EMPTY);
-        String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,
-            UtilsAndCommons.DEFAULT_NAMESPACE_ID);
 
         Instance instance = getIPAddress(request);
         instance.setApp(app);

File: test/src/test/java/com/alibaba/nacos/test/naming/AutoDeregisterInstance_ITCase.java
Patch:
@@ -57,7 +57,8 @@ public class AutoDeregisterInstance_ITCase {
     public void init() throws Exception {
         if (naming == null) {
             //TimeUnit.SECONDS.sleep(10);
-            naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
+//            naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
+            naming = NamingFactory.createNamingService("11.239.112.161:8848,11.239.113.204:8848,11.239.114.187:8848");
         }
     }
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class PropertyKeyConst {
 
+    public final static String SERVER_PORT = "serverPort";
+
     public final static String WEB_CONTEXT = "webContext";
 
     public final static String ENDPOINT = "endpoint";

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -68,6 +68,7 @@
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
 
+import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.common.util.SystemUtils.readClusterConf;
 import static com.alibaba.nacos.common.util.SystemUtils.writeClusterConf;
 
@@ -922,7 +923,7 @@ private void syncOnUpdateIP4Dom(String namespaceId, String dom, Map<String, Stri
 
         final CountDownLatch countDownLatch = new CountDownLatch(RaftCore.getPeerSet().majorityCount());
         updateIpPublish(proxyParams, countDownLatch, action);
-        if (!countDownLatch.await(UtilsAndCommons.MAX_PUBLISH_WAIT_TIME_MILLIS, TimeUnit.MILLISECONDS)) {
+        if (!STANDALONE_MODE && !countDownLatch.await(UtilsAndCommons.MAX_PUBLISH_WAIT_TIME_MILLIS, TimeUnit.MILLISECONDS)) {
             Loggers.RAFT.info("data publish failed, key=" + key, ",notify timeout.");
             throw new IllegalArgumentException("data publish failed, key=" + key);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -68,6 +68,7 @@
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
 
+import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.common.util.SystemUtils.readClusterConf;
 import static com.alibaba.nacos.common.util.SystemUtils.writeClusterConf;
 
@@ -922,7 +923,7 @@ private void syncOnUpdateIP4Dom(String namespaceId, String dom, Map<String, Stri
 
         final CountDownLatch countDownLatch = new CountDownLatch(RaftCore.getPeerSet().majorityCount());
         updateIpPublish(proxyParams, countDownLatch, action);
-        if (!countDownLatch.await(UtilsAndCommons.MAX_PUBLISH_WAIT_TIME_MILLIS, TimeUnit.MILLISECONDS)) {
+        if (!STANDALONE_MODE && !countDownLatch.await(UtilsAndCommons.MAX_PUBLISH_WAIT_TIME_MILLIS, TimeUnit.MILLISECONDS)) {
             Loggers.RAFT.info("data publish failed, key=" + key, ",notify timeout.");
             throw new IllegalArgumentException("data publish failed, key=" + key);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -68,6 +68,7 @@
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
 
+import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.common.util.SystemUtils.readClusterConf;
 import static com.alibaba.nacos.common.util.SystemUtils.writeClusterConf;
 
@@ -922,7 +923,7 @@ private void syncOnUpdateIP4Dom(String namespaceId, String dom, Map<String, Stri
 
         final CountDownLatch countDownLatch = new CountDownLatch(RaftCore.getPeerSet().majorityCount());
         updateIpPublish(proxyParams, countDownLatch, action);
-        if (!countDownLatch.await(UtilsAndCommons.MAX_PUBLISH_WAIT_TIME_MILLIS, TimeUnit.MILLISECONDS)) {
+        if (!STANDALONE_MODE && !countDownLatch.await(UtilsAndCommons.MAX_PUBLISH_WAIT_TIME_MILLIS, TimeUnit.MILLISECONDS)) {
             Loggers.RAFT.info("data publish failed, key=" + key, ",notify timeout.");
             throw new IllegalArgumentException("data publish failed, key=" + key);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -316,7 +316,7 @@ public String callServer(String api, Map<String, String> params, String curServe
         end = System.currentTimeMillis();
 
         MetricsMonitor.getNamingRequestMonitor(method, url, String.valueOf(result.code))
-            .record(end - start, TimeUnit.MILLISECONDS);
+            .observe(end - start);
 
         if (HttpURLConnection.HTTP_OK == result.code) {
             return result.content;
@@ -382,3 +382,4 @@ public String getNamespaceId() {
         return namespaceId;
     }
 }
+

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -76,7 +76,7 @@ public void run() {
 
                 PushPacket pushPacket = JSON.parseObject(json, PushPacket.class);
                 String ack;
-                if ("dom".equals(pushPacket.type)) {
+                if ("dom".equals(pushPacket.type) || "service".equals(pushPacket.type)) {
                     hostReactor.processServiceJSON(pushPacket.data);
 
                     // send ack to server

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -227,7 +227,7 @@ public long sendBeat(BeatInfo beatInfo) {
     public boolean serverHealthy() {
 
         try {
-            reqAPI(UtilAndComs.NACOS_URL_BASE + "/api/hello", new HashMap<String, String>(2));
+            reqAPI(UtilAndComs.NACOS_URL_BASE + "/operator/metrics", new HashMap<String, String>(2));
         } catch (Exception e) {
             return false;
         }

File: naming/src/main/java/com/alibaba/nacos/naming/push/PushService.java
Patch:
@@ -476,7 +476,7 @@ private static byte[] compressIfNecessary(byte[] dataBytes) throws IOException {
 
     private static Map<String, Object> prepareHostsData(PushClient client) throws Exception {
         Map<String, Object> cmd = new HashMap<String, Object>(2);
-        cmd.put("type", "serviceName");
+        cmd.put("type", "dom");
         cmd.put("data", client.getDataSource().getData(client));
 
         return cmd;

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_ITCase.java
Patch:
@@ -98,11 +98,11 @@ public void multipleTenant_registerInstance() throws Exception {
     @Test
     public void multipleTenant_equalIP() throws Exception {
         String serviceName = randomDomainName();
+        System.out.println(serviceName);
         naming1.registerInstance(serviceName, "11.11.11.11", 80);
 
         naming2.registerInstance(serviceName, "11.11.11.11", 80);
 
-        naming.registerInstance(serviceName, "11.11.11.11", 80);
         naming.registerInstance(serviceName, "11.11.11.11", 80);
 
         TimeUnit.SECONDS.sleep(5L);

File: test/src/test/java/com/alibaba/nacos/test/naming/MultiTenant_InstanceAPI_ITCase.java
Patch:
@@ -311,8 +311,6 @@ public void multipleTenant_updateInstance_notExsitInstance() throws Exception {
     public void multipleTenant_updateInstance() throws Exception {
         String serviceName = randomDomainName();
 
-        naming1.registerInstance(serviceName, "11.11.11.11", 80);
-
         naming2.registerInstance(serviceName, "22.22.22.22", 80);
 
         naming.registerInstance(serviceName, "33.33.33.33", 8888);

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -126,4 +126,6 @@ public class Constants {
     public static final String REQUEST_PARAM_DEFAULT_NAMESPACE_ID = "public";
     public static final String REQUEST_PARAM_GROUP = "group";
     public static final String REQUEST_PARAM_DEFAULT_GROUP = "DEFAULT_GROUP";
+
+    public static final int WRITE_REDIRECT_CODE = 307;
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftStore.java
Patch:
@@ -165,6 +165,8 @@ public synchronized static Datum readDatum(File file, String namespaceId) throws
                 Instances instances = new Instances();
                 instances.setInstanceMap(new HashMap<>(16));
                 for (Instance instance : datum.value) {
+                    // make every instance not ephemeral:
+                    instance.setEphemeral(false);
                     instances.getInstanceMap().put(instance.getDatumKey(), instance);
                 }
                 instancesDatum.value = instances;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -295,7 +295,7 @@ public JSONObject listWithHealthStatus(HttpServletRequest request) throws NacosE
     private String regService(HttpServletRequest request) throws Exception {
 
         String serviceName = WebUtils.required(request, CommonParams.SERVICE_NAME);
-        String clusterName = WebUtils.required(request, CommonParams.CLUSTER_NAME);
+        String clusterName = WebUtils.optional(request, CommonParams.CLUSTER_NAME, UtilsAndCommons.DEFAULT_CLUSTER_NAME);
         String app = WebUtils.optional(request, "app", "DEFAULT");
         String metadata = WebUtils.optional(request, "metadata", StringUtils.EMPTY);
         String namespaceId = WebUtils.optional(request, CommonParams.NAMESPACE_ID,

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.core;
 
+import com.alibaba.nacos.common.util.SystemUtils;
 import com.alibaba.nacos.naming.cluster.ServerListManager;
 import com.alibaba.nacos.naming.cluster.servers.Server;
 import com.alibaba.nacos.naming.cluster.servers.ServerChangeListener;
@@ -63,7 +64,7 @@ && responsible(cluster.getServiceName())
     }
 
     public boolean responsible(String serviceName) {
-        if (!switchDomain.isDistroEnabled()) {
+        if (!switchDomain.isDistroEnabled() || SystemUtils.STANDALONE_MODE) {
             return true;
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/DistroFilter.java
Patch:
@@ -73,7 +73,9 @@ public void doFilter(ServletRequest servletRequest, ServletResponse servletRespo
             String url = "http://" + distroMapper.mapSrv(serviceName) +
                 req.getRequestURI() + "?" + req.getQueryString();
             try {
-                resp.sendRedirect(url);
+                resp.setCharacterEncoding("utf-8");
+                resp.getWriter().write(distroMapper.mapSrv(serviceName));
+                resp.setStatus(HttpServletResponse.SC_TEMPORARY_REDIRECT);
             } catch (Exception ignore) {
                 Loggers.SRV_LOG.warn("[DISTRO-FILTER] request failed: " + url);
             }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -101,7 +101,7 @@ private void deleteIP(Instance instance) {
                 .appendParam("namespaceId", domain.getNamespaceId());
 
             String url = "http://127.0.0.1:" + RunningConfig.getServerPort() + RunningConfig.getContextPath()
-                + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance/?" + request.toUrl();
+                + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/instance?" + request.toUrl();
             HttpClient.HttpResult result = HttpClient.httpDelete(url, null, null);
             if (result.code != HttpURLConnection.HTTP_OK) {
                 Loggers.SRV_LOG.error("[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}",

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -75,7 +75,7 @@ public void run() {
                 Loggers.EVT_LOG.debug("[HEALTH-CHECK] schedule health check task: {}", cluster.getDom().getName());
             }
         } catch (Throwable e) {
-            Loggers.SRV_LOG.error("[HEALTH-CHECK] error while process health check for {}:{}, error: {}",
+            Loggers.SRV_LOG.error("[HEALTH-CHECK] error while process health check for {}:{}",
                 cluster.getDom().getName(), cluster.getName(), e);
         } finally {
             if (!cancelled) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -316,7 +316,8 @@ public static HttpResult httpPutLarge(String url, Map<String, String> headers, b
                 httpPut.setHeader(entry.getKey(), entry.getValue());
             }
 
-            httpPut.setEntity(new ByteArrayEntity(content));
+            httpPut.setEntity(new StringEntity(new String(content, "UTF-8"), ContentType.create("application/json", "UTF-8")));
+
             HttpResponse response = httpClient.execute(httpPut);
             HttpEntity entity = response.getEntity();
 

File: naming/src/main/java/com/alibaba/nacos/naming/cluster/ServerListManager.java
Patch:
@@ -139,7 +139,7 @@ private void notifyListeners() {
             public void run() {
                 for (ServerChangeListener listener : listeners) {
                     listener.onChangeServerList(servers);
-                    listener.onChangeHealthServerList(healthyServers);
+                    listener.onChangeHealthyServerList(healthyServers);
                 }
             }
         });

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/partition/PartitionConsistencyServiceImpl.java
Patch:
@@ -196,11 +196,11 @@ public void unlisten(String key, DataListener listener) throws NacosException {
 
     @Override
     public boolean isResponsible(String key) {
-        return distroMapper.responsible(key);
+        return distroMapper.responsible(KeyBuilder.getServiceName(key));
     }
 
     @Override
     public String getResponsibleServer(String key) {
-        return distroMapper.mapSrv(key);
+        return distroMapper.mapSrv(KeyBuilder.getServiceName(key));
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/raft/RaftPeerSet.java
Patch:
@@ -276,7 +276,7 @@ public void onChangeServerList(List<Server> latestMembers) {
     }
 
     @Override
-    public void onChangeHealthServerList(List<Server> latestReachableMembers) {
+    public void onChangeHealthyServerList(List<Server> latestReachableMembers) {
 
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -257,7 +257,7 @@ public JSONObject beat(HttpServletRequest request) throws Exception {
     }
 
 
-    @RequestMapping("/listWithHealthStatus")
+    @RequestMapping("/instance/listWithHealthStatus")
     public JSONObject listWithHealthStatus(HttpServletRequest request) throws NacosException {
 
         String key = WebUtils.required(request, "key");

File: naming/src/main/java/com/alibaba/nacos/naming/core/Cluster.java
Patch:
@@ -63,8 +63,6 @@ public class Cluster extends com.alibaba.nacos.api.naming.pojo.Cluster implement
     @JSONField(serialize = false)
     private Service dom;
 
-    private Map<String, Boolean> ipContains = new ConcurrentHashMap<>();
-
     private Map<String, String> metadata = new ConcurrentHashMap<>();
 
     public Cluster() {

File: naming/src/main/java/com/alibaba/nacos/naming/core/Service.java
Patch:
@@ -109,7 +109,6 @@ public void setEnabled(Boolean enabled) {
         this.enabled = enabled;
     }
 
-
     public long getLastModifiedMillis() {
         return lastModifiedMillis;
     }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -42,7 +42,7 @@ public void send(final String serverIP, Message msg) {
 
         if (serverIP.contains(UtilsAndCommons.IP_PORT_SPLITER)) {
             url = "http://" + serverIP + RunningConfig.getContextPath() + UtilsAndCommons.NACOS_NAMING_CONTEXT
-                    + "/api/serverStatus";
+                    + "/operator/serverStatus";
         }
 
         try {

File: naming/src/main/java/com/alibaba/nacos/naming/selector/NoneSelector.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.selector;
 
+import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
 import com.alibaba.nacos.naming.core.Instance;
 
@@ -26,7 +27,7 @@
  * @author nkorange
  * @since 0.7.0
  */
-public class NoneSelector extends com.alibaba.nacos.api.selector.AbstractSelector implements Selector {
+public class NoneSelector extends AbstractSelector implements Selector {
 
     public NoneSelector() {
         this.setType(SelectorType.none.name());

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -101,6 +101,7 @@ static public HttpResult httpGet(String url, List<String> headers, List<String>
     static public HttpResult httpPost(String url, List<String> headers, List<String> paramValues,
                                       String encoding, long readTimeoutMs, boolean isSSL) throws IOException {
         String encodedContent = encodingParams(paramValues, encoding);
+        encodedContent = (null == encodedContent) ? "" : encodedContent;
         if (Limiter.isLimit(MD5.getInstance().getMD5String(
             new StringBuilder(url).append(encodedContent).toString()))) {
             return new HttpResult(NacosException.CLIENT_OVER_THRESHOLD,

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Service.java
Patch:
@@ -50,6 +50,7 @@ public class Service {
     /**
      * Health check mode.
      */
+    @Deprecated
     private String healthCheckMode;
 
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -46,7 +46,7 @@
  * @author nkorange
  */
 @RestController
-@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + UtilsAndCommons.NACOS_NAMING_CATALOG_CONTEXT)
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/catalog")
 public class CatalogController {
 
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java
Patch:
@@ -23,7 +23,7 @@
 import com.alibaba.nacos.naming.core.Instance;
 import com.alibaba.nacos.naming.core.Service;
 import com.alibaba.nacos.naming.core.ServiceManager;
-import com.alibaba.nacos.naming.healthcheck.HealthCheckMode;
+import com.alibaba.nacos.naming.healthcheck.HealthCheckType;
 import com.alibaba.nacos.naming.misc.HttpClient;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
@@ -102,7 +102,7 @@ public String update(HttpServletRequest request) throws Exception {
         } else {
             Service service = serviceManager.getService(namespaceId, dom);
             // Only health check "none" need update health status with api
-            if (service.getHealthCheckMode().equals(HealthCheckMode.none.name())) {
+            if (HealthCheckType.NONE.name().equals(service.getClusterMap().get(clusterName).getHealthChecker().getType())) {
                 for (Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {
                     if (instance.getIp().equals(ip) && instance.getPort() == port) {
                         instance.setValid(valid);

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/OperatorController.java
Patch:
@@ -33,6 +33,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.bind.annotation.RestController;
 
 import javax.servlet.http.HttpServletRequest;
@@ -45,6 +46,7 @@
  * @author nkorange
  */
 @RestController
+@RequestMapping(UtilsAndCommons.NACOS_NAMING_CONTEXT + "/operator")
 public class OperatorController {
 
     @Autowired
@@ -120,7 +122,7 @@ public String updateSwitch(HttpServletRequest request) throws Exception {
     }
 
 
-    @RequestMapping("/metrics")
+    @RequestMapping(value = "/metrics", method = RequestMethod.GET)
     public JSONObject metrics(HttpServletRequest request) {
 
         JSONObject result = new JSONObject();

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -78,7 +78,6 @@ public String create(HttpServletRequest request) throws Exception {
         }
 
         float protectThreshold = NumberUtils.toFloat(WebUtils.optional(request, "protectThreshold", "0"));
-        String healthCheckMode = WebUtils.optional(request, "healthCheckMode", switchDomain.defaultHealthCheckMode);
         String metadata = WebUtils.optional(request, "metadata", StringUtils.EMPTY);
         String selector = WebUtils.optional(request, "selector", StringUtils.EMPTY);
         Map<String, String> metadataMap = new HashMap<>(16);
@@ -89,7 +88,6 @@ public String create(HttpServletRequest request) throws Exception {
         Service domObj = new Service();
         domObj.setName(serviceName);
         domObj.setProtectThreshold(protectThreshold);
-        domObj.setHealthCheckMode(healthCheckMode.toLowerCase());
         domObj.setEnabled(true);
         domObj.setMetadata(metadataMap);
         domObj.setSelector(parseSelector(selector));
@@ -142,7 +140,6 @@ public JSONObject detail(HttpServletRequest request) throws Exception {
         res.put("name", serviceName);
         res.put("namespaceId", domain.getNamespaceId());
         res.put("protectThreshold", domain.getProtectThreshold());
-        res.put("healthCheckMode", domain.getHealthCheckMode());
         res.put("metadata", domain.getMetadata());
         res.put("selector", domain.getSelector());
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -60,12 +60,11 @@ public String taskKey() {
     @Override
     public void run() {
         try {
-            if (!domain.getHealthCheckMode().equals(HealthCheckMode.client.name()) ||
-                !getDistroMapper().responsible(domain.getName())) {
+            if (!getDistroMapper().responsible(domain.getName())) {
                 return;
             }
 
-            List<Instance> instances = domain.allIPs();
+            List<Instance> instances = domain.allIPs(true);
 
             for (Instance instance : instances) {
                 if (System.currentTimeMillis() - instance.getLastBeat() > ClientBeatProcessor.CLIENT_BEAT_TIMEOUT) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -90,9 +90,7 @@ public void process(HealthCheckTask task) {
             return;
         }
 
-        Service service = task.getCluster().getDom();
-
-        if (!switchDomain.isHealthCheckEnabled() || !service.getHealthCheckMode().equals(HealthCheckMode.server.name())) {
+        if (!switchDomain.isHealthCheckEnabled()) {
             return;
         }
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -101,6 +101,7 @@ static public HttpResult httpGet(String url, List<String> headers, List<String>
     static public HttpResult httpPost(String url, List<String> headers, List<String> paramValues,
                                       String encoding, long readTimeoutMs, boolean isSSL) throws IOException {
         String encodedContent = encodingParams(paramValues, encoding);
+        encodedContent = (null == encodedContent) ? "" : encodedContent;
         if (Limiter.isLimit(MD5.getInstance().getMD5String(
             new StringBuilder(url).append(encodedContent).toString()))) {
             return new HttpResult(NacosException.CLIENT_OVER_THRESHOLD,

File: client/src/main/java/com/alibaba/nacos/client/config/impl/HttpSimpleClient.java
Patch:
@@ -101,6 +101,7 @@ static public HttpResult httpGet(String url, List<String> headers, List<String>
     static public HttpResult httpPost(String url, List<String> headers, List<String> paramValues,
                                       String encoding, long readTimeoutMs, boolean isSSL) throws IOException {
         String encodedContent = encodingParams(paramValues, encoding);
+        encodedContent = (null == encodedContent) ? "" : encodedContent;
         if (Limiter.isLimit(MD5.getInstance().getMD5String(
             new StringBuilder(url).append(encodedContent).toString()))) {
             return new HttpResult(NacosException.CLIENT_OVER_THRESHOLD,

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -46,7 +46,7 @@ public class ClusterController {
     @Autowired
     protected DomainsManager domainsManager;
 
-    @RequestMapping(value = {"/update", "/add"}, method = RequestMethod.PUT)
+    @RequestMapping(value = "", method = RequestMethod.PUT)
     public String update(HttpServletRequest request) throws Exception {
 
         String namespaceId = WebUtils.optional(request, Constants.REQUEST_PARAM_NAMESPACE_ID,

File: common/src/main/java/com/alibaba/nacos/common/util/HttpMethod.java
Patch:
@@ -33,7 +33,7 @@ public class HttpMethod {
 
     public static final String DELETE = "DELETE";
 
-    public static final String OPTIONS = "PATCH";
+    public static final String OPTIONS = "OPTIONS";
 
     public static final String TRACE = "TRACE";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -315,7 +315,7 @@ public void easyUpdateIP4Dom(String namespaceId, String domName, List<IpAddress>
         try {
 
             if (!dom.getEnableClientBeat()) {
-                getDom2LockMap().get(domName).lock();
+                getDom2LockMap().get(UtilsAndCommons.assembleFullServiceName(namespaceId, domName)).lock();
             }
 
             Datum datum1 = RaftCore.getDatum(UtilsAndCommons.getIPListStoreKey(dom));
@@ -389,7 +389,7 @@ public void easyUpdateIP4Dom(String namespaceId, String domName, List<IpAddress>
             RaftCore.onPublish(datum, peer, increaseTerm);
         } finally {
             if (!dom.getEnableClientBeat()) {
-                getDom2LockMap().get(domName).unlock();
+                getDom2LockMap().get(UtilsAndCommons.assembleFullServiceName(namespaceId, domName)).unlock();
             }
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -315,7 +315,7 @@ public void easyUpdateIP4Dom(String namespaceId, String domName, List<IpAddress>
         try {
 
             if (!dom.getEnableClientBeat()) {
-                getDom2LockMap().get(domName).lock();
+                getDom2LockMap().get(UtilsAndCommons.assembleFullServiceName(namespaceId, domName)).lock();
             }
 
             Datum datum1 = RaftCore.getDatum(UtilsAndCommons.getIPListStoreKey(dom));
@@ -389,7 +389,7 @@ public void easyUpdateIP4Dom(String namespaceId, String domName, List<IpAddress>
             RaftCore.onPublish(datum, peer, increaseTerm);
         } finally {
             if (!dom.getEnableClientBeat()) {
-                getDom2LockMap().get(domName).unlock();
+                getDom2LockMap().get(UtilsAndCommons.assembleFullServiceName(namespaceId, domName)).unlock();
             }
         }
 

File: console/src/main/java/com/alibaba/nacos/console/filter/JwtAuthenticationTokenFilter.java
Patch:
@@ -47,7 +47,7 @@ public JwtAuthenticationTokenFilter(JwtTokenUtils tokenProvider) {
     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {
         String jwt = resolveToken(request);
 
-        if (!StringUtils.isEmpty(jwt.trim()) && SecurityContextHolder.getContext().getAuthentication() == null) {
+        if (jwt != null && !"".equals(jwt.trim()) && SecurityContextHolder.getContext().getAuthentication() == null) {
             if (this.tokenProvider.validateToken(jwt)) {
                 /**
                  * get auth info

File: console/src/main/java/com/alibaba/nacos/console/filter/JwtAuthenticationTokenFilter.java
Patch:
@@ -47,7 +47,7 @@ public JwtAuthenticationTokenFilter(JwtTokenUtils tokenProvider) {
     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {
         String jwt = resolveToken(request);
 
-        if (!StringUtils.isEmpty(jwt.trim()) && SecurityContextHolder.getContext().getAuthentication() == null) {
+        if (jwt != null && !"".equals(jwt.trim()) && SecurityContextHolder.getContext().getAuthentication() == null) {
             if (this.tokenProvider.validateToken(jwt)) {
                 /**
                  * get auth info

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/simpleraft/RaftCore.java
Patch:
@@ -173,7 +173,6 @@ public void signalPublish(String key, String value) throws Exception {
             parameters.put("key", key);
 
             raftProxy.proxyPostLarge(getLeader().ip, API_PUB, params.toJSONString(), parameters);
-
             return;
         }
 
@@ -818,6 +817,7 @@ public void listen(String key, DataListener listener) {
 
         if (listenerList == null) {
             listenerList = new CopyOnWriteArrayList<>();
+            listeners.put(key, listenerList);
         }
 
         Loggers.RAFT.info("add listener: {}", key);

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/simpleraft/RaftProxy.java
Patch:
@@ -42,7 +42,7 @@ public void proxyGET(String server, String api, Map<String, String> params) thro
         }
     }
 
-    public static void proxyPostLarge(String server, String api, String content, Map<String, String> headers) throws Exception {
+    public void proxyPostLarge(String server, String api, String content, Map<String, String> headers) throws Exception {
         // do proxy
         if (!server.contains(UtilsAndCommons.CLUSTER_CONF_IP_SPLITER)) {
             server = server + UtilsAndCommons.CLUSTER_CONF_IP_SPLITER + RunningConfig.getServerPort();

File: naming/src/main/java/com/alibaba/nacos/naming/boot/RunningConfig.java
Patch:
@@ -27,7 +27,7 @@
 /**
  * @author nkorange
  */
-@Component
+@Component("runningConfig")
 public class RunningConfig implements ApplicationListener<WebServerInitializedEvent> {
 
     private static int serverPort;

File: naming/src/main/java/com/alibaba/nacos/naming/boot/SpringContext.java
Patch:
@@ -22,9 +22,11 @@
 import org.springframework.stereotype.Component;
 
 /**
+ * A global spring context bean to inject bean for non-bean classes
+ *
  * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
-@Component
+@Component("nacosApplicationContext")
 public class SpringContext implements ApplicationContextAware {
 
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/simpleraft/GlobalExecutor.java
Patch:
@@ -47,7 +47,6 @@ public Thread newThread(Runnable r) {
         }
     });
 
-
     public static void register(Runnable runnable) {
         executorService.scheduleAtFixedRate(runnable, 0, TICK_PERIOD_MS, TimeUnit.MILLISECONDS);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/DistroMapper.java
Patch:
@@ -32,7 +32,7 @@
 /**
  * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
-@Component
+@Component("distroMapper")
 public class DistroMapper {
 
     public static final int STABLE_PERIOD = 60 * 1000;

File: naming/src/main/java/com/alibaba/nacos/naming/core/ServiceManager.java
Patch:
@@ -28,6 +28,7 @@
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.DependsOn;
 import org.springframework.stereotype.Component;
 
 import javax.annotation.PostConstruct;
@@ -42,6 +43,7 @@
  * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 @Component
+@DependsOn("nacosApplicationContext")
 public class ServiceManager implements DataListener {
 
     /**

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckProcessorDelegate.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * @author nacos
  */
-@Component
+@Component("healthCheckDelegate")
 public class HealthCheckProcessorDelegate implements HealthCheckProcessor {
 
     @Autowired

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/ephemeral/EphemeralConsistencyService.java
Patch:
@@ -21,5 +21,5 @@
  * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  * @since 1.0.0
  */
-public interface ApConsistencyService extends ConsistencyService {
+public interface EphemeralConsistencyService extends ConsistencyService {
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/PersistentConsistencyService.java
Patch:
@@ -29,5 +29,5 @@
  * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  * @since 1.0.0
  */
-public interface CpConsistencyService extends ConsistencyService {
+public interface PersistentConsistencyService extends ConsistencyService {
 }

File: naming/src/main/java/com/alibaba/nacos/naming/consistency/persistent/simpleraft/RaftConsistencyServiceImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.naming.consistency.DataListener;
-import com.alibaba.nacos.naming.consistency.persistent.CpConsistencyService;
+import com.alibaba.nacos.naming.consistency.persistent.PersistentConsistencyService;
 import com.alibaba.nacos.naming.misc.Loggers;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
@@ -14,7 +14,7 @@
  * @since 1.0.0
  */
 @Component
-public class RaftConsistencyServiceImpl implements CpConsistencyService {
+public class RaftConsistencyServiceImpl implements PersistentConsistencyService {
 
     @Autowired
     private RaftCore raftCore;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchManager.java
Patch:
@@ -23,6 +23,7 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
+import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
 import java.util.Arrays;
 import java.util.HashMap;
@@ -47,7 +48,8 @@ public class SwitchManager {
 
     ReentrantLock lock = new ReentrantLock();
 
-    public SwitchManager() {
+    @PostConstruct
+    public void init() {
 
         try {
             consistencyService.listen(UtilsAndCommons.getDomStoreKey(switchDomain), switchDomain);

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.alibaba.nacos.test.naming;
 
-import com.alibaba.nacos.api.NacosFactory;
 import com.alibaba.nacos.api.PropertyKeyConst;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingFactory;
@@ -44,7 +43,7 @@
  */
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
-        webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
+    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class RegisterInstance_ITCase {
 
     private NamingService naming;
@@ -56,7 +55,7 @@ public class RegisterInstance_ITCase {
     public void init() throws Exception {
         if (naming == null) {
             TimeUnit.SECONDS.sleep(10);
-            naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
+            naming = NamingFactory.createNamingService("127.0.0.1" + ":" + 8848);
         }
     }
 

File: console/src/main/java/com/alibaba/nacos/console/utils/JwtTokenUtils.java
Patch:
@@ -54,7 +54,7 @@ public class JwtTokenUtils {
 
     @PostConstruct
     public void init() {
-        this.secretKey = "SecretKey";
+        this.secretKey = "SecretKey012345678901234567890123456789012345678901234567890123456789";
         this.tokenValidityInMilliseconds = 1000 * 60 * 30L;
     }
 
@@ -82,7 +82,7 @@ public String createToken(Authentication authentication) {
             .setSubject(authentication.getName())
             .claim(AUTHORITIES_KEY, "")
             .setExpiration(validity)
-            .signWith(SignatureAlgorithm.HS512, secretKey)
+            .signWith(SignatureAlgorithm.HS256, secretKey)
             .compact();
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -606,12 +606,12 @@ public void run() {
         final RaftListener raftListener = new RaftListener() {
             @Override
             public boolean interests(String key) {
-                return StringUtils.startsWith(key, UtilsAndCommons.DOMAINS_DATA_ID);
+                return StringUtils.startsWith(key, UtilsAndCommons.DOMAINS_DATA_ID_PRE);
             }
 
             @Override
             public boolean matchUnlistenKey(String key) {
-                return StringUtils.equals(key, UtilsAndCommons.DOMAINS_DATA_ID + ".*");
+                return StringUtils.equals(key, UtilsAndCommons.DOMAINS_DATA_ID_PRE + "*");
             }
 
             @SuppressFBWarnings("JLM_JSR166_LOCK_MONITORENTER")
@@ -656,7 +656,7 @@ public void onChange(String key, String value) throws Exception {
 
             @Override
             public void onDelete(String key, String value) throws Exception {
-                String domKey = StringUtils.removeStart(key, UtilsAndCommons.DOMAINS_DATA_ID + ".");
+                String domKey = StringUtils.removeStart(key, UtilsAndCommons.DOMAINS_DATA_ID_PRE);
                 String namespace = domKey.split(UtilsAndCommons.SERVICE_GROUP_CONNECTOR)[0];
                 String name = domKey.split(UtilsAndCommons.SERVICE_GROUP_CONNECTOR)[1];
                 Domain dom = chooseDomMap(namespace).remove(name);

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -18,7 +18,6 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.TypeReference;
 import com.alibaba.fastjson.annotation.JSONField;
-import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.healthcheck.ClientBeatCheckTask;
 import com.alibaba.nacos.naming.healthcheck.ClientBeatProcessor;
 import com.alibaba.nacos.naming.healthcheck.HealthCheckReactor;
@@ -29,8 +28,8 @@
 import com.alibaba.nacos.naming.push.PushService;
 import com.alibaba.nacos.naming.raft.RaftCore;
 import com.alibaba.nacos.naming.raft.RaftListener;
-import com.alibaba.nacos.naming.selector.Selector;
 import com.alibaba.nacos.naming.selector.NoneSelector;
+import com.alibaba.nacos.naming.selector.Selector;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.collections.ListUtils;
 import org.apache.commons.lang3.RandomStringUtils;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -24,19 +24,16 @@
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.*;
-import org.apache.http.client.RedirectStrategy;
 import org.apache.http.client.config.RequestConfig;
 import org.apache.http.client.entity.UrlEncodedFormEntity;
 import org.apache.http.client.methods.HttpPost;
-import org.apache.http.client.methods.HttpUriRequest;
 import org.apache.http.entity.ContentType;
 import org.apache.http.entity.StringEntity;
 import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.http.impl.client.HttpClientBuilder;
 import org.apache.http.impl.client.HttpClients;
 import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
 import org.apache.http.message.BasicNameValuePair;
-import org.apache.http.protocol.HttpContext;
 
 import java.io.IOException;
 import java.io.InputStream;

File: naming/src/main/java/com/alibaba/nacos/naming/misc/Switch.java
Patch:
@@ -48,12 +48,12 @@ public static void setClientBeatInterval(long clientBeatInterval) {
         RaftCore.listen(new RaftListener() {
             @Override
             public boolean interests(String key) {
-                return StringUtils.equals(key, UtilsAndCommons.DOMAINS_DATA_ID + ".00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00");
+                return StringUtils.equals(key, UtilsAndCommons.DOMAINS_DATA_ID_PRE + UtilsAndCommons.SWITCH_DOMAIN_NAME);
             }
 
             @Override
             public boolean matchUnlistenKey(String key) {
-                return StringUtils.equals(key, UtilsAndCommons.DOMAINS_DATA_ID + ".00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00");
+                return StringUtils.equals(key, UtilsAndCommons.DOMAINS_DATA_ID_PRE + UtilsAndCommons.SWITCH_DOMAIN_NAME);
             }
 
             @Override

File: naming/src/main/java/com/alibaba/nacos/naming/monitor/PerformanceLoggerThread.java
Patch:
@@ -25,7 +25,6 @@
 import org.springframework.stereotype.Component;
 
 import javax.annotation.PostConstruct;
-import java.util.ArrayList;
 import java.util.Map;
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.ScheduledThreadPoolExecutor;

File: naming/src/main/java/com/alibaba/nacos/naming/selector/SelectorJsonAdapter.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.fastjson.serializer.JSONSerializer;
 import com.alibaba.fastjson.serializer.ObjectSerializer;
 import com.alibaba.fastjson.serializer.SerializeWriter;
-import com.alibaba.nacos.api.selector.AbstractSelector;
 import com.alibaba.nacos.api.selector.SelectorType;
 import org.apache.commons.lang3.StringUtils;
 

File: naming/src/main/java/com/alibaba/nacos/naming/view/ServiceDetailView.java
Patch:
@@ -17,11 +17,9 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.nacos.api.naming.pojo.Cluster;
-import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.Service;
 
 import java.util.List;
-import java.util.Map;
 
 /**
  * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1463,13 +1463,13 @@ public String updateSwitch(HttpServletRequest request) throws Exception {
             lock.lock();
             String entry = WebUtils.required(request, "entry");
 
-            Datum datum = RaftCore.getDatum(UtilsAndCommons.DOMAINS_DATA_ID + ".00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00");
+            Datum datum = RaftCore.getDatum(UtilsAndCommons.DOMAINS_DATA_ID_PRE + UtilsAndCommons.SWITCH_DOMAIN_NAME);
             SwitchDomain switchDomain = null;
 
             if (datum != null) {
                 switchDomain = JSON.parseObject(datum.value, SwitchDomain.class);
             } else {
-                Loggers.SRV_LOG.warn("datum: {}.00-00---000-VIPSRV_SWITCH_DOMAIN-000---00-00 is null", UtilsAndCommons.DOMAINS_DATA_ID);
+                Loggers.SRV_LOG.warn("datum: {}{} is null", UtilsAndCommons.DOMAINS_DATA_ID_PRE, UtilsAndCommons.SWITCH_DOMAIN_NAME);
             }
 
             if (SwitchEntry.BATCH.equals(entry)) {

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/InstanceControllerTest.java
Patch:
@@ -18,7 +18,6 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
-import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.naming.BaseTest;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.IpAddress;

File: naming/src/test/java/com/alibaba/nacos/naming/web/APICommandsTest.java
Patch:
@@ -22,7 +22,9 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONArray;
+import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.naming.core.Cluster;
+import com.alibaba.nacos.naming.core.DomainsManager;
 import com.alibaba.nacos.naming.core.IpAddress;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
@@ -42,8 +44,6 @@
 import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
 import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
 import org.springframework.test.web.servlet.setup.MockMvcBuilders;
-import com.alibaba.fastjson.JSONObject;
-import com.alibaba.nacos.naming.core.DomainsManager;
 
 import java.util.ArrayList;
 import java.util.List;

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java
Patch:
@@ -82,7 +82,7 @@ private void deleteIP(IpAddress ipAddress) {
                 + ipAddress.getWeight() + "_" + ipAddress.getClusterName();
             String url = "http://127.0.0.1:" + RunningConfig.getServerPort() + RunningConfig.getContextPath()
                 + UtilsAndCommons.NACOS_NAMING_CONTEXT + "/api/remvIP4Dom?dom="
-                + domain.getName() + "&ipList=" + ipList + "&token=" + domain.getToken();
+                + domain.getName() + "&ipList=" + ipList + "&token=" + domain.getToken() + "&namespaceId=" + domain.getNamespaceId();
             HttpClient.HttpResult result = HttpClient.httpGet(url, null, null);
             if (result.code != HttpURLConnection.HTTP_OK) {
                 Loggers.SRV_LOG.error("[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}",

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/PreservedEntityTypes.java
Patch:
@@ -20,11 +20,11 @@
  */
 public enum PreservedEntityTypes {
     /**
-     *
+     * Ip
      */
     ip,
     /**
-     *
+     * Service
      */
     service
 }

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigFilterChain.java
Patch:
@@ -30,6 +30,6 @@ public interface IConfigFilterChain {
      * @param response response
      * @throws NacosException NacosException
      */
-    public void doFilter(IConfigRequest request, IConfigResponse response) throws NacosException;
+    void doFilter(IConfigRequest request, IConfigResponse response) throws NacosException;
 
 }

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigRequest.java
Patch:
@@ -27,13 +27,13 @@ public interface IConfigRequest {
      * @param key key
      * @return value
      */
-    public Object getParameter(String key);
+    Object getParameter(String key);
 
     /**
      * get config context
      *
      * @return
      */
-    public IConfigContext getConfigContext();
+    IConfigContext getConfigContext();
 
 }

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigResponse.java
Patch:
@@ -27,13 +27,13 @@ public interface IConfigResponse {
      * @param key key
      * @return value
      */
-    public Object getParameter(String key);
+    Object getParameter(String key);
 
     /**
-     * get context
+     * Get config context
      *
      * @return configContext
      */
-    public IConfigContext getConfigContext();
+    IConfigContext getConfigContext();
 
 }

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IFilterConfig.java
Patch:
@@ -27,14 +27,14 @@ public interface IFilterConfig {
      *
      * @return
      */
-    public String getFilterName();
+    String getFilterName();
 
     /**
-     * get param
+     * Get init param
      *
      * @param name
      * @return param
      */
-    public Object getInitParameter(String name);
+    Object getInitParameter(String name);
 
 }

File: api/src/main/java/com/alibaba/nacos/api/config/listener/AbstractListener.java
Patch:
@@ -26,8 +26,9 @@
 public abstract class AbstractListener implements Listener {
 
     /**
-     * use default Executor
+     * Use default executor
      */
+    @Override
     public Executor getExecutor() {
         return null;
     }

File: api/src/main/java/com/alibaba/nacos/api/config/listener/AbstractSharedListener.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.concurrent.Executor;
 
 /**
- * shared listener
+ * Shared Listener
  *
  * @author Nacos
  */

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java
Patch:
@@ -21,7 +21,9 @@
 import com.alibaba.nacos.api.exception.NacosException;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Naming Factory
+ *
+ * @author dungu.zpf
  */
 public class NamingFactory {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/Event.java
Patch:
@@ -16,8 +16,9 @@
 package com.alibaba.nacos.api.naming.listener;
 
 /**
- * event interface
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Event Interface
+ *
+ * @author dungu.zpf
  */
 public interface Event {
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/EventListener.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.api.naming.listener;
 
 /**
- * event listener
+ * Event Listener
  *
  * @author Nacos
  */

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/NamingEvent.java
Patch:
@@ -20,7 +20,9 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Naming Event
+ *
+ * @author dungu.zpf
  */
 public class NamingEvent implements Event {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -19,7 +19,9 @@
 import java.util.Map;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Cluster
+ *
+ * @author dungu.zpf
  */
 public class Cluster {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ListView.java
Patch:
@@ -20,7 +20,9 @@
 import java.util.List;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * ListView
+ *
+ * @author dungu.zpf
  */
 public class ListView<T> {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -24,7 +24,9 @@
 import java.util.List;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * ServiceInfo
+ *
+ * @author dungu.zpf
  */
 public class ServiceInfo {
 

File: client/src/main/java/com/alibaba/nacos/client/config/impl/Limiter.java
Patch:
@@ -42,13 +42,12 @@ public class Limiter {
     /**
      * qps 5
      */
-    private static final String DEFAULT_LIMIT = "5";
     private static double limit = 5;
 
     static {
         try {
             String limitTimeStr = System
-                .getProperty("limitTime", DEFAULT_LIMIT);
+                .getProperty("limitTime", String.valueOf(limit));
             limit = Double.parseDouble(limitTimeStr);
             log.info("limitTime:{}", limit);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/config/listener/impl/PropertiesListener.java
Patch:
@@ -33,6 +33,7 @@
 public abstract class PropertiesListener extends AbstractListener {
     final static public Logger log = LogUtils.logger(PropertiesListener.class);
 
+    @Override
     public void receiveConfigInfo(String configInfo) {
         if (StringUtils.isEmpty(configInfo)) {
             return;

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -165,6 +165,7 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
         beatInfo.setCluster(instance.getClusterName());
         beatInfo.setWeight(instance.getWeight());
         beatInfo.setMetadata(instance.getMetadata());
+        beatInfo.setScheduled(false);
 
         beatReactor.addBeatInfo(serviceName, beatInfo);
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * @author xuanyin
  */
-public class PushRecver implements Runnable {
+public class PushReceiver implements Runnable {
 
     private ScheduledExecutorService executorService;
 
@@ -40,7 +40,7 @@ public class PushRecver implements Runnable {
 
     private HostReactor hostReactor;
 
-    public PushRecver(HostReactor hostReactor) {
+    public PushReceiver(HostReactor hostReactor) {
         try {
             this.hostReactor = hostReactor;
             udpSocket = new DatagramSocket();

File: config/src/main/java/com/alibaba/nacos/config/server/Config.java
Patch:
@@ -17,6 +17,7 @@
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.scheduling.annotation.EnableScheduling;
 
 import java.net.UnknownHostException;
 
@@ -25,6 +26,7 @@
  *
  * @author Nacos
  */
+@EnableScheduling
 @SpringBootApplication
 public class Config {
 

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -252,7 +252,7 @@ public void listener(HttpServletRequest request, HttpServletResponse response)
         inner.doPollingConfig(request, response, clientMd5Map, probeModify.length());
     }
 
-    /*
+    /**
      * 订阅改配置的客户端信息
      */
     @RequestMapping(value = "/listener", method = RequestMethod.GET)

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.Map;
 
 /**
- * Config longpulling
+ * Config longpolling
  *
  * @author Nacos
  */
@@ -48,7 +48,7 @@ public class ListenerController {
     @Autowired
     public ListenerController(ConfigSubService configSubService) {this.configSubService = configSubService;}
 
-    /*
+    /**
      * 获取客户端订阅配置信息
      */
     @RequestMapping(method = RequestMethod.GET)

File: config/src/main/java/com/alibaba/nacos/config/server/manager/TaskManagerMBean.java
Patch:
@@ -28,6 +28,6 @@ public interface TaskManagerMBean {
      *
      * @return info
      */
-    public String getTaskInfos();
+    String getTaskInfos();
 
 }

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.config.server.service;
 
 import com.alibaba.nacos.config.server.constant.Constants;
+import com.alibaba.nacos.config.server.monitor.MetricsMonitor;
 import com.alibaba.nacos.config.server.service.notify.NotifyService;
 import com.alibaba.nacos.config.server.service.notify.NotifyService.HttpResult;
 import com.alibaba.nacos.config.server.utils.LogUtil;
@@ -377,6 +378,7 @@ public void failed(Exception ex) {
                     serverListUnhealth.add(serverIp);
                 }
                 defaultLog.error("unhealthIp:{}, unhealthCount:{}", serverIp, failCount);
+                MetricsMonitor.getUnhealthException().increment();
             }
         }
 
@@ -391,6 +393,7 @@ public void cancelled() {
                     serverListUnhealth.add(serverIp);
                 }
                 defaultLog.error("unhealthIp:{}, unhealthCount:{}", serverIp, failCount);
+                MetricsMonitor.getUnhealthException().increment();
             }
         }
     }

File: console/src/main/java/com/alibaba/nacos/Nacos.java
Patch:
@@ -19,15 +19,17 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.web.servlet.ServletComponentScan;
+import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
  * @author nacos
  */
 @SpringBootApplication(scanBasePackages = "com.alibaba.nacos")
 @ServletComponentScan
+@EnableScheduling
 public class Nacos {
 
     public static void main(String[] args) {
         SpringApplication.run(Nacos.class, args);
     }
-}
\ No newline at end of file
+}

File: console/src/main/java/com/alibaba/nacos/console/model/Namespace.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.console.model;
 
 /**
- * 命名空间
+ * Namespace
  *
  * @author diamond
  */
@@ -30,7 +30,7 @@ public class Namespace {
 
     private int configCount;
     /**
-     * 0 全局配置， 1 默认私有命名空间 ，2 自定义命名空间
+     * 0 : Global configuration， 1 : Default private namespace ，2 : Custom namespace
      */
     private int type;
 

File: example/src/main/java/com/alibaba/nacos/example/ConfigExample.java
Patch:
@@ -42,7 +42,7 @@ public static void main(String[] args) throws NacosException, InterruptedExcepti
         configService.addListener(dataId, group, new Listener() {
             @Override
             public void receiveConfigInfo(String configInfo) {
-                System.out.println("recieve:" + configInfo);
+                System.out.println("receive:" + configInfo);
             }
 
             @Override

File: naming/src/main/java/com/alibaba/nacos/naming/NamingApp.java
Patch:
@@ -17,12 +17,14 @@
 
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
  * Hello world!
  *
  * @author xxc
  */
+@EnableScheduling
 @SpringBootApplication
 public class NamingApp {
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -178,7 +178,9 @@ public void onChange(String key, String value) throws Exception {
 
         List<IpAddress> ips = JSON.parseObject(value, new TypeReference<List<IpAddress>>() {
         });
+
         for (IpAddress ip : ips) {
+
             if (ip.getWeight() > 10000.0D) {
                 ip.setWeight(10000.0D);
             }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.naming.core.IpAddress;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
 import com.alibaba.nacos.naming.misc.Switch;
+import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.AsyncHttpClient;
 import com.ning.http.client.AsyncHttpClientConfig;
@@ -45,9 +46,6 @@
 public class HttpHealthCheckProcessor extends AbstractHealthCheckProcessor {
     private static AsyncHttpClient asyncHttpClient;
 
-    public HttpHealthCheckProcessor() {
-    }
-
     static {
         try {
             AsyncHttpClientConfig.Builder builder = new AsyncHttpClientConfig.Builder();
@@ -63,6 +61,7 @@ public HttpHealthCheckProcessor() {
             builder.setMaxRequestRetry(0);
             builder.setUserAgent("VIPServer");
             asyncHttpClient = new AsyncHttpClient(builder.build());
+
         } catch (Throwable e) {
             SRV_LOG.error("VIPSRV-HEALTH-CHECK", "Error while constructing HTTP asynchronous client, " + e.toString(), e);
         }
@@ -126,6 +125,7 @@ public void process(HealthCheckTask task) {
                 }
 
                 builder.execute(new HttpHealthCheckCallback(ip, task));
+                MetricsMonitor.getHttpHealthCheckMonitor().incrementAndGet();
             } catch (Throwable e) {
                 ip.setCheckRT(Switch.getHttpHealthParams().getMax());
                 checkFail(ip, task, "http:error:" + e.getMessage());

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/MysqlHealthCheckProcessor.java
Patch:
@@ -21,6 +21,7 @@
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.Switch;
+import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;
 import io.netty.channel.ConnectTimeoutException;
 import org.apache.commons.collections.CollectionUtils;
@@ -111,6 +112,7 @@ public void process(HealthCheckTask task) {
                 }
 
                 EXECUTOR.execute(new MysqlCheckTask(ip, task));
+                MetricsMonitor.getMysqlHealthCheckMonitor().incrementAndGet();
             } catch (Exception e) {
                 ip.setCheckRT(Switch.getMysqlHealthParams().getMax());
                 checkFail(ip, task, "mysql:error:" + e.getMessage());

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/TcpSuperSenseProcessor.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
 import com.alibaba.nacos.naming.misc.Loggers;
 import com.alibaba.nacos.naming.misc.Switch;
+import com.alibaba.nacos.naming.monitor.MetricsMonitor;
 import org.apache.commons.collections.CollectionUtils;
 
 import java.net.ConnectException;
@@ -39,7 +40,6 @@
  * @author nacos
  */
 public class TcpSuperSenseProcessor extends AbstractHealthCheckProcessor implements Runnable {
-
     private Map<String, BeatKey> keyMap = new ConcurrentHashMap<>();
 
     private BlockingQueue<Beat> taskQueue = new LinkedBlockingQueue<Beat>();
@@ -127,6 +127,7 @@ public void process(HealthCheckTask task) {
 
             Beat beat = new Beat(ip, task);
             taskQueue.add(beat);
+            MetricsMonitor.getTcpHealthCheckMonitor().incrementAndGet();
         }
 
 //        selector.wakeup();

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -112,7 +112,7 @@ public static HttpResult httpGetWithTimeOut(String url, List<String> headers, Ma
 
             return getResult(conn);
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("VIPSRV", "Exception while request: " + url + ", caused: " + e.getMessage());
+            Loggers.SRV_LOG.warn("VIPSRV {}", "Exception while request: " + url + ", caused: " + e.getMessage());
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {
             if (conn != null) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/Switch.java
Patch:
@@ -135,7 +135,7 @@ public static void setDom(SwitchDomain dom) {
 
     public static void save() {
         try {
-            RaftCore.doSignalPublish(UtilsAndCommons.getDomStoreKey(dom), JSON.toJSONString(dom));
+            RaftCore.doSignalPublish(UtilsAndCommons.getDomStoreKey(dom), JSON.toJSONString(dom), true);
         } catch (Exception e) {
             Loggers.SRV_LOG.error("VIPSRV-SWITCH", "failed to save switch", e);
         }

File: naming/src/main/java/com/alibaba/nacos/naming/raft/GlobalExecutor.java
Patch:
@@ -21,15 +21,15 @@
  * @author nacos
  */
 public class GlobalExecutor {
-    public static final long HEARTBEAT_INTVERAL_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long HEARTBEAT_INTERVAL_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long LEADER_TIMEOUT_MS = TimeUnit.SECONDS.toMillis(15L);
 
     public static final long RANDOM_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long TICK_PERIOD_MS = TimeUnit.MILLISECONDS.toMillis(500L);
 
-    public static final long ADDRESS_SERVER_UPDATE_INTVERAL_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long ADDRESS_SERVER_UPDATE_INTERVAL_MS = TimeUnit.SECONDS.toMillis(5L);
 
     private static ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(2, new ThreadFactory() {
         @Override

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftPeer.java
Patch:
@@ -34,7 +34,7 @@ public class RaftPeer {
 
     public volatile long leaderDueMs = RandomUtils.nextLong(0, GlobalExecutor.LEADER_TIMEOUT_MS);
 
-    public volatile  long heartbeatDueMs = RandomUtils.nextLong(0, GlobalExecutor.HEARTBEAT_INTVERAL_MS);
+    public volatile  long heartbeatDueMs = RandomUtils.nextLong(0, GlobalExecutor.HEARTBEAT_INTERVAL_MS);
 
     public State state = State.FOLLOWER;
 
@@ -43,7 +43,7 @@ public void resetLeaderDue() {
     }
 
     public void resetHeartbeatDue() {
-        heartbeatDueMs = GlobalExecutor.HEARTBEAT_INTVERAL_MS;
+        heartbeatDueMs = GlobalExecutor.HEARTBEAT_INTERVAL_MS;
     }
 
     public enum State {

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -42,6 +42,8 @@ public class NamingBase {
     public static final String TEST_PORT_4_DOM_2 = "7070";
     public static final String TETS_TOKEN_4_DOM_2 = "xyz";
 
+    static final String NAMING_CONTROLLER_PATH = "/nacos/v1/ns";
+
     public static final int TEST_PORT = 8080;
 
     public static String randomDomainName() {

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -379,7 +379,7 @@ public void getServiceListWithSelector() throws NacosException, InterruptedExcep
         TimeUnit.SECONDS.sleep(10);
 
         ExpressionSelector expressionSelector = new ExpressionSelector();
-        expressionSelector.setExpression("INSTANCE.metadata.registerSource = 'dubbo'");
+        expressionSelector.setExpression("INSTANCE.label.registerSource = 'dubbo'");
         ListView<String> serviceList = naming.getServicesOfServer(1, 10, expressionSelector);
 
         Assert.assertTrue(serviceList.getData().contains(serviceName));

File: console/src/main/java/com/alibaba/nacos/console/security/CustomAuthenticationProvider.java
Patch:
@@ -32,7 +32,7 @@
 public class CustomAuthenticationProvider implements AuthenticationProvider {
 
     @Autowired
-    private CustomUserDetailsService userDetailsService;
+    private CustomUserDetailsServiceImpl userDetailsService;
 
     @Override
     public Authentication authenticate(Authentication authentication) throws AuthenticationException {

File: console/src/main/java/com/alibaba/nacos/console/security/CustomUserDetailsServiceImpl.java
Patch:
@@ -30,14 +30,13 @@
  * @author wfnuser
  */
 @Service
-public class CustomUserDetailsService implements UserDetailsService {
+public class CustomUserDetailsServiceImpl implements UserDetailsService {
 
     @Autowired
     private transient PersistService persistService;
 
     @Override
     public UserDetails loadUserByUsername(String userName) throws UsernameNotFoundException {
-        // 持久层写一个获取用户信息的sql
         User user = persistService.findUserByUsername(userName);
         if (user == null) {
             throw new UsernameNotFoundException(userName);

File: client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java
Patch:
@@ -65,7 +65,7 @@ public HttpResult httpPost(String path, List<String> headers, List<String> param
         long end = 0;
         HttpResult result = null;
         try {
-            result = httpAgent.httpGet(path, headers, paramValues, encoding, readTimeoutMs);
+            result = httpAgent.httpPost(path, headers, paramValues, encoding, readTimeoutMs);
         } catch (IOException e) {
             end = System.currentTimeMillis();
             MetricsMonitor.getConfigRequestMonitor("POST", path, "NA").record(end - start, TimeUnit.MILLISECONDS);
@@ -84,7 +84,7 @@ public HttpResult httpDelete(String path, List<String> headers, List<String> par
         long end = 0;
         HttpResult result = null;
         try {
-            result = httpAgent.httpGet(path, headers, paramValues, encoding, readTimeoutMs);
+            result = httpAgent.httpDelete(path, headers, paramValues, encoding, readTimeoutMs);
         } catch (IOException e) {
             end = System.currentTimeMillis();
             MetricsMonitor.getConfigRequestMonitor("DELETE", path, "NA").record(end - start, TimeUnit.MILLISECONDS);

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -109,7 +109,7 @@ public class Constants {
 
     public static final String WORD_SEPARATOR = Character.toString((char)2);
 
-    public static final String LONGPULLING_LINE_SEPARATOR = "\r\n";
+    public static final String LONGPOLLING_LINE_SEPARATOR = "\r\n";
 
     public static final String CLIENT_APPNAME_HEADER = "Client-AppName";
     public static final String CLIENT_REQUEST_TS_HEADER = "Client-RequestTS";

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -57,7 +57,7 @@ public class NacosConfigService implements ConfigService {
      */
     private ServerHttpAgent agent;
     /**
-     * longpulling
+     * longpolling
      */
     private ClientWorker worker;
     private String namespace;

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * @author xuanyin
  */
-public class PushRecver implements Runnable {
+public class PushReceiver implements Runnable {
 
     private ScheduledExecutorService executorService;
 
@@ -40,7 +40,7 @@ public class PushRecver implements Runnable {
 
     private HostReactor hostReactor;
 
-    public PushRecver(HostReactor hostReactor) {
+    public PushReceiver(HostReactor hostReactor) {
         try {
             this.hostReactor = hostReactor;
             udpSocket = new DatagramSocket();

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.Map;
 
 /**
- * Config longpulling
+ * Config longpolling
  *
  * @author Nacos
  */

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -209,7 +209,7 @@ public long sendBeat(BeatInfo beatInfo) {
         params.put("serviceName", beatInfo.getServiceName());
 
         try {
-            String result = reqAPI(UtilAndComs.NACOS_URL_BASE + "/health", params, HttpMethod.POST);
+            String result = reqAPI(UtilAndComs.NACOS_URL_BASE + "/instance/beat", params, HttpMethod.PUT);
             JSONObject jsonObject = JSON.parseObject(result);
 
             if (jsonObject != null) {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -46,7 +46,7 @@ public class ClusterController {
     @Autowired
     protected DomainsManager domainsManager;
 
-    @RequestMapping(value = {"/update", "/add"}, method = RequestMethod.POST)
+    @RequestMapping(value = {"/update", "/add"}, method = RequestMethod.PUT)
     public String update(HttpServletRequest request) throws Exception {
 
         String namespaceId = WebUtils.optional(request, Constants.REQUEST_PARAM_NAMESPACE_ID,

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -320,7 +320,7 @@ public static void signalDelete(final String key) throws Exception {
 
             if (!isLeader()) {
                 Map<String, String> params = new HashMap<>(1);
-                params.put("key", key);
+                params.put("key", URLEncoder.encode(key, "UTF-8"));
 
                 RaftProxy.proxyGET(API_DEL, params);
                 return;
@@ -777,7 +777,7 @@ public static RaftPeer receivedBeat(JSONObject beat) throws Exception {
                             + ", datums' size is " + beatDatums.size() + ", RaftCore.datums' size is " + RaftCore.datums.size());
 
                         // update datum entry
-                        String url = buildURL(remote.ip, API_GET) + "?keys=" + keys;
+                        String url = buildURL(remote.ip, API_GET) + "?keys=" + URLEncoder.encode(keys, "UTF-8");
                         HttpClient.asyncHttpGet(url, null, null, new AsyncCompletionHandler<Integer>() {
                             @Override
                             public Integer onCompleted(Response response) throws Exception {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -275,7 +275,7 @@ public ListView<String> getServicesOfServer(int pageNo, int pageSize, AbstractSe
 
     @Override
     public List<ServiceInfo> getSubscribeServices() {
-        return new ArrayList<ServiceInfo>(hostReactor.getServiceInfoMap().values());
+        return eventDispatcher.getSubscribeServices();
     }
 
     @Override

File: test/src/test/java/com/alibaba/nacos/test/naming/NamingBase.java
Patch:
@@ -42,6 +42,8 @@ public class NamingBase {
     public static final String TEST_PORT_4_DOM_2 = "7070";
     public static final String TETS_TOKEN_4_DOM_2 = "xyz";
 
+    static final String NAMING_CONTROLLER_PATH = "/nacos/v1/ns";
+
     public static final int TEST_PORT = 8080;
 
     public static String randomDomainName() {

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -334,6 +334,7 @@ public JSONObject clientBeat(HttpServletRequest request) throws Exception {
         if (!virtualClusterDomain.allIPs().contains(ipAddress)) {
             stringMap.put("ipList", Arrays.asList(JSON.toJSONString(Arrays.asList(ipAddress))).toArray(new String[1]));
             stringMap.put("json", Arrays.asList("true").toArray(new String[1]));
+            stringMap.put("dom", Arrays.asList(dom).toArray(new String[1]));
             addIP4Dom(OverrideParameterRequestWrapper.buildRequest(request, stringMap));
             Loggers.SRV_LOG.warn("ip not found, register it, dom:" + dom + ", ip:" + ipAddress);
         }

File: common/src/main/java/com/alibaba/nacos/common/util/HttpMethod.java
Patch:
@@ -31,7 +31,7 @@ public class HttpMethod {
 
     public static final String PATCH = "PATCH";
 
-    public static final String DELETE = "PATCH";
+    public static final String DELETE = "DELETE";
 
     public static final String OPTIONS = "PATCH";
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -31,5 +31,7 @@ public class PropertyKeyConst {
     public final static String CLUSTER_NAME = "clusterName";
     public final static String ENCODE = "encode";
     public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
+    public final static String NAMING_CLIENT_BEAT_THREAD_COUNT = "namingClientBeatThreadCount";
+    public final static String NAMING_POLLING_THREAD_COUNT = "namingPollingThreadCount";
 
 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/Limiter.java
Patch:
@@ -42,13 +42,12 @@ public class Limiter {
     /**
      * qps 5
      */
-    private static final String DEFAULT_LIMIT = "5";
     private static double limit = 5;
 
     static {
         try {
             String limitTimeStr = System
-                .getProperty("limitTime", DEFAULT_LIMIT);
+                .getProperty("limitTime", String.valueOf(limit));
             limit = Double.parseDouble(limitTimeStr);
             log.info("limitTime:{}", limit);
         } catch (Exception e) {

File: api/src/main/java/com/alibaba/nacos/api/cmdb/pojo/PreservedEntityTypes.java
Patch:
@@ -20,11 +20,11 @@
  */
 public enum PreservedEntityTypes {
     /**
-     *
+     * Ip
      */
     ip,
     /**
-     *
+     * Service
      */
     service
 }

File: api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java
Patch:
@@ -32,14 +32,14 @@ public class ConfigFactory {
      * Create Config
      *
      * @param properties init param
-     * @return Config
+     * @return ConfigService
      * @throws NacosException Exception
      */
     public static ConfigService createConfigService(Properties properties) throws NacosException {
         try {
             Class<?> driverImplClass = Class.forName("com.alibaba.nacos.client.config.NacosConfigService");
             Constructor constructor = driverImplClass.getConstructor(Properties.class);
-            ConfigService vendorImpl = (ConfigService)constructor.newInstance(properties);
+            ConfigService vendorImpl = (ConfigService) constructor.newInstance(properties);
             return vendorImpl;
         } catch (Throwable e) {
             throw new NacosException(-400, e.getMessage());
@@ -51,7 +51,7 @@ public static ConfigService createConfigService(Properties properties) throws Na
      *
      * @param serverAddr serverList
      * @return Config
-     * @throws NacosException Exception
+     * @throws ConfigService Exception
      */
     public static ConfigService createConfigService(String serverAddr) throws NacosException {
         Properties properties = new Properties();

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigContext.java
Patch:
@@ -22,15 +22,15 @@
  */
 public interface IConfigContext {
     /**
-     * get context by key
+     * Get context param by key
      *
      * @param key
      * @return context
      */
     Object getParameter(String key);
 
     /**
-     * set context
+     * Set context param
      *
      * @param key   key
      * @param value value

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigFilterChain.java
Patch:
@@ -24,7 +24,7 @@
  */
 public interface IConfigFilterChain {
     /**
-     * Filter action
+     * Filter aciton
      *
      * @param request  request
      * @param response response

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigResponse.java
Patch:
@@ -30,7 +30,7 @@ public interface IConfigResponse {
     Object getParameter(String key);
 
     /**
-     * get context
+     * Get config context
      *
      * @return configContext
      */

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IFilterConfig.java
Patch:
@@ -30,7 +30,7 @@ public interface IFilterConfig {
     String getFilterName();
 
     /**
-     * get param
+     * Get init param
      *
      * @param name
      * @return param

File: api/src/main/java/com/alibaba/nacos/api/config/listener/AbstractListener.java
Patch:
@@ -18,15 +18,15 @@
 import java.util.concurrent.Executor;
 
 /**
- * Listener Adapter,use default notify thread
+ * Listner Adapter,use default notify thread
  *
  * @author water.lyl
  */
 @SuppressWarnings("PMD.AbstractClassShouldStartWithAbstractNamingRule")
 public abstract class AbstractListener implements Listener {
 
     /**
-     * use default Executor
+     * Use default executor
      */
     @Override
     public Executor getExecutor() {

File: api/src/main/java/com/alibaba/nacos/api/config/listener/AbstractSharedListener.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.concurrent.Executor;
 
 /**
- * shared listener
+ * Shared Listener
  *
  * @author Nacos
  */

File: api/src/main/java/com/alibaba/nacos/api/config/listener/Listener.java
Patch:
@@ -25,16 +25,16 @@
 public interface Listener {
 
     /**
-     * Executor to execute this receive
+     * Get executor for execute this receive
      *
      * @return Executor
      */
     Executor getExecutor();
 
     /**
-     * 接收配置信息
+     * Receive config info
      *
-     * @param configInfo 配置值
+     * @param configInfo config info
      */
     void receiveConfigInfo(final String configInfo);
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java
Patch:
@@ -21,7 +21,9 @@
 import com.alibaba.nacos.api.exception.NacosException;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Naming Factory
+ *
+ * @author dungu.zpf
  */
 public class NamingFactory {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/Event.java
Patch:
@@ -16,8 +16,9 @@
 package com.alibaba.nacos.api.naming.listener;
 
 /**
- * event interface
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Event Interface
+ *
+ * @author dungu.zpf
  */
 public interface Event {
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/EventListener.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.api.naming.listener;
 
 /**
- * event listener
+ * Event Listener
  *
  * @author Nacos
  */

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/NamingEvent.java
Patch:
@@ -20,7 +20,9 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Naming Event
+ *
+ * @author dungu.zpf
  */
 public class NamingEvent implements Event {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -19,7 +19,9 @@
 import java.util.Map;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * Cluster
+ *
+ * @author dungu.zpf
  */
 public class Cluster {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ListView.java
Patch:
@@ -20,7 +20,9 @@
 import java.util.List;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * ListView
+ *
+ * @author dungu.zpf
  */
 public class ListView<T> {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -24,7 +24,9 @@
 import java.util.List;
 
 /**
- * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
+ * ServiceInfo
+ *
+ * @author dungu.zpf
  */
 public class ServiceInfo {
 

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -38,4 +38,6 @@ public class PropertyKeyConst {
 
     public final static String ENCODE = "encode";
 
+    public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
+
 }

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigContext.java
Patch:
@@ -22,15 +22,15 @@
  */
 public interface IConfigContext {
     /**
-     * get context param by key
+     * Get context param by key
      *
      * @param key
      * @return context
      */
     Object getParameter(String key);
 
     /**
-     * set context param
+     * Set context param
      *
      * @param key   key
      * @param value value

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigFilter.java
Patch:
@@ -24,7 +24,7 @@
  */
 public interface IConfigFilter {
     /**
-     * init
+     * Init
      *
      * @param filterConfig Filter Config
      */
@@ -47,14 +47,14 @@ void doFilter(IConfigRequest request, IConfigResponse response, IConfigFilterCha
     void deploy();
 
     /**
-     * get order
+     * Get order
      *
      * @return order number
      */
     int getOrder();
 
     /**
-     * get filterName
+     * Get filterName
      *
      * @return filter name
      */

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigFilterChain.java
Patch:
@@ -24,7 +24,7 @@
  */
 public interface IConfigFilterChain {
     /**
-     * filter aciton
+     * Filter aciton
      *
      * @param request  request
      * @param response response

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IConfigResponse.java
Patch:
@@ -30,7 +30,7 @@ public interface IConfigResponse {
     Object getParameter(String key);
 
     /**
-     * get config context
+     * Get config context
      *
      * @return configContext
      */

File: api/src/main/java/com/alibaba/nacos/api/config/filter/IFilterConfig.java
Patch:
@@ -30,7 +30,7 @@ public interface IFilterConfig {
     String getFilterName();
 
     /**
-     * get init param
+     * Get init param
      *
      * @param name
      * @return param

File: api/src/main/java/com/alibaba/nacos/api/config/listener/AbstractListener.java
Patch:
@@ -26,7 +26,7 @@
 public abstract class AbstractListener implements Listener {
 
     /**
-     * use default executor
+     * Use default executor
      */
     @Override
     public Executor getExecutor() {

File: api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java
Patch:
@@ -75,7 +75,6 @@ public String toString() {
      */
     public static final int CLIENT_OVER_THRESHOLD = -503;
 
-
     /**
      * server error code
      * 400 403 throw exception to user
@@ -107,5 +106,4 @@ public String toString() {
      */
     public static final int OVER_THRESHOLD = 503;
 
-
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -19,6 +19,7 @@
 import java.util.Map;
 
 /**
+<<<<<<< HEAD
  *
  *
  * @author dungu.zpf
@@ -33,7 +34,7 @@ public class Cluster {
     /**
      * Name of cluster
      */
-    private String name = "";
+    private String name;
 
     /**
      * Health check config of this cluster
@@ -55,7 +56,6 @@ public class Cluster {
      */
     private boolean useIPPort4Check = true;
 
-
     private Map<String, String> metadata = new HashMap<String, String>();
 
     public Cluster() {

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2Logger.java
Patch:
@@ -21,11 +21,10 @@
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
 import com.alibaba.nacos.client.logger.util.MessageUtil;
 
-
 /**
  * Log4j2Logger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2Logger extends LoggerSupport implements Logger {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2LoggerFactory.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * Log4j2Logger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2LoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLogger.java
Patch:
@@ -17,14 +17,15 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
+
 /**
  * NopLogger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLogger extends LoggerSupport implements Logger {
 
-    public NopLogger(){
+    public NopLogger() {
         super(null);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLoggerFactory.java
Patch:
@@ -17,10 +17,11 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
+
 /**
  * NopLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/option/LogbackActivateOption.java
Patch:
@@ -29,10 +29,10 @@
 
 /**
  * ActivateOption的Logback 0.9.19及后续版本的实现
- * 
+ *
  * @author zhuyong 2014年3月20日 上午10:24:58
  */
-@SuppressWarnings({ "rawtypes", "unchecked" })
+@SuppressWarnings({"rawtypes", "unchecked"})
 public class LogbackActivateOption extends Logback918ActivateOption {
 
     public LogbackActivateOption(Object logger) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLoggerFactory.java
Patch:
@@ -15,15 +15,15 @@
  */
 package com.alibaba.nacos.client.logger.slf4j;
 
-
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.nop.NopLogger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
 import com.alibaba.nacos.client.logger.support.LogLog;
+
 /**
  * Slf4jLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Slf4jLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/AppenderInfo.java
Patch:
@@ -27,7 +27,7 @@ public class AppenderInfo extends HashMap {
     private static String file = "file";
 
     public String getName() {
-        return (String) get(AppenderInfo.name);
+        return (String)get(AppenderInfo.name);
     }
 
     public void setName(String name) {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/ErrorLog.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * 兼容老的ErrorLog，后续请使用{@link LoggerHelper}
- * 
+ *
  * @author zhuyong 2014年7月1日 上午11:41:22
  */
 public class ErrorLog {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LogLog.java
Patch:
@@ -33,10 +33,11 @@
 
 import java.io.PrintStream;
 import java.util.Calendar;
+
 /**
- *  logger log
- * @author Nacos
+ * logger log
  *
+ * @author Nacos
  */
 public class LogLog {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LoggerInfo.java
Patch:
@@ -41,11 +41,11 @@ public void setEffectiveLevel(String effectiveLevel) {
     }
 
     public String getLevel() {
-        return (String) get(level);
+        return (String)get(level);
     }
 
     public List<AppenderInfo> getAppenders() {
-        return (List<AppenderInfo>) get(appenders);
+        return (List<AppenderInfo>)get(appenders);
     }
 
     public void setAppenders(List<AppenderInfo> appenders) {

File: client/src/main/java/com/alibaba/nacos/client/logger/util/MessageUtil.java
Patch:
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 package com.alibaba.nacos.client.logger.util;
+
 /**
  * Error msg format
- * @author Nacos
  *
+ * @author Nacos
  */
 public class MessageUtil {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -38,7 +38,8 @@ public class EventDispatcher {
 
     private BlockingQueue<ServiceInfo> changedServices = new LinkedBlockingQueue<ServiceInfo>();
 
-    private ConcurrentMap<String, List<EventListener>> observerMap = new ConcurrentHashMap<String, List<EventListener>>();
+    private ConcurrentMap<String, List<EventListener>> observerMap
+        = new ConcurrentHashMap<String, List<EventListener>>();
 
     public EventDispatcher() {
 
@@ -124,7 +125,7 @@ public void run() {
 
                 } catch (Exception e) {
                     LogUtils.LOG.error("NA", "notify error for service: "
-                            + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
+                        + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ProtectMode.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.naming.core;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class ProtectMode {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/GenericPoller.java
Patch:
@@ -20,14 +20,14 @@
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class GenericPoller<T> implements Poller<T> {
 
     private AtomicInteger index = new AtomicInteger(0);
     private List<T> items = new ArrayList<T>();
 
-    public GenericPoller(List<T> items){
+    public GenericPoller(List<T> items) {
         this.items = items;
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/LogUtils.java
Patch:
@@ -42,7 +42,7 @@ public class LogUtils {
 
         // logger init
         LOG = LoggerFactory.getLogger("com.alibaba.nacos.client.naming");
-        LOG.setLevel(Level.INFO);
+        LOG.setLevel(Level.DEBUG);
         LOG.setAdditivity(false);
         LOG.activateAppenderWithSizeRolling("nacos", "naming.log", "UTF-8", JM_LOG_FILE_SIZE, JM_LOG_RETAIN_COUNT);
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -27,10 +27,10 @@ public class NetUtils {
     public static String localIP() {
         try {
             if (!StringUtils.isEmpty(LOCAL_IP)) {
-               return LOCAL_IP;
+                return LOCAL_IP;
             }
 
-            String ip = System.getProperty("com.taobao.vipserver.localIP", InetAddress.getLocalHost().getHostAddress());
+            String ip = System.getProperty("com.alibaba.nacos.client.naming.local.ip", InetAddress.getLocalHost().getHostAddress());
 
             return LOCAL_IP = ip;
         } catch (UnknownHostException e) {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Poller.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.List;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public interface Poller<T> {
     /**

File: console/src/main/java/com/alibaba/nacos/console/security/CustomUserDetails.java
Patch:
@@ -1,6 +1,6 @@
 package com.alibaba.nacos.console.security;
 
-import com.alibaba.nacos.console.domain.User;
+import com.alibaba.nacos.config.server.model.User;
 import org.springframework.security.core.GrantedAuthority;
 import org.springframework.security.core.authority.AuthorityUtils;
 import org.springframework.security.core.userdetails.UserDetails;

File: console/src/main/java/com/alibaba/nacos/console/security/JwtAuthenticationEntryPoint.java
Patch:
@@ -24,6 +24,6 @@ public void commence(HttpServletRequest httpServletRequest,
                          HttpServletResponse httpServletResponse,
                          AuthenticationException e) throws IOException, ServletException {
         logger.error("Responding with unauthorized error. Message - {}", e.getMessage());
-        httpServletResponse.sendError(httpServletResponse.getStatus(), "Invalid token");
+        httpServletResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED, "Unauthorized");
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/Limiter.java
Patch:
@@ -42,13 +42,12 @@ public class Limiter {
     /**
      * qps 5
      */
-    private static final String DEFAULT_LIMIT = "5";
     private static double limit = 5;
 
     static {
         try {
             String limitTimeStr = System
-                .getProperty("limitTime", DEFAULT_LIMIT);
+                .getProperty("limitTime", String.valueOf(limit));
             limit = Double.parseDouble(limitTimeStr);
             log.info("limitTime:{}", limit);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -165,6 +165,7 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
         beatInfo.setCluster(instance.getClusterName());
         beatInfo.setWeight(instance.getWeight());
         beatInfo.setMetadata(instance.getMetadata());
+        beatInfo.setScheduled(false);
 
         beatReactor.addBeatInfo(serviceName, beatInfo);
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -178,7 +178,9 @@ public void onChange(String key, String value) throws Exception {
 
         List<IpAddress> ips = JSON.parseObject(value, new TypeReference<List<IpAddress>>() {
         });
+
         for (IpAddress ip : ips) {
+
             if (ip.getWeight() > 10000.0D) {
                 ip.setWeight(10000.0D);
             }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/HttpClient.java
Patch:
@@ -112,7 +112,7 @@ public static HttpResult httpGetWithTimeOut(String url, List<String> headers, Ma
 
             return getResult(conn);
         } catch (Exception e) {
-            Loggers.SRV_LOG.warn("VIPSRV", "Exception while request: " + url + ", caused: " + e.getMessage());
+            Loggers.SRV_LOG.warn("VIPSRV {}", "Exception while request: " + url + ", caused: " + e.getMessage());
             return new HttpResult(500, e.toString(), Collections.<String, String>emptyMap());
         } finally {
             if (conn != null) {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/Switch.java
Patch:
@@ -135,7 +135,7 @@ public static void setDom(SwitchDomain dom) {
 
     public static void save() {
         try {
-            RaftCore.doSignalPublish(UtilsAndCommons.getDomStoreKey(dom), JSON.toJSONString(dom));
+            RaftCore.doSignalPublish(UtilsAndCommons.getDomStoreKey(dom), JSON.toJSONString(dom), true);
         } catch (Exception e) {
             Loggers.SRV_LOG.error("VIPSRV-SWITCH", "failed to save switch", e);
         }

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -379,7 +379,7 @@ public void getServiceListWithSelector() throws NacosException, InterruptedExcep
         TimeUnit.SECONDS.sleep(10);
 
         ExpressionSelector expressionSelector = new ExpressionSelector();
-        expressionSelector.setExpression("INSTANCE.metadata.registerSource = 'dubbo'");
+        expressionSelector.setExpression("INSTANCE.label.registerSource = 'dubbo'");
         ListView<String> serviceList = naming.getServicesOfServer(1, 10, expressionSelector);
 
         Assert.assertTrue(serviceList.getData().contains(serviceName));

File: naming/src/main/java/com/alibaba/nacos/naming/misc/Switch.java
Patch:
@@ -135,7 +135,7 @@ public static void setDom(SwitchDomain dom) {
 
     public static void save() {
         try {
-            RaftCore.doSignalPublish(UtilsAndCommons.getDomStoreKey(dom), JSON.toJSONString(dom));
+            RaftCore.doSignalPublish(UtilsAndCommons.getDomStoreKey(dom), JSON.toJSONString(dom), true);
         } catch (Exception e) {
             Loggers.SRV_LOG.error("VIPSRV-SWITCH", "failed to save switch", e);
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -165,6 +165,7 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
         beatInfo.setCluster(instance.getClusterName());
         beatInfo.setWeight(instance.getWeight());
         beatInfo.setMetadata(instance.getMetadata());
+        beatInfo.setScheduled(false);
 
         beatReactor.addBeatInfo(serviceName, beatInfo);
 

File: naming/src/main/java/com/alibaba/nacos/naming/raft/GlobalExecutor.java
Patch:
@@ -21,15 +21,15 @@
  * @author nacos
  */
 public class GlobalExecutor {
-    public static final long HEARTBEAT_INTVERAL_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long HEARTBEAT_INTERVAL_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long LEADER_TIMEOUT_MS = TimeUnit.SECONDS.toMillis(15L);
 
     public static final long RANDOM_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long TICK_PERIOD_MS = TimeUnit.MILLISECONDS.toMillis(500L);
 
-    public static final long ADDRESS_SERVER_UPDATE_INTVERAL_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long ADDRESS_SERVER_UPDATE_INTERVAL_MS = TimeUnit.SECONDS.toMillis(5L);
 
     private static ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(2, new ThreadFactory() {
         @Override

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -120,7 +120,7 @@ public static void init() throws Exception {
 
         GlobalExecutor.register(new MasterElection());
         GlobalExecutor.register1(new HeartBeat());
-        GlobalExecutor.register(new AddressServerUpdater(), GlobalExecutor.ADDRESS_SERVER_UPDATE_INTVERAL_MS);
+        GlobalExecutor.register(new AddressServerUpdater(), GlobalExecutor.ADDRESS_SERVER_UPDATE_INTERVAL_MS);
 
         if (peers.size() > 0) {
             if (lock.tryLock(INIT_LOCK_TIME_SECONDS, TimeUnit.SECONDS)) {
@@ -132,7 +132,7 @@ public static void init() throws Exception {
         }
 
         Loggers.RAFT.info("timer started: leader timeout ms: " + GlobalExecutor.LEADER_TIMEOUT_MS
-                + "; heart-beat timeout ms: " + GlobalExecutor.HEARTBEAT_INTVERAL_MS);
+                + "; heart-beat timeout ms: " + GlobalExecutor.HEARTBEAT_INTERVAL_MS);
     }
 
     public static List<RaftListener> getListeners() {

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftPeer.java
Patch:
@@ -34,7 +34,7 @@ public class RaftPeer {
 
     public volatile long leaderDueMs = RandomUtils.nextLong(0, GlobalExecutor.LEADER_TIMEOUT_MS);
 
-    public volatile  long heartbeatDueMs = RandomUtils.nextLong(0, GlobalExecutor.HEARTBEAT_INTVERAL_MS);
+    public volatile  long heartbeatDueMs = RandomUtils.nextLong(0, GlobalExecutor.HEARTBEAT_INTERVAL_MS);
 
     public State state = State.FOLLOWER;
 
@@ -43,7 +43,7 @@ public void resetLeaderDue() {
     }
 
     public void resetHeartbeatDue() {
-        heartbeatDueMs = GlobalExecutor.HEARTBEAT_INTVERAL_MS;
+        heartbeatDueMs = GlobalExecutor.HEARTBEAT_INTERVAL_MS;
     }
 
     public enum State {

File: naming/src/main/java/com/alibaba/nacos/naming/raft/GlobalExecutor.java
Patch:
@@ -21,15 +21,15 @@
  * @author nacos
  */
 public class GlobalExecutor {
-    public static final long HEARTBEAT_INTVERAL_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long HEARTBEAT_INTERVAL_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long LEADER_TIMEOUT_MS = TimeUnit.SECONDS.toMillis(15L);
 
     public static final long RANDOM_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long TICK_PERIOD_MS = TimeUnit.MILLISECONDS.toMillis(500L);
 
-    public static final long ADDRESS_SERVER_UPDATE_INTVERAL_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long ADDRESS_SERVER_UPDATE_INTERVAL_MS = TimeUnit.SECONDS.toMillis(5L);
 
     private static ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(2, new ThreadFactory() {
         @Override

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -120,7 +120,7 @@ public static void init() throws Exception {
 
         GlobalExecutor.register(new MasterElection());
         GlobalExecutor.register1(new HeartBeat());
-        GlobalExecutor.register(new AddressServerUpdater(), GlobalExecutor.ADDRESS_SERVER_UPDATE_INTVERAL_MS);
+        GlobalExecutor.register(new AddressServerUpdater(), GlobalExecutor.ADDRESS_SERVER_UPDATE_INTERVAL_MS);
 
         if (peers.size() > 0) {
             if (lock.tryLock(INIT_LOCK_TIME_SECONDS, TimeUnit.SECONDS)) {
@@ -132,7 +132,7 @@ public static void init() throws Exception {
         }
 
         Loggers.RAFT.info("timer started: leader timeout ms: " + GlobalExecutor.LEADER_TIMEOUT_MS
-                + "; heart-beat timeout ms: " + GlobalExecutor.HEARTBEAT_INTVERAL_MS);
+                + "; heart-beat timeout ms: " + GlobalExecutor.HEARTBEAT_INTERVAL_MS);
     }
 
     public static List<RaftListener> getListeners() {

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftPeer.java
Patch:
@@ -34,7 +34,7 @@ public class RaftPeer {
 
     public volatile long leaderDueMs = RandomUtils.nextLong(0, GlobalExecutor.LEADER_TIMEOUT_MS);
 
-    public volatile  long heartbeatDueMs = RandomUtils.nextLong(0, GlobalExecutor.HEARTBEAT_INTVERAL_MS);
+    public volatile  long heartbeatDueMs = RandomUtils.nextLong(0, GlobalExecutor.HEARTBEAT_INTERVAL_MS);
 
     public State state = State.FOLLOWER;
 
@@ -43,7 +43,7 @@ public void resetLeaderDue() {
     }
 
     public void resetHeartbeatDue() {
-        heartbeatDueMs = GlobalExecutor.HEARTBEAT_INTVERAL_MS;
+        heartbeatDueMs = GlobalExecutor.HEARTBEAT_INTERVAL_MS;
     }
 
     public enum State {

File: naming/src/main/java/com/alibaba/nacos/naming/raft/GlobalExecutor.java
Patch:
@@ -25,7 +25,7 @@ public class GlobalExecutor {
 
     public static final long LEADER_TIMEOUT_MS = TimeUnit.SECONDS.toMillis(15L);
 
-    public static final long RAMDOM_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long RANDOM_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long TICK_PERIOD_MS = TimeUnit.MILLISECONDS.toMillis(500L);
 

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftPeer.java
Patch:
@@ -39,7 +39,7 @@ public class RaftPeer {
     public State state = State.FOLLOWER;
 
     public void resetLeaderDue() {
-        leaderDueMs = GlobalExecutor.LEADER_TIMEOUT_MS + RandomUtils.nextLong(0, GlobalExecutor.RAMDOM_MS);
+        leaderDueMs = GlobalExecutor.LEADER_TIMEOUT_MS + RandomUtils.nextLong(0, GlobalExecutor.RANDOM_MS);
     }
 
     public void resetHeartbeatDue() {

File: naming/src/main/java/com/alibaba/nacos/naming/raft/GlobalExecutor.java
Patch:
@@ -25,7 +25,7 @@ public class GlobalExecutor {
 
     public static final long LEADER_TIMEOUT_MS = TimeUnit.SECONDS.toMillis(15L);
 
-    public static final long RAMDOM_MS = TimeUnit.SECONDS.toMillis(5L);
+    public static final long RANDOM_MS = TimeUnit.SECONDS.toMillis(5L);
 
     public static final long TICK_PERIOD_MS = TimeUnit.MILLISECONDS.toMillis(500L);
 

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftPeer.java
Patch:
@@ -39,7 +39,7 @@ public class RaftPeer {
     public State state = State.FOLLOWER;
 
     public void resetLeaderDue() {
-        leaderDueMs = GlobalExecutor.LEADER_TIMEOUT_MS + RandomUtils.nextLong(0, GlobalExecutor.RAMDOM_MS);
+        leaderDueMs = GlobalExecutor.LEADER_TIMEOUT_MS + RandomUtils.nextLong(0, GlobalExecutor.RANDOM_MS);
     }
 
     public void resetHeartbeatDue() {

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -42,11 +42,11 @@ public void testServiceList() throws Exception {
         instance.setPort(80);
         instance.setWeight(2);
         Map<String, String> map = new HashMap<String, String>();
-        map.put("env", "prod");
+        map.put("netType", "external");
         map.put("version", "2.0");
         instance.setMetadata(map);
 
-        namingService.registerInstance("dungu.test.1", instance);
+        namingService.registerInstance("nacos.test.1", instance);
 
         ExpressionSelector expressionSelector = new ExpressionSelector();
         expressionSelector.setExpression("INSTANCE.metadata.registerSource = 'dubbo'");

File: cmdb/src/main/java/com/alibaba/nacos/cmdb/controllers/OperationController.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.nacos.cmdb.core.SwitchAndOptions;
 import com.alibaba.nacos.cmdb.memory.CmdbProvider;
 import com.alibaba.nacos.cmdb.utils.UtilsAndCommons;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
@@ -67,4 +67,4 @@ public String queryLabel(HttpServletRequest request) throws Exception {
         String label = WebUtils.required(request, "label");
         return cmdbProvider.queryLabel(entry, "ip", label);
     }
-}
\ No newline at end of file
+}

File: core/src/main/java/com/alibaba/nacos/core/utils/WebUtils.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.nacos.common.util;
+package com.alibaba.nacos.core.utils;
 
 import org.apache.commons.lang3.StringUtils;
 

File: naming/src/main/java/com/alibaba/nacos/naming/acl/AuthChecker.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.alibaba.nacos.naming.acl;
 
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Domain;
 import com.alibaba.nacos.naming.core.DomainsManager;
 import com.alibaba.nacos.naming.misc.Switch;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -21,7 +21,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 import com.alibaba.nacos.api.naming.pojo.Service;
 import com.alibaba.nacos.api.selector.SelectorType;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Domain;
 import com.alibaba.nacos.naming.core.DomainsManager;
 import com.alibaba.nacos.naming.core.IpAddress;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ClusterController.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.DomainsManager;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.IpAddress;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
 import com.alibaba.nacos.naming.exception.NacosException;

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -18,7 +18,7 @@
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.api.selector.SelectorType;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.DomainsManager;
 import com.alibaba.nacos.naming.core.IpAddress;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -22,7 +22,7 @@
 import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.common.util.Md5Utils;
 import com.alibaba.nacos.common.util.SystemUtils;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
 import com.alibaba.nacos.naming.core.*;
 import com.alibaba.nacos.naming.exception.NacosException;

File: naming/src/main/java/com/alibaba/nacos/naming/web/RaftCommands.java
Patch:
@@ -19,7 +19,7 @@
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.nacos.common.util.IoUtils;
-import com.alibaba.nacos.common.util.WebUtils;
+import com.alibaba.nacos.core.utils.WebUtils;
 import com.alibaba.nacos.naming.core.DomainsManager;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
 import com.alibaba.nacos.naming.misc.NetUtils;

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -64,7 +64,6 @@ public void init() throws Exception {
     @Test
     @Ignore
     public void regService() throws NacosException, InterruptedException {
-
         String serviceName = "dungu.test.99";
         naming.registerInstance(serviceName, "127.0.0.1", 80, "c1");
         naming.registerInstance(serviceName, "127.0.0.2", 80, "c2");

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.config.server.model.capacity.GroupCapacity;
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.collect.Lists;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
@@ -281,7 +282,7 @@ public boolean correctUsage(String group, Timestamp gmtModified) {
     public List<GroupCapacity> getCapacityList4CorrectUsage(long lastId, int pageSize) {
         String sql = "SELECT id, group_id FROM group_capacity WHERE id>? LIMIT ?";
 
-        if (STANDALONE_MODE) {
+        if (STANDALONE_MODE && !PropertyUtil.isStandaloneUseMysql()) {
             sql = "SELECT id, group_id FROM group_capacity WHERE id>? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY";
         }
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.nacos.config.server.model.capacity.TenantCapacity;
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.collect.Lists;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
@@ -231,7 +232,7 @@ public boolean correctUsage(String tenant, Timestamp gmtModified) {
     public List<TenantCapacity> getCapacityList4CorrectUsage(long lastId, int pageSize) {
         String sql = "SELECT id, tenant_id FROM tenant_capacity WHERE id>? LIMIT ?";
 
-        if (STANDALONE_MODE) {
+        if (STANDALONE_MODE && !PropertyUtil.isStandaloneUseMysql()) {
             sql = "SELECT id, tenant_id FROM tenant_capacity WHERE id>? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY";
         }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/GroupCapacityPersistService.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.nacos.config.server.model.capacity.GroupCapacity;
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.collect.Lists;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
@@ -281,7 +282,7 @@ public boolean correctUsage(String group, Timestamp gmtModified) {
     public List<GroupCapacity> getCapacityList4CorrectUsage(long lastId, int pageSize) {
         String sql = "SELECT id, group_id FROM group_capacity WHERE id>? LIMIT ?";
 
-        if (STANDALONE_MODE) {
+        if (STANDALONE_MODE && !PropertyUtil.isStandaloneUseMysql()) {
             sql = "SELECT id, group_id FROM group_capacity WHERE id>? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY";
         }
         try {

File: config/src/main/java/com/alibaba/nacos/config/server/service/capacity/TenantCapacityPersistService.java
Patch:
@@ -18,6 +18,7 @@
 import com.alibaba.nacos.config.server.model.capacity.TenantCapacity;
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
+import com.alibaba.nacos.config.server.utils.PropertyUtil;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.google.common.collect.Lists;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
@@ -231,7 +232,7 @@ public boolean correctUsage(String tenant, Timestamp gmtModified) {
     public List<TenantCapacity> getCapacityList4CorrectUsage(long lastId, int pageSize) {
         String sql = "SELECT id, tenant_id FROM tenant_capacity WHERE id>? LIMIT ?";
 
-        if (STANDALONE_MODE) {
+        if (STANDALONE_MODE && !PropertyUtil.isStandaloneUseMysql()) {
             sql = "SELECT id, tenant_id FROM tenant_capacity WHERE id>? OFFSET 0 ROWS FETCH NEXT ? ROWS ONLY";
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1145,7 +1145,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
         srvedIPs = domObj.srvIPs(clientIP, Arrays.asList(StringUtils.split(clusters, ",")));
 
         // filter ips using selector:
-        if (domObj.getSelector() != null) {
+        if (domObj.getSelector() != null && StringUtils.isNotBlank(clientIP)) {
             srvedIPs = domObj.getSelector().select(clientIP, srvedIPs);
         }
 

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -114,7 +114,7 @@ public class Constants {
 
     public static final String WORD_SEPARATOR = Character.toString((char)2);
 
-    public static final String LONGPULLING_LINE_SEPARATOR = "\r\n";
+    public static final String LONGPOLLING_LINE_SEPARATOR = "\r\n";
 
     public static final String CLIENT_APPNAME_HEADER = "Client-AppName";
     public static final String CLIENT_REQUEST_TS_HEADER = "Client-RequestTS";

File: client/src/main/java/com/alibaba/nacos/client/config/NacosConfigService.java
Patch:
@@ -57,7 +57,7 @@ public class NacosConfigService implements ConfigService {
      */
     private ServerHttpAgent agent;
     /**
-     * longpulling
+     * longpolling
      */
     private ClientWorker worker;
     private String namespace;

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ListenerController.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.Map;
 
 /**
- * Config longpulling
+ * Config longpolling
  *
  * @author Nacos
  */

File: client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * @author xuanyin
  */
-public class PushRecver implements Runnable {
+public class PushReceiver implements Runnable {
 
     private ScheduledExecutorService executorService;
 
@@ -40,7 +40,7 @@ public class PushRecver implements Runnable {
 
     private HostReactor hostReactor;
 
-    public PushRecver(HostReactor hostReactor) {
+    public PushReceiver(HostReactor hostReactor) {
         try {
             this.hostReactor = hostReactor;
             udpSocket = new DatagramSocket();

File: client/src/main/java/com/alibaba/nacos/client/logger/json/parser/ParseException.java
Patch:
@@ -66,8 +66,8 @@ public void setPosition(int position) {
     }
 
     /**
-     * @return One of the following base on the value of errorType: ERROR_UNEXPECTED_CHAR		java.lang.Character
-     * ERROR_UNEXPECTED_TOKEN		com.alibaba.nacos.client.logger.jsonparser.Yytoken ERROR_UNEXPECTED_EXCEPTION
+     * @return One of the following base on the value of errorType: ERROR_UNEXPECTED_CHAR java.lang.Character
+     * ERROR_UNEXPECTED_TOKEN com.alibaba.nacos.client.logger.jsonparser.Yytoken ERROR_UNEXPECTED_EXCEPTION
      * java.lang.Exception
      * @see com.alibaba.nacos.client.logger.json.parser.Yytoken
      */

File: config/src/test/java/com/alibaba/nacos/config/server/utils/GroupKeyTest.java
Patch:
@@ -50,15 +50,14 @@ public class GroupKeyTest {
         } catch (IllegalArgumentException e) {
             System.out.println(e.toString());
         }
-        
+
         key = "11111%2b+222";
         try {
             GroupKey2.parseKey(key);
             Assert.fail();
         } catch (IllegalArgumentException e) {
             System.out.println(e.toString());
         }
-        
 
         key = "11111%25+222";
         String[] pair = GroupKey2.parseKey(key);

File: client/src/main/java/com/alibaba/nacos/client/logger/json/parser/ParseException.java
Patch:
@@ -66,8 +66,8 @@ public void setPosition(int position) {
     }
 
     /**
-     * @return One of the following base on the value of errorType: ERROR_UNEXPECTED_CHAR		java.lang.Character
-     * ERROR_UNEXPECTED_TOKEN		com.alibaba.nacos.client.logger.jsonparser.Yytoken ERROR_UNEXPECTED_EXCEPTION
+     * @return One of the following base on the value of errorType: ERROR_UNEXPECTED_CHAR java.lang.Character
+     * ERROR_UNEXPECTED_TOKEN com.alibaba.nacos.client.logger.jsonparser.Yytoken ERROR_UNEXPECTED_EXCEPTION
      * java.lang.Exception
      * @see com.alibaba.nacos.client.logger.json.parser.Yytoken
      */

File: config/src/test/java/com/alibaba/nacos/config/server/utils/GroupKeyTest.java
Patch:
@@ -50,15 +50,14 @@ public class GroupKeyTest {
         } catch (IllegalArgumentException e) {
             System.out.println(e.toString());
         }
-        
+
         key = "11111%2b+222";
         try {
             GroupKey2.parseKey(key);
             Assert.fail();
         } catch (IllegalArgumentException e) {
             System.out.println(e.toString());
         }
-        
 
         key = "11111%25+222";
         String[] pair = GroupKey2.parseKey(key);

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_ITCase.java
Patch:
@@ -55,7 +55,7 @@
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Config.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ConfigAPI_ITCase {
-    public static final long TIME_OUT = 3000;
+    public static final long TIME_OUT = 2000;
     public ConfigService iconfig = null;
     ServerHttpAgent agent = null;
 
@@ -148,7 +148,7 @@ public void nacos_getconfig_4() throws Exception {
         final String content = "test";
 
         boolean result = iconfig.publishConfig(dataId, null, content);
-        Thread.sleep(2*TIME_OUT);
+        Thread.sleep(TIME_OUT);
         Assert.assertTrue(result);
 
         String value = iconfig.getConfig(dataId, null, TIME_OUT);
@@ -232,7 +232,7 @@ public void nacos_publishConfig_4() throws Exception {
     public void nacos_publishConfig_5() throws Exception {
         String content = "test";
         boolean result = iconfig.publishConfig(dataId, null, content);
-        Thread.sleep(2*TIME_OUT);
+        Thread.sleep(TIME_OUT);
         Assert.assertTrue(result);
 
         String value = iconfig.getConfig(dataId, null, TIME_OUT);

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -56,7 +56,7 @@ public class RegisterInstance_ITCase {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -52,7 +52,7 @@ public class SelectInstances_ITCase {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -54,7 +54,7 @@ public class SelectOneHealthyInstance_ITCase {
     @Before
     public void init() throws Exception{
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
 

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest.java
Patch:
@@ -47,7 +47,7 @@ public class ServiceListTest {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -55,7 +55,7 @@ public class SubscribeCluster_ITCase {
     public void init() throws Exception{
         instances.clear();
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
     }
@@ -212,7 +212,7 @@ public void onEvent(Event event) {
         int i = 0;
         while (instances.isEmpty()) {
             Thread.sleep(1000L);
-            if (i++ > 20) {
+            if (i++ > 10) {
                 return;
             }
         }

File: test/src/test/java/com/alibaba/nacos/test/naming/Subscribe_ITCase.java
Patch:
@@ -56,7 +56,7 @@ public class Subscribe_ITCase {
     public void init() throws Exception{
         instances.clear();
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -56,7 +56,7 @@ public class Unsubscribe_ITCase {
     public void init() throws Exception{
         instances = Collections.emptyList();
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
     }
@@ -98,7 +98,7 @@ public void onEvent(Event event) {
         int i = 0;
         while (instances.isEmpty()) {
             Thread.sleep(1000L);
-            if (i++ > 20) {
+            if (i++ > 10) {
                 return;
             }
         }
@@ -141,7 +141,7 @@ public void onEvent(Event event) {
         int i = 0;
         while (instances.isEmpty()) {
             Thread.sleep(1000L);
-            if (i++ > 20) {
+            if (i++ > 10) {
                 return;
             }
         }

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigListener.java
Patch:
@@ -56,8 +56,7 @@
     Class<? extends NacosConfigConverter> converter() default NacosConfigConverter.class;
 
     /**
-     * The {@link NacosProperties} attribute, If not specified, it will use
-     * global Nacos Properties.
+     * The {@link NacosProperties} attribute, If not specified, it will use global Nacos Properties.
      *
      * @return the default value is {@link NacosProperties}
      */

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosIgnore.java
Patch:
@@ -18,8 +18,7 @@
 import java.lang.annotation.*;
 
 /**
- * An annotation for ignore field from annotated
- * {@link NacosConfigurationProperties} Properties Object.
+ * An annotation for ignore field from annotated {@link NacosConfigurationProperties} Properties Object.
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see NacosConfigurationProperties

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosProperty.java
Patch:
@@ -18,9 +18,8 @@
 import java.lang.annotation.*;
 
 /**
- * An annotation for Nacos Property name of  Nacos Configuration to
- * bind a field from annotated {@link NacosConfigurationProperties}
- * Properties Object.
+ * An annotation for Nacos Property name of  Nacos Configuration to bind a field from annotated {@link
+ * NacosConfigurationProperties} Properties Object.
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see NacosConfigurationProperties

File: api/src/main/java/com/alibaba/nacos/api/config/convert/NacosConfigConverter.java
Patch:
@@ -40,5 +40,4 @@ public interface NacosConfigConverter<T> {
      */
     T convert(String config);
 
-
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/NamingService.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.List;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public interface NamingService {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/Event.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * event interface
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public interface Event {
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/NamingEvent.java
Patch:
@@ -20,7 +20,7 @@
 import com.alibaba.nacos.api.naming.pojo.Instance;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class NamingEvent implements Event {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/AbstractHealthChecker.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Objects;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public abstract class AbstractHealthChecker implements Cloneable {
 
@@ -113,7 +113,7 @@ public boolean equals(Object obj) {
                 return false;
             }
 
-            Http other = (Http) obj;
+            Http other = (Http)obj;
 
             if (!strEquals(type, other.getType())) {
                 return false;
@@ -212,7 +212,7 @@ public boolean equals(Object obj) {
                 return false;
             }
 
-            Mysql other = (Mysql) obj;
+            Mysql other = (Mysql)obj;
 
             if (!strEquals(user, other.getUser())) {
                 return false;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -21,7 +21,7 @@
 import java.util.Map;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class Cluster {
 
@@ -55,7 +55,6 @@ public class Cluster {
      */
     private boolean useIPPort4Check = true;
 
-
     private Map<String, String> metadata = new HashMap<String, String>();
 
     public Cluster() {

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.Map;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class Instance {
 
@@ -160,7 +160,7 @@ public boolean equals(Object obj) {
             return false;
         }
 
-        Instance host = (Instance) obj;
+        Instance host = (Instance)obj;
 
         return strEquals(toString(), host.toString());
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ListView.java
Patch:
@@ -20,7 +20,7 @@
 import java.util.List;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class ListView<T> {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Service.java
Patch:
@@ -19,7 +19,7 @@
 import java.util.Map;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class Service {
 

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.List;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class ServiceInfo {
 
@@ -205,7 +205,7 @@ public static String getKey(String name, String clusters, String unit, boolean i
 
         if (!isEmpty(clusters) && !isEmpty(unit)) {
             return isAllIPs ? name + SPLITER + clusters + SPLITER + unit + SPLITER + ALL_IPS
-                    : name + SPLITER + clusters + SPLITER + unit;
+                : name + SPLITER + clusters + SPLITER + unit;
         }
 
         if (!isEmpty(clusters)) {
@@ -214,7 +214,7 @@ public static String getKey(String name, String clusters, String unit, boolean i
 
         if (!isEmpty(unit)) {
             return isAllIPs ? name + SPLITER + EMPTY + SPLITER + unit + SPLITER + ALL_IPS :
-                    name + SPLITER + EMPTY + SPLITER + unit;
+                name + SPLITER + EMPTY + SPLITER + unit;
         }
 
         return isAllIPs ? name + SPLITER + ALL_IPS : name;

File: client/src/main/java/com/alibaba/nacos/client/logger/LoggerFactory.java
Patch:
@@ -61,7 +61,7 @@ private LoggerFactory() {
             } catch (Throwable e2) {
                 setLoggerFactory(new NopLoggerFactory());
                 LogLog.warn("Init JM logger with NopLoggerFactory, pay attention. "
-                        + LoggerFactory.class.getClassLoader(), e2);
+                    + LoggerFactory.class.getClassLoader(), e2);
             }
         }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2Logger.java
Patch:
@@ -21,11 +21,10 @@
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
 import com.alibaba.nacos.client.logger.util.MessageUtil;
 
-
 /**
  * Log4j2Logger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2Logger extends LoggerSupport implements Logger {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2LoggerFactory.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * Log4j2Logger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2LoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLogger.java
Patch:
@@ -17,14 +17,15 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
+
 /**
  * NopLogger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLogger extends LoggerSupport implements Logger {
 
-    public NopLogger(){
+    public NopLogger() {
         super(null);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLoggerFactory.java
Patch:
@@ -17,10 +17,11 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
+
 /**
  * NopLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/option/AbstractActiveOption.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * AbstractActiveOption
- * @author Nacos
  *
+ * @author Nacos
  */
 public abstract class AbstractActiveOption implements ActivateOption {
 
@@ -53,7 +53,7 @@ public static void invokeMethod(Object object, List<Object[]> args) {
             for (Object[] arg : args) {
                 if (arg != null && arg.length == 3) {
                     try {
-                        Method m = object.getClass().getMethod((String) arg[0], (Class<?>[]) arg[1]);
+                        Method m = object.getClass().getMethod((String)arg[0], (Class<?>[])arg[1]);
                         m.invoke(object, arg[2]);
                     } catch (NoSuchMethodException e) {
                         LogLog.info("Can't find method for " + object.getClass() + " " + arg[0] + " " + arg[2]);

File: client/src/main/java/com/alibaba/nacos/client/logger/option/LogbackActivateOption.java
Patch:
@@ -29,10 +29,10 @@
 
 /**
  * ActivateOption的Logback 0.9.19及后续版本的实现
- * 
+ *
  * @author zhuyong 2014年3月20日 上午10:24:58
  */
-@SuppressWarnings({ "rawtypes", "unchecked" })
+@SuppressWarnings({"rawtypes", "unchecked"})
 public class LogbackActivateOption extends Logback918ActivateOption {
 
     public LogbackActivateOption(Object logger) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLogger.java
Patch:
@@ -66,7 +66,7 @@ public Slf4jLogger(org.slf4j.Logger delegate) {
         }
 
         try {
-            Class<ActivateOption> clazz = (Class<ActivateOption>) Class.forName(activateOptionClass);
+            Class<ActivateOption> clazz = (Class<ActivateOption>)Class.forName(activateOptionClass);
             Constructor<ActivateOption> c = clazz.getConstructor(Object.class);
             this.activateOption = c.newInstance(delegate);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLoggerFactory.java
Patch:
@@ -15,15 +15,15 @@
  */
 package com.alibaba.nacos.client.logger.slf4j;
 
-
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.nop.NopLogger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
 import com.alibaba.nacos.client.logger.support.LogLog;
+
 /**
  * Slf4jLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Slf4jLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/AppenderInfo.java
Patch:
@@ -27,7 +27,7 @@ public class AppenderInfo extends HashMap {
     private static String file = "file";
 
     public String getName() {
-        return (String) get(AppenderInfo.name);
+        return (String)get(AppenderInfo.name);
     }
 
     public void setName(String name) {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/ErrorLog.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * 兼容老的ErrorLog，后续请使用{@link LoggerHelper}
- * 
+ *
  * @author zhuyong 2014年7月1日 上午11:41:22
  */
 public class ErrorLog {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LogLog.java
Patch:
@@ -33,10 +33,11 @@
 
 import java.io.PrintStream;
 import java.util.Calendar;
+
 /**
- *  logger log
- * @author Nacos
+ * logger log
  *
+ * @author Nacos
  */
 public class LogLog {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LoggerInfo.java
Patch:
@@ -41,11 +41,11 @@ public void setEffectiveLevel(String effectiveLevel) {
     }
 
     public String getLevel() {
-        return (String) get(level);
+        return (String)get(level);
     }
 
     public List<AppenderInfo> getAppenders() {
-        return (List<AppenderInfo>) get(appenders);
+        return (List<AppenderInfo>)get(appenders);
     }
 
     public void setAppenders(List<AppenderInfo> appenders) {

File: client/src/main/java/com/alibaba/nacos/client/logger/util/MessageUtil.java
Patch:
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 package com.alibaba.nacos.client.logger.util;
+
 /**
  * Error msg format
- * @author Nacos
  *
+ * @author Nacos
  */
 public class MessageUtil {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatInfo.java
Patch:
@@ -20,7 +20,7 @@
 import java.util.Map;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class BeatInfo {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -38,7 +38,8 @@ public class EventDispatcher {
 
     private BlockingQueue<ServiceInfo> changedServices = new LinkedBlockingQueue<ServiceInfo>();
 
-    private ConcurrentMap<String, List<EventListener>> observerMap = new ConcurrentHashMap<String, List<EventListener>>();
+    private ConcurrentMap<String, List<EventListener>> observerMap
+        = new ConcurrentHashMap<String, List<EventListener>>();
 
     public EventDispatcher() {
 
@@ -124,7 +125,7 @@ public void run() {
 
                 } catch (Exception e) {
                     LogUtils.LOG.error("NA", "notify error for service: "
-                            + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
+                        + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/ProtectMode.java
Patch:
@@ -16,7 +16,7 @@
 package com.alibaba.nacos.client.naming.core;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class ProtectMode {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/GenericPoller.java
Patch:
@@ -20,14 +20,14 @@
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class GenericPoller<T> implements Poller<T> {
 
     private AtomicInteger index = new AtomicInteger(0);
     private List<T> items = new ArrayList<T>();
 
-    public GenericPoller(List<T> items){
+    public GenericPoller(List<T> items) {
         this.items = items;
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -27,10 +27,10 @@ public class NetUtils {
     public static String localIP() {
         try {
             if (!StringUtils.isEmpty(LOCAL_IP)) {
-               return LOCAL_IP;
+                return LOCAL_IP;
             }
 
-            String ip = System.getProperty("com.taobao.vipserver.localIP", InetAddress.getLocalHost().getHostAddress());
+            String ip = System.getProperty("com.alibaba.nacos.client.naming.local.ip", InetAddress.getLocalHost().getHostAddress());
 
             return LOCAL_IP = ip;
         } catch (UnknownHostException e) {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Poller.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.List;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public interface Poller<T> {
     /**

File: client/src/test/java/com/alibaba/nacos/client/NamingTest.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Map;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class NamingTest {
 

File: common/src/main/java/com/alibaba/nacos/common/util/UuidUtil.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.UUID;
 
 /**
- * @author dungu.zpf
+ * @author <a href="mailto:zpf.073@gmail.com">nkorange</a>
  */
 public class UuidUtil {
 

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_ITCase.java
Patch:
@@ -55,7 +55,7 @@
 @RunWith(SpringRunner.class)
 @SpringBootTest(classes = Config.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ConfigAPI_ITCase {
-    public static final long TIME_OUT = 3000;
+    public static final long TIME_OUT = 2000;
     public ConfigService iconfig = null;
     ServerHttpAgent agent = null;
 
@@ -148,7 +148,7 @@ public void nacos_getconfig_4() throws Exception {
         final String content = "test";
 
         boolean result = iconfig.publishConfig(dataId, null, content);
-        Thread.sleep(2*TIME_OUT);
+        Thread.sleep(TIME_OUT);
         Assert.assertTrue(result);
 
         String value = iconfig.getConfig(dataId, null, TIME_OUT);
@@ -232,7 +232,7 @@ public void nacos_publishConfig_4() throws Exception {
     public void nacos_publishConfig_5() throws Exception {
         String content = "test";
         boolean result = iconfig.publishConfig(dataId, null, content);
-        Thread.sleep(2*TIME_OUT);
+        Thread.sleep(TIME_OUT);
         Assert.assertTrue(result);
 
         String value = iconfig.getConfig(dataId, null, TIME_OUT);

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -53,7 +53,7 @@ public class DeregisterInstance_ITCase {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }
@@ -65,7 +65,6 @@ public void init() throws Exception {
      */
     @Test
     public void dregDomTest() throws Exception {
-
         String serviceName = randomDomainName();
 
         naming.registerInstance(serviceName, "127.0.0.1", TEST_PORT);

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -56,7 +56,7 @@ public class RegisterInstance_ITCase {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectInstances_ITCase.java
Patch:
@@ -52,7 +52,7 @@ public class SelectInstances_ITCase {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java
Patch:
@@ -54,7 +54,7 @@ public class SelectOneHealthyInstance_ITCase {
     @Before
     public void init() throws Exception{
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
 

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest.java
Patch:
@@ -47,7 +47,7 @@ public class ServiceListTest {
     @Before
     public void init() throws Exception {
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/SubscribeCluster_ITCase.java
Patch:
@@ -55,7 +55,7 @@ public class SubscribeCluster_ITCase {
     public void init() throws Exception{
         instances.clear();
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
     }
@@ -212,7 +212,7 @@ public void onEvent(Event event) {
         int i = 0;
         while (instances.isEmpty()) {
             Thread.sleep(1000L);
-            if (i++ > 20) {
+            if (i++ > 10) {
                 return;
             }
         }

File: test/src/test/java/com/alibaba/nacos/test/naming/Subscribe_ITCase.java
Patch:
@@ -56,7 +56,7 @@ public class Subscribe_ITCase {
     public void init() throws Exception{
         instances.clear();
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/Unsubscribe_ITCase.java
Patch:
@@ -56,7 +56,7 @@ public class Unsubscribe_ITCase {
     public void init() throws Exception{
         instances = Collections.emptyList();
         if (naming == null) {
-            TimeUnit.SECONDS.sleep(10);
+            //TimeUnit.SECONDS.sleep(10);
             naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
         }
     }
@@ -98,7 +98,7 @@ public void onEvent(Event event) {
         int i = 0;
         while (instances.isEmpty()) {
             Thread.sleep(1000L);
-            if (i++ > 20) {
+            if (i++ > 10) {
                 return;
             }
         }
@@ -141,7 +141,7 @@ public void onEvent(Event event) {
         int i = 0;
         while (instances.isEmpty()) {
             Thread.sleep(1000L);
-            if (i++ > 20) {
+            if (i++ > 10) {
                 return;
             }
         }

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigListener.java
Patch:
@@ -56,8 +56,7 @@
     Class<? extends NacosConfigConverter> converter() default NacosConfigConverter.class;
 
     /**
-     * The {@link NacosProperties} attribute, If not specified, it will use
-     * global Nacos Properties.
+     * The {@link NacosProperties} attribute, If not specified, it will use global Nacos Properties.
      *
      * @return the default value is {@link NacosProperties}
      */

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosIgnore.java
Patch:
@@ -18,8 +18,7 @@
 import java.lang.annotation.*;
 
 /**
- * An annotation for ignore field from annotated
- * {@link NacosConfigurationProperties} Properties Object.
+ * An annotation for ignore field from annotated {@link NacosConfigurationProperties} Properties Object.
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see NacosConfigurationProperties

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosProperty.java
Patch:
@@ -18,9 +18,8 @@
 import java.lang.annotation.*;
 
 /**
- * An annotation for Nacos Property name of  Nacos Configuration to
- * bind a field from annotated {@link NacosConfigurationProperties}
- * Properties Object.
+ * An annotation for Nacos Property name of  Nacos Configuration to bind a field from annotated {@link
+ * NacosConfigurationProperties} Properties Object.
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see NacosConfigurationProperties

File: api/src/main/java/com/alibaba/nacos/api/config/convert/NacosConfigConverter.java
Patch:
@@ -40,5 +40,4 @@ public interface NacosConfigConverter<T> {
      */
     T convert(String config);
 
-
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/AbstractHealthChecker.java
Patch:
@@ -113,7 +113,7 @@ public boolean equals(Object obj) {
                 return false;
             }
 
-            Http other = (Http) obj;
+            Http other = (Http)obj;
 
             if (!strEquals(type, other.getType())) {
                 return false;
@@ -212,7 +212,7 @@ public boolean equals(Object obj) {
                 return false;
             }
 
-            Mysql other = (Mysql) obj;
+            Mysql other = (Mysql)obj;
 
             if (!strEquals(user, other.getUser())) {
                 return false;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -55,7 +55,6 @@ public class Cluster {
      */
     private boolean useIPPort4Check = true;
 
-
     private Map<String, String> metadata = new HashMap<String, String>();
 
     public Cluster() {

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -160,7 +160,7 @@ public boolean equals(Object obj) {
             return false;
         }
 
-        Instance host = (Instance) obj;
+        Instance host = (Instance)obj;
 
         return strEquals(toString(), host.toString());
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -205,7 +205,7 @@ public static String getKey(String name, String clusters, String unit, boolean i
 
         if (!isEmpty(clusters) && !isEmpty(unit)) {
             return isAllIPs ? name + SPLITER + clusters + SPLITER + unit + SPLITER + ALL_IPS
-                    : name + SPLITER + clusters + SPLITER + unit;
+                : name + SPLITER + clusters + SPLITER + unit;
         }
 
         if (!isEmpty(clusters)) {
@@ -214,7 +214,7 @@ public static String getKey(String name, String clusters, String unit, boolean i
 
         if (!isEmpty(unit)) {
             return isAllIPs ? name + SPLITER + EMPTY + SPLITER + unit + SPLITER + ALL_IPS :
-                    name + SPLITER + EMPTY + SPLITER + unit;
+                name + SPLITER + EMPTY + SPLITER + unit;
         }
 
         return isAllIPs ? name + SPLITER + ALL_IPS : name;

File: client/src/main/java/com/alibaba/nacos/client/logger/LoggerFactory.java
Patch:
@@ -61,7 +61,7 @@ private LoggerFactory() {
             } catch (Throwable e2) {
                 setLoggerFactory(new NopLoggerFactory());
                 LogLog.warn("Init JM logger with NopLoggerFactory, pay attention. "
-                        + LoggerFactory.class.getClassLoader(), e2);
+                    + LoggerFactory.class.getClassLoader(), e2);
             }
         }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2Logger.java
Patch:
@@ -21,11 +21,10 @@
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
 import com.alibaba.nacos.client.logger.util.MessageUtil;
 
-
 /**
  * Log4j2Logger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2Logger extends LoggerSupport implements Logger {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2LoggerFactory.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * Log4j2Logger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2LoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLogger.java
Patch:
@@ -17,14 +17,15 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
+
 /**
  * NopLogger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLogger extends LoggerSupport implements Logger {
 
-    public NopLogger(){
+    public NopLogger() {
         super(null);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLoggerFactory.java
Patch:
@@ -17,10 +17,11 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
+
 /**
  * NopLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/option/AbstractActiveOption.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * AbstractActiveOption
- * @author Nacos
  *
+ * @author Nacos
  */
 public abstract class AbstractActiveOption implements ActivateOption {
 
@@ -53,7 +53,7 @@ public static void invokeMethod(Object object, List<Object[]> args) {
             for (Object[] arg : args) {
                 if (arg != null && arg.length == 3) {
                     try {
-                        Method m = object.getClass().getMethod((String) arg[0], (Class<?>[]) arg[1]);
+                        Method m = object.getClass().getMethod((String)arg[0], (Class<?>[])arg[1]);
                         m.invoke(object, arg[2]);
                     } catch (NoSuchMethodException e) {
                         LogLog.info("Can't find method for " + object.getClass() + " " + arg[0] + " " + arg[2]);

File: client/src/main/java/com/alibaba/nacos/client/logger/option/LogbackActivateOption.java
Patch:
@@ -29,10 +29,10 @@
 
 /**
  * ActivateOption的Logback 0.9.19及后续版本的实现
- * 
+ *
  * @author zhuyong 2014年3月20日 上午10:24:58
  */
-@SuppressWarnings({ "rawtypes", "unchecked" })
+@SuppressWarnings({"rawtypes", "unchecked"})
 public class LogbackActivateOption extends Logback918ActivateOption {
 
     public LogbackActivateOption(Object logger) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLogger.java
Patch:
@@ -66,7 +66,7 @@ public Slf4jLogger(org.slf4j.Logger delegate) {
         }
 
         try {
-            Class<ActivateOption> clazz = (Class<ActivateOption>) Class.forName(activateOptionClass);
+            Class<ActivateOption> clazz = (Class<ActivateOption>)Class.forName(activateOptionClass);
             Constructor<ActivateOption> c = clazz.getConstructor(Object.class);
             this.activateOption = c.newInstance(delegate);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLoggerFactory.java
Patch:
@@ -15,15 +15,15 @@
  */
 package com.alibaba.nacos.client.logger.slf4j;
 
-
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.nop.NopLogger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
 import com.alibaba.nacos.client.logger.support.LogLog;
+
 /**
  * Slf4jLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Slf4jLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/AppenderInfo.java
Patch:
@@ -27,7 +27,7 @@ public class AppenderInfo extends HashMap {
     private static String file = "file";
 
     public String getName() {
-        return (String) get(AppenderInfo.name);
+        return (String)get(AppenderInfo.name);
     }
 
     public void setName(String name) {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/ErrorLog.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * 兼容老的ErrorLog，后续请使用{@link LoggerHelper}
- * 
+ *
  * @author zhuyong 2014年7月1日 上午11:41:22
  */
 public class ErrorLog {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LogLog.java
Patch:
@@ -33,10 +33,11 @@
 
 import java.io.PrintStream;
 import java.util.Calendar;
+
 /**
- *  logger log
- * @author Nacos
+ * logger log
  *
+ * @author Nacos
  */
 public class LogLog {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LoggerInfo.java
Patch:
@@ -41,11 +41,11 @@ public void setEffectiveLevel(String effectiveLevel) {
     }
 
     public String getLevel() {
-        return (String) get(level);
+        return (String)get(level);
     }
 
     public List<AppenderInfo> getAppenders() {
-        return (List<AppenderInfo>) get(appenders);
+        return (List<AppenderInfo>)get(appenders);
     }
 
     public void setAppenders(List<AppenderInfo> appenders) {

File: client/src/main/java/com/alibaba/nacos/client/logger/util/MessageUtil.java
Patch:
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 package com.alibaba.nacos.client.logger.util;
+
 /**
  * Error msg format
- * @author Nacos
  *
+ * @author Nacos
  */
 public class MessageUtil {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -38,7 +38,8 @@ public class EventDispatcher {
 
     private BlockingQueue<ServiceInfo> changedServices = new LinkedBlockingQueue<ServiceInfo>();
 
-    private ConcurrentMap<String, List<EventListener>> observerMap = new ConcurrentHashMap<String, List<EventListener>>();
+    private ConcurrentMap<String, List<EventListener>> observerMap
+        = new ConcurrentHashMap<String, List<EventListener>>();
 
     public EventDispatcher() {
 
@@ -124,7 +125,7 @@ public void run() {
 
                 } catch (Exception e) {
                     LogUtils.LOG.error("NA", "notify error for service: "
-                            + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
+                        + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/GenericPoller.java
Patch:
@@ -27,7 +27,7 @@ public class GenericPoller<T> implements Poller<T> {
     private AtomicInteger index = new AtomicInteger(0);
     private List<T> items = new ArrayList<T>();
 
-    public GenericPoller(List<T> items){
+    public GenericPoller(List<T> items) {
         this.items = items;
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -27,7 +27,7 @@ public class NetUtils {
     public static String localIP() {
         try {
             if (!StringUtils.isEmpty(LOCAL_IP)) {
-               return LOCAL_IP;
+                return LOCAL_IP;
             }
 
             String ip = System.getProperty("com.alibaba.nacos.client.naming.local.ip", InetAddress.getLocalHost().getHostAddress());

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Pair.java
Patch:
@@ -23,16 +23,16 @@ public class Pair<T> {
     private T item;
     private double weight;
 
-    public Pair(T item,double weight){
+    public Pair(T item, double weight) {
         this.item = item;
         this.weight = weight;
     }
 
-    public T item(){
+    public T item() {
         return item;
     }
 
-    public double weight(){
+    public double weight() {
         return weight;
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java
Patch:
@@ -74,7 +74,7 @@ public HostReactor(EventDispatcher eventDispatcher, NamingProxy serverProxy, Str
     private ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {
         @Override
         public Thread newThread(Runnable r) {
-            Thread thread = new Thread(r, "com.vipserver.client.updater");
+            Thread thread = new Thread(r, "com.alibaba.nacos.client.naming.updater");
             thread.setDaemon(true);
 
             return thread;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -35,9 +35,9 @@
  */
 public class HttpClient {
 
-    public static final int TIME_OUT_MILLIS = Integer.parseInt(System.getProperty("com.taobao.vipserver.ctimeout", "50000"));
-    public static final int CON_TIME_OUT_MILLIS = Integer.parseInt(System.getProperty("com.taobao.vipserver.ctimeout", "3000"));
-    private static final boolean ENABLE_HTTPS = Boolean.parseBoolean(System.getProperty("tls.enable", "false"));
+    public static final int TIME_OUT_MILLIS = Integer.getInteger("com.alibaba.nacos.client.naming.ctimeout", 50000);
+    public static final int CON_TIME_OUT_MILLIS = Integer.getInteger("com.alibaba.nacos.client.naming.ctimeout", 3000);
+    private static final boolean ENABLE_HTTPS = Boolean.getBoolean("com.alibaba.nacos.client.naming.tls.enable");
 
     static {
         // limit max redirection

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -71,7 +71,7 @@ public NamingProxy(String namespace, String endpoint, String serverList) {
             @Override
             public Thread newThread(Runnable r) {
                 Thread t = new Thread(r);
-                t.setName("com.taobao.vipserver.serverlist.updater");
+                t.setName("com.alibaba.nacos.client.naming.serverlist.updater");
                 t.setDaemon(true);
                 return t;
             }
@@ -90,7 +90,7 @@ public void run() {
     public List<String> getServerListFromEndpoint() {
 
         try {
-            String urlString = "http://" + endpoint + "/vipserver/serverlist";
+            String urlString = "http://" + endpoint + "/nacos/serverlist";
 
             List<String> headers = Arrays.asList("Client-Version", UtilAndComs.VERSION,
                     "Accept-Encoding", "gzip,deflate,sdch",
@@ -135,7 +135,7 @@ private void refreshSrvIfNeed() {
             List<String> list = getServerListFromEndpoint();
 
             if (CollectionUtils.isEmpty(list)) {
-                throw new Exception("Can not acquire vipserver list");
+                throw new Exception("Can not acquire Nacos list");
             }
 
             if (!CollectionUtils.isEqualCollection(list, serversFromEndpoint)) {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -30,7 +30,7 @@ public static String localIP() {
                return LOCAL_IP;
             }
 
-            String ip = System.getProperty("com.taobao.vipserver.localIP", InetAddress.getLocalHost().getHostAddress());
+            String ip = System.getProperty("com.alibaba.nacos.client.naming.local.ip", InetAddress.getLocalHost().getHostAddress());
 
             return LOCAL_IP = ip;
         } catch (UnknownHostException e) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/AbstractHealthCheckProcessor.java
Patch:
@@ -110,7 +110,7 @@ public void run() {
                     }
                     Map<String, String> params = new HashMap<>(10);
                     params.put("result", JSON.toJSONString(list));
-                    Loggers.DEBUG_LOG.debug("HEALTH-SYNC", server, JSON.toJSONString(list));
+                    Loggers.DEBUG_LOG.debug("[HEALTH-SYNC]" + server + ", " + JSON.toJSONString(list));
                     if (!server.contains(":")) {
                         server = server + ":" + RunningConfig.getServerPort();
                     }

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosConfigListener.java
Patch:
@@ -56,8 +56,7 @@
     Class<? extends NacosConfigConverter> converter() default NacosConfigConverter.class;
 
     /**
-     * The {@link NacosProperties} attribute, If not specified, it will use
-     * global Nacos Properties.
+     * The {@link NacosProperties} attribute, If not specified, it will use global Nacos Properties.
      *
      * @return the default value is {@link NacosProperties}
      */

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosIgnore.java
Patch:
@@ -18,8 +18,7 @@
 import java.lang.annotation.*;
 
 /**
- * An annotation for ignore field from annotated
- * {@link NacosConfigurationProperties} Properties Object.
+ * An annotation for ignore field from annotated {@link NacosConfigurationProperties} Properties Object.
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see NacosConfigurationProperties

File: api/src/main/java/com/alibaba/nacos/api/config/annotation/NacosProperty.java
Patch:
@@ -18,9 +18,8 @@
 import java.lang.annotation.*;
 
 /**
- * An annotation for Nacos Property name of  Nacos Configuration to
- * bind a field from annotated {@link NacosConfigurationProperties}
- * Properties Object.
+ * An annotation for Nacos Property name of  Nacos Configuration to bind a field from annotated {@link
+ * NacosConfigurationProperties} Properties Object.
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see NacosConfigurationProperties

File: api/src/main/java/com/alibaba/nacos/api/config/convert/NacosConfigConverter.java
Patch:
@@ -40,5 +40,4 @@ public interface NacosConfigConverter<T> {
      */
     T convert(String config);
 
-
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/listener/Event.java
Patch:
@@ -17,6 +17,7 @@
 
 /**
  * event interface
+ *
  * @author dungu.zpf
  */
 public interface Event {

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/AbstractHealthChecker.java
Patch:
@@ -113,7 +113,7 @@ public boolean equals(Object obj) {
                 return false;
             }
 
-            Http other = (Http) obj;
+            Http other = (Http)obj;
 
             if (!strEquals(type, other.getType())) {
                 return false;
@@ -212,7 +212,7 @@ public boolean equals(Object obj) {
                 return false;
             }
 
-            Mysql other = (Mysql) obj;
+            Mysql other = (Mysql)obj;
 
             if (!strEquals(user, other.getUser())) {
                 return false;

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -55,7 +55,6 @@ public class Cluster {
      */
     private boolean useIPPort4Check = true;
 
-
     private Map<String, String> metadata = new HashMap<String, String>();
 
     public Cluster() {

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -160,7 +160,7 @@ public boolean equals(Object obj) {
             return false;
         }
 
-        Instance host = (Instance) obj;
+        Instance host = (Instance)obj;
 
         return strEquals(toString(), host.toString());
     }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java
Patch:
@@ -205,7 +205,7 @@ public static String getKey(String name, String clusters, String unit, boolean i
 
         if (!isEmpty(clusters) && !isEmpty(unit)) {
             return isAllIPs ? name + SPLITER + clusters + SPLITER + unit + SPLITER + ALL_IPS
-                    : name + SPLITER + clusters + SPLITER + unit;
+                : name + SPLITER + clusters + SPLITER + unit;
         }
 
         if (!isEmpty(clusters)) {
@@ -214,7 +214,7 @@ public static String getKey(String name, String clusters, String unit, boolean i
 
         if (!isEmpty(unit)) {
             return isAllIPs ? name + SPLITER + EMPTY + SPLITER + unit + SPLITER + ALL_IPS :
-                    name + SPLITER + EMPTY + SPLITER + unit;
+                name + SPLITER + EMPTY + SPLITER + unit;
         }
 
         return isAllIPs ? name + SPLITER + ALL_IPS : name;

File: client/src/main/java/com/alibaba/nacos/client/logger/LoggerFactory.java
Patch:
@@ -61,7 +61,7 @@ private LoggerFactory() {
             } catch (Throwable e2) {
                 setLoggerFactory(new NopLoggerFactory());
                 LogLog.warn("Init JM logger with NopLoggerFactory, pay attention. "
-                        + LoggerFactory.class.getClassLoader(), e2);
+                    + LoggerFactory.class.getClassLoader(), e2);
             }
         }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2Logger.java
Patch:
@@ -21,11 +21,10 @@
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
 import com.alibaba.nacos.client.logger.util.MessageUtil;
 
-
 /**
  * Log4j2Logger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2Logger extends LoggerSupport implements Logger {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/log4j2/Log4j2LoggerFactory.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * Log4j2Logger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Log4j2LoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLogger.java
Patch:
@@ -17,14 +17,15 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.LoggerSupport;
+
 /**
  * NopLogger
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLogger extends LoggerSupport implements Logger {
 
-    public NopLogger(){
+    public NopLogger() {
         super(null);
     }
 

File: client/src/main/java/com/alibaba/nacos/client/logger/nop/NopLoggerFactory.java
Patch:
@@ -17,10 +17,11 @@
 
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
+
 /**
  * NopLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class NopLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/option/AbstractActiveOption.java
Patch:
@@ -24,8 +24,8 @@
 
 /**
  * AbstractActiveOption
- * @author Nacos
  *
+ * @author Nacos
  */
 public abstract class AbstractActiveOption implements ActivateOption {
 
@@ -53,7 +53,7 @@ public static void invokeMethod(Object object, List<Object[]> args) {
             for (Object[] arg : args) {
                 if (arg != null && arg.length == 3) {
                     try {
-                        Method m = object.getClass().getMethod((String) arg[0], (Class<?>[]) arg[1]);
+                        Method m = object.getClass().getMethod((String)arg[0], (Class<?>[])arg[1]);
                         m.invoke(object, arg[2]);
                     } catch (NoSuchMethodException e) {
                         LogLog.info("Can't find method for " + object.getClass() + " " + arg[0] + " " + arg[2]);

File: client/src/main/java/com/alibaba/nacos/client/logger/option/LogbackActivateOption.java
Patch:
@@ -29,10 +29,10 @@
 
 /**
  * ActivateOption的Logback 0.9.19及后续版本的实现
- * 
+ *
  * @author zhuyong 2014年3月20日 上午10:24:58
  */
-@SuppressWarnings({ "rawtypes", "unchecked" })
+@SuppressWarnings({"rawtypes", "unchecked"})
 public class LogbackActivateOption extends Logback918ActivateOption {
 
     public LogbackActivateOption(Object logger) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLogger.java
Patch:
@@ -66,7 +66,7 @@ public Slf4jLogger(org.slf4j.Logger delegate) {
         }
 
         try {
-            Class<ActivateOption> clazz = (Class<ActivateOption>) Class.forName(activateOptionClass);
+            Class<ActivateOption> clazz = (Class<ActivateOption>)Class.forName(activateOptionClass);
             Constructor<ActivateOption> c = clazz.getConstructor(Object.class);
             this.activateOption = c.newInstance(delegate);
         } catch (Exception e) {

File: client/src/main/java/com/alibaba/nacos/client/logger/slf4j/Slf4jLoggerFactory.java
Patch:
@@ -15,15 +15,15 @@
  */
 package com.alibaba.nacos.client.logger.slf4j;
 
-
 import com.alibaba.nacos.client.logger.Logger;
 import com.alibaba.nacos.client.logger.nop.NopLogger;
 import com.alibaba.nacos.client.logger.support.ILoggerFactory;
 import com.alibaba.nacos.client.logger.support.LogLog;
+
 /**
  * Slf4jLogger Factory
- * @author Nacos
  *
+ * @author Nacos
  */
 public class Slf4jLoggerFactory implements ILoggerFactory {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/AppenderInfo.java
Patch:
@@ -27,7 +27,7 @@ public class AppenderInfo extends HashMap {
     private static String file = "file";
 
     public String getName() {
-        return (String) get(AppenderInfo.name);
+        return (String)get(AppenderInfo.name);
     }
 
     public void setName(String name) {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/ErrorLog.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * 兼容老的ErrorLog，后续请使用{@link LoggerHelper}
- * 
+ *
  * @author zhuyong 2014年7月1日 上午11:41:22
  */
 public class ErrorLog {

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LogLog.java
Patch:
@@ -33,10 +33,11 @@
 
 import java.io.PrintStream;
 import java.util.Calendar;
+
 /**
- *  logger log
- * @author Nacos
+ * logger log
  *
+ * @author Nacos
  */
 public class LogLog {
 

File: client/src/main/java/com/alibaba/nacos/client/logger/support/LoggerInfo.java
Patch:
@@ -41,11 +41,11 @@ public void setEffectiveLevel(String effectiveLevel) {
     }
 
     public String getLevel() {
-        return (String) get(level);
+        return (String)get(level);
     }
 
     public List<AppenderInfo> getAppenders() {
-        return (List<AppenderInfo>) get(appenders);
+        return (List<AppenderInfo>)get(appenders);
     }
 
     public void setAppenders(List<AppenderInfo> appenders) {

File: client/src/main/java/com/alibaba/nacos/client/logger/util/MessageUtil.java
Patch:
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 package com.alibaba.nacos.client.logger.util;
+
 /**
  * Error msg format
- * @author Nacos
  *
+ * @author Nacos
  */
 public class MessageUtil {
 

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -38,7 +38,8 @@ public class EventDispatcher {
 
     private BlockingQueue<ServiceInfo> changedServices = new LinkedBlockingQueue<ServiceInfo>();
 
-    private ConcurrentMap<String, List<EventListener>> observerMap = new ConcurrentHashMap<String, List<EventListener>>();
+    private ConcurrentMap<String, List<EventListener>> observerMap
+        = new ConcurrentHashMap<String, List<EventListener>>();
 
     public EventDispatcher() {
 
@@ -124,7 +125,7 @@ public void run() {
 
                 } catch (Exception e) {
                     LogUtils.LOG.error("NA", "notify error for service: "
-                            + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
+                        + serviceInfo.getName() + ", clusters: " + serviceInfo.getClusters(), e);
                 }
             }
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/GenericPoller.java
Patch:
@@ -27,7 +27,7 @@ public class GenericPoller<T> implements Poller<T> {
     private AtomicInteger index = new AtomicInteger(0);
     private List<T> items = new ArrayList<T>();
 
-    public GenericPoller(List<T> items){
+    public GenericPoller(List<T> items) {
         this.items = items;
     }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/NetUtils.java
Patch:
@@ -27,7 +27,7 @@ public class NetUtils {
     public static String localIP() {
         try {
             if (!StringUtils.isEmpty(LOCAL_IP)) {
-               return LOCAL_IP;
+                return LOCAL_IP;
             }
 
             String ip = System.getProperty("com.taobao.vipserver.localIP", InetAddress.getLocalHost().getHostAddress());

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/Pair.java
Patch:
@@ -23,16 +23,16 @@ public class Pair<T> {
     private T item;
     private double weight;
 
-    public Pair(T item,double weight){
+    public Pair(T item, double weight) {
         this.item = item;
         this.weight = weight;
     }
 
-    public T item(){
+    public T item() {
         return item;
     }
 
-    public double weight(){
+    public double weight() {
         return weight;
     }
 }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -147,9 +147,9 @@ static public void cleanEnvSnapshot(String envName){
     	tmp = new File(tmp, "snapshot");
     	try {
 			IOUtils.cleanDirectory(tmp);
-			log.info("success dlelet " + envName + "-snapshot");
+			log.info("success delete " + envName + "-snapshot");
 		} catch (IOException e) {
-			log.info("fail dlelet " + envName + "-snapshot, " + e.toString());
+			log.info("fail delete " + envName + "-snapshot, " + e.toString());
 			e.printStackTrace();
 		}
     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/LocalConfigInfoProcessor.java
Patch:
@@ -147,9 +147,9 @@ static public void cleanEnvSnapshot(String envName){
     	tmp = new File(tmp, "snapshot");
     	try {
 			IOUtils.cleanDirectory(tmp);
-			log.info("success dlelet " + envName + "-snapshot");
+			log.info("success delete " + envName + "-snapshot");
 		} catch (IOException e) {
-			log.info("fail dlelet " + envName + "-snapshot, " + e.toString());
+			log.info("fail delete " + envName + "-snapshot, " + e.toString());
 			e.printStackTrace();
 		}
     }

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -158,7 +158,8 @@ public boolean matchUnlistenKey(String key) {
     public void onChange(String key, String value) throws Exception {
 
         if (StringUtils.isEmpty(value)) {
-            Loggers.SRV_LOG.warn("VIPSRV-DOM", "received empty iplist config for dom: " + name);
+            Loggers.SRV_LOG.warn("[VIPSRV-DOM] received empty iplist config for dom: " + name);
+            return;
         }
 
         Loggers.RAFT.info("[VIPSRV-RAFT] datum is changed, key: " + key + ", value: " + value);
@@ -302,7 +303,7 @@ public List<IpAddress> allIPs(List<String> clusters) {
         for (String cluster : clusters) {
             Cluster clusterObj = clusterMap.get(cluster);
             if (clusterObj == null) {
-                throw new IllegalArgumentException("can not find cluster: " + cluster);
+                throw new IllegalArgumentException("can not find cluster: " + cluster + ", dom:" + getName());
             }
 
             allIPs.addAll(clusterObj.allIPs());

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckReactor.java
Patch:
@@ -47,13 +47,11 @@ public Thread newThread(Runnable r) {
 
     public static ScheduledFuture<?> scheduleCheck(HealthCheckTask task) {
         task.setStartTime(System.currentTimeMillis());
-
         return EXECUTOR.schedule(task, task.getCheckRTNormalized(), TimeUnit.MILLISECONDS);
     }
 
     public static void scheduleCheck(ClientBeatCheckTask task) {
         futureMap.putIfAbsent(task.taskKey(), EXECUTOR.scheduleWithFixedDelay(task, 5000, 5000, TimeUnit.MILLISECONDS));
-//        return EXECUTOR.schedule(task, 5000, TimeUnit.MILLISECONDS);
     }
 
     public static void cancelCheck(ClientBeatCheckTask task) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -158,7 +158,8 @@ public boolean matchUnlistenKey(String key) {
     public void onChange(String key, String value) throws Exception {
 
         if (StringUtils.isEmpty(value)) {
-            Loggers.SRV_LOG.warn("VIPSRV-DOM", "received empty iplist config for dom: " + name);
+            Loggers.SRV_LOG.warn("[VIPSRV-DOM] received empty iplist config for dom: " + name);
+            return;
         }
 
         Loggers.RAFT.info("[VIPSRV-RAFT] datum is changed, key: " + key + ", value: " + value);
@@ -302,7 +303,7 @@ public List<IpAddress> allIPs(List<String> clusters) {
         for (String cluster : clusters) {
             Cluster clusterObj = clusterMap.get(cluster);
             if (clusterObj == null) {
-                throw new IllegalArgumentException("can not find cluster: " + cluster);
+                throw new IllegalArgumentException("can not find cluster: " + cluster + ", dom:" + getName());
             }
 
             allIPs.addAll(clusterObj.allIPs());

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckReactor.java
Patch:
@@ -47,13 +47,11 @@ public Thread newThread(Runnable r) {
 
     public static ScheduledFuture<?> scheduleCheck(HealthCheckTask task) {
         task.setStartTime(System.currentTimeMillis());
-
         return EXECUTOR.schedule(task, task.getCheckRTNormalized(), TimeUnit.MILLISECONDS);
     }
 
     public static void scheduleCheck(ClientBeatCheckTask task) {
         futureMap.putIfAbsent(task.taskKey(), EXECUTOR.scheduleWithFixedDelay(task, 5000, 5000, TimeUnit.MILLISECONDS));
-//        return EXECUTOR.schedule(task, 5000, TimeUnit.MILLISECONDS);
     }
 
     public static void cancelCheck(ClientBeatCheckTask task) {

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -30,5 +30,6 @@ public class PropertyKeyConst {
 	public final static String CONTEXT_PATH = "contextPath";
 	public final static String CLUSTER_NAME = "clusterName";
 	public final static String ENCODE = "encode";
+	public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
 	
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Service.java
Patch:
@@ -39,7 +39,7 @@ public class Service {
     private String app;
 
     /**
-     * Service group which is meant to classify services into different sets.
+     * Service group is meant to classify services into different sets.
      */
     private String group;
 
@@ -48,12 +48,12 @@ public class Service {
      */
     private String healthCheckMode;
 
+    private Map<String, String> metadata = new HashMap<String, String>();
+
     public Service(String name) {
         this.name = name;
     }
 
-    private Map<String, String> metadata = new HashMap<String, String>();
-
     public String getName() {
         return name;
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -45,6 +45,8 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+
 /**
  * 软负载客户端发布数据专用控制器
  * 
@@ -138,7 +140,7 @@ public Boolean publishConfig(HttpServletRequest request, HttpServletResponse res
 			EventDispatcher.fireEvent(new ConfigDataChangeEvent(true, dataId, group, tenant, time.getTime()));
 		}
 		ConfigTraceService.logPersistenceEvent(dataId, group, tenant, requestIpApp, time.getTime(),
-				SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
+				LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
 
 		return true;
 	}

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.ServerListService;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -28,6 +27,8 @@
 
 import javax.annotation.PostConstruct;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+
 /**
  * health service
  * 
@@ -72,7 +73,7 @@ public String getHealth() {
 				sb.append("地址服务器 down. ");
 			}
 			if (!ServerListService.isInIpList()) {
-				sb.append("server ").append(SystemConfig.LOCAL_IP).append(" 不在地址服务器的IP列表中. ");
+				sb.append("server ").append(LOCAL_IP).append(" 不在地址服务器的IP列表中. ");
 			}
 		}
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -46,6 +46,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 
@@ -354,7 +355,7 @@ public void run() {
     				}
     				// 删除
     				else {
-    					persistService.removeConfigInfo(dataId, group, tenant, SystemConfig.LOCAL_IP, null);
+    					persistService.removeConfigInfo(dataId, group, tenant, LOCAL_IP, null);
     					log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
     				}
     				

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.PersistService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -34,6 +33,7 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 
 /**
  * 数据聚合服务。
@@ -88,7 +88,7 @@ public void addMergeTask(String dataId, String groupId, String tenant, String cl
     
 	public void mergeAll() {
 		for (ConfigInfoChanged item : persistService.findAllAggrGroup()) {
-			addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), SystemConfig.LOCAL_IP);
+			addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), LOCAL_IP);
 		}
 	}
     
@@ -131,7 +131,7 @@ public void run() {
     				}
     				// 删除
     				else {
-						persistService.removeConfigInfo(dataId, group, tenant, SystemConfig.LOCAL_IP, null);
+						persistService.removeConfigInfo(dataId, group, tenant, LOCAL_IP, null);
     					log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
     				}
     				

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -26,7 +26,6 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.StringUtils;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.event.EventDispatcher;
 import org.slf4j.Logger;
@@ -36,6 +35,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 
 /**
  * Merge task processor
@@ -81,7 +81,7 @@ public boolean process(String taskType, AbstractTask task) {
                 log.info("[merge-ok] {}, {}, size={}, length={}, md5={}, content={}", dataId, group, datumList.size(),
                     cf.getContent().length(), cf.getMd5(), ContentUtils.truncateContent(cf.getContent()));
 
-                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(), SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
+                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(), LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
             }
             // 删除
             else {
@@ -94,7 +94,7 @@ public boolean process(String taskType, AbstractTask task) {
                 log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId
                         + ", groupId=" + group);
 
-                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(),  SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
+                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(),  LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
             }
 
             EventDispatcher.fireEvent(new ConfigDataChangeEvent(false, dataId, group, tenant, tag, time.getTime()));

File: console/src/main/java/com/alibaba/nacos/Nacos.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos;
 
-import java.net.UnknownHostException;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.web.servlet.ServletComponentScan;
@@ -28,7 +27,7 @@
 @ServletComponentScan
 public class Nacos {
 
-    public static void main(String[] args) throws UnknownHostException {
+    public static void main(String[] args) {
         SpringApplication.run(Nacos.class, args);
     }
 }
\ No newline at end of file

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -973,7 +973,7 @@ private String doAddIP4Dom(HttpServletRequest request) throws Exception {
         if (RaftCore.isLeader()) {
             try {
                 domainsManager.getDom2LockMap().get(dom).lock();
-                proxyParams.put("clientIP", NetUtils.localIP());
+                proxyParams.put("clientIP", NetUtils.localServer());
                 proxyParams.put("notify", "true");
 
                 proxyParams.put("term", String.valueOf(RaftCore.getPeerSet().local().term));

File: test/src/test/java/com/alibaba/nacos/test/naming/RegisterInstance_ITCase.java
Patch:
@@ -65,7 +65,6 @@ public void init() throws Exception {
     @Ignore
     public void regService() throws NacosException, InterruptedException {
 
-        naming = NamingFactory.createNamingService("10.101.109.214:8848");
         String serviceName = "dungu.test.99";
         naming.registerInstance(serviceName, "127.0.0.1", 80, "c1");
         naming.registerInstance(serviceName, "127.0.0.2", 80, "c2");
@@ -76,7 +75,6 @@ public void regService() throws NacosException, InterruptedException {
     @Ignore
     public void deregService() throws NacosException, InterruptedException {
 
-        naming = NamingFactory.createNamingService("10.101.109.214:8848,11.163.128.34:8848,11.163.128.36:8848");
         String serviceName = "dungu.test.98";
         System.out.println(naming.getAllInstances(serviceName));
 //        Thread.sleep(100000000L);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -61,7 +61,7 @@ public void process() {
             return;
         }
 
-        Loggers.EVT_LOG.info("[CLIENT-BEAT] processing beat: " + rsInfo.toString());
+        Loggers.EVT_LOG.debug("[CLIENT-BEAT] processing beat: " + rsInfo.toString());
 
         String ip = rsInfo.getIp();
         String clusterName = rsInfo.getCluster();
@@ -74,7 +74,7 @@ public void process() {
         for (IpAddress ipAddress: ipAddresses) {
             if (ipAddress.getIp().equals(ip) && ipAddress.getPort() == port) {
                 processed = true;
-                Loggers.EVT_LOG.info("[CLIENT-BEAT] refresh beat: " + rsInfo.toString());
+                Loggers.EVT_LOG.debug("[CLIENT-BEAT] refresh beat: " + rsInfo.toString());
                 ipAddress.setLastBeat(System.currentTimeMillis());
                 if (!ipAddress.isMarked()) {
                     if (!ipAddress.isValid()) {

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -418,8 +418,7 @@ public static void onPublish(Datum datum, RaftPeer source) throws Exception {
 
         notifier.addTask(datum, Notifier.ApplyAction.CHANGE);
 
-        Loggers.RAFT.info("data added/updated, key=" + datum.key + ", term: " +
-                local.term + ", data1:" + RaftCore.datums.get(datum.key) + ", data2:" + datum.value);
+        Loggers.RAFT.info("data added/updated, key=" + datum.key + ", term: " + local.term);
     }
 
     public static void onDelete(JSONObject params) throws Exception {

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -105,6 +105,8 @@ public void dregDomClusterTest() throws Exception {
 
         String serviceName = randomDomainName();
 
+        System.out.println(serviceName);
+
         naming.registerInstance(serviceName, "127.0.0.1", TEST_PORT, "c1");
         naming.registerInstance(serviceName, "127.0.0.2", TEST_PORT, "c2");
 
@@ -117,7 +119,7 @@ public void dregDomClusterTest() throws Exception {
 
         naming.deregisterInstance(serviceName, "127.0.0.1", TEST_PORT, "c1");
 
-        TimeUnit.SECONDS.sleep(2);
+        TimeUnit.SECONDS.sleep(5);
 
         instances = naming.getAllInstances(serviceName);
 

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -41,7 +41,7 @@ public Thread newThread(Runnable r) {
         }
     });
 
-    private long clientBeatInterval = 10 * 1000;
+    private long clientBeatInterval = 5 * 1000;
 
     private NamingProxy serverProxy;
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -329,8 +329,9 @@ public void easyAddIP4Dom(String domName, List<IpAddress> ips, long timestamp, l
 
             for (IpAddress ipAddress : ips) {
                 if (!dom.getClusterMap().containsKey(ipAddress.getClusterName())) {
-                    Loggers.SRV_LOG.info("cluster: " + ipAddress.getClusterName() + "  not found, ip: " + ipAddress.toJSON());
-                    continue;
+                    dom.getClusterMap().put(ipAddress.getClusterName(), new Cluster(ipAddress.getClusterName()));
+                    Loggers.SRV_LOG.warn("cluster: " + ipAddress.getClusterName() + "  not found, ip: " + ipAddress.toJSON()
+                            + ", will create new cluster with default configuration.");
                 }
 
                 ipAddressMap.put(ipAddress.getDatumKey(), ipAddress);

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatProcessor.java
Patch:
@@ -61,7 +61,7 @@ public void process() {
             return;
         }
 
-        Loggers.EVT_LOG.debug("client-beat", "processing beat: " + rsInfo.toString());
+        Loggers.EVT_LOG.info("[CLIENT-BEAT] processing beat: " + rsInfo.toString());
 
         String ip = rsInfo.getIp();
         String clusterName = rsInfo.getCluster();
@@ -74,6 +74,7 @@ public void process() {
         for (IpAddress ipAddress: ipAddresses) {
             if (ipAddress.getIp().equals(ip) && ipAddress.getPort() == port) {
                 processed = true;
+                Loggers.EVT_LOG.info("[CLIENT-BEAT] refresh beat: " + rsInfo.toString());
                 ipAddress.setLastBeat(System.currentTimeMillis());
                 if (!ipAddress.isMarked()) {
                     if (!ipAddress.isValid()) {

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java
Patch:
@@ -60,7 +60,7 @@ public void run() {
         try {
             if (DistroMapper.responsible(cluster.getDom().getName())) {
                 processor.process(this);
-                Loggers.EVT_LOG.debug("HEALTH-CHECK", "schedule health check task: " + cluster.getDom().getName());
+                Loggers.EVT_LOG.debug("[HEALTH-CHECK] schedule health check task: " + cluster.getDom().getName());
             }
         } catch (Throwable e) {
             Loggers.SRV_LOG.error("VIPSRV-HEALTH-CHECK", "error while process health check for " + cluster.getDom().getName() + ":" + cluster.getName(), e);

File: naming/src/main/java/com/alibaba/nacos/naming/raft/Datum.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.naming.raft;
 
+import java.util.concurrent.atomic.AtomicLong;
+
 /**
  * @author nacos
  */
@@ -23,5 +25,5 @@ public class Datum {
 
     public String value;
 
-    public long timestamp;
+    public AtomicLong timestamp = new AtomicLong(0L);
 }

File: naming/src/main/java/com/alibaba/nacos/naming/web/MockHttpRequest.java
Patch:
@@ -42,7 +42,7 @@ public static MockHttpRequest buildRequest(Map<String, String[]> params) {
     public static MockHttpRequest buildRequest2(Map<String, String> params) {
 
         MockHttpRequest request = new MockHttpRequest();
-        Map<String, String[]> arrayMap = new HashMap<>();
+        Map<String, String[]> arrayMap = new HashMap<>(16);
         for (String key : params.keySet()) {
             arrayMap.put(key, new String[]{params.get(key)});
         }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -45,6 +45,8 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+
 /**
  * 软负载客户端发布数据专用控制器
  * 
@@ -138,7 +140,7 @@ public Boolean publishConfig(HttpServletRequest request, HttpServletResponse res
 			EventDispatcher.fireEvent(new ConfigDataChangeEvent(true, dataId, group, tenant, time.getTime()));
 		}
 		ConfigTraceService.logPersistenceEvent(dataId, group, tenant, requestIpApp, time.getTime(),
-				SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
+				LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
 
 		return true;
 	}

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.ServerListService;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -28,6 +27,8 @@
 
 import javax.annotation.PostConstruct;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+
 /**
  * health service
  * 
@@ -72,7 +73,7 @@ public String getHealth() {
 				sb.append("地址服务器 down. ");
 			}
 			if (!ServerListService.isInIpList()) {
-				sb.append("server ").append(SystemConfig.LOCAL_IP).append(" 不在地址服务器的IP列表中. ");
+				sb.append("server ").append(LOCAL_IP).append(" 不在地址服务器的IP列表中. ");
 			}
 		}
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -46,6 +46,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 
@@ -354,7 +355,7 @@ public void run() {
     				}
     				// 删除
     				else {
-    					persistService.removeConfigInfo(dataId, group, tenant, SystemConfig.LOCAL_IP, null);
+    					persistService.removeConfigInfo(dataId, group, tenant, LOCAL_IP, null);
     					log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
     				}
     				

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.PersistService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -34,6 +33,7 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 
 /**
  * 数据聚合服务。
@@ -88,7 +88,7 @@ public void addMergeTask(String dataId, String groupId, String tenant, String cl
     
 	public void mergeAll() {
 		for (ConfigInfoChanged item : persistService.findAllAggrGroup()) {
-			addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), SystemConfig.LOCAL_IP);
+			addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), LOCAL_IP);
 		}
 	}
     
@@ -131,7 +131,7 @@ public void run() {
     				}
     				// 删除
     				else {
-						persistService.removeConfigInfo(dataId, group, tenant, SystemConfig.LOCAL_IP, null);
+						persistService.removeConfigInfo(dataId, group, tenant, LOCAL_IP, null);
     					log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
     				}
     				

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -26,7 +26,6 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.StringUtils;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.event.EventDispatcher;
 import org.slf4j.Logger;
@@ -36,6 +35,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 
 /**
  * Merge task processor
@@ -81,7 +81,7 @@ public boolean process(String taskType, AbstractTask task) {
                 log.info("[merge-ok] {}, {}, size={}, length={}, md5={}, content={}", dataId, group, datumList.size(),
                     cf.getContent().length(), cf.getMd5(), ContentUtils.truncateContent(cf.getContent()));
 
-                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(), SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
+                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(), LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
             }
             // 删除
             else {
@@ -94,7 +94,7 @@ public boolean process(String taskType, AbstractTask task) {
                 log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId
                         + ", groupId=" + group);
 
-                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(),  SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
+                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(),  LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
             }
 
             EventDispatcher.fireEvent(new ConfigDataChangeEvent(false, dataId, group, tenant, tag, time.getTime()));

File: console/src/main/java/com/alibaba/nacos/Nacos.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos;
 
-import java.net.UnknownHostException;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.web.servlet.ServletComponentScan;
@@ -28,7 +27,7 @@
 @ServletComponentScan
 public class Nacos {
 
-    public static void main(String[] args) throws UnknownHostException {
+    public static void main(String[] args) {
         SpringApplication.run(Nacos.class, args);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -79,6 +79,7 @@ public void testDefaultProperties() {
     public void testDefaultPropertyNames() {
 
         assertPropertyNames(
+                "nacos.version",
                 "server.servlet.contextPath",
                 "server.port",
                 "server.tomcat.uri-encoding",

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.TypeReference;
-import com.alibaba.nacos.common.util.Pair;
 import com.alibaba.nacos.naming.misc.*;
 import com.alibaba.nacos.naming.monitor.PerformanceLoggerThread;
 import com.alibaba.nacos.naming.push.PushService;
@@ -577,12 +576,12 @@ public void run() {
 
                 List<String> sameSiteServers = NamingProxy.getSameSiteServers().get("sameSite");
 
-                if (sameSiteServers == null || sameSiteServers.size() <= 0 || !NamingProxy.getServers().contains(NetUtils.localIP())) {
+                if (sameSiteServers == null || sameSiteServers.size() <= 0 || !NamingProxy.getServers().contains(NetUtils.localServer())) {
                     return;
                 }
 
                 for (String server : sameSiteServers) {
-                    if (server.equals(NetUtils.localIP())) {
+                    if (server.equals(NetUtils.localServer())) {
                         continue;
                     }
                     synchronizer.send(server, msg);

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -267,7 +267,7 @@ public void destroy() throws Exception {
             entry.getValue().destroy();
         }
 
-        if (RaftCore.isLeader(NetUtils.localIP())) {
+        if (RaftCore.isLeader(NetUtils.localServer())) {
             RaftCore.signalDelete(UtilsAndCommons.getIPListStoreKey(this));
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/AbstractHealthCheckProcessor.java
Patch:
@@ -100,12 +100,12 @@ public void run() {
 
                 List<String> sameSiteServers = NamingProxy.getSameSiteServers().get("sameSite");
 
-                if (sameSiteServers == null || sameSiteServers.size() <= 0 || !NamingProxy.getServers().contains(NetUtils.localIP())) {
+                if (sameSiteServers == null || sameSiteServers.size() <= 0 || !NamingProxy.getServers().contains(NetUtils.localServer())) {
                     return;
                 }
 
                 for (String server : sameSiteServers) {
-                    if (server.equals(NetUtils.localIP())) {
+                    if (server.equals(NetUtils.localServer())) {
                         continue;
                     }
                     Map<String, String> params = new HashMap<>(10);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/DomainStatusSynchronizer.java
Patch:
@@ -37,7 +37,7 @@ public void send(final String serverIP, Message msg) {
         Map<String,String> params = new HashMap<String, String>(10);
 
         params.put("domsStatus", msg.getData());
-        params.put("clientIP", NetUtils.localIP());
+        params.put("clientIP", NetUtils.localServer());
 
 
         String url = "http://" + serverIP + ":" + RunningConfig.getServerPort() + RunningConfig.getContextPath() +

File: naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java
Patch:
@@ -17,13 +17,13 @@
 
 import com.alibaba.nacos.common.util.SystemUtils;
 import com.alibaba.nacos.naming.boot.RunningConfig;
+
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.lang3.StringUtils;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
-import java.net.InetAddress;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
@@ -109,7 +109,7 @@ public static void refreshSrvIfNeed(String env) {
 
             if (STANDALONE_MODE) {
                 servers = new ArrayList<>();
-                servers.add(InetAddress.getLocalHost().getHostAddress() + ":" + RunningConfig.getServerPort());
+                servers.add(NetUtils.localServer());
                 return;
             }
 

File: naming/src/main/java/com/alibaba/nacos/naming/raft/PeerSet.java
Patch:
@@ -66,7 +66,7 @@ public void add(List<String> servers) {
         if (STANDALONE_MODE) {
             RaftPeer local = local();
             local.state = RaftPeer.State.LEADER;
-            local.voteFor = NetUtils.localIP();
+            local.voteFor = NetUtils.localServer();
 
         }
     }
@@ -175,9 +175,9 @@ public Integer onCompleted(Response response) throws Exception {
     }
 
     public RaftPeer local() {
-        RaftPeer peer = peers.get(NetUtils.localIP());
+        RaftPeer peer = peers.get(NetUtils.localServer());
         if (peer == null) {
-            throw new IllegalStateException("unable to find local peer: " + NetUtils.localIP() + ", all peers: "
+            throw new IllegalStateException("unable to find local peer: " + NetUtils.localServer() + ", all peers: "
                     + Arrays.toString(peers.keySet().toArray()));
         }
 

File: naming/src/main/java/com/alibaba/nacos/naming/raft/RaftCore.java
Patch:
@@ -433,7 +433,7 @@ public static void sendVote() {
                 return;
             }
 
-            RaftPeer local = peers.get(NetUtils.localIP());
+            RaftPeer local = peers.get(NetUtils.localServer());
             Loggers.RAFT.info("leader timeout, start voting,leader: " + JSON.toJSONString(getLeader()) + ", term: " + local.term);
 
             peers.reset();
@@ -481,7 +481,7 @@ public static RaftPeer receivedVote(RaftPeer remote) {
                 throw new IllegalStateException("not ready yet");
             }
 
-            RaftPeer local = peers.get(NetUtils.localIP());
+            RaftPeer local = peers.get(NetUtils.localServer());
             if (remote.term.get() <= local.term.get()) {
                 String msg = "received illegitimate vote" +
                         ", voter-term:" + remote.term + ", votee-term:" + local.term;
@@ -894,7 +894,7 @@ public static boolean isLeader(String ip) {
     }
 
     public static boolean isLeader() {
-        return peers.isLeader(NetUtils.localIP());
+        return peers.isLeader(NetUtils.localServer());
     }
 
     public static String buildURL(String ip, String api) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -961,7 +961,7 @@ private String doAddIP4Dom(HttpServletRequest request) throws Exception {
             RaftCore.OPERATE_LOCK.lock();
             try {
                 final CountDownLatch countDownLatch = new CountDownLatch(RaftCore.getPeerSet().majorityCount());
-                proxyParams.put("clientIP", NetUtils.localIP());
+                proxyParams.put("clientIP", NetUtils.localServer());
                 proxyParams.put("notify", "true");
 
                 proxyParams.put("term", String.valueOf(RaftCore.getPeerSet().local().term));
@@ -2306,7 +2306,7 @@ public JSONObject checkDataConsistence(HttpServletRequest request) throws Except
                     diff.add(ip + "_" + domString);
                 }
 
-                if (ip.equals(NetUtils.localIP())) {
+                if (ip.equals(NetUtils.localServer())) {
                     localDomString = domString;
                 }
 

File: naming/src/test/java/com/alibaba/nacos/naming/BaseTest.java
Patch:
@@ -41,10 +41,10 @@ public void before() {
         MockitoAnnotations.initMocks(this);
 
         RaftPeer peer = new RaftPeer();
-        peer.ip = NetUtils.localIP();
+        peer.ip = NetUtils.localServer();
         RaftCore.setPeerSet(peerSet);
         Mockito.when(peerSet.local()).thenReturn(peer);
         Mockito.when(peerSet.getLeader()).thenReturn(peer);
-        Mockito.when(peerSet.isLeader(NetUtils.localIP())).thenReturn(true);
+        Mockito.when(peerSet.isLeader(NetUtils.localServer())).thenReturn(true);
     }
 }

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -365,7 +365,7 @@ private String addOrReplaceDom(HttpServletRequest request) throws Exception {
         String envAndSite = BaseServlet.optional(request, "envAndSites", StringUtils.EMPTY);
         boolean resetWeight = Boolean.parseBoolean(BaseServlet.optional(request, "resetWeight", "false"));
         boolean enableHealthCheck = Boolean.parseBoolean(BaseServlet.optional(request, "enableHealthCheck", "true"));
-        boolean enable = Boolean.parseBoolean(BaseServlet.optional(request, "enable", "true"));
+        boolean enable = Boolean.parseBoolean(BaseServlet.optional(request, "serviceEnabled", "true"));
         String disabledSites = BaseServlet.optional(request, "disabledSites", StringUtils.EMPTY);
         boolean eanbleClientBeat = Boolean.parseBoolean(BaseServlet.optional(request, "enableClientBeat", "false"));
         String clusterName = BaseServlet.optional(request, "clusterName", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
@@ -734,7 +734,7 @@ public String updateDom(HttpServletRequest request) throws Exception {
             dom.setEnableHealthCheck(Boolean.parseBoolean(enableHealthCheck));
         }
 
-        String enabled = BaseServlet.optional(request, "enabled", StringUtils.EMPTY);
+        String enabled = BaseServlet.optional(request, "serviceEnabled", "true");
         if (!StringUtils.isEmpty(enabled)) {
             dom.setEnabled(Boolean.parseBoolean(enabled));
         }

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -734,7 +734,7 @@ public String updateDom(HttpServletRequest request) throws Exception {
             dom.setEnableHealthCheck(Boolean.parseBoolean(enableHealthCheck));
         }
 
-        String enabled = BaseServlet.optional(request, "serviceEnabled", StringUtils.EMPTY);
+        String enabled = BaseServlet.optional(request, "serviceEnabled", "true");
         if (!StringUtils.isEmpty(enabled)) {
             dom.setEnabled(Boolean.parseBoolean(enabled));
         }

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -365,7 +365,7 @@ private String addOrReplaceDom(HttpServletRequest request) throws Exception {
         String envAndSite = BaseServlet.optional(request, "envAndSites", StringUtils.EMPTY);
         boolean resetWeight = Boolean.parseBoolean(BaseServlet.optional(request, "resetWeight", "false"));
         boolean enableHealthCheck = Boolean.parseBoolean(BaseServlet.optional(request, "enableHealthCheck", "true"));
-        boolean enable = Boolean.parseBoolean(BaseServlet.optional(request, "enable", "true"));
+        boolean enable = Boolean.parseBoolean(BaseServlet.optional(request, "serviceEnabled", "true"));
         String disabledSites = BaseServlet.optional(request, "disabledSites", StringUtils.EMPTY);
         boolean eanbleClientBeat = Boolean.parseBoolean(BaseServlet.optional(request, "enableClientBeat", "false"));
         String clusterName = BaseServlet.optional(request, "clusterName", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
@@ -734,7 +734,7 @@ public String updateDom(HttpServletRequest request) throws Exception {
             dom.setEnableHealthCheck(Boolean.parseBoolean(enableHealthCheck));
         }
 
-        String enabled = BaseServlet.optional(request, "enabled", StringUtils.EMPTY);
+        String enabled = BaseServlet.optional(request, "serviceEnabled", StringUtils.EMPTY);
         if (!StringUtils.isEmpty(enabled)) {
             dom.setEnabled(Boolean.parseBoolean(enabled));
         }

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/LogUtils.java
Patch:
@@ -42,7 +42,7 @@ public class LogUtils {
 
         // logger init
         LOG = LoggerFactory.getLogger("com.alibaba.nacos.client.naming");
-        LOG.setLevel(Level.DEBUG);
+        LOG.setLevel(Level.INFO);
         LOG.setAdditivity(false);
         LOG.activateAppenderWithSizeRolling("nacos", "naming.log", "UTF-8", JM_LOG_FILE_SIZE, JM_LOG_RETAIN_COUNT);
     }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -45,6 +45,8 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+
 /**
  * 软负载客户端发布数据专用控制器
  * 
@@ -138,7 +140,7 @@ public Boolean publishConfig(HttpServletRequest request, HttpServletResponse res
 			EventDispatcher.fireEvent(new ConfigDataChangeEvent(true, dataId, group, tenant, time.getTime()));
 		}
 		ConfigTraceService.logPersistenceEvent(dataId, group, tenant, requestIpApp, time.getTime(),
-				SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
+				LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_PUB, content);
 
 		return true;
 	}

File: config/src/main/java/com/alibaba/nacos/config/server/controller/HealthController.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.nacos.config.server.service.DataSourceService;
 import com.alibaba.nacos.config.server.service.DynamicDataSource;
 import com.alibaba.nacos.config.server.service.ServerListService;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -28,6 +27,8 @@
 
 import javax.annotation.PostConstruct;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
+
 /**
  * health service
  * 
@@ -72,7 +73,7 @@ public String getHealth() {
 				sb.append("地址服务器 down. ");
 			}
 			if (!ServerListService.isInIpList()) {
-				sb.append("server ").append(SystemConfig.LOCAL_IP).append(" 不在地址服务器的IP列表中. ");
+				sb.append("server ").append(LOCAL_IP).append(" 不在地址服务器的IP列表中. ");
 			}
 		}
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java
Patch:
@@ -46,6 +46,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 import static com.alibaba.nacos.common.util.SystemUtils.STANDALONE_MODE;
 import static com.alibaba.nacos.config.server.utils.LogUtil.fatalLog;
 
@@ -354,7 +355,7 @@ public void run() {
     				}
     				// 删除
     				else {
-    					persistService.removeConfigInfo(dataId, group, tenant, SystemConfig.LOCAL_IP, null);
+    					persistService.removeConfigInfo(dataId, group, tenant, LOCAL_IP, null);
     					log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
     				}
     				

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeDatumService.java
Patch:
@@ -22,7 +22,6 @@
 import com.alibaba.nacos.config.server.model.Page;
 import com.alibaba.nacos.config.server.service.PersistService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -34,6 +33,7 @@
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 
 /**
  * 数据聚合服务。
@@ -88,7 +88,7 @@ public void addMergeTask(String dataId, String groupId, String tenant, String cl
     
 	public void mergeAll() {
 		for (ConfigInfoChanged item : persistService.findAllAggrGroup()) {
-			addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), SystemConfig.LOCAL_IP);
+			addMergeTask(item.getDataId(), item.getGroup(), item.getTenant(), LOCAL_IP);
 		}
 	}
     
@@ -131,7 +131,7 @@ public void run() {
     				}
     				// 删除
     				else {
-						persistService.removeConfigInfo(dataId, group, tenant, SystemConfig.LOCAL_IP, null);
+						persistService.removeConfigInfo(dataId, group, tenant, LOCAL_IP, null);
     					log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId + ", groupId=" + group);
     				}
     				

File: config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java
Patch:
@@ -26,7 +26,6 @@
 import com.alibaba.nacos.config.server.service.trace.ConfigTraceService;
 import com.alibaba.nacos.config.server.utils.ContentUtils;
 import com.alibaba.nacos.config.server.utils.StringUtils;
-import com.alibaba.nacos.config.server.utils.SystemConfig;
 import com.alibaba.nacos.config.server.utils.TimeUtils;
 import com.alibaba.nacos.config.server.utils.event.EventDispatcher;
 import org.slf4j.Logger;
@@ -36,6 +35,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import static com.alibaba.nacos.common.util.SystemUtils.LOCAL_IP;
 
 /**
  * Merge task processor
@@ -81,7 +81,7 @@ public boolean process(String taskType, AbstractTask task) {
                 log.info("[merge-ok] {}, {}, size={}, length={}, md5={}, content={}", dataId, group, datumList.size(),
                     cf.getContent().length(), cf.getMd5(), ContentUtils.truncateContent(cf.getContent()));
 
-                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(), SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
+                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(), LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_MERGE, cf.getContent());
             }
             // 删除
             else {
@@ -94,7 +94,7 @@ public boolean process(String taskType, AbstractTask task) {
                 log.warn("[merge-delete] delete config info because no datum. dataId=" + dataId
                         + ", groupId=" + group);
 
-                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(),  SystemConfig.LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
+                ConfigTraceService.logPersistenceEvent(dataId, group, tenant, null, time.getTime(),  LOCAL_IP, ConfigTraceService.PERSISTENCE_EVENT_REMOVE, null);
             }
 
             EventDispatcher.fireEvent(new ConfigDataChangeEvent(false, dataId, group, tenant, tag, time.getTime()));

File: console/src/main/java/com/alibaba/nacos/Nacos.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.alibaba.nacos;
 
-import java.net.UnknownHostException;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.web.servlet.ServletComponentScan;
@@ -28,7 +27,7 @@
 @ServletComponentScan
 public class Nacos {
 
-    public static void main(String[] args) throws UnknownHostException {
+    public static void main(String[] args) {
         SpringApplication.run(Nacos.class, args);
     }
 }
\ No newline at end of file

File: core/src/test/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -79,6 +79,7 @@ public void testDefaultProperties() {
     public void testDefaultPropertyNames() {
 
         assertPropertyNames(
+                "nacos.version",
                 "server.servlet.contextPath",
                 "server.port",
                 "server.tomcat.uri-encoding",

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -92,7 +92,7 @@ public JSONObject serviceList(HttpServletRequest request) throws Exception {
                 }
             }
 
-            serviceView.setStatus(String.valueOf(validCount));
+            serviceView.setHealthyInstanceCount(validCount);
 
             domArray.add(serviceView);
         }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -322,9 +322,7 @@ private static int tryConfigReadLock(HttpServletRequest request, HttpServletResp
 
 	private static boolean isUseTag(CacheItem cacheItem, String tag) {
 		if (cacheItem != null && cacheItem.tagMd5 != null && cacheItem.tagMd5.size() > 0) {
-			if (StringUtils.isNotBlank(tag) && cacheItem.tagMd5.containsKey(tag)) {
-				return true;
-			}
+			return StringUtils.isNotBlank(tag) && cacheItem.tagMd5.containsKey(tag);
 		}
 		return false;
 	}

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -102,7 +102,7 @@ public String register(HttpServletRequest request) throws Exception {
             mockHttpRequest.addParameter("cluster", StringUtils.EMPTY);
             mockHttpRequest.addParameter("defIPPort", cluster.getString("defaultPort"));
             mockHttpRequest.addParameter("defCkport", cluster.getString("defaultCheckPort"));
-            mockHttpRequest.addParameter("ipPort4Check", cluster.getString("userIPPort4Check"));
+            mockHttpRequest.addParameter("ipPort4Check", cluster.getString("useIPPort4Check"));
             mockHttpRequest.addParameter("clusterMetadata", cluster.getString("metadata"));
 
         }

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -44,7 +44,7 @@ public class DiskUtil {
 	static final String BASE_DIR = File.separator + "data" + File.separator + "config-data";
 	static final String TENANT_BASE_DIR = File.separator + "data" + File.separator + "tenant-config-data";
 	static final String BETA_DIR = File.separator + "data" + File.separator + "beta-data";
-	static final String TENANT_BETA_DIR = File.separator + "data " + File.separator + "tenant-beta-data";
+	static final String TENANT_BETA_DIR = File.separator + "data" + File.separator + "tenant-beta-data";
 	static final String TAG_DIR = File.separator + "data" + File.separator + "tag-data";
 	static final String TENANT_TAG_DIR = File.separator + "data" + File.separator + "tag-beta-data";
 	static String SERVERLIST_DIR = File.separator + "conf";

File: config/src/main/java/com/alibaba/nacos/config/server/service/DiskUtil.java
Patch:
@@ -44,7 +44,7 @@ public class DiskUtil {
 	static final String BASE_DIR = File.separator + "data" + File.separator + "config-data";
 	static final String TENANT_BASE_DIR = File.separator + "data" + File.separator + "tenant-config-data";
 	static final String BETA_DIR = File.separator + "data" + File.separator + "beta-data";
-	static final String TENANT_BETA_DIR = File.separator + "data " + File.separator + "tenant-beta-data";
+	static final String TENANT_BETA_DIR = File.separator + "data" + File.separator + "tenant-beta-data";
 	static final String TAG_DIR = File.separator + "data" + File.separator + "tag-data";
 	static final String TENANT_TAG_DIR = File.separator + "data" + File.separator + "tag-beta-data";
 	static String SERVERLIST_DIR = File.separator + "conf";

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigServletInner.java
Patch:
@@ -322,9 +322,7 @@ private static int tryConfigReadLock(HttpServletRequest request, HttpServletResp
 
 	private static boolean isUseTag(CacheItem cacheItem, String tag) {
 		if (cacheItem != null && cacheItem.tagMd5 != null && cacheItem.tagMd5.size() > 0) {
-			if (StringUtils.isNotBlank(tag) && cacheItem.tagMd5.containsKey(tag)) {
-				return true;
-			}
+			return StringUtils.isNotBlank(tag) && cacheItem.tagMd5.containsKey(tag);
 		}
 		return false;
 	}

File: test/src/test/java/com/alibaba/nacos/test/config/ConfigAPI_ITCase.java
Patch:
@@ -195,7 +195,7 @@ public void nacos_publishConfig_2() throws Exception {
      * @TCDescription : nacos_发布配置时包含特殊字符
      * @throws Exception
      */
-    @Test(timeout = 500*TIME_OUT)
+    @Test(timeout = 5*TIME_OUT)
     public void nacos_publishConfig_3() throws Exception {
         String content = "test" + SPECIAL_CHARACTERS;
         boolean result = iconfig.publishConfig(dataId, group, content);

File: api/src/main/java/com/alibaba/nacos/api/PropertyKeyConst.java
Patch:
@@ -30,5 +30,6 @@ public class PropertyKeyConst {
 	public final static String CONTEXT_PATH = "contextPath";
 	public final static String CLUSTER_NAME = "clusterName";
 	public final static String ENCODE = "encode";
+	public final static String NAMING_LOAD_CACHE_AT_START = "namingLoadCacheAtStart";
 	
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -155,6 +155,8 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
         beatInfo.setIp(instance.getIp());
         beatInfo.setPort(instance.getPort());
         beatInfo.setCluster(instance.getCluster().getName());
+        beatInfo.setWeight(instance.getWeight());
+        beatInfo.setMetadata(instance.getMetadata());
 
         beatReactor.addBeatInfo(serviceName, beatInfo);
 

File: naming/src/main/java/com/alibaba/nacos/naming/NamingApp.java
Patch:
@@ -24,7 +24,6 @@
  * @author xxc
  */
 @SpringBootApplication
-
 public class NamingApp {
 
     public static void main(String[] args) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -308,7 +308,8 @@ public JSONObject clientBeat(HttpServletRequest request) throws Exception {
         IpAddress ipAddress = new IpAddress();
         ipAddress.setPort(port);
         ipAddress.setIp(ip);
-        ipAddress.setWeight(1);
+        ipAddress.setWeight(clientBeat.getWeight());
+        ipAddress.setMetadata(clientBeat.getMetadata());
         ipAddress.setClusterName(clusterName);
 
         if (!virtualClusterDomain.allIPs().contains(ipAddress)) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -19,7 +19,6 @@
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.TypeReference;
-import com.alibaba.nacos.common.util.Pair;
 import com.alibaba.nacos.naming.misc.*;
 import com.alibaba.nacos.naming.monitor.PerformanceLoggerThread;
 import com.alibaba.nacos.naming.push.PushService;
@@ -180,7 +179,7 @@ public void updatedDom2(String domName, String serverIP) {
 
         JSONArray ipList = dom.getJSONArray("ips");
         Map<String, String> ipsMap = new HashMap<>(ipList.size());
-        for (int i=0; i<ipList.size(); i++) {
+        for (int i = 0; i < ipList.size(); i++) {
 
             String ip = ipList.getString(i);
             String[] strings = ip.split("_");
@@ -661,6 +660,7 @@ public void onChange(String key, String value) throws Exception {
                     try {
                         lock.lock();
                         condition.signalAll();
+                    } catch (Exception ignore) {
                     } finally {
                         lock.unlock();
                     }

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -294,7 +294,7 @@ String getFixedNameSuffix(String... serverIps) {
         String split = "";
         for (String serverIp : serverIps) {
             sb.append(split);
-            sb.append(serverIp);
+            sb.append(serverIp.replaceAll(":", "_"));
             split = "-";
         }
         return sb.toString();

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/CapacityManagementAspect.java
Patch:
@@ -425,9 +425,7 @@ public enum LimitType {
 		OVER_CLUSTER_QUOTA("超过集群配置个数上限", 429),
 		OVER_GROUP_QUOTA("超过该Group配置个数上限", 429),
 		OVER_TENANT_QUOTA("超过该租户配置个数上限", 429),
-		OVER_MAX_SIZE("超过配置的内容大小上限", 429),
-		OVER_MAX_AGGR_COUNT("超过聚合子配置个数上限", 429),
-		OVER_MAX_AGGR_SIZE("超过聚合数据子配置的内容大小上限", 429);
+		OVER_MAX_SIZE("超过配置的内容大小上限", 429);
 		public final String description;
 		public final int status;
 

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -155,6 +155,8 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
         beatInfo.setIp(instance.getIp());
         beatInfo.setPort(instance.getPort());
         beatInfo.setCluster(instance.getCluster().getName());
+        beatInfo.setWeight(instance.getWeight());
+        beatInfo.setMetadata(instance.getMetadata());
 
         beatReactor.addBeatInfo(serviceName, beatInfo);
 

File: naming/src/main/java/com/alibaba/nacos/naming/NamingApp.java
Patch:
@@ -24,7 +24,6 @@
  * @author xxc
  */
 @SpringBootApplication
-
 public class NamingApp {
 
     public static void main(String[] args) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -307,7 +307,8 @@ public JSONObject clientBeat(HttpServletRequest request) throws Exception {
         IpAddress ipAddress = new IpAddress();
         ipAddress.setPort(port);
         ipAddress.setIp(ip);
-        ipAddress.setWeight(1);
+        ipAddress.setWeight(clientBeat.getWeight());
+        ipAddress.setMetadata(clientBeat.getMetadata());
         ipAddress.setClusterName(clusterName);
 
         if (!virtualClusterDomain.allIPs().contains(ipAddress)) {

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -155,6 +155,8 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
         beatInfo.setIp(instance.getIp());
         beatInfo.setPort(instance.getPort());
         beatInfo.setCluster(instance.getCluster().getName());
+        beatInfo.setWeight(instance.getWeight());
+        beatInfo.setMetadata(instance.getMetadata());
 
         beatReactor.addBeatInfo(serviceName, beatInfo);
 

File: naming/src/main/java/com/alibaba/nacos/naming/NamingApp.java
Patch:
@@ -24,7 +24,6 @@
  * @author xxc
  */
 @SpringBootApplication
-
 public class NamingApp {
 
     public static void main(String[] args) {

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -308,7 +308,8 @@ public JSONObject clientBeat(HttpServletRequest request) throws Exception {
         IpAddress ipAddress = new IpAddress();
         ipAddress.setPort(port);
         ipAddress.setIp(ip);
-        ipAddress.setWeight(1);
+        ipAddress.setWeight(clientBeat.getWeight());
+        ipAddress.setMetadata(clientBeat.getMetadata());
         ipAddress.setClusterName(clusterName);
 
         if (!virtualClusterDomain.allIPs().contains(ipAddress)) {

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java
Patch:
@@ -294,7 +294,7 @@ String getFixedNameSuffix(String... serverIps) {
         String split = "";
         for (String serverIp : serverIps) {
             sb.append(split);
-            sb.append(serverIp);
+            sb.append(serverIp.replaceAll(":", "_"));
             split = "-";
         }
         return sb.toString();

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -126,4 +126,6 @@ public class Constants {
 	public static final String NAMING_INSTANCE_ID_SPLITTER = "#";
 	public static final int NAMING_INSTANCE_ID_SEG_COUNT = 4;
 	public static final String NAMING_HTTP_HEADER_SPILIER = "\\|";
+
+	public static final String NAMING_DEFAULT_CLUSTER_NAME = "DEFAULT";
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.api.naming.pojo;
 
+import com.alibaba.nacos.api.common.Constants;
+
 import java.util.HashMap;
 import java.util.Map;
 
@@ -31,7 +33,7 @@ public class Cluster {
     /**
      * Name of cluster
      */
-    private String name = "";
+    private String name;
 
     /**
      * Health check config of this cluster

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.client.naming;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.listener.EventListener;
@@ -132,7 +133,7 @@ public NacosNamingService(Properties properties) {
 
     @Override
     public void registerInstance(String serviceName, String ip, int port) throws NacosException {
-        registerInstance(serviceName, ip, port, StringUtils.EMPTY);
+        registerInstance(serviceName, ip, port, Constants.NAMING_DEFAULT_CLUSTER_NAME);
     }
 
     @Override
@@ -162,7 +163,7 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
 
     @Override
     public void deregisterInstance(String serviceName, String ip, int port) throws NacosException {
-        deregisterInstance(serviceName, ip, port, StringUtils.EMPTY);
+        deregisterInstance(serviceName, ip, port, Constants.NAMING_DEFAULT_CLUSTER_NAME);
     }
 
     @Override

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -69,7 +69,7 @@ public void run() {
                 for (Map.Entry<String, BeatInfo> entry : dom2Beat.entrySet()) {
                     BeatInfo beatInfo = entry.getValue();
                     executorService.schedule(new BeatTask(beatInfo), 0, TimeUnit.MILLISECONDS);
-                    LogUtils.LOG.debug("BEAT", "send beat to server: ", beatInfo.toString());
+                    LogUtils.LOG.debug("BEAT", "send beat to server: " + beatInfo.toString());
                 }
             } catch (Exception e) {
                 LogUtils.LOG.error("CLIENT-BEAT", "Exception while scheduling beat.", e);

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/LogUtils.java
Patch:
@@ -42,7 +42,7 @@ public class LogUtils {
 
         // logger init
         LOG = LoggerFactory.getLogger("com.alibaba.nacos.client.naming");
-        LOG.setLevel(Level.INFO);
+        LOG.setLevel(Level.DEBUG);
         LOG.setAdditivity(false);
         LOG.activateAppenderWithSizeRolling("nacos", "naming.log", "UTF-8", JM_LOG_FILE_SIZE, JM_LOG_RETAIN_COUNT);
     }

File: naming/src/main/java/com/alibaba/nacos/naming/NamingApp.java
Patch:
@@ -24,6 +24,7 @@
  * @author xxc
  */
 @SpringBootApplication
+
 public class NamingApp {
 
     public static void main(String[] args) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/IpAddress.java
Patch:
@@ -305,7 +305,7 @@ public void setTenant(String tenant) {
     }
 
     public String generateInstanceId() {
-        return getIp() + "#" + getPort() + "#" + getCluster().getName() + "#" + getService().getName();
+        return getIp() + "#" + getPort() + "#" + getClusterName() + "#" + getService().getName();
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -271,6 +271,8 @@ public void destroy() throws Exception {
             RaftCore.signalDelete(UtilsAndCommons.getIPListStoreKey(this));
         }
 
+        HealthCheckReactor.cancelCheck(clientBeatCheckTask);
+
         RaftCore.unlisten(UtilsAndCommons.getIPListStoreKey(this));
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -88,6 +88,7 @@ public class SwitchDomain implements Domain, RaftListener {
     /**
      * since which version, push can be enabled
      */
+    public String pushGoVersion = "0.1.0";
     public String pushJavaVersion = "0.1.0";
     public String pushPythonVersion = "0.4.3";
     public String pushCVersion = "1.0.12";

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchEntry.java
Patch:
@@ -29,6 +29,7 @@ public class SwitchEntry {
     public static final String PUSH_VERSION = "pushVersion";
     public static final String CLIENT_JAVA = "java";
     public static final String CLIENT_C = "c";
+    public static final String CLIENT_GO = "go";
     public static final String CLIENT_PYTHON = "python";
     public static final String CLIENT_TENGINE = "python";
     public static final String TRAFFIC_SCHEDULING_VERSION = "trafficSchedulingVersion";

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -33,7 +33,7 @@ public class Cluster {
     /**
      * Name of cluster
      */
-    private String name = Constants.NAMING_DEFAULT_CLUSTER_NAME;
+    private String name;
 
     /**
      * Health check config of this cluster

File: naming/src/main/java/com/alibaba/nacos/naming/core/IpAddress.java
Patch:
@@ -305,7 +305,7 @@ public void setTenant(String tenant) {
     }
 
     public String generateInstanceId() {
-        return getIp() + "#" + getPort() + "#" + getCluster().getName() + "#" + getService().getName();
+        return getIp() + "#" + getPort() + "#" + getClusterName() + "#" + getService().getName();
     }
 
     @Override

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1203,7 +1203,6 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
                 ipObj.put("metadata", ip.getMetadata());
                 ipObj.put("enabled", ip.isEnabled());
                 ipObj.put("weight", ip.getWeight());
-
                 hosts.add(ipObj);
 
             }
@@ -1216,6 +1215,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
         result.put("lastRefTime", System.currentTimeMillis());
         result.put("checksum", domObj.getChecksum() + System.currentTimeMillis());
         result.put("useSpecifiedURL", false);
+        result.put("clusters", clusters);
         result.put("env", env);
         result.put("metadata",domObj.getMetadata());
         return result;

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -69,7 +69,7 @@ public void run() {
                 for (Map.Entry<String, BeatInfo> entry : dom2Beat.entrySet()) {
                     BeatInfo beatInfo = entry.getValue();
                     executorService.schedule(new BeatTask(beatInfo), 0, TimeUnit.MILLISECONDS);
-                    LogUtils.LOG.debug("BEAT", "send beat to server: ", beatInfo.toString());
+                    LogUtils.LOG.debug("BEAT", "send beat to server: " + beatInfo.toString());
                 }
             } catch (Exception e) {
                 LogUtils.LOG.error("CLIENT-BEAT", "Exception while scheduling beat.", e);

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -271,6 +271,8 @@ public void destroy() throws Exception {
             RaftCore.signalDelete(UtilsAndCommons.getIPListStoreKey(this));
         }
 
+        HealthCheckReactor.cancelCheck(clientBeatCheckTask);
+
         RaftCore.unlisten(UtilsAndCommons.getIPListStoreKey(this));
     }
 

File: config/src/main/java/com/alibaba/nacos/config/server/aspect/CapacityManagementAspect.java
Patch:
@@ -425,9 +425,7 @@ public enum LimitType {
 		OVER_CLUSTER_QUOTA("超过集群配置个数上限", 429),
 		OVER_GROUP_QUOTA("超过该Group配置个数上限", 429),
 		OVER_TENANT_QUOTA("超过该租户配置个数上限", 429),
-		OVER_MAX_SIZE("超过配置的内容大小上限", 429),
-		OVER_MAX_AGGR_COUNT("超过聚合子配置个数上限", 429),
-		OVER_MAX_AGGR_SIZE("超过聚合数据子配置的内容大小上限", 429);
+		OVER_MAX_SIZE("超过配置的内容大小上限", 429);
 		public final String description;
 		public final int status;
 

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -126,4 +126,6 @@ public class Constants {
 	public static final String NAMING_INSTANCE_ID_SPLITTER = "#";
 	public static final int NAMING_INSTANCE_ID_SEG_COUNT = 4;
 	public static final String NAMING_HTTP_HEADER_SPILIER = "\\|";
+
+	public static final String NAMING_DEFAULT_CLUSTER_NAME = "DEFAULT";
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.api.naming.pojo;
 
+import com.alibaba.nacos.api.common.Constants;
+
 import java.util.HashMap;
 import java.util.Map;
 
@@ -31,7 +33,7 @@ public class Cluster {
     /**
      * Name of cluster
      */
-    private String name = "";
+    private String name = Constants.NAMING_DEFAULT_CLUSTER_NAME;
 
     /**
      * Health check config of this cluster

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.client.naming;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.listener.EventListener;
@@ -132,7 +133,7 @@ public NacosNamingService(Properties properties) {
 
     @Override
     public void registerInstance(String serviceName, String ip, int port) throws NacosException {
-        registerInstance(serviceName, ip, port, StringUtils.EMPTY);
+        registerInstance(serviceName, ip, port, Constants.NAMING_DEFAULT_CLUSTER_NAME);
     }
 
     @Override
@@ -162,7 +163,7 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
 
     @Override
     public void deregisterInstance(String serviceName, String ip, int port) throws NacosException {
-        deregisterInstance(serviceName, ip, port, StringUtils.EMPTY);
+        deregisterInstance(serviceName, ip, port, Constants.NAMING_DEFAULT_CLUSTER_NAME);
     }
 
     @Override

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/LogUtils.java
Patch:
@@ -42,7 +42,7 @@ public class LogUtils {
 
         // logger init
         LOG = LoggerFactory.getLogger("com.alibaba.nacos.client.naming");
-        LOG.setLevel(Level.INFO);
+        LOG.setLevel(Level.DEBUG);
         LOG.setAdditivity(false);
         LOG.activateAppenderWithSizeRolling("nacos", "naming.log", "UTF-8", JM_LOG_FILE_SIZE, JM_LOG_RETAIN_COUNT);
     }

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -126,4 +126,6 @@ public class Constants {
 	public static final String NAMING_INSTANCE_ID_SPLITTER = "#";
 	public static final int NAMING_INSTANCE_ID_SEG_COUNT = 4;
 	public static final String NAMING_HTTP_HEADER_SPILIER = "\\|";
+
+	public static final String NAMING_DEFAULT_CLUSTER_NAME = "DEFAULT";
 }

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.alibaba.nacos.api.naming.pojo;
 
+import com.alibaba.nacos.api.common.Constants;
+
 import java.util.HashMap;
 import java.util.Map;
 
@@ -31,7 +33,7 @@ public class Cluster {
     /**
      * Name of cluster
      */
-    private String name = "";
+    private String name = Constants.NAMING_DEFAULT_CLUSTER_NAME;
 
     /**
      * Health check config of this cluster

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -16,6 +16,7 @@
 package com.alibaba.nacos.client.naming;
 
 import com.alibaba.nacos.api.PropertyKeyConst;
+import com.alibaba.nacos.api.common.Constants;
 import com.alibaba.nacos.api.exception.NacosException;
 import com.alibaba.nacos.api.naming.NamingService;
 import com.alibaba.nacos.api.naming.listener.EventListener;
@@ -132,7 +133,7 @@ public NacosNamingService(Properties properties) {
 
     @Override
     public void registerInstance(String serviceName, String ip, int port) throws NacosException {
-        registerInstance(serviceName, ip, port, StringUtils.EMPTY);
+        registerInstance(serviceName, ip, port, Constants.NAMING_DEFAULT_CLUSTER_NAME);
     }
 
     @Override
@@ -162,7 +163,7 @@ public void registerInstance(String serviceName, Instance instance) throws Nacos
 
     @Override
     public void deregisterInstance(String serviceName, String ip, int port) throws NacosException {
-        deregisterInstance(serviceName, ip, port, StringUtils.EMPTY);
+        deregisterInstance(serviceName, ip, port, Constants.NAMING_DEFAULT_CLUSTER_NAME);
     }
 
     @Override

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/LogUtils.java
Patch:
@@ -42,7 +42,7 @@ public class LogUtils {
 
         // logger init
         LOG = LoggerFactory.getLogger("com.alibaba.nacos.client.naming");
-        LOG.setLevel(Level.INFO);
+        LOG.setLevel(Level.DEBUG);
         LOG.setAdditivity(false);
         LOG.activateAppenderWithSizeRolling("nacos", "naming.log", "UTF-8", JM_LOG_FILE_SIZE, JM_LOG_RETAIN_COUNT);
     }

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -204,7 +204,7 @@ public List<Instance> selectInstances(String serviceName, List<String> clusters,
         Iterator<Instance> iterator = list.iterator();
         while (iterator.hasNext()) {
             Instance instance = iterator.next();
-            if (healthy != instance.isHealthy() || !instance.isEnabled()) {
+            if (healthy != instance.isHealthy() || !instance.isEnabled() || instance.getWeight() <= 0) {
                 iterator.remove();
             }
         }

File: core/src/test/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -79,6 +79,7 @@ public void testDefaultProperties() {
     public void testDefaultPropertyNames() {
 
         assertPropertyNames(
+                "server.servlet.contextPath",
                 "server.port",
                 "server.tomcat.uri-encoding",
                 "spring.http.encoding.force",

File: core/src/test/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -79,6 +79,7 @@ public void testDefaultProperties() {
     public void testDefaultPropertyNames() {
 
         assertPropertyNames(
+                "server.servlet.contextPath",
                 "server.port",
                 "server.tomcat.uri-encoding",
                 "spring.http.encoding.force",

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -209,7 +209,7 @@ public void updatedDom2(String domName, String serverIP) {
             stringBuilder.append(ipAddress.toIPAddr()).append("_").append(ipAddress.isValid()).append(",");
         }
 
-        Loggers.EVT_LOG.info("IP-UPDATED", "dom: " + raftVirtualClusterDomain.getName() + ", ips: " + stringBuilder.toString());
+        Loggers.EVT_LOG.info("[IP-UPDATED] dom: " + raftVirtualClusterDomain.getName() + ", ips: " + stringBuilder.toString());
 
     }
 
@@ -640,7 +640,7 @@ public void onChange(String key, String value) throws Exception {
                         throw new IllegalStateException("dom parsing failed, json: " + value);
                     }
 
-                    Loggers.RAFT.info("RAFT-NOTIFIER", "datum is changed, key:" + key + ", value:" + value);
+                    Loggers.RAFT.info("[RAFT-NOTIFIER] datum is changed, key:" + key + ", value:" + value);
 
                     Domain oldDom = raftDomMap.get(dom.getName());
                     if (oldDom != null) {
@@ -672,7 +672,7 @@ public void onChange(String key, String value) throws Exception {
             public void onDelete(String key, String value) throws Exception {
                 String name = StringUtils.removeStart(key, UtilsAndCommons.DOMAINS_DATA_ID + ".");
                 Domain dom = raftDomMap.remove(name);
-                Loggers.RAFT.info("RAFT-NOTIFIER", "datum is deleted, key:" + key + ", value:" + value);
+                Loggers.RAFT.info("[RAFT-NOTIFIER] datum is deleted, key:" + key + ", value:" + value);
 
                 if (dom != null) {
                     dom.destroy();

File: naming/src/main/java/com/alibaba/nacos/naming/core/VirtualClusterDomain.java
Patch:
@@ -161,7 +161,7 @@ public void onChange(String key, String value) throws Exception {
             Loggers.SRV_LOG.warn("VIPSRV-DOM", "received empty iplist config for dom: " + name);
         }
 
-        Loggers.RAFT.info("VIPSRV-RAFT", "datum is changed, key: " + key + ", value: " + value);
+        Loggers.RAFT.info("[VIPSRV-RAFT] datum is changed, key: " + key + ", value: " + value);
 
         List<IpAddress> ips = JSON.parseObject(value, new TypeReference<List<IpAddress>>() {
         });
@@ -246,7 +246,7 @@ public void updateIPs(List<IpAddress> ips) {
             stringBuilder.append(ipAddress.toIPAddr()).append("_").append(ipAddress.isValid()).append(",");
         }
 
-        Loggers.EVT_LOG.info("IP-UPDATED", "dom: " + getName() + ", ips: " + stringBuilder.toString());
+        Loggers.EVT_LOG.info("[IP-UPDATED] dom: " + getName() + ", ips: " + stringBuilder.toString());
 
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/Switch.java
Patch:
@@ -58,7 +58,7 @@ public boolean matchUnlistenKey(String key) {
 
             @Override
             public void onChange(String key, String value) throws Exception {
-                Loggers.RAFT.info("VIPSRV-RAFT", "datum is changed, key: " + key + ", value: " + value);
+                Loggers.RAFT.info("[VIPSRV-RAFT] datum is changed, key: " + key + ", value: " + value);
                 if (StringUtils.isEmpty(value)) {
                     return;
                 }

File: naming/src/main/java/com/alibaba/nacos/naming/misc/UtilsAndCommons.java
Patch:
@@ -46,11 +46,11 @@ public class UtilsAndCommons {
 
     public static final String NACOS_SERVER_CONTEXT = "/nacos";
 
-    public static final String NACOS_SERVER_VERSION = NACOS_SERVER_CONTEXT + "/v1";
+    public static final String NACOS_SERVER_VERSION = "/v1";
 
     public static final String DEFAULT_NACOS_NAMING_CONTEXT = NACOS_SERVER_VERSION + "/ns";
 
-    public static final String NACOS_NAMING_CONTEXT = "${nacos.naming.context.path" + ":" + DEFAULT_NACOS_NAMING_CONTEXT + "}";
+    public static final String NACOS_NAMING_CONTEXT = DEFAULT_NACOS_NAMING_CONTEXT;
 
     public static final String NACOS_NAMING_CATALOG_CONTEXT = "/catalog";
 

File: naming/src/main/java/com/alibaba/nacos/naming/raft/PeerSet.java
Patch:
@@ -87,7 +87,7 @@ public boolean isLeader(String ip) {
             return true;
         }
 
-        Loggers.RAFT.info("IS LEADER", "leader: " + leader.ip + ", ip: " + ip);
+        Loggers.RAFT.info("[IS LEADER] leader: " + leader.ip + ", ip: " + ip);
 
         return StringUtils.equals(leader.ip, ip);
     }

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest.java
Patch:
@@ -35,7 +35,7 @@
  * @author dungu.zpf
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = NamingApp.class,
+@SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
         webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ServiceListTest {
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/IpAddress.java
Patch:
@@ -23,8 +23,6 @@
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import org.apache.commons.lang3.math.NumberUtils;
 
-import java.util.Map;
-import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -134,7 +134,7 @@ private void refreshSrvIfNeed() {
 
             List<String> list = getServerListFromEndpoint();
 
-            if (list.isEmpty()) {
+            if (CollectionUtils.isEmpty(list)) {
                 throw new Exception("Can not acquire vipserver list");
             }
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -92,7 +92,7 @@ private void initConfig() {
             try {
                 leader = RaftCore.getPeerSet().getLeader();
                 if (leader != null) {
-                    Loggers.SRV_LOG.info("[AUTO-INIT] no leader now, sleep 3 seconds and try again.");
+                    Loggers.SRV_LOG.info("[AUTO-INIT] leader is: " + leader.ip);
                     break;
                 }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/TcpSuperSenseProcessor.java
Patch:
@@ -47,7 +47,8 @@ public class TcpSuperSenseProcessor extends AbstractHealthCheckProcessor impleme
     /**
      * this value has been carefully tuned, do not modify unless you're confident
      */
-    public static final int NIO_THREAD_COUNT = Runtime.getRuntime().availableProcessors() / 2;
+    public static final int NIO_THREAD_COUNT = Runtime.getRuntime().availableProcessors() <= 1 ?
+            1 : Runtime.getRuntime().availableProcessors() / 2;
 
     /**
      * because some hosts doesn't support keep-alive connections, disabled temporarily

File: core/src/test/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -64,7 +64,6 @@ public void testNacosDefaultPropertySourcePresent() {
     public void testDefaultProperties() {
 
         // Web Server
-        assertPropertyEquals("server.servlet.context-path", "/nacos");
         assertPropertyEquals("server.port", "8848");
         assertPropertyEquals("server.tomcat.uri-encoding", "UTF-8");
 
@@ -80,7 +79,6 @@ public void testDefaultProperties() {
     public void testDefaultPropertyNames() {
 
         assertPropertyNames(
-                "server.servlet.context-path",
                 "server.port",
                 "server.tomcat.uri-encoding",
                 "spring.http.encoding.force",

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest.java
Patch:
@@ -35,7 +35,7 @@
  * @author dungu.zpf
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
+@SpringBootTest(classes = NamingApp.class,
         webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ServiceListTest {
 
@@ -45,10 +45,10 @@ public class ServiceListTest {
     private int port;
 
     @Before
-    public void init() throws Exception{
+    public void init() throws Exception {
         if (naming == null) {
             TimeUnit.SECONDS.sleep(10);
-            naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
+            naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }
 

File: core/src/test/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessorTest.java
Patch:
@@ -64,7 +64,6 @@ public void testNacosDefaultPropertySourcePresent() {
     public void testDefaultProperties() {
 
         // Web Server
-        assertPropertyEquals("server.servlet.context-path", "/nacos");
         assertPropertyEquals("server.port", "8848");
         assertPropertyEquals("server.tomcat.uri-encoding", "UTF-8");
 
@@ -80,7 +79,6 @@ public void testDefaultProperties() {
     public void testDefaultPropertyNames() {
 
         assertPropertyNames(
-                "server.servlet.context-path",
                 "server.port",
                 "server.tomcat.uri-encoding",
                 "spring.http.encoding.force",

File: test/src/test/java/com/alibaba/nacos/test/naming/ServiceListTest.java
Patch:
@@ -35,7 +35,7 @@
  * @author dungu.zpf
  */
 @RunWith(SpringRunner.class)
-@SpringBootTest(classes = NamingApp.class, properties = {"server.servlet.context-path=/nacos"},
+@SpringBootTest(classes = NamingApp.class,
         webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
 public class ServiceListTest {
 
@@ -45,10 +45,10 @@ public class ServiceListTest {
     private int port;
 
     @Before
-    public void init() throws Exception{
+    public void init() throws Exception {
         if (naming == null) {
             TimeUnit.SECONDS.sleep(10);
-            naming = NamingFactory.createNamingService("127.0.0.1"+":"+port);
+            naming = NamingFactory.createNamingService("127.0.0.1" + ":" + port);
         }
     }
 

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckStatus.java
Patch:
@@ -58,7 +58,7 @@ private static String buildKey(IpAddress ip) {
         try {
 
             String clusterName = ip.getCluster().getName();
-            String dom = ip.getCluster().getServiceName();
+            String dom = ip.serviceName();
             String datumKey = ip.getDatumKey();
             return dom + ":"
                     + clusterName + ":"

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -134,7 +134,7 @@ private void refreshSrvIfNeed() {
 
             List<String> list = getServerListFromEndpoint();
 
-            if (list.isEmpty()) {
+            if (CollectionUtils.isEmpty(list)) {
                 throw new Exception("Can not acquire vipserver list");
             }
 

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -474,9 +474,9 @@ private IpAddress getIPAddress(HttpServletRequest request) {
         String ip = BaseServlet.required(request, "ip");
         String port = BaseServlet.required(request, "port");
         String weight = BaseServlet.optional(request, "weight", "1");
-        String cluster = BaseServlet.optional(request, "cluster", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
+        String cluster = BaseServlet.optional(request, "cluster", StringUtils.EMPTY);
         if (StringUtils.isEmpty(cluster)) {
-            cluster = BaseServlet.required(request, "clusterName");
+            cluster = BaseServlet.optional(request, "clusterName", UtilsAndCommons.DEFAULT_CLUSTER_NAME);
         }
         boolean enabled = BooleanUtils.toBoolean(BaseServlet.optional(request, "enable", "true"));
 

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/CatalogController.java
Patch:
@@ -61,7 +61,7 @@ public JSONObject serviceList(HttpServletRequest request) throws Exception {
         String keyword = BaseServlet.optional(request, "keyword", StringUtils.EMPTY);
 
         List<Domain> doms = new ArrayList<>();
-        int total = domainsManager.getPagedDom(page, pageSize, keyword, doms);
+        int total = domainsManager.getPagedDom(page - 1, pageSize, keyword, doms);
 
         if (CollectionUtils.isEmpty(doms)) {
             result.put("serviceList", Collections.emptyList());

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/ServiceController.java
Patch:
@@ -22,6 +22,7 @@
 import com.alibaba.nacos.naming.healthcheck.HealthCheckMode;
 import com.alibaba.nacos.naming.misc.UtilsAndCommons;
 import com.alibaba.nacos.naming.web.BaseServlet;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.math.NumberUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -77,7 +78,7 @@ public String update(HttpServletRequest request) throws Exception {
         String serviceName = BaseServlet.required(request, "serviceName");
         float protectThreshold = NumberUtils.toFloat(BaseServlet.required(request, "protectThreshold"));
         String healthCheckMode = BaseServlet.required(request, "healthCheckMode");
-        String metadata = BaseServlet.required(request, "metadata");
+        String metadata = BaseServlet.optional(request, "metadata", StringUtils.EMPTY);
 
         VirtualClusterDomain domain = (VirtualClusterDomain) domainsManager.getDomain(serviceName);
         if (domain == null) {

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -158,6 +158,7 @@ public void registerService(String serviceName, Instance instance) throws NacosE
         params.put("ip", instance.getIp());
         params.put("port", String.valueOf(instance.getPort()));
         params.put("weight", String.valueOf(instance.getWeight()));
+        params.put("enable", String.valueOf(instance.isEnabled()));
         params.put("healthy", String.valueOf(instance.isHealthy()));
         params.put("metadata", JSON.toJSONString(instance.getMetadata()));
         if (instance.getService() == null) {

File: naming/src/main/java/com/alibaba/nacos/naming/core/IpAddress.java
Patch:
@@ -307,7 +307,7 @@ public void setTenant(String tenant) {
     }
 
     public String generateInstanceId() {
-        return getIp() + "#" + getPort() + "#" + getCluster().getName() + "#" + serviceName();
+        return getIp() + "#" + getPort() + "#" + getCluster().getName() + "#" + getService().getName();
     }
 
     @Override

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -125,4 +125,5 @@ public class Constants {
 
 	public static final String NAMING_INSTANCE_ID_SPLITTER = "#";
 	public static final int NAMING_INSTANCE_ID_SEG_COUNT = 4;
+	public static final String NAMING_HTTP_HEADER_SPILIER = "\\|";
 }

File: naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.alibaba.nacos.naming.healthcheck;
 
+import com.alibaba.nacos.api.naming.pojo.AbstractHealthChecker;
 import com.alibaba.nacos.naming.core.Cluster;
 import com.alibaba.nacos.naming.core.IpAddress;
 import com.alibaba.nacos.naming.core.VirtualClusterDomain;
@@ -107,7 +108,7 @@ public void process(HealthCheckTask task) {
                     continue;
                 }
 
-                AbstractHealthCheckConfig.Http healthChecker = (AbstractHealthCheckConfig.Http) cluster.getHealthChecker();
+                AbstractHealthChecker.Http healthChecker = (AbstractHealthChecker.Http) cluster.getHealthChecker();
 
                 int ckPort = cluster.isUseIPPort4Check() ? ip.getPort() : cluster.getDefCkport();
                 URL host = new URL("http://" + ip.getIp() + ":" + ckPort);

File: naming/src/main/java/com/alibaba/nacos/naming/misc/Loggers.java
Patch:
@@ -20,8 +20,6 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import java.io.File;
-
 /**
  * @author nacos
  */

File: naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java
Patch:
@@ -20,9 +20,7 @@
 import com.ning.http.client.Response;
 
 import java.net.HttpURLConnection;
-import java.util.Arrays;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 
 /**

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1067,7 +1067,7 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
 
         String dom = BaseServlet.required(request, "dom");
         VirtualClusterDomain domObj = (VirtualClusterDomain) domainsManager.getDomain(dom);
-        String agent = BaseServlet.optional(request, "header:Client-Version", StringUtils.EMPTY);
+        String agent = request.getHeader("Client-Version");
         String clusters = BaseServlet.optional(request, "clusters", StringUtils.EMPTY);
         String clientIP = BaseServlet.optional(request, "clientIP", StringUtils.EMPTY);
         Integer udpPort = Integer.parseInt(BaseServlet.optional(request, "udpPort", "0"));

File: core/src/main/java/com/alibaba/nacos/core/env/NacosDefaultPropertySourceEnvironmentPostProcessor.java
Patch:
@@ -97,7 +97,8 @@ private void appendPropertySource(CompositePropertySource propertySource, Resour
         ResourcePatternResolver resourcePatternResolver = new PathMatchingResourcePatternResolver(resourceLoader);
         Resource[] resources = resourcePatternResolver.getResources(RESOURCE_LOCATION_PATTERN);
         for (Resource resource : resources) {
-            if (resource.exists()) { // Add if exists
+            // Add if exists
+            if (resource.exists()) {
                 String internalName = String.valueOf(resource.getURL());
                 propertySource.addPropertySource(new ResourcePropertySource(internalName,
                         new EncodedResource(resource, FILE_ENCODING)));

File: config/src/main/java/com/alibaba/nacos/config/server/service/LocalDataSourceServiceImpl.java
Patch:
@@ -151,7 +151,7 @@ private List<String> loadSql(String sqlFile) throws Exception {
                 URL url = classLoader.getResource(sqlFile);
                 sqlFileIn = url.openStream();
             } else {
-                File file = new File(System.getProperty(NACOS_HOME_KEY) + File.separator + "conf" + File.separator + sqlFile);
+                File file = new File(System.getProperty(NACOS_HOME_KEY) + "/conf/schema.sql");
                 sqlFileIn = new FileInputStream(file);
             }
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -71,10 +71,8 @@ public class ServerListService implements ApplicationListener<WebServerInitializ
 	@Autowired
     private ServletContext servletContext;
 	
-	@Value("${server.port}")
     private int port;
-	
-	
+
 	@PostConstruct
 	public void init() {
 		serverPort = System.getProperty("nacos.server.port", "8848");

File: console/src/main/java/com/alibaba/nacos/console/model/Namespace.java
Patch:
@@ -14,7 +14,9 @@ public class Namespace {
 	private int quota;
 
 	private int configCount;
-    // 0 全局配置， 1 默认私有命名空间 ，2 自定义命名空间
+    /**
+     *  0 全局配置， 1 默认私有命名空间 ，2 自定义命名空间
+     */
 	private int type;
 
 	public String getNamespaceShowName() {

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -88,6 +88,7 @@ public class SwitchDomain implements Domain, RaftListener {
     /**
      * since which version, push can be enabled
      */
+    public String pushGoVersion = "0.1.0";
     public String pushJavaVersion = "4.1.0";
     public String pushPythonVersion = "0.4.3";
     public String pushCVersion = "1.0.12";

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchEntry.java
Patch:
@@ -29,6 +29,7 @@ public class SwitchEntry {
     public static final String PUSH_VERSION = "pushVersion";
     public static final String CLIENT_JAVA = "java";
     public static final String CLIENT_C = "c";
+    public static final String CLIENT_GO = "go";
     public static final String CLIENT_PYTHON = "python";
     public static final String CLIENT_TENGINE = "python";
     public static final String TRAFFIC_SCHEDULING_VERSION = "trafficSchedulingVersion";

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1430,7 +1430,9 @@ public String updateSwitch(HttpServletRequest request) throws Exception {
                     Switch.setPushPythonVersion(version);
                 } else if (StringUtils.equals(SwitchEntry.CLIENT_C, type)) {
                     Switch.setPushCVersion(version);
-                } else {
+                } else if (StringUtils.equals(SwitchEntry.CLIENT_GO, type)) {
+                    Switch.setPushGoVersion(version);
+                } else{
                     throw new IllegalArgumentException("unsupported client type: " + type);
                 }
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -88,6 +88,7 @@ public class SwitchDomain implements Domain, RaftListener {
     /**
      * since which version, push can be enabled
      */
+    public String pushGoVersion = "0.1.0";
     public String pushJavaVersion = "4.1.0";
     public String pushPythonVersion = "0.4.3";
     public String pushCVersion = "1.0.12";

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchEntry.java
Patch:
@@ -29,6 +29,7 @@ public class SwitchEntry {
     public static final String PUSH_VERSION = "pushVersion";
     public static final String CLIENT_JAVA = "java";
     public static final String CLIENT_C = "c";
+    public static final String CLIENT_GO = "go";
     public static final String CLIENT_PYTHON = "python";
     public static final String CLIENT_TENGINE = "python";
     public static final String TRAFFIC_SCHEDULING_VERSION = "trafficSchedulingVersion";

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1430,7 +1430,9 @@ public String updateSwitch(HttpServletRequest request) throws Exception {
                     Switch.setPushPythonVersion(version);
                 } else if (StringUtils.equals(SwitchEntry.CLIENT_C, type)) {
                     Switch.setPushCVersion(version);
-                } else {
+                } else if (StringUtils.equals(SwitchEntry.CLIENT_GO, type)) {
+                    Switch.setPushGoVersion(version);
+                } else{
                     throw new IllegalArgumentException("unsupported client type: " + type);
                 }
 

File: client/src/main/java/com/alibaba/nacos/client/naming/net/NamingProxy.java
Patch:
@@ -193,7 +193,7 @@ public String queryList(String serviceName, String clusters, boolean healthyOnly
         params.put("clusters", clusters);
         params.put("healthyOnly", String.valueOf(healthyOnly));
 
-        return reqAPI(UtilAndComs.NACOS_URL_BASE + "/instances", params, "GET");
+        return reqAPI(UtilAndComs.NACOS_URL_BASE + "/instance/list", params, "GET");
     }
 
     private String doRegDom(Map<String, String> params) throws Exception {

File: naming/src/main/java/com/alibaba/nacos/naming/controllers/InstanceController.java
Patch:
@@ -120,7 +120,7 @@ public String update(HttpServletRequest request) throws Exception {
         return addIP4Dom(request);
     }
 
-    @RequestMapping(value = "/instances", method = RequestMethod.GET)
+    @RequestMapping(value = {"/instances", "/instance/list"}, method = RequestMethod.GET)
     public JSONObject queryList(HttpServletRequest request) throws Exception {
 
         Map<String, String[]> params = new HashMap<>(request.getParameterMap());

File: naming/src/test/java/com/alibaba/nacos/naming/controllers/InstanceControllerTest.java
Patch:
@@ -80,7 +80,7 @@ public void registerInstance() throws Exception {
         IpAddress ipAddress = new IpAddress();
         ipAddress.setIp("1.1.1.1");
         ipAddress.setPort(9999);
-        List<IpAddress> ipList = new ArrayList<>();
+        List<IpAddress> ipList = new ArrayList<IpAddress>();
         ipList.add(ipAddress);
         domain.updateIPs(ipList, false);
 
@@ -127,7 +127,7 @@ public void getInstances() throws Exception {
         ipAddress.setIp("10.10.10.10");
         ipAddress.setPort(8888);
         ipAddress.setWeight(2.0);
-        List<IpAddress> ipList = new ArrayList<>();
+        List<IpAddress> ipList = new ArrayList<IpAddress>();
         ipList.add(ipAddress);
         domain.updateIPs(ipList, false);
 

File: naming/src/test/java/com/alibaba/nacos/naming/core/ClusterTest.java
Patch:
@@ -83,7 +83,7 @@ public void updateIps() {
         ipAddress2.setIp("1.1.1.1");
         ipAddress2.setPort(2345);
 
-        List<IpAddress> list = new ArrayList<>();
+        List<IpAddress> list = new ArrayList<IpAddress>();
         list.add(ipAddress1);
         list.add(ipAddress2);
 

File: naming/src/test/java/com/alibaba/nacos/naming/core/DomainTest.java
Patch:
@@ -81,7 +81,7 @@ public void updateIps() throws Exception {
         IpAddress ipAddress = new IpAddress();
         ipAddress.setIp("1.1.1.1");
         ipAddress.setPort(1234);
-        List<IpAddress> list = new ArrayList<>();
+        List<IpAddress> list = new ArrayList<IpAddress>();
         list.add(ipAddress);
 
         domain.onChange("iplist", JSON.toJSONString(list));

File: naming/src/test/java/com/alibaba/nacos/naming/core/DomainsManagerTest.java
Patch:
@@ -59,7 +59,7 @@ public void easyRemvIP4Dom() throws Exception {
 
         IpAddress ipAddress = new IpAddress();
         ipAddress.setIp("1.1.1.1");
-        List<IpAddress> ipList = new ArrayList<>();
+        List<IpAddress> ipList = new ArrayList<IpAddress>();
         ipList.add(ipAddress);
         domainsManager.addLock("nacos.test.1");
         domainsManager.easyRemvIP4Dom("nacos.test.1", ipList);

File: naming/src/test/java/com/alibaba/nacos/naming/web/APICommandsTest.java
Patch:
@@ -108,7 +108,7 @@ public void ip4Dom() throws Exception {
         IpAddress ipAddress = new IpAddress();
         ipAddress.setIp("1.1.1.1");
         ipAddress.setPort(1234);
-        List<IpAddress> list = new ArrayList<>();
+        List<IpAddress> list = new ArrayList<IpAddress>();
         list.add(ipAddress);
 
         domain.onChange("iplist", JSON.toJSONString(list));

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -625,7 +625,7 @@ private <T> ResponseEntity<T> request(String path, MultiValueMap<String, String>
 
         HttpHeaders headers = new HttpHeaders();
 
-        HttpEntity<?> entity = new HttpEntity(headers);
+        HttpEntity<?> entity = new HttpEntity<T>(headers);
 
         UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(this.base.toString() + path)
                 .queryParams(params);

File: client/src/main/java/com/alibaba/nacos/client/naming/core/EventDispatcher.java
Patch:
@@ -118,9 +118,7 @@ public void run() {
                     if (!CollectionUtils.isEmpty(listeners)) {
                         for (EventListener listener : listeners) {
                             List<Instance> hosts = Collections.unmodifiableList(serviceInfo.getHosts());
-                            if (!CollectionUtils.isEmpty(hosts)) {
-                                listener.onEvent(new NamingEvent(serviceInfo.getName(), hosts));
-                            }
+                            listener.onEvent(new NamingEvent(serviceInfo.getName(), hosts));
                         }
                     }
 

File: test/src/test/java/com/alibaba/nacos/test/naming/DeregisterInstance_ITCase.java
Patch:
@@ -63,6 +63,7 @@ public void init() throws Exception{
     @Test
     public void dregDomTest() throws Exception {
         String serviceName = randomDomainName();
+
         naming.registerInstance(serviceName, "127.0.0.1", TEST_PORT);
         naming.registerInstance(serviceName, "127.0.0.2", TEST_PORT);
 
@@ -87,9 +88,10 @@ public void dregDomTest() throws Exception {
      * 删除service中指定cluster的一个ip
      * @throws Exception
      */
-    @Test(expected = IllegalStateException.class)
+    @Test
     public void dregDomClusterTest() throws Exception {
         String serviceName = randomDomainName();
+
         naming.registerInstance(serviceName, "127.0.0.1", TEST_PORT, "c1");
         naming.registerInstance(serviceName, "127.0.0.2", TEST_PORT, "c2");
 

File: test/src/test/java/com/alibaba/nacos/test/naming/Params.java
Patch:
@@ -27,7 +27,7 @@ public class Params {
 
     public static Params newParams() {
         Params params = new Params();
-        params.paramMap = new LinkedMultiValueMap<>();
+        params.paramMap = new LinkedMultiValueMap<String, String>();
         return params;
     }
 

File: test/src/test/java/com/alibaba/nacos/test/naming/RestAPI_ITCase.java
Patch:
@@ -625,7 +625,7 @@ private <T> ResponseEntity<T> request(String path, MultiValueMap<String, String>
 
         HttpHeaders headers = new HttpHeaders();
 
-        HttpEntity<?> entity = new HttpEntity<>(headers);
+        HttpEntity<?> entity = new HttpEntity(headers);
 
         UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(this.base.toString() + path)
                 .queryParams(params);

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Instance.java
Patch:
@@ -78,7 +78,7 @@ public void setInstanceId(String instanceId) {
         this.instanceId = instanceId;
     }
 
-    public String getServiceName() {
+    public String serviceName() {
         String[] infos = instanceId.split(Constants.NAMING_INSTANCE_ID_SPLITTER);
         if (infos.length < Constants.NAMING_INSTANCE_ID_SEG_COUNT) {
             return null;

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerHttpAgent.java
Patch:
@@ -95,7 +95,7 @@ public HttpResult httpGet(String path, List<String> headers, List<String> paramV
 						new Object[] { serverListMgr.getCurrentServerAddr()});
 				throw ioe;
 			}
-		} while (System.currentTimeMillis() > endTime);
+		} while (System.currentTimeMillis() <= endTime);
 
 		log.error("NACOS-0002",
 				LoggerHelper.getErrorCodeStr("NACOS", "NACOS-0002", "环境问题", "no available server"));
@@ -137,7 +137,7 @@ public HttpResult httpPost(String path, List<String> headers, List<String> param
 				throw ioe;
 			}
 
-		} while (System.currentTimeMillis() > endTime);
+		} while (System.currentTimeMillis() <= endTime);
 
 		log.error("NACOS-0002",
 				LoggerHelper.getErrorCodeStr("NACOS", "NACOS-0002", "环境问题", "no available server"));
@@ -179,7 +179,7 @@ public HttpResult httpDelete(String path, List<String> headers, List<String> par
 				throw ioe;
 			}
 			
-		} while (System.currentTimeMillis() > endTime);
+		} while (System.currentTimeMillis() <= endTime);
 		
 		log.error("NACOS-0002",
 				LoggerHelper.getErrorCodeStr("NACOS", "NACOS-0002", "环境问题", "no available server"));

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -43,4 +43,6 @@ public class UtilAndComs {
     public static final String NACOS_NAMING_LOG_NAME = "com.alibaba.nacos.naming.log.filename";
 
     public static final String NACOS_NAMING_LOG_LEVEL = "com.alibaba.nacos.naming.log.level";
+
+    public static final String SERVER_ADDR_IP_SPLITER = ":";
 }

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -122,4 +122,7 @@ public class Constants {
 	public static final String CLIENT_REQUEST_TOKEN_HEADER = "Client-RequestToken";
 
 	public static final int ATOMIC_MAX_SIZE = 1000;
+
+	public static final String NAMING_INSTANCE_ID_SPLITTER = "#";
+	public static final int NAMING_INSTANCE_ID_SEG_COUNT = 4;
 }

File: naming/src/main/java/com/alibaba/nacos/naming/core/IpAddress.java
Patch:
@@ -381,7 +381,7 @@ public void setMetadata(Map<String, String> metadata) {
     }
 
     public String generateInstanceId() {
-        return this.ip + "-" + this.port + "-" + this.cluster.getName() + "-" + this.cluster.getDom().getName();
+        return this.ip + "#" + this.port + "#" + this.cluster.getName() + "#" + this.cluster.getDom().getName();
     }
 
     @Override

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -39,8 +39,6 @@ public class Constants {
 
 	public static final String DAILY_DOMAINNAME = "commonconfig.taobao.net";
 
-	public static final int DEFAULT_PORT = 8080;
-
 	public static final String NULL = "";
 
 	public static final String DATAID = "dataId";

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -46,7 +46,7 @@ public class ParamUtil {
         
         appName = AppNameUtils.getAppName();
         
-		String defaultServerPortTmp = "8080";
+		String defaultServerPortTmp = "8848";
 
 		defaultServerPort = System.getProperty("nacos.server.port", defaultServerPortTmp);
 		log.info("settings", "[req-serv] nacos-server port:{}", defaultServerPort);

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -48,8 +48,6 @@ public class Constants {
 
     public static final String DAILY_DOMAINNAME = "commonconfig.taobao.net";
 
-    public static final int DEFAULT_PORT = 8080;
-
     public static final String NULL = "";
 
     public static final String DATAID = "dataId";

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -77,7 +77,7 @@ public class ServerListService implements ApplicationListener<WebServerInitializ
 	
 	@PostConstruct
 	public void init() {
-		serverPort = System.getProperty("nacos.server.port", "8080");
+		serverPort = System.getProperty("nacos.server.port", "8848");
 		String envDomainName = System.getenv("address_server_domain");
 		if (StringUtils.isBlank(envDomainName)) {
 			domainName = System.getProperty("address.server.domain", "jmenv.tbsite.net");

File: example/src/main/java/com/alibaba/nacos/example/App.java
Patch:
@@ -30,7 +30,7 @@
 public class App {
     public static void main(String[] args) throws NacosException {
         Properties properties = new Properties();
-        properties.setProperty("serverAddr", "21.34.53.5:8080,21.34.53.6:8080");
+        properties.setProperty("serverAddr", "21.34.53.5:8848,21.34.53.6:8848");
         properties.setProperty("namespace", "quickStart");
         NamingService naming = NamingFactory.createNamingService(properties);
         naming.registerInstance("nacos.test.3", "11.11.11.11", 8888, "TEST1");

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -20,7 +20,7 @@
  */
 public class UtilAndComs {
 
-    public static final String VERSION = "Nacos-Client-0.1";
+    public static final String VERSION = "Nacos-Java-Client:v0.2.1";
 
     public static final String ENCODING = "UTF-8";
 

File: naming/src/main/java/com/alibaba/nacos/naming/misc/SwitchDomain.java
Patch:
@@ -40,7 +40,7 @@ public class SwitchDomain implements Domain, RaftListener {
 
     private long clientBeatInterval = 5 * 1000;
 
-    public long defaultCacheMillis = 1000L;
+    public long defaultCacheMillis = 10000L;
 
     public float distroThreshold = 0.7F;
 
@@ -88,7 +88,7 @@ public class SwitchDomain implements Domain, RaftListener {
     /**
      * since which version, push can be enabled
      */
-    public String pushJavaVersion = "4.1.0";
+    public String pushJavaVersion = "0.1.0";
     public String pushPythonVersion = "0.4.3";
     public String pushCVersion = "1.0.12";
     public String trafficSchedulingJavaVersion = "4.5.0";

File: naming/src/main/java/com/alibaba/nacos/naming/web/ApiCommands.java
Patch:
@@ -1066,8 +1066,9 @@ public JSONObject srvIPXT(HttpServletRequest request) throws Exception {
         }
 
         String dom = BaseServlet.required(request, "dom");
+
         VirtualClusterDomain domObj = (VirtualClusterDomain) domainsManager.getDomain(dom);
-        String agent = BaseServlet.optional(request, "header:Client-Version", StringUtils.EMPTY);
+        String agent = request.getHeader("Client-Version");
         String clusters = BaseServlet.optional(request, "clusters", StringUtils.EMPTY);
         String clientIP = BaseServlet.optional(request, "clientIP", StringUtils.EMPTY);
         Integer udpPort = Integer.parseInt(BaseServlet.optional(request, "udpPort", "0"));

File: api/src/main/java/com/alibaba/nacos/api/common/Constants.java
Patch:
@@ -39,8 +39,6 @@ public class Constants {
 
 	public static final String DAILY_DOMAINNAME = "commonconfig.taobao.net";
 
-	public static final int DEFAULT_PORT = 8080;
-
 	public static final String NULL = "";
 
 	public static final String DATAID = "dataId";

File: client/src/main/java/com/alibaba/nacos/client/utils/ParamUtil.java
Patch:
@@ -46,7 +46,7 @@ public class ParamUtil {
         
         appName = AppNameUtils.getAppName();
         
-		String defaultServerPortTmp = "8080";
+		String defaultServerPortTmp = "8848";
 
 		defaultServerPort = System.getProperty("nacos.server.port", defaultServerPortTmp);
 		log.info("settings", "[req-serv] nacos-server port:{}", defaultServerPort);

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -48,8 +48,6 @@ public class Constants {
 
     public static final String DAILY_DOMAINNAME = "commonconfig.taobao.net";
 
-    public static final int DEFAULT_PORT = 8080;
-
     public static final String NULL = "";
 
     public static final String DATAID = "dataId";

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -77,7 +77,7 @@ public class ServerListService implements ApplicationListener<WebServerInitializ
 	
 	@PostConstruct
 	public void init() {
-		serverPort = System.getProperty("nacos.server.port", "8080");
+		serverPort = System.getProperty("nacos.server.port", "8848");
 		String envDomainName = System.getenv("address_server_domain");
 		if (StringUtils.isBlank(envDomainName)) {
 			domainName = System.getProperty("address.server.domain", "jmenv.tbsite.net");

File: example/src/main/java/com/alibaba/nacos/example/App.java
Patch:
@@ -30,7 +30,7 @@
 public class App {
     public static void main(String[] args) throws NacosException {
         Properties properties = new Properties();
-        properties.setProperty("serverAddr", "21.34.53.5:8080,21.34.53.6:8080");
+        properties.setProperty("serverAddr", "21.34.53.5:8848,21.34.53.6:8848");
         properties.setProperty("namespace", "quickStart");
         NamingService naming = NamingFactory.createNamingService(properties);
         naming.registerInstance("nacos.test.3", "11.11.11.11", 8888, "TEST1");

File: client/src/main/java/com/alibaba/nacos/client/config/impl/ServerHttpAgent.java
Patch:
@@ -95,7 +95,7 @@ public HttpResult httpGet(String path, List<String> headers, List<String> paramV
 						new Object[] { serverListMgr.getCurrentServerAddr()});
 				throw ioe;
 			}
-		} while (System.currentTimeMillis() > endTime);
+		} while (System.currentTimeMillis() <= endTime);
 
 		log.error("NACOS-0002",
 				LoggerHelper.getErrorCodeStr("NACOS", "NACOS-0002", "环境问题", "no available server"));
@@ -137,7 +137,7 @@ public HttpResult httpPost(String path, List<String> headers, List<String> param
 				throw ioe;
 			}
 
-		} while (System.currentTimeMillis() > endTime);
+		} while (System.currentTimeMillis() <= endTime);
 
 		log.error("NACOS-0002",
 				LoggerHelper.getErrorCodeStr("NACOS", "NACOS-0002", "环境问题", "no available server"));
@@ -179,7 +179,7 @@ public HttpResult httpDelete(String path, List<String> headers, List<String> par
 				throw ioe;
 			}
 			
-		} while (System.currentTimeMillis() > endTime);
+		} while (System.currentTimeMillis() <= endTime);
 		
 		log.error("NACOS-0002",
 				LoggerHelper.getErrorCodeStr("NACOS", "NACOS-0002", "环境问题", "no available server"));

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -52,10 +52,12 @@ public BeatReactor(NamingProxy serverProxy) {
     }
 
     public void addBeatInfo(String dom, BeatInfo beatInfo) {
+        LogUtils.LOG.info("BEAT", "adding service:" + dom + " to beat map.");
         dom2Beat.put(dom, beatInfo);
     }
 
     public void removeBeatInfo(String dom) {
+        LogUtils.LOG.info("BEAT", "removing service:" + dom + " from beat map.");
         dom2Beat.remove(dom);
     }
 
@@ -67,7 +69,7 @@ public void run() {
                 for (Map.Entry<String, BeatInfo> entry : dom2Beat.entrySet()) {
                     BeatInfo beatInfo = entry.getValue();
                     executorService.schedule(new BeatTask(beatInfo), 0, TimeUnit.MILLISECONDS);
-                    LogUtils.LOG.info("BEAT", "send beat to server: ", beatInfo.toString());
+                    LogUtils.LOG.debug("BEAT", "send beat to server: ", beatInfo.toString());
                 }
             } catch (Exception e) {
                 LogUtils.LOG.error("CLIENT-BEAT", "Exception while scheduling beat.", e);

File: client/src/main/java/com/alibaba/nacos/client/naming/net/HttpClient.java
Patch:
@@ -70,7 +70,7 @@ public static HttpResult request(String url, List<String> headers, Map<String, S
             conn.setRequestMethod(method);
             setHeaders(conn, headers, encoding);
             conn.connect();
-            LogUtils.LOG.info("Request from server: " + url);
+            LogUtils.LOG.debug("Request from server: " + url);
             return getResult(conn);
         } catch (Exception e) {
             try {

File: client/src/main/java/com/alibaba/nacos/client/naming/utils/UtilAndComs.java
Patch:
@@ -41,4 +41,6 @@ public class UtilAndComs {
     public static final String DEFAULT_NAMING_ID = "default";
 
     public static final String NACOS_NAMING_LOG_NAME = "com.alibaba.nacos.naming.log.filename";
+
+    public static final String NACOS_NAMING_LOG_LEVEL = "com.alibaba.nacos.naming.log.level";
 }

File: client/src/main/java/com/alibaba/nacos/client/naming/NacosNamingService.java
Patch:
@@ -174,7 +174,7 @@ public List<Instance> getAllInstances(String serviceName, List<String> clusters)
         ServiceInfo serviceInfo = hostReactor.getServiceInfo(serviceName, StringUtils.join(clusters, ","), StringUtils.EMPTY, false);
         List<Instance> list;
         if (serviceInfo == null || CollectionUtils.isEmpty(list = serviceInfo.getHosts())) {
-            throw new IllegalStateException("no host to srv for dom: " + serviceName);
+            return new ArrayList<>();
         }
         return list;
     }
@@ -190,7 +190,7 @@ public List<Instance> selectInstances(String serviceName, List<String> clusters,
         ServiceInfo serviceInfo = hostReactor.getServiceInfo(serviceName, StringUtils.join(clusters, ","), StringUtils.EMPTY, false);
         List<Instance> list;
         if (serviceInfo == null || CollectionUtils.isEmpty(list = serviceInfo.getHosts())) {
-            throw new IllegalStateException("no host to srv for dom: " + serviceName);
+            return new ArrayList<>();
         }
 
         if (healthy) {

File: config/src/main/java/com/alibaba/nacos/config/server/service/ServerListService.java
Patch:
@@ -48,6 +48,7 @@
 import org.springframework.core.env.Environment;
 import org.springframework.stereotype.Service;
 
+import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.service.notify.NotifyService;
 import com.alibaba.nacos.config.server.service.notify.NotifyService.HttpResult;
 import com.alibaba.nacos.config.server.utils.LogUtil;
@@ -335,7 +336,7 @@ private void checkServerHealth() {
 		long startCheckTime = System.currentTimeMillis();
 		for (String serverIp : serverList) {
 			// Compatible with old codes,use status.taobao
-			String url = "http://" + serverIp + servletContext.getContextPath() + "/health";
+			String url = "http://" + serverIp + servletContext.getContextPath() + Constants.HEALTH_CONTROLLER_PATH;
 			// "/nacos/health";
 			HttpGet request = new HttpGet(url);
 			httpclient.execute(request, new AyscCheckServerHealthCallBack(serverIp));

File: api/src/main/java/com/alibaba/nacos/api/naming/pojo/Cluster.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.alibaba.nacos.api.naming.pojo;
 
-import com.alibaba.nacos.client.naming.utils.StringUtils;
-
 import java.util.HashMap;
 import java.util.Map;
 
@@ -33,7 +31,7 @@ public class Cluster {
     /**
      * Name of cluster
      */
-    private String name = StringUtils.EMPTY;
+    private String name = "";
 
     /**
      * Health check config of this cluster

File: config/src/main/java/com/alibaba/nacos/config/server/constant/Constants.java
Patch:
@@ -118,6 +118,8 @@ public class Constants {
 	public static final String HISTORY_CONTROLLER_PATH = BASE_PATH + "/history";
 
 	public static final String LISTENER_CONTROLLER_PATH = BASE_PATH + "/listener";
+	
+	public static final String NAMESPACE_CONTROLLER_PATH = BASE_PATH + "/namespaces";
     
     public static final String ENCODE = "UTF-8";
 

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -189,7 +189,7 @@ public SampleResult call() throws Exception {
 							.append(URLEncoder.encode(param.getValue(), Constants.ENCODE));
 				}
 
-				String urlAll = getUrl(ip, url) + paramUrl;
+				String urlAll = getUrl(ip, url) + "?" + paramUrl;
 				com.alibaba.nacos.config.server.service.notify.NotifyService.HttpResult result = NotifyService
 						.invokeURL(urlAll, null, Constants.ENCODE);
 				/**

File: config/src/main/java/com/alibaba/nacos/config/server/service/LocalDataSourceServiceImpl.java
Patch:
@@ -142,7 +142,7 @@ private List<String> loadSql(String sqlFile) throws Exception {
 			if (StringUtils.isBlank(System.getProperty(NACOS_HOME_KEY))) {
                 ClassLoader classLoader = getClass().getClassLoader();
                 URL url = classLoader.getResource(sqlFile);
-                sqlFileIn = new FileInputStream(url.getFile());
+                sqlFileIn = url.openStream();
             } else {
                 File file = new File(System.getProperty(NACOS_HOME_KEY) + File.separator + "conf" + File.separator + sqlFile);
                 sqlFileIn = new FileInputStream(file);

File: example/src/main/java/com/alibaba/nacos/example/ConfigExample.java
Patch:
@@ -33,8 +33,8 @@ public class ConfigExample {
 
 	public static void main(String[] args) throws NacosException, InterruptedException {
 		String serverAddr = "localhost";
-		String dataId = "testDataId";
-		String group = "testGroup";
+		String dataId = "test";
+		String group = "DEFAULT_GROUP";
 		Properties properties = new Properties();
 		properties.put("serverAddr", serverAddr);
 		ConfigService configService = NacosFactory.createConfigService(properties);
@@ -65,7 +65,7 @@ public Executor getExecutor() {
 
 		content = configService.getConfig(dataId, group, 5000);
 		System.out.println(content);
-		Thread.sleep(3000);
+		Thread.sleep(300000);
 
 	}
 }

File: config/src/main/java/com/alibaba/nacos/config/server/controller/ConfigController.java
Patch:
@@ -37,6 +37,7 @@
 import com.alibaba.nacos.config.server.constant.Constants;
 import com.alibaba.nacos.config.server.exception.NacosException;
 import com.alibaba.nacos.config.server.model.ConfigAdvanceInfo;
+import com.alibaba.nacos.config.server.model.ConfigAllInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfo;
 import com.alibaba.nacos.config.server.model.ConfigInfo4Beta;
 import com.alibaba.nacos.config.server.model.GroupkeyListenserStatus;
@@ -187,13 +188,13 @@ public void getConfig(HttpServletRequest request, HttpServletResponse response,
 	 */
 	@RequestMapping(params = "show=all", method = RequestMethod.GET)
 	@ResponseBody
-	public ConfigInfo detailConfig(HttpServletRequest request, HttpServletResponse response,
+	public ConfigAllInfo detailConfigInfo(HttpServletRequest request, HttpServletResponse response,
 			@RequestParam("dataId") String dataId, @RequestParam("group") String group,
 			@RequestParam(value = "tenant", required = false, defaultValue = StringUtils.EMPTY) String tenant)
 			throws IOException, ServletException, NacosException {
 		// check params
 		ParamUtils.checkParam(dataId, group, "datumId", "content");
-		return persistService.findConfigInfo(dataId, group, tenant);
+		return persistService.findConfigAllInfo(dataId, group, tenant);
 	}
 
 	/**

File: example/src/main/java/com/alibaba/nacos/example/ConfigExample.java
Patch:
@@ -35,8 +35,6 @@ public static void main(String[] args) throws NacosException, InterruptedExcepti
 		String serverAddr = "localhost";
 		String dataId = "test";
 		String group = "DEFAULT_GROUP";
-//		String dataId = "testDataId";
-//		String group = "testGroup";
 		Properties properties = new Properties();
 		properties.put("serverAddr", serverAddr);
 		ConfigService configService = NacosFactory.createConfigService(properties);

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -39,7 +39,6 @@ public class BeatReactor {
         thread.setName("com.alibaba.nacos.naming.beat.sender");
         return thread;
     });
-    ;
 
     private long clientBeatInterval = 10 * 1000;
 

File: naming/src/main/java/com/alibaba/nacos/naming/core/DomainsManager.java
Patch:
@@ -196,10 +196,10 @@ public void updatedDom2(String domName, String serverIP) {
             if (pair == null) {
                 continue;
             }
-            Boolean valid = Boolean.parseBoolean(pair.getValue0());
+            Boolean valid = Boolean.parseBoolean(pair.getKey());
             if (valid != ipAddress.isValid()) {
-                ipAddress.setValid(Boolean.parseBoolean(pair.getValue0()));
-                ipAddress.setInvalidType(pair.getValue1());
+                ipAddress.setValid(Boolean.parseBoolean(pair.getKey()));
+                ipAddress.setInvalidType(pair.getValue());
                 Loggers.EVT_LOG.info("{" + domName + "} {SYNC} " +
                         "{IP-" + (ipAddress.isValid() ? "ENABLED" : "DISABLED") + "} " + ipAddress.getIp()
                         + ":" + ipAddress.getPort() + "@" + ipAddress.getClusterName());

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -124,7 +124,9 @@ private List<SampleResult> runCollectionJob(String url, Map<String, String> para
 										ipList.get(i));
 					}
 				} catch (TimeoutException e) {
-					f.cancel(true);
+					if (f != null) {
+						f.cancel(true);
+					}
 					LogUtil.defaultLog.warn(
 							"get task result with TimeoutException: {} ", e
 									.getMessage());

File: config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java
Patch:
@@ -124,7 +124,9 @@ private List<SampleResult> runCollectionJob(String url, Map<String, String> para
 										ipList.get(i));
 					}
 				} catch (TimeoutException e) {
-					f.cancel(true);
+					if (f != null) {
+						f.cancel(true);
+					}
 					LogUtil.defaultLog.warn(
 							"get task result with TimeoutException: {} ", e
 									.getMessage());

File: client/src/main/java/com/alibaba/nacos/client/naming/beat/BeatReactor.java
Patch:
@@ -24,21 +24,22 @@
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.ScheduledThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
 /**
  * @author harold
  */
 public class BeatReactor {
 
-    private ScheduledExecutorService executorService = Executors.newSingleThreadScheduledExecutor(r -> {
+    private ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(1, r -> {
         Thread thread = new Thread(r);
         thread.setDaemon(true);
         thread.setName("com.alibaba.nacos.naming.beat.sender");
         return thread;
     });
+    ;
 
     private long clientBeatInterval = 10 * 1000;
 

