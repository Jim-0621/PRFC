File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/combination/CombinationRecordServiceImpl.java
Patch:
@@ -375,7 +375,7 @@ private List<CombinationRecordDO> updateBatchCombinationRecords(CombinationRecor
             CombinationRecordDO updateRecord = new CombinationRecordDO().setId(item.getId())
                     .setStatus(status.getStatus()).setEndTime(now);
             if (CombinationRecordStatusEnum.isSuccess(status.getStatus())) { // 虚拟成团完事更改状态成功后还需要把参与人数修改为成团需要人数
-                updateRecord.setUserCount(records.size());
+                updateRecord.setUserCount(records.size()).setVirtualGroup(Boolean.TRUE); // 标记为虚拟成团
             }
             updateRecords.add(updateRecord);
         });

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponServiceImpl.java
Patch:
@@ -178,6 +178,9 @@ public void invalidateCouponsByAdmin(List<Long> giveCouponIds, Long userId) {
      */
     @Transactional(rollbackFor = Exception.class)
     public void invalidateCoupon(Long couponId, Long userId) {
+        if (couponId == null || couponId <= 0) {
+            return;
+        }
         // 1.1 校验优惠券
         CouponDO coupon = couponMapper.selectByIdAndUserId(couponId, userId);
         if (coupon == null) {

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/ErrorCodeConstants.java
Patch:
@@ -37,6 +37,7 @@ public interface ErrorCodeConstants {
     ErrorCode ORDER_CREATE_FAIL_EXIST_UNPAID = new ErrorCode(1_011_000_032, "交易订单创建失败，原因：存在未付款订单");
     ErrorCode ORDER_CANCEL_PAID_FAIL = new ErrorCode(1_011_000_033, "交易订单取消支付失败，原因：订单不是【{}】状态");
     ErrorCode ORDER_PICK_UP_FAIL_NOT_VERIFY_USER = new ErrorCode(1_011_000_034, "交易订单自提失败，原因：你没有核销该门店订单的权限");
+    ErrorCode ORDER_CREATE_FAIL_INSUFFICIENT_USER_POINTS = new ErrorCode(1_011_000_035, "交易订单创建失败，原因：用户积分不足");
 
     // ========== After Sale 模块 1-011-000-100 ==========
     ErrorCode AFTER_SALE_NOT_FOUND = new ErrorCode(1_011_000_100, "售后单不存在");

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/brokerage/AppBrokerageUserController.java
Patch:
@@ -35,6 +35,7 @@
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
+import static java.util.Arrays.asList;
 
 @Tag(name = "用户 APP - 分销用户")
 @RestController
@@ -84,7 +85,7 @@ public CommonResult<AppBrokerageUserMySummaryRespVO> getBrokerageUserSummary() {
                 BrokerageRecordBizTypeEnum.ORDER, BrokerageRecordStatusEnum.SETTLEMENT, beginTime, endTime);
         // 统计用户提现的佣金
         Integer withdrawPrice = brokerageWithdrawService.getWithdrawSummaryListByUserId(Collections.singleton(userId),
-                        BrokerageWithdrawStatusEnum.AUDIT_SUCCESS).stream()
+                        asList(BrokerageWithdrawStatusEnum.AUDIT_SUCCESS, BrokerageWithdrawStatusEnum.WITHDRAW_SUCCESS)).stream()
                 .findFirst().map(BrokerageWithdrawSummaryRespBO::getPrice).orElse(0);
         // 统计分销用户数量（一级）
         Long firstBrokerageUserCount = brokerageUserService.getBrokerageUserCountByBindUserId(userId, 1);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/mysql/brokerage/BrokerageWithdrawMapper.java
Patch:
@@ -41,13 +41,14 @@ default int updateByIdAndStatus(Long id, Integer status, BrokerageWithdrawDO upd
                 .eq(BrokerageWithdrawDO::getStatus, status));
     }
 
-    default List<BrokerageWithdrawSummaryRespBO> selectCountAndSumPriceByUserIdAndStatus(Collection<Long> userIds, Integer status) {
+    default List<BrokerageWithdrawSummaryRespBO> selectCountAndSumPriceByUserIdAndStatus(Collection<Long> userIds,
+                                                                                         Collection<Integer> status) {
         List<Map<String, Object>> list = selectMaps(new MPJLambdaWrapper<BrokerageWithdrawDO>()
                 .select(BrokerageWithdrawDO::getUserId)
                 .selectCount(BrokerageWithdrawDO::getId, BrokerageWithdrawSummaryRespBO::getCount)
                 .selectSum(BrokerageWithdrawDO::getPrice)
                 .in(BrokerageWithdrawDO::getUserId, userIds)
-                .eq(BrokerageWithdrawDO::getStatus, status)
+                .in(BrokerageWithdrawDO::getStatus, status)
                 .groupBy(BrokerageWithdrawDO::getUserId));
         return BeanUtil.copyToList(list, BrokerageWithdrawSummaryRespBO.class);
         // selectJoinList有BUG，会与租户插件冲突：解析SQL时，发生异常 https://gitee.com/best_handsome/mybatis-plus-join/issues/I84GYW

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/brokerage/BrokerageWithdrawService.java
Patch:
@@ -74,7 +74,7 @@ public interface BrokerageWithdrawService {
      * @return 用户提现汇总 List
      */
     List<BrokerageWithdrawSummaryRespBO> getWithdrawSummaryListByUserId(Collection<Long> userIds,
-                                                                        BrokerageWithdrawStatusEnum status);
+                                                                        Collection<BrokerageWithdrawStatusEnum> status);
 
     /**
      * 按照 userId，汇总每个用户的提现
@@ -84,7 +84,7 @@ List<BrokerageWithdrawSummaryRespBO> getWithdrawSummaryListByUserId(Collection<L
      * @return 用户提现汇总 Map
      */
     default Map<Long, BrokerageWithdrawSummaryRespBO> getWithdrawSummaryMapByUserId(Set<Long> userIds,
-                                                                                    BrokerageWithdrawStatusEnum status) {
+                                                                                    Collection<BrokerageWithdrawStatusEnum> status) {
         return convertMap(getWithdrawSummaryListByUserId(userIds, status), BrokerageWithdrawSummaryRespBO::getUserId);
     }
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderQueryServiceImpl.java
Patch:
@@ -19,6 +19,7 @@
 import cn.iocoder.yudao.module.trade.dal.redis.RedisKeyConstants;
 import cn.iocoder.yudao.module.trade.enums.order.TradeOrderRefundStatusEnum;
 import cn.iocoder.yudao.module.trade.enums.order.TradeOrderStatusEnum;
+import cn.iocoder.yudao.module.trade.enums.order.TradeOrderTypeEnum;
 import cn.iocoder.yudao.module.trade.framework.delivery.core.client.ExpressClientFactory;
 import cn.iocoder.yudao.module.trade.framework.delivery.core.client.dto.ExpressTrackQueryReqDTO;
 import cn.iocoder.yudao.module.trade.framework.delivery.core.client.dto.ExpressTrackRespDTO;
@@ -174,9 +175,9 @@ public List<ExpressTrackRespDTO> getExpressTrackList(Long id) {
     }
 
     @Override
-    public int getSeckillProductCount(Long userId, Long activityId) {
+    public int getActivityProductCount(Long userId, Long activityId, TradeOrderTypeEnum type) {
         // 获得订单列表
-        List<TradeOrderDO> orders = tradeOrderMapper.selectListByUserIdAndSeckillActivityId(userId, activityId);
+        List<TradeOrderDO> orders = tradeOrderMapper.selectListByUserIdAndActivityId(userId, activityId, type);
         orders.removeIf(order -> TradeOrderStatusEnum.isCanceled(order.getStatus())); // 过滤掉【已取消】的订单
         if (CollUtil.isEmpty(orders)) {
             return 0;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradeSeckillActivityPriceCalculator.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.module.promotion.api.seckill.SeckillActivityApi;
 import cn.iocoder.yudao.module.promotion.api.seckill.dto.SeckillValidateJoinRespDTO;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionTypeEnum;
+import cn.iocoder.yudao.module.trade.enums.order.TradeOrderTypeEnum;
 import cn.iocoder.yudao.module.trade.service.order.TradeOrderQueryService;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateReqBO;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
@@ -60,7 +61,7 @@ private SeckillValidateJoinRespDTO validateJoinSeckill(Long userId, Long activit
         // 1. 校验是否可以参与秒杀
         SeckillValidateJoinRespDTO seckillActivity = seckillActivityApi.validateJoinSeckill(activityId, skuId, count);
         // 2. 校验总限购数量，目前只有 trade 有具体下单的数据，需要交给 trade 价格计算使用
-        int seckillProductCount = tradeOrderQueryService.getSeckillProductCount(userId, activityId);
+        int seckillProductCount = tradeOrderQueryService.getActivityProductCount(userId, activityId, TradeOrderTypeEnum.SECKILL);
         if (seckillProductCount + count > seckillActivity.getTotalLimitCount()) {
             throw exception(PRICE_CALCULATE_SECKILL_TOTAL_LIMIT_COUNT);
         }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -43,6 +43,7 @@ public interface ErrorCodeConstants {
     ErrorCode USER_IS_DISABLE = new ErrorCode(1_002_003_006, "名字为【{}】的用户已被禁用");
     ErrorCode USER_COUNT_MAX = new ErrorCode(1_002_003_008, "创建用户失败，原因：超过租户最大租户配额({})！");
     ErrorCode USER_IMPORT_INIT_PASSWORD = new ErrorCode(1_002_003_009, "初始密码不能为空");
+    ErrorCode USER_MOBILE_NOT_EXISTS = new ErrorCode(1_002_003_010, "该手机号尚未注册");
 
     // ========== 部门模块 1-002-004-000 ==========
     ErrorCode DEPT_NAME_DUPLICATE = new ErrorCode(1_002_004_000, "已经存在该名字的部门");

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSmsSendReqVO.java
Patch:
@@ -17,7 +17,7 @@
 @NoArgsConstructor
 @AllArgsConstructor
 @Builder
-public class AuthSmsSendReqVO {
+public class AuthSmsSendReqVO extends CaptchaVerificationReqVO {
 
     @Schema(description = "手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma")
     @NotEmpty(message = "手机号不能为空")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/user/UserSaveReqVO.java
Patch:
@@ -23,7 +23,7 @@ public class UserSaveReqVO {
 
     @Schema(description = "用户账号", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudao")
     @NotBlank(message = "用户账号不能为空")
-    @Pattern(regexp = "^[a-zA-Z0-9]{4,30}$", message = "用户账号由 数字、字母 组成")
+    @Pattern(regexp = "^[a-zA-Z0-9]+$", message = "用户账号由 数字、字母 组成")
     @Size(min = 4, max = 30, message = "用户账号长度为 4-30 个字符")
     @DiffLogField(name = "用户账号")
     private String username;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -86,6 +86,7 @@ public void updateRole(RoleSaveReqVO updateReqVO) {
         roleMapper.updateById(updateObj);
 
         // 3. 记录操作日志上下文
+        LogRecordContext.putVariable(DiffParseFunction.OLD_OBJECT, BeanUtils.toBean(role, RoleSaveReqVO.class));
         LogRecordContext.putVariable("role", role);
     }
 
@@ -118,7 +119,6 @@ public void deleteRole(Long id) {
         permissionService.processRoleDeleted(id);
 
         // 3. 记录操作日志上下文
-        LogRecordContext.putVariable(DiffParseFunction.OLD_OBJECT, BeanUtils.toBean(role, RoleSaveReqVO.class));
         LogRecordContext.putVariable("role", role);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/auth/AdminAuthServiceImplTest.java
Patch:
@@ -296,7 +296,8 @@ public void testValidateCaptcha_successWithDisable() {
     @Test
     public void testValidateCaptcha_constraintViolationException() {
         // 准备参数
-        AuthLoginReqVO reqVO = randomPojo(AuthLoginReqVO.class).setCaptchaVerification(null);
+        AuthLoginReqVO reqVO = randomPojo(AuthLoginReqVO.class);
+        reqVO.setCaptchaVerification(null);
 
         // mock 验证码打开
         ReflectUtil.setFieldValue(authService, "captchaEnable", true);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/FlowableUtils.java
Patch:
@@ -313,7 +313,6 @@ public static List<KeyValue<String, String>> getSummary(BpmProcessDefinitionInfo
                     j++;
                 }
             }
-            Collections.reverse(summaryList);
             return summaryList;
         }
         return null;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -621,8 +621,7 @@ private String createProcessInstance0(Long userId, ProcessDefinition definition,
         BpmModelMetaInfoVO.TitleSetting titleSetting = processDefinitionInfo.getTitleSetting();
         if (titleSetting != null && Boolean.TRUE.equals(titleSetting.getEnable())) {
             AdminUserRespDTO user = adminUserApi.getUser(userId);
-            // TODO @lesan：new HashMap 会更好哈。clone 感觉反射，不一定合适。
-            Map<String, Object> cloneVariables = ObjectUtil.clone(variables);
+            Map<String, Object> cloneVariables = new HashMap<>(variables);
             cloneVariables.put(BpmnVariableConstants.PROCESS_INSTANCE_VARIABLE_START_USER_ID, user.getNickname());
             cloneVariables.put(BpmnVariableConstants.PROCESS_START_TIME, DateUtil.now());
             cloneVariables.put(BpmnVariableConstants.PROCESS_DEFINITION_NAME, definition.getName().trim());

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelMetaInfoVO.java
Patch:
@@ -75,7 +75,7 @@ public class BpmModelMetaInfoVO {
     private Integer autoApprovalType;
 
     @Schema(description = "标题设置", example = "{}")
-    private CustomTitleSetting customTitleSetting;
+    private TitleSetting titleSetting;
 
     @Schema(description = "流程 ID 规则")
     @Data
@@ -101,11 +101,10 @@ public static class ProcessIdRule {
 
     }
 
-    // TODO @lesan：TitleSetting 会不会更好。因为 Custom 和 Setting 有点重叠
     @Schema(description = "标题设置")
     @Data
     @Valid
-    public static class CustomTitleSetting {
+    public static class TitleSetting {
 
         @Schema(description = "是否自定义", example = "false")
         @NotNull(message = "是否自定义不能为空")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/definition/BpmProcessDefinitionInfoDO.java
Patch:
@@ -174,6 +174,6 @@ public class BpmProcessDefinitionInfoDO extends BaseDO {
      * 标题设置
      */
     @TableField(typeHandler = JacksonTypeHandler.class)
-    private BpmModelMetaInfoVO.CustomTitleSetting customTitleSetting;
+    private BpmModelMetaInfoVO.TitleSetting titleSetting;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -618,15 +618,15 @@ private String createProcessInstance0(Long userId, ProcessDefinition definition,
             processInstanceBuilder.predefineProcessInstanceId(processIdRedisDAO.generate(processIdRule));
         }
         // 3.2 流程名称
-        BpmModelMetaInfoVO.CustomTitleSetting customTitleSetting = processDefinitionInfo.getCustomTitleSetting();
-        if (customTitleSetting != null && Boolean.TRUE.equals(customTitleSetting.getEnable())) {
+        BpmModelMetaInfoVO.TitleSetting titleSetting = processDefinitionInfo.getTitleSetting();
+        if (titleSetting != null && Boolean.TRUE.equals(titleSetting.getEnable())) {
             AdminUserRespDTO user = adminUserApi.getUser(userId);
             // TODO @lesan：new HashMap 会更好哈。clone 感觉反射，不一定合适。
             Map<String, Object> cloneVariables = ObjectUtil.clone(variables);
             cloneVariables.put(BpmnVariableConstants.PROCESS_INSTANCE_VARIABLE_START_USER_ID, user.getNickname());
             cloneVariables.put(BpmnVariableConstants.PROCESS_START_TIME, DateUtil.now());
             cloneVariables.put(BpmnVariableConstants.PROCESS_DEFINITION_NAME, definition.getName().trim());
-            processInstanceBuilder.name(StrUtil.format(customTitleSetting.getTitle(), cloneVariables));
+            processInstanceBuilder.name(StrUtil.format(titleSetting.getTitle(), cloneVariables));
         } else {
             processInstanceBuilder.name(definition.getName().trim());
         }

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/ErrorCodeConstants.java
Patch:
@@ -37,6 +37,7 @@ public interface ErrorCodeConstants {
     ErrorCode ORDER_CREATE_FAIL_EXIST_UNPAID = new ErrorCode(1_011_000_032, "交易订单创建失败，原因：存在未付款订单");
     ErrorCode ORDER_CANCEL_PAID_FAIL = new ErrorCode(1_011_000_033, "交易订单取消支付失败，原因：订单不是【{}】状态");
     ErrorCode ORDER_PICK_UP_FAIL_NOT_VERIFY_USER = new ErrorCode(1_011_000_034, "交易订单自提失败，原因：你没有核销该门店订单的权限");
+    ErrorCode ORDER_CREATE_FAIL_INSUFFICIENT_USER_POINTS = new ErrorCode(1_011_000_035, "交易订单创建失败，原因：用户积分不足");
 
     // ========== After Sale 模块 1-011-000-100 ==========
     ErrorCode AFTER_SALE_NOT_FOUND = new ErrorCode(1_011_000_100, "售后单不存在");

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskServiceImpl.java
Patch:
@@ -1190,7 +1190,7 @@ && getTask(task.getId()) == null) {
                         if (count > 0) {
                             // 自动通过
                             getSelf().approveTask(Long.valueOf(task.getAssignee()), new BpmTaskApproveReqVO().setId(task.getId())
-                                    .setReason(BpmReasonEnum.APPROVE_TYPE_AUTO_APPROVE.getReason()));
+                                    .setReason(BpmAutoApproveType.APPROVE_ALL.getName()));
                             return;
                         }
                     }
@@ -1212,7 +1212,7 @@ && getTask(task.getId()) == null) {
                         if (count > 0) {
                             // 自动通过
                             getSelf().approveTask(Long.valueOf(task.getAssignee()), new BpmTaskApproveReqVO().setId(task.getId())
-                                    .setReason(BpmReasonEnum.APPROVE_TYPE_AUTO_APPROVE.getReason()));
+                                    .setReason(BpmAutoApproveType.APPROVE_SEQUENT.getName()));
                             return;
                         }
                     }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/simple/BpmSimpleModelNodeVO.java
Patch:
@@ -112,8 +112,8 @@ public class BpmSimpleModelNodeVO {
     @Schema(description = "路由分支组", example = "[]")
     private List<RouterSetting> routerGroups;
 
-    @Schema(description = "默认分支 ID", example = "Flow_xxx", hidden = true) // 由后端生成，所以 hidden = true
-    private String defaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTER_BRANCH_NODE
+    @Schema(description = "路由分支默认分支 ID", example = "Flow_xxx", hidden = true) // 由后端生成，所以 hidden = true
+    private String routerDefaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTER_BRANCH_NODE
 
     @Schema(description = "任务监听器")
     @Valid

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/SimpleModelUtils.java
Patch:
@@ -233,7 +233,7 @@ private static void traverseBranchNodeToBuildSequenceFlow(Process process, BpmSi
             process.addFlowElement(sequenceFlow);
         // 4.2 如果是路由分支，需要连接后续节点为默认路由
         } else if (nodeType == BpmSimpleModelNodeType.ROUTER_BRANCH_NODE) {
-            SequenceFlow sequenceFlow = buildBpmnSequenceFlow(node.getId(), branchEndNodeId, node.getDefaultFlowId(),
+            SequenceFlow sequenceFlow = buildBpmnSequenceFlow(node.getId(), branchEndNodeId, node.getRouterDefaultFlowId(),
                     null, null);
             process.addFlowElement(sequenceFlow);
         }
@@ -719,8 +719,8 @@ public ExclusiveGateway convert(BpmSimpleModelNodeVO node) {
             exclusiveGateway.setId(node.getId());
 
             // 设置默认的序列流（条件）
-            node.setDefaultFlowId("Flow_" + IdUtil.fastUUID());
-            exclusiveGateway.setDefaultFlow(node.getDefaultFlowId());
+            node.setRouterDefaultFlowId("Flow_" + IdUtil.fastUUID());
+            exclusiveGateway.setDefaultFlow(node.getRouterDefaultFlowId());
             return exclusiveGateway;
         }
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/simple/BpmSimpleModelNodeVO.java
Patch:
@@ -110,7 +110,7 @@ public class BpmSimpleModelNodeVO {
     private ConditionSetting conditionSetting; // 仅用于条件节点 BpmSimpleModelNodeType.CONDITION_NODE
 
     @Schema(description = "路由分支组", example = "[]")
-    private List<RouterCondition> routerGroups;
+    private List<RouterSetting> routerGroups;
 
     @Schema(description = "默认分支 ID", example = "Flow_xxx", hidden = true) // 由后端生成，所以 hidden = true
     private String defaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTER_BRANCH_NODE
@@ -301,7 +301,7 @@ public static class DelaySetting {
     @Schema(description = "路由分支")
     @Data
     @Valid
-    public static class RouterCondition {
+    public static class RouterSetting {
 
         @Schema(description = "节点 Id", example = "Activity_xxx") // 跳转到该节点
         @NotEmpty(message = "节点 Id 不能为空")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/SimpleModelUtils.java
Patch:
@@ -200,7 +200,7 @@ private static void traverseBranchNodeToBuildSequenceFlow(Process process, BpmSi
         // 3. 遍历分支节点
         if (nodeType == BpmSimpleModelNodeType.ROUTER_BRANCH_NODE) {
             // 路由分支遍历
-            for (BpmSimpleModelNodeVO.RouterCondition router : node.getRouterGroups()) {
+            for (BpmSimpleModelNodeVO.RouterSetting router : node.getRouterGroups()) {
                 SequenceFlow sequenceFlow = RouteBranchNodeConvert.buildSequenceFlow(node.getId(), router);
                 process.addFlowElement(sequenceFlow);
             }
@@ -637,7 +637,7 @@ public static String buildConditionExpression(BpmSimpleModelNodeVO node) {
                     node.getConditionSetting().getConditionGroups());
         }
 
-        public static String buildConditionExpression(BpmSimpleModelNodeVO.RouterCondition router) {
+        public static String buildConditionExpression(BpmSimpleModelNodeVO.RouterSetting router) {
             return buildConditionExpression(router.getConditionType(), router.getConditionExpression(),
                     router.getConditionGroups());
         }
@@ -729,7 +729,7 @@ public BpmSimpleModelNodeType getType() {
             return BpmSimpleModelNodeType.ROUTER_BRANCH_NODE;
         }
 
-        public static SequenceFlow buildSequenceFlow(String nodeId, BpmSimpleModelNodeVO.RouterCondition router) {
+        public static SequenceFlow buildSequenceFlow(String nodeId, BpmSimpleModelNodeVO.RouterSetting router) {
             String conditionExpression = ConditionNodeConvert.buildConditionExpression(router);
             return buildBpmnSequenceFlow(nodeId, router.getNodeId(), null, null, conditionExpression);
         }

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/definition/BpmSimpleModelNodeType.java
Patch:
@@ -33,7 +33,7 @@ public enum BpmSimpleModelNodeType implements IntArrayValuable {
     CONDITION_BRANCH_NODE(51, "条件分支", "exclusiveGateway"),
     PARALLEL_BRANCH_NODE(52, "并行分支", "parallelGateway"),
     INCLUSIVE_BRANCH_NODE(53, "包容分支", "inclusiveGateway"),
-    ROUTE_BRANCH_NODE(54, "路由分支", "exclusiveGateway")
+    ROUTER_BRANCH_NODE(54, "路由分支", "exclusiveGateway")
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(BpmSimpleModelNodeType::getType).toArray();
@@ -51,7 +51,7 @@ public static boolean isBranchNode(Integer type) {
         return Objects.equals(CONDITION_BRANCH_NODE.getType(), type)
                 || Objects.equals(PARALLEL_BRANCH_NODE.getType(), type)
                 || Objects.equals(INCLUSIVE_BRANCH_NODE.getType(), type)
-                || Objects.equals(ROUTE_BRANCH_NODE.getType(), type);
+                || Objects.equals(ROUTER_BRANCH_NODE.getType(), type);
     }
 
     public static BpmSimpleModelNodeType valueOf(Integer type) {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/simple/BpmSimpleModelNodeVO.java
Patch:
@@ -117,10 +117,10 @@ public class BpmSimpleModelNodeVO {
     private ConditionGroups conditionGroups; // 仅用于条件节点 BpmSimpleModelNodeType.CONDITION_NODE
 
     @Schema(description = "路由分支组", example = "[]")
-    private List<RouteCondition> routerGroups;
+    private List<RouterCondition> routerGroups;
 
     @Schema(description = "默认分支 ID", example = "Flow_xxx")
-    private String defaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTE_BRANCH_NODE
+    private String defaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTER_BRANCH_NODE
 
     @Schema(description = "任务监听器")
     @Valid
@@ -293,7 +293,7 @@ public static class DelaySetting {
     @Schema(description = "路由分支")
     @Data
     @Valid
-    public static class RouteCondition {
+    public static class RouterCondition {
 
         @Schema(description = "节点 Id", example = "Activity_xxx") // 跳转到该节点
         @NotEmpty(message = "节点 Id 不能为空")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/simple/BpmSimpleModelNodeVO.java
Patch:
@@ -119,7 +119,6 @@ public class BpmSimpleModelNodeVO {
     @Schema(description = "路由分支组", example = "[]")
     private List<RouteCondition> routerGroups;
 
-    // TODO @lesan：这个目前前端是随机生成的。可以后端来随机么？
     @Schema(description = "默认分支 ID", example = "Flow_xxx")
     private String defaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTE_BRANCH_NODE
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/SimpleModelUtils.java
Patch:
@@ -728,6 +728,7 @@ public ExclusiveGateway convert(BpmSimpleModelNodeVO node) {
             exclusiveGateway.setId(node.getId());
 
             // 设置默认的序列流（条件）
+            node.setDefaultFlowId("Flow_" + IdUtil.fastUUID());
             exclusiveGateway.setDefaultFlow(node.getDefaultFlowId());
             return exclusiveGateway;
         }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/simple/BpmSimpleModelNodeVO.java
Patch:
@@ -280,9 +280,8 @@ public static class DelaySetting {
 
     }
 
-    // TODO @lesan：routeGroups
     @Schema(description = "路由分支组", example = "[]")
-    private List<RouteCondition> routeGroup;
+    private List<RouteCondition> routeGroups;
 
     @Schema(description = "默认分支id", example = "Flow_xxx")
     private String defaultFlowId; // 仅用于路由分支节点 BpmSimpleModelNodeType.ROUTE_BRANCH_NODE

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/SimpleModelUtils.java
Patch:
@@ -200,7 +200,7 @@ private static void traverseBranchNodeToBuildSequenceFlow(Process process, BpmSi
         // 3. 遍历分支节点
         if (nodeType == BpmSimpleModelNodeType.ROUTE_BRANCH_NODE) {
             // 路由分支遍历
-            for (BpmSimpleModelNodeVO.RouteCondition route : node.getRouteGroup()) {
+            for (BpmSimpleModelNodeVO.RouteCondition route : node.getRouteGroups()) {
                 SequenceFlow sequenceFlow = RouteBranchNodeConvert.buildSequenceFlow(node.getId(), route);
                 process.addFlowElement(sequenceFlow);
             }

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/definition/BpmBoundaryEventType.java
Patch:
@@ -14,7 +14,7 @@
 public enum BpmBoundaryEventType {
 
     USER_TASK_TIMEOUT(1, "用户任务超时"),
-    DELAY_TIMER_TIMEOUT(2, "触发器超时");
+    DELAY_TIMER_TIMEOUT(2, "延迟器超时");
 
     private final Integer type;
     private final String name;

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/definition/BpmDelayTimerType.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.Arrays;
 
 /**
- * BPM 延时器类型枚举
+ * BPM 延迟器类型枚举
  *
  * @author Lesan
  */

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/BpmTaskEventListener.java
Patch:
@@ -106,7 +106,7 @@ protected void timerFired(FlowableEngineEntityEvent event) {
                     BpmnModelConstants.USER_TASK_TIMEOUT_HANDLER_TYPE);
             String taskKey = boundaryEvent.getAttachedToRefId();
             taskService.processTaskTimeout(event.getProcessInstanceId(), taskKey, NumberUtils.parseInt(timeoutHandlerType));
-            // 2.2 触发器超时处理
+            // 2.2 延迟器超时处理
         } else if (ObjectUtil.equal(bpmTimerBoundaryEventType, BpmBoundaryEventType.DELAY_TIMER_TIMEOUT)) {
             String taskKey = boundaryEvent.getAttachedToRefId();
             taskService.processDelayTimerTimeout(event.getProcessInstanceId(), taskKey);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskService.java
Patch:
@@ -276,7 +276,7 @@ List<Task> getRunningTaskListByProcessInstanceId(String processInstanceId,
     void processTaskTimeout(String processInstanceId, String taskDefineKey, Integer handlerType);
 
     /**
-     * 处理 延时器 超时事件
+     * 处理 延迟器 超时事件
      *
      * @param processInstanceId 流程示例编号
      * @param taskDefineKey     任务 Key

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceImpl.java
Patch:
@@ -920,9 +920,7 @@ public void updateOrderGiveCouponIds(Long userId, Long orderId, List<Long> giveC
         // 1. 检验订单存在
         TradeOrderDO order = tradeOrderMapper.selectOrderByIdAndUserId(orderId, userId);
         if (order == null) {
-            log.error("[updateOrderGiveCouponIds][userId({}) orderId({}) giveCouponIds({}) {}]", userId, orderId,
-                    giveCouponIds, ORDER_NOT_FOUND);
-            return;
+            throw exception(ORDER_NOT_FOUND);
         }
 
         // 2. 更新订单赠送的优惠券编号列表

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/api/level/MemberLevelApiImpl.java
Patch:
@@ -9,6 +9,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.validation.annotation.Validated;
 
+import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.module.member.enums.ErrorCodeConstants.EXPERIENCE_BIZ_NOT_SUPPORT;
 
 /**
@@ -33,9 +34,7 @@ public MemberLevelRespDTO getMemberLevel(Long id) {
     public void addExperience(Long userId, Integer experience, Integer bizType, String bizId) {
         MemberExperienceBizTypeEnum bizTypeEnum = MemberExperienceBizTypeEnum.getByType(bizType);
         if (bizTypeEnum == null) {
-            log.error("[addExperience][userId({}) experience({}) bizType({}) bizId({}) {}]", userId, experience, bizType,
-                    bizId, EXPERIENCE_BIZ_NOT_SUPPORT);
-            return;
+            throw exception(EXPERIENCE_BIZ_NOT_SUPPORT);
         }
         memberLevelService.addExperience(userId, experience, bizTypeEnum, bizId);
     }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/api/point/MemberPointApiImpl.java
Patch:
@@ -41,9 +41,7 @@ public void reducePoint(Long userId, Integer point, Integer bizType, String bizI
         Assert.isTrue(point > 0);
         MemberPointBizTypeEnum bizTypeEnum = MemberPointBizTypeEnum.getByType(bizType);
         if (bizTypeEnum == null) {
-            log.error("[addPoint][userId({}) point({}) bizType({}) bizId({}) {}]", userId, point, bizType, bizId,
-                    POINT_RECORD_BIZ_NOT_SUPPORT);
-            return;
+            throw exception(POINT_RECORD_BIZ_NOT_SUPPORT);
         }
         memberPointRecordService.createPointRecord(userId, -point, bizTypeEnum, bizId);
     }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/point/MemberPointRecordServiceImpl.java
Patch:
@@ -82,9 +82,7 @@ public void createPointRecord(Long userId, Integer point, MemberPointBizTypeEnum
         // 2. 更新用户积分
         boolean success = memberUserService.updateUserPoint(userId, point);
         if (!success) {
-            log.error("[createPointRecord][userId({}) point({}) bizType({}) bizId({}) {}]", userId, point, bizType, bizId,
-                    USER_POINT_NOT_ENOUGH);
-            return;
+            throw exception(USER_POINT_NOT_ENOUGH);
         }
 
         // 3. 增加积分记录

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponServiceImpl.java
Patch:
@@ -152,7 +152,7 @@ public List<Long> takeCouponsByAdmin(Map<Long, Integer> giveCoupons, Long userId
                     findAndThen(userCouponIdsMap, userId, couponIds::addAll);
                 }
             } catch (Exception e) {
-                log.error("[takeCouponsByAdmin][coupon({}) 优惠券发放失败]", entry, e);
+                log.error("[takeCouponsByAdmin][coupon({}) 优惠券发放失败 userId({})]", entry, userId, e);
             }
         }
         return couponIds;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmPermissionUtils.java
Patch:
@@ -60,7 +60,8 @@ public static <T extends MPJLambdaWrapper<?>, S> void appendPermissionCondition(
             }
             query.innerJoin(CrmPermissionDO.class, on -> on.eq(CrmPermissionDO::getBizType, bizType)
                     .eq(CrmPermissionDO::getBizId, bizId)
-                    .in(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel(), CrmPermissionLevelEnum.WRITE.getLevel()).eq(CrmPermissionDO::getUserId,userId));
+                    .in(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel(), CrmPermissionLevelEnum.WRITE.getLevel())
+                    .eq(CrmPermissionDO::getUserId,userId));
             query.ne(ownerUserIdField, userId);
         }
         // 场景三：下属负责的数据（下属是负责人）

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmPermissionUtils.java
Patch:
@@ -60,7 +60,7 @@ public static <T extends MPJLambdaWrapper<?>, S> void appendPermissionCondition(
             }
             query.innerJoin(CrmPermissionDO.class, on -> on.eq(CrmPermissionDO::getBizType, bizType)
                     .eq(CrmPermissionDO::getBizId, bizId)
-                    .in(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel(), CrmPermissionLevelEnum.WRITE.getLevel()));
+                    .in(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel(), CrmPermissionLevelEnum.WRITE.getLevel()).eq(CrmPermissionDO::getUserId,userId));
             query.ne(ownerUserIdField, userId);
         }
         // 场景三：下属负责的数据（下属是负责人）

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmPermissionUtils.java
Patch:
@@ -60,7 +60,7 @@ public static <T extends MPJLambdaWrapper<?>, S> void appendPermissionCondition(
             }
             query.innerJoin(CrmPermissionDO.class, on -> on.eq(CrmPermissionDO::getBizType, bizType)
                     .eq(CrmPermissionDO::getBizId, bizId)
-                    .in(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel(), CrmPermissionLevelEnum.WRITE.getLevel()));
+                    .in(CrmPermissionDO::getLevel, CrmPermissionLevelEnum.READ.getLevel(), CrmPermissionLevelEnum.WRITE.getLevel()).eq(CrmPermissionDO::getUserId,userId));
             query.ne(ownerUserIdField, userId);
         }
         // 场景三：下属负责的数据（下属是负责人）

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/CrmContractServiceImpl.java
Patch:
@@ -270,7 +270,7 @@ public void transferContract(CrmContractTransferReqVO reqVO, Long userId) {
     }
 
     @Override
-    @LogRecord(type = CRM_CONTRACT_TYPE, subType = CRM_CONTRACT_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CONTRACT_TYPE, subType = CRM_CONTRACT_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CONTRACT_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CONTRACT, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateContractFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/BpmnModelUtils.java
Patch:
@@ -720,7 +720,7 @@ private static void simulateNextFlowElements(FlowElement currentElement, Map<Str
                             && evalConditionExpress(variables, flow.getConditionExpression()));
             if (matchSequenceFlow == null) {
                 matchSequenceFlow = CollUtil.findOne(gateway.getOutgoingFlows(),
-                        flow -> ObjUtil.notEqual(gateway.getDefaultFlow(), flow.getId()));
+                        flow -> ObjUtil.equal(gateway.getDefaultFlow(), flow.getId()));
                 // 特殊：没有默认的情况下，并且只有 1 个条件，则认为它是默认的
                 if (matchSequenceFlow == null && gateway.getOutgoingFlows().size() == 1) {
                     matchSequenceFlow = gateway.getOutgoingFlows().get(0);
@@ -742,7 +742,7 @@ private static void simulateNextFlowElements(FlowElement currentElement, Map<Str
                             && evalConditionExpress(variables, flow.getConditionExpression()));
             if (CollUtil.isEmpty(matchSequenceFlows)) {
                 matchSequenceFlows = CollUtil.filterNew(gateway.getOutgoingFlows(),
-                        flow -> ObjUtil.notEqual(gateway.getDefaultFlow(), flow.getId()));
+                        flow -> ObjUtil.equal(gateway.getDefaultFlow(), flow.getId()));
                 // 特殊：没有默认的情况下，并且只有 1 个条件，则认为它是默认的
                 if (CollUtil.isEmpty(matchSequenceFlows) && gateway.getOutgoingFlows().size() == 1) {
                     matchSequenceFlows = gateway.getOutgoingFlows();

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/CrmContractServiceImpl.java
Patch:
@@ -270,7 +270,7 @@ public void transferContract(CrmContractTransferReqVO reqVO, Long userId) {
     }
 
     @Override
-    @LogRecord(type = CRM_CONTRACT_TYPE, subType = CRM_CONTRACT_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CONTRACT_TYPE, subType = CRM_CONTRACT_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CONTRACT_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CONTRACT, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateContractFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -520,7 +520,8 @@ public BpmProcessInstanceBpmnModelViewRespVO getProcessInstanceBpmnModelView(Str
                 activityInstance -> activityInstance.getEndTime() != null
                         && ObjectUtil.equals(activityInstance.getActivityType(), BpmnXMLConstants.ELEMENT_SEQUENCE_FLOW));
         // 特殊：会签情况下，会有部分已完成（审批）、部分未完成（待审批），此时需要 finishedTaskActivityIds 移除掉
-        unfinishedTaskActivityIds.removeAll(finishedTaskActivityIds);
+        // unfinishedTaskActivityIds.removeAll(finishedTaskActivityIds);
+        finishedTaskActivityIds.removeAll(unfinishedTaskActivityIds);
         // 特殊：如果流程实例被拒绝，则需要计算是哪个活动节点。
         // 注意，只取最后一个。因为会存在多次拒绝的情况，拒绝驳回到指定节点
         Set<String> rejectTaskActivityIds = CollUtil.newHashSet();

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/job/TenantJobAspect.java
Patch:
@@ -46,7 +46,7 @@ public String around(ProceedingJoinPoint joinPoint, TenantJob tenantJob) {
             TenantUtils.execute(tenantId, () -> {
                 try {
                     Object result = joinPoint.proceed();
-                    results.put(tenantId, StrUtil.toStringOrNull(result));
+                    results.put(tenantId, StrUtil.toStringOrEmpty(result));
                 } catch (Throwable e) {
                     log.error("[execute][租户({}) 执行 Job 发生异常", tenantId, e);
                     results.put(tenantId, ExceptionUtil.getRootCauseMessage(e));

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/discount/vo/DiscountActivityBaseVO.java
Patch:
@@ -63,11 +63,11 @@ public static class Product {
         @Min(value = 0, message = "优惠金额需要大于等于 0")
         private Integer discountPrice;
 
-        @AssertTrue(message = "折扣百分比需要大于等于 1，小于等于 99")
+        @AssertTrue(message = "折扣百分比需要大于等于 0.01%，小于等于 99.99%")
         @JsonIgnore
         public boolean isDiscountPercentValid() {
             return ObjectUtil.notEqual(discountType, PromotionDiscountTypeEnum.PERCENT.getType())
-                    || (discountPercent != null && discountPercent >= 1 && discountPercent<= 99);
+                    || (discountPercent != null && discountPercent >= 1 && discountPercent <= 9999);
         }
 
         @AssertTrue(message = "优惠金额不能为空")

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/desensitize/core/slider/handler/AbstractSliderDesensitizationHandler.java
Patch:
@@ -17,7 +17,7 @@ public abstract class AbstractSliderDesensitizationHandler<T extends Annotation>
     public String desensitize(String origin, T annotation) {
         // 1. 判断是否禁用脱敏
         Object disable = SpringExpressionUtils.parseExpression(getDisable(annotation));
-        if (Boolean.FALSE.equals(disable)) {
+        if (Boolean.TRUE.equals(disable)) {
             return origin;
         }
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/definition/BpmProcessDefinitionInfoDO.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.bpm.dal.dataobject.definition;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
+import cn.iocoder.yudao.framework.mybatis.core.type.LongListTypeHandler;
 import cn.iocoder.yudao.framework.mybatis.core.type.StringListTypeHandler;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmModelFormTypeEnum;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmModelTypeEnum;
@@ -132,7 +133,7 @@ public class BpmProcessDefinitionInfoDO extends BaseDO {
      * 1. {@link #visible} 只是决定是否可见。即使不可见，还是可以发起
      * 2. startUserIds 决定某个用户是否可以发起。如果该用户不可发起，则他也是不可见的
      */
-    @TableField(typeHandler = StringListTypeHandler.class) // 为了可以使用 find_in_set 进行过滤
+    @TableField(typeHandler = LongListTypeHandler.class) // 为了可以使用 find_in_set 进行过滤
     private List<Long> startUserIds;
 
     /**

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/desensitize/core/slider/handler/AbstractSliderDesensitizationHandler.java
Patch:
@@ -17,7 +17,7 @@ public abstract class AbstractSliderDesensitizationHandler<T extends Annotation>
     public String desensitize(String origin, T annotation) {
         // 1. 判断是否禁用脱敏
         Object disable = SpringExpressionUtils.parseExpression(getDisable(annotation));
-        if (Boolean.FALSE.equals(disable)) {
+        if (Boolean.TRUE.equals(disable)) {
             return origin;
         }
 

File: yudao-module-ai/yudao-module-ai-biz/src/main/java/cn/iocoder/yudao/module/ai/controller/admin/knowledge/vo/knowledge/AiKnowledgeUpdateReqVO.java
Patch:
@@ -5,6 +5,8 @@
 import jakarta.validation.constraints.NotNull;
 import lombok.Data;
 
+import java.util.List;
+
 @Schema(description = "管理后台 - AI 知识库更新【我的】 Request VO")
 @Data
 public class AiKnowledgeUpdateReqVO {
@@ -21,7 +23,7 @@ public class AiKnowledgeUpdateReqVO {
     private String description;
 
     @Schema(description = "可见权限，只能选择哪些人可见", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,2,3")
-    private String visibilityPermissions;
+    private List<Long> visibilityPermissions;
 
     @Schema(description = "嵌入模型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "嵌入模型不能为空")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/spu/vo/AppProductSpuRespVO.java
Patch:
@@ -38,8 +38,8 @@ public class AppProductSpuRespVO {
     @Schema(description = "市场价，单位使用：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer marketPrice;
 
-    @Schema(description = "VIP 价格，单位使用：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "968") // 通过会员等级，计算出折扣后价格
-    private Integer vipPrice;
+//    @Schema(description = "VIP 价格，单位使用：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "968") // 通过会员等级，计算出折扣后价格
+//    private Integer vipPrice;
 
     @Schema(description = "库存", requiredMode = Schema.RequiredMode.REQUIRED, example = "666")
     private Integer stock;

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -15,6 +15,7 @@ public interface ErrorCodeConstants {
     ErrorCode DISCOUNT_ACTIVITY_UPDATE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_001_002, "限时折扣活动已关闭，不能修改");
     ErrorCode DISCOUNT_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED = new ErrorCode(1_013_001_003, "限时折扣活动未关闭，不能删除");
     ErrorCode DISCOUNT_ACTIVITY_CLOSE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_001_004, "限时折扣活动已关闭，不能重复关闭");
+    ErrorCode DISCOUNT_ACTIVITY_TYPE_NOT_EXISTS = new ErrorCode(1_013_001_005, "限时折扣活动类型不存在");
 
     // ========== Banner 相关 1-013-002-000 ============
     ErrorCode BANNER_NOT_EXISTS = new ErrorCode(1_013_002_000, "Banner 不存在");
@@ -45,6 +46,7 @@ public interface ErrorCodeConstants {
     ErrorCode REWARD_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED = new ErrorCode(1_013_006_003, "满减送活动未关闭，不能删除");
     ErrorCode REWARD_ACTIVITY_CLOSE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_006_004, "满减送活动已关闭，不能重复关闭");
     ErrorCode REWARD_ACTIVITY_SCOPE_EXISTS = new ErrorCode(1_013_006_005, "与该时间段已存在的满减送活动商品范围冲突");
+    ErrorCode REWARD_ACTIVITY_TYPE_NOT_EXISTS = new ErrorCode(1_013_006_006, "满减送活动类型不存在");
 
     // ========== TODO 空着 1-013-007-000 ============
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/api/discount/DiscountActivityApiImpl.java
Patch:
@@ -24,7 +24,7 @@ public class DiscountActivityApiImpl implements DiscountActivityApi {
 
     @Override
     public List<DiscountProductRespDTO> getMatchDiscountProductList(Collection<Long> skuIds) {
-        return DiscountActivityConvert.INSTANCE.convertList02(discountActivityService.getMatchDiscountProductList(skuIds));
+        return discountActivityService.getMatchDiscountProductList(skuIds);
     }
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/AppCouponController.java
Patch:
@@ -60,8 +60,8 @@ public CommonResult<Boolean> takeCoupon(@Valid @RequestBody AppCouponTakeReqVO r
     @Operation(summary = "获得匹配指定商品的优惠劵列表", description = "用于下单页，展示优惠劵列表")
     public CommonResult<List<AppCouponMatchRespVO>> getMatchCouponList(AppCouponMatchReqVO matchReqVO) {
         // todo: 优化：优惠金额倒序
-        List<CouponDO> list = couponService.getMatchCouponList(getLoginUserId(), matchReqVO);
-        return success(BeanUtils.toBean(list, AppCouponMatchRespVO.class));
+        List<AppCouponMatchRespVO> list = couponService.getMatchCouponList(getLoginUserId(), matchReqVO);
+        return success(list);
     }
 
     @GetMapping("/page")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/coupon/CouponConvert.java
Patch:
@@ -32,6 +32,8 @@ public interface CouponConvert {
 
     CouponRespDTO convert(CouponDO bean);
 
+    AppCouponMatchRespVO convert2(CouponDO bean);
+
     default CouponDO convert(CouponTemplateDO template, Long userId) {
         CouponDO couponDO = new CouponDO()
                 .setTemplateId(template.getId())

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/coupon/CouponTemplateMapper.java
Patch:
@@ -70,7 +70,7 @@ static Consumer<LambdaQueryWrapper<CouponTemplateDO>> buildCanTakeQueryConsumer(
                             .in(CouponTemplateDO::getTakeType, canTakeTypes) // 2. 领取方式一致
                             .and(ww -> ww.gt(CouponTemplateDO::getValidEndTime, LocalDateTime.now())  // 3.1 未过期
                                     .or().eq(CouponTemplateDO::getValidityType, CouponTemplateValidityTypeEnum.TERM.getType())) // 3.2 领取之后
-                            .apply(" (take_count < total_count OR total_count = -1 )"); // 4. 剩余数量大于 0，或者无限领取
+                            .apply(" (take_count < total_count OR total_count = -1 or total_count is null)"); // 4. 剩余数量大于 0，或者无限领取,或者是指定发放的券
         }
         return canTakeConsumer;
     }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/discount/DiscountProductMapper.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.promotion.dal.mysql.discount;
 
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
+import cn.iocoder.yudao.module.promotion.api.discount.dto.DiscountProductRespDTO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.discount.DiscountProductDO;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import org.apache.ibatis.annotations.Mapper;
@@ -31,7 +32,7 @@ default List<DiscountProductDO> selectListByActivityId(Collection<Long> activity
     }
 
     // TODO @zhangshuai：逻辑里，尽量避免写 join 语句哈，你可以看看这个查询，有什么办法优化？目前的一个思路，是分 2 次查询，性能也是 ok 的
-    List<DiscountProductDO> getMatchDiscountProductList(@Param("skuIds") Collection<Long> skuIds);
+    List<DiscountProductRespDTO> getMatchDiscountProductList(@Param("skuIds") Collection<Long> skuIds);
 
     /**
      * 查询出指定 spuId 的 spu 参加的活动最接近现在的一条记录。多个的话，一个 spuId 对应一个最近的活动编号

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponService.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.module.promotion.controller.admin.coupon.vo.coupon.CouponPageReqVO;
 import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponMatchReqVO;
+import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponMatchRespVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.coupon.CouponDO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.coupon.CouponTemplateDO;
 import cn.iocoder.yudao.module.promotion.enums.coupon.CouponTakeTypeEnum;
@@ -178,7 +179,7 @@ default Integer getTakeCount(Long templateId, Long userId) {
      * @param matchReqVO 匹配参数
      * @return 优惠券列表
      */
-    List<CouponDO> getMatchCouponList(Long userId, AppCouponMatchReqVO matchReqVO);
+    List<AppCouponMatchRespVO> getMatchCouponList(Long userId, AppCouponMatchReqVO matchReqVO);
 
     /**
      * 获取用户是否可以领取优惠券

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/discount/DiscountActivityService.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.promotion.service.discount;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
+import cn.iocoder.yudao.module.promotion.api.discount.dto.DiscountProductRespDTO;
 import cn.iocoder.yudao.module.promotion.controller.admin.discount.vo.DiscountActivityCreateReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.discount.vo.DiscountActivityPageReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.discount.vo.DiscountActivityUpdateReqVO;
@@ -27,7 +28,7 @@ public interface DiscountActivityService {
      * @param skuIds SKU 编号数组
      * @return 匹配的限时折扣商品
      */
-    List<DiscountProductDO> getMatchDiscountProductList(Collection<Long> skuIds);
+    List<DiscountProductRespDTO> getMatchDiscountProductList(Collection<Long> skuIds);
 
     /**
      * 创建限时折扣活动

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/discount/DiscountActivityServiceImpl.java
Patch:
@@ -6,6 +6,7 @@
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
+import cn.iocoder.yudao.module.promotion.api.discount.dto.DiscountProductRespDTO;
 import cn.iocoder.yudao.module.promotion.controller.admin.discount.vo.DiscountActivityBaseVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.discount.vo.DiscountActivityCreateReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.discount.vo.DiscountActivityPageReqVO;
@@ -49,7 +50,7 @@ public class DiscountActivityServiceImpl implements DiscountActivityService {
     private DiscountProductMapper discountProductMapper;
 
     @Override
-    public List<DiscountProductDO> getMatchDiscountProductList(Collection<Long> skuIds) {
+    public List<DiscountProductRespDTO> getMatchDiscountProductList(Collection<Long> skuIds) {
         return discountProductMapper.getMatchDiscountProductList(skuIds);
     }
 
@@ -130,7 +131,7 @@ private void validateDiscountActivityProductConflicts(Long id, List<DiscountActi
         List<DiscountProductDO> list = discountProductMapper.selectListByActivityId(id);
         // TODO @zhangshuai：一般简单的 stream 方法，建议是使用 CollectionUtils，例如说这里是 convertList 对把。
         List<Long> skuIds = list.stream().map(item -> item.getSkuId()).collect(Collectors.toList());
-        List<DiscountProductDO> matchDiscountProductList = getMatchDiscountProductList(skuIds);
+        List<DiscountProductRespDTO> matchDiscountProductList = getMatchDiscountProductList(skuIds);
         if (id != null) { // 排除自己这个活动
             matchDiscountProductList.removeIf(product -> id.equals(product.getActivityId()));
         }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/seckill/SeckillActivityService.java
Patch:
@@ -110,7 +110,7 @@ public interface SeckillActivityService {
     List<SeckillActivityDO> getSeckillActivityListByConfigIdAndStatus(Long configId, Integer status);
 
     /**
-     * 通过活动时段获取秒杀活动
+     * 通过活动时段获取开始的秒杀活动
      *
      * @param pageReqVO 请求
      * @return 秒杀活动列表

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/aftersale/AfterSaleServiceImpl.java
Patch:
@@ -371,8 +371,9 @@ private void createPayRefund(String userIp, AfterSaleDO afterSale) {
             @Override
             public void afterCommit() {
                 // 创建退款单
-                PayRefundCreateReqDTO createReqDTO = AfterSaleConvert.INSTANCE.convert(userIp, afterSale, tradeOrderProperties)
+                PayRefundCreateReqDTO createReqDTO = AfterSaleConvert.INSTANCE.convert(userIp, afterSale)
                         .setReason(StrUtil.format("退款【{}】", afterSale.getSpuName()));
+                createReqDTO.setAppKey(tradeOrderProperties.getPayAppKey());
                 Long payRefundId = payRefundApi.createRefund(createReqDTO);
                 // 更新售后单的退款单号
                 tradeAfterSaleMapper.updateById(new AfterSaleDO().setId(afterSale.getId()).setPayRefundId(payRefundId));

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/bo/TradePriceCalculateRespBO.java
Patch:
@@ -68,10 +68,11 @@ public class TradePriceCalculateRespBO {
      */
     private Long bargainActivityId;
 
+
     /**
      * 是否包邮
      */
-    private Boolean freeDelivery;
+    private Boolean freeDelivery = false;
 
     /**
      * 赠送的优惠劵

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java
Patch:
@@ -11,6 +11,7 @@
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.common.util.validation.ValidationUtils;
 import cn.iocoder.yudao.framework.datapermission.core.util.DataPermissionUtils;
+import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 import cn.iocoder.yudao.module.infra.api.config.ConfigApi;
 import cn.iocoder.yudao.module.infra.api.file.FileApi;
 import cn.iocoder.yudao.module.system.controller.admin.auth.vo.AuthRegisterReqVO;
@@ -104,6 +105,7 @@ public Long createUser(UserSaveReqVO createReqVO) {
         AdminUserDO user = BeanUtils.toBean(createReqVO, AdminUserDO.class);
         user.setStatus(CommonStatusEnum.ENABLE.getStatus()); // 默认开启
         user.setPassword(encodePassword(createReqVO.getPassword())); // 加密密码
+        user.setTenantId(TenantContextHolder.getRequiredTenantId());
         userMapper.insert(user);
         // 2.2 插入关联岗位
         if (CollectionUtil.isNotEmpty(user.getPostIds())) {

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/reward/vo/AppRewardActivityRespVO.java
Patch:
@@ -27,7 +27,7 @@ public class AppRewardActivityRespVO {
     private Integer productScope;
 
     @Schema(description = "商品 SPU 编号的数组", example = "1,2,3")
-    private List<Long> productSpuIds;
+    private List<Long> productScopeValues;
 
     @Schema(description = "优惠规则的数组")
     private List<RewardActivityBaseVO.Rule> rules;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillActivityMapper.java
Patch:
@@ -69,9 +69,11 @@ default int updateStockIncr(Long id, int count) {
                 .setSql("stock = stock + " + count));
     }
 
-    default PageResult<SeckillActivityDO> selectPage(AppSeckillActivityPageReqVO pageReqVO, Integer status) {
+    default PageResult<SeckillActivityDO> selectPage(AppSeckillActivityPageReqVO pageReqVO, Integer status, LocalDateTime dateTime) {
         return selectPage(pageReqVO, new LambdaQueryWrapperX<SeckillActivityDO>()
                 .eqIfPresent(SeckillActivityDO::getStatus, status)
+                .lt(SeckillActivityDO::getStartTime, dateTime)
+                .gt(SeckillActivityDO::getEndTime, dateTime)// 开始时间 < 指定时间 < 结束时间，也就是说获取指定时间段的活动
                 .apply(ObjectUtil.isNotNull(pageReqVO.getConfigId()), "FIND_IN_SET(" + pageReqVO.getConfigId() + ",config_ids) > 0"));
     }
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/seckill/SeckillActivityService.java
Patch:
@@ -110,7 +110,7 @@ public interface SeckillActivityService {
     List<SeckillActivityDO> getSeckillActivityListByConfigIdAndStatus(Long configId, Integer status);
 
     /**
-     * 通过活动时段获取秒杀活动
+     * 通过活动时段获取开始的秒杀活动
      *
      * @param pageReqVO 请求
      * @return 秒杀活动列表

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/seckill/SeckillActivityServiceImpl.java
Patch:
@@ -292,7 +292,7 @@ public List<SeckillActivityDO> getSeckillActivityListByConfigIdAndStatus(Long co
 
     @Override
     public PageResult<SeckillActivityDO> getSeckillActivityAppPageByConfigId(AppSeckillActivityPageReqVO pageReqVO) {
-        return seckillActivityMapper.selectPage(pageReqVO, CommonStatusEnum.ENABLE.getStatus());
+        return seckillActivityMapper.selectPage(pageReqVO, CommonStatusEnum.ENABLE.getStatus(),LocalDateTime.now());
     }
 
     @Override

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/bo/TradePriceCalculateRespBO.java
Patch:
@@ -72,7 +72,7 @@ public class TradePriceCalculateRespBO {
     /**
      * 是否包邮
      */
-    private Boolean freeDelivery;
+    private Boolean freeDelivery = false;
 
     /**
      * 赠送的优惠劵

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillActivityMapper.java
Patch:
@@ -98,10 +98,9 @@ default List<Map<String, Object>> selectSpuIdAndActivityIdMapsBySpuIdsAndStatus(
      * @param dateTime 指定日期
      * @return 活动列表
      */
-    default List<SeckillActivityDO> selectListByIdsAndDateTimeLt(Collection<Long> ids, List<Long> confidIds, LocalDateTime dateTime) {
+    default List<SeckillActivityDO> selectListByIdsAndDateTimeLt(Collection<Long> ids, LocalDateTime dateTime) {
         return selectList(new LambdaQueryWrapperX<SeckillActivityDO>()
                 .in(SeckillActivityDO::getId, ids)
-                .in(SeckillActivityDO::getConfigIds,confidIds)
                 .lt(SeckillActivityDO::getStartTime, dateTime)
                 .gt(SeckillActivityDO::getEndTime, dateTime)// 开始时间 < 指定时间 < 结束时间，也就是说获取指定时间段的活动
                 .orderByDesc(SeckillActivityDO::getCreateTime));

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillActivityMapper.java
Patch:
@@ -98,9 +98,10 @@ default List<Map<String, Object>> selectSpuIdAndActivityIdMapsBySpuIdsAndStatus(
      * @param dateTime 指定日期
      * @return 活动列表
      */
-    default List<SeckillActivityDO> selectListByIdsAndDateTimeLt(Collection<Long> ids, LocalDateTime dateTime) {
+    default List<SeckillActivityDO> selectListByIdsAndDateTimeLt(Collection<Long> ids, List<Long> confidIds, LocalDateTime dateTime) {
         return selectList(new LambdaQueryWrapperX<SeckillActivityDO>()
                 .in(SeckillActivityDO::getId, ids)
+                .in(SeckillActivityDO::getConfigIds,confidIds)
                 .lt(SeckillActivityDO::getStartTime, dateTime)
                 .gt(SeckillActivityDO::getEndTime, dateTime)// 开始时间 < 指定时间 < 结束时间，也就是说获取指定时间段的活动
                 .orderByDesc(SeckillActivityDO::getCreateTime));

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillActivityMapper.java
Patch:
@@ -51,7 +51,7 @@ default int updateStockDecr(Long id, int count) {
         Assert.isTrue(count > 0);
         return update(null, new LambdaUpdateWrapper<SeckillActivityDO>()
                 .eq(SeckillActivityDO::getId, id)
-                .gt(SeckillActivityDO::getStock, count)
+                .ge(SeckillActivityDO::getStock, count)
                 .setSql("stock = stock - " + count));
     }
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/coupon/CouponTemplateMapper.java
Patch:
@@ -70,7 +70,7 @@ static Consumer<LambdaQueryWrapper<CouponTemplateDO>> buildCanTakeQueryConsumer(
                             .in(CouponTemplateDO::getTakeType, canTakeTypes) // 2. 领取方式一致
                             .and(ww -> ww.gt(CouponTemplateDO::getValidEndTime, LocalDateTime.now())  // 3.1 未过期
                                     .or().eq(CouponTemplateDO::getValidityType, CouponTemplateValidityTypeEnum.TERM.getType())) // 3.2 领取之后
-                            .apply(" (take_count < total_count OR total_count = -1 )"); // 4. 剩余数量大于 0，或者无限领取
+                            .apply(" (take_count < total_count OR total_count = -1 or total_count is null)"); // 4. 剩余数量大于 0，或者无限领取,或者是指定发放的券
         }
         return canTakeConsumer;
     }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponServiceImpl.java
Patch:
@@ -288,6 +288,7 @@ private void validateCouponTemplateCanTake(CouponTemplateDO couponTemplate, Set<
         }
         // 校验剩余数量（仅在 CouponTakeTypeEnum.USER 用户领取时）
         if (CouponTakeTypeEnum.isUser(couponTemplate.getTakeCount())
+                && couponTemplate.getTotalCount() != null
                 && couponTemplate.getTakeCount() + userIds.size() > couponTemplate.getTotalCount()) {
             throw exception(COUPON_TEMPLATE_NOT_ENOUGH);
         }
@@ -310,7 +311,7 @@ private void validateCouponTemplateCanTake(CouponTemplateDO couponTemplate, Set<
      * @param couponTemplate 优惠劵模版
      */
     private void removeTakeLimitUser(Set<Long> userIds, CouponTemplateDO couponTemplate) {
-        if (couponTemplate.getTakeLimitCount() <= 0) {
+        if (couponTemplate.getTakeLimitCount() == null || couponTemplate.getTakeLimitCount() <= 0) {
             return;
         }
         // 查询已领过券的用户

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/api/discount/DiscountActivityApiImpl.java
Patch:
@@ -24,7 +24,7 @@ public class DiscountActivityApiImpl implements DiscountActivityApi {
 
     @Override
     public List<DiscountProductRespDTO> getMatchDiscountProductList(Collection<Long> skuIds) {
-        return DiscountActivityConvert.INSTANCE.convertList02(discountActivityService.getMatchDiscountProductList(skuIds));
+        return discountActivityService.getMatchDiscountProductList(skuIds);
     }
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/AppCouponController.java
Patch:
@@ -60,8 +60,8 @@ public CommonResult<Boolean> takeCoupon(@Valid @RequestBody AppCouponTakeReqVO r
     @Operation(summary = "获得匹配指定商品的优惠劵列表", description = "用于下单页，展示优惠劵列表")
     public CommonResult<List<AppCouponMatchRespVO>> getMatchCouponList(AppCouponMatchReqVO matchReqVO) {
         // todo: 优化：优惠金额倒序
-        List<CouponDO> list = couponService.getMatchCouponList(getLoginUserId(), matchReqVO);
-        return success(BeanUtils.toBean(list, AppCouponMatchRespVO.class));
+        List<AppCouponMatchRespVO> list = couponService.getMatchCouponList(getLoginUserId(), matchReqVO);
+        return success(list);
     }
 
     @GetMapping("/page")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/coupon/CouponConvert.java
Patch:
@@ -32,6 +32,8 @@ public interface CouponConvert {
 
     CouponRespDTO convert(CouponDO bean);
 
+    AppCouponMatchRespVO convert2(CouponDO bean);
+
     default CouponDO convert(CouponTemplateDO template, Long userId) {
         CouponDO couponDO = new CouponDO()
                 .setTemplateId(template.getId())

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponService.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.module.promotion.controller.admin.coupon.vo.coupon.CouponPageReqVO;
 import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponMatchReqVO;
+import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponMatchRespVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.coupon.CouponDO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.coupon.CouponTemplateDO;
 import cn.iocoder.yudao.module.promotion.enums.coupon.CouponTakeTypeEnum;
@@ -178,7 +179,7 @@ default Integer getTakeCount(Long templateId, Long userId) {
      * @param matchReqVO 匹配参数
      * @return 优惠券列表
      */
-    List<CouponDO> getMatchCouponList(Long userId, AppCouponMatchReqVO matchReqVO);
+    List<AppCouponMatchRespVO> getMatchCouponList(Long userId, AppCouponMatchReqVO matchReqVO);
 
     /**
      * 获取用户是否可以领取优惠券

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/aftersale/AfterSaleConvert.java
Patch:
@@ -43,8 +43,7 @@ public interface AfterSaleConvert {
             @Mapping(source = "afterSale.orderId", target = "merchantOrderId"),
             @Mapping(source = "afterSale.id", target = "merchantRefundId"),
             @Mapping(source = "afterSale.applyReason", target = "reason"),
-            @Mapping(source = "afterSale.refundPrice", target = "price"),
-            @Mapping(source = "orderProperties.payAppKey", target = "appKey")
+            @Mapping(source = "afterSale.refundPrice", target = "price")
     })
     PayRefundCreateReqDTO convert(String userIp, AfterSaleDO afterSale);
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/AppTradeOrderController.java
Patch:
@@ -282,7 +282,7 @@ public AppTradeProductSettlementRespVO.Sku calculateVipPrice(Long skuId, Integer
         return AppTradeProductSettlementRespVO.Sku.builder().
                 skuId(skuId).
                 type(PromotionTypeEnum.MEMBER_LEVEL.getType()).
-                price(price - newPrice).build();
+                price(newPrice).build();
     }
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/aftersale/AfterSaleConvert.java
Patch:
@@ -37,7 +37,7 @@ public interface AfterSaleConvert {
             @Mapping(target = "creator", ignore = true),
             @Mapping(target = "updater", ignore = true),
     })
-    PayRefundCreateReqDTO convert(String userIp, AfterSaleDO afterSale);
+    AfterSaleDO convert(AppAfterSaleCreateReqVO createReqVO, TradeOrderItemDO tradeOrderItem);
 
     @Mappings({
             @Mapping(source = "afterSale.orderId", target = "merchantOrderId"),
@@ -46,8 +46,7 @@ public interface AfterSaleConvert {
             @Mapping(source = "afterSale.refundPrice", target = "price"),
             @Mapping(source = "orderProperties.payAppKey", target = "appKey")
     })
-    PayRefundCreateReqDTO convert(String userIp, AfterSaleDO afterSale,
-                                  TradeOrderProperties orderProperties);
+    PayRefundCreateReqDTO convert(String userIp, AfterSaleDO afterSale);
 
     MemberUserRespVO convert(MemberUserRespDTO bean);
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/aftersale/AfterSaleConvert.java
Patch:
@@ -37,7 +37,7 @@ public interface AfterSaleConvert {
             @Mapping(target = "creator", ignore = true),
             @Mapping(target = "updater", ignore = true),
     })
-    AfterSaleDO convert(AppAfterSaleCreateReqVO createReqVO, TradeOrderItemDO tradeOrderItem);
+    PayRefundCreateReqDTO convert(String userIp, AfterSaleDO afterSale);
 
     @Mappings({
             @Mapping(source = "afterSale.orderId", target = "merchantOrderId"),

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/aftersale/AfterSaleServiceImpl.java
Patch:
@@ -371,8 +371,9 @@ private void createPayRefund(String userIp, AfterSaleDO afterSale) {
             @Override
             public void afterCommit() {
                 // 创建退款单
-                PayRefundCreateReqDTO createReqDTO = AfterSaleConvert.INSTANCE.convert(userIp, afterSale, tradeOrderProperties)
+                PayRefundCreateReqDTO createReqDTO = AfterSaleConvert.INSTANCE.convert(userIp, afterSale)
                         .setReason(StrUtil.format("退款【{}】", afterSale.getSpuName()));
+                createReqDTO.setAppKey(tradeOrderProperties.getPayAppKey());
                 Long payRefundId = payRefundApi.createRefund(createReqDTO);
                 // 更新售后单的退款单号
                 tradeAfterSaleMapper.updateById(new AfterSaleDO().setId(afterSale.getId()).setPayRefundId(payRefundId));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java
Patch:
@@ -11,6 +11,7 @@
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.common.util.validation.ValidationUtils;
 import cn.iocoder.yudao.framework.datapermission.core.util.DataPermissionUtils;
+import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 import cn.iocoder.yudao.module.infra.api.config.ConfigApi;
 import cn.iocoder.yudao.module.infra.api.file.FileApi;
 import cn.iocoder.yudao.module.system.controller.admin.auth.vo.AuthRegisterReqVO;
@@ -104,6 +105,7 @@ public Long createUser(UserSaveReqVO createReqVO) {
         AdminUserDO user = BeanUtils.toBean(createReqVO, AdminUserDO.class);
         user.setStatus(CommonStatusEnum.ENABLE.getStatus()); // 默认开启
         user.setPassword(encodePassword(createReqVO.getPassword())); // 加密密码
+        user.setTenantId(TenantContextHolder.getRequiredTenantId());
         userMapper.insert(user);
         // 2.2 插入关联岗位
         if (CollectionUtil.isNotEmpty(user.getPostIds())) {

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/AppTradeOrderController.java
Patch:
@@ -106,9 +106,9 @@ public CommonResult<List<AppTradeProductSettlementRespVO>> settlementProduct(@Re
 
                 if(skuDiscount != null && skuVip != null){
                     if(skuDiscount.getPrice() > skuVip.getPrice()){
-                        skus.add(skuDiscount);
-                    }else{
                         skus.add(skuVip);
+                    }else{
+                        skus.add(skuDiscount);
                     }
                 }else if(skuDiscount != null){
                     skus.add(skuDiscount);
@@ -335,7 +335,7 @@ private AppTradeProductSettlementRespVO.Reward calculateReward(Long spuId) {
                 RewardActivityMatchRespDTO.Rule rule = rewardActivityMatchRespDTO.getRules().get(0);
                 return AppTradeProductSettlementRespVO.Reward.builder().
                         rewardActivity("满" + rule.getLimit() / 100 + (Objects.equals(rewardActivityMatchRespDTO.getConditionType(), PromotionConditionTypeEnum.PRICE.getType())?"元":"件"+"减") +rule.getDiscountPrice() / 100)
-                        .rewardId(rewardActivityMatchRespDTO.getId()).build();
+                        .id(rewardActivityMatchRespDTO.getId()).build();
             }
         }
         return null;

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/operatelog/core/service/LogRecordServiceImpl.java
Patch:
@@ -9,7 +9,6 @@
 import com.mzt.logapi.beans.LogRecord;
 import com.mzt.logapi.service.ILogRecordService;
 import lombok.extern.slf4j.Slf4j;
-import org.springframework.scheduling.annotation.Async;
 
 import javax.annotation.Resource;
 import javax.servlet.http.HttpServletRequest;
@@ -29,7 +28,6 @@ public class LogRecordServiceImpl implements ILogRecordService {
     private OperateLogApi operateLogApi;
 
     @Override
-    @Async
     public void record(LogRecord logRecord) {
         OperateLogCreateReqDTO reqDTO = new OperateLogCreateReqDTO();
         try {
@@ -42,7 +40,7 @@ public void record(LogRecord logRecord) {
             fillRequestFields(reqDTO);
 
             // 2. 异步记录日志
-            operateLogApi.createOperateLog(reqDTO);
+            operateLogApi.createOperateLogAsync(reqDTO);
         } catch (Throwable ex) {
             // 由于 @Async 异步调用，这里打印下日志，更容易跟进
             log.error("[record][url({}) log({}) 发生异常]", reqDTO.getRequestUrl(), reqDTO, ex);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/definition/BpmModelConvert.java
Patch:
@@ -13,6 +13,7 @@
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionRespVO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmCategoryDO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmFormDO;
+import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.service.definition.dto.BpmModelMetaInfoRespDTO;
 import org.flowable.common.engine.impl.db.SuspensionState;
 import org.flowable.engine.repository.Deployment;
@@ -55,7 +56,7 @@ default BpmModelRespVO buildModel(Model model,
         BpmModelMetaInfoRespDTO metaInfo = buildMetaInfo(model);
         BpmModelRespVO modelVO = buildModel0(model, metaInfo, null, null, null, null);
         if (ArrayUtil.isNotEmpty(bpmnBytes)) {
-            modelVO.setBpmnXml(new String(bpmnBytes));
+            modelVO.setBpmnXml(BpmnModelUtils.getBpmnXml(bpmnBytes));
         }
         return modelVO;
     }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivableMapper.java
Patch:
@@ -92,7 +92,7 @@ default Map<Long, BigDecimal> selectReceivablePriceMapByContractId(Collection<Lo
         List<Map<String, Object>> result = selectMaps(new QueryWrapper<CrmReceivableDO>()
                 .select("contract_id, SUM(price) AS total_price")
                 .in("audit_status", CrmAuditStatusEnum.DRAFT.getStatus(), // 草稿 + 审批中 + 审批通过
-                        CrmAuditStatusEnum.PROCESS, CrmAuditStatusEnum.APPROVE.getStatus())
+                        CrmAuditStatusEnum.PROCESS.getStatus(), CrmAuditStatusEnum.APPROVE.getStatus())
                 .groupBy("contract_id")
                 .in("contract_id", contractIds));
         // 获得金额

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/enums/codegen/CodegenFrontTypeEnum.java
Patch:
@@ -14,7 +14,6 @@ public enum CodegenFrontTypeEnum {
 
     VUE2(10), // Vue2 Element UI 标准模版
     VUE3(20), // Vue3 Element Plus 标准模版
-    VUE3_SCHEMA(21), // Vue3 Element Plus Schema 模版
     VUE3_VBEN(30), // Vue3 VBEN 模版
     ;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentServiceImpl.java
Patch:
@@ -67,7 +67,7 @@ public Long createComment(ProductCommentCreateReqDTO createReqDTO) {
         // 校验 SPU
         ProductSpuDO spu = validateSpu(sku.getSpuId());
         // 校验评论
-        validateCommentExists(createReqDTO.getUserId(), createReqDTO.getOrderId());
+        validateCommentExists(createReqDTO.getUserId(), createReqDTO.getOrderItemId());
         // 获取用户详细信息
         MemberUserRespDTO user = memberUserApi.getUser(createReqDTO.getUserId());
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -20,8 +20,6 @@ public interface ErrorCodeConstants {
     ErrorCode BANNER_NOT_EXISTS = new ErrorCode(1_013_002_000, "Banner 不存在");
 
     // ========== Coupon 相关 1-013-003-000 ============
-    ErrorCode COUPON_NO_MATCH_SPU = new ErrorCode(1_013_003_000, "优惠劵没有可使用的商品！");
-    ErrorCode COUPON_NO_MATCH_MIN_PRICE = new ErrorCode(1_013_003_001, "所结算的商品中未满足使用的金额");
 
     // ========== 优惠劵模板 1-013-004-000 ==========
     ErrorCode COUPON_TEMPLATE_NOT_EXISTS = new ErrorCode(1_013_004_000, "优惠劵模板不存在");
@@ -44,7 +42,8 @@ public interface ErrorCodeConstants {
     ErrorCode REWARD_ACTIVITY_UPDATE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_006_002, "满减送活动已关闭，不能修改");
     ErrorCode REWARD_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED = new ErrorCode(1_013_006_003, "满减送活动未关闭，不能删除");
     ErrorCode REWARD_ACTIVITY_CLOSE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_006_004, "满减送活动已关闭，不能重复关闭");
-    ErrorCode REWARD_ACTIVITY_CLOSE_FAIL_STATUS_END = new ErrorCode(1_013_006_005, "满减送活动已结束，不能关闭");
+    ErrorCode REWARD_ACTIVITY_SCOPE_ALL_EXISTS = new ErrorCode(1_013_006_005, "已存在商品范围为全场的满减送活动");
+    ErrorCode REWARD_ACTIVITY_SCOPE_CATEGORY_EXISTS = new ErrorCode(1_013_006_006, "存在商品类型参加了其它满减送活动");
 
     // ========== TODO 空着 1-013-007-000 ============
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/coupon/CouponStatusEnum.java
Patch:
@@ -17,8 +17,7 @@ public enum CouponStatusEnum implements IntArrayValuable {
 
     UNUSED(1, "未使用"),
     USED(2, "已使用"),
-    EXPIRE(3, "已过期"),
-    ;
+    EXPIRE(3, "已过期");
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(CouponStatusEnum::getStatus).toArray();
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/coupon/AppCouponRespVO.java
Patch:
@@ -3,7 +3,6 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-import javax.validation.constraints.Min;
 import java.time.LocalDateTime;
 import java.util.List;
 
@@ -42,7 +41,6 @@ public class AppCouponRespVO {
     private Integer discountPercent;
 
     @Schema(description = "优惠金额", example = "10")
-    @Min(value = 0, message = "优惠金额需要大于等于 0")
     private Integer discountPrice;
 
     @Schema(description = "折扣上限", example = "100") // 单位：分，仅在 discountType 为 PERCENT 使用

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/coupon/CouponConvert.java
Patch:
@@ -4,9 +4,7 @@
 import cn.iocoder.yudao.module.promotion.api.coupon.dto.CouponRespDTO;
 import cn.iocoder.yudao.module.promotion.controller.admin.coupon.vo.coupon.CouponPageItemRespVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.coupon.vo.coupon.CouponPageReqVO;
-import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponMatchRespVO;
 import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponPageReqVO;
-import cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon.AppCouponRespVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.coupon.CouponDO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.coupon.CouponTemplateDO;
 import cn.iocoder.yudao.module.promotion.enums.coupon.CouponStatusEnum;
@@ -16,7 +14,6 @@
 
 import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.List;
 
 /**
  * 优惠劵 Convert

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/coupon/CouponDO.java
Patch:
@@ -50,7 +50,6 @@ public class CouponDO extends BaseDO {
      *
      * 枚举 {@link CouponStatusEnum}
      */
-    // TODO 芋艿：已作废？
     private Integer status;
 
     // TODO 芋艿：发放 adminid？

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/reward/RewardActivityService.java
Patch:
@@ -75,11 +75,10 @@ public interface RewardActivityService {
     /**
      * 获取指定 spu 编号最近参加的活动，每个 spuId 只返回一条记录
      *
-     * @param spuIds   spu 编号
      * @param status   状态
      * @param dateTime 当前日期时间
      * @return 满减送活动列表
      */
-    List<RewardActivityDO> getRewardActivityBySpuIdsAndStatusAndDateTimeLt(Collection<Long> spuIds, Integer status, LocalDateTime dateTime);
+    List<RewardActivityDO> getRewardActivityListByStatusAndDateTimeLt(Integer status, LocalDateTime dateTime);
 
 }

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/api/order/TradeOrderApi.java
Patch:
@@ -28,13 +28,13 @@ public interface TradeOrderApi {
      */
     TradeOrderRespDTO getOrder(Long id);
 
-    // TODO 芋艿：需要优化下；
     /**
      * 取消支付订单
      *
-     * @param userId  用户编号
+     * @param userId 用户编号
      * @param orderId 订单编号
+     * @param cancelType 取消类型
      */
-    void cancelPaidOrder(Long userId, Long orderId);
+    void cancelPaidOrder(Long userId, Long orderId, Integer cancelType);
 
 }

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/order/TradeOrderCancelTypeEnum.java
Patch:
@@ -17,7 +17,8 @@ public enum TradeOrderCancelTypeEnum implements IntArrayValuable {
 
     PAY_TIMEOUT(10, "超时未支付"),
     AFTER_SALE_CLOSE(20, "退款关闭"),
-    MEMBER_CANCEL(30, "买家取消");
+    MEMBER_CANCEL(30, "买家取消"),
+    COMBINATION_CLOSE(40, "拼团关闭");
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(TradeOrderCancelTypeEnum::getType).toArray();
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/api/order/TradeOrderApiImpl.java
Patch:
@@ -4,10 +4,10 @@
 import cn.iocoder.yudao.module.trade.convert.order.TradeOrderConvert;
 import cn.iocoder.yudao.module.trade.service.order.TradeOrderQueryService;
 import cn.iocoder.yudao.module.trade.service.order.TradeOrderUpdateService;
+import jakarta.annotation.Resource;
 import org.springframework.stereotype.Service;
 import org.springframework.validation.annotation.Validated;
 
-import javax.annotation.Resource;
 import java.util.Collection;
 import java.util.List;
 
@@ -36,8 +36,8 @@ public TradeOrderRespDTO getOrder(Long id) {
     }
 
     @Override
-    public void cancelPaidOrder(Long userId, Long orderId) {
-        tradeOrderUpdateService.cancelPaidOrder(userId, orderId);
+    public void cancelPaidOrder(Long userId, Long orderId, Integer cancelType) {
+        tradeOrderUpdateService.cancelPaidOrder(userId, orderId, cancelType);
     }
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/aftersale/AppAfterSaleLogController.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
+import cn.iocoder.yudao.framework.security.core.annotations.PreAuthenticated;
 import cn.iocoder.yudao.module.trade.controller.app.aftersale.vo.log.AppAfterSaleLogRespVO;
 import cn.iocoder.yudao.module.trade.dal.dataobject.aftersale.AfterSaleLogDO;
 import cn.iocoder.yudao.module.trade.service.aftersale.AfterSaleLogService;
@@ -33,6 +34,7 @@ public class AppAfterSaleLogController {
     @GetMapping("/list")
     @Operation(summary = "获得售后日志列表")
     @Parameter(name = "afterSaleId", description = "售后编号", required = true, example = "1")
+    @PreAuthenticated
     public CommonResult<List<AppAfterSaleLogRespVO>> getAfterSaleLogList(
             @RequestParam("afterSaleId") Long afterSaleId) {
         List<AfterSaleLogDO> logs = afterSaleLogService.getAfterSaleLogList(afterSaleId);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/brokerage/AppBrokerageRecordController.java
Patch:
@@ -45,6 +45,7 @@ public CommonResult<PageResult<AppBrokerageRecordRespVO>> getBrokerageRecordPage
 
     @GetMapping("/get-product-brokerage-price")
     @Operation(summary = "获得商品的分销金额")
+    @PreAuthenticated
     public CommonResult<AppBrokerageProductPriceRespVO> getProductBrokeragePrice(@RequestParam("spuId") Long spuId) {
         return success(brokerageRecordService.calculateProductBrokeragePrice(getLoginUserId(), spuId));
     }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/brokerage/AppBrokerageUserController.java
Patch:
@@ -133,6 +133,7 @@ public CommonResult<PageResult<AppBrokerageUserChildSummaryRespVO>> getBrokerage
     @GetMapping("/get-rank-by-price")
     @Operation(summary = "获得分销用户排行（基于佣金）")
     @Parameter(name = "times", description = "时间段", required = true)
+    @PreAuthenticated
     public CommonResult<Integer> getRankByPrice(
             @RequestParam("times") @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND) LocalDateTime[] times) {
         return success(brokerageRecordService.getUserRankByPrice(getLoginUserId(), times));

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/brokerage/vo/withdraw/AppBrokerageWithdrawCreateReqVO.java
Patch:
@@ -44,7 +44,7 @@ public class AppBrokerageWithdrawCreateReqVO {
     private String name;
     @Schema(description = "提现银行", example = "1")
     @NotNull(message = "提现银行不能为空", groups = {Bank.class})
-    private Integer bankName;
+    private String bankName;
     @Schema(description = "开户地址", example = "海淀支行")
     private String bankAddress;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -261,7 +261,7 @@ default AppTradeOrderSettlementRespVO convert(TradePriceCalculateRespBO calculat
     default BrokerageAddReqBO convert(MemberUserRespDTO user, TradeOrderItemDO item,
                                       ProductSpuRespDTO spu, ProductSkuRespDTO sku) {
         BrokerageAddReqBO bo = new BrokerageAddReqBO().setBizId(String.valueOf(item.getId())).setSourceUserId(item.getUserId())
-                .setBasePrice(item.getPayPrice() * item.getCount())
+                .setBasePrice(item.getPayPrice())
                 .setTitle(StrUtil.format("{}成功购买{}", user.getNickname(), item.getSpuName()))
                 .setFirstFixedPrice(0).setSecondFixedPrice(0);
         if (BooleanUtil.isTrue(spu.getSubCommissionType())) {

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/brokerage/BrokerageWithdrawServiceImpl.java
Patch:
@@ -96,7 +96,7 @@ public void auditBrokerageWithdraw(Integer id, BrokerageWithdrawStatusEnum statu
         Map<String, Object> templateParams = MapUtil.<String, Object>builder()
                 .put("createTime", LocalDateTimeUtil.formatNormal(withdraw.getCreateTime()))
                 .put("price", MoneyUtils.fenToYuanStr(withdraw.getPrice()))
-                .put("reason", withdraw.getAuditReason())
+                .put("reason", auditReason)
                 .build();
         notifyMessageSendApi.sendSingleMessageToMember(new NotifySendSingleToUserReqDTO()
                 .setUserId(withdraw.getUserId()).setTemplateCode(templateCode).setTemplateParams(templateParams));

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradePriceCalculatorHelper.java
Patch:
@@ -11,6 +11,7 @@
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
 
 import java.util.ArrayList;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -31,8 +32,7 @@ public static TradePriceCalculateRespBO buildCalculateResp(TradePriceCalculateRe
                                                                List<ProductSpuRespDTO> spuList, List<ProductSkuRespDTO> skuList) {
         // 创建 PriceCalculateRespDTO 对象
         TradePriceCalculateRespBO result = new TradePriceCalculateRespBO();
-        result.setType(getOrderType(param));
-        result.setPromotions(new ArrayList<>());
+        result.setType(getOrderType(param)).setPromotions(new ArrayList<>()).setGiveCouponTemplateCounts(new LinkedHashMap<>());
 
         // 创建它的 OrderItem 属性
         result.setItems(new ArrayList<>(param.getItems().size()));
@@ -60,7 +60,7 @@ public static TradePriceCalculateRespBO buildCalculateResp(TradePriceCalculateRe
                     .setWeight(sku.getWeight()).setVolume(sku.getVolume());
             // spu 信息
             orderItem.setSpuName(spu.getName()).setCategoryId(spu.getCategoryId())
-                    .setDeliveryTemplateId(spu.getDeliveryTemplateId())
+                    .setDeliveryTypes(spu.getDeliveryTypes()).setDeliveryTemplateId(spu.getDeliveryTemplateId())
                     .setGivePoint(spu.getGiveIntegral()).setUsePoint(0);
             if (StrUtil.isBlank(orderItem.getPicUrl())) {
                 orderItem.setPicUrl(spu.getPicUrl());

File: yudao-module-pay/yudao-module-pay-api/src/main/java/cn/iocoder/yudao/module/pay/enums/wallet/PayWalletBizTypeEnum.java
Patch:
@@ -18,9 +18,8 @@ public enum PayWalletBizTypeEnum implements IntArrayValuable {
     RECHARGE(1, "充值"),
     RECHARGE_REFUND(2, "充值退款"),
     PAYMENT(3, "支付"),
-    PAYMENT_REFUND(4, "支付退款");
-
-    // TODO 后续增加
+    PAYMENT_REFUND(4, "支付退款"),
+    UPDATE_BALANCE(5, "更新余额");
 
     /**
      * 业务分类

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/framework/sms/core/client/SmsClientFactory.java
Patch:
@@ -30,7 +30,8 @@ public interface SmsClientFactory {
      * 创建短信 Client
      *
      * @param properties 配置对象
+     * @return 短信 Client
      */
-    void createOrUpdateSmsClient(SmsChannelProperties properties);
+    SmsClient createOrUpdateSmsClient(SmsChannelProperties properties);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/framework/sms/core/client/impl/SmsClientFactoryImpl.java
Patch:
@@ -59,7 +59,7 @@ public SmsClient getSmsClient(String channelCode) {
     }
 
     @Override
-    public void createOrUpdateSmsClient(SmsChannelProperties properties) {
+    public SmsClient createOrUpdateSmsClient(SmsChannelProperties properties) {
         AbstractSmsClient client = channelIdClients.get(properties.getId());
         if (client == null) {
             client = this.createSmsClient(properties);
@@ -68,6 +68,7 @@ public void createOrUpdateSmsClient(SmsChannelProperties properties) {
         } else {
             client.refresh(properties);
         }
+        return client;
     }
 
     private AbstractSmsClient createSmsClient(SmsChannelProperties properties) {
@@ -79,6 +80,7 @@ private AbstractSmsClient createSmsClient(SmsChannelProperties properties) {
             case DEBUG_DING_TALK: return new DebugDingTalkSmsClient(properties);
             case TENCENT: return new TencentSmsClient(properties);
             case HUAWEI: return  new HuaweiSmsClient(properties);
+            case QINIU: return new QiniuSmsClient(properties);
         }
         // 创建失败，错误日志 + 抛出异常
         log.error("[createSmsClient][配置({}) 找不到合适的客户端实现]", properties);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/framework/sms/core/enums/SmsChannelEnum.java
Patch:
@@ -18,6 +18,7 @@ public enum SmsChannelEnum {
     ALIYUN("ALIYUN", "阿里云"),
     TENCENT("TENCENT", "腾讯云"),
     HUAWEI("HUAWEI", "华为云"),
+    QINIU("QINIU", "七牛云"),
     ;
 
     /**
@@ -34,3 +35,4 @@ public static SmsChannelEnum getByCode(String code) {
     }
 
 }
+

File: yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/oauth2/OAuth2TokenServiceImplTest.java
Patch:
@@ -144,7 +144,7 @@ public void testRefreshAccessToken_expired() {
         // 调用，并断言
         assertServiceException(() -> oauth2TokenService.refreshAccessToken(refreshToken, clientId),
                 new ErrorCode(401, "刷新令牌已过期"));
-        assertEquals(0, oauth2RefreshTokenMapper.selectCount());
+        assertEquals(0, oauth2AccessTokenMapper.selectCount());
     }
 
     @Test

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/config/YudaoWebAutoConfiguration.java
Patch:
@@ -59,8 +59,8 @@ private void configurePathMatch(PathMatchConfigurer configurer, WebProperties.Ap
     }
 
     @Bean
-    public GlobalExceptionHandler globalExceptionHandler(ApiErrorLogFrameworkService ApiErrorLogFrameworkService) {
-        return new GlobalExceptionHandler(applicationName, ApiErrorLogFrameworkService);
+    public GlobalExceptionHandler globalExceptionHandler(ApiErrorLogFrameworkService apiErrorLogFrameworkService) {
+        return new GlobalExceptionHandler(applicationName, apiErrorLogFrameworkService);
     }
 
     @Bean

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionService.java
Patch:
@@ -4,7 +4,7 @@
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageReqVO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmFormDO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionInfoDO;
-import cn.iocoder.yudao.module.bpm.service.definition.dto.BpmModelMetaInfoRespDTO;
+import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.model.BpmModelMetaInfoVO;
 import org.flowable.bpmn.model.BpmnModel;
 import org.flowable.engine.repository.Deployment;
 import org.flowable.engine.repository.Model;
@@ -51,7 +51,7 @@ public interface BpmProcessDefinitionService {
      * @param form 表单
      * @return 流程编号
      */
-    String createProcessDefinition(Model model, BpmModelMetaInfoRespDTO modelMetaInfo, byte[] bpmnBytes, BpmFormDO form);
+    String createProcessDefinition(Model model, BpmModelMetaInfoVO modelMetaInfo, byte[] bpmnBytes, BpmFormDO form);
 
     /**
      * 更新流程定义状态

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -11,7 +11,7 @@
 import cn.iocoder.yudao.module.bpm.dal.mysql.definition.BpmProcessDefinitionInfoMapper;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmnModelConstants;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.FlowableUtils;
-import cn.iocoder.yudao.module.bpm.service.definition.dto.BpmModelMetaInfoRespDTO;
+import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.model.BpmModelMetaInfoVO;
 import jakarta.annotation.Resource;
 import lombok.extern.slf4j.Slf4j;
 import org.flowable.bpmn.model.BpmnModel;
@@ -105,7 +105,7 @@ public Deployment getDeployment(String id) {
     }
 
     @Override
-    public String createProcessDefinition(Model model, BpmModelMetaInfoRespDTO modelMetaInfo,
+    public String createProcessDefinition(Model model, BpmModelMetaInfoVO modelMetaInfo,
                                           byte[] bpmnBytes, BpmFormDO form) {
         // 创建 Deployment 部署
         Deployment deploy = repositoryService.createDeployment()

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/framework/file/core/client/s3/S3FileClient.java
Patch:
@@ -91,7 +91,7 @@ private String buildRegion() {
      * 开启 VirtualStyle 模式
      */
     private void enableVirtualStyleEndpoint() {
-        if (StrUtil.containsAll(config.getEndpoint(),
+        if (StrUtil.containsAny(config.getEndpoint(),
                 S3FileClientConfig.ENDPOINT_TENCENT, // 腾讯云 https://cloud.tencent.com/document/product/436/41284
                 S3FileClientConfig.ENDPOINT_VOLCES)) { // 火山云 https://www.volcengine.com/docs/6349/1288493
             client.enableVirtualStyleEndpoint();

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/framework/file/core/client/s3/S3FileClient.java
Patch:
@@ -91,7 +91,7 @@ private String buildRegion() {
      * 开启 VirtualStyle 模式
      */
     private void enableVirtualStyleEndpoint() {
-        if (StrUtil.containsAll(config.getEndpoint(),
+        if (StrUtil.containsAny(config.getEndpoint(),
                 S3FileClientConfig.ENDPOINT_TENCENT, // 腾讯云 https://cloud.tencent.com/document/product/436/41284
                 S3FileClientConfig.ENDPOINT_VOLCES)) { // 火山云 https://www.volcengine.com/docs/6349/1288493
             client.enableVirtualStyleEndpoint();

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/framework/file/core/client/s3/S3FileClient.java
Patch:
@@ -91,7 +91,7 @@ private String buildRegion() {
      * 开启 VirtualStyle 模式
      */
     private void enableVirtualStyleEndpoint() {
-        if (StrUtil.containsAll(config.getEndpoint(),
+        if (StrUtil.containsAny(config.getEndpoint(),
                 S3FileClientConfig.ENDPOINT_TENCENT, // 腾讯云 https://cloud.tencent.com/document/product/436/41284
                 S3FileClientConfig.ENDPOINT_VOLCES)) { // 火山云 https://www.volcengine.com/docs/6349/1288493
             client.enableVirtualStyleEndpoint();

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -101,7 +101,7 @@ default ProductSkuUpdateStockReqDTO convertNegative(List<TradeOrderItemDO> list)
     default PayOrderCreateReqDTO convert(TradeOrderDO order, List<TradeOrderItemDO> orderItems,
                                          TradeOrderProperties orderProperties) {
         PayOrderCreateReqDTO createReqDTO = new PayOrderCreateReqDTO()
-                .setAppId(orderProperties.getAppId()).setUserIp(order.getUserIp());
+                .setAppKey(orderProperties.getAppKey()).setUserIp(order.getUserIp());
         // 商户相关字段
         createReqDTO.setMerchantOrderId(String.valueOf(order.getId()));
         String subject = orderItems.get(0).getSpuName();

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceTest.java
Patch:
@@ -99,7 +99,7 @@ public class TradeOrderUpdateServiceTest extends BaseDbUnitTest {
 
     @BeforeEach
     public void setUp() {
-        when(tradeOrderProperties.getAppId()).thenReturn(888L);
+        when(tradeOrderProperties.getAppKey()).thenReturn("demo");
         when(tradeOrderProperties.getPayExpireTime()).thenReturn(Duration.ofDays(1));
         when(tradeNoRedisDAO.generate(anyString())).thenReturn(IdUtil.randomUUID());
     }

File: yudao-module-pay/yudao-module-pay-api/src/main/java/cn/iocoder/yudao/module/pay/enums/ErrorCodeConstants.java
Patch:
@@ -14,6 +14,7 @@ public interface ErrorCodeConstants {
     ErrorCode APP_IS_DISABLE = new ErrorCode(1_007_000_002, "App 已经被禁用");
     ErrorCode APP_EXIST_ORDER_CANT_DELETE =  new ErrorCode(1_007_000_003, "支付应用存在支付订单，无法删除");
     ErrorCode APP_EXIST_REFUND_CANT_DELETE =  new ErrorCode(1_007_000_004, "支付应用存在退款订单，无法删除");
+    ErrorCode APP_KEY_EXISTS = new ErrorCode(1_007_000_005, "支付应用标识已经存在");
 
     // ========== CHANNEL 模块 1-007-001-000 ==========
     ErrorCode CHANNEL_NOT_FOUND = new ErrorCode(1_007_001_000, "支付渠道的配置不存在");

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/app/vo/PayAppPageItemRespVO.java
Patch:
@@ -17,6 +17,9 @@ public class PayAppPageItemRespVO extends PayAppBaseVO {
     @Schema(description = "应用编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
+    @Schema(description = "应用标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudao")
+    private String appKey;
+
     @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/app/vo/PayAppPageReqVO.java
Patch:
@@ -20,6 +20,9 @@ public class PayAppPageReqVO extends PageParam {
     @Schema(description = "应用名", example = "小豆")
     private String name;
 
+    @Schema(description = "应用标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudao")
+    private String appKey;
+
     @Schema(description = "开启状态", example = "0")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/demo/PayDemoOrderServiceImpl.java
Patch:
@@ -47,7 +47,7 @@ public class PayDemoOrderServiceImpl implements PayDemoOrderService {
      *
      * 从 [支付管理 -> 应用信息] 里添加
      */
-    private static final Long PAY_APP_ID = 7L;
+    private static final String PAY_APP_KEY = "demo";
 
     /**
      * 商品信息 Map
@@ -88,7 +88,7 @@ public Long createDemoOrder(Long userId, PayDemoOrderCreateReqVO createReqVO) {
 
         // 2.1 创建支付单
         Long payOrderId = payOrderApi.createOrder(new PayOrderCreateReqDTO()
-                .setAppId(PAY_APP_ID).setUserIp(getClientIP()) // 支付应用
+                .setAppKey(PAY_APP_KEY).setUserIp(getClientIP()) // 支付应用
                 .setMerchantOrderId(demoOrder.getId().toString()) // 业务的订单编号
                 .setSubject(spuName).setBody("").setPrice(price) // 价格信息
                 .setExpireTime(addTime(Duration.ofHours(2L)))); // 支付的过期时间
@@ -190,7 +190,7 @@ public void refundDemoOrder(Long id, String userIp) {
         String refundId = order.getId() + "-refund";
         // 2.2 创建退款单
         Long payRefundId = payRefundApi.createRefund(new PayRefundCreateReqDTO()
-                .setAppId(PAY_APP_ID).setUserIp(getClientIP()) // 支付应用
+                .setAppKey(PAY_APP_KEY).setUserIp(getClientIP()) // 支付应用
                 .setMerchantOrderId(String.valueOf(order.getId())) // 支付单号
                 .setMerchantRefundId(refundId)
                 .setReason("想退钱").setPrice(order.getPrice()));// 价格信息

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceImpl.java
Patch:
@@ -111,11 +111,11 @@ public List<PayOrderDO> getOrderList(PayOrderExportReqVO exportReqVO) {
     @Override
     public Long createOrder(PayOrderCreateReqDTO reqDTO) {
         // 校验 App
-        PayAppDO app = appService.validPayApp(reqDTO.getAppId());
+        PayAppDO app = appService.validPayApp(reqDTO.getAppKey());
 
         // 查询对应的支付交易单是否已经存在。如果是，则直接返回
         PayOrderDO order = orderMapper.selectByAppIdAndMerchantOrderId(
-                reqDTO.getAppId(), reqDTO.getMerchantOrderId());
+                app.getId(), reqDTO.getMerchantOrderId());
         if (order != null) {
             log.warn("[createOrder][appId({}) merchantOrderId({}) 已经存在对应的支付单({})]", order.getAppId(),
                     order.getMerchantOrderId(), toJsonString(order)); // 理论来说，不会出现这个情况

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/wallet/PayWalletRechargeServiceImpl.java
Patch:
@@ -54,7 +54,7 @@ public class PayWalletRechargeServiceImpl implements PayWalletRechargeService {
     /**
      * TODO 芋艿：放到 payconfig
      */
-    private static final Long WALLET_PAY_APP_ID = 8L;
+    private static final String WALLET_PAY_APP_KEY = "wallet";
 
     private static final String WALLET_RECHARGE_ORDER_SUBJECT = "钱包余额充值";
 
@@ -92,7 +92,7 @@ public PayWalletRechargeDO createWalletRecharge(Long userId, Integer userType, S
 
         // 2.1 创建支付单
         Long payOrderId = payOrderService.createOrder(new PayOrderCreateReqDTO()
-                .setAppId(WALLET_PAY_APP_ID).setUserIp(userIp)
+                .setAppKey(WALLET_PAY_APP_KEY).setUserIp(userIp)
                 .setMerchantOrderId(recharge.getId().toString()) // 业务的订单编号
                 .setSubject(WALLET_RECHARGE_ORDER_SUBJECT).setBody("")
                 .setPrice(recharge.getPayPrice())
@@ -174,7 +174,7 @@ public void refundWalletRecharge(Long id, String userIp) {
         String walletRechargeId = String.valueOf(id);
         String refundId = walletRechargeId + "-refund";
         Long payRefundId = payRefundService.createPayRefund(new PayRefundCreateReqDTO()
-                .setAppId(WALLET_PAY_APP_ID).setUserIp(userIp)
+                .setAppKey(WALLET_PAY_APP_KEY).setUserIp(userIp)
                 .setMerchantOrderId(walletRechargeId)
                 .setMerchantRefundId(refundId)
                 .setReason("想退钱").setPrice(walletRecharge.getPayPrice()));

File: yudao-module-pay/yudao-module-pay-biz/src/test/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceTest.java
Patch:
@@ -218,11 +218,11 @@ public void testGetOrderList() {
     public void testCreateOrder_success() {
         // mock 参数
         PayOrderCreateReqDTO reqDTO = randomPojo(PayOrderCreateReqDTO.class,
-                o -> o.setAppId(1L).setMerchantOrderId("10")
+                o -> o.setAppKey("demo").setMerchantOrderId("10")
                         .setSubject(randomString()).setBody(randomString()));
         // mock 方法
         PayAppDO app = randomPojo(PayAppDO.class, o -> o.setId(1L).setOrderNotifyUrl("http://127.0.0.1"));
-        when(appService.validPayApp(eq(reqDTO.getAppId()))).thenReturn(app);
+        when(appService.validPayApp(eq(reqDTO.getAppKey()))).thenReturn(app);
 
         // 调用
         Long orderId = orderService.createOrder(reqDTO);
@@ -239,7 +239,7 @@ public void testCreateOrder_success() {
     public void testCreateOrder_exists() {
         // mock 参数
         PayOrderCreateReqDTO reqDTO = randomPojo(PayOrderCreateReqDTO.class,
-                o -> o.setAppId(1L).setMerchantOrderId("10"));
+                o -> o.setAppKey("demo").setMerchantOrderId("10"));
         // mock 数据
         PayOrderDO dbOrder = randomPojo(PayOrderDO.class,  o -> o.setAppId(1L).setMerchantOrderId("10"));
         orderMapper.insert(dbOrder);

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/definition/BpmUserTaskAssignStartUserHandlerTypeEnum.java
Patch:
@@ -15,7 +15,7 @@ public enum BpmUserTaskAssignStartUserHandlerTypeEnum implements IntArrayValuabl
 
     START_USER_AUDIT(1), // 由发起人对自己审批
     SKIP(2), // 自动跳过【参考飞书】：1）如果当前节点还有其他审批人，则交由其他审批人进行审批；2）如果当前节点没有其他审批人，则该节点自动通过
-    ASSIGN_DEPT_LEADER(3); // 转交给部门负责人审批【参考飞书】：若部门负责人为空，则自动通过
+    TRANSFER_DEPT_LEADER(3); // 转交给部门负责人审批【参考飞书】：若部门负责人为空，则自动通过
 
     private final Integer type;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/enums/BpmnModelConstants.java
Patch:
@@ -28,12 +28,10 @@ public interface BpmnModelConstants {
      */
     String BOUNDARY_EVENT_TYPE = "boundaryEventType";
 
-    // TODO @jason：这个命名，应该也要改哈
-    // TODO @jason：1）是不是上面的 timeoutAction 改成 timeoutHandler；
     /**
      * BPMN ExtensionElement 的扩展属性，用于标记用户任务超时执行动作
      */
-    String USER_TASK_TIMEOUT_HANDLER_ACTION = "timeoutAction";
+    String USER_TASK_TIMEOUT_HANDLER_TYPE = "timeoutHandlerType";
 
     /**
      * BPMN ExtensionElement 的扩展属性，用于标记用户任务的审批人与发起人相同时，对应的处理类型

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/BpmTaskEventListener.java
Patch:
@@ -106,10 +106,10 @@ protected void timerFired(FlowableEngineEntityEvent event) {
         }
 
         // 2. 处理超时
-        String timeoutAction = BpmnModelUtils.parseBoundaryEventExtensionElement(boundaryEvent,
-                BpmnModelConstants.USER_TASK_TIMEOUT_HANDLER_ACTION);
+        String timeoutHandlerType = BpmnModelUtils.parseBoundaryEventExtensionElement(boundaryEvent,
+                BpmnModelConstants.USER_TASK_TIMEOUT_HANDLER_TYPE);
         String taskKey = boundaryEvent.getAttachedToRefId();
-        taskService.processTaskTimeout(event.getProcessInstanceId(), taskKey, NumberUtils.parseInt(timeoutAction));
+        taskService.processTaskTimeout(event.getProcessInstanceId(), taskKey, NumberUtils.parseInt(timeoutHandlerType));
     }
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskService.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.task.*;
+import cn.iocoder.yudao.module.bpm.enums.definition.BpmUserTaskTimeoutHandlerTypeEnum;
 import jakarta.validation.Valid;
 import org.flowable.bpmn.model.UserTask;
 import org.flowable.task.api.Task;
@@ -212,8 +213,8 @@ List<Task> getRunningTaskListByProcessInstanceId(String processInstanceId,
      *
      * @param processInstanceId 流程示例编号
      * @param taskDefineKey 任务 Key
-     * @param taskAction 处理类型
+     * @param handlerType 处理类型，参见 {@link BpmUserTaskTimeoutHandlerTypeEnum}
      */
-    void processTaskTimeout(String processInstanceId, String taskDefineKey, Integer taskAction);
+    void processTaskTimeout(String processInstanceId, String taskDefineKey, Integer handlerType);
 
 }

File: yudao-module-ai/yudao-module-ai-api/src/main/java/cn/iocoder/yudao/module/ai/enums/AiChatRoleEnum.java
Patch:
@@ -22,7 +22,7 @@ public enum AiChatRoleEnum implements IntArrayValuable {
             除此之外不需要除了正文内容外的其他回复，如标题、开头、任何解释性语句或道歉。
             """),
 
-    AI_MIND_MAP_ROLE(2, "脑图助手", """
+    AI_MIND_MAP_ROLE(2, "导图助手", """
              你是一位非常优秀的思维导图助手，你会把用户的所有提问都总结成思维导图，然后以 Markdown 格式输出。markdown 只需要输出一级标题，二级标题，三级标题，四级标题，最多输出四级，除此之外不要输出任何其他 markdown 标记。下面是一个合格的例子：
              # Geek-AI 助手
              ## 完整的开源系统

File: yudao-module-ai/yudao-module-ai-api/src/main/java/cn/iocoder/yudao/module/ai/enums/ErrorCodeConstants.java
Patch:
@@ -45,11 +45,13 @@ public interface ErrorCodeConstants {
     // ========== API 音乐 1-040-006-000 ==========
     ErrorCode MUSIC_NOT_EXISTS = new ErrorCode(1_022_006_000, "音乐不存在!");
 
-
     // ========== API 写作 1-022-007-000 ==========
     ErrorCode WRITE_NOT_EXISTS = new ErrorCode(1_022_007_000, "作文不存在!");
     ErrorCode WRITE_STREAM_ERROR = new ErrorCode(1_022_07_001, "写作生成异常!");
 
+    // ========== API 思维导图 1-040-008-000 ==========
+    ErrorCode MIND_MAP_NOT_EXISTS = new ErrorCode(1_040_008_000, "思维导图不存在!");
+
 
     // ========== API 知识库 1-022-008-000 ==========
     ErrorCode KNOWLEDGE_NOT_EXISTS = new ErrorCode(1_022_008_000, "知识库不存在!");

File: yudao-module-ai/yudao-spring-boot-starter-ai/src/main/java/cn/iocoder/yudao/framework/ai/core/enums/AiPlatformEnum.java
Patch:
@@ -22,7 +22,8 @@ public enum AiPlatformEnum {
 
     // ========== 国外平台 ==========
 
-    OPENAI("OpenAI", "OpenAI"),
+    OPENAI("OpenAI", "OpenAI"), // OpenAI 官方
+    AZURE_OPENAI("AzureOpenAI", "AzureOpenAI"), // OpenAI 微软
     OLLAMA("Ollama", "Ollama"),
 
     STABLE_DIFFUSION("StableDiffusion", "StableDiffusion"), // Stability AI

File: yudao-module-ai/yudao-spring-boot-starter-ai/src/test/java/cn/iocoder/yudao/framework/ai/chat/OpenAIChatModelTests.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.ai.chat;
 
-import cn.iocoder.yudao.framework.ai.core.model.xinghuo.XingHuoChatModel;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 import org.springframework.ai.chat.messages.Message;
@@ -17,7 +16,7 @@
 import java.util.List;
 
 /**
- * {@link XingHuoChatModel} 集成测试
+ * {@link OpenAiChatModel} 集成测试
  *
  * @author 芋道源码
  */

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/main/java/cn/iocoder/yudao/framework/ip/core/Area.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.framework.ip.core;
 
 import cn.iocoder.yudao.framework.ip.core.enums.AreaTypeEnum;
+import com.fasterxml.jackson.annotation.JsonBackReference;
 import com.fasterxml.jackson.annotation.JsonManagedReference;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -54,7 +55,7 @@ public class Area {
     /**
      * 子节点
      */
-    @JsonManagedReference
+    @JsonBackReference
     private List<Area> children;
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/main/java/cn/iocoder/yudao/framework/ip/core/Area.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.framework.ip.core;
 
 import cn.iocoder.yudao.framework.ip.core.enums.AreaTypeEnum;
+import com.fasterxml.jackson.annotation.JsonBackReference;
 import com.fasterxml.jackson.annotation.JsonManagedReference;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -54,7 +55,7 @@ public class Area {
     /**
      * 子节点
      */
-    @JsonManagedReference
+    @JsonBackReference
     private List<Area> children;
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/main/java/cn/iocoder/yudao/framework/ip/core/Area.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.framework.ip.core;
 
 import cn.iocoder.yudao.framework.ip.core.enums.AreaTypeEnum;
+import com.fasterxml.jackson.annotation.JsonBackReference;
 import com.fasterxml.jackson.annotation.JsonManagedReference;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -54,7 +55,7 @@ public class Area {
     /**
      * 子节点
      */
-    @JsonManagedReference
+    @JsonBackReference
     private List<Area> children;
 
 }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/JdbcUtils.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.framework.mybatis.core.util;
 
 import cn.iocoder.yudao.framework.common.util.spring.SpringUtils;
-import cn.iocoder.yudao.framework.mybatis.core.enums.NameToTypeEnum;
+import cn.iocoder.yudao.framework.mybatis.core.enums.DbTypeEnum;
 import com.baomidou.dynamic.datasource.DynamicRoutingDataSource;
 import com.baomidou.mybatisplus.annotation.DbType;
 
@@ -52,7 +52,7 @@ public static DbType getDbType() {
         DynamicRoutingDataSource dynamicRoutingDataSource = SpringUtils.getBean(DynamicRoutingDataSource.class);
         DataSource dataSource = dynamicRoutingDataSource.determineDataSource();
         try (Connection conn = dataSource.getConnection()) {
-            return NameToTypeEnum.find(conn.getMetaData().getDatabaseProductName());
+            return DbTypeEnum.find(conn.getMetaData().getDatabaseProductName());
         } catch (SQLException e) {
             throw new IllegalArgumentException(e.getMessage());
         }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java
Patch:
@@ -4,7 +4,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.SortingField;
-import cn.iocoder.yudao.framework.mybatis.core.enums.FindInSetEnum;
+import cn.iocoder.yudao.framework.mybatis.core.enums.DbTypeEnum;
 import com.baomidou.mybatisplus.annotation.DbType;
 import com.baomidou.mybatisplus.core.metadata.OrderItem;
 import com.baomidou.mybatisplus.core.toolkit.StringPool;
@@ -98,7 +98,7 @@ public static Column buildColumn(String tableName, Alias tableAlias, String colu
     public static String findInSet(String column, Object value) {
         // 这里不用SqlConstants.DB_TYPE，因为它是使用 primary 数据源的 url 推断出来的类型
         DbType dbType = JdbcUtils.getDbType();
-        return FindInSetEnum.getTemplate(dbType)
+        return DbTypeEnum.getFindInSetTemplate(dbType)
                 .replace("#{column}", column)
                 .replace("#{value}", StrUtil.toString(value));
     }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/test/java/cn/iocoder/yudao/framework/ip/core/utils/AreaUtilsTest.java
Patch:
@@ -28,7 +28,7 @@ public void testGetArea() {
 
     @Test
     public void testFormat() {
-        assertEquals(AreaUtils.format(110105), "北京 北京市 朝阳区");
+        assertEquals(AreaUtils.format(110105), "北京市 北京市 朝阳区");
         assertEquals(AreaUtils.format(1), "中国");
         assertEquals(AreaUtils.format(2), "蒙古");
     }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/test/java/cn/iocoder/yudao/framework/ip/core/utils/AreaUtilsTest.java
Patch:
@@ -28,7 +28,7 @@ public void testGetArea() {
 
     @Test
     public void testFormat() {
-        assertEquals(AreaUtils.format(110105), "北京 北京市 朝阳区");
+        assertEquals(AreaUtils.format(110105), "北京市 北京市 朝阳区");
         assertEquals(AreaUtils.format(1), "中国");
         assertEquals(AreaUtils.format(2), "蒙古");
     }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/test/java/cn/iocoder/yudao/framework/ip/core/utils/AreaUtilsTest.java
Patch:
@@ -28,7 +28,7 @@ public void testGetArea() {
 
     @Test
     public void testFormat() {
-        assertEquals(AreaUtils.format(110105), "北京 北京市 朝阳区");
+        assertEquals(AreaUtils.format(110105), "北京市 北京市 朝阳区");
         assertEquals(AreaUtils.format(1), "中国");
         assertEquals(AreaUtils.format(2), "蒙古");
     }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/JdbcUtils.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.framework.mybatis.core.util;
 
 import cn.iocoder.yudao.framework.common.util.spring.SpringUtils;
-import cn.iocoder.yudao.framework.mybatis.core.enums.NameToTypeEnum;
+import cn.iocoder.yudao.framework.mybatis.core.enums.DbTypeEnum;
 import com.baomidou.dynamic.datasource.DynamicRoutingDataSource;
 import com.baomidou.mybatisplus.annotation.DbType;
 
@@ -52,7 +52,7 @@ public static DbType getDbType() {
         DynamicRoutingDataSource dynamicRoutingDataSource = SpringUtils.getBean(DynamicRoutingDataSource.class);
         DataSource dataSource = dynamicRoutingDataSource.determineDataSource();
         try (Connection conn = dataSource.getConnection()) {
-            return NameToTypeEnum.find(conn.getMetaData().getDatabaseProductName());
+            return DbTypeEnum.find(conn.getMetaData().getDatabaseProductName());
         } catch (SQLException e) {
             throw new IllegalArgumentException(e.getMessage());
         }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/MyBatisUtils.java
Patch:
@@ -4,7 +4,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.SortingField;
-import cn.iocoder.yudao.framework.mybatis.core.enums.FindInSetEnum;
+import cn.iocoder.yudao.framework.mybatis.core.enums.DbTypeEnum;
 import com.baomidou.mybatisplus.annotation.DbType;
 import com.baomidou.mybatisplus.core.metadata.OrderItem;
 import com.baomidou.mybatisplus.core.toolkit.StringPool;
@@ -98,7 +98,7 @@ public static Column buildColumn(String tableName, Alias tableAlias, String colu
     public static String findInSet(String column, Object value) {
         // 这里不用SqlConstants.DB_TYPE，因为它是使用 primary 数据源的 url 推断出来的类型
         DbType dbType = JdbcUtils.getDbType();
-        return FindInSetEnum.getTemplate(dbType)
+        return DbTypeEnum.getFindInSetTemplate(dbType)
                 .replace("#{column}", column)
                 .replace("#{value}", StrUtil.toString(value));
     }

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/service/purchase/ErpPurchaseInServiceImpl.java
Patch:
@@ -140,7 +140,7 @@ private void calculateTotalPrice(ErpPurchaseInDO purchaseIn, List<ErpPurchaseInI
             purchaseIn.setDiscountPercent(BigDecimal.ZERO);
         }
         purchaseIn.setDiscountPrice(MoneyUtils.priceMultiplyPercent(purchaseIn.getTotalPrice(), purchaseIn.getDiscountPercent()));
-        purchaseIn.setTotalPrice(purchaseIn.getTotalPrice().subtract(purchaseIn.getDiscountPrice().add(purchaseIn.getOtherPrice())));
+        purchaseIn.setTotalPrice(purchaseIn.getTotalPrice().subtract(purchaseIn.getDiscountPrice()).add(purchaseIn.getOtherPrice()));
     }
 
     private void updatePurchaseOrderInCount(Long orderId) {
@@ -305,4 +305,4 @@ public List<ErpPurchaseInItemDO> getPurchaseInItemListByInIds(Collection<Long> i
         return purchaseInItemMapper.selectListByInIds(inIds);
     }
 
-}
\ No newline at end of file
+}

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/service/purchase/ErpPurchaseReturnServiceImpl.java
Patch:
@@ -136,7 +136,7 @@ private void calculateTotalPrice(ErpPurchaseReturnDO purchaseReturn, List<ErpPur
             purchaseReturn.setDiscountPercent(BigDecimal.ZERO);
         }
         purchaseReturn.setDiscountPrice(MoneyUtils.priceMultiplyPercent(purchaseReturn.getTotalPrice(), purchaseReturn.getDiscountPercent()));
-        purchaseReturn.setTotalPrice(purchaseReturn.getTotalPrice().subtract(purchaseReturn.getDiscountPrice().add(purchaseReturn.getOtherPrice())));
+        purchaseReturn.setTotalPrice(purchaseReturn.getTotalPrice().subtract(purchaseReturn.getDiscountPrice()).add(purchaseReturn.getOtherPrice()));
     }
 
     private void updatePurchaseOrderReturnCount(Long orderId) {
@@ -301,4 +301,4 @@ public List<ErpPurchaseReturnItemDO> getPurchaseReturnItemListByReturnIds(Collec
         return purchaseReturnItemMapper.selectListByReturnIds(returnIds);
     }
 
-}
\ No newline at end of file
+}

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/spu/ProductSpuMapper.java
Patch:
@@ -30,7 +30,8 @@ default PageResult<ProductSpuDO> selectPage(ProductSpuPageReqVO reqVO) {
                 .likeIfPresent(ProductSpuDO::getName, reqVO.getName())
                 .eqIfPresent(ProductSpuDO::getCategoryId, reqVO.getCategoryId())
                 .betweenIfPresent(ProductSpuDO::getCreateTime, reqVO.getCreateTime())
-                .orderByDesc(ProductSpuDO::getSort);
+                .orderByDesc(ProductSpuDO::getSort)
+                .orderByDesc(ProductSpuDO::getId);
         appendTabQuery(tabType, queryWrapper);
         return selectPage(reqVO, queryWrapper);
     }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/oauth2/OAuth2GrantTypeEnum.java
Patch:
@@ -22,7 +22,7 @@ public enum OAuth2GrantTypeEnum {
 
     private final String grantType;
 
-    public static OAuth2GrantTypeEnum getByGranType(String grantType) {
+    public static OAuth2GrantTypeEnum getByGrantType(String grantType) {
         return ArrayUtil.firstMatch(o -> o.getGrantType().equals(grantType), values());
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/OAuth2OpenController.java
Patch:
@@ -105,7 +105,7 @@ public CommonResult<OAuth2OpenAccessTokenRespVO> postAccessToken(HttpServletRequ
                                                                      @RequestParam(value = "refresh_token", required = false) String refreshToken) { // 刷新模式
         List<String> scopes = OAuth2Utils.buildScopes(scope);
         // 1.1 校验授权类型
-        OAuth2GrantTypeEnum grantTypeEnum = OAuth2GrantTypeEnum.getByGranType(grantType);
+        OAuth2GrantTypeEnum grantTypeEnum = OAuth2GrantTypeEnum.getByGrantType(grantType);
         if (grantTypeEnum == null) {
             throw exception0(BAD_REQUEST.getCode(), StrUtil.format("未知授权类型({})", grantType));
         }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/oauth2/OAuth2GrantTypeEnum.java
Patch:
@@ -22,7 +22,7 @@ public enum OAuth2GrantTypeEnum {
 
     private final String grantType;
 
-    public static OAuth2GrantTypeEnum getByGranType(String grantType) {
+    public static OAuth2GrantTypeEnum getByGrantType(String grantType) {
         return ArrayUtil.firstMatch(o -> o.getGrantType().equals(grantType), values());
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/OAuth2OpenController.java
Patch:
@@ -105,7 +105,7 @@ public CommonResult<OAuth2OpenAccessTokenRespVO> postAccessToken(HttpServletRequ
                                                                      @RequestParam(value = "refresh_token", required = false) String refreshToken) { // 刷新模式
         List<String> scopes = OAuth2Utils.buildScopes(scope);
         // 1.1 校验授权类型
-        OAuth2GrantTypeEnum grantTypeEnum = OAuth2GrantTypeEnum.getByGranType(grantType);
+        OAuth2GrantTypeEnum grantTypeEnum = OAuth2GrantTypeEnum.getByGrantType(grantType);
         if (grantTypeEnum == null) {
             throw exception0(BAD_REQUEST.getCode(), StrUtil.format("未知授权类型({})", grantType));
         }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/oauth2/OAuth2GrantTypeEnum.java
Patch:
@@ -22,7 +22,7 @@ public enum OAuth2GrantTypeEnum {
 
     private final String grantType;
 
-    public static OAuth2GrantTypeEnum getByGranType(String grantType) {
+    public static OAuth2GrantTypeEnum getByGrantType(String grantType) {
         return ArrayUtil.firstMatch(o -> o.getGrantType().equals(grantType), values());
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/OAuth2OpenController.java
Patch:
@@ -105,7 +105,7 @@ public CommonResult<OAuth2OpenAccessTokenRespVO> postAccessToken(HttpServletRequ
                                                                      @RequestParam(value = "refresh_token", required = false) String refreshToken) { // 刷新模式
         List<String> scopes = OAuth2Utils.buildScopes(scope);
         // 1.1 校验授权类型
-        OAuth2GrantTypeEnum grantTypeEnum = OAuth2GrantTypeEnum.getByGranType(grantType);
+        OAuth2GrantTypeEnum grantTypeEnum = OAuth2GrantTypeEnum.getByGrantType(grantType);
         if (grantTypeEnum == null) {
             throw exception0(BAD_REQUEST.getCode(), StrUtil.format("未知授权类型({})", grantType));
         }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -109,7 +109,7 @@ public CommonResult<AuthPermissionInfoRespVO> getPermissionInfo() {
         // 1.3 获得菜单列表
         Set<Long> menuIds = permissionService.getRoleMenuListByRoleId(convertSet(roles, RoleDO::getId));
         List<MenuDO> menuList = menuService.getMenuList(menuIds);
-        menuList.removeIf(menu -> !CommonStatusEnum.ENABLE.getStatus().equals(menu.getStatus())); // 移除禁用的菜单
+        menuList = menuService.filterDisableMenus(menuList);
 
         // 2. 拼接结果返回
         return success(AuthConvert.INSTANCE.convert(user, roles, menuList));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/MenuController.java
Patch:
@@ -72,6 +72,7 @@ public CommonResult<List<MenuRespVO>> getMenuList(MenuListReqVO reqVO) {
     public CommonResult<List<MenuSimpleRespVO>> getSimpleMenuList() {
         List<MenuDO> list = menuService.getMenuListByTenant(
                 new MenuListReqVO().setStatus(CommonStatusEnum.ENABLE.getStatus()));
+        list = menuService.filterDisableMenus(list);
         list.sort(Comparator.comparing(MenuDO::getSort));
         return success(BeanUtils.toBean(list, MenuSimpleRespVO.class));
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -109,7 +109,7 @@ public CommonResult<AuthPermissionInfoRespVO> getPermissionInfo() {
         // 1.3 获得菜单列表
         Set<Long> menuIds = permissionService.getRoleMenuListByRoleId(convertSet(roles, RoleDO::getId));
         List<MenuDO> menuList = menuService.getMenuList(menuIds);
-        menuList.removeIf(menu -> !CommonStatusEnum.ENABLE.getStatus().equals(menu.getStatus())); // 移除禁用的菜单
+        menuList = menuService.filterDisableMenus(menuList);
 
         // 2. 拼接结果返回
         return success(AuthConvert.INSTANCE.convert(user, roles, menuList));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/MenuController.java
Patch:
@@ -72,6 +72,7 @@ public CommonResult<List<MenuRespVO>> getMenuList(MenuListReqVO reqVO) {
     public CommonResult<List<MenuSimpleRespVO>> getSimpleMenuList() {
         List<MenuDO> list = menuService.getMenuListByTenant(
                 new MenuListReqVO().setStatus(CommonStatusEnum.ENABLE.getStatus()));
+        list = menuService.filterDisableMenus(list);
         list.sort(Comparator.comparing(MenuDO::getSort));
         return success(BeanUtils.toBean(list, MenuSimpleRespVO.class));
     }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/dataobject/order/TradeOrderDO.java
Patch:
@@ -322,7 +322,7 @@ public class TradeOrderDO extends BaseDO {
      *
      * 关联 CombinationRecordDO 的 headId 字段
      */
-    private Long combinationHeadId;
+    private Long combinationHeadId; // FIXME 2024/5/15: "团长" 应该译作 leader / starter 而不是 head
     /**
      * 拼团记录编号
      *

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/dataobject/business/CrmBusinessStatusDO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.crm.dal.dataobject.business;
 
+import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -19,7 +20,7 @@
 @Builder
 @NoArgsConstructor
 @AllArgsConstructor
-public class CrmBusinessStatusDO {
+public class CrmBusinessStatusDO extends BaseDO {
 
     /**
      * 主键

File: yudao-module-erp/yudao-module-erp-api/src/main/java/cn/iocoder/yudao/module/erp/enums/common/ErpBizTypeEnum.java
Patch:
@@ -20,7 +20,7 @@ public enum ErpBizTypeEnum implements IntArrayValuable {
     PURCHASE_RETURN(12, "采购退货"),
 
     SALE_ORDER(20, "销售订单"),
-    SALE_OUT(21, "销售订单"),
+    SALE_OUT(21, "销售出库"),
     SALE_RETURN(22, "销售退货"),
     ;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/file/FileContentDO.java
Patch:
@@ -28,8 +28,8 @@ public class FileContentDO extends BaseDO {
     /**
      * 编号，数据库自增
      */
-    @TableId(type = IdType.INPUT)
-    private String id;
+    @TableId
+    private Long id;
     /**
      * 配置编号
      *

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/job/logger/AccessLogCleanJob.java
Patch:
@@ -35,7 +35,7 @@ public class AccessLogCleanJob implements JobHandler {
     public String execute(String param) {
         Integer count = apiAccessLogService.cleanAccessLog(JOB_CLEAN_RETAIN_DAY, DELETE_LIMIT);
         log.info("[execute][定时执行清理访问日志数量 ({}) 个]", count);
-        return String.format("定时执行清理错误日志数量 %s 个", count);
+        return String.format("定时执行清理访问日志数量 %s 个", count);
     }
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/pay/PayWalletStatisticsMapper.java
Patch:
@@ -33,6 +33,6 @@ RechargeSummaryRespBO selectRechargeSummaryGroupByWalletId(@Param("beginTime") L
                                                                @Param("endTime") LocalDateTime endTime,
                                                                @Param("payStatus") Boolean payStatus);
 
-    Integer selectRechargePriceSummary(@Param("payStatus") Integer payStatus);
+    Integer selectRechargePriceSummary(@Param("payStatus") Boolean payStatus);
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/trade/TradeOrderStatisticsMapper.java
Patch:
@@ -58,7 +58,7 @@ List<TradeOrderTrendRespVO> selectListByPayTimeBetweenAndGroupByMonth(@Param("be
 
     Long selectCountByStatusAndDeliveryType(@Param("status") Integer status, @Param("deliveryType") Integer deliveryType);
 
-    TradeOrderSummaryRespVO selectPaySummaryByPayStatusAndPayTimeBetween(@Param("payStatus") Integer payStatus,
+    TradeOrderSummaryRespVO selectPaySummaryByPayStatusAndPayTimeBetween(@Param("payStatus") Boolean payStatus,
                                                                          @Param("beginTime") LocalDateTime beginTime,
                                                                          @Param("endTime") LocalDateTime endTime);
 

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/pay/PayWalletStatisticsServiceImpl.java
Patch:
@@ -46,7 +46,7 @@ public RechargeSummaryRespBO getUserRechargeSummary(LocalDateTime beginTime, Loc
 
     @Override
     public Integer getRechargePriceSummary() {
-        return payWalletStatisticsMapper.selectRechargePriceSummary(PayOrderStatusEnum.SUCCESS.getStatus());
+        return payWalletStatisticsMapper.selectRechargePriceSummary(Boolean.TRUE);
     }
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/trade/TradeOrderStatisticsServiceImpl.java
Patch:
@@ -77,7 +77,7 @@ private TradeOrderSummaryRespVO getPayPriceSummary(LocalDateTime date) {
         LocalDateTime beginTime = LocalDateTimeUtil.beginOfDay(date);
         LocalDateTime endTime = LocalDateTimeUtil.endOfDay(date);
         return tradeOrderStatisticsMapper.selectPaySummaryByPayStatusAndPayTimeBetween(
-                PayOrderStatusEnum.SUCCESS.getStatus(), beginTime, endTime);
+                Boolean.TRUE, beginTime, endTime);
     }
 
     @Override

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/common/SexEnum.java
Patch:
@@ -17,7 +17,7 @@ public enum SexEnum {
     /** 女 */
     FEMALE(2),
     /* 未知 */
-    UNKNOWN(3);
+    UNKNOWN(0);
 
     /**
      * 性别

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/UserController.java
Patch:
@@ -119,6 +119,9 @@ public CommonResult<List<UserSimpleRespVO>> getSimpleUserList() {
     @PreAuthorize("@ss.hasPermission('system:user:query')")
     public CommonResult<UserRespVO> getUser(@RequestParam("id") Long id) {
         AdminUserDO user = userService.getUser(id);
+        if (user == null) {
+            return success(null);
+        }
         // 拼接数据
         DeptDO dept = deptService.getDept(user.getDeptId());
         return success(UserConvert.INSTANCE.convert(user, dept));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -18,15 +18,16 @@
 import cn.iocoder.yudao.module.system.enums.permission.RoleTypeEnum;
 import com.google.common.annotations.VisibleForTesting;
 import com.mzt.logapi.context.LogRecordContext;
+import com.mzt.logapi.service.impl.DiffParseFunction;
 import com.mzt.logapi.starter.annotation.LogRecord;
+import jakarta.annotation.Resource;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.cache.annotation.CacheEvict;
 import org.springframework.cache.annotation.Cacheable;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.StringUtils;
 
-import jakarta.annotation.Resource;
 import java.util.*;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
@@ -116,6 +117,7 @@ public void deleteRole(Long id) {
         permissionService.processRoleDeleted(id);
 
         // 3. 记录操作日志上下文
+        LogRecordContext.putVariable(DiffParseFunction.OLD_OBJECT, BeanUtils.toBean(role, RoleSaveReqVO.class));
         LogRecordContext.putVariable("role", role);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/sms/SmsCodeServiceImpl.java
Patch:
@@ -67,7 +67,8 @@ private String createSmsCode(String mobile, Integer scene, String ip) {
         }
 
         // 创建验证码记录
-        String code = String.valueOf(randomInt(smsCodeProperties.getBeginCode(), smsCodeProperties.getEndCode() + 1));
+        String code = String.format("%0" + smsCodeProperties.getEndCode().toString().length() + "d",
+                randomInt(smsCodeProperties.getBeginCode(), smsCodeProperties.getEndCode() + 1));
         SmsCodeDO newSmsCode = SmsCodeDO.builder().mobile(mobile).code(code).scene(scene)
                 .todayIndex(lastSmsCode != null && isToday(lastSmsCode.getCreateTime()) ? lastSmsCode.getTodayIndex() + 1 : 1)
                 .createIp(ip).used(false).build();

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/dataobject/delivery/DeliveryExpressDO.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
-import com.baomidou.mybatisplus.annotation.IdType;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -21,7 +20,7 @@ public class DeliveryExpressDO extends BaseDO {
     /**
      * 编号，自增
      */
-    @TableId(type = IdType.AUTO)
+    @TableId
     private Long id;
 
     /**

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/util/JdbcUtils.java
Patch:
@@ -35,8 +35,7 @@ public static boolean isConnectionOK(String url, String username, String passwor
      * @return DB 类型
      */
     public static DbType getDbType(String url) {
-        String name = com.alibaba.druid.util.JdbcUtils.getDbType(url, null);
-        return DbType.getDbType(name);
+        return com.baomidou.mybatisplus.extension.toolkit.JdbcUtils.getDbType(url);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/dataobject/business/CrmBusinessStatusDO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.crm.dal.dataobject.business;
 
+import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -19,7 +20,7 @@
 @Builder
 @NoArgsConstructor
 @AllArgsConstructor
-public class CrmBusinessStatusDO {
+public class CrmBusinessStatusDO extends BaseDO {
 
     /**
      * 主键

File: yudao-module-erp/yudao-module-erp-api/src/main/java/cn/iocoder/yudao/module/erp/enums/common/ErpBizTypeEnum.java
Patch:
@@ -20,7 +20,7 @@ public enum ErpBizTypeEnum implements IntArrayValuable {
     PURCHASE_RETURN(12, "采购退货"),
 
     SALE_ORDER(20, "销售订单"),
-    SALE_OUT(21, "销售订单"),
+    SALE_OUT(21, "销售出库"),
     SALE_RETURN(22, "销售退货"),
     ;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/file/FileContentDO.java
Patch:
@@ -28,8 +28,8 @@ public class FileContentDO extends BaseDO {
     /**
      * 编号，数据库自增
      */
-    @TableId(type = IdType.INPUT)
-    private String id;
+    @TableId
+    private Long id;
     /**
      * 配置编号
      *

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/pay/PayWalletStatisticsMapper.java
Patch:
@@ -33,6 +33,6 @@ RechargeSummaryRespBO selectRechargeSummaryGroupByWalletId(@Param("beginTime") L
                                                                @Param("endTime") LocalDateTime endTime,
                                                                @Param("payStatus") Boolean payStatus);
 
-    Integer selectRechargePriceSummary(@Param("payStatus") Integer payStatus);
+    Integer selectRechargePriceSummary(@Param("payStatus") Boolean payStatus);
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/trade/TradeOrderStatisticsMapper.java
Patch:
@@ -58,7 +58,7 @@ List<TradeOrderTrendRespVO> selectListByPayTimeBetweenAndGroupByMonth(@Param("be
 
     Long selectCountByStatusAndDeliveryType(@Param("status") Integer status, @Param("deliveryType") Integer deliveryType);
 
-    TradeOrderSummaryRespVO selectPaySummaryByPayStatusAndPayTimeBetween(@Param("payStatus") Integer payStatus,
+    TradeOrderSummaryRespVO selectPaySummaryByPayStatusAndPayTimeBetween(@Param("payStatus") Boolean payStatus,
                                                                          @Param("beginTime") LocalDateTime beginTime,
                                                                          @Param("endTime") LocalDateTime endTime);
 

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/pay/PayWalletStatisticsServiceImpl.java
Patch:
@@ -46,7 +46,7 @@ public RechargeSummaryRespBO getUserRechargeSummary(LocalDateTime beginTime, Loc
 
     @Override
     public Integer getRechargePriceSummary() {
-        return payWalletStatisticsMapper.selectRechargePriceSummary(PayOrderStatusEnum.SUCCESS.getStatus());
+        return payWalletStatisticsMapper.selectRechargePriceSummary(Boolean.TRUE);
     }
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/trade/TradeOrderStatisticsServiceImpl.java
Patch:
@@ -77,7 +77,7 @@ private TradeOrderSummaryRespVO getPayPriceSummary(LocalDateTime date) {
         LocalDateTime beginTime = LocalDateTimeUtil.beginOfDay(date);
         LocalDateTime endTime = LocalDateTimeUtil.endOfDay(date);
         return tradeOrderStatisticsMapper.selectPaySummaryByPayStatusAndPayTimeBetween(
-                PayOrderStatusEnum.SUCCESS.getStatus(), beginTime, endTime);
+                Boolean.TRUE, beginTime, endTime);
     }
 
     @Override

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/admin/user/vo/MemberUserBaseVO.java
Patch:
@@ -38,7 +38,7 @@ public class MemberUserBaseVO {
     private String name;
 
     @Schema(description = "用户性别", example = "1")
-    private Byte sex;
+    private Integer sex;
 
     @Schema(description = "所在地编号", example = "4371")
     private Long areaId;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/common/SexEnum.java
Patch:
@@ -17,7 +17,7 @@ public enum SexEnum {
     /** 女 */
     FEMALE(2),
     /* 未知 */
-    UNKNOWN(3);
+    UNKNOWN(0);
 
     /**
      * 性别

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/UserController.java
Patch:
@@ -119,6 +119,9 @@ public CommonResult<List<UserSimpleRespVO>> getSimpleUserList() {
     @PreAuthorize("@ss.hasPermission('system:user:query')")
     public CommonResult<UserRespVO> getUser(@RequestParam("id") Long id) {
         AdminUserDO user = userService.getUser(id);
+        if (user == null) {
+            return success(null);
+        }
         // 拼接数据
         DeptDO dept = deptService.getDept(user.getDeptId());
         return success(UserConvert.INSTANCE.convert(user, dept));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -18,15 +18,16 @@
 import cn.iocoder.yudao.module.system.enums.permission.RoleTypeEnum;
 import com.google.common.annotations.VisibleForTesting;
 import com.mzt.logapi.context.LogRecordContext;
+import com.mzt.logapi.service.impl.DiffParseFunction;
 import com.mzt.logapi.starter.annotation.LogRecord;
+import jakarta.annotation.Resource;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.cache.annotation.CacheEvict;
 import org.springframework.cache.annotation.Cacheable;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.StringUtils;
 
-import javax.annotation.Resource;
 import java.util.*;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
@@ -116,6 +117,7 @@ public void deleteRole(Long id) {
         permissionService.processRoleDeleted(id);
 
         // 3. 记录操作日志上下文
+        LogRecordContext.putVariable(DiffParseFunction.OLD_OBJECT, BeanUtils.toBean(role, RoleSaveReqVO.class));
         LogRecordContext.putVariable("role", role);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/sms/SmsCodeServiceImpl.java
Patch:
@@ -67,7 +67,8 @@ private String createSmsCode(String mobile, Integer scene, String ip) {
         }
 
         // 创建验证码记录
-        String code = String.valueOf(randomInt(smsCodeProperties.getBeginCode(), smsCodeProperties.getEndCode() + 1));
+        String code = String.format("%0" + smsCodeProperties.getEndCode().toString().length() + "d",
+                randomInt(smsCodeProperties.getBeginCode(), smsCodeProperties.getEndCode() + 1));
         SmsCodeDO newSmsCode = SmsCodeDO.builder().mobile(mobile).code(code).scene(scene)
                 .todayIndex(lastSmsCode != null && isToday(lastSmsCode.getCreateTime()) ? lastSmsCode.getTodayIndex() + 1 : 1)
                 .createIp(ip).used(false).build();

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/file/FileContentDO.java
Patch:
@@ -28,8 +28,8 @@ public class FileContentDO extends BaseDO {
     /**
      * 编号，数据库自增
      */
-    @TableId(type = IdType.INPUT)
-    private String id;
+    @TableId
+    private Long id;
     /**
      * 配置编号
      *

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/file/FileContentDO.java
Patch:
@@ -28,8 +28,8 @@ public class FileContentDO extends BaseDO {
     /**
      * 编号，数据库自增
      */
-    @TableId(type = IdType.INPUT)
-    private String id;
+    @TableId
+    private Long id;
     /**
      * 配置编号
      *

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/collection/MapUtils.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.collection.CollectionUtil;
+import cn.hutool.core.util.ObjUtil;
 import cn.iocoder.yudao.framework.common.core.KeyValue;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Multimap;
@@ -40,14 +41,15 @@ public static <K, V> List<V> getList(Multimap<K, V> multimap, Collection<K> keys
 
     /**
      * 从哈希表查找到 key 对应的 value，然后进一步处理
+     * key 为 null 时, 不处理
      * 注意，如果查找到的 value 为 null 时，不进行处理
      *
      * @param map 哈希表
      * @param key key
      * @param consumer 进一步处理的逻辑
      */
     public static <K, V> void findAndThen(Map<K, V> map, K key, Consumer<V> consumer) {
-        if (CollUtil.isEmpty(map)) {
+        if (ObjUtil.isNull(key) || CollUtil.isEmpty(map)) {
             return;
         }
         V value = map.get(key);

File: yudao-framework/yudao-spring-boot-starter-biz-operatelog/src/main/java/cn/iocoder/yudao/framework/operatelog/core/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.framework.operatelog.core;

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/datasource/config/YudaoDataSourceAutoConfiguration.java
Patch:
@@ -23,7 +23,7 @@ public class YudaoDataSourceAutoConfiguration {
      * 创建 DruidAdRemoveFilter 过滤器，过滤 common.js 的广告
      */
     @Bean
-    @ConditionalOnProperty(name = "spring.datasource.druid.web-stat-filter.enabled", havingValue = "true")
+    @ConditionalOnProperty(name = "spring.datasource.druid.stat-view-servlet.enabled", havingValue = "true")
     public FilterRegistrationBean<DruidAdRemoveFilter> druidAdRemoveFilterFilter(DruidStatProperties properties) {
         // 获取 druid web 监控页面的参数
         DruidStatProperties.StatViewServlet config = properties.getStatViewServlet();

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/config/YudaoMybatisAutoConfiguration.java
Patch:
@@ -3,6 +3,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.mybatis.core.handler.DefaultDBFieldHandler;
 import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration;
 import com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;
 import com.baomidou.mybatisplus.core.incrementer.IKeyGenerator;
 import com.baomidou.mybatisplus.extension.incrementer.*;
@@ -20,7 +21,7 @@
  *
  * @author 芋道源码
  */
-@AutoConfiguration
+@AutoConfiguration(before = MybatisPlusAutoConfiguration.class) // 目的：先于 MyBatis Plus 自动配置，避免 @MapperScan 可能扫描不到 Mapper 打印 warn 日志
 @MapperScan(value = "${yudao.info.base-package}", annotationClass = Mapper.class,
         lazyInitialization = "${mybatis.lazy-initialization:false}") // Mapper 懒加载，目前仅用于单元测试
 public class YudaoMybatisAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.framework;

File: yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/idempotent/core/keyresolver/impl/DefaultIdempotentKeyResolver.java
Patch:
@@ -7,7 +7,7 @@
 import org.aspectj.lang.JoinPoint;
 
 /**
- * 默认幂等 Key 解析器，使用方法名 + 方法参数，组装成一个 Key
+ * 默认（全局级别）幂等 Key 解析器，使用方法名 + 方法参数，组装成一个 Key
  *
  * 为了避免 Key 过长，使用 MD5 进行“压缩”
  *

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/config/YudaoRedisAutoConfiguration.java
Patch:
@@ -3,6 +3,7 @@
 import cn.hutool.core.util.ReflectUtil;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
+import org.redisson.spring.starter.RedissonAutoConfigurationV2;
 import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
 import org.springframework.data.redis.connection.RedisConnectionFactory;
@@ -12,7 +13,7 @@
 /**
  * Redis 配置类
  */
-@AutoConfiguration
+@AutoConfiguration(before = RedissonAutoConfigurationV2.class) // 目的：使用自己定义的 RedisTemplate Bean
 public class YudaoRedisAutoConfiguration {
 
     /**

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/operatelog/config/YudaoOperateLogConfiguration.java
Patch:
@@ -16,7 +16,7 @@
 @EnableLogRecord(tenant = "") // 貌似用不上 tenant 这玩意给个空好啦
 @AutoConfiguration
 @Slf4j
-public class YudaoOperateLogV2Configuration {
+public class YudaoOperateLogConfiguration {
 
     @Bean
     @Primary

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoSecurityAutoConfiguration.java
Patch:
@@ -10,8 +10,10 @@
 import cn.iocoder.yudao.framework.web.core.handler.GlobalExceptionHandler;
 import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
 import cn.iocoder.yudao.module.system.api.permission.PermissionApi;
+import jakarta.annotation.Resource;
 import org.springframework.beans.factory.config.MethodInvokingFactoryBean;
 import org.springframework.boot.autoconfigure.AutoConfiguration;
+import org.springframework.boot.autoconfigure.AutoConfigureOrder;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.security.core.context.SecurityContextHolder;
@@ -20,8 +22,6 @@
 import org.springframework.security.web.AuthenticationEntryPoint;
 import org.springframework.security.web.access.AccessDeniedHandler;
 
-import jakarta.annotation.Resource;
-
 /**
  * Spring Security 自动配置类，主要用于相关组件的配置
  *
@@ -31,6 +31,7 @@
  * @author 芋道源码
  */
 @AutoConfiguration
+@AutoConfigureOrder(-1) // 目的：先于 Spring Security 自动配置，避免一键改包后，org.* 基础包无法生效
 @EnableConfigurationProperties(SecurityProperties.class)
 public class YudaoSecurityAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/filter/TokenAuthenticationFilter.java
Patch:
@@ -83,6 +83,7 @@ private LoginUser buildLoginUserByToken(String token, Integer userType) {
             }
             // 构建登录用户
             return new LoginUser().setId(accessToken.getUserId()).setUserType(accessToken.getUserType())
+                    .setInfo(accessToken.getUserInfo()) // 额外的用户信息
                     .setTenantId(accessToken.getTenantId()).setScopes(accessToken.getScopes());
         } catch (ServiceException serviceException) {
             // 校验 Token 不通过时，考虑到一些接口是无需登录的，所以直接返回 null 即可

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseDbAndRedisUnitTest.java
Patch:
@@ -43,7 +43,7 @@ public class BaseDbAndRedisUnitTest {
             RedisTestConfiguration.class, // Redis 测试配置类，用于启动 RedisServer
             YudaoRedisAutoConfiguration.class, // 自己的 Redis 配置类
             RedisAutoConfiguration.class, // Spring Redis 自动配置类
-            RedissonAutoConfiguration.class, // Redisson 自动高配置类
+            RedissonAutoConfiguration.class, // Redisson 自动配置类
     })
     public static class Application {
     }

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseRedisUnitTest.java
Patch:
@@ -24,7 +24,7 @@ public class BaseRedisUnitTest {
             RedisTestConfiguration.class, // Redis 测试配置类，用于启动 RedisServer
             RedisAutoConfiguration.class, // Spring Redis 自动配置类
             YudaoRedisAutoConfiguration.class, // 自己的 Redis 配置类
-            RedissonAutoConfiguration.class, // Redisson 自动高配置类
+            RedissonAutoConfiguration.class, // Redisson 自动配置类
     })
     public static class Application {
     }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiAccessLogFrameworkServiceImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.apilog.core.service;
 
-import cn.hutool.core.bean.BeanUtil;
 import cn.iocoder.yudao.module.infra.api.logger.ApiAccessLogApi;
 import cn.iocoder.yudao.module.infra.api.logger.dto.ApiAccessLogCreateReqDTO;
 import lombok.RequiredArgsConstructor;
@@ -20,8 +19,7 @@ public class ApiAccessLogFrameworkServiceImpl implements ApiAccessLogFrameworkSe
 
     @Override
     @Async
-    public void createApiAccessLog(ApiAccessLog apiAccessLog) {
-        ApiAccessLogCreateReqDTO reqDTO = BeanUtil.copyProperties(apiAccessLog, ApiAccessLogCreateReqDTO.class);
+    public void createApiAccessLog(ApiAccessLogCreateReqDTO reqDTO) {
         apiAccessLogApi.createApiAccessLog(reqDTO);
     }
 

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiErrorLogFrameworkServiceImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.apilog.core.service;
 
-import cn.hutool.core.bean.BeanUtil;
 import cn.iocoder.yudao.module.infra.api.logger.ApiErrorLogApi;
 import cn.iocoder.yudao.module.infra.api.logger.dto.ApiErrorLogCreateReqDTO;
 import lombok.RequiredArgsConstructor;
@@ -20,8 +19,7 @@ public class ApiErrorLogFrameworkServiceImpl implements ApiErrorLogFrameworkServ
 
     @Override
     @Async
-    public void createApiErrorLog(ApiErrorLog apiErrorLog) {
-        ApiErrorLogCreateReqDTO reqDTO = BeanUtil.copyProperties(apiErrorLog, ApiErrorLogCreateReqDTO.class);
+    public void createApiErrorLog(ApiErrorLogCreateReqDTO reqDTO) {
         apiErrorLogApi.createApiErrorLog(reqDTO);
     }
 

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/swagger/config/YudaoSwaggerAutoConfiguration.java
Patch:
@@ -23,6 +23,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Primary;
 import org.springframework.http.HttpHeaders;
 
 import java.util.HashMap;
@@ -91,14 +92,14 @@ private Map<String, SecurityScheme> buildSecuritySchemes() {
      * 自定义 OpenAPI 处理器
      */
     @Bean
+    @Primary // 目的：以我们创建的 OpenAPIService Bean 为主，避免一键改包后，启动报错！
     public OpenAPIService openApiBuilder(Optional<OpenAPI> openAPI,
                                          SecurityService securityParser,
                                          SpringDocConfigProperties springDocConfigProperties,
                                          PropertyResolverUtils propertyResolverUtils,
                                          Optional<List<OpenApiBuilderCustomizer>> openApiBuilderCustomizers,
                                          Optional<List<ServerBaseUrlCustomizer>> serverBaseUrlCustomizers,
                                          Optional<JavadocProvider> javadocProvider) {
-
         return new OpenAPIService(openAPI, securityParser, springDocConfigProperties,
                 propertyResolverUtils, openApiBuilderCustomizers, serverBaseUrlCustomizers, javadocProvider);
     }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/config/YudaoWebAutoConfiguration.java
Patch:
@@ -9,6 +9,7 @@
 import cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.boot.autoconfigure.AutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
@@ -122,7 +123,9 @@ public static <T extends Filter> FilterRegistrationBean<T> createFilterBean(T fi
      * @param restTemplateBuilder {@link RestTemplateAutoConfiguration#restTemplateBuilder}
      */
     @Bean
+    @ConditionalOnMissingBean
     public RestTemplate restTemplate(RestTemplateBuilder restTemplateBuilder) {
         return restTemplateBuilder.build();
     }
+
 }

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/task/BpmTaskStatusEnum.java
Patch:
@@ -11,7 +11,7 @@
  */
 @Getter
 @AllArgsConstructor
-public enum BpmTaskStatustEnum {
+public enum BpmTaskStatusEnum {
 
     RUNNING(1, "审批中"),
     APPROVE(2, "审批通过"),

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/BpmTaskController.java
Patch:
@@ -97,7 +97,7 @@ public CommonResult<PageResult<BpmTaskRespVO>> getTaskDonePage(@Valid BpmTaskPag
     @GetMapping("manager-page")
     @Operation(summary = "获取全部任务的分页", description = "用于【流程任务】菜单")
     @PreAuthorize("@ss.hasPermission('bpm:task:mananger-query')")
-    public CommonResult<PageResult<BpmTaskRespVO>> getDoneTaskPage(@Valid BpmTaskPageReqVO pageVO) {
+    public CommonResult<PageResult<BpmTaskRespVO>> getTaskManagerPage(@Valid BpmTaskPageReqVO pageVO) {
         PageResult<HistoricTaskInstance> pageResult = taskService.getTaskPage(getLoginUserId(), pageVO);
         if (CollUtil.isEmpty(pageResult.getList())) {
             return success(PageResult.empty());

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/oa/BpmOALeaveDO.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.bpm.dal.dataobject.oa;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
-import cn.iocoder.yudao.module.bpm.enums.task.BpmTaskStatustEnum;
+import cn.iocoder.yudao.module.bpm.enums.task.BpmTaskStatusEnum;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
@@ -57,7 +57,7 @@ public class BpmOALeaveDO extends BaseDO {
     /**
      * 审批结果
      *
-     * 枚举 {@link BpmTaskStatustEnum}
+     * 枚举 {@link BpmTaskStatusEnum}
      * 考虑到简单，所以直接复用了 BpmProcessInstanceStatusEnum 枚举，也可以自己定义一个枚举哈
      */
     private Integer status;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/BpmTaskCandidateInvoker.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
+import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmTaskCandidateStrategyEnum;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.system.api.user.AdminUserApi;
@@ -77,6 +78,7 @@ public void validateBpmnConfig(byte[] bpmnBytes) {
      * @param execution 执行任务
      * @return 用户编号集合
      */
+    @DataPermission(enable = false) // 忽略数据权限，避免因为过滤，导致找不到候选人
     public Set<Long> calculateUsers(DelegateExecution execution) {
         Integer strategy = BpmnModelUtils.parseCandidateStrategy(execution.getCurrentFlowElement());
         String param = BpmnModelUtils.parseCandidateParam(execution.getCurrentFlowElement());

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/candidate/strategy/BpmTaskCandidateExpressionStrategy.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.bpm.framework.flowable.core.candidate.strategy;
 
-import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.FlowableUtils;
+import cn.hutool.core.convert.Convert;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.candidate.BpmTaskCandidateStrategy;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmTaskCandidateStrategyEnum;
-import org.dromara.hutool.core.convert.Convert;
+import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.FlowableUtils;
 import org.flowable.engine.delegate.DelegateExecution;
 import org.springframework.stereotype.Component;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/BpmTaskEventListener.java
Patch:
@@ -20,7 +20,7 @@
 import java.util.Set;
 
 /**
- * 监听 {@link org.flowable.task.api.Task} 的开始与完成
+ * 监听 {@link Task} 的开始与完成
  *
  * @author jason
  */

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/task/DemoDelegateClassTaskListener.java
Patch:
@@ -3,14 +3,12 @@
 import lombok.extern.slf4j.Slf4j;
 import org.flowable.engine.delegate.TaskListener;
 import org.flowable.task.service.delegate.DelegateTask;
-import org.springframework.stereotype.Component;
 
 /**
  * 类型为 class 的 TaskListener 监听器示例
  *
  * @author 芋道源码
  */
-@Component
 @Slf4j
 public class DemoDelegateClassTaskListener implements TaskListener {
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/task/DemoSpringExpressionTaskListener.java
Patch:
@@ -2,13 +2,15 @@
 
 import lombok.extern.slf4j.Slf4j;
 import org.flowable.task.service.delegate.DelegateTask;
+import org.springframework.stereotype.Component;
 
 /**
  * 类型为 expression 的 TaskListener 监听器示例
  *
  * @author 芋道源码
  */
 @Slf4j
+@Component
 public class DemoSpringExpressionTaskListener {
 
     public void notify(DelegateTask delegateTask) {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/util/BpmnModelUtils.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ArrayUtil;
-import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmnModelConstants;
 import org.flowable.bpmn.converter.BpmnXMLConverter;
@@ -15,6 +14,7 @@
 
 import static cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmnModelConstants.*;
 import static org.flowable.bpmn.constants.BpmnXMLConstants.FLOWABLE_EXTENSIONS_NAMESPACE;
+import java.util.*;
 
 /**
  * 流程模型转操作工具类
@@ -359,4 +359,5 @@ public static List<UserTask> iteratorFindChildUserTasks(FlowElement source, List
         }
         return userTaskList;
     }
+
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -5,12 +5,12 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.common.util.object.PageUtils;
-import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageReqVO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmFormDO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionInfoDO;
 import cn.iocoder.yudao.module.bpm.dal.mysql.definition.BpmProcessDefinitionInfoMapper;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmnModelConstants;
+import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.FlowableUtils;
 import cn.iocoder.yudao.module.bpm.service.definition.dto.BpmModelMetaInfoRespDTO;
 import jakarta.annotation.Resource;
 import lombok.extern.slf4j.Slf4j;
@@ -109,7 +109,7 @@ public String createProcessDefinition(Model model, BpmModelMetaInfoRespDTO model
         Deployment deploy = repositoryService.createDeployment()
                 .key(model.getKey()).name(model.getName()).category(model.getCategory())
                 .addBytes(model.getKey() + BpmnModelConstants.BPMN_FILE_SUFFIX, bpmnBytes)
-                .tenantId(TenantContextHolder.getTenantIdStr())
+                .tenantId(FlowableUtils.getTenantId())
                 .disableSchemaValidation() // 禁用 XML Schema 验证，因为有自定义的属性
                 .deploy();
 
@@ -195,7 +195,7 @@ public List<ProcessDefinition> getProcessDefinitionListBySuspensionState(Integer
             query.active();
         }
         // 执行查询
-        query.processDefinitionTenantId(TenantContextHolder.getTenantIdStr());
+        query.processDefinitionTenantId(FlowableUtils.getTenantId());
         return query.list();
     }
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java
Patch:
@@ -9,7 +9,7 @@
 import cn.iocoder.yudao.module.bpm.controller.admin.oa.vo.BpmOALeavePageReqVO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.oa.BpmOALeaveDO;
 import cn.iocoder.yudao.module.bpm.dal.mysql.oa.BpmOALeaveMapper;
-import cn.iocoder.yudao.module.bpm.enums.task.BpmTaskStatustEnum;
+import cn.iocoder.yudao.module.bpm.enums.task.BpmTaskStatusEnum;
 import jakarta.annotation.Resource;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
@@ -48,7 +48,7 @@ public Long createLeave(Long userId, BpmOALeaveCreateReqVO createReqVO) {
         // 插入 OA 请假单
         long day = LocalDateTimeUtil.between(createReqVO.getStartTime(), createReqVO.getEndTime()).toDays();
         BpmOALeaveDO leave = BeanUtils.toBean(createReqVO, BpmOALeaveDO.class)
-                .setUserId(userId).setDay(day).setStatus(BpmTaskStatustEnum.RUNNING.getStatus());
+                .setUserId(userId).setDay(day).setStatus(BpmTaskStatusEnum.RUNNING.getStatus());
         leaveMapper.insert(leave);
 
         // 发起 BPM 流程

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -1 +1 @@
-package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.util.ArrayUtil;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.date.DateUtils;import cn.iocoder.yudao.framework.common.util.object.PageUtils;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstanceCancelReqVO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstanceCreateReqVO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstancePageReqVO;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.enums.task.BpmDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.flowable.core.candidate.strategy.BpmTaskCandidateStartUserSelectStrategy;import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmConstants;import cn.iocoder.yudao.module.bpm.framework.flowable.core.event.BpmProcessInstanceEventPublisher;import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.FlowableUtils;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import jakarta.annotation.Resource;import jakarta.validation.Valid;import lombok.extern.slf4j.Slf4j;import org.flowable.bpmn.model.BpmnModel;import org.flowable.bpmn.model.UserTask;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.history.HistoricProcessInstanceQuery;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import java.util.List;import java.util.Map;import java.util.Objects;import java.util.Set;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * * ProcessDefinition & ProcessInstance & Execution & Task 的关系： *  1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * * HistoricProcessInstance & ProcessInstance 的关系： *  1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private HistoryService historyService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private BpmMessageService messageService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private BpmProcessInstanceEventPublisher processInstanceEventPublisher;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery()                .includeProcessVariables()                .processInstanceId(id)                .singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).includeProcessVariables().singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<HistoricProcessInstance> getProcessInstancePage(Long userId,                                                                      BpmProcessInstancePageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        HistoricProcessInstanceQuery processInstanceQuery = historyService.createHistoricProcessInstanceQuery()                .includeProcessVariables()                .orderByProcessInstanceStartTime().desc();        if (userId != null) { // 【我的流程】菜单时，需要传递该字段            processInstanceQuery.startedBy(String.valueOf(userId));        }  else if (pageReqVO.getStartUserId() != null) { // 【管理流程】菜单时，才会传递该字段            processInstanceQuery.startedBy(String.valueOf(pageReqVO.getStartUserId()));        }        if (StrUtil.isNotEmpty(pageReqVO.getName())) {            processInstanceQuery.processInstanceNameLike("%" + pageReqVO.getName() + "%");        }        if (StrUtil.isNotEmpty(pageReqVO.getProcessDefinitionId())) {            processInstanceQuery.processDefinitionId("%" + pageReqVO.getProcessDefinitionId() + "%");        }        if (StrUtil.isNotEmpty(pageReqVO.getCategory())) {            processInstanceQuery.processDefinitionCategory(pageReqVO.getCategory());        }        if (pageReqVO.getStatus() != null) {            processInstanceQuery.variableValueEquals(BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS, pageReqVO.getStatus());        }        if (ArrayUtil.isNotEmpty(pageReqVO.getCreateTime())) {            processInstanceQuery.startedAfter(DateUtils.of(pageReqVO.getCreateTime()[0]));            processInstanceQuery.startedBefore(DateUtils.of(pageReqVO.getCreateTime()[1]));        }        // 查询数量        long processInstanceCount = processInstanceQuery.count();        if (processInstanceCount == 0) {            return PageResult.empty(processInstanceCount);        }        // 查询列表        List<HistoricProcessInstance> processInstanceList = processInstanceQuery.listPage(PageUtils.getStart(pageReqVO), pageReqVO.getPageSize());        return new PageResult<>(processInstanceList, processInstanceCount);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null,                createReqVO.getStartUserSelectAssignees());    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey(),                createReqDTO.getStartUserSelectAssignees());    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey,                                          Map<String, List<Long>> startUserSelectAssignees) {        // 1.1 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 1.2 校验发起人自选审批人        validateStartUserSelectAssignees(definition, startUserSelectAssignees);        // 2. 创建流程实例        FlowableUtils.filterProcessInstanceFormVariable(variables); // 过滤一下，避免 ProcessInstance 系统级的变量被占用        variables.put(BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS, // 流程实例状态：审批中                BpmProcessInstanceStatusEnum.RUNNING.getStatus());        if (CollUtil.isNotEmpty(startUserSelectAssignees)) {            variables.put(BpmConstants.PROCESS_INSTANCE_VARIABLE_START_USER_SELECT_ASSIGNEES, startUserSelectAssignees);        }        ProcessInstance instance = runtimeService.createProcessInstanceBuilder()                .processDefinitionId(definition.getId())                .businessKey(businessKey)                .name(definition.getName().trim())                .variables(variables)                .start();        return instance.getId();    }    private void validateStartUserSelectAssignees(ProcessDefinition definition, Map<String, List<Long>> startUserSelectAssignees) {        // 1. 获得发起人自选审批人的 UserTask 列表        BpmnModel bpmnModel = processDefinitionService.getProcessDefinitionBpmnModel(definition.getId());        List<UserTask> userTaskList = BpmTaskCandidateStartUserSelectStrategy.getStartUserSelectUserTaskList(bpmnModel);        if (CollUtil.isEmpty(userTaskList)) {            return;        }        // 2. 校验发起人自选审批人的 UserTask 是否都配置了        userTaskList.forEach(userTask -> {            List<Long> assignees = startUserSelectAssignees != null ? startUserSelectAssignees.get(userTask.getId()) : null;            if (CollUtil.isEmpty(assignees)) {                throw exception(PROCESS_INSTANCE_START_USER_SELECT_ASSIGNEES_NOT_CONFIG, userTask.getName());            }            Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(assignees);            assignees.forEach(assignee -> {                if (userMap.get(assignee) == null) {                    throw exception(PROCESS_INSTANCE_START_USER_SELECT_ASSIGNEES_NOT_EXISTS, userTask.getName(), assignee);                }            });        });    }    @Override    public void cancelProcessInstanceByStartUser(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 1.1 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 1.2 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 2. 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。        deleteProcessInstance(cancelReqVO.getId(),                BpmDeleteReasonEnum.CANCEL_PROCESS_INSTANCE_BY_START_USER.format(cancelReqVO.getReason()));        // 3. 进一步的处理，交给 updateProcessInstanceCancel 方法    }    @Override    public void cancelProcessInstanceByAdmin(Long userId, BpmProcessInstanceCancelReqVO cancelReqVO) {        // 1.1 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 1.2 管理员取消，不用校验是否为自己的        AdminUserRespDTO user = adminUserApi.getUser(userId);        // 2. 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。        deleteProcessInstance(cancelReqVO.getId(),                BpmDeleteReasonEnum.CANCEL_PROCESS_INSTANCE_BY_ADMIN.format(user.getNickname(), cancelReqVO.getReason()));        // 3. 进一步的处理，交给 updateProcessInstanceCancel 方法    }    @Override    public void updateProcessInstanceWhenCancel(FlowableCancelledEvent event) {        // 1. 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceReject 方法（审批不通过），已经进行更新了        if (BpmDeleteReasonEnum.isRejectReason((String) event.getCause())) {            return;        }        // 2. 更新流程实例 status        runtimeService.setVariable(event.getProcessInstanceId(), BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS,                BpmProcessInstanceStatusEnum.CANCEL.getStatus());        // 3. 发送流程实例的状态事件        // 注意：此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 发送流程实例的状态事件        processInstanceEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceStatusEvent(this, processInstance, BpmProcessInstanceStatusEnum.CANCEL.getStatus()));    }    @Override    public void updateProcessInstanceWhenApprove(ProcessInstance instance) {        // 1. 更新流程实例 status        runtimeService.setVariable(instance.getId(), BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS,                BpmProcessInstanceStatusEnum.APPROVE.getStatus());        // 2. 发送流程被【通过】的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceApproveMessage(instance));        // 3. 发送流程实例的状态事件        // 注意：此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        processInstanceEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceStatusEvent(this, processInstance, BpmProcessInstanceStatusEnum.APPROVE.getStatus()));    }    @Override    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceReject(String id, String reason) {        // 1. 更新流程实例 status        runtimeService.setVariable(id, BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS, BpmProcessInstanceStatusEnum.REJECT.getStatus());        // 2. 删除流程实例，以实现驳回任务时，取消整个审批流程        ProcessInstance processInstance = getProcessInstance(id);        deleteProcessInstance(id, StrUtil.format(BpmDeleteReasonEnum.REJECT_TASK.format(reason)));        // 3. 发送流程被【不通过】的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceRejectMessage(processInstance, reason));        // 4. 发送流程实例的状态事件        processInstanceEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceStatusEvent(this, processInstance, BpmProcessInstanceStatusEnum.REJECT.getStatus()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }}
\ No newline at end of file
+package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.util.ArrayUtil;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.date.DateUtils;import cn.iocoder.yudao.framework.common.util.object.PageUtils;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstanceCancelReqVO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstanceCreateReqVO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstancePageReqVO;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.enums.task.BpmDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.flowable.core.candidate.strategy.BpmTaskCandidateStartUserSelectStrategy;import cn.iocoder.yudao.module.bpm.framework.flowable.core.enums.BpmConstants;import cn.iocoder.yudao.module.bpm.framework.flowable.core.event.BpmProcessInstanceEventPublisher;import cn.iocoder.yudao.module.bpm.framework.flowable.core.util.FlowableUtils;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import jakarta.annotation.Resource;import jakarta.validation.Valid;import lombok.extern.slf4j.Slf4j;import org.flowable.bpmn.model.BpmnModel;import org.flowable.bpmn.model.UserTask;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.history.HistoricProcessInstanceQuery;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * * ProcessDefinition & ProcessInstance & Execution & Task 的关系： *  1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * * HistoricProcessInstance & ProcessInstance 的关系： *  1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private HistoryService historyService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private BpmMessageService messageService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private BpmProcessInstanceEventPublisher processInstanceEventPublisher;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery()                .includeProcessVariables()                .processInstanceId(id)                .singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).includeProcessVariables().singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<HistoricProcessInstance> getProcessInstancePage(Long userId,                                                                      BpmProcessInstancePageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        HistoricProcessInstanceQuery processInstanceQuery = historyService.createHistoricProcessInstanceQuery()                .includeProcessVariables()                .processInstanceTenantId(FlowableUtils.getTenantId())                .orderByProcessInstanceStartTime().desc();        if (userId != null) { // 【我的流程】菜单时，需要传递该字段            processInstanceQuery.startedBy(String.valueOf(userId));        }  else if (pageReqVO.getStartUserId() != null) { // 【管理流程】菜单时，才会传递该字段            processInstanceQuery.startedBy(String.valueOf(pageReqVO.getStartUserId()));        }        if (StrUtil.isNotEmpty(pageReqVO.getName())) {            processInstanceQuery.processInstanceNameLike("%" + pageReqVO.getName() + "%");        }        if (StrUtil.isNotEmpty(pageReqVO.getProcessDefinitionId())) {            processInstanceQuery.processDefinitionId("%" + pageReqVO.getProcessDefinitionId() + "%");        }        if (StrUtil.isNotEmpty(pageReqVO.getCategory())) {            processInstanceQuery.processDefinitionCategory(pageReqVO.getCategory());        }        if (pageReqVO.getStatus() != null) {            processInstanceQuery.variableValueEquals(BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS, pageReqVO.getStatus());        }        if (ArrayUtil.isNotEmpty(pageReqVO.getCreateTime())) {            processInstanceQuery.startedAfter(DateUtils.of(pageReqVO.getCreateTime()[0]));            processInstanceQuery.startedBefore(DateUtils.of(pageReqVO.getCreateTime()[1]));        }        // 查询数量        long processInstanceCount = processInstanceQuery.count();        if (processInstanceCount == 0) {            return PageResult.empty(processInstanceCount);        }        // 查询列表        List<HistoricProcessInstance> processInstanceList = processInstanceQuery.listPage(PageUtils.getStart(pageReqVO), pageReqVO.getPageSize());        return new PageResult<>(processInstanceList, processInstanceCount);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null,                createReqVO.getStartUserSelectAssignees());    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey(),                createReqDTO.getStartUserSelectAssignees());    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey,                                          Map<String, List<Long>> startUserSelectAssignees) {        // 1.1 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 1.2 校验发起人自选审批人        validateStartUserSelectAssignees(definition, startUserSelectAssignees);        // 2. 创建流程实例        if (variables == null) {            variables = new HashMap<>();        }        FlowableUtils.filterProcessInstanceFormVariable(variables); // 过滤一下，避免 ProcessInstance 系统级的变量被占用        variables.put(BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS, // 流程实例状态：审批中                BpmProcessInstanceStatusEnum.RUNNING.getStatus());        if (CollUtil.isNotEmpty(startUserSelectAssignees)) {            variables.put(BpmConstants.PROCESS_INSTANCE_VARIABLE_START_USER_SELECT_ASSIGNEES, startUserSelectAssignees);        }        ProcessInstance instance = runtimeService.createProcessInstanceBuilder()                .processDefinitionId(definition.getId())                .businessKey(businessKey)                .name(definition.getName().trim())                .variables(variables)                .start();        return instance.getId();    }    private void validateStartUserSelectAssignees(ProcessDefinition definition, Map<String, List<Long>> startUserSelectAssignees) {        // 1. 获得发起人自选审批人的 UserTask 列表        BpmnModel bpmnModel = processDefinitionService.getProcessDefinitionBpmnModel(definition.getId());        List<UserTask> userTaskList = BpmTaskCandidateStartUserSelectStrategy.getStartUserSelectUserTaskList(bpmnModel);        if (CollUtil.isEmpty(userTaskList)) {            return;        }        // 2. 校验发起人自选审批人的 UserTask 是否都配置了        userTaskList.forEach(userTask -> {            List<Long> assignees = startUserSelectAssignees != null ? startUserSelectAssignees.get(userTask.getId()) : null;            if (CollUtil.isEmpty(assignees)) {                throw exception(PROCESS_INSTANCE_START_USER_SELECT_ASSIGNEES_NOT_CONFIG, userTask.getName());            }            Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(assignees);            assignees.forEach(assignee -> {                if (userMap.get(assignee) == null) {                    throw exception(PROCESS_INSTANCE_START_USER_SELECT_ASSIGNEES_NOT_EXISTS, userTask.getName(), assignee);                }            });        });    }    @Override    public void cancelProcessInstanceByStartUser(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 1.1 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 1.2 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 2. 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。        deleteProcessInstance(cancelReqVO.getId(),                BpmDeleteReasonEnum.CANCEL_PROCESS_INSTANCE_BY_START_USER.format(cancelReqVO.getReason()));        // 3. 进一步的处理，交给 updateProcessInstanceCancel 方法    }    @Override    public void cancelProcessInstanceByAdmin(Long userId, BpmProcessInstanceCancelReqVO cancelReqVO) {        // 1.1 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 1.2 管理员取消，不用校验是否为自己的        AdminUserRespDTO user = adminUserApi.getUser(userId);        // 2. 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。        deleteProcessInstance(cancelReqVO.getId(),                BpmDeleteReasonEnum.CANCEL_PROCESS_INSTANCE_BY_ADMIN.format(user.getNickname(), cancelReqVO.getReason()));        // 3. 进一步的处理，交给 updateProcessInstanceCancel 方法    }    @Override    public void updateProcessInstanceWhenCancel(FlowableCancelledEvent event) {        // 1. 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceReject 方法（审批不通过），已经进行更新了        if (BpmDeleteReasonEnum.isRejectReason((String) event.getCause())) {            return;        }        // 2. 更新流程实例 status        runtimeService.setVariable(event.getProcessInstanceId(), BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS,                BpmProcessInstanceStatusEnum.CANCEL.getStatus());        // 3. 发送流程实例的状态事件        // 注意：此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 发送流程实例的状态事件        processInstanceEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceStatusEvent(this, processInstance, BpmProcessInstanceStatusEnum.CANCEL.getStatus()));    }    @Override    public void updateProcessInstanceWhenApprove(ProcessInstance instance) {        // 1. 更新流程实例 status        runtimeService.setVariable(instance.getId(), BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS,                BpmProcessInstanceStatusEnum.APPROVE.getStatus());        // 2. 发送流程被【通过】的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceApproveMessage(instance));        // 3. 发送流程实例的状态事件        // 注意：此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        processInstanceEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceStatusEvent(this, processInstance, BpmProcessInstanceStatusEnum.APPROVE.getStatus()));    }    @Override    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceReject(String id, String reason) {        // 1. 更新流程实例 status        runtimeService.setVariable(id, BpmConstants.PROCESS_INSTANCE_VARIABLE_STATUS, BpmProcessInstanceStatusEnum.REJECT.getStatus());        // 2. 删除流程实例，以实现驳回任务时，取消整个审批流程        ProcessInstance processInstance = getProcessInstance(id);        deleteProcessInstance(id, StrUtil.format(BpmDeleteReasonEnum.REJECT_TASK.format(reason)));        // 3. 发送流程被【不通过】的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceRejectMessage(processInstance, reason));        // 4. 发送流程实例的状态事件        processInstanceEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.buildProcessInstanceStatusEvent(this, processInstance, BpmProcessInstanceStatusEnum.REJECT.getStatus()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }}
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/LogRecordConstants.java
Patch:
@@ -142,11 +142,11 @@ public interface LogRecordConstants {
 
     String CRM_RECEIVABLE_TYPE = "CRM 回款";
     String CRM_RECEIVABLE_CREATE_SUB_TYPE = "创建回款";
-    String CRM_RECEIVABLE_CREATE_SUCCESS = "创建了合同【{getContractById{#receivable.contractId}}】的第【{{#receivable.period}}】期回款";
+    String CRM_RECEIVABLE_CREATE_SUCCESS = "创建了合同【{getContractById{#receivable.contractId}}】的{{#period != null ? '【第'+ #period +'期】' : '编号为【'+ #receivable.no +'】的'}}回款";
     String CRM_RECEIVABLE_UPDATE_SUB_TYPE = "更新回款";
-    String CRM_RECEIVABLE_UPDATE_SUCCESS = "更新了合同【{getContractById{#receivable.contractId}}】的第【{{#receivable.period}}】期回款: {_DIFF{#updateReqVO}}";
+    String CRM_RECEIVABLE_UPDATE_SUCCESS = "更新了合同【{getContractById{#receivable.contractId}}】的{{#period != null ? '【第'+ #period +'期】' : '编号为【'+ #receivable.no +'】的'}}回款: {_DIFF{#updateReqVO}}";
     String CRM_RECEIVABLE_DELETE_SUB_TYPE = "删除回款";
-    String CRM_RECEIVABLE_DELETE_SUCCESS = "删除了合同【{getContractById{#receivable.contractId}}】的第【{{#receivable.period}}】期回款";
+    String CRM_RECEIVABLE_DELETE_SUCCESS = "删除了合同【{getContractById{#receivable.contractId}}】的{{#period != null ? '【第'+ #period +'期】' : '编号为【'+ #receivable.no +'】的'}}回款";
     String CRM_RECEIVABLE_SUBMIT_SUB_TYPE = "提交回款审批";
     String CRM_RECEIVABLE_SUBMIT_SUCCESS = "提交编号为【{{#receivableNo}}】的回款审批成功";
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessSaveReqVO.java
Patch:
@@ -66,13 +66,13 @@ public class CrmBusinessSaveReqVO {
     private Long contactId; // 使用场景，在【联系人详情】添加商机时，如果需要关联两者，需要传递 contactId 字段
 
     @Schema(description = "产品列表")
-    private List<Product> products;
+    private List<BusinessProduct> products;
 
     @Schema(description = "产品列表")
     @Data
     @NoArgsConstructor
     @AllArgsConstructor
-    public static class Product {
+    public static class BusinessProduct {
 
         @Schema(description = "产品编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "20529")
         @NotNull(message = "产品编号不能为空")

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/clue/CrmClueController.java
Patch:
@@ -1,14 +1,14 @@
 package cn.iocoder.yudao.module.crm.controller.admin.clue;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotation.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
 import cn.iocoder.yudao.framework.ip.core.utils.AreaUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.clue.vo.CrmCluePageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.clue.vo.CrmClueRespVO;
 import cn.iocoder.yudao.module.crm.controller.admin.clue.vo.CrmClueSaveReqVO;
@@ -37,11 +37,11 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertListByFlatMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static java.util.Collections.singletonList;
 
@@ -112,7 +112,7 @@ public CommonResult<PageResult<CrmClueRespVO>> getCluePage(@Valid CrmCluePageReq
     @GetMapping("/export-excel")
     @Operation(summary = "导出线索 Excel")
     @PreAuthorize("@ss.hasPermission('crm:clue:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportClueExcel(@Valid CrmCluePageReqVO pageReqVO, HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PAGE_SIZE_NONE);
         List<CrmClueDO> list = clueService.getCluePage(pageReqVO, getLoginUserId()).getList();

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/contract/CrmContractController.java
Patch:
@@ -2,14 +2,14 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.lang.Assert;
+import cn.iocoder.yudao.framework.apilog.core.annotation.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract.CrmContractPageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract.CrmContractRespVO;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract.CrmContractSaveReqVO;
@@ -47,10 +47,10 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
 import static cn.iocoder.yudao.framework.common.util.collection.MapUtils.findAndThen;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static java.util.Collections.singletonList;
 
@@ -154,7 +154,7 @@ public CommonResult<PageResult<CrmContractRespVO>> getContractPageByBusiness(@Va
     @GetMapping("/export-excel")
     @Operation(summary = "导出合同 Excel")
     @PreAuthorize("@ss.hasPermission('crm:contract:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportContractExcel(@Valid CrmContractPageReqVO exportReqVO,
                                     HttpServletResponse response) throws IOException {
         PageResult<CrmContractDO> pageResult = contractService.getContractPage(exportReqVO, getLoginUserId());

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/receivable/CrmReceivablePlanController.java
Patch:
@@ -2,12 +2,12 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.lang.Assert;
+import cn.iocoder.yudao.framework.apilog.core.annotation.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.receivable.vo.plan.CrmReceivablePlanPageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.receivable.vo.plan.CrmReceivablePlanRespVO;
 import cn.iocoder.yudao.module.crm.controller.admin.receivable.vo.plan.CrmReceivablePlanSaveReqVO;
@@ -39,11 +39,11 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
 import static cn.iocoder.yudao.framework.common.util.collection.MapUtils.findAndThen;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 
 @Tag(name = "管理后台 - CRM 回款计划")
@@ -123,7 +123,7 @@ public CommonResult<PageResult<CrmReceivablePlanRespVO>> getReceivablePlanPageBy
     @GetMapping("/export-excel")
     @Operation(summary = "导出回款计划 Excel")
     @PreAuthorize("@ss.hasPermission('crm:receivable-plan:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportReceivablePlanExcel(@Valid CrmReceivablePlanPageReqVO exportReqVO,
                                           HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PAGE_SIZE_NONE);

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/statistics/vo/rank/CrmStatisticsRankReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.statistics.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.statistics.vo.rank;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import jakarta.validation.constraints.NotEmpty;
@@ -21,7 +21,7 @@ public class CrmStatisticsRankReqVO {
 
     /**
      * userIds 目前不用前端传递，目前是方便后端通过 deptId 读取编号后，设置回来
-     *
+     * <p>
      * 后续，可能会支持选择部分用户进行查询
      */
     @Schema(description = "负责人用户 id 集合", requiredMode = Schema.RequiredMode.NOT_REQUIRED, example = "2")

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/operatelog/package-info.java
Patch:
@@ -1 +1,4 @@
+/**
+ * crm 模块的 operatelog 拓展封装
+ */
 package cn.iocoder.yudao.module.crm.framework.operatelog;
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/package-info.java
Patch:
@@ -1 +1,4 @@
+/**
+ * crm 模块的 permission 拓展封装
+ */
 package cn.iocoder.yudao.module.crm.framework.permission;
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/web/package-info.java
Patch:
@@ -1,4 +1,4 @@
 /**
- * trade 模块的 web 配置
+ * crm 模块的 web 拓展封装
  */
 package cn.iocoder.yudao.module.crm.framework.web;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -120,7 +120,7 @@ private void validateRelationDataExists(CrmClueSaveReqVO reqVO) {
     }
 
     @Override
-    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CLUE_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CLUE, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateClueFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/product/CrmProductCategoryServiceImpl.java
Patch:
@@ -110,10 +110,10 @@ public void deleteProductCategory(Long id) {
         validateProductCategoryExists(id);
         // 1.2 校验是否还有子分类
         if (productCategoryMapper.selectCountByParentId(id) > 0) {
-            throw exception(product_CATEGORY_EXISTS_CHILDREN);
+            throw exception(PRODUCT_CATEGORY_EXISTS_CHILDREN);
         }
         // 1.3 校验是否被产品使用
-        if (crmProductService.getProductByCategoryId(id) !=null) {
+        if (crmProductService.getProductByCategoryId(id) > 0) {
             throw exception(PRODUCT_CATEGORY_USED);
         }
         // 2. 删除

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/dataobject/delivery/DeliveryExpressDO.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
+import com.baomidou.mybatisplus.annotation.IdType;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -20,7 +21,7 @@ public class DeliveryExpressDO extends BaseDO {
     /**
      * 编号，自增
      */
-    @TableId
+    @TableId(type = IdType.AUTO)
     private Long id;
 
     /**

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/social/SocialClientService.java
Patch:
@@ -67,7 +67,7 @@ public interface SocialClientService {
      * @param reqVO 请求信息
      * @return 小程序二维码
      */
-    byte[] getWxQrcode(SocialWxQrcodeReqDTO reqVO);
+    byte[] getWxaQrcode(SocialWxQrcodeReqDTO reqVO);
 
     // =================== 客户端管理 ===================
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/social/SocialClientServiceImpl.java
Patch:
@@ -229,7 +229,7 @@ public WxMaPhoneNumberInfo getWxMaPhoneNumberInfo(Integer userType, String phone
     }
 
     @Override
-    public byte[] getWxQrcode(SocialWxQrcodeReqDTO reqVO) {
+    public byte[] getWxaQrcode(SocialWxQrcodeReqDTO reqVO) {
         WxMaService service = getWxMaService(reqVO.getUserType());
         try {
             return service.getQrcodeService().createWxaCodeUnlimitBytes(reqVO.getScene(), reqVO.getPath(),

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/pay/PayWalletStatisticsMapper.java
Patch:
@@ -33,6 +33,6 @@ RechargeSummaryRespBO selectRechargeSummaryGroupByWalletId(@Param("beginTime") L
                                                                @Param("endTime") LocalDateTime endTime,
                                                                @Param("payStatus") Boolean payStatus);
 
-    Integer selectRechargePriceSummary(@Param("payStatus") Integer payStatus);
+    Integer selectRechargePriceSummary(@Param("payStatus") Boolean payStatus);
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/trade/TradeOrderStatisticsMapper.java
Patch:
@@ -58,7 +58,7 @@ List<TradeOrderTrendRespVO> selectListByPayTimeBetweenAndGroupByMonth(@Param("be
 
     Long selectCountByStatusAndDeliveryType(@Param("status") Integer status, @Param("deliveryType") Integer deliveryType);
 
-    TradeOrderSummaryRespVO selectPaySummaryByPayStatusAndPayTimeBetween(@Param("payStatus") Integer payStatus,
+    TradeOrderSummaryRespVO selectPaySummaryByPayStatusAndPayTimeBetween(@Param("payStatus") Boolean payStatus,
                                                                          @Param("beginTime") LocalDateTime beginTime,
                                                                          @Param("endTime") LocalDateTime endTime);
 

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/pay/PayWalletStatisticsServiceImpl.java
Patch:
@@ -46,7 +46,7 @@ public RechargeSummaryRespBO getUserRechargeSummary(LocalDateTime beginTime, Loc
 
     @Override
     public Integer getRechargePriceSummary() {
-        return payWalletStatisticsMapper.selectRechargePriceSummary(PayOrderStatusEnum.SUCCESS.getStatus());
+        return payWalletStatisticsMapper.selectRechargePriceSummary(Boolean.TRUE);
     }
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/trade/TradeOrderStatisticsServiceImpl.java
Patch:
@@ -77,7 +77,7 @@ private TradeOrderSummaryRespVO getPayPriceSummary(LocalDateTime date) {
         LocalDateTime beginTime = LocalDateTimeUtil.beginOfDay(date);
         LocalDateTime endTime = LocalDateTimeUtil.endOfDay(date);
         return tradeOrderStatisticsMapper.selectPaySummaryByPayStatusAndPayTimeBetween(
-                PayOrderStatusEnum.SUCCESS.getStatus(), beginTime, endTime);
+                Boolean.TRUE, beginTime, endTime);
     }
 
     @Override

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/common/SexEnum.java
Patch:
@@ -11,13 +11,12 @@
 @Getter
 @AllArgsConstructor
 public enum SexEnum {
-
     /** 男 */
     MALE(1),
     /** 女 */
     FEMALE(2),
     /* 未知 */
-    UNKNOWN(3);
+    UNKNOWN(0);
 
     /**
      * 性别

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/common/SexEnum.java
Patch:
@@ -11,14 +11,12 @@
 @Getter
 @AllArgsConstructor
 public enum SexEnum {
-    /** 未定义 */
-    UNSPECIFIED(0),
     /** 男 */
     MALE(1),
     /** 女 */
     FEMALE(2),
     /* 未知 */
-    UNKNOWN(3);
+    UNKNOWN(0);
 
     /**
      * 性别

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/admin/user/vo/MemberUserBaseVO.java
Patch:
@@ -38,7 +38,7 @@ public class MemberUserBaseVO {
     private String name;
 
     @Schema(description = "用户性别", example = "1")
-    private Byte sex;
+    private Integer sex;
 
     @Schema(description = "所在地编号", example = "4371")
     private Long areaId;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/admin/user/vo/MemberUserBaseVO.java
Patch:
@@ -38,7 +38,7 @@ public class MemberUserBaseVO {
     private String name;
 
     @Schema(description = "用户性别", example = "1")
-    private Byte sex;
+    private Integer sex;
 
     @Schema(description = "所在地编号", example = "4371")
     private Long areaId;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/user/AdminUserDO.java
Patch:
@@ -20,7 +20,7 @@
  * @author 芋道源码
  */
 @TableName(value = "system_users", autoResultMap = true) // 由于 SQL Server 的 system_user 是关键字，所以使用 system_users
-@KeySequence("system_user_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
+@KeySequence("system_users_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)
 @Builder

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseDbAndRedisUnitTest.java
Patch:
@@ -43,7 +43,7 @@ public class BaseDbAndRedisUnitTest {
             RedisTestConfiguration.class, // Redis 测试配置类，用于启动 RedisServer
             YudaoRedisAutoConfiguration.class, // 自己的 Redis 配置类
             RedisAutoConfiguration.class, // Spring Redis 自动配置类
-            RedissonAutoConfiguration.class, // Redisson 自动高配置类
+            RedissonAutoConfiguration.class, // Redisson 自动配置类
     })
     public static class Application {
     }

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseRedisUnitTest.java
Patch:
@@ -24,7 +24,7 @@ public class BaseRedisUnitTest {
             RedisTestConfiguration.class, // Redis 测试配置类，用于启动 RedisServer
             RedisAutoConfiguration.class, // Spring Redis 自动配置类
             YudaoRedisAutoConfiguration.class, // 自己的 Redis 配置类
-            RedissonAutoConfiguration.class, // Redisson 自动高配置类
+            RedissonAutoConfiguration.class, // Redisson 自动配置类
     })
     public static class Application {
     }

File: yudao-module-pay/yudao-module-pay-biz/src/test-integration/java/cn/iocoder/yudao/module/pay/test/BaseDbAndRedisIntegrationTest.java
Patch:
@@ -30,7 +30,7 @@ public class BaseDbAndRedisIntegrationTest {
             // Redis 配置类
             RedisAutoConfiguration.class, // Spring Redis 自动配置类
             YudaoRedisAutoConfiguration.class, // 自己的 Redis 配置类
-            RedissonAutoConfiguration.class, // Redisson 自动高配置类
+            RedissonAutoConfiguration.class, // Redisson 自动配置类
     })
     public static class Application {
     }

File: yudao-module-pay/yudao-module-pay-biz/src/test-integration/java/cn/iocoder/yudao/module/pay/test/BaseRedisIntegrationTest.java
Patch:
@@ -15,7 +15,7 @@ public class BaseRedisIntegrationTest {
             // Redis 配置类
             RedisAutoConfiguration.class, // Spring Redis 自动配置类
             YudaoRedisAutoConfiguration.class, // 自己的 Redis 配置类
-            RedissonAutoConfiguration.class, // Redisson 自动高配置类
+            RedissonAutoConfiguration.class, // Redisson 自动配置类
     })
     public static class Application {
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/SmsCallbackController.java
Patch:
@@ -26,7 +26,7 @@ public class SmsCallbackController {
 
     @PostMapping("/aliyun")
     @PermitAll
-    @Operation(summary = "阿里云短信的回调", description = "参见 https://help.aliyun.com/document_detail/120998.html 文档")
+    @Operation(summary = "阿里云短信的回调", description = "参见 https://help.aliyun.com/zh/sms/developer-reference/configure-delivery-receipts-1 文档")
     public CommonResult<Boolean> receiveAliyunSmsStatus(HttpServletRequest request) throws Throwable {
         String text = ServletUtils.getBody(request);
         smsSendService.receiveSmsStatus(SmsChannelEnum.ALIYUN.getCode(), text);
@@ -35,7 +35,7 @@ public CommonResult<Boolean> receiveAliyunSmsStatus(HttpServletRequest request)
 
     @PostMapping("/tencent")
     @PermitAll
-    @Operation(summary = "腾讯云短信的回调", description = "参见 https://cloud.tencent.com/document/product/382/52077 文档")
+    @Operation(summary = "腾讯云短信的回调", description = "参见 https://cloud.tencent.com/document/product/382/59178 文档")
     public CommonResult<Boolean> receiveTencentSmsStatus(HttpServletRequest request) throws Throwable {
         String text = ServletUtils.getBody(request);
         smsSendService.receiveSmsStatus(SmsChannelEnum.TENCENT.getCode(), text);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/oauth2/OAuth2AccessTokenMapper.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
+import cn.iocoder.yudao.framework.tenant.core.aop.TenantIgnore;
 import cn.iocoder.yudao.module.system.controller.admin.oauth2.vo.token.OAuth2AccessTokenPageReqVO;
 import cn.iocoder.yudao.module.system.dal.dataobject.oauth2.OAuth2AccessTokenDO;
 import org.apache.ibatis.annotations.Mapper;
@@ -13,6 +14,7 @@
 @Mapper
 public interface OAuth2AccessTokenMapper extends BaseMapperX<OAuth2AccessTokenDO> {
 
+    @TenantIgnore // 获取 token 的时候，需要忽略租户编号。原因是：一些场景下，可能不会传递 tenant-id 请求头，例如说文件上传、积木报表等等
     default OAuth2AccessTokenDO selectByAccessToken(String accessToken) {
         return selectOne(OAuth2AccessTokenDO::getAccessToken, accessToken);
     }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -120,7 +120,7 @@ private void validateRelationDataExists(CrmClueSaveReqVO reqVO) {
     }
 
     @Override
-    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CLUE_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CLUE, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateClueFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentServiceImpl.java
Patch:
@@ -113,7 +113,7 @@ public void updateCommentVisible(ProductCommentUpdateVisibleReqVO updateReqVO) {
 
         // 更新可见状态
         productCommentMapper.updateById(new ProductCommentDO().setId(updateReqVO.getId())
-                .setVisible(true));
+                .setVisible(updateReqVO.getVisible()));
     }
 
     @Override

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptRespVO.java
Patch:
@@ -18,7 +18,7 @@ public class DeptRespVO {
     @Schema(description = "父部门 ID", example = "1024")
     private Long parentId;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer sort;
 
     @Schema(description = "负责人的用户编号", example = "2048")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptSaveReqVO.java
Patch:
@@ -25,7 +25,7 @@ public class DeptSaveReqVO {
     @Schema(description = "父部门 ID", example = "1024")
     private Long parentId;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostRespVO.java
Patch:
@@ -27,7 +27,7 @@ public class PostRespVO {
     @ExcelProperty("岗位编码")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @ExcelProperty("岗位排序")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostSaveReqVO.java
Patch:
@@ -26,7 +26,7 @@ public class PostSaveReqVO {
     @Size(max = 64, message = "岗位编码长度不能超过64个字符")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataRespVO.java
Patch:
@@ -19,7 +19,7 @@ public class DictDataRespVO {
     @ExcelProperty("字典编码")
     private Long id;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @ExcelProperty("字典排序")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataSaveReqVO.java
Patch:
@@ -16,7 +16,7 @@ public class DictDataSaveReqVO {
     @Schema(description = "字典数据编号", example = "1024")
     private Long id;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuRespVO.java
Patch:
@@ -28,7 +28,7 @@ public class MenuRespVO {
     @NotNull(message = "菜单类型不能为空")
     private Integer type;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuSaveVO.java
Patch:
@@ -27,7 +27,7 @@ public class MenuSaveVO {
     @NotNull(message = "菜单类型不能为空")
     private Integer type;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleRespVO.java
Patch:
@@ -30,7 +30,7 @@ public class RoleRespVO {
     @ExcelProperty("角色标志")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @ExcelProperty("角色排序")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleSaveReqVO.java
Patch:
@@ -27,7 +27,7 @@ public class RoleSaveReqVO {
     @DiffLogField(name = "角色标志")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     @DiffLogField(name = "显示顺序")
     private Integer sort;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -120,7 +120,7 @@ private void validateRelationDataExists(CrmClueSaveReqVO reqVO) {
     }
 
     @Override
-    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CLUE_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CLUE, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateClueFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentServiceImpl.java
Patch:
@@ -113,7 +113,7 @@ public void updateCommentVisible(ProductCommentUpdateVisibleReqVO updateReqVO) {
 
         // 更新可见状态
         productCommentMapper.updateById(new ProductCommentDO().setId(updateReqVO.getId())
-                .setVisible(true));
+                .setVisible(updateReqVO.getVisible()));
     }
 
     @Override

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptRespVO.java
Patch:
@@ -18,7 +18,7 @@ public class DeptRespVO {
     @Schema(description = "父部门 ID", example = "1024")
     private Long parentId;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer sort;
 
     @Schema(description = "负责人的用户编号", example = "2048")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptSaveReqVO.java
Patch:
@@ -25,7 +25,7 @@ public class DeptSaveReqVO {
     @Schema(description = "父部门 ID", example = "1024")
     private Long parentId;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostRespVO.java
Patch:
@@ -27,7 +27,7 @@ public class PostRespVO {
     @ExcelProperty("岗位编码")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @ExcelProperty("岗位排序")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostSaveReqVO.java
Patch:
@@ -26,7 +26,7 @@ public class PostSaveReqVO {
     @Size(max = 64, message = "岗位编码长度不能超过64个字符")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataRespVO.java
Patch:
@@ -19,7 +19,7 @@ public class DictDataRespVO {
     @ExcelProperty("字典编码")
     private Long id;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @ExcelProperty("字典排序")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataSaveReqVO.java
Patch:
@@ -16,7 +16,7 @@ public class DictDataSaveReqVO {
     @Schema(description = "字典数据编号", example = "1024")
     private Long id;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuRespVO.java
Patch:
@@ -28,7 +28,7 @@ public class MenuRespVO {
     @NotNull(message = "菜单类型不能为空")
     private Integer type;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuSaveVO.java
Patch:
@@ -27,7 +27,7 @@ public class MenuSaveVO {
     @NotNull(message = "菜单类型不能为空")
     private Integer type;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleRespVO.java
Patch:
@@ -30,7 +30,7 @@ public class RoleRespVO {
     @ExcelProperty("角色标志")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @ExcelProperty("角色排序")
     private Integer sort;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleSaveReqVO.java
Patch:
@@ -27,7 +27,7 @@ public class RoleSaveReqVO {
     @DiffLogField(name = "角色标志")
     private String code;
 
-    @Schema(description = "显示顺序不能为空", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
+    @Schema(description = "显示顺序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "显示顺序不能为空")
     @DiffLogField(name = "显示顺序")
     private Integer sort;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentServiceImpl.java
Patch:
@@ -113,7 +113,7 @@ public void updateCommentVisible(ProductCommentUpdateVisibleReqVO updateReqVO) {
 
         // 更新可见状态
         productCommentMapper.updateById(new ProductCommentDO().setId(updateReqVO.getId())
-                .setVisible(true));
+                .setVisible(updateReqVO.getVisible()));
     }
 
     @Override

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -120,7 +120,7 @@ private void validateRelationDataExists(CrmClueSaveReqVO reqVO) {
     }
 
     @Override
-    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CLUE_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CLUE, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateClueFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-module-ai/yudao-spring-boot-starter-ai/src/main/java/cn/iocoder/yudao/framework/ai/midjourney/webSocket/listener/MidjourneyMessageListener.java
Patch:
@@ -63,11 +63,11 @@ public void onMessage(DataObject raw) {
 
     private void convertGenerateStatus(MidjourneyMessage mjMessage) {
         if (mjMessage.getType() == 20 && mjMessage.getContent().getStatus().contains("Waiting")) {
-            mjMessage.setGenerateStatus(MidjourneyGennerateStatusEnum.WAITING.getValue());
+            mjMessage.setGenerateStatus(MidjourneyGennerateStatusEnum.WAITING.getStatus());
         } else if (mjMessage.getType() == 20 && !StrUtil.isBlank(mjMessage.getContent().getProgress())) {
-            mjMessage.setGenerateStatus(MidjourneyGennerateStatusEnum.IN_PROGRESS.getValue());
+            mjMessage.setGenerateStatus(MidjourneyGennerateStatusEnum.IN_PROGRESS.getStatus());
         } else if (mjMessage.getType() == 0 && !CollUtil.isEmpty(mjMessage.getComponents())) {
-            mjMessage.setGenerateStatus(MidjourneyGennerateStatusEnum.COMPLETED.getValue());
+            mjMessage.setGenerateStatus(MidjourneyGennerateStatusEnum.COMPLETED.getStatus());
         }
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -120,7 +120,7 @@ private void validateRelationDataExists(CrmClueSaveReqVO reqVO) {
     }
 
     @Override
-    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}",
+    @LogRecord(type = CRM_CLUE_TYPE, subType = CRM_CLUE_FOLLOW_UP_SUB_TYPE, bizNo = "{{#id}}",
             success = CRM_CLUE_FOLLOW_UP_SUCCESS)
     @CrmPermission(bizType = CrmBizTypeEnum.CRM_CLUE, bizId = "#id", level = CrmPermissionLevelEnum.WRITE)
     public void updateClueFollowUp(Long id, LocalDateTime contactNextTime, String contactLastContent) {

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/operatelog/config/YudaoOperateLogConfiguration.java
Patch:
@@ -16,7 +16,7 @@
 @EnableLogRecord(tenant = "") // 貌似用不上 tenant 这玩意给个空好啦
 @AutoConfiguration
 @Slf4j
-public class YudaoOperateLogV2Configuration {
+public class YudaoOperateLogConfiguration {
 
     @Bean
     @Primary

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/statistics/CrmStatisticsCustomerService.java
Patch:
@@ -62,7 +62,7 @@ public interface CrmStatisticsCustomerService {
     /**
      * 客户成交周期(按日期)
      *
-     * 成交的定义：客户 customer 在创建出来，到合同 contract 第一次成交的时间差
+     * 成交周期的定义：客户 customer 在创建出来，到合同 contract 第一次成交的时间差
      *
      * @param reqVO 请求参数
      * @return 统计数据

File: yudao-framework/yudao-spring-boot-starter-biz-operatelog/src/main/java/cn/iocoder/yudao/framework/operatelog/core/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.framework.operatelog.core;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/CrmBusinessController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.crm.controller.admin.business;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.*;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessDO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessProductDO;
@@ -39,11 +39,11 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static cn.iocoder.yudao.module.crm.enums.ErrorCodeConstants.CUSTOMER_NOT_EXISTS;
 
@@ -167,7 +167,7 @@ public CommonResult<PageResult<CrmBusinessRespVO>> getBusinessContactPage(@Valid
     @GetMapping("/export-excel")
     @Operation(summary = "导出商机 Excel")
     @PreAuthorize("@ss.hasPermission('crm:business:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportBusinessExcel(@Valid CrmBusinessPageReqVO exportReqVO,
                                     HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PAGE_SIZE_NONE);

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/clue/CrmClueController.java
Patch:
@@ -1,14 +1,14 @@
 package cn.iocoder.yudao.module.crm.controller.admin.clue;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
 import cn.iocoder.yudao.framework.ip.core.utils.AreaUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.clue.vo.CrmCluePageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.clue.vo.CrmClueRespVO;
 import cn.iocoder.yudao.module.crm.controller.admin.clue.vo.CrmClueSaveReqVO;
@@ -37,11 +37,11 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertListByFlatMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static java.util.Collections.singletonList;
 
@@ -112,7 +112,7 @@ public CommonResult<PageResult<CrmClueRespVO>> getCluePage(@Valid CrmCluePageReq
     @GetMapping("/export-excel")
     @Operation(summary = "导出线索 Excel")
     @PreAuthorize("@ss.hasPermission('crm:clue:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportClueExcel(@Valid CrmCluePageReqVO pageReqVO, HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PAGE_SIZE_NONE);
         List<CrmClueDO> list = clueService.getCluePage(pageReqVO, getLoginUserId()).getList();

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/contract/CrmContractController.java
Patch:
@@ -2,14 +2,14 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.lang.Assert;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract.CrmContractPageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract.CrmContractRespVO;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract.CrmContractSaveReqVO;
@@ -47,10 +47,10 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
 import static cn.iocoder.yudao.framework.common.util.collection.MapUtils.findAndThen;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static java.util.Collections.singletonList;
 
@@ -154,7 +154,7 @@ public CommonResult<PageResult<CrmContractRespVO>> getContractPageByBusiness(@Va
     @GetMapping("/export-excel")
     @Operation(summary = "导出合同 Excel")
     @PreAuthorize("@ss.hasPermission('crm:contract:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportContractExcel(@Valid CrmContractPageReqVO exportReqVO,
                                     HttpServletResponse response) throws IOException {
         PageResult<CrmContractDO> pageResult = contractService.getContractPage(exportReqVO, getLoginUserId());

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/CrmCustomerController.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.map.MapUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.core.KeyValue;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
@@ -14,7 +15,6 @@
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
 import cn.iocoder.yudao.framework.ip.core.Area;
 import cn.iocoder.yudao.framework.ip.core.utils.AreaUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.customer.*;
 import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerDO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerPoolConfigDO;
@@ -44,10 +44,10 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static cn.iocoder.yudao.module.crm.enums.DictTypeConstants.*;
 import static java.util.Collections.singletonList;
@@ -242,7 +242,7 @@ public CommonResult<List<CrmCustomerRespVO>> getCustomerSimpleList() {
     @GetMapping("/export-excel")
     @Operation(summary = "导出客户 Excel")
     @PreAuthorize("@ss.hasPermission('crm:customer:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportCustomerExcel(@Valid CrmCustomerPageReqVO pageVO,
                                     HttpServletResponse response) throws IOException {
         pageVO.setPageSize(PAGE_SIZE_NONE); // 不分页

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/operatelog/CrmOperateLogController.java
Patch:
@@ -8,7 +8,7 @@
 import cn.iocoder.yudao.module.crm.enums.LogRecordConstants;
 import cn.iocoder.yudao.module.crm.enums.common.CrmBizTypeEnum;
 import cn.iocoder.yudao.module.system.api.logger.OperateLogApi;
-import cn.iocoder.yudao.module.system.api.logger.dto.OperateLogV2PageReqDTO;
+import cn.iocoder.yudao.module.system.api.logger.dto.OperateLogPageReqDTO;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import org.springframework.security.access.prepost.PreAuthorize;
@@ -55,9 +55,9 @@ public class CrmOperateLogController {
     @Operation(summary = "获得操作日志")
     @PreAuthorize("@ss.hasPermission('crm:operate-log:query')")
     public CommonResult<PageResult<CrmOperateLogRespVO>> getCustomerOperateLog(@Valid CrmOperateLogPageReqVO pageReqVO) {
-        OperateLogV2PageReqDTO reqDTO = new OperateLogV2PageReqDTO();
+        OperateLogPageReqDTO reqDTO = new OperateLogPageReqDTO();
         reqDTO.setPageSize(PAGE_SIZE_NONE); // 默认不分页，需要分页需注释
-        reqDTO.setBizType(BIZ_TYPE_MAP.get(pageReqVO.getBizType())).setBizId(pageReqVO.getBizId());
+        reqDTO.setType(BIZ_TYPE_MAP.get(pageReqVO.getBizType())).setBizId(pageReqVO.getBizId());
         return success(BeanUtils.toBean(operateLogApi.getOperateLogPage(reqDTO), CrmOperateLogRespVO.class));
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/product/CrmProductController.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.module.crm.controller.admin.product;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.framework.translate.core.TranslateUtils;
 import cn.iocoder.yudao.module.crm.controller.admin.product.vo.product.CrmProductPageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.product.vo.product.CrmProductRespVO;
@@ -27,9 +27,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - CRM 产品")
 @RestController
@@ -94,7 +94,7 @@ public CommonResult<PageResult<CrmProductRespVO>> getProductPage(@Valid CrmProdu
     @GetMapping("/export-excel")
     @Operation(summary = "导出产品 Excel")
     @PreAuthorize("@ss.hasPermission('crm:product:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportProductExcel(@Valid CrmProductPageReqVO exportReqVO,
                                    HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/receivable/CrmReceivablePlanController.java
Patch:
@@ -2,12 +2,12 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.lang.Assert;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.crm.controller.admin.receivable.vo.plan.CrmReceivablePlanPageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.receivable.vo.plan.CrmReceivablePlanRespVO;
 import cn.iocoder.yudao.module.crm.controller.admin.receivable.vo.plan.CrmReceivablePlanSaveReqVO;
@@ -39,11 +39,11 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
 import static cn.iocoder.yudao.framework.common.util.collection.MapUtils.findAndThen;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 
 @Tag(name = "管理后台 - CRM 回款计划")
@@ -123,7 +123,7 @@ public CommonResult<PageResult<CrmReceivablePlanRespVO>> getReceivablePlanPageBy
     @GetMapping("/export-excel")
     @Operation(summary = "导出回款计划 Excel")
     @PreAuthorize("@ss.hasPermission('crm:receivable-plan:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportReceivablePlanExcel(@Valid CrmReceivablePlanPageReqVO exportReqVO,
                                           HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/finance/ErpAccountController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.module.erp.controller.admin.finance;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.account.ErpAccountPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.account.ErpAccountRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.account.ErpAccountSaveReqVO;
@@ -26,9 +26,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 结算账户")
 @RestController
@@ -103,7 +103,7 @@ public CommonResult<PageResult<ErpAccountRespVO>> getAccountPage(@Valid ErpAccou
     @GetMapping("/export-excel")
     @Operation(summary = "导出结算账户 Excel")
     @PreAuthorize("@ss.hasPermission('erp:account:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportAccountExcel(@Valid ErpAccountPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/finance/ErpFinancePaymentController.java
Patch:
@@ -1,14 +1,14 @@
 package cn.iocoder.yudao.module.erp.controller.admin.finance;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.payment.ErpFinancePaymentPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.payment.ErpFinancePaymentRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.payment.ErpFinancePaymentSaveReqVO;
@@ -36,9 +36,9 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 付款单")
 @RestController
@@ -114,7 +114,7 @@ public CommonResult<PageResult<ErpFinancePaymentRespVO>> getFinancePaymentPage(@
     @GetMapping("/export-excel")
     @Operation(summary = "导出付款单 Excel")
     @PreAuthorize("@ss.hasPermission('erp:finance-payment:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportFinancePaymentExcel(@Valid ErpFinancePaymentPageReqVO pageReqVO,
                                          HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/finance/ErpFinanceReceiptController.java
Patch:
@@ -1,14 +1,14 @@
 package cn.iocoder.yudao.module.erp.controller.admin.finance;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.receipt.ErpFinanceReceiptPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.receipt.ErpFinanceReceiptRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.finance.vo.receipt.ErpFinanceReceiptSaveReqVO;
@@ -36,9 +36,9 @@
 import java.util.Map;
 import java.util.stream.Stream;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.*;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 收款单")
 @RestController
@@ -114,7 +114,7 @@ public CommonResult<PageResult<ErpFinanceReceiptRespVO>> getFinanceReceiptPage(@
     @GetMapping("/export-excel")
     @Operation(summary = "导出收款单 Excel")
     @PreAuthorize("@ss.hasPermission('erp:finance-receipt:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportFinanceReceiptExcel(@Valid ErpFinanceReceiptPageReqVO pageReqVO,
                                          HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/product/ErpProductCategoryController.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.module.erp.controller.admin.product;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.category.ErpProductCategoryListReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.category.ErpProductCategoryRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.category.ErpProductCategorySaveReqVO;
@@ -23,9 +23,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 产品分类")
 @RestController
@@ -89,7 +89,7 @@ public CommonResult<List<ErpProductCategoryRespVO>> getProductCategorySimpleList
     @GetMapping("/export-excel")
     @Operation(summary = "导出产品分类 Excel")
     @PreAuthorize("@ss.hasPermission('erp:product-category:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportProductCategoryExcel(@Valid ErpProductCategoryListReqVO listReqVO,
               HttpServletResponse response) throws IOException {
         List<ErpProductCategoryDO> list = productCategoryService.getProductCategoryList(listReqVO);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/product/ErpProductController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.module.erp.controller.admin.product;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ProductSaveReqVO;
@@ -25,9 +25,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 产品")
 @RestController
@@ -92,7 +92,7 @@ public CommonResult<List<ErpProductRespVO>> getProductSimpleList() {
     @GetMapping("/export-excel")
     @Operation(summary = "导出产品 Excel")
     @PreAuthorize("@ss.hasPermission('erp:product:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportProductExcel(@Valid ErpProductPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/product/ErpProductUnitController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.module.erp.controller.admin.product;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.unit.ErpProductUnitPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.unit.ErpProductUnitRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.unit.ErpProductUnitSaveReqVO;
@@ -25,9 +25,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 产品单位")
 @RestController
@@ -89,7 +89,7 @@ public CommonResult<List<ErpProductUnitRespVO>> getProductUnitSimpleList() {
     @GetMapping("/export-excel")
     @Operation(summary = "导出产品单位 Excel")
     @PreAuthorize("@ss.hasPermission('erp:product-unit:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportProductUnitExcel(@Valid ErpProductUnitPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/purchase/ErpPurchaseInController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.purchase;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.in.ErpPurchaseInPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.in.ErpPurchaseInRespVO;
@@ -37,10 +37,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 采购入库")
 @RestController
@@ -125,7 +125,7 @@ public CommonResult<PageResult<ErpPurchaseInRespVO>> getPurchaseInPage(@Valid Er
     @GetMapping("/export-excel")
     @Operation(summary = "导出采购入库 Excel")
     @PreAuthorize("@ss.hasPermission('erp:purchase-in:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportPurchaseInExcel(@Valid ErpPurchaseInPageReqVO pageReqVO,
                                     HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/purchase/ErpPurchaseReturnController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.purchase;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.returns.ErpPurchaseReturnPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.returns.ErpPurchaseReturnRespVO;
@@ -37,10 +37,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 采购退货")
 @RestController
@@ -125,7 +125,7 @@ public CommonResult<PageResult<ErpPurchaseReturnRespVO>> getPurchaseReturnPage(@
     @GetMapping("/export-excel")
     @Operation(summary = "导出采购退货 Excel")
     @PreAuthorize("@ss.hasPermission('erp:purchase-return:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportPurchaseReturnExcel(@Valid ErpPurchaseReturnPageReqVO pageReqVO,
                                     HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/purchase/ErpSupplierController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.module.erp.controller.admin.purchase;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.supplier.ErpSupplierPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.supplier.ErpSupplierRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.purchase.vo.supplier.ErpSupplierSaveReqVO;
@@ -25,9 +25,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 供应商")
 @RestController
@@ -89,7 +89,7 @@ public CommonResult<List<ErpSupplierRespVO>> getSupplierSimpleList() {
     @GetMapping("/export-excel")
     @Operation(summary = "导出供应商 Excel")
     @PreAuthorize("@ss.hasPermission('erp:supplier:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportSupplierExcel(@Valid ErpSupplierPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/sale/ErpCustomerController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.module.erp.controller.admin.sale;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.customer.ErpCustomerPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.customer.ErpCustomerRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.customer.ErpCustomerSaveReqVO;
@@ -25,9 +25,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 客户")
 @RestController
@@ -89,7 +89,7 @@ public CommonResult<List<ErpCustomerRespVO>> getCustomerSimpleList() {
     @GetMapping("/export-excel")
     @Operation(summary = "导出客户 Excel")
     @PreAuthorize("@ss.hasPermission('erp:customer:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportCustomerExcel(@Valid ErpCustomerPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/sale/ErpSaleOutController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.sale;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.out.ErpSaleOutPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.out.ErpSaleOutRespVO;
@@ -37,10 +37,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 销售出库")
 @RestController
@@ -125,7 +125,7 @@ public CommonResult<PageResult<ErpSaleOutRespVO>> getSaleOutPage(@Valid ErpSaleO
     @GetMapping("/export-excel")
     @Operation(summary = "导出销售出库 Excel")
     @PreAuthorize("@ss.hasPermission('erp:sale-out:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportSaleOutExcel(@Valid ErpSaleOutPageReqVO pageReqVO,
                                     HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/sale/ErpSaleReturnController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.sale;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.returns.ErpSaleReturnPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.sale.vo.returns.ErpSaleReturnRespVO;
@@ -37,10 +37,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 销售退货")
 @RestController
@@ -125,7 +125,7 @@ public CommonResult<PageResult<ErpSaleReturnRespVO>> getSaleReturnPage(@Valid Er
     @GetMapping("/export-excel")
     @Operation(summary = "导出销售退货 Excel")
     @PreAuthorize("@ss.hasPermission('erp:sale-return:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportSaleReturnExcel(@Valid ErpSaleReturnPageReqVO pageReqVO,
                                     HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/stock/ErpStockCheckController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.stock;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.check.ErpStockCheckPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.check.ErpStockCheckRespVO;
@@ -32,10 +32,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 库存调拨单")
 @RestController
@@ -113,7 +113,7 @@ public CommonResult<PageResult<ErpStockCheckRespVO>> getStockCheckPage(@Valid Er
     @GetMapping("/export-excel")
     @Operation(summary = "导出库存调拨单 Excel")
     @PreAuthorize("@ss.hasPermission('erp:stock-check:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportStockCheckExcel(@Valid ErpStockCheckPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/stock/ErpStockController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.stock;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.stock.ErpStockPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.stock.ErpStockRespVO;
@@ -35,9 +35,9 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 产品库存")
 @RestController
@@ -85,7 +85,7 @@ public CommonResult<PageResult<ErpStockRespVO>> getStockPage(@Valid ErpStockPage
     @GetMapping("/export-excel")
     @Operation(summary = "导出产品库存 Excel")
     @PreAuthorize("@ss.hasPermission('erp:stock:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportStockExcel(@Valid ErpStockPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/stock/ErpStockInController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.stock;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.in.ErpStockInPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.in.ErpStockInRespVO;
@@ -37,10 +37,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 其它入库单")
 @RestController
@@ -125,7 +125,7 @@ public CommonResult<PageResult<ErpStockInRespVO>> getStockInPage(@Valid ErpStock
     @GetMapping("/export-excel")
     @Operation(summary = "导出其它入库单 Excel")
     @PreAuthorize("@ss.hasPermission('erp:stock-in:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportStockInExcel(@Valid ErpStockInPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/stock/ErpStockMoveController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.stock;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.move.ErpStockMovePageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.move.ErpStockMoveRespVO;
@@ -35,10 +35,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 库存调拨单")
 @RestController
@@ -121,7 +121,7 @@ public CommonResult<PageResult<ErpStockMoveRespVO>> getStockMovePage(@Valid ErpS
     @GetMapping("/export-excel")
     @Operation(summary = "导出库存调拨单 Excel")
     @PreAuthorize("@ss.hasPermission('erp:stock-move:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportStockMoveExcel(@Valid ErpStockMovePageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/stock/ErpStockOutController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.stock;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.out.ErpStockOutPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.out.ErpStockOutRespVO;
@@ -37,10 +37,10 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertMultiMap;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 其它出库单")
 @RestController
@@ -125,7 +125,7 @@ public CommonResult<PageResult<ErpStockOutRespVO>> getStockOutPage(@Valid ErpSto
     @GetMapping("/export-excel")
     @Operation(summary = "导出其它出库单 Excel")
     @PreAuthorize("@ss.hasPermission('erp:stock-out:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportStockOutExcel(@Valid ErpStockOutPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/controller/admin/stock/ErpStockRecordController.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.erp.controller.admin.stock;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.erp.controller.admin.product.vo.product.ErpProductRespVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.record.ErpStockRecordPageReqVO;
 import cn.iocoder.yudao.module.erp.controller.admin.stock.vo.record.ErpStockRecordRespVO;
@@ -35,9 +35,9 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - ERP 产品库存明细")
 @RestController
@@ -75,7 +75,7 @@ public CommonResult<PageResult<ErpStockRecordRespVO>> getStockRecordPage(@Valid
     @GetMapping("/export-excel")
     @Operation(summary = "导出产品库存明细 Excel")
     @PreAuthorize("@ss.hasPermission('erp:stock-record:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportStockRecordExcel(@Valid ErpStockRecordPageReqVO pageReqVO,
               HttpServletResponse response) throws IOException {
         pageReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/ConfigController.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.module.infra.controller.admin.config;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.infra.controller.admin.config.vo.*;
 import cn.iocoder.yudao.module.infra.convert.config.ConfigConvert;
 import cn.iocoder.yudao.module.infra.dal.dataobject.config.ConfigDO;
@@ -23,9 +23,9 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - 参数配置")
 @RestController
@@ -93,7 +93,7 @@ public CommonResult<PageResult<ConfigRespVO>> getConfigPage(@Valid ConfigPageReq
     @GetMapping("/export")
     @Operation(summary = "导出参数配置")
     @PreAuthorize("@ss.hasPermission('infra:config:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportConfig(@Valid ConfigPageReqVO exportReqVO,
                              HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileController.java
Patch:
@@ -7,7 +7,6 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.common.util.servlet.ServletUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.infra.controller.admin.file.vo.file.*;
 import cn.iocoder.yudao.module.infra.dal.dataobject.file.FileDO;
 import cn.iocoder.yudao.module.infra.service.file.FileService;
@@ -41,7 +40,6 @@ public class FileController {
 
     @PostMapping("/upload")
     @Operation(summary = "上传文件", description = "模式一：后端上传文件")
-    @OperateLog(logArgs = false) // 上传文件，没有记录操作日志的必要
     public CommonResult<String> uploadFile(FileUploadReqVO uploadReqVO) throws Exception {
         MultipartFile file = uploadReqVO.getFile();
         String path = uploadReqVO.getPath();

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/ApiAccessLogController.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.module.infra.controller.admin.logger;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apiaccesslog.ApiAccessLogPageReqVO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apiaccesslog.ApiAccessLogRespVO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.logger.ApiAccessLogDO;
@@ -24,8 +24,8 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - API 访问日志")
 @RestController
@@ -47,7 +47,7 @@ public CommonResult<PageResult<ApiAccessLogRespVO>> getApiAccessLogPage(@Valid A
     @GetMapping("/export-excel")
     @Operation(summary = "导出API 访问日志 Excel")
     @PreAuthorize("@ss.hasPermission('infra:api-access-log:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportApiAccessLogExcel(@Valid ApiAccessLogPageReqVO exportReqVO,
                                         HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/ApiErrorLogController.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.module.infra.controller.admin.logger;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apierrorlog.ApiErrorLogPageReqVO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apierrorlog.ApiErrorLogRespVO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.logger.ApiErrorLogDO;
@@ -24,8 +24,8 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 
 @Tag(name = "管理后台 - API 错误日志")
@@ -61,7 +61,7 @@ public CommonResult<PageResult<ApiErrorLogRespVO>> getApiErrorLogPage(@Valid Api
     @GetMapping("/export-excel")
     @Operation(summary = "导出 API 错误日志 Excel")
     @PreAuthorize("@ss.hasPermission('infra:api-error-log:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportApiErrorLogExcel(@Valid ApiErrorLogPageReqVO exportReqVO,
               HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenEngine.java
Patch:
@@ -8,6 +8,8 @@
 import cn.hutool.extra.template.TemplateEngine;
 import cn.hutool.extra.template.engine.velocity.VelocityEngine;
 import cn.hutool.system.SystemUtil;
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
+import cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum;
 import cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
@@ -24,8 +26,6 @@
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
-import cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum;
 import cn.iocoder.yudao.module.infra.dal.dataobject.codegen.CodegenColumnDO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.codegen.CodegenTableDO;
 import cn.iocoder.yudao.module.infra.enums.codegen.CodegenFrontTypeEnum;
@@ -211,7 +211,7 @@ void initGlobalBindingMap() {
         globalBindingMap.put("LocalDateTimeUtilsClassName", LocalDateTimeUtils.class.getName());
         globalBindingMap.put("ObjectUtilsClassName", ObjectUtils.class.getName());
         globalBindingMap.put("DictConvertClassName", DictConvert.class.getName());
-        globalBindingMap.put("OperateLogClassName", OperateLog.class.getName());
+        globalBindingMap.put("ApiAccessLogClassName", ApiAccessLog.class.getName());
         globalBindingMap.put("OperateTypeEnumClassName", OperateTypeEnum.class.getName());
         globalBindingMap.put("BeanUtils", BeanUtils.class.getName());
     }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/ProductSpuController.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.module.product.controller.admin.spu;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.product.controller.admin.spu.vo.*;
 import cn.iocoder.yudao.module.product.convert.spu.ProductSpuConvert;
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
@@ -28,9 +28,9 @@
 import java.util.List;
 import java.util.Map;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.pojo.PageParam.PAGE_SIZE_NONE;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - 商品 SPU")
 @RestController
@@ -127,7 +127,7 @@ public CommonResult<Map<Integer, Long>> getSpuCount() {
     @GetMapping("/export")
     @Operation(summary = "导出商品")
     @PreAuthorize("@ss.hasPermission('product:spu:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportSpuList(@Validated ProductSpuPageReqVO reqVO,
                                HttpServletResponse response) throws IOException {
         reqVO.setPageSize(PAGE_SIZE_NONE);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/AfterSaleController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.member.api.user.MemberUserApi;
 import cn.iocoder.yudao.module.member.api.user.dto.MemberUserRespDTO;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayRefundNotifyReqDTO;
@@ -135,7 +134,6 @@ public CommonResult<Boolean> refundAfterSale(@RequestParam("id") Long id) {
     @PostMapping("/update-refunded")
     @Operation(summary = "更新售后订单为已退款") // 由 pay-module 支付服务，进行回调，可见 PayNotifyJob
     @PermitAll // 无需登录，安全由 PayDemoOrderService 内部校验实现
-    @OperateLog(enable = false) // 禁用操作日志，因为没有操作人
     public CommonResult<Boolean> updateAfterRefund(@RequestBody PayRefundNotifyReqDTO notifyReqDTO) {
         // 目前业务逻辑，不需要做任何事情
         // 当然，退款会有小概率会失败的情况，可以监控失败状态，进行告警

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/AppAuthController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.framework.security.config.SecurityProperties;
 import cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils;
 import cn.iocoder.yudao.module.member.controller.app.auth.vo.*;
@@ -64,7 +63,6 @@ public CommonResult<Boolean> logout(HttpServletRequest request) {
     @PostMapping("/refresh-token")
     @Operation(summary = "刷新令牌")
     @Parameter(name = "refreshToken", description = "刷新令牌", required = true)
-    @OperateLog(enable = false) // 避免 Post 请求被记录操作日志
     public CommonResult<AppAuthLoginRespVO> refreshToken(@RequestParam("refreshToken") String refreshToken) {
         return success(authService.refreshToken(refreshToken));
     }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/open/MpOpenController.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.StrUtil;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.framework.tenant.core.util.TenantUtils;
 import cn.iocoder.yudao.module.mp.controller.admin.open.vo.MpOpenCheckSignatureReqVO;
 import cn.iocoder.yudao.module.mp.controller.admin.open.vo.MpOpenHandleMessageReqVO;
@@ -63,7 +62,6 @@ public String checkSignature(@PathVariable("appId") String appId,
      */
     @Operation(summary = "处理消息")
     @PostMapping(value = "/{appId}", produces = "application/xml; charset=UTF-8")
-    @OperateLog(enable = false) // 回调地址，无需记录操作日志
     public String handleMessage(@PathVariable("appId") String appId,
                                 @RequestBody String content,
                                 MpOpenHandleMessageReqVO reqVO) {

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/demo/PayDemoOrderController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayOrderNotifyReqDTO;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayRefundNotifyReqDTO;
 import cn.iocoder.yudao.module.pay.controller.admin.demo.vo.order.PayDemoOrderCreateReqVO;
@@ -50,7 +49,6 @@ public CommonResult<PageResult<PayDemoOrderRespVO>> getDemoOrderPage(@Valid Page
     @PostMapping("/update-paid")
     @Operation(summary = "更新示例订单为已支付") // 由 pay-module 支付服务，进行回调，可见 PayNotifyJob
     @PermitAll // 无需登录，安全由 PayDemoOrderService 内部校验实现
-    @OperateLog(enable = false) // 禁用操作日志，因为没有操作人
     public CommonResult<Boolean> updateDemoOrderPaid(@RequestBody PayOrderNotifyReqDTO notifyReqDTO) {
         payDemoOrderService.updateDemoOrderPaid(Long.valueOf(notifyReqDTO.getMerchantOrderId()),
                 notifyReqDTO.getPayOrderId());
@@ -68,7 +66,6 @@ public CommonResult<Boolean> refundDemoOrder(@RequestParam("id") Long id) {
     @PostMapping("/update-refunded")
     @Operation(summary = "更新示例订单为已退款") // 由 pay-module 支付服务，进行回调，可见 PayNotifyJob
     @PermitAll // 无需登录，安全由 PayDemoOrderService 内部校验实现
-    @OperateLog(enable = false) // 禁用操作日志，因为没有操作人
     public CommonResult<Boolean> updateDemoOrderRefunded(@RequestBody PayRefundNotifyReqDTO notifyReqDTO) {
         payDemoOrderService.updateDemoOrderRefunded(Long.valueOf(notifyReqDTO.getMerchantOrderId()),
                 notifyReqDTO.getPayRefundId());

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/demo/PayDemoTransferController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayTransferNotifyReqDTO;
 import cn.iocoder.yudao.module.pay.controller.admin.demo.vo.transfer.PayDemoTransferCreateReqVO;
 import cn.iocoder.yudao.module.pay.controller.admin.demo.vo.transfer.PayDemoTransferRespVO;
@@ -45,7 +44,6 @@ public CommonResult<PageResult<PayDemoTransferRespVO>> getDemoTransferPage(@Vali
     @PostMapping("/update-status")
     @Operation(summary = "更新示例转账订单的转账状态") // 由 pay-module 转账服务，进行回调
     @PermitAll // 无需登录，安全由 PayDemoTransferService 内部校验实现
-    @OperateLog(enable = false) // 禁用操作日志，因为没有操作人
     public CommonResult<Boolean> updateDemoTransferStatus(@RequestBody PayTransferNotifyReqDTO notifyReqDTO) {
         demoTransferService.updateDemoTransferStatus(Long.valueOf(notifyReqDTO.getMerchantTransferId()),
                 notifyReqDTO.getPayTransferId());

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/notify/PayNotifyController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.framework.pay.core.client.PayClient;
 import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundRespDTO;
@@ -59,7 +58,6 @@ public class PayNotifyController {
     @PostMapping(value = "/order/{channelId}")
     @Operation(summary = "支付渠道的统一【支付】回调")
     @PermitAll
-    @OperateLog(enable = false) // 回调地址，无需记录操作日志
     public String notifyOrder(@PathVariable("channelId") Long channelId,
                               @RequestParam(required = false) Map<String, String> params,
                               @RequestBody(required = false) String body) {
@@ -80,7 +78,6 @@ public String notifyOrder(@PathVariable("channelId") Long channelId,
     @PostMapping(value = "/refund/{channelId}")
     @Operation(summary = "支付渠道的统一【退款】回调")
     @PermitAll
-    @OperateLog(enable = false) // 回调地址，无需记录操作日志
     public String notifyRefund(@PathVariable("channelId") Long channelId,
                               @RequestParam(required = false) Map<String, String> params,
                               @RequestBody(required = false) String body) {

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/wallet/PayWalletRechargeController.java
Patch:
@@ -1,7 +1,6 @@
 package cn.iocoder.yudao.module.pay.controller.admin.wallet;
 
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayOrderNotifyReqDTO;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayRefundNotifyReqDTO;
 import cn.iocoder.yudao.module.pay.service.wallet.PayWalletRechargeService;
@@ -32,7 +31,6 @@ public class PayWalletRechargeController {
     @PostMapping("/update-paid")
     @Operation(summary = "更新钱包充值为已充值") // 由 pay-module 支付服务，进行回调，可见 PayNotifyJob
     @PermitAll // 无需登录， 内部校验实现
-    @OperateLog(enable = false) // 禁用操作日志，因为没有操作人
     public CommonResult<Boolean> updateWalletRechargerPaid(@Valid @RequestBody PayOrderNotifyReqDTO notifyReqDTO) {
         walletRechargeService.updateWalletRechargerPaid(Long.valueOf(notifyReqDTO.getMerchantOrderId()),
                 notifyReqDTO.getPayOrderId());
@@ -51,7 +49,6 @@ public CommonResult<Boolean> refundWalletRecharge(@RequestParam("id") Long id) {
     @PostMapping("/update-refunded")
     @Operation(summary = "更新钱包充值为已退款") // 由 pay-module 支付服务，进行回调，可见 PayNotifyJob
     @PermitAll // 无需登录， 内部校验实现
-    @OperateLog(enable = false) // 禁用操作日志，因为没有操作人
     public CommonResult<Boolean> updateWalletRechargeRefunded(@RequestBody PayRefundNotifyReqDTO notifyReqDTO) {
         walletRechargeService.updateWalletRechargeRefunded(
                 Long.valueOf(notifyReqDTO.getMerchantOrderId()), notifyReqDTO.getPayRefundId());

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/GoViewDataController.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.RandomUtil;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.report.controller.admin.goview.vo.data.GoViewDataGetBySqlReqVO;
 import cn.iocoder.yudao.module.report.controller.admin.goview.vo.data.GoViewDataRespVO;
 import cn.iocoder.yudao.module.report.service.goview.GoViewDataService;
@@ -35,15 +34,13 @@ public class GoViewDataController {
     @RequestMapping("/get-by-sql")
     @Operation(summary = "使用 SQL 查询数据")
     @PreAuthorize("@ss.hasPermission('report:go-view-data:get-by-sql')")
-    @OperateLog(enable = false) // 不记录操作日志，因为不需要
     public CommonResult<GoViewDataRespVO> getDataBySQL(@Valid @RequestBody GoViewDataGetBySqlReqVO reqVO) {
         return success(goViewDataService.getDataBySQL(reqVO.getSql()));
     }
 
     @RequestMapping("/get-by-http")
     @Operation(summary = "使用 HTTP 查询数据", description = "这个只是示例接口，实际应该每个查询，都要写一个接口")
     @PreAuthorize("@ss.hasPermission('report:go-view-data:get-by-http')")
-    @OperateLog(enable = false) // 不记录操作日志，因为不需要
     public CommonResult<GoViewDataRespVO> getDataByHttp(
             @RequestParam(required = false) Map<String, String> params,
             @RequestBody(required = false) String body) { // params、body 按照需要去接收，这里仅仅是示例

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/logger/dto/OperateLogPageReqDTO.java
Patch:
@@ -9,12 +9,12 @@
  * @author HUIHUI
  */
 @Data
-public class OperateLogV2PageReqDTO extends PageParam {
+public class OperateLogPageReqDTO extends PageParam {
 
     /**
      * 模块类型
      */
-    private String bizType;
+    private String type;
     /**
      * 模块数据编号
      */

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/logger/dto/OperateLogRespDTO.java
Patch:
@@ -13,7 +13,7 @@
  * @author HUIHUI
  */
 @Data
-public class OperateLogV2RespDTO implements VO {
+public class OperateLogRespDTO implements VO {
 
     /**
      * 日志编号

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/captcha/CaptchaController.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.util.servlet.ServletUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import com.xingyuv.captcha.model.common.ResponseModel;
 import com.xingyuv.captcha.model.vo.CaptchaVO;
 import com.xingyuv.captcha.service.CaptchaService;
@@ -28,7 +27,6 @@ public class CaptchaController {
     @PostMapping({"/get"})
     @Operation(summary = "获得验证码")
     @PermitAll
-    @OperateLog(enable = false) // 避免 Post 请求被记录操作日志
     public ResponseModel get(@RequestBody CaptchaVO data, HttpServletRequest request) {
         assert request.getRemoteHost() != null;
         data.setBrowserInfo(getRemoteId(request));
@@ -38,7 +36,6 @@ public ResponseModel get(@RequestBody CaptchaVO data, HttpServletRequest request
     @PostMapping("/check")
     @Operation(summary = "校验验证码")
     @PermitAll
-    @OperateLog(enable = false) // 避免 Post 请求被记录操作日志
     public ResponseModel check(@RequestBody CaptchaVO data, HttpServletRequest request) {
         data.setBrowserInfo(getRemoteId(request));
         return captchaService.check(data);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/OperateLogController.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.module.system.controller.admin.logger;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.framework.translate.core.TranslateUtils;
 import cn.iocoder.yudao.module.system.controller.admin.logger.vo.operatelog.OperateLogPageReqVO;
 import cn.iocoder.yudao.module.system.controller.admin.logger.vo.operatelog.OperateLogRespVO;
@@ -25,8 +25,8 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - 操作日志")
 @RestController
@@ -48,7 +48,7 @@ public CommonResult<PageResult<OperateLogRespVO>> pageOperateLog(@Valid OperateL
     @Operation(summary = "导出操作日志")
     @GetMapping("/export")
     @PreAuthorize("@ss.hasPermission('system:operate-log:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportOperateLog(HttpServletResponse response, @Valid OperateLogPageReqVO exportReqVO) throws IOException {
         exportReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);
         List<OperateLogDO> list = operateLogService.getOperateLogPage(exportReqVO).getList();

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/SmsCallbackController.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.util.servlet.ServletUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.module.system.framework.sms.core.enums.SmsChannelEnum;
 import cn.iocoder.yudao.module.system.service.sms.SmsSendService;
 import io.swagger.v3.oas.annotations.Operation;
@@ -28,7 +27,6 @@ public class SmsCallbackController {
     @PostMapping("/aliyun")
     @PermitAll
     @Operation(summary = "阿里云短信的回调", description = "参见 https://help.aliyun.com/document_detail/120998.html 文档")
-    @OperateLog(enable = false)
     public CommonResult<Boolean> receiveAliyunSmsStatus(HttpServletRequest request) throws Throwable {
         String text = ServletUtils.getBody(request);
         smsSendService.receiveSmsStatus(SmsChannelEnum.ALIYUN.getCode(), text);
@@ -38,7 +36,6 @@ public CommonResult<Boolean> receiveAliyunSmsStatus(HttpServletRequest request)
     @PostMapping("/tencent")
     @PermitAll
     @Operation(summary = "腾讯云短信的回调", description = "参见 https://cloud.tencent.com/document/product/382/52077 文档")
-    @OperateLog(enable = false)
     public CommonResult<Boolean> receiveTencentSmsStatus(HttpServletRequest request) throws Throwable {
         String text = ServletUtils.getBody(request);
         smsSendService.receiveSmsStatus(SmsChannelEnum.TENCENT.getCode(), text);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/SmsTemplateController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.sms;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.module.system.controller.admin.sms.vo.template.*;
@@ -9,7 +10,6 @@
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
-import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import io.swagger.v3.oas.annotations.Parameter;
 import io.swagger.v3.oas.annotations.Operation;
@@ -22,8 +22,8 @@
 import java.io.IOException;
 import java.util.List;
 
+import static cn.iocoder.yudao.framework.apilog.core.enums.OperateTypeEnum.EXPORT;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
-import static cn.iocoder.yudao.framework.operatelog.core.enums.OperateTypeEnum.EXPORT;
 
 @Tag(name = "管理后台 - 短信模板")
 @RestController
@@ -79,7 +79,7 @@ public CommonResult<PageResult<SmsTemplateRespVO>> getSmsTemplatePage(@Valid Sms
     @GetMapping("/export-excel")
     @Operation(summary = "导出短信模板 Excel")
     @PreAuthorize("@ss.hasPermission('system:sms-template:export')")
-    @OperateLog(type = EXPORT)
+    @ApiAccessLog(operateType = EXPORT)
     public void exportSmsTemplateExcel(@Valid SmsTemplatePageReqVO exportReqVO,
                                        HttpServletResponse response) throws IOException {
         exportReqVO.setPageSize(PageParam.PAGE_SIZE_NONE);

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiAccessLogFrameworkServiceImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.apilog.core.service;
 
-import cn.hutool.core.bean.BeanUtil;
 import cn.iocoder.yudao.module.infra.api.logger.ApiAccessLogApi;
 import cn.iocoder.yudao.module.infra.api.logger.dto.ApiAccessLogCreateReqDTO;
 import lombok.RequiredArgsConstructor;
@@ -20,8 +19,7 @@ public class ApiAccessLogFrameworkServiceImpl implements ApiAccessLogFrameworkSe
 
     @Override
     @Async
-    public void createApiAccessLog(ApiAccessLog apiAccessLog) {
-        ApiAccessLogCreateReqDTO reqDTO = BeanUtil.copyProperties(apiAccessLog, ApiAccessLogCreateReqDTO.class);
+    public void createApiAccessLog(ApiAccessLogCreateReqDTO reqDTO) {
         apiAccessLogApi.createApiAccessLog(reqDTO);
     }
 

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiErrorLogFrameworkServiceImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.apilog.core.service;
 
-import cn.hutool.core.bean.BeanUtil;
 import cn.iocoder.yudao.module.infra.api.logger.ApiErrorLogApi;
 import cn.iocoder.yudao.module.infra.api.logger.dto.ApiErrorLogCreateReqDTO;
 import lombok.RequiredArgsConstructor;
@@ -20,8 +19,7 @@ public class ApiErrorLogFrameworkServiceImpl implements ApiErrorLogFrameworkServ
 
     @Override
     @Async
-    public void createApiErrorLog(ApiErrorLog apiErrorLog) {
-        ApiErrorLogCreateReqDTO reqDTO = BeanUtil.copyProperties(apiErrorLog, ApiErrorLogCreateReqDTO.class);
+    public void createApiErrorLog(ApiErrorLogCreateReqDTO reqDTO) {
         apiErrorLogApi.createApiErrorLog(reqDTO);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/NotifyMessageController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.notify;
 
+import cn.iocoder.yudao.framework.apilog.core.annotations.ApiAccessLog;
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
@@ -88,6 +89,7 @@ public CommonResult<List<NotifyMessageRespVO>> getUnreadNotifyMessageList(
 
     @GetMapping("/get-unread-count")
     @Operation(summary = "获得当前用户的未读站内信数量")
+    @ApiAccessLog(enable = false) // 由于前端会不断轮询该接口，记录日志没有意义
     public CommonResult<Long> getUnreadNotifyMessageCount() {
         return success(notifyMessageService.getUnreadNotifyMessageCount(
                 getLoginUserId(), UserTypeEnum.ADMIN.getValue()));

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/statistics/CrmStatisticsCustomerService.java
Patch:
@@ -62,7 +62,7 @@ public interface CrmStatisticsCustomerService {
     /**
      * 客户成交周期(按日期)
      *
-     * 成交的定义：客户 customer 在创建出来，到合同 contract 第一次成交的时间差
+     * 成交周期的定义：客户 customer 在创建出来，到合同 contract 第一次成交的时间差
      *
      * @param reqVO 请求参数
      * @return 统计数据

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/xss/core/json/XssStringJsonDeserializer.java
Patch:
@@ -7,11 +7,11 @@
 import com.fasterxml.jackson.core.JsonToken;
 import com.fasterxml.jackson.databind.DeserializationContext;
 import com.fasterxml.jackson.databind.deser.std.StringDeserializer;
-import jakarta.servlet.http.HttpServletRequest;
 import lombok.AllArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.util.PathMatcher;
 
+import javax.servlet.http.HttpServletRequest;
 import java.io.IOException;
 
 /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderDetailRespVO.java
Patch:
@@ -140,6 +140,9 @@ public class AppTradeOrderDetailRespVO {
     @Schema(description = "VIP 减免金额", requiredMode = Schema.RequiredMode.REQUIRED, example = "888")
     private Integer vipPrice;
 
+    @Schema(description = "拼团记录编号", example = "100")
+    private Long combinationRecordId;
+
     /**
      * 订单项数组
      */

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/spu/AppProductSpuController.java
Patch:
@@ -101,7 +101,7 @@ public CommonResult<AppProductSpuDetailRespVO> getSpuDetail(@RequestParam("id")
             throw exception(SPU_NOT_EXISTS);
         }
         if (!ProductSpuStatusEnum.isEnable(spu.getStatus())) {
-            throw exception(SPU_NOT_ENABLE);
+            throw exception(SPU_NOT_ENABLE, spu.getName());
         }
         // 获得商品 SKU
         List<ProductSkuDO> skus = productSkuService.getSkuListBySpuId(spu.getId());

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppCartAddReqVO.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.trade.controller.app.cart.vo;
 
 import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.Data;
-
+import jakarta.validation.constraints.Min;
 import jakarta.validation.constraints.NotNull;
+import lombok.Data;
 
 @Schema(description = "用户 App - 购物车添加购物项 Request VO")
 @Data
@@ -15,6 +15,7 @@ public class AppCartAddReqVO {
 
     @Schema(description = "新增商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数量不能为空")
+    @Min(value = 1, message = "商品数量必须大于等于 1")
     private Integer count;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/handler/TradeBrokerageOrderHandler.java
Patch:
@@ -83,7 +83,7 @@ public void afterCancelOrderItem(TradeOrderDO order, TradeOrderItemDO orderItem)
         if (order.getBrokerageUserId() == null) {
             return;
         }
-        cancelBrokerage(order.getBrokerageUserId(), orderItem.getOrderId());
+        cancelBrokerage(order.getBrokerageUserId(), orderItem.getId());
     }
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceImpl.java
Patch:
@@ -361,8 +361,8 @@ public void deliveryOrder(TradeOrderDeliveryReqVO deliveryReqVO) {
 
         // 3. 记录订单日志
         TradeOrderLogUtils.setOrderInfo(order.getId(), order.getStatus(), TradeOrderStatusEnum.DELIVERED.getStatus(),
-                MapUtil.<String, Object>builder().put("expressName", express != null ? express.getName() : "")
-                        .put("logisticsNo", express != null ? deliveryReqVO.getLogisticsNo() : "").build());
+                MapUtil.<String, Object>builder().put("expressName", express != null ? express.getName() : "无")
+                        .put("logisticsNo", express != null ? deliveryReqVO.getLogisticsNo() : "无").build());
 
         // 4. 发送站内信
         tradeMessageService.sendMessageWhenDeliveryOrder(new TradeOrderMessageWhenDeliveryOrderReqBO()

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/app/PayAppController.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.pay.controller.admin.app;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
@@ -92,6 +93,8 @@ public CommonResult<PageResult<PayAppPageItemRespVO>> getAppPage(@Valid PayAppPa
         // 得到所有的应用编号，查出所有的渠道
         Collection<Long> appIds = convertList(pageResult.getList(), PayAppDO::getId);
         List<PayChannelDO> channels = channelService.getChannelListByAppIds(appIds);
+        // 移除未启用的渠道
+        channels.removeIf(channel -> !CommonStatusEnum.ENABLE.getStatus().equals(channel.getStatus()));
 
         // 拼接后返回
         return success(PayAppConvert.INSTANCE.convertPage(pageResult, channels));

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/order/TradeOrderOperateTypeEnum.java
Patch:
@@ -17,7 +17,7 @@ public enum TradeOrderOperateTypeEnum {
     ADMIN_UPDATE_PRICE(2, "订单价格 {oldPayPrice} 修改，实际支付金额为 {newPayPrice} 元"),
     MEMBER_PAY(10, "用户付款成功"),
     ADMIN_UPDATE_ADDRESS(11, "收货地址修改"),
-    ADMIN_DELIVERY(20, "已发货，快递公司：{deliveryName}，快递单号：{logisticsNo}"),
+    ADMIN_DELIVERY(20, "已发货，快递公司：{expressName}，快递单号：{logisticsNo}"),
     MEMBER_RECEIVE(30, "用户已收货"),
     SYSTEM_RECEIVE(31, "到期未收货，系统自动确认收货"),
     ADMIN_PICK_UP_RECEIVE(32, "管理员自提收货"),

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessSaveReqVO.java
Patch:
@@ -66,13 +66,13 @@ public class CrmBusinessSaveReqVO {
     private Long contactId; // 使用场景，在【联系人详情】添加商机时，如果需要关联两者，需要传递 contactId 字段
 
     @Schema(description = "产品列表")
-    private List<Product> products;
+    private List<BusinessProduct> businessProducts;
 
     @Schema(description = "产品列表")
     @Data
     @NoArgsConstructor
     @AllArgsConstructor
-    public static class Product {
+    public static class BusinessProduct {
 
         @Schema(description = "产品编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "20529")
         @NotNull(message = "产品编号不能为空")

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/CrmCustomerController.java
Patch:
@@ -137,7 +137,7 @@ public List<CrmCustomerRespVO> buildCustomerDetailList(List<CrmCustomerDO> list)
             return java.util.Collections.emptyList();
         }
         // 1.1 获取创建人、负责人列表
-        Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(convertListByFlatMap(list,
+        Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(convertSetByFlatMap(list,
                 contact -> Stream.of(NumberUtils.parseLong(contact.getCreator()), contact.getOwnerUserId())));
         Map<Long, DeptRespDTO> deptMap = deptApi.getDeptMap(convertSet(userMap.values(), AdminUserRespDTO::getDeptId));
         // 1.2 获取距离进入公海的时间

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/ErrorCodeConstants.java
Patch:
@@ -53,7 +53,7 @@ public interface ErrorCodeConstants {
     ErrorCode TASK_ADD_SIGN_USER_NOT_EXIST = new ErrorCode(1_009_005_009, "任务加签：选择的用户不存在");
     ErrorCode TASK_ADD_SIGN_TYPE_ERROR = new ErrorCode(1_009_005_010, "任务加签：当前任务已经{}，不能{}");
     ErrorCode TASK_ADD_SIGN_USER_REPEAT = new ErrorCode(1_009_005_011, "任务加签失败，加签人与现有审批人[{}]重复");
-    ErrorCode TASK_SUB_SIGN_NO_PARENT = new ErrorCode(1_009_005_011, "任务减签失败，被减签的任务必须是通过加签生成的任务");
+    ErrorCode TASK_SUB_SIGN_NO_PARENT = new ErrorCode(1_009_005_012, "任务减签失败，被减签的任务必须是通过加签生成的任务");
 
     // ========== 流程任务分配规则 1-009-006-000 ==========
     ErrorCode TASK_ASSIGN_RULE_EXISTS = new ErrorCode(1_009_006_000, "流程({}) 的任务({}) 已经存在分配规则");

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/CrmCustomerController.java
Patch:
@@ -137,7 +137,7 @@ public List<CrmCustomerRespVO> buildCustomerDetailList(List<CrmCustomerDO> list)
             return java.util.Collections.emptyList();
         }
         // 1.1 获取创建人、负责人列表
-        Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(convertListByFlatMap(list,
+        Map<Long, AdminUserRespDTO> userMap = adminUserApi.getUserMap(convertSetByFlatMap(list,
                 contact -> Stream.of(NumberUtils.parseLong(contact.getCreator()), contact.getOwnerUserId())));
         Map<Long, DeptRespDTO> deptMap = deptApi.getDeptMap(convertSet(userMap.values(), AdminUserRespDTO::getDeptId));
         // 1.2 获取距离进入公海的时间

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceImpl.java
Patch:
@@ -49,12 +49,12 @@
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateReqBO;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
 import cn.iocoder.yudao.module.trade.service.price.calculator.TradePriceCalculatorHelper;
-import jakarta.annotation.Resource;
-import jakarta.validation.constraints.NotNull;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
+import javax.annotation.Resource;
+import javax.validation.constraints.NotNull;
 import java.time.LocalDateTime;
 import java.util.ArrayList;
 import java.util.List;

File: yudao-module-pay/yudao-module-pay-biz/src/test/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceTest.java
Patch:
@@ -26,13 +26,13 @@
 import cn.iocoder.yudao.module.pay.service.app.PayAppService;
 import cn.iocoder.yudao.module.pay.service.channel.PayChannelService;
 import cn.iocoder.yudao.module.pay.service.notify.PayNotifyService;
-import jakarta.annotation.Resource;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.mockito.MockedStatic;
 import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.context.annotation.Import;
 
+import javax.annotation.Resource;
 import java.time.Duration;
 import java.time.LocalDateTime;
 import java.util.List;

File: yudao-module-bpm/yudao-module-bpm-biz/src/test/java/cn/iocoder/yudao/module/bpm/service/candidate/BpmCandidateSourceInfoProcessorChainTest.java
Patch:
@@ -23,6 +23,7 @@
 import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;
 import jakarta.annotation.Resource;
 import org.flowable.engine.delegate.DelegateExecution;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.context.annotation.Import;
@@ -39,6 +40,7 @@
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.when;
 
+@Disabled // TODO 芋艿：临时禁用，暂时不修复，等重构后解决
 @Import({BpmCandidateSourceInfoProcessorChain.class,
         BpmCandidateScriptApiSourceInfoProcessor.class, BpmTaskAssignLeaderX1Script.class,
         BpmTaskAssignLeaderX2Script.class})

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceImpl.java
Patch:
@@ -49,12 +49,12 @@
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateReqBO;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
 import cn.iocoder.yudao.module.trade.service.price.calculator.TradePriceCalculatorHelper;
+import jakarta.annotation.Resource;
+import jakarta.validation.constraints.NotNull;
 import lombok.extern.slf4j.Slf4j;
-import org.jetbrains.annotations.NotNull;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
-import jakarta.annotation.Resource;
 import java.time.LocalDateTime;
 import java.util.ArrayList;
 import java.util.List;

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/mysql/order/PayOrderExtensionMapper.java
Patch:
@@ -24,10 +24,10 @@ default List<PayOrderExtensionDO> selectListByOrderId(Long orderId) {
         return selectList(PayOrderExtensionDO::getOrderId, orderId);
     }
 
-    default List<PayOrderExtensionDO> selectListByStatusAndCreateTimeLe(Integer status, LocalDateTime minCreateTime) {
+    default List<PayOrderExtensionDO> selectListByStatusAndCreateTimeGe(Integer status, LocalDateTime minCreateTime) {
         return selectList(new LambdaQueryWrapper<PayOrderExtensionDO>()
                 .eq(PayOrderExtensionDO::getStatus, status)
-                .le(PayOrderExtensionDO::getCreateTime, minCreateTime));
+                .ge(PayOrderExtensionDO::getCreateTime, minCreateTime));
     }
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceImpl.java
Patch:
@@ -449,7 +449,7 @@ public PayOrderExtensionDO getOrderExtensionByNo(String no) {
     @Override
     public int syncOrder(LocalDateTime minCreateTime) {
         // 1. 查询指定创建时间前的待支付订单
-        List<PayOrderExtensionDO> orderExtensions = orderExtensionMapper.selectListByStatusAndCreateTimeLe(
+        List<PayOrderExtensionDO> orderExtensions = orderExtensionMapper.selectListByStatusAndCreateTimeGe(
                 PayOrderStatusEnum.WAITING.getStatus(), minCreateTime);
         if (CollUtil.isEmpty(orderExtensions)) {
             return 0;

File: yudao-module-pay/yudao-module-pay-biz/src/test/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceTest.java
Patch:
@@ -26,13 +26,13 @@
 import cn.iocoder.yudao.module.pay.service.app.PayAppService;
 import cn.iocoder.yudao.module.pay.service.channel.PayChannelService;
 import cn.iocoder.yudao.module.pay.service.notify.PayNotifyService;
+import jakarta.annotation.Resource;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.mockito.MockedStatic;
 import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.context.annotation.Import;
 
-import jakarta.annotation.Resource;
 import java.time.Duration;
 import java.time.LocalDateTime;
 import java.util.List;
@@ -945,7 +945,7 @@ public void testSyncOrder_orderClosed() {
             int count = orderService.syncOrder(minCreateTime);
             // 断言
             assertEquals(count, 0);
-            verify(payOrderServiceImpl).notifyOrder(same(channel), same(respDTO));
+            verify(payOrderServiceImpl, never()).notifyOrder(same(channel), same(respDTO));
         }
     }
 

File: yudao-module-report/yudao-module-report-biz/src/test/java/cn/iocoder/yudao/module/report/service/ureport/UReportDataServiceImplTest.java
Patch:
@@ -21,12 +21,12 @@
 import static cn.iocoder.yudao.module.report.enums.ErrorCodeConstants.UREPORT_DATA_NOT_EXISTS;
 import static org.junit.jupiter.api.Assertions.*;
 
-// TODO 芋艿：最后搞单测
 /**
  * {@link UReportDataServiceImpl} 的单元测试类
  *
  * @author 芋道源码
  */
+@Disabled // TODO 芋艿：临时禁用，暂时不修复，等重构后解决
 @Import(UReportDataServiceImpl.class)
 public class UReportDataServiceImplTest extends BaseDbUnitTest {
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/RedisController.java
Patch:
@@ -34,7 +34,7 @@ public CommonResult<RedisMonitorRespVO> getRedisMonitorInfo() {
         Properties info = stringRedisTemplate.execute((RedisCallback<Properties>) RedisServerCommands::info);
         Long dbSize = stringRedisTemplate.execute(RedisServerCommands::dbSize);
         Properties commandStats = stringRedisTemplate.execute((
-                RedisCallback<Properties>) connection -> connection.info("commandstats"));
+                RedisCallback<Properties>) connection -> connection.serverCommands().info("commandstats"));
         assert commandStats != null; // 断言，避免警告
         // 拼接结果返回
         return success(RedisConvert.INSTANCE.build(info, dbSize, commandStats));

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/RedisController.java
Patch:
@@ -34,7 +34,7 @@ public CommonResult<RedisMonitorRespVO> getRedisMonitorInfo() {
         Properties info = stringRedisTemplate.execute((RedisCallback<Properties>) RedisServerCommands::info);
         Long dbSize = stringRedisTemplate.execute(RedisServerCommands::dbSize);
         Properties commandStats = stringRedisTemplate.execute((
-                RedisCallback<Properties>) connection -> connection.commands().info());
+                RedisCallback<Properties>) connection -> connection.info("commandstats"));
         assert commandStats != null; // 断言，避免警告
         // 拼接结果返回
         return success(RedisConvert.INSTANCE.build(info, dbSize, commandStats));

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/followup/CrmFollowUpRecordController.java
Patch:
@@ -94,12 +94,12 @@ public CommonResult<PageResult<CrmFollowUpRecordRespVO>> getFollowUpRecordPage(@
             record.setBusinesses(new ArrayList<>()).setContacts(new ArrayList<>());
             record.getContactIds().forEach(id -> MapUtils.findAndThen(contactMap, id, contact ->
                     record.getContacts().add(new CrmBusinessRespVO().setId(contact.getId()).setName(contact.getName()))));
-            record.getContactIds().forEach(id -> MapUtils.findAndThen(businessMap, id, business ->
+            record.getBusinessIds().forEach(id -> MapUtils.findAndThen(businessMap, id, business ->
                     record.getBusinesses().add(new CrmBusinessRespVO().setId(business.getId()).setName(business.getName()))));
             // 2.2 设置用户信息
             MapUtils.findAndThen(userMap, Long.valueOf(record.getCreator()), user -> record.setCreatorName(user.getNickname()));
         });
         return success(voPageResult);
     }
 
-}
\ No newline at end of file
+}

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/followup/CrmFollowUpRecordController.java
Patch:
@@ -94,12 +94,12 @@ public CommonResult<PageResult<CrmFollowUpRecordRespVO>> getFollowUpRecordPage(@
             record.setBusinesses(new ArrayList<>()).setContacts(new ArrayList<>());
             record.getContactIds().forEach(id -> MapUtils.findAndThen(contactMap, id, contact ->
                     record.getContacts().add(new CrmBusinessRespVO().setId(contact.getId()).setName(contact.getName()))));
-            record.getContactIds().forEach(id -> MapUtils.findAndThen(businessMap, id, business ->
+            record.getBusinessIds().forEach(id -> MapUtils.findAndThen(businessMap, id, business ->
                     record.getBusinesses().add(new CrmBusinessRespVO().setId(business.getId()).setName(business.getName()))));
             // 2.2 设置用户信息
             MapUtils.findAndThen(userMap, Long.valueOf(record.getCreator()), user -> record.setCreatorName(user.getNickname()));
         });
         return success(voPageResult);
     }
 
-}
\ No newline at end of file
+}

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/MenuController.java
Patch:
@@ -50,7 +50,7 @@ public CommonResult<Boolean> updateMenu(@Valid @RequestBody MenuSaveVO updateReq
 
     @DeleteMapping("/delete")
     @Operation(summary = "删除菜单")
-    @Parameter(name = "id", description = "角色编号", required= true, example = "1024")
+    @Parameter(name = "id", description = "菜单编号", required= true, example = "1024")
     @PreAuthorize("@ss.hasPermission('system:menu:delete')")
     public CommonResult<Boolean> deleteMenu(@RequestParam("id") Long id) {
         menuService.deleteMenu(id);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleRespVO.java
Patch:
@@ -25,6 +25,7 @@ public class RoleRespVO {
     @ExcelProperty("角色名称")
     private String name;
 
+    @Schema(description = "角色标志", requiredMode = Schema.RequiredMode.REQUIRED, example = "admin")
     @NotBlank(message = "角色标志不能为空")
     @ExcelProperty("角色标志")
     private String code;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/redis/RedisKeyConstants.java
Patch:
@@ -52,7 +52,7 @@ public interface RedisKeyConstants {
     /**
      * OAuth2 客户端的缓存
      * <p>
-     * KEY 格式：user:{id}
+     * KEY 格式：oauth_client:{id}
      * VALUE 数据类型：String 客户端信息
      */
     String OAUTH_CLIENT = "oauth_client";
@@ -78,7 +78,7 @@ public interface RedisKeyConstants {
     /**
      * 邮件账号的缓存
      * <p>
-     * KEY 格式：sms_template:{id}
+     * KEY 格式：mail_account:{id}
      * VALUE 数据格式：String 账号信息
      */
     String MAIL_ACCOUNT = "mail_account";

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/RedisController.java
Patch:
@@ -34,7 +34,7 @@ public CommonResult<RedisMonitorRespVO> getRedisMonitorInfo() {
         Properties info = stringRedisTemplate.execute((RedisCallback<Properties>) RedisServerCommands::info);
         Long dbSize = stringRedisTemplate.execute(RedisServerCommands::dbSize);
         Properties commandStats = stringRedisTemplate.execute((
-                RedisCallback<Properties>) connection -> connection.commands().info());
+                RedisCallback<Properties>) connection -> connection.info("commandstats"));
         assert commandStats != null; // 断言，避免警告
         // 拼接结果返回
         return success(RedisConvert.INSTANCE.build(info, dbSize, commandStats));

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/permission/CrmPermissionServiceImpl.java
Patch:
@@ -170,7 +170,7 @@ public void deletePermissionBatch(Collection<Long> ids, Long userId) {
             throw exception(CRM_PERMISSION_DELETE_FAIL);
         }
         // 校验操作人是否为负责人
-        CrmPermissionDO permission = permissionMapper.selectByBizIdAndUserId(permissions.getFirst().getBizId(), userId);
+        CrmPermissionDO permission = permissionMapper.selectByBizIdAndUserId(permissions.get(0).getBizId(), userId);
         if (permission == null) {
             throw exception(CRM_PERMISSION_DELETE_DENIED);
         }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/permission/CrmPermissionServiceImpl.java
Patch:
@@ -170,7 +170,7 @@ public void deletePermissionBatch(Collection<Long> ids, Long userId) {
             throw exception(CRM_PERMISSION_DELETE_FAIL);
         }
         // 校验操作人是否为负责人
-        CrmPermissionDO permission = permissionMapper.selectByBizIdAndUserId(permissions.getFirst().getBizId(), userId);
+        CrmPermissionDO permission = permissionMapper.selectByBizIdAndUserId(permissions.get(0).getBizId(), userId);
         if (permission == null) {
             throw exception(CRM_PERMISSION_DELETE_DENIED);
         }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/collection/CollectionUtils.java
Patch:
@@ -257,11 +257,11 @@ public static <T> T getFirst(List<T> from) {
         return !CollectionUtil.isEmpty(from) ? from.get(0) : null;
     }
 
-    public static <T> T findFirst(List<T> from, Predicate<T> predicate) {
+    public static <T> T findFirst(Collection<T> from, Predicate<T> predicate) {
         return findFirst(from, predicate, Function.identity());
     }
 
-    public static <T, U> U findFirst(List<T> from, Predicate<T> predicate, Function<T, U> func) {
+    public static <T, U> U findFirst(Collection<T> from, Predicate<T> predicate, Function<T, U> func) {
         if (CollUtil.isEmpty(from)) {
             return null;
         }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/main/java/cn/iocoder/yudao/framework/ip/core/utils/IPUtils.java
Patch:
@@ -72,7 +72,7 @@ public static Integer getAreaId(long ip) {
      * @return 地区
      */
     public static Area getArea(String ip) {
-        return AreaUtils.getArea(getAreaId(ip));
+        return AreaUtils.parseArea(getAreaId(ip));
     }
 
     /**
@@ -82,6 +82,6 @@ public static Area getArea(String ip) {
      * @return 地区
      */
     public static Area getArea(long ip) {
-        return AreaUtils.getArea(getAreaId(ip));
+        return AreaUtils.parseArea(getAreaId(ip));
     }
 }

File: yudao-framework/yudao-spring-boot-starter-biz-ip/src/test/java/cn/iocoder/yudao/framework/ip/core/utils/AreaUtilsTest.java
Patch:
@@ -17,7 +17,7 @@ public class AreaUtilsTest {
     @Test
     public void testGetArea() {
         // 调用：北京
-        Area area = AreaUtils.getArea(110100);
+        Area area = AreaUtils.parseArea(110100);
         // 断言
         assertEquals(area.getId(), 110100);
         assertEquals(area.getName(), "北京市");

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/event/BpmProcessInstanceResultEventListener.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.bpm.framework.bpm.core.event;
+package cn.iocoder.yudao.module.bpm.event;
 
 import cn.hutool.core.util.StrUtil;
 import org.springframework.context.ApplicationListener;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmProcessInstanceConvert.java
Patch:
@@ -7,7 +7,7 @@
 import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstanceRespVO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;
-import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEvent;
+import cn.iocoder.yudao.module.bpm.event.BpmProcessInstanceResultEvent;
 import cn.iocoder.yudao.module.bpm.service.message.dto.BpmMessageSendWhenProcessInstanceApproveReqDTO;
 import cn.iocoder.yudao.module.bpm.service.message.dto.BpmMessageSendWhenProcessInstanceRejectReqDTO;
 import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/bpm/core/event/BpmProcessInstanceResultEventPublisher.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.bpm.framework.bpm.core.event;
 
+import cn.iocoder.yudao.module.bpm.event.BpmProcessInstanceResultEvent;
 import lombok.AllArgsConstructor;
 import org.springframework.context.ApplicationEventPublisher;
 import org.springframework.validation.annotation.Validated;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/listener/BpmOALeaveResultListener.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.bpm.service.oa.listener;
 
-import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEvent;
-import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventListener;
+import cn.iocoder.yudao.module.bpm.event.BpmProcessInstanceResultEvent;
+import cn.iocoder.yudao.module.bpm.event.BpmProcessInstanceResultEventListener;
 import cn.iocoder.yudao.module.bpm.service.oa.BpmOALeaveService;
 import cn.iocoder.yudao.module.bpm.service.oa.BpmOALeaveServiceImpl;
 import org.springframework.stereotype.Component;

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/DictTypeConstants.java
Patch:
@@ -14,5 +14,6 @@ public interface DictTypeConstants {
     String CRM_PRODUCT_UNIT = "crm_product_unit"; // CRM 产品单位
     String CRM_PRODUCT_STATUS = "crm_product_status"; // CRM 产品状态
     String CRM_FOLLOW_UP_TYPE = "crm_follow_up_type"; // CRM 跟进方式
+    String CRM_RECEIVABLE_RETURN_TYPE = "crm_receivable_return_type"; // CRM 回款方式
 
 }

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/common/CrmBizTypeEnum.java
Patch:
@@ -17,7 +17,7 @@
 @Getter
 public enum CrmBizTypeEnum implements IntArrayValuable {
 
-    CRM_LEADS(1, "线索"),
+    CRM_CLUE(1, "线索"),
     CRM_CUSTOMER(2, "客户"),
     CRM_CONTACT(3, "联系人"),
     CRM_BUSINESS(4, "商机"),

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/contact/vo/CrmContactBusinessReqVO.java
Patch:
@@ -7,7 +7,7 @@
 import javax.validation.constraints.NotNull;
 import java.util.List;
 
-@Schema(description = "管理后台 - CRM 联系人商机 Request VO") // 用于关联，取消关联的操作
+@Schema(description = "管理后台 - CRM 联系人商机 Request VO") // 【联系人关联商机】用于关联，取消关联的操作
 @Data
 public class CrmContactBusinessReqVO {
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/contact/vo/CrmContactPageReqVO.java
Patch:
@@ -39,4 +39,7 @@ public class CrmContactPageReqVO extends PageParam {
     @InEnum(CrmSceneTypeEnum.class)
     private Integer sceneType; // 场景类型，为 null 时则表示全部
 
+    @Schema(description = "商机编号", example = "10430")
+    private Long businessId;
+
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/contract/vo/contract/CrmContractPageReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.contract.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import cn.iocoder.yudao.framework.common.validation.InEnum;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/contract/vo/contract/CrmContractTransferReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.contract.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.contract.vo.contract;
 
 import cn.iocoder.yudao.framework.common.validation.InEnum;
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/customer/CrmCustomerDistributeReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.customer;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/customer/CrmCustomerImportReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.customer;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Builder;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/customer/CrmCustomerImportRespVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.customer;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Builder;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/customer/CrmCustomerLockReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.customer;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/customer/CrmCustomerTransferReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.customer;
 
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;
 import io.swagger.v3.oas.annotations.media.Schema;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/operatelog/vo/CrmOperateLogRespVO.java
Patch:
@@ -6,10 +6,10 @@
 
 import java.time.LocalDateTime;
 
-@Schema(description = "管理后台 - CRM 跟进 Response VO")
+@Schema(description = "管理后台 - CRM 操作日志 Response VO")
 @Data
 @ExcelIgnoreUnannotated
-public class CrmOperateLogV2RespVO {
+public class CrmOperateLogRespVO {
 
     @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "13563")
     private Long id;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/product/vo/product/CrmProductRespVO.java
Patch:
@@ -8,6 +8,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
+import java.math.BigDecimal;
 import java.time.LocalDateTime;
 
 @Schema(description = "管理后台 - CRM 产品 Response VO")
@@ -34,7 +35,7 @@ public class CrmProductRespVO {
 
     @Schema(description = "价格, 单位：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "8911")
     @ExcelProperty("价格，单位：分")
-    private Long price;
+    private BigDecimal price;
 
     @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "上架")
     @ExcelProperty(value = "单位", converter = DictConvert.class)

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/receivable/vo/receivable/CrmReceivablePageReqVO.java
Patch:
@@ -24,6 +24,9 @@ public class CrmReceivablePageReqVO extends PageParam {
     @Schema(description = "客户编号", example = "4963")
     private Long customerId;
 
+    @Schema(description = "合同编号", example = "4963")
+    private Long contractId;
+
     @Schema(description = "场景类型", example = "1")
     @InEnum(CrmSceneTypeEnum.class)
     private Integer sceneType; // 场景类型，为 null 时则表示全部

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/statistics/vo/CrmStatisticsRanKRespVO.java
Patch:
@@ -1,12 +1,12 @@
-package cn.iocoder.yudao.module.crm.controller.admin.bi.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.statistics.vo;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
 
-@Schema(description = "管理后台 - CRM BI 排行榜 Response VO")
+@Schema(description = "管理后台 - CRM BI 排行榜统计 Response VO")
 @Data
-public class CrmBiRanKRespVO {
+public class CrmStatisticsRanKRespVO {
 
     @Schema(description = "负责人编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long ownerUserId;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/statistics/vo/CrmStatisticsRankReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.bi.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.statistics.vo;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
@@ -11,9 +11,9 @@
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
-@Schema(description = "管理后台 - CRM BI 排行榜 Request VO")
+@Schema(description = "管理后台 - CRM 排行榜统计 Request VO")
 @Data
-public class CrmBiRankReqVO {
+public class CrmStatisticsRankReqVO {
 
     @Schema(description = "部门 id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "部门 id 不能为空")

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/dataobject/business/CrmBusinessStatusDO.java
Patch:
@@ -6,7 +6,9 @@
 import lombok.*;
 
 /**
- * 商机状态 DO
+ * CRM 商机状态 DO
+ *
+ * 注意，它是个配置表
  *
  * @author ljlleo
  */

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/aop/CrmPermissionAspect.java
Patch:
@@ -9,7 +9,7 @@
 import cn.iocoder.yudao.module.crm.enums.common.CrmBizTypeEnum;
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;
 import cn.iocoder.yudao.module.crm.framework.permission.core.annotations.CrmPermission;
-import cn.iocoder.yudao.module.crm.framework.permission.core.util.CrmPermissionUtils;
+import cn.iocoder.yudao.module.crm.util.CrmPermissionUtils;
 import cn.iocoder.yudao.module.crm.service.permission.CrmPermissionService;
 import lombok.extern.slf4j.Slf4j;
 import org.aspectj.lang.JoinPoint;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/job/package-info.java
Patch:
@@ -1,4 +1,4 @@
 /**
- * TODO 芋艿：临时占位，后续可删除
+ * 定时任务
  */
 package cn.iocoder.yudao.module.crm.job;
\ No newline at end of file

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/dal/redis/RedisKeyConstants.java
Patch:
@@ -13,6 +13,6 @@ public interface RedisKeyConstants {
      * KEY 格式：trade_no:{prefix}
      * VALUE 数据格式：编号自增
      */
-    String NO = "seq_no:";
+    String NO = "erp:seq_no:";
 
 }

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/dal/redis/no/ErpNoRedisDAO.java
Patch:
@@ -12,7 +12,7 @@
 
 
 /**
- * 订单序号的 Redis DAO
+ * Erp 订单序号的 Redis DAO
  *
  * @author HUIHUI
  */

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/service/purchase/ErpPurchaseInServiceImpl.java
Patch:
@@ -164,7 +164,7 @@ public void updatePurchaseInStatus(Long id, Integer status) {
             throw exception(approve ? PURCHASE_IN_APPROVE_FAIL : PURCHASE_IN_PROCESS_FAIL);
         }
         // 1.3 校验已付款
-        if (approve && purchaseIn.getPaymentPrice().compareTo(BigDecimal.ZERO) > 0) {
+        if (!approve && purchaseIn.getPaymentPrice().compareTo(BigDecimal.ZERO) > 0) {
             throw exception(PURCHASE_IN_PROCESS_FAIL_EXISTS_PAYMENT);
         }
 

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/service/purchase/ErpPurchaseReturnServiceImpl.java
Patch:
@@ -160,7 +160,7 @@ public void updatePurchaseReturnStatus(Long id, Integer status) {
             throw exception(approve ? PURCHASE_RETURN_APPROVE_FAIL : PURCHASE_RETURN_PROCESS_FAIL);
         }
         // 1.3 校验已退款
-        if (approve && purchaseReturn.getRefundPrice().compareTo(BigDecimal.ZERO) > 0) {
+        if (!approve && purchaseReturn.getRefundPrice().compareTo(BigDecimal.ZERO) > 0) {
             throw exception(PURCHASE_RETURN_PROCESS_FAIL_EXISTS_REFUND);
         }
 

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/service/sale/ErpSaleOutServiceImpl.java
Patch:
@@ -172,7 +172,7 @@ public void updateSaleOutStatus(Long id, Integer status) {
             throw exception(approve ? SALE_OUT_APPROVE_FAIL : SALE_OUT_PROCESS_FAIL);
         }
         // 1.3 校验已退款
-        if (approve && saleOut.getReceiptPrice().compareTo(BigDecimal.ZERO) > 0) {
+        if (!approve && saleOut.getReceiptPrice().compareTo(BigDecimal.ZERO) > 0) {
             throw exception(SALE_OUT_PROCESS_FAIL_EXISTS_RECEIPT);
         }
 

File: yudao-module-erp/yudao-module-erp-biz/src/main/java/cn/iocoder/yudao/module/erp/service/sale/ErpSaleReturnServiceImpl.java
Patch:
@@ -172,7 +172,7 @@ public void updateSaleReturnStatus(Long id, Integer status) {
             throw exception(approve ? SALE_RETURN_APPROVE_FAIL : SALE_RETURN_PROCESS_FAIL);
         }
         // 1.3 校验已退款
-        if (approve && saleReturn.getRefundPrice().compareTo(BigDecimal.ZERO) > 0) {
+        if (!approve && saleReturn.getRefundPrice().compareTo(BigDecimal.ZERO) > 0) {
             throw exception(SALE_RETURN_PROCESS_FAIL_EXISTS_REFUND);
         }
 

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/codegen/CodegenServiceImplTest.java
Patch:
@@ -24,6 +24,7 @@
 import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;
 import com.baomidou.mybatisplus.generator.config.po.TableField;
 import com.baomidou.mybatisplus.generator.config.po.TableInfo;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.context.annotation.Import;
@@ -233,6 +234,7 @@ public void testUpdateCodegen_success() {
     }
 
     @Test
+    @Disabled // TODO @芋艿：这个单测会随机性失败，需要定位下；
     public void testSyncCodegenFromDB() {
         // mock 数据（CodegenTableDO）
         CodegenTableDO table = randomPojo(CodegenTableDO.class, o -> o.setTableName("t_yunai")

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/infra/ApiAccessLogStatisticsMapper.java
Patch:
@@ -16,12 +16,10 @@
 @SuppressWarnings("rawtypes")
 public interface ApiAccessLogStatisticsMapper extends BaseMapperX {
 
-    // TODO 芋艿：已经 review
     Integer selectIpCountByUserTypeAndCreateTimeBetween(@Param("userType") Integer userType,
                                                         @Param("beginTime") LocalDateTime beginTime,
                                                         @Param("endTime") LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     Integer selectUserCountByUserTypeAndCreateTimeBetween(@Param("userType") Integer userType,
                                                           @Param("beginTime") LocalDateTime beginTime,
                                                           @Param("endTime") LocalDateTime endTime);

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/trade/AfterSaleStatisticsMapper.java
Patch:
@@ -16,11 +16,9 @@
 @Mapper
 public interface AfterSaleStatisticsMapper extends BaseMapperX<TradeStatisticsDO> {
 
-    // TODO 芋艿：已 review
     AfterSaleSummaryRespBO selectSummaryByRefundTimeBetween(@Param("beginTime") LocalDateTime beginTime,
                                                             @Param("endTime") LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     Long selectCountByStatus(@Param("status") Integer status);
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/trade/BrokerageStatisticsMapper.java
Patch:
@@ -15,13 +15,11 @@
 @Mapper
 public interface BrokerageStatisticsMapper extends BaseMapperX<TradeStatisticsDO> {
 
-    // TODO 芋艿：已经 review
     Integer selectSummaryPriceByStatusAndUnfreezeTimeBetween(@Param("bizType") Integer bizType,
                                                              @Param("status") Integer status,
                                                              @Param("beginTime") LocalDateTime beginTime,
                                                              @Param("endTime") LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     Long selectWithdrawCountByStatus(@Param("status") Integer status);
 
 }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/dal/mysql/trade/TradeStatisticsMapper.java
Patch:
@@ -25,17 +25,14 @@ TradeSummaryRespBO selectOrderCreateCountSumAndOrderPayPriceSumByTimeBetween(@Pa
     TradeTrendSummaryRespVO selectVoByTimeBetween(@Param("beginTime") LocalDateTime beginTime,
                                                   @Param("endTime") LocalDateTime endTime);
 
-    // TODO @芋艿：已经 review
     default List<TradeStatisticsDO> selectListByTimeBetween(LocalDateTime beginTime, LocalDateTime endTime) {
         return selectList(new LambdaQueryWrapperX<TradeStatisticsDO>()
                 .between(TradeStatisticsDO::getTime, beginTime, endTime));
     }
 
-    // TODO @芋艿：已经 review
     Integer selectExpensePriceByTimeBetween(@Param("beginTime") LocalDateTime beginTime,
                                             @Param("endTime") LocalDateTime endTime);
 
-    // TODO @芋艿：已经 review
     default TradeStatisticsDO selectByTimeBetween(LocalDateTime beginTime, LocalDateTime endTime) {
         return selectOne(new LambdaQueryWrapperX<TradeStatisticsDO>()
                 .between(TradeStatisticsDO::getTime, beginTime, endTime));

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/infra/ApiAccessLogStatisticsService.java
Patch:
@@ -9,7 +9,6 @@
  */
 public interface ApiAccessLogStatisticsService {
 
-    // TODO 芋艿：已经 review
     /**
      * 获取活跃用户数量
      *
@@ -20,7 +19,6 @@ public interface ApiAccessLogStatisticsService {
      */
     Integer getUserCount(Integer userType, LocalDateTime beginTime, LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     /**
      * 获取访问用户数量
      *

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/pay/PayWalletStatisticsService.java
Patch:
@@ -12,7 +12,6 @@
  */
 public interface PayWalletStatisticsService {
 
-    // TODO 芋艿：已经 review
     /**
      * 获取钱包统计
      *
@@ -22,7 +21,6 @@ public interface PayWalletStatisticsService {
      */
     WalletSummaryRespBO getWalletSummary(LocalDateTime beginTime, LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     /**
      * 获取钱包充值统计
      *
@@ -32,7 +30,6 @@ public interface PayWalletStatisticsService {
      */
     RechargeSummaryRespBO getUserRechargeSummary(LocalDateTime beginTime, LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     /**
      * 获取充值金额合计
      *

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/trade/AfterSaleStatisticsService.java
Patch:
@@ -12,7 +12,6 @@
  */
 public interface AfterSaleStatisticsService {
 
-    // TODO 芋艿：已经 review
     /**
      * 获取售后单统计
      *
@@ -22,7 +21,6 @@ public interface AfterSaleStatisticsService {
      */
     AfterSaleSummaryRespBO getAfterSaleSummary(LocalDateTime beginTime, LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     /**
      * 获取指定状态的售后订单数量
      *

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/trade/BrokerageStatisticsService.java
Patch:
@@ -11,7 +11,6 @@
  */
 public interface BrokerageStatisticsService {
 
-    // TODO 芋艿：已经 review
     /**
      * 获取已结算的佣金金额
      *
@@ -21,7 +20,6 @@ public interface BrokerageStatisticsService {
      */
     Integer getBrokerageSettlementPriceSummary(LocalDateTime beginTime, LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review
     /**
      * 获取指定状态的提现记录数量
      *

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/service/trade/TradeStatisticsService.java
Patch:
@@ -41,15 +41,13 @@ DataComparisonRespVO<TradeTrendSummaryRespVO> getTradeStatisticsAnalyse(
      */
     List<TradeStatisticsDO> getTradeStatisticsList(LocalDateTime beginTime, LocalDateTime endTime);
 
-    // TODO 芋艿：已经 review；
     /**
      * 统计指定天数的交易数据
      *
      * @return 统计结果
      */
     String statisticsTrade(Integer days);
 
-    // TODO 芋艿：已经 review
     /**
      * 统计指定日期的交易数据
      *
@@ -58,7 +56,6 @@ DataComparisonRespVO<TradeTrendSummaryRespVO> getTradeStatisticsAnalyse(
      */
     TradeSummaryRespBO getTradeSummaryByDays(int days);
 
-    // TODO 芋艿：已经 review
     /**
      * 统计指定月份的交易数据
      *

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/permission/RoleCodeEnum.java
Patch:
@@ -13,6 +13,7 @@ public enum RoleCodeEnum {
 
     SUPER_ADMIN("super_admin", "超级管理员"),
     TENANT_ADMIN("tenant_admin", "租户管理员"),
+    CRM_ADMIN("crm_admin", "CRM 管理员"); // CRM 系统专用
     ;
 
     /**

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/ip/AreaController.java
Patch:
@@ -29,7 +29,7 @@ public class AreaController {
     @GetMapping("/tree")
     @Operation(summary = "获得地区树")
     public CommonResult<List<AreaNodeRespVO>> getAreaTree() {
-        Area area = AreaUtils.getArea(Area.ID_CHINA);
+        Area area = AreaUtils.parseArea(Area.ID_CHINA);
         Assert.notNull(area, "获取不到中国");
         return success(BeanUtils.toBean(area.getChildren(), AreaNodeRespVO.class));
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/app/ip/AppAreaController.java
Patch:
@@ -26,7 +26,7 @@ public class AppAreaController {
     @GetMapping("/tree")
     @Operation(summary = "获得地区树")
     public CommonResult<List<AppAreaNodeRespVO>> getAreaTree() {
-        Area area = AreaUtils.getArea(Area.ID_CHINA);
+        Area area = AreaUtils.parseArea(Area.ID_CHINA);
         Assert.notNull(area, "获取不到中国");
         return success(BeanUtils.toBean(area.getChildren(), AppAreaNodeRespVO.class));
     }

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/ErrorCodeConstants.java
Patch:
@@ -53,7 +53,7 @@ public interface ErrorCodeConstants {
     ErrorCode TASK_ADD_SIGN_USER_NOT_EXIST = new ErrorCode(1_009_005_009, "任务加签：选择的用户不存在");
     ErrorCode TASK_ADD_SIGN_TYPE_ERROR = new ErrorCode(1_009_005_010, "任务加签：当前任务已经{}，不能{}");
     ErrorCode TASK_ADD_SIGN_USER_REPEAT = new ErrorCode(1_009_005_011, "任务加签失败，加签人与现有审批人[{}]重复");
-    ErrorCode TASK_SUB_SIGN_NO_PARENT = new ErrorCode(1_009_005_011, "任务减签失败，被减签的任务必须是通过加签生成的任务");
+    ErrorCode TASK_SUB_SIGN_NO_PARENT = new ErrorCode(1_009_005_012, "任务减签失败，被减签的任务必须是通过加签生成的任务");
 
     // ========== 流程任务分配规则 1-009-006-000 ==========
     ErrorCode TASK_ASSIGN_RULE_EXISTS = new ErrorCode(1_009_006_000, "流程({}) 的任务({}) 已经存在分配规则");

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivableMapper.java
Patch:
@@ -62,8 +62,7 @@ default List<CrmReceivableDO> selectBatchIds(Collection<Long> ids, Long userId)
         return selectJoinList(CrmReceivableDO.class, query);
     }
 
-    // TODO @dhb52：db 统一都是 select 关键字；
-    default Long getCheckReceivablesCount(Long userId) {
+    default Long selectCheckReceivablesCount(Long userId) {
         MPJLambdaWrapperX<CrmReceivableDO> query = new MPJLambdaWrapperX<>();
         // 我负责的 + 非公海
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_RECEIVABLE.getType(),

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -274,7 +274,7 @@ private CrmClueServiceImpl getSelf() {
 
     @Override
     public Long getFollowLeadsCount(Long userId) {
-        return clueMapper.getFollowLeadsCount(userId);
+        return clueMapper.selectFollowLeadsCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/CrmContractServiceImpl.java
Patch:
@@ -364,12 +364,12 @@ public List<CrmContractProductDO> getContractProductListByContractId(Long contac
 
     @Override
     public Long getCheckContractCount(Long userId) {
-        return contractMapper.getCheckContractCount(userId);
+        return contractMapper.selectCheckContractCount(userId);
     }
 
     @Override
     public Long getEndContractCount(Long userId) {
-        return contractMapper.getEndContractCount(userId);
+        return contractMapper.selectEndContractCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/customer/CrmCustomerServiceImpl.java
Patch:
@@ -482,12 +482,12 @@ public Long getPutInPoolRemindCustomerCount(CrmCustomerPageReqVO pageReqVO,
 
     @Override
     public Long getTodayCustomerCount(Long userId) {
-        return customerMapper.getTodayCustomerCount(userId);
+        return customerMapper.selectTodayCustomerCount(userId);
     }
 
     @Override
     public Long getFollowCustomerCount(Long userId) {
-        return customerMapper.getFollowCustomerCount(userId);
+        return customerMapper.selectFollowCustomerCount(userId);
     }
 
     // ======================= 校验相关 =======================

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/receivable/CrmReceivablePlanServiceImpl.java
Patch:
@@ -164,7 +164,7 @@ public PageResult<CrmReceivablePlanDO> getReceivablePlanPageByCustomerId(CrmRece
 
     @Override
     public Long getRemindReceivablePlanCount(Long userId) {
-        return receivablePlanMapper.getRemindReceivablePlanCount(userId);
+        return receivablePlanMapper.selectRemindReceivablePlanCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/receivable/CrmReceivableServiceImpl.java
Patch:
@@ -184,7 +184,7 @@ public PageResult<CrmReceivableDO> getReceivablePageByCustomerId(CrmReceivablePa
 
     @Override
     public Long getCheckReceivablesCount(Long userId) {
-        return receivableMapper.getCheckReceivablesCount(userId);
+        return receivableMapper.selectCheckReceivablesCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivableMapper.java
Patch:
@@ -62,8 +62,7 @@ default List<CrmReceivableDO> selectBatchIds(Collection<Long> ids, Long userId)
         return selectJoinList(CrmReceivableDO.class, query);
     }
 
-    // TODO @dhb52：db 统一都是 select 关键字；
-    default Long getCheckReceivablesCount(Long userId) {
+    default Long selectCheckReceivablesCount(Long userId) {
         MPJLambdaWrapperX<CrmReceivableDO> query = new MPJLambdaWrapperX<>();
         // 我负责的 + 非公海
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_RECEIVABLE.getType(),

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/clue/CrmClueServiceImpl.java
Patch:
@@ -278,7 +278,7 @@ private CrmClueServiceImpl getSelf() {
 
     @Override
     public Long getFollowLeadsCount(Long userId) {
-        return clueMapper.getFollowLeadsCount(userId);
+        return clueMapper.selectFollowLeadsCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/CrmContractService.java
Patch:
@@ -6,6 +6,7 @@
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.CrmContractSaveReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.CrmContractTransferReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.contract.CrmContractDO;
+import cn.iocoder.yudao.module.crm.dal.dataobject.contract.CrmContractProductDO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerDO;
 import cn.iocoder.yudao.module.crm.service.followup.bo.CrmUpdateFollowUpReqBO;
 import jakarta.validation.Valid;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/contract/CrmContractServiceImpl.java
Patch:
@@ -364,12 +364,12 @@ public List<CrmContractProductDO> getContractProductListByContractId(Long contac
 
     @Override
     public Long getCheckContractCount(Long userId) {
-        return contractMapper.getCheckContractCount(userId);
+        return contractMapper.selectCheckContractCount(userId);
     }
 
     @Override
     public Long getEndContractCount(Long userId) {
-        return contractMapper.getEndContractCount(userId);
+        return contractMapper.selectEndContractCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/customer/CrmCustomerServiceImpl.java
Patch:
@@ -482,12 +482,12 @@ public Long getPutInPoolRemindCustomerCount(CrmCustomerPageReqVO pageReqVO,
 
     @Override
     public Long getTodayCustomerCount(Long userId) {
-        return customerMapper.getTodayCustomerCount(userId);
+        return customerMapper.selectTodayCustomerCount(userId);
     }
 
     @Override
     public Long getFollowCustomerCount(Long userId) {
-        return customerMapper.getFollowCustomerCount(userId);
+        return customerMapper.selectFollowCustomerCount(userId);
     }
 
     // ======================= 校验相关 =======================

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/receivable/CrmReceivablePlanServiceImpl.java
Patch:
@@ -164,7 +164,7 @@ public PageResult<CrmReceivablePlanDO> getReceivablePlanPageByCustomerId(CrmRece
 
     @Override
     public Long getRemindReceivablePlanCount(Long userId) {
-        return receivablePlanMapper.getRemindReceivablePlanCount(userId);
+        return receivablePlanMapper.selectRemindReceivablePlanCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/receivable/CrmReceivableServiceImpl.java
Patch:
@@ -184,7 +184,7 @@ public PageResult<CrmReceivableDO> getReceivablePageByCustomerId(CrmReceivablePa
 
     @Override
     public Long getCheckReceivablesCount(Long userId) {
-        return receivableMapper.getCheckReceivablesCount(userId);
+        return receivableMapper.selectCheckReceivablesCount(userId);
     }
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/clue/vo/CrmCluePageReqVO.java
Patch:
@@ -39,4 +39,7 @@ public class CrmCluePageReqVO extends PageParam {
     @Schema(description = "客户来源", example = "1")
     private Integer source;
 
+    @Schema(description = "跟进状态", example = "true")
+    private Boolean followUpStatus;
+
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/CrmCustomerPageReqVO.java
Patch:
@@ -55,4 +55,7 @@ public class CrmCustomerPageReqVO extends PageParam {
     @Schema(description = "跟进状态", example = "true")
     private Boolean followUpStatus; // backlog查询条件, null 则表示为不做查询
 
+    @Schema(description = "跟进状态", example = "true")
+    private Boolean followUpStatus;
+
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/clue/CrmClueMapper.java
Patch:
@@ -41,6 +41,7 @@ default PageResult<CrmClueDO> selectPage(CrmCluePageReqVO pageReqVO, Long userId
                 .eqIfPresent(CrmClueDO::getIndustryId, pageReqVO.getIndustryId())
                 .eqIfPresent(CrmClueDO::getLevel, pageReqVO.getLevel())
                 .eqIfPresent(CrmClueDO::getSource, pageReqVO.getSource())
+                .eqIfPresent(CrmClueDO::getFollowUpStatus, pageReqVO.getFollowUpStatus())
                 .orderByDesc(CrmClueDO::getId);
         return selectJoinPage(pageReqVO, CrmClueDO.class, query);
     }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/contract/CrmContractMapper.java
Patch:
@@ -6,6 +6,7 @@
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.MPJLambdaWrapperX;
 import cn.iocoder.yudao.module.crm.controller.admin.contract.vo.CrmContractPageReqVO;
+import cn.iocoder.yudao.module.crm.dal.dataobject.clue.CrmClueDO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.contract.CrmContractDO;
 import cn.iocoder.yudao.module.crm.enums.common.CrmAuditStatusEnum;
 import cn.iocoder.yudao.module.crm.enums.common.CrmBizTypeEnum;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/customer/CrmCustomerMapper.java
Patch:
@@ -94,7 +94,8 @@ default PageResult<CrmCustomerDO> selectPage(CrmCustomerPageReqVO pageReqVO, Lon
                 .eqIfPresent(CrmCustomerDO::getMobile, pageReqVO.getMobile())
                 .eqIfPresent(CrmCustomerDO::getIndustryId, pageReqVO.getIndustryId())
                 .eqIfPresent(CrmCustomerDO::getLevel, pageReqVO.getLevel())
-                .eqIfPresent(CrmCustomerDO::getSource, pageReqVO.getSource());
+                .eqIfPresent(CrmCustomerDO::getSource, pageReqVO.getSource())
+                .eqIfPresent(CrmCustomerDO::getFollowUpStatus, pageReqVO.getFollowUpStatus());
 
         // backlog 查询
         if (ObjUtil.isNotNull(pageReqVO.getContactStatus())) {

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/desensitize/package-info.java
Patch:
@@ -1,4 +1,4 @@
 /**
  * 脱敏组件：支持 JSON 返回数据时，将邮箱、手机等字段进行脱敏
  */
-package cn.iocoder.yudao.framework.desensitize.core;
+package cn.iocoder.yudao.framework.desensitize;

File: yudao-framework/yudao-spring-boot-starter-web/src/test/java/cn/iocoder/yudao/framework/desensitize/core/annotation/Address.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.framework.desensitize.core.annotation;
 
 import cn.iocoder.yudao.framework.desensitize.core.DesensitizeTest;
-import cn.iocoder.yudao.framework.desensitize.core.base.annotation.DesensitizeBy;
 import cn.iocoder.yudao.framework.desensitize.core.handler.AddressHandler;
+import cn.iocoder.yudao.framework.desensitize.core.base.annotation.DesensitizeBy;
 import com.fasterxml.jackson.annotation.JacksonAnnotationsInside;
 
 import java.lang.annotation.Documented;

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/ErrorCodeConstants.java
Patch:
@@ -86,4 +86,7 @@ public interface ErrorCodeConstants {
     ErrorCode FOLLOW_UP_RECORD_NOT_EXISTS = new ErrorCode(1_020_013_000, "跟进记录不存在");
     ErrorCode FOLLOW_UP_RECORD_DELETE_DENIED = new ErrorCode(1_020_013_001, "删除跟进记录失败，原因：没有权限");
 
+    // ========== 待办消息 1_020_014_000 ==========
+    ErrorCode BACKLOG_CONTACT_STATUS_INVALID = new ErrorCode(1_020_014_000, "客户联系状态有误");
+
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/BpmProcessInstanceCopyController.java
Patch:
@@ -17,7 +17,7 @@
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 
-@Tag(name = "管理后台 - 流程实例") // 流程实例，通过流程定义创建的一次“申请”
+@Tag(name = "管理后台 - 流程实例抄送")
 @RestController
 @RequestMapping("/bpm/process-instance/cc")
 @Validated

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/cc/BpmProcessInstanceCopyConvert.java
Patch:
@@ -31,8 +31,7 @@ default PageResult<BpmProcessInstanceCopyPageItemRespVO> convertPage(PageResult<
             , Map<String, String/* processInstaneName */> processInstaneMap
             , Map<Long, String/* userName */> userMap
     ) {
-        List<BpmProcessInstanceCopyPageItemRespVO> list = convertList(page.getList());
-        List<BpmProcessInstanceCopyPageItemRespVO> list2 = BeanUtils.toBean(page.getList(),
+        List<BpmProcessInstanceCopyPageItemRespVO> list = BeanUtils.toBean(page.getList(),
                 BpmProcessInstanceCopyPageItemRespVO.class,
                 copy -> {
                     MapUtils.findAndThen(userMap, Long.valueOf(copy.getCreator()), copy::setCreatorNickname);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/cc/BpmProcessInstanceCopyServiceImpl.java
Patch:
@@ -59,6 +59,7 @@ public class BpmProcessInstanceCopyServiceImpl implements BpmProcessInstanceCopy
     private BpmCandidateSourceInfoProcessorChain processorChain;
 
     @Resource
+    @Lazy
     private BpmTaskService bpmTaskService;
 
     @Resource

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/convert/permission/CrmPermissionConvert.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.crm.convert.permission;
 
-import cn.hutool.core.collection.CollUtil;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.module.crm.controller.admin.permission.vo.CrmPermissionCreateReqVO;
@@ -49,11 +48,11 @@ default List<CrmPermissionRespVO> convert(List<CrmPermissionDO> permission, List
             findAndThen(userMap, item.getUserId(), user -> {
                 item.setNickname(user.getNickname());
                 findAndThen(deptMap, user.getDeptId(), deptRespDTO -> item.setDeptName(deptRespDTO.getName()));
-                List<PostRespDTO> postRespList = MapUtils.getList(Multimaps.forMap(postMap), user.getPostIds());
-                if (CollUtil.isEmpty(postRespList)) {
+                if (user.getPostIds() == null) {
                     item.setPostNames(Collections.emptySet());
                     return;
                 }
+                List<PostRespDTO> postRespList = MapUtils.getList(Multimaps.forMap(postMap), user.getPostIds());
                 item.setPostNames(CollectionUtils.convertSet(postRespList, PostRespDTO::getName));
             });
             return item;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/business/CrmBusinessMapper.java
Patch:
@@ -58,6 +58,7 @@ default List<CrmBusinessDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmBusinessDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_BUSINESS.getType(), ids, userId);
+        query.selectAll(CrmBusinessDO.class).in(CrmBusinessDO::getId, ids).orderByDesc(CrmBusinessDO::getId);
         return selectJoinList(CrmBusinessDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/clue/CrmClueMapper.java
Patch:
@@ -45,6 +45,7 @@ default List<CrmClueDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmClueDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_LEADS.getType(), ids, userId);
+        query.selectAll(CrmClueDO.class).in(CrmClueDO::getId, ids).orderByDesc(CrmClueDO::getId);
         return selectJoinList(CrmClueDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/contact/CrmContactMapper.java
Patch:
@@ -67,6 +67,7 @@ default List<CrmContactDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmContactDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_CONTACT.getType(), ids, userId);
+        query.selectAll(CrmContactDO.class).in(CrmContactDO::getId, ids).orderByDesc(CrmContactDO::getId);
         return selectJoinList(CrmContactDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/customer/CrmCustomerMapper.java
Patch:
@@ -64,6 +64,7 @@ default List<CrmCustomerDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmCustomerDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_CUSTOMER.getType(), ids, userId);
+        query.selectAll(CrmCustomerDO.class).in(CrmCustomerDO::getId, ids).orderByDesc(CrmCustomerDO::getId);
         return selectJoinList(CrmCustomerDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivableMapper.java
Patch:
@@ -53,6 +53,7 @@ default List<CrmReceivableDO> selectBatchIds(Collection<Long> ids, Long userId)
         MPJLambdaWrapperX<CrmReceivableDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_RECEIVABLE.getType(), ids, userId);
+        query.selectAll(CrmReceivableDO.class).in(CrmReceivableDO::getId, ids).orderByDesc(CrmReceivableDO::getId);
         return selectJoinList(CrmReceivableDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivablePlanMapper.java
Patch:
@@ -52,6 +52,7 @@ default List<CrmReceivablePlanDO> selectBatchIds(Collection<Long> ids, Long user
         MPJLambdaWrapperX<CrmReceivablePlanDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_RECEIVABLE_PLAN.getType(), ids, userId);
+        query.selectAll(CrmReceivablePlanDO.class).in(CrmReceivablePlanDO::getId, ids).orderByDesc(CrmReceivablePlanDO::getId);
         return selectJoinList(CrmReceivablePlanDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java
Patch:
@@ -84,10 +84,9 @@ public static <T extends MPJLambdaWrapper<?>> void appendPermissionCondition(T q
         if (CrmPermissionUtils.isCrmAdmin()) {// 管理员不需要数据权限
             return;
         }
-
         query.innerJoin(CrmPermissionDO.class, on ->
                 on.eq(CrmPermissionDO::getBizType, bizType).in(CrmPermissionDO::getBizId, bizIds)
-                        .in(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));
+                        .eq(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));
     }
 
     /**

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/convert/permission/CrmPermissionConvert.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.crm.convert.permission;
 
-import cn.hutool.core.collection.CollUtil;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.module.crm.controller.admin.permission.vo.CrmPermissionCreateReqVO;
@@ -49,11 +48,11 @@ default List<CrmPermissionRespVO> convert(List<CrmPermissionDO> permission, List
             findAndThen(userMap, item.getUserId(), user -> {
                 item.setNickname(user.getNickname());
                 findAndThen(deptMap, user.getDeptId(), deptRespDTO -> item.setDeptName(deptRespDTO.getName()));
-                List<PostRespDTO> postRespList = MapUtils.getList(Multimaps.forMap(postMap), user.getPostIds());
-                if (CollUtil.isEmpty(postRespList)) {
+                if (user.getPostIds() == null) {
                     item.setPostNames(Collections.emptySet());
                     return;
                 }
+                List<PostRespDTO> postRespList = MapUtils.getList(Multimaps.forMap(postMap), user.getPostIds());
                 item.setPostNames(CollectionUtils.convertSet(postRespList, PostRespDTO::getName));
             });
             return item;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/business/CrmBusinessMapper.java
Patch:
@@ -58,6 +58,7 @@ default List<CrmBusinessDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmBusinessDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_BUSINESS.getType(), ids, userId);
+        query.selectAll(CrmBusinessDO.class).in(CrmBusinessDO::getId, ids).orderByDesc(CrmBusinessDO::getId);
         return selectJoinList(CrmBusinessDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/clue/CrmClueMapper.java
Patch:
@@ -45,6 +45,7 @@ default List<CrmClueDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmClueDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_LEADS.getType(), ids, userId);
+        query.selectAll(CrmClueDO.class).in(CrmClueDO::getId, ids).orderByDesc(CrmClueDO::getId);
         return selectJoinList(CrmClueDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/contact/CrmContactMapper.java
Patch:
@@ -67,6 +67,7 @@ default List<CrmContactDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmContactDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_CONTACT.getType(), ids, userId);
+        query.selectAll(CrmContactDO.class).in(CrmContactDO::getId, ids).orderByDesc(CrmContactDO::getId);
         return selectJoinList(CrmContactDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/customer/CrmCustomerMapper.java
Patch:
@@ -64,6 +64,7 @@ default List<CrmCustomerDO> selectBatchIds(Collection<Long> ids, Long userId) {
         MPJLambdaWrapperX<CrmCustomerDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_CUSTOMER.getType(), ids, userId);
+        query.selectAll(CrmCustomerDO.class).in(CrmCustomerDO::getId, ids).orderByDesc(CrmCustomerDO::getId);
         return selectJoinList(CrmCustomerDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivableMapper.java
Patch:
@@ -53,6 +53,7 @@ default List<CrmReceivableDO> selectBatchIds(Collection<Long> ids, Long userId)
         MPJLambdaWrapperX<CrmReceivableDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_RECEIVABLE.getType(), ids, userId);
+        query.selectAll(CrmReceivableDO.class).in(CrmReceivableDO::getId, ids).orderByDesc(CrmReceivableDO::getId);
         return selectJoinList(CrmReceivableDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/receivable/CrmReceivablePlanMapper.java
Patch:
@@ -52,6 +52,7 @@ default List<CrmReceivablePlanDO> selectBatchIds(Collection<Long> ids, Long user
         MPJLambdaWrapperX<CrmReceivablePlanDO> query = new MPJLambdaWrapperX<>();
         // 拼接数据权限的查询条件
         CrmQueryWrapperUtils.appendPermissionCondition(query, CrmBizTypeEnum.CRM_RECEIVABLE_PLAN.getType(), ids, userId);
+        query.selectAll(CrmReceivablePlanDO.class).in(CrmReceivablePlanDO::getId, ids).orderByDesc(CrmReceivablePlanDO::getId);
         return selectJoinList(CrmReceivablePlanDO.class, query);
     }
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/util/CrmQueryWrapperUtils.java
Patch:
@@ -84,10 +84,9 @@ public static <T extends MPJLambdaWrapper<?>> void appendPermissionCondition(T q
         if (CrmPermissionUtils.isCrmAdmin()) {// 管理员不需要数据权限
             return;
         }
-
         query.innerJoin(CrmPermissionDO.class, on ->
                 on.eq(CrmPermissionDO::getBizType, bizType).in(CrmPermissionDO::getBizId, bizIds)
-                        .in(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));
+                        .eq(CollUtil.isNotEmpty(bizIds), CrmPermissionDO::getUserId, userId));
     }
 
     /**

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/enums/TerminalEnum.java
Patch:
@@ -15,6 +15,7 @@
 @Getter
 public enum TerminalEnum implements IntArrayValuable {
 
+    UNKNOWN(0, "未知"), // 目的：在无法解析到 terminal 时，使用它
     WECHAT_MINI_PROGRAM(10, "微信小程序"),
     WECHAT_WAP(11, "微信公众号"),
     H5(20, "H5 网页"),

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/servlet/ServletUtils.java
Patch:
@@ -88,8 +88,6 @@ public static String getClientIP() {
         return ServletUtil.getClientIP(request);
     }
 
-    // TODO @疯狂：terminal 还是从 ServletUtils 里拿，更容易全局治理；
-
     public static boolean isJsonRequest(ServletRequest request) {
         return StrUtil.startWithIgnoreCase(request.getContentType(), MediaType.APPLICATION_JSON_VALUE);
     }

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/db/DataPermissionDatabaseInterceptor.java
Patch:
@@ -496,7 +496,8 @@ private Expression buildDataPermissionExpression(Table table) {
         Expression allExpression = null;
         for (DataPermissionRule rule : ContextHolder.getRules()) {
             // 判断表名是否匹配
-            if (!rule.getTableNames().contains(table.getName())) {
+            String tableName = MyBatisUtils.getTableName(table);
+            if (!rule.getTableNames().contains(tableName)) {
                 continue;
             }
             // 如果有匹配的规则，说明可重写。
@@ -505,7 +506,6 @@ private Expression buildDataPermissionExpression(Table table) {
             ContextHolder.setRewrite(true);
 
             // 单条规则的条件
-            String tableName = MyBatisUtils.getTableName(table);
             Expression oneExpress = rule.getExpression(tableName, table.getAlias());
             if (oneExpress == null){
                 continue;

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/weixin/AbstractWxPayClient.java
Patch:
@@ -71,6 +71,7 @@ protected void doInit(String tradeType) {
         if (StrUtil.isNotEmpty(config.getPrivateCertContent())) {
             payConfig.setPrivateCertPath(FileUtils.createTempFile(config.getPrivateCertContent()).getPath());
         }
+//        payConfig.setCertSerialNo();
 
         // 创建 client 客户端
         client = new WxPayServiceImpl();

File: yudao-framework/yudao-spring-boot-starter-flowable/src/main/java/cn/iocoder/yudao/framework/flowable/config/YudaoFlowableConfiguration.java
Patch:
@@ -17,8 +17,8 @@ public class YudaoFlowableConfiguration {
      *
      * 如果不创建，会导致项目启动时，Flowable 报错的问题
      */
-    @Bean
-    @ConditionalOnMissingBean
+    @Bean(name = "applicationTaskExecutor")
+    @ConditionalOnMissingBean(name = "applicationTaskExecutor")
     public AsyncListenableTaskExecutor taskExecutor() {
         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();
         executor.setCorePoolSize(8);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskApproveReqVO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.task.vo.task;
 
+import cn.iocoder.yudao.module.bpm.controller.admin.candidate.vo.BpmTaskCandidateRuleVO;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/DictTypeConstants.java
Patch:
@@ -13,5 +13,6 @@ public interface DictTypeConstants {
     String CRM_AUDIT_STATUS = "crm_audit_status"; // CRM 审批状态
     String CRM_PRODUCT_UNIT = "crm_product_unit"; // CRM 产品单位
     String CRM_PRODUCT_STATUS = "crm_product_status"; // CRM 产品状态
+    String CRM_FOLLOW_UP_TYPE = "crm_follow_up_type"; // CRM 跟进方式
 
 }

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/common/CrmBizTypeEnum.java
Patch:
@@ -22,7 +22,9 @@ public enum CrmBizTypeEnum implements IntArrayValuable {
     CRM_CONTACT(3, "联系人"),
     CRM_BUSINESS(4, "商机"),
     CRM_CONTRACT(5, "合同"),
-    CRM_PRODUCT(6, "产品")
+    CRM_PRODUCT(6, "产品"),
+    CRM_RECEIVABLE(7, "回款"),
+    CRM_RECEIVABLE_PLAN(8, "回款计划")
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(CrmBizTypeEnum::getType).toArray();

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessTransferReqVO.java
Patch:
@@ -2,16 +2,15 @@
 
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
+import jakarta.validation.constraints.NotNull;
 import lombok.Data;
 
-import javax.validation.constraints.NotNull;
-
 @Schema(description = "管理后台 - 商机转移 Request VO")
 @Data
 public class CrmBusinessTransferReqVO {
 
     @Schema(description = "商机编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "10430")
-    @NotNull(message = "联系人编号不能为空")
+    @NotNull(message = "商机编号不能为空")
     private Long id;
 
     /**

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/status/CrmBusinessStatusSaveReqVO.java
Patch:
@@ -21,11 +21,11 @@ public class CrmBusinessStatusSaveReqVO {
     @NotEmpty(message = "状态名不能为空")
     private String name;
 
-    // TODO @lilleo：percent 应该是 Integer；
+    // TODO @lzxhqs：：percent 应该是 Integer；
     @Schema(description = "赢单率")
     private String percent;
 
-    // TODO @lilleo：这个是不是不用前端新增和修改的时候传递，交给顺序计算出来，存储起来就好了；
+    // TODO @lzxhqs：这个是不是不用前端新增和修改的时候传递，交给顺序计算出来，存储起来就好了；
     @Schema(description = "排序")
     private Integer sort;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/type/CrmBusinessStatusTypeSaveReqVO.java
Patch:
@@ -19,11 +19,11 @@ public class CrmBusinessStatusTypeSaveReqVO {
     @NotEmpty(message = "状态类型名不能为空")
     private String name;
 
+    // TODO @lzxhqs： VO 里面，我们不使用默认值哈。这里 Lists.newArrayList() 看看怎么去掉。上面 deptIds 也是类似噢
     @Schema(description = "使用的部门编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<Long> deptIds = Lists.newArrayList();
 
-    // TODO @ljlleo VO 里面，我们不使用默认值哈。这里 Lists.newArrayList() 看看怎么去掉。上面 deptIds 也是类似噢
     @Schema(description = "商机状态集合", requiredMode = Schema.RequiredMode.REQUIRED)
-    private List<CrmBusinessStatusSaveReqVO> statusList = Lists.newArrayList();
+    private List<CrmBusinessStatusSaveReqVO> statusList;
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/CrmCustomerTransferReqVO.java
Patch:
@@ -2,16 +2,15 @@
 
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
+import jakarta.validation.constraints.NotNull;
 import lombok.Data;
 
-import javax.validation.constraints.NotNull;
-
 @Schema(description = "管理后台 - CRM 客户转移 Request VO")
 @Data
 public class CrmCustomerTransferReqVO {
 
     @Schema(description = "客户编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "10430")
-    @NotNull(message = "联系人编号不能为空")
+    @NotNull(message = "客户编号不能为空")
     private Long id;
 
     /**

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/permission/CrmPermissionController.java
Patch:
@@ -8,8 +8,8 @@
 import cn.iocoder.yudao.module.crm.controller.admin.permission.vo.CrmPermissionUpdateReqVO;
 import cn.iocoder.yudao.module.crm.convert.permission.CrmPermissionConvert;
 import cn.iocoder.yudao.module.crm.dal.dataobject.permission.CrmPermissionDO;
-import cn.iocoder.yudao.module.crm.framework.core.annotations.CrmPermission;
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;
+import cn.iocoder.yudao.module.crm.framework.permission.core.annotations.CrmPermission;
 import cn.iocoder.yudao.module.crm.service.permission.CrmPermissionService;
 import cn.iocoder.yudao.module.system.api.dept.DeptApi;
 import cn.iocoder.yudao.module.system.api.dept.PostApi;
@@ -21,12 +21,12 @@
 import io.swagger.v3.oas.annotations.Parameter;
 import io.swagger.v3.oas.annotations.Parameters;
 import io.swagger.v3.oas.annotations.tags.Tag;
+import jakarta.annotation.Resource;
+import jakarta.validation.Valid;
 import org.springframework.security.access.prepost.PreAuthorize;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
 
-import javax.annotation.Resource;
-import javax.validation.Valid;
 import java.util.*;
 
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/product/vo/category/CrmProductCategoryCreateReqVO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.crm.controller.admin.product.vo.category;
 
+import com.mzt.logapi.starter.annotation.DiffLogField;
 import lombok.*;
 import io.swagger.v3.oas.annotations.media.Schema;
 
@@ -14,6 +15,7 @@ public class CrmProductCategoryCreateReqVO{
 
     @Schema(description = "分类名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "赵六")
     @NotNull(message = "分类名称不能为空")
+    @DiffLogField(name = "分类名称")
     private String name;
 
     @Schema(description = "父级编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "4680")

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/dataobject/business/CrmBusinessStatusTypeDO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.crm.dal.dataobject.business;
 
+import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.mybatis.core.type.LongListTypeHandler;
 import com.baomidou.mybatisplus.annotation.KeySequence;
@@ -43,6 +44,7 @@ public class CrmBusinessStatusTypeDO extends BaseDO {
      * 开启状态
      *
      * TODO 改成 Integer，关联 CommonStatus
+     * 枚举 {@link CommonStatusEnum}
      */
     private Boolean status;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/core/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.module.crm.framework.core;
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/operatelog/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.crm.framework.operatelog;
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/annotations/CrmPermission.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.framework.core.annotations;
+package cn.iocoder.yudao.module.crm.framework.permission.core.annotations;
 
 import cn.iocoder.yudao.module.crm.enums.common.CrmBizTypeEnum;
 import cn.iocoder.yudao.module.crm.enums.permission.CrmPermissionLevelEnum;
@@ -35,9 +35,8 @@
 
     /**
      * 数据编号，通过 Spring EL 表达式获取
-     * TODO 数据权限完成后去除 default ""
      */
-    String bizId() default "";
+    String bizId();
 
     /**
      * 操作所需权限级别

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/core/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.crm.framework.permission.core;
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/framework/permission/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.crm.framework.permission;
\ No newline at end of file

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/product/CrmProductService.java
Patch:
@@ -4,8 +4,8 @@
 import cn.iocoder.yudao.module.crm.controller.admin.product.vo.product.CrmProductPageReqVO;
 import cn.iocoder.yudao.module.crm.controller.admin.product.vo.product.CrmProductSaveReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.product.CrmProductDO;
+import jakarta.validation.Valid;
 
-import javax.validation.Valid;
 import java.util.Collection;
 import java.util.List;
 
@@ -60,7 +60,7 @@ public interface CrmProductService {
      * @param pageReqVO 分页查询
      * @return 产品分页
      */
-    PageResult<CrmProductDO> getProductPage(CrmProductPageReqVO pageReqVO);
+    PageResult<CrmProductDO> getProductPage(CrmProductPageReqVO pageReqVO, Long userId);
 
     /**
      * 获得产品

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/codegen/CodegenTableMapper.java
Patch:
@@ -22,7 +22,9 @@ default PageResult<CodegenTableDO> selectPage(CodegenTablePageReqVO pageReqVO) {
                 .likeIfPresent(CodegenTableDO::getTableName, pageReqVO.getTableName())
                 .likeIfPresent(CodegenTableDO::getTableComment, pageReqVO.getTableComment())
                 .likeIfPresent(CodegenTableDO::getClassName, pageReqVO.getClassName())
-                .betweenIfPresent(CodegenTableDO::getCreateTime, pageReqVO.getCreateTime()));
+                .betweenIfPresent(CodegenTableDO::getCreateTime, pageReqVO.getCreateTime())
+                .orderByDesc(CodegenTableDO::getUpdateTime)
+        );
     }
 
     default List<CodegenTableDO> selectListByDataSourceConfigId(Long dataSourceConfigId) {

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/enums/DictTypeConstants.java
Patch:
@@ -7,7 +7,6 @@
  */
 public interface DictTypeConstants {
 
-    String PRODUCT_UNIT = "product_unit";  // 商品单位
     String PRODUCT_SPU_STATUS = "product_spu_status"; // 商品 SPU 状态
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/test/java/cn/iocoder/yudao/module/bpm/service/candidate/BpmCandidateSourceInfoProcessorChainTest.java
Patch:
@@ -8,7 +8,6 @@
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmUserGroupDO;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmTaskAssignRuleTypeEnum;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmTaskRuleScriptEnum;
-import cn.iocoder.yudao.module.bpm.framework.bpm.config.BpmCandidateProcessorConfiguration;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.behavior.script.BpmTaskAssignScript;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.behavior.script.impl.BpmTaskAssignLeaderX1Script;
 import cn.iocoder.yudao.module.bpm.framework.flowable.core.behavior.script.impl.BpmTaskAssignLeaderX2Script;
@@ -22,12 +21,12 @@
 import cn.iocoder.yudao.module.system.api.permission.RoleApi;
 import cn.iocoder.yudao.module.system.api.user.AdminUserApi;
 import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;
+import jakarta.annotation.Resource;
 import org.flowable.engine.delegate.DelegateExecution;
 import org.junit.jupiter.api.Test;
 import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.context.annotation.Import;
 
-import javax.annotation.Resource;
 import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
@@ -40,7 +39,7 @@
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.when;
 
-@Import({BpmCandidateSourceInfoProcessorChain.class, BpmCandidateProcessorConfiguration.class,
+@Import({BpmCandidateSourceInfoProcessorChain.class,
         BpmCandidateScriptApiSourceInfoProcessor.class, BpmTaskAssignLeaderX1Script.class,
         BpmTaskAssignLeaderX2Script.class})
 public class BpmCandidateSourceInfoProcessorChainTest extends BaseDbUnitTest {

File: yudao-module-bpm/yudao-module-bpm-biz/src/test/java/cn/iocoder/yudao/module/bpm/service/cc/BpmProcessInstanceCopyServiceTest.java
Patch:
@@ -1,11 +1,10 @@
 package cn.iocoder.yudao.module.bpm.service.cc;
 
 import cn.iocoder.yudao.framework.test.core.ut.BaseDbUnitTest;
+import jakarta.annotation.Resource;
 import org.junit.jupiter.api.Test;
 import org.springframework.context.annotation.Import;
 
-import javax.annotation.Resource;
-
 @Import({BpmProcessInstanceCopyServiceImpl.class})
 class BpmProcessInstanceCopyServiceTest extends BaseDbUnitTest {
     @Resource

File: yudao-framework/yudao-spring-boot-starter-flowable/src/main/java/cn/iocoder/yudao/framework/flowable/config/YudaoFlowableConfiguration.java
Patch:
@@ -17,8 +17,8 @@ public class YudaoFlowableConfiguration {
      *
      * 如果不创建，会导致项目启动时，Flowable 报错的问题
      */
-    @Bean
-    @ConditionalOnMissingBean
+    @Bean(name = "applicationTaskExecutor")
+    @ConditionalOnMissingBean(name = "applicationTaskExecutor")
     public AsyncListenableTaskExecutor taskExecutor() {
         ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();
         executor.setCorePoolSize(8);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/socail/vo/user/SocialUserBindReqVO.java
Patch:
@@ -31,4 +31,7 @@ public class SocialUserBindReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
+    public Integer getType() {
+        return type;
+    }
 }

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/ErrorCodeConstants.java
Patch:
@@ -85,6 +85,6 @@ public interface ErrorCodeConstants {
     ErrorCode FOLLOW_UP_RECORD_NOT_EXISTS = new ErrorCode(1_020_013_000, "跟进记录不存在");
 
     // ========== 待办消息 1_020_014_000 ==========
-    ErrorCode BACKLOG_CONTACT_STATUS_ERROR = new ErrorCode(1_020_014_000, "客户联系状态有误");
+    ErrorCode BACKLOG_CONTACT_STATUS_INVALID = new ErrorCode(1_020_014_000, "客户联系状态有误");
 
 }

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/operatelog/config/YudaoOperateLogV2Configuration.java
Patch:
@@ -1,6 +1,6 @@
 package cn.iocoder.yudao.framework.operatelog.config;
 
-import cn.iocoder.yudao.framework.operatelog.core.service.ILogRecordServiceImpl;
+import cn.iocoder.yudao.framework.operatelog.core.service.LogRecordServiceImpl;
 import com.mzt.logapi.service.ILogRecordService;
 import com.mzt.logapi.starter.annotation.EnableLogRecord;
 import lombok.extern.slf4j.Slf4j;
@@ -21,7 +21,7 @@ public class YudaoOperateLogV2Configuration {
     @Bean
     @Primary
     public ILogRecordService iLogRecordServiceImpl() {
-        return new ILogRecordServiceImpl();
+        return new LogRecordServiceImpl();
     }
 
 }

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/ErrorCodeConstants.java
Patch:
@@ -41,7 +41,7 @@ public interface ErrorCodeConstants {
     ErrorCode CUSTOMER_LOCKED_PUT_POOL_FAIL = new ErrorCode(1_020_006_005, "客户【{}】放入公海失败，原因：客户已锁定");
     ErrorCode CUSTOMER_UPDATE_OWNER_USER_FAIL = new ErrorCode(1_020_006_006, "更新客户【{}】负责人失败, 原因：系统异常");
     ErrorCode CUSTOMER_LOCK_FAIL_IS_LOCK = new ErrorCode(1_020_006_007, "锁定客户失败，它已经处于锁定状态");
-    ErrorCode CUSTOMER_UNLOCK_FAIL_IS_UNLOCK = new ErrorCode(1_020_006_008, "锁定客户失败，它已经处于未锁定状态");
+    ErrorCode CUSTOMER_UNLOCK_FAIL_IS_UNLOCK = new ErrorCode(1_020_006_008, "解锁客户失败，它已经处于未锁定状态");
     ErrorCode CUSTOMER_LOCK_EXCEED_LIMIT = new ErrorCode(1_020_006_009, "锁定客户失败，超出锁定规则上限");
     ErrorCode CUSTOMER_OWNER_EXCEED_LIMIT = new ErrorCode(1_020_006_010, "操作失败，超出客户数拥有上限");
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/permission/CrmPermissionController.java
Patch:
@@ -103,7 +103,6 @@ public CommonResult<List<CrmPermissionRespVO>> getPermissionList(@RequestParam("
         // 拼接数据
         List<AdminUserRespDTO> userList = adminUserApi.getUserList(convertSet(permission, CrmPermissionDO::getUserId));
         Map<Long, DeptRespDTO> deptMap = deptApi.getDeptMap(convertSet(userList, AdminUserRespDTO::getDeptId));
-        // TODO @puhui999：可能 postIds 为空的时候，会导致报错，看看怎么 fix 下
         Set<Long> postIds = CollectionUtils.convertSetByFlatMap(userList, AdminUserRespDTO::getPostIds, Collection::stream);
         Map<Long, PostRespDTO> postMap = postApi.getPostMap(postIds);
         return success(CrmPermissionConvert.INSTANCE.convert(permission, userList, deptMap, postMap));

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsGetReqVO.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.module.mp.controller.admin.statistics.vo;
 
 import io.swagger.v3.oas.annotations.media.Schema;
+import jakarta.validation.constraints.NotNull;
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import jakarta.validation.constraints.NotNull;
 import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
@@ -17,7 +17,7 @@ public class MpStatisticsGetReqVO {
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "查询时间范围")
+    @Schema(description = "查询时间范围", example = "[2022-07-01 00:00:00, 2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @NotNull(message = "查询时间范围不能为空")
     private LocalDateTime[] date;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/aftersale/AfterSaleServiceImpl.java
Patch:
@@ -262,7 +262,7 @@ public void deliveryAfterSale(Long userId, AppAfterSaleDeliveryReqVO deliveryReq
         // 记录售后日志
         AfterSaleLogUtils.setAfterSaleInfo(afterSale.getId(), afterSale.getStatus(),
                 AfterSaleStatusEnum.BUYER_DELIVERY.getStatus(),
-                MapUtil.<String, Object>builder().put("expressName", express.getName())
+                MapUtil.<String, Object>builder().put("deliveryName", express.getName())
                         .put("logisticsNo", deliveryReqVO.getLogisticsNo()).build());
 
         // TODO 发送售后消息

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/handler/TradeBrokerageOrderHandler.java
Patch:
@@ -83,7 +83,7 @@ public void afterCancelOrderItem(TradeOrderDO order, TradeOrderItemDO orderItem)
         if (order.getBrokerageUserId() == null) {
             return;
         }
-        cancelBrokerage(order.getId(), orderItem.getOrderId());
+        cancelBrokerage(order.getBrokerageUserId(), orderItem.getOrderId());
     }
 
     /**

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/level/MemberLevelServiceImpl.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
+import java.util.Optional;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.module.member.enums.ErrorCodeConstants.*;
@@ -259,7 +260,7 @@ public void addExperience(Long userId, Integer experience, MemberExperienceBizTy
         }
 
         // 3. 更新会员表上的等级编号、经验值
-        memberUserService.updateUserLevel(user.getId(), levelRecord.getLevelId(), userExperience);
+        memberUserService.updateUserLevel(user.getId(), Optional.ofNullable(levelRecord.getLevelId()).orElse(user.getLevelId()), userExperience);
     }
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceImpl.java
Patch:
@@ -359,7 +359,7 @@ public void deliveryOrder(TradeOrderDeliveryReqVO deliveryReqVO) {
 
         // 3. 记录订单日志
         TradeOrderLogUtils.setOrderInfo(order.getId(), order.getStatus(), TradeOrderStatusEnum.DELIVERED.getStatus(),
-                MapUtil.<String, Object>builder().put("expressName", express != null ? express.getName() : "")
+                MapUtil.<String, Object>builder().put("deliveryName", express != null ? express.getName() : "")
                         .put("logisticsNo", express != null ? deliveryReqVO.getLogisticsNo() : "").build());
 
         // 4. 发送站内信

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsGetReqVO.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.module.mp.controller.admin.statistics.vo;
 
 import io.swagger.v3.oas.annotations.media.Schema;
+import jakarta.validation.constraints.NotNull;
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import jakarta.validation.constraints.NotNull;
 import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
@@ -17,7 +17,7 @@ public class MpStatisticsGetReqVO {
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "查询时间范围")
+    @Schema(description = "查询时间范围", example = "[2022-07-01 00:00:00, 2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @NotNull(message = "查询时间范围不能为空")
     private LocalDateTime[] date;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/level/MemberLevelServiceImpl.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
+import java.util.Optional;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.module.member.enums.ErrorCodeConstants.*;
@@ -259,7 +260,7 @@ public void addExperience(Long userId, Integer experience, MemberExperienceBizTy
         }
 
         // 3. 更新会员表上的等级编号、经验值
-        memberUserService.updateUserLevel(user.getId(), levelRecord.getLevelId(), userExperience);
+        memberUserService.updateUserLevel(user.getId(), Optional.ofNullable(levelRecord.getLevelId()).orElse(user.getLevelId()), userExperience);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClient.java
Patch:
@@ -81,7 +81,7 @@ private String buildRegion() {
         }
         // 腾讯云必须有 region，否则会报错
         if (config.getEndpoint().contains(ENDPOINT_TENCENT)) {
-            return StrUtil.subAfter(config.getEndpoint(), ".cos.", false)
+            return StrUtil.subAfter(config.getEndpoint(), "cos.", false)
                     .replaceAll("." + ENDPOINT_TENCENT, ""); // 去除 Endpoint
         }
         return null;

File: yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/session/WebSocketSessionManagerImpl.java
Patch:
@@ -66,7 +66,7 @@ public void addSession(WebSocketSession session) {
     @Override
     public void removeSession(WebSocketSession session) {
         // 移除从 idSessions 中
-        idSessions.remove(session.getId(), session);
+        idSessions.remove(session.getId());
         // 移除从 idSessions 中
         LoginUser user = WebSocketFrameworkUtils.getLoginUser(session);
         if (user == null) {

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileController.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.util.StrUtil;
+import cn.hutool.core.util.URLUtil;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
@@ -70,7 +71,8 @@ public void getFileContent(HttpServletRequest request,
         if (StrUtil.isEmpty(path)) {
             throw new IllegalArgumentException("结尾的 path 路径必须传递");
         }
-
+        // 解码
+        path = URLUtil.decode(path);
         // 读取内容
         byte[] content = fileService.getFileContent(configId, path);
         if (content == null) {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -1 +1 @@
-package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.lang.Assert;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.number.NumberUtils;import cn.iocoder.yudao.framework.flowable.core.context.FlowableContextHolder;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.*;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;import cn.iocoder.yudao.module.bpm.dal.mysql.task.BpmProcessInstanceExtMapper;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventPublisher;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.dept.DeptApi;import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import lombok.extern.slf4j.Slf4j;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.flowable.task.api.Task;import org.springframework.context.annotation.Lazy;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import jakarta.annotation.Resource;import jakarta.validation.Valid;import java.time.LocalDateTime;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * <p> * ProcessDefinition & ProcessInstance & Execution & Task 的关系： * 1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * <p> * HistoricProcessInstance & ProcessInstance 的关系： * 1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * <p> * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private BpmProcessInstanceExtMapper processInstanceExtMapper;    @Resource    @Lazy // 解决循环依赖    private BpmTaskService taskService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private HistoryService historyService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private DeptApi deptApi;    @Resource    private BpmProcessInstanceResultEventPublisher processInstanceResultEventPublisher;    @Resource    private BpmMessageService messageService;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<BpmProcessInstancePageItemRespVO> getMyProcessInstancePage(Long userId,                                                                                 BpmProcessInstanceMyPageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        PageResult<BpmProcessInstanceExtDO> pageResult = processInstanceExtMapper.selectPage(userId, pageReqVO);        if (CollUtil.isEmpty(pageResult.getList())) {            return new PageResult<>(pageResult.getTotal());        }        // 获得流程 Task Map        List<String> processInstanceIds = convertList(pageResult.getList(), BpmProcessInstanceExtDO::getProcessInstanceId);        Map<String, List<Task>> taskMap = taskService.getTaskMapByProcessInstanceIds(processInstanceIds);        // 转换返回        return BpmProcessInstanceConvert.INSTANCE.convertPage(pageResult, taskMap);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null, createReqVO.getAssignee());    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey(), createReqDTO.getAssignee());    }    @Override    public BpmProcessInstanceRespVO getProcessInstanceVO(String id) {        // 获得流程实例        HistoricProcessInstance processInstance = getHistoricProcessInstance(id);        if (processInstance == null) {            return null;        }        BpmProcessInstanceExtDO processInstanceExt = processInstanceExtMapper.selectByProcessInstanceId(id);        Assert.notNull(processInstanceExt, "流程实例拓展({}) 不存在", id);        // 获得流程定义        ProcessDefinition processDefinition = processDefinitionService                .getProcessDefinition(processInstance.getProcessDefinitionId());        Assert.notNull(processDefinition, "流程定义({}) 不存在", processInstance.getProcessDefinitionId());        BpmProcessDefinitionExtDO processDefinitionExt = processDefinitionService.getProcessDefinitionExt(                processInstance.getProcessDefinitionId());        Assert.notNull(processDefinitionExt, "流程定义拓展({}) 不存在", id);        String bpmnXml = processDefinitionService.getProcessDefinitionBpmnXML(processInstance.getProcessDefinitionId());        // 获得 User        AdminUserRespDTO startUser = adminUserApi.getUser(NumberUtils.parseLong(processInstance.getStartUserId()));        DeptRespDTO dept = null;        if (startUser != null) {            dept = deptApi.getDept(startUser.getDeptId());        }        // 拼接结果        return BpmProcessInstanceConvert.INSTANCE.convert2(processInstance, processInstanceExt,                processDefinition, processDefinitionExt, bpmnXml, startUser, dept);    }    @Override    public void cancelProcessInstance(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。通过历史表查询        deleteProcessInstance(cancelReqVO.getId(),                BpmProcessInstanceDeleteReasonEnum.CANCEL_TASK.format(cancelReqVO.getReason()));    }    /**     * 获得历史的流程实例     *     * @param id 流程实例的编号     * @return 历史的流程实例     */    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public void createProcessInstanceExt(ProcessInstance instance) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition2(instance.getProcessDefinitionId());        // 插入 BpmProcessInstanceExtDO 对象        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getId())                .setProcessDefinitionId(definition.getId())                .setName(instance.getProcessDefinitionName())                .setStartUserId(Long.valueOf(instance.getStartUserId()))                .setCategory(definition.getCategory())                .setStatus(BpmProcessInstanceStatusEnum.RUNNING.getStatus())                .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());        processInstanceExtMapper.insert(instanceExtDO);    }    @Override    public void updateProcessInstanceExtCancel(FlowableCancelledEvent event) {        // 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceExtReject 方法，已经进行更新了        if (BpmProcessInstanceDeleteReasonEnum.isRejectReason((String) event.getCause())) {            return;        }        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(event.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.CANCEL.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    public void updateProcessInstanceExtComplete(ProcessInstance instance) {        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()); // 如果正常完全，说明审批通过        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被通过的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.convert2ApprovedReq(instance));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceExtReject(String id, String reason) {        // 需要主动查询，因为 instance 只有 id 属性        ProcessInstance processInstance = getProcessInstance(id);        // 删除流程实例，以实现驳回任务时，取消整个审批流程        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));        // 更新 status + result        // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，        // 设置 result 为 BpmProcessInstanceStatusEnum.CANCEL，显然和 result 不一定是一致的        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO().setProcessInstanceId(id)                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被不通过的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey,                                          Map<String, List<Long>> assignee) {        // 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 设置上下文信息        // TODO @hai：要不往 variables 存到一个全局固定 key 里，减少对上下文的依赖        FlowableContextHolder.setAssignee(assignee);        // 创建流程实例        ProcessInstance instance = runtimeService.createProcessInstanceBuilder()                .processDefinitionId(definition.getId())                .businessKey(businessKey)                .name(definition.getName().trim())                .variables(variables)                .start();        // 设置流程名字        runtimeService.setProcessInstanceName(instance.getId(), definition.getName());        // 补全流程实例的拓展表        processInstanceExtMapper.updateByProcessInstanceId(new BpmProcessInstanceExtDO().setProcessInstanceId(instance.getId())                .setFormVariables(variables).setAssignee(assignee));        return instance.getId();    }    @Override    public List<Long> getAssigneeByProcessInstanceIdAndTaskDefinitionKey(String processInstanceId, String taskDefinitionKey) {        // 1. 先从上下文获取，首次提交数据库中查询不到        List<Long> result = FlowableContextHolder.getAssigneeByTaskDefinitionKey(taskDefinitionKey);        if (CollUtil.isNotEmpty(result)) {            return result;        }        // 2. 从数据库中获取        BpmProcessInstanceExtDO instance = processInstanceExtMapper.selectByProcessInstanceId(processInstanceId);        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        if (CollUtil.isNotEmpty(instance.getAssignee())) {            return instance.getAssignee().get(taskDefinitionKey);        }        return Collections.emptyList();    }}
\ No newline at end of file
+package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.lang.Assert;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.number.NumberUtils;import cn.iocoder.yudao.framework.flowable.core.context.FlowableContextHolder;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.*;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;import cn.iocoder.yudao.module.bpm.dal.mysql.task.BpmProcessInstanceExtMapper;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventPublisher;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.dept.DeptApi;import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import lombok.extern.slf4j.Slf4j;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.flowable.task.api.Task;import org.springframework.context.annotation.Lazy;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import jakarta.annotation.Resource;import jakarta.validation.Valid;import java.time.LocalDateTime;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * <p> * ProcessDefinition & ProcessInstance & Execution & Task 的关系： * 1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * <p> * HistoricProcessInstance & ProcessInstance 的关系： * 1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * <p> * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private BpmProcessInstanceExtMapper processInstanceExtMapper;    @Resource    @Lazy // 解决循环依赖    private BpmTaskService taskService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private HistoryService historyService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private DeptApi deptApi;    @Resource    private BpmProcessInstanceResultEventPublisher processInstanceResultEventPublisher;    @Resource    private BpmMessageService messageService;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery()                .includeProcessVariables()                .processInstanceId(id)                .singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<BpmProcessInstancePageItemRespVO> getMyProcessInstancePage(Long userId,                                                                                 BpmProcessInstanceMyPageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        PageResult<BpmProcessInstanceExtDO> pageResult = processInstanceExtMapper.selectPage(userId, pageReqVO);        if (CollUtil.isEmpty(pageResult.getList())) {            return new PageResult<>(pageResult.getTotal());        }        // 获得流程 Task Map        List<String> processInstanceIds = convertList(pageResult.getList(), BpmProcessInstanceExtDO::getProcessInstanceId);        Map<String, List<Task>> taskMap = taskService.getTaskMapByProcessInstanceIds(processInstanceIds);        // 转换返回        return BpmProcessInstanceConvert.INSTANCE.convertPage(pageResult, taskMap);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null, createReqVO.getAssignee());    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey(), createReqDTO.getAssignee());    }    @Override    public BpmProcessInstanceRespVO getProcessInstanceVO(String id) {        // 获得流程实例        HistoricProcessInstance processInstance = getHistoricProcessInstance(id);        if (processInstance == null) {            return null;        }        BpmProcessInstanceExtDO processInstanceExt = processInstanceExtMapper.selectByProcessInstanceId(id);        Assert.notNull(processInstanceExt, "流程实例拓展({}) 不存在", id);        // 获得流程定义        ProcessDefinition processDefinition = processDefinitionService                .getProcessDefinition(processInstance.getProcessDefinitionId());        Assert.notNull(processDefinition, "流程定义({}) 不存在", processInstance.getProcessDefinitionId());        BpmProcessDefinitionExtDO processDefinitionExt = processDefinitionService.getProcessDefinitionExt(                processInstance.getProcessDefinitionId());        Assert.notNull(processDefinitionExt, "流程定义拓展({}) 不存在", id);        String bpmnXml = processDefinitionService.getProcessDefinitionBpmnXML(processInstance.getProcessDefinitionId());        // 获得 User        AdminUserRespDTO startUser = adminUserApi.getUser(NumberUtils.parseLong(processInstance.getStartUserId()));        DeptRespDTO dept = null;        if (startUser != null) {            dept = deptApi.getDept(startUser.getDeptId());        }        // 拼接结果        return BpmProcessInstanceConvert.INSTANCE.convert2(processInstance, processInstanceExt,                processDefinition, processDefinitionExt, bpmnXml, startUser, dept);    }    @Override    public void cancelProcessInstance(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。通过历史表查询        deleteProcessInstance(cancelReqVO.getId(),                BpmProcessInstanceDeleteReasonEnum.CANCEL_TASK.format(cancelReqVO.getReason()));    }    /**     * 获得历史的流程实例     *     * @param id 流程实例的编号     * @return 历史的流程实例     */    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public void createProcessInstanceExt(ProcessInstance instance) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition2(instance.getProcessDefinitionId());        // 插入 BpmProcessInstanceExtDO 对象        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getId())                .setProcessDefinitionId(definition.getId())                .setName(instance.getProcessDefinitionName())                .setStartUserId(Long.valueOf(instance.getStartUserId()))                .setCategory(definition.getCategory())                .setStatus(BpmProcessInstanceStatusEnum.RUNNING.getStatus())                .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());        processInstanceExtMapper.insert(instanceExtDO);    }    @Override    public void updateProcessInstanceExtCancel(FlowableCancelledEvent event) {        // 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceExtReject 方法，已经进行更新了        if (BpmProcessInstanceDeleteReasonEnum.isRejectReason((String) event.getCause())) {            return;        }        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(event.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.CANCEL.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    public void updateProcessInstanceExtComplete(ProcessInstance instance) {        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()); // 如果正常完全，说明审批通过        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被通过的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.convert2ApprovedReq(instance));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceExtReject(String id, String reason) {        // 需要主动查询，因为 instance 只有 id 属性        ProcessInstance processInstance = getProcessInstance(id);        // 删除流程实例，以实现驳回任务时，取消整个审批流程        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));        // 更新 status + result        // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，        // 设置 result 为 BpmProcessInstanceStatusEnum.CANCEL，显然和 result 不一定是一致的        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO().setProcessInstanceId(id)                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被不通过的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey,                                          Map<String, List<Long>> assignee) {        // 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 设置上下文信息        // TODO @hai：要不往 variables 存到一个全局固定 key 里，减少对上下文的依赖        FlowableContextHolder.setAssignee(assignee);        // 创建流程实例        ProcessInstance instance = runtimeService.createProcessInstanceBuilder()                .processDefinitionId(definition.getId())                .businessKey(businessKey)                .name(definition.getName().trim())                .variables(variables)                .start();        // 设置流程名字        runtimeService.setProcessInstanceName(instance.getId(), definition.getName());        // 补全流程实例的拓展表        processInstanceExtMapper.updateByProcessInstanceId(new BpmProcessInstanceExtDO().setProcessInstanceId(instance.getId())                .setFormVariables(variables).setAssignee(assignee));        return instance.getId();    }    @Override    public List<Long> getAssigneeByProcessInstanceIdAndTaskDefinitionKey(String processInstanceId, String taskDefinitionKey) {        // 1. 先从上下文获取，首次提交数据库中查询不到        List<Long> result = FlowableContextHolder.getAssigneeByTaskDefinitionKey(taskDefinitionKey);        if (CollUtil.isNotEmpty(result)) {            return result;        }        // 2. 从数据库中获取        BpmProcessInstanceExtDO instance = processInstanceExtMapper.selectByProcessInstanceId(processInstanceId);        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        if (CollUtil.isNotEmpty(instance.getAssignee())) {            return instance.getAssignee().get(taskDefinitionKey);        }        return Collections.emptyList();    }}
\ No newline at end of file

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java
Patch:
@@ -28,7 +28,7 @@ public interface BaseMapperX<T> extends MPJBaseMapper<T> {
 
     default PageResult<T> selectPage(PageParam pageParam, @Param("ew") Wrapper<T> queryWrapper) {
         // 特殊：不分页，直接查询全部
-        if (PageParam.PAGE_SIZE_NONE.equals(pageParam.getPageNo())) {
+        if (PageParam.PAGE_SIZE_NONE.equals(pageParam.getPageSize())) {
             List<T> list = selectList(queryWrapper);
             return new PageResult<>(list, (long) list.size());
         }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/dict/DictDataApiImpl.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.system.api.dict;
 
+import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.module.system.api.dict.dto.DictDataRespDTO;
-import cn.iocoder.yudao.module.system.convert.dict.DictDataConvert;
 import cn.iocoder.yudao.module.system.dal.dataobject.dict.DictDataDO;
 import cn.iocoder.yudao.module.system.service.dict.DictDataService;
 import org.springframework.stereotype.Service;
@@ -28,13 +28,13 @@ public void validateDictDataList(String dictType, Collection<String> values) {
     @Override
     public DictDataRespDTO getDictData(String dictType, String value) {
         DictDataDO dictData = dictDataService.getDictData(dictType, value);
-        return DictDataConvert.INSTANCE.convert02(dictData);
+        return BeanUtils.toBean(dictData, DictDataRespDTO.class);
     }
 
     @Override
     public DictDataRespDTO parseDictData(String dictType, String label) {
         DictDataDO dictData = dictDataService.parseDictData(dictType, label);
-        return DictDataConvert.INSTANCE.convert02(dictData);
+        return BeanUtils.toBean(dictData, DictDataRespDTO.class);
     }
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataPageReqVO.java
Patch:
@@ -1,6 +1,8 @@
 package cn.iocoder.yudao.module.system.controller.admin.dict.vo.data;
 
+import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
+import cn.iocoder.yudao.framework.common.validation.InEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -21,6 +23,7 @@ public class DictDataPageReqVO extends PageParam {
     private String dictType;
 
     @Schema(description = "展示状态，参见 CommonStatusEnum 枚举类", example = "1")
+    @InEnum(value = CommonStatusEnum.class, message = "修改状态必须是 {value}")
     private Integer status;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/app/dict/AppDictDataController.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.system.controller.app.dict;
 
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
+import cn.iocoder.yudao.framework.common.util.object.BeanUtils;
 import cn.iocoder.yudao.module.system.controller.app.dict.vo.AppDictDataRespVO;
-import cn.iocoder.yudao.module.system.convert.dict.DictDataConvert;
 import cn.iocoder.yudao.module.system.dal.dataobject.dict.DictDataDO;
 import cn.iocoder.yudao.module.system.service.dict.DictDataService;
 import io.swagger.v3.oas.annotations.Operation;
@@ -33,7 +33,7 @@ public class AppDictDataController {
     @Parameter(name = "type", description = "字典类型", required = true, example = "common_status")
     public CommonResult<List<AppDictDataRespVO>> getDictDataListByType(@RequestParam("type") String type) {
         List<DictDataDO> list = dictDataService.getEnabledDictDataListByType(type);
-        return success(DictDataConvert.INSTANCE.convertList03(list));
+        return success(BeanUtils.toBean(list, AppDictDataRespVO.class));
     }
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenEngine.java
Patch:
@@ -103,7 +103,7 @@ public class CodegenEngine {
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("views/index.vue"),
                     vueFilePath("views/${table.moduleName}/${table.businessName}/index.vue"))
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("api/api.js"),
-                    vueFilePath("api/${table.moduleName}/${classNameVar}.js"))
+                    vueFilePath("api/${table.moduleName}/${table.businessName}/index.js"))
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("views/form.vue"),
                     vueFilePath("views/${table.moduleName}/${table.businessName}/${simpleClassName}Form.vue"))
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("views/components/form_sub_normal.vue"),  // 特殊：主子表专属逻辑

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenEngine.java
Patch:
@@ -103,7 +103,7 @@ public class CodegenEngine {
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("views/index.vue"),
                     vueFilePath("views/${table.moduleName}/${table.businessName}/index.vue"))
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("api/api.js"),
-                    vueFilePath("api/${table.moduleName}/${classNameVar}.js"))
+                    vueFilePath("api/${table.moduleName}/${table.businessName}/index.js"))
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("views/form.vue"),
                     vueFilePath("views/${table.moduleName}/${table.businessName}/${simpleClassName}Form.vue"))
             .put(CodegenFrontTypeEnum.VUE2.getType(), vueTemplatePath("views/components/form_sub_normal.vue"),  // 特殊：主子表专属逻辑

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/ErrorCodeConstants.java
Patch:
@@ -66,4 +66,7 @@ public interface ErrorCodeConstants {
     // ========== 商机状态 1_020_011_000 ==========
     ErrorCode BUSINESS_STATUS_NOT_EXISTS = new ErrorCode(1_020_011_000, "商机状态不存在");
 
+    // ========== 客户公海规则设置 1_020_011_000 ==========
+    ErrorCode CUSTOMER_LIMIT_CONFIG_NOT_EXISTS = new ErrorCode(1_020_012_000, "客户限制配置不存在");
+
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessBaseVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessCreateReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessExcelVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessExportReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessPageReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import io.swagger.v3.oas.annotations.media.Schema;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessTransferReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
 import cn.iocoder.yudao.module.crm.framework.enums.CrmPermissionLevelEnum;
 import io.swagger.v3.oas.annotations.media.Schema;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/business/CrmBusinessUpdateReqVO.java
Patch:
@@ -1,5 +1,6 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.business;
 
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.CrmBusinessBaseVO;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/status/CrmBusinessStatusPageReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.status;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import io.swagger.v3.oas.annotations.media.Schema;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/status/CrmBusinessStatusQueryVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.status;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/status/CrmBusinessStatusRespVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.status;
 
 import com.alibaba.excel.annotation.ExcelIgnoreUnannotated;
 import com.alibaba.excel.annotation.ExcelProperty;
@@ -26,7 +26,7 @@ public class CrmBusinessStatusRespVO {
     @ExcelProperty("赢单率")
     private String percent;
 
-    @Schema(description = "排序")
+    @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @ExcelProperty("排序")
     private Integer sort;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/status/CrmBusinessStatusSaveReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.status;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
@@ -21,9 +21,11 @@ public class CrmBusinessStatusSaveReqVO {
     @NotEmpty(message = "状态名不能为空")
     private String name;
 
+    // TODO @lilleo：percent 应该是 Integer；
     @Schema(description = "赢单率")
     private String percent;
 
+    // TODO @lilleo：这个是不是不用前端新增和修改的时候传递，交给顺序计算出来，存储起来就好了；
     @Schema(description = "排序")
     private Integer sort;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/type/CrmBusinessStatusTypePageReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.type;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import io.swagger.v3.oas.annotations.media.Schema;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/type/CrmBusinessStatusTypeQueryVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.type;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/business/vo/type/CrmBusinessStatusTypeSaveReqVO.java
Patch:
@@ -1,5 +1,6 @@
-package cn.iocoder.yudao.module.crm.controller.admin.business.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.business.vo.type;
 
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.status.CrmBusinessStatusSaveReqVO;
 import com.google.common.collect.Lists;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
@@ -21,6 +22,7 @@ public class CrmBusinessStatusTypeSaveReqVO {
     @Schema(description = "使用的部门编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<Long> deptIds = Lists.newArrayList();
 
+    // TODO @ljlleo VO 里面，我们不使用默认值哈。这里 Lists.newArrayList() 看看怎么去掉。上面 deptIds 也是类似噢
     @Schema(description = "商机状态集合", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<CrmBusinessStatusSaveReqVO> statusList = Lists.newArrayList();
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/limitconfig/CrmCustomerLimitConfigBaseVO.java
Patch:
@@ -1,12 +1,11 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.limitconfig;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
 import javax.validation.constraints.NotNull;
 import java.util.List;
 
-// TODO @wanwan：vo 下，可以新建一个 limitconfig，放它的 vo；
 /**
  * 客户限制配置 Base VO，提供给添加、修改、详细的子 VO 使用
  * 如果子 VO 存在差异的字段，请不要添加到这里，影响 Swagger 文档生成

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/limitconfig/CrmCustomerLimitConfigCreateReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.limitconfig;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/limitconfig/CrmCustomerLimitConfigPageReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.limitconfig;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import io.swagger.v3.oas.annotations.media.Schema;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/limitconfig/CrmCustomerLimitConfigUpdateReqVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.limitconfig;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/poolconfig/CrmCustomerPoolConfigBaseVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.poolconfig;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
@@ -12,7 +12,6 @@
 @Data
 public class CrmCustomerPoolConfigBaseVO {
 
-    // TODO @wanwan：参数校验
     @Schema(description = "是否启用客户公海", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否启用客户公海不能为空")
     private Boolean enabled;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/controller/admin/customer/vo/poolconfig/CrmCustomerPoolConfigRespVO.java
Patch:
@@ -1,11 +1,10 @@
-package cn.iocoder.yudao.module.crm.controller.admin.customer.vo;
+package cn.iocoder.yudao.module.crm.controller.admin.customer.vo.poolconfig;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-// TODO @wanwan：vo 下，可以新建一个 poolconfig，放它的 vo；
 @Schema(description = "管理后台 - CRM 客户公海规则 Response VO")
 @Data
 @EqualsAndHashCode(callSuper = true)

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/convert/businessstatus/CrmBusinessStatusConvert.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.crm.convert.businessstatus;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessStatusRespVO;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessStatusSaveReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.status.CrmBusinessStatusRespVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.status.CrmBusinessStatusSaveReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessStatusDO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/convert/customer/CrmCustomerConvert.java
Patch:
@@ -3,6 +3,8 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.ip.core.utils.AreaUtils;
 import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.*;
+import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.poolconfig.CrmCustomerPoolConfigRespVO;
+import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.poolconfig.CrmCustomerPoolConfigSaveReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerDO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerPoolConfigDO;
 import cn.iocoder.yudao.module.crm.service.permission.bo.CrmPermissionTransferReqBO;
@@ -78,6 +80,6 @@ default PageResult<CrmCustomerRespVO> convertPage(PageResult<CrmCustomerDO> page
 
     CrmCustomerPoolConfigRespVO convert(CrmCustomerPoolConfigDO customerPoolConfig);
 
-    CrmCustomerPoolConfigDO convert(CrmCustomerPoolConfigUpdateReqVO updateReqVO);
+    CrmCustomerPoolConfigDO convert(CrmCustomerPoolConfigSaveReqVO updateReqVO);
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/dataobject/business/CrmBusinessDO.java
Patch:
@@ -69,8 +69,7 @@ public class CrmBusinessDO extends BaseDO {
      */
     private Integer discountPercent;
     /**
-     * 产品总金额
-     *
+     * 产品总金额，单位：分
      */
     private Integer productPrice;
     /**

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/dataobject/business/CrmBusinessStatusTypeDO.java
Patch:
@@ -41,6 +41,8 @@ public class CrmBusinessStatusTypeDO extends BaseDO {
     private List<Long> deptIds;
     /**
      * 开启状态
+     *
+     * TODO 改成 Integer，关联 CommonStatus
      */
     private Boolean status;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/business/CrmBusinessMapper.java
Patch:
@@ -3,8 +3,8 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessExportReqVO;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessPageReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.CrmBusinessExportReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.CrmBusinessPageReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessDO;
 import org.apache.ibatis.annotations.Mapper;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/business/CrmBusinessStatusTypeMapper.java
Patch:
@@ -3,8 +3,8 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessStatusTypePageReqVO;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessStatusTypeQueryVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.type.CrmBusinessStatusTypePageReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.type.CrmBusinessStatusTypeQueryVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessStatusTypeDO;
 import org.apache.ibatis.annotations.Mapper;
 

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/dal/mysql/customerlimitconfig/CrmCustomerLimitConfigMapper.java
Patch:
@@ -3,8 +3,8 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
-import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.CrmCustomerLimitConfigPageReqVO;
-import cn.iocoder.yudao.module.crm.dal.dataobject.customerlimitconfig.CrmCustomerLimitConfigDO;
+import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.limitconfig.CrmCustomerLimitConfigPageReqVO;
+import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerLimitConfigDO;
 import org.apache.ibatis.annotations.Mapper;
 
 /**

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/business/CrmBusinessService.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.crm.service.business;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.*;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.*;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessDO;
 
 import javax.validation.Valid;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/business/CrmBusinessServiceImpl.java
Patch:
@@ -3,7 +3,7 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.collection.ListUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.*;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.*;
 import cn.iocoder.yudao.module.crm.convert.business.CrmBusinessConvert;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessDO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.permission.CrmPermissionDO;

File: yudao-module-crm/yudao-module-crm-biz/src/main/java/cn/iocoder/yudao/module/crm/service/customer/CrmCustomerPoolConfigService.java
Patch:
@@ -1,6 +1,6 @@
 package cn.iocoder.yudao.module.crm.service.customer;
 
-import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.CrmCustomerPoolConfigUpdateReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.customer.vo.poolconfig.CrmCustomerPoolConfigSaveReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.customer.CrmCustomerPoolConfigDO;
 
 import javax.validation.Valid;
@@ -24,6 +24,6 @@ public interface CrmCustomerPoolConfigService {
      *
      * @param saveReqVO 更新信息
      */
-    void updateCustomerPoolConfig(@Valid CrmCustomerPoolConfigUpdateReqVO saveReqVO);
+    void saveCustomerPoolConfig(@Valid CrmCustomerPoolConfigSaveReqVO saveReqVO);
 
 }

File: yudao-module-crm/yudao-module-crm-biz/src/test/java/cn/iocoder/yudao/module/crm/service/business/CrmBusinessServiceImplTest.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.crm.service.business;
 
 import cn.iocoder.yudao.framework.test.core.ut.BaseDbUnitTest;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessCreateReqVO;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessExportReqVO;
-import cn.iocoder.yudao.module.crm.controller.admin.business.vo.CrmBusinessUpdateReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.CrmBusinessCreateReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.CrmBusinessExportReqVO;
+import cn.iocoder.yudao.module.crm.controller.admin.business.vo.business.CrmBusinessUpdateReqVO;
 import cn.iocoder.yudao.module.crm.dal.dataobject.business.CrmBusinessDO;
 import cn.iocoder.yudao.module.crm.dal.mysql.business.CrmBusinessMapper;
 import org.junit.jupiter.api.Disabled;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java
Patch:
@@ -117,7 +117,7 @@ private void updateUserPost(UserUpdateReqVO reqVO, AdminUserDO updateObj) {
         Long userId = reqVO.getId();
         Set<Long> dbPostIds = convertSet(userPostMapper.selectListByUserId(userId), UserPostDO::getPostId);
         // 计算新增和删除的岗位编号
-        Set<Long> postIds = updateObj.getPostIds();
+        Set<Long> postIds = CollUtil.emptyIfNull(updateObj.getPostIds());
         Collection<Long> createPostIds = CollUtil.subtract(postIds, dbPostIds);
         Collection<Long> deletePostIds = CollUtil.subtract(dbPostIds, postIds);
         // 执行新增和删除。对于已经授权的菜单，不用做任何处理

File: yudao-module-infra/yudao-module-infra-api/src/main/java/cn/iocoder/yudao/module/infra/enums/ErrorCodeConstants.java
Patch:
@@ -43,9 +43,6 @@ public interface ErrorCodeConstants {
     ErrorCode CODEGEN_TABLE_INFO_TABLE_COMMENT_IS_NULL = new ErrorCode(1_003_001_008, "数据库的表注释未填写");
     ErrorCode CODEGEN_TABLE_INFO_COLUMN_COMMENT_IS_NULL = new ErrorCode(1_003_001_009, "数据库的表字段({})注释未填写");
 
-    // ========== 字典类型（测试）1-001-005-000 ==========
-    ErrorCode TEST_DEMO_NOT_EXISTS = new ErrorCode(1_001_005_000, "测试示例不存在");
-
     // ========== 文件配置 1-001-006-000 ==========
     ErrorCode FILE_CONFIG_NOT_EXISTS = new ErrorCode(1_001_006_000, "文件配置不存在");
     ErrorCode FILE_CONFIG_DELETE_FAIL_MASTER = new ErrorCode(1_001_006_001, "该文件配置不允许删除，原因：它是主配置，删除会导致无法上传文件");
@@ -57,4 +54,6 @@ public interface ErrorCodeConstants {
     // ========== 数据源配置 1-001-107-000 ==========
     ErrorCode DEMO_STUDENT_NOT_EXISTS = new ErrorCode(1_001_107_000, "学生不存在");
 
+    // ========== 学生（CodegenTemplateTypeEnum.ONE 示例） 1-001-200-000 ==========
+    ErrorCode DEMO01_STUDENT_NOT_EXISTS = new ErrorCode(1_001_200_000, "学生不存在");
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/enums/codegen/CodegenColumnHtmlTypeEnum.java
Patch:
@@ -16,8 +16,8 @@ public enum CodegenColumnHtmlTypeEnum {
     RADIO("radio"), // 单选框
     CHECKBOX("checkbox"), // 复选框
     DATETIME("datetime"), // 日期控件
-    UPLOAD_IMAGE("upload_image"), // 上传图片
-    UPLOAD_FILE("upload_file"), // 上传文件
+    IMAGE_UPLOAD("imageUpload"), // 上传图片
+    FILE_UPLOAD("fileUpload"), // 上传文件
     EDITOR("editor"), // 富文本控件
     ;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenBuilder.java
Patch:
@@ -49,8 +49,8 @@ public class CodegenBuilder {
                     .put("status", CodegenColumnHtmlTypeEnum.RADIO)
                     .put("sex", CodegenColumnHtmlTypeEnum.RADIO)
                     .put("type", CodegenColumnHtmlTypeEnum.SELECT)
-                    .put("image", CodegenColumnHtmlTypeEnum.UPLOAD_IMAGE)
-                    .put("file", CodegenColumnHtmlTypeEnum.UPLOAD_FILE)
+                    .put("image", CodegenColumnHtmlTypeEnum.IMAGE_UPLOAD)
+                    .put("file", CodegenColumnHtmlTypeEnum.FILE_UPLOAD)
                     .put("content", CodegenColumnHtmlTypeEnum.EDITOR)
                     .put("description", CodegenColumnHtmlTypeEnum.EDITOR)
                     .put("demo", CodegenColumnHtmlTypeEnum.EDITOR)

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/package-info.java
Patch:
@@ -1,7 +1,6 @@
 /**
  * 基础的通用类，和框架无关
  *
- * sdadsdsd
  * 例如说，CommonResult 为通用返回
  */
 package cn.iocoder.yudao.framework.common;

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/app/wallet/vo/recharge/AppPayWalletRechargeCreateReqVO.java
Patch:
@@ -19,7 +19,7 @@ public class AppPayWalletRechargeCreateReqVO {
     private Long packageId;
 
     @AssertTrue(message = "充值金额和充钱套餐不能同时为空")
-    public boolean validatePayPriceAndPackageId() {
+    public boolean isPayPriceAndPackageIdValid() {
         return Objects.nonNull(payPrice) || Objects.nonNull(packageId);
     }
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/app/wallet/vo/recharge/AppPayWalletRechargeCreateReqVO.java
Patch:
@@ -19,7 +19,7 @@ public class AppPayWalletRechargeCreateReqVO {
     private Long packageId;
 
     @AssertTrue(message = "充值金额和充钱套餐不能同时为空")
-    public boolean validatePayPriceAndPackageId() {
+    public boolean isPayPriceAndPackageIdValid() {
         return Objects.nonNull(payPrice) || Objects.nonNull(packageId);
     }
 }

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/ErrorCodeConstants.java
Patch:
@@ -18,6 +18,9 @@ public interface ErrorCodeConstants {
     // ========== 商机管理 1-020-002-000 ==========
     ErrorCode BUSINESS_NOT_EXISTS = new ErrorCode(1_020_002_000, "商机不存在");
 
+    // ========== 联系人管理 1-020-003-000 ==========
+    ErrorCode CONTACT_NOT_EXISTS = new ErrorCode(1_020_003_000, "联系人不存在");
+
     // TODO @liuhongfeng：错误码分段；
     ErrorCode RECEIVABLE_NOT_EXISTS = new ErrorCode(1_030_000_001, "回款管理不存在");
 

File: yudao-module-crm/yudao-module-crm-api/src/main/java/cn/iocoder/yudao/module/crm/enums/ErrorCodeConstants.java
Patch:
@@ -12,6 +12,7 @@ public interface ErrorCodeConstants {
     // ========== 合同管理 1-020-000-000 ==========
     ErrorCode CONTRACT_NOT_EXISTS = new ErrorCode(1_020_000_000, "合同不存在");
 
+    // TODO @wanwan：要单独一个分段噢
     ErrorCode CLUE_NOT_EXISTS = new ErrorCode(1_020_000_001, "线索不存在");
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/mysql/task/BpmTaskExtMapper.java
Patch:
@@ -24,7 +24,7 @@ default List<BpmTaskExtDO> selectListByTaskIds(Collection<String> taskIds) {
     default List<BpmTaskExtDO> selectProcessListByTaskIds(Collection<String> taskIds) {
         return selectList(new LambdaQueryWrapperX<BpmTaskExtDO>()
                 .in(BpmTaskExtDO::getTaskId, taskIds)
-                .in(BpmTaskExtDO::getResult, BpmProcessInstanceResultEnum.CAN_SUB_SIGN_STATUS));
+                .in(BpmTaskExtDO::getResult, BpmProcessInstanceResultEnum.CAN_SUB_SIGN_STATUS_LIST));
     }
 
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/logger/ApiAccessLogService.java
Patch:
@@ -41,7 +41,8 @@ public interface ApiAccessLogService {
     /**
      * 清理 @param accessLogJobDay 天的访问日志
      *
-     * @param accessLogJobDay 超过多少天就进行清理
+     * @param accessLogExceedDay 超过多少天就进行清理
+     * @param deleteLimit 清理的间隔条数
      */
-    void jobCleanAccessLog(Integer accessLogJobDay);
+    Integer jobCleanAccessLog(Integer accessLogExceedDay,Integer deleteLimit);
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/logger/ApiErrorLogService.java
Patch:
@@ -50,7 +50,8 @@ public interface ApiErrorLogService {
     /**
      * 清理 @param errorLogJobDay 天的访问日志
      *
-     * @param errorLogJobDay 超过多少天就进行清理
+     * @param errorLogExceedDay 超过多少天就进行清理
+     * @param deleteLimit 清理的间隔条数
      */
-    void jobCleanErrorLog(Integer errorLogJobDay);
+    Integer jobCleanErrorLog(Integer errorLogExceedDay,Integer deleteLimit);
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/json/JsonUtils.java
Patch:
@@ -10,7 +10,6 @@
 import com.fasterxml.jackson.databind.SerializationFeature;
 import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 import lombok.SneakyThrows;
-import lombok.experimental.UtilityClass;
 import lombok.extern.slf4j.Slf4j;
 
 import java.io.IOException;
@@ -23,7 +22,6 @@
  *
  * @author 芋道源码
  */
-@UtilityClass
 @Slf4j
 public class JsonUtils {
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/transfer/PayTransferUnifiedReqDTO.java
Patch:
@@ -58,7 +58,6 @@ public class PayTransferUnifiedReqDTO {
 
     /**
      * 支付渠道的额外参数
-     *
      */
     private Map<String, String> channelExtras;
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/AbstractPayClient.java
Patch:
@@ -50,7 +50,7 @@ public AbstractPayClient(Long channelId, String channelCode, Config config) {
      */
     public final void init() {
         doInit();
-        log.info("[init][客户端({}) 初始化完成]", getId());
+        log.debug("[init][客户端({}) 初始化完成]", getId());
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/alipay/AlipayTransferClient.java
Patch:
@@ -51,7 +51,7 @@ protected PayTransferRespDTO doUnifiedTransfer(PayTransferUnifiedReqDTO reqDTO)
         model.setProductCode("TRANS_ACCOUNT_NO_PWD");    // 销售产品码。单笔无密转账固定为 TRANS_ACCOUNT_NO_PWD
         model.setBizScene("DIRECT_TRANSFER");           // 业务场景 单笔无密转账固定为 DIRECT_TRANSFER。
         model.setBusinessParams(JsonUtils.toJsonString(reqDTO.getChannelExtras()));
-        PayTransferTypeEnum transferType = PayTransferTypeEnum.valueOf(reqDTO.getType());
+        PayTransferTypeEnum transferType = PayTransferTypeEnum.ofType(reqDTO.getType());
         switch(transferType){
             case WX_BALANCE :
             case WALLET_BALANCE : {
@@ -84,7 +84,7 @@ protected PayTransferRespDTO doUnifiedTransfer(PayTransferUnifiedReqDTO reqDTO)
                     if (ObjectUtils.equalsAny(response.getSubCode(), "SYSTEM_ERROR", "ACQ.SYSTEM_ERROR")) {
                         return PayTransferRespDTO.waitingOf(null, reqDTO.getOutTransferNo(), response);
                     }
-                    return PayTransferRespDTO.failureOf(response.getSubCode(), response.getSubMsg(),
+                    return PayTransferRespDTO.closedOf(response.getSubCode(), response.getSubMsg(),
                             reqDTO.getOutTransferNo(), response);
                 }
                 return  PayTransferRespDTO.successOf(response.getOrderId(), parseTime(response.getTransDate()),

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/AbstractSmsClient.java
Patch:
@@ -40,7 +40,7 @@ public AbstractSmsClient(SmsChannelProperties properties, SmsCodeMapping codeMap
      */
     public final void init() {
         doInit();
-        log.info("[init][配置({}) 初始化完成]", properties);
+        log.debug("[init][配置({}) 初始化完成]", properties);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/job/TenantJob.java
Patch:
@@ -8,7 +8,7 @@
 /**
  * 多租户 Job 注解
  */
-@Target({ElementType.TYPE})
+@Target({ElementType.METHOD})
 @Retention(RetentionPolicy.RUNTIME)
 public @interface TenantJob {
 }

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/redis/TenantRedisCacheManager.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.framework.tenant.core.redis;
 
+import cn.iocoder.yudao.framework.redis.core.TimeoutRedisCacheManager;
 import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.cache.Cache;
@@ -15,7 +16,7 @@
  * @author airhead
  */
 @Slf4j
-public class TenantRedisCacheManager extends RedisCacheManager {
+public class TenantRedisCacheManager extends TimeoutRedisCacheManager {
 
     public TenantRedisCacheManager(RedisCacheWriter cacheWriter,
                                    RedisCacheConfiguration defaultCacheConfiguration) {

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/test/java/cn/iocoder/yudao/framework/tenant/core/job/TestJob.java
Patch:
@@ -9,12 +9,12 @@
 import java.util.concurrent.CopyOnWriteArrayList;
 
 @Component
-@TenantJob // 标记多租户
 public class TestJob implements JobHandler {
 
     private final List<Long> tenantIds = new CopyOnWriteArrayList<>();
 
     @Override
+    @TenantJob // 标记多租户
     public String execute(String param) throws Exception {
         tenantIds.add(TenantContextHolder.getTenantId());
         return "success";
@@ -24,4 +24,5 @@ public List<Long> getTenantIds() {
         CollUtil.sort(tenantIds, Long::compareTo);
         return tenantIds;
     }
+
 }

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/AbstractFileClient.java
Patch:
@@ -30,7 +30,7 @@ public AbstractFileClient(Long id, Config config) {
      */
     public final void init() {
         doInit();
-        log.info("[init][配置({}) 初始化完成]", config);
+        log.debug("[init][配置({}) 初始化完成]", config);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java
Patch:
@@ -7,7 +7,6 @@
 import com.baomidou.mybatisplus.core.conditions.Wrapper;
 import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
-import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.toolkit.support.SFunction;
 import com.baomidou.mybatisplus.extension.toolkit.Db;

File: yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/lock4j/config/YudaoLock4jConfiguration.java
Patch:
@@ -3,9 +3,11 @@
 import cn.iocoder.yudao.framework.lock4j.core.DefaultLockFailureStrategy;
 import com.baomidou.lock.spring.boot.autoconfigure.LockAutoConfiguration;
 import org.springframework.boot.autoconfigure.AutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.context.annotation.Bean;
 
 @AutoConfiguration(before = LockAutoConfiguration.class)
+@ConditionalOnClass(name = "com.baomidou.lock.annotation.Lock4j")
 public class YudaoLock4jConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/core/TimeoutRedisCacheManager.java
Patch:
@@ -45,7 +45,7 @@ protected RedisCache createRedisCache(String name, RedisCacheConfiguration cache
             Duration duration = parseDuration(names[1]);
             cacheConfig = cacheConfig.entryTtl(duration);
         }
-        return super.createRedisCache(names[0], cacheConfig);
+        return super.createRedisCache(name, cacheConfig);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/xss/config/YudaoXssAutoConfiguration.java
Patch:
@@ -21,6 +21,7 @@
 
 @AutoConfiguration
 @EnableConfigurationProperties(XssProperties.class)
+@ConditionalOnProperty(prefix = "yudao.xss", name = "enable", havingValue = "true", matchIfMissing = true) // 设置为 false 时，禁用
 public class YudaoXssAutoConfiguration implements WebMvcConfigurer {
 
     /**

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/task/BpmProcessInstanceResultEnum.java
Patch:
@@ -20,7 +20,8 @@ public enum BpmProcessInstanceResultEnum {
 
     // ========== 流程任务独有的状态 ==========
 
-    BACK(5, "退回/驳回");
+    BACK(5, "驳回"), // 退回
+    DELEGATE(6, "委派");
 
     /**
      * 结果

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.PageUtils;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionListReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageItemRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageReqVO;
@@ -200,7 +200,7 @@ public boolean isProcessDefinitionEquals(@Valid BpmProcessDefinitionCreateReqDTO
         BpmnModel newModel = buildBpmnModel(createReqDTO.getBpmnBytes());
         BpmnModel oldModel = getBpmnModel(oldProcessDefinition.getId());
         // 对比字节变化
-        if (!FlowableUtils.equals(oldModel, newModel)) {
+        if (!BpmnModelUtils.equals(oldModel, newModel)) {
             return false;
         }
         // 最终发现都一致，则返回 true

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmTaskAssignRuleServiceImpl.java
Patch:
@@ -7,7 +7,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
 import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleCreateReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleUpdateReqVO;
@@ -114,7 +114,7 @@ public List<BpmTaskAssignRuleRespVO> getTaskAssignRuleList(String modelId, Strin
             return Collections.emptyList();
         }
         // 获得用户任务，只有用户任务才可以设置分配规则
-        List<UserTask> userTasks = FlowableUtils.getBpmnModelElements(model, UserTask.class);
+        List<UserTask> userTasks = BpmnModelUtils.getBpmnModelElements(model, UserTask.class);
         if (CollUtil.isEmpty(userTasks)) {
             return Collections.emptyList();
         }

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImplTest.java
Patch:
@@ -139,4 +139,5 @@ public void testGetFileContent() throws Exception {
         // 断言
         assertSame(result, content);
     }
+
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/spu/AppProductSpuController.java
Patch:
@@ -140,4 +140,5 @@ public Integer calculateVipPrice(Integer price, MemberLevelRespDTO memberLevel)
         return price - newPrice;
     }
 
+    // TODO 芋艿：商品的浏览记录；
 }

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/reward/dto/RewardActivityMatchRespDTO.java
Patch:
@@ -68,7 +68,7 @@ public static class Rule {
          */
         private List<Long> couponIds;
         /**
-         * 赠送的优惠卷数量的数组
+         * 赠送的优惠券数量的数组
          */
         private List<Integer> couponCounts;
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/common/PromotionProductScopeEnum.java
Patch:
@@ -15,9 +15,9 @@
 @AllArgsConstructor
 public enum PromotionProductScopeEnum implements IntArrayValuable {
 
-    ALL(1, "通用卷"), // 全部商品
-    SPU(2, "商品卷"), // 指定商品
-    CATEGORY(3, "品类卷"), // 指定商品
+    ALL(1, "通用券"), // 全部商品
+    SPU(2, "商品券"), // 指定商品
+    CATEGORY(3, "品类券"), // 指定品类
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(PromotionProductScopeEnum::getScope).toArray();

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/reward/vo/RewardActivityBaseVO.java
Patch:
@@ -84,7 +84,7 @@ public static class Rule {
         @Schema(description = "赠送的优惠劵编号的数组", example = "1,2,3")
         private List<Long> couponIds;
 
-        @Schema(description = "赠送的优惠卷数量的数组", example = "1,2,3")
+        @Schema(description = "赠送的优惠券数量的数组", example = "1,2,3")
         private List<Integer> couponCounts;
 
         @AssertTrue(message = "优惠劵和数量必须一一对应")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/help/AppBargainHelpCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainHelpCreateReqVO {
 
-    @Schema(description = "砍价记录编号", required = true, example = "1024")
+    @Schema(description = "砍价记录编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价记录编号不能为空")
     private Long recordId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/record/AppBargainRecordCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainRecordCreateReqVO {
 
-    @Schema(description = "砍价活动编号", required = true, example = "1024")
+    @Schema(description = "砍价活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价活动编号不能为空")
     private Long activityId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/coupon/AppCouponMatchReqVO.java
Patch:
@@ -15,15 +15,15 @@ public class AppCouponMatchReqVO {
     @NotNull(message = "商品金额不能为空")
     private Integer price;
 
-    @Schema(description = "商品 SPU 编号的数组", required = true, example = "[1, 2]")
+    @Schema(description = "商品 SPU 编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2]")
     @NotEmpty(message = "商品 SPU 编号不能为空")
     private List<Long> spuIds;
 
-    @Schema(description = "商品 SKU 编号的数组", required = true, example = "[1, 2]")
+    @Schema(description = "商品 SKU 编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2]")
     @NotEmpty(message = "商品 SKU 编号不能为空")
     private List<Long> skuIds;
 
-    @Schema(description = "分类编号的数组", required = true, example = "[10, 20]")
+    @Schema(description = "分类编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[10, 20]")
     @NotEmpty(message = "分类编号不能为空")
     private List<Long> categoryIds;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/coupon/AppCouponPageReqVO.java
Patch:
@@ -1,6 +1,8 @@
 package cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
+import cn.iocoder.yudao.framework.common.validation.InEnum;
+import cn.iocoder.yudao.module.promotion.enums.coupon.CouponStatusEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -13,6 +15,7 @@
 public class AppCouponPageReqVO extends PageParam {
 
     @Schema(description = "优惠劵状态", example = "1")
+    @InEnum(value = CouponStatusEnum.class, message = "优惠劵状态，必须是 {value}")
     private Integer status;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/reward/RewardActivityDO.java
Patch:
@@ -110,7 +110,7 @@ public static class Rule implements Serializable {
          */
         private List<Long> couponIds;
         /**
-         * 赠送的优惠卷数量的数组
+         * 赠送的优惠券数量的数组
          */
         private List<Integer> couponCounts;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/coupon/CouponTemplateMapper.java
Patch:
@@ -39,6 +39,9 @@ default PageResult<CouponTemplateDO> selectPage(CouponTemplatePageReqVO reqVO) {
                 .eqIfPresent(CouponTemplateDO::getStatus, reqVO.getStatus())
                 .eqIfPresent(CouponTemplateDO::getDiscountType, reqVO.getDiscountType())
                 .betweenIfPresent(CouponTemplateDO::getCreateTime, reqVO.getCreateTime())
+                .eqIfPresent(CouponTemplateDO::getProductScope, reqVO.getProductScope())
+                .and(reqVO.getProductScopeValue() != null, w -> w.apply("FIND_IN_SET({0}, product_scope_values)",
+                        reqVO.getProductScopeValue()))
                 .and(canTakeConsumer != null, canTakeConsumer)
                 .orderByDesc(CouponTemplateDO::getId));
     }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponTemplateServiceImpl.java
Patch:
@@ -29,6 +29,7 @@ public class CouponTemplateServiceImpl implements CouponTemplateService {
     @Resource
     private CouponTemplateMapper couponTemplateMapper;
 
+    // TODO @疯狂：新增/修改时，需要校验对应的商品、分类是否存在
     @Override
     public Long createCouponTemplate(CouponTemplateCreateReqVO createReqVO) {
         // 插入

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/controller/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.statistics.controller;

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/brokerage/BrokerageBindModeEnum.java
Patch:
@@ -18,15 +18,15 @@ public enum BrokerageBindModeEnum implements IntArrayValuable {
     /**
      * 只要用户没有推广人，随时都可以绑定分销关系
      */
-    ANYTIME(1, "没有推广人"),
+    ANYTIME(1, "首次绑定"),
     /**
      * 仅新用户注册时才能绑定推广关系
      */
-    REGISTER(2, "新用户"),
+    REGISTER(2, "注册绑定"),
     /**
      * 每次扫码都覆盖
      */
-    OVERRIDE(3, "扫码覆盖"),
+    OVERRIDE(3, "覆盖绑定"),
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(BrokerageBindModeEnum::getMode).toArray();

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/brokerage/BrokerageRecordBizTypeEnum.java
Patch:
@@ -17,7 +17,7 @@ public enum BrokerageRecordBizTypeEnum implements IntArrayValuable {
 
     ORDER(1, "获得推广佣金", "获得推广佣金 {}", true),
     WITHDRAW(2, "提现申请", "提现申请扣除佣金 {}", false),
-    WITHDRAW_REJECT(3, "提现申请驳回", "提现申请驳回返还佣金 {}", true),
+    WITHDRAW_REJECT(3, "提现申请驳回", "提现申请驳回，返还佣金 {}", true),
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(BrokerageRecordBizTypeEnum::getType).toArray();

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/brokerage/BrokerageWithdrawStatusEnum.java
Patch:
@@ -6,6 +6,7 @@
 
 import java.util.Arrays;
 
+// TODO 芋艿：提现的打通，在纠结下；
 /**
  * 佣金提现状态枚举
  *

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/order/TradeOrderCancelTypeEnum.java
Patch:
@@ -17,8 +17,7 @@ public enum TradeOrderCancelTypeEnum implements IntArrayValuable {
 
     PAY_TIMEOUT(10, "超时未支付"),
     AFTER_SALE_CLOSE(20, "退款关闭"),
-    MEMBER_CANCEL(30, "买家取消"),
-    PAY_ON_DELIVERY(40, "已通过货到付款交易"),; // TODO 芋艿：这个类型，是不是可以去掉
+    MEMBER_CANCEL(30, "买家取消");
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(TradeOrderCancelTypeEnum::getType).toArray();
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/TradeOrderController.java
Patch:
@@ -73,7 +73,7 @@ public CommonResult<TradeOrderDetailRespVO> getOrderDetail(@RequestParam("id") L
 
         // 查询订单项
         List<TradeOrderItemDO> orderItems = tradeOrderQueryService.getOrderItemListByOrderId(id);
-        // orderLog
+        // TODO @puhui999：orderLog
         // 拼接数据
         MemberUserRespDTO user = memberUserApi.getUser(order.getUserId());
         return success(TradeOrderConvert.INSTANCE.convert(order, orderItems, user));
@@ -120,4 +120,6 @@ public CommonResult<Boolean> updateOrderAddress(@RequestBody TradeOrderUpdateAdd
         return success(true);
     }
 
+    // TODO ：核销逻辑
+
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/brokerage/AppBrokerageRecordController.java
Patch:
@@ -45,7 +45,7 @@ public CommonResult<PageResult<AppBrokerageRecordRespVO>> getBrokerageRecordPage
     @GetMapping("/get-product-brokerage-price")
     @Operation(summary = "获得商品的分销金额")
     public CommonResult<AppBrokerageProductPriceRespVO> getProductBrokeragePrice(@RequestParam("spuId") Long spuId) {
-        return success(brokerageRecordService.calculateProductBrokeragePrice(spuId, getLoginUserId()));
+        return success(brokerageRecordService.calculateProductBrokeragePrice(getLoginUserId(), spuId));
     }
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/config/AppDeliveryConfigRespVO.java
Patch:
@@ -8,10 +8,10 @@
 @Data
 public class AppDeliveryConfigRespVO {
 
-    @Schema(description = "腾讯地图 KEY", required = true, example = "123456")
+    @Schema(description = "腾讯地图 KEY", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     private String tencentLbsKey;
 
-    @Schema(description = "是否开启自提", required = true, example = "true")
+    @Schema(description = "是否开启自提", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     private Boolean pickUpEnable;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/express/AppDeliveryExpressRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class AppDeliveryExpressRespVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "门店名称", required = true, example = "顺丰")
+    @Schema(description = "门店名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "顺丰")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementReqVO.java
Patch:
@@ -25,12 +25,12 @@ public class AppTradeOrderSettlementReqVO {
     @Schema(description = "优惠劵编号", example = "1024")
     private Long couponId;
 
-    @Schema(description = "是否使用积分", required = true, example = "true")
+    @Schema(description = "是否使用积分", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否使用积分不能为空")
     private Boolean pointStatus;
 
     // ========== 配送相关相关字段 ==========
-    @Schema(description = "配送方式", example = "1")
+    @Schema(description = "配送方式", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(value = DeliveryTypeEnum.class, message = "配送方式不正确")
     private Integer deliveryType;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @Data
 public class AppTradeOrderSettlementRespVO {
 
-    @Schema(description = "交易类型", required = true, example = "1") // 对应 TradeOrderTypeEnum 枚举
+    @Schema(description = "交易类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1") // 对应 TradeOrderTypeEnum 枚举
     private Integer type = 1; // TODO 芋艿：改成计算
 
     @Schema(description = "购物项数组", requiredMode = Schema.RequiredMode.REQUIRED)
@@ -37,6 +37,8 @@ public static class Item {
 
         // ========== SPU 信息 ==========
 
+        @Schema(description = "品类编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
+        private Long categoryId;
         @Schema(description = "SPU 编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
         private Long spuId;
         @Schema(description = "SPU 名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "Apple iPhone 12")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -90,7 +90,7 @@ default List<TradeOrderItemDO> convertList(TradeOrderDO tradeOrderDO, TradePrice
 
     default ProductSkuUpdateStockReqDTO convert(List<TradeOrderItemDO> list) {
         List<ProductSkuUpdateStockReqDTO.Item> items = CollectionUtils.convertList(list, item ->
-                new ProductSkuUpdateStockReqDTO.Item().setId(item.getSkuId()).setIncrCount(-item.getCount()));
+                new ProductSkuUpdateStockReqDTO.Item().setId(item.getSkuId()).setIncrCount(item.getCount()));
         return new ProductSkuUpdateStockReqDTO(items);
     }
     default ProductSkuUpdateStockReqDTO convertNegative(List<AppTradeOrderSettlementReqVO.Item> list) {
@@ -110,7 +110,7 @@ default PayOrderCreateReqDTO convert(TradeOrderDO order, List<TradeOrderItemDO>
         createReqDTO.setSubject(subject);
         createReqDTO.setBody(subject); // TODO 芋艿：临时写死
         // 订单相关字段
-        createReqDTO.setPrice(order.getPayPrice()).setExpireTime(addTime(orderProperties.getExpireTime()));
+        createReqDTO.setPrice(order.getPayPrice()).setExpireTime(addTime(orderProperties.getPayExpireTime()));
         return createReqDTO;
     }
 
@@ -180,7 +180,7 @@ default AppTradeOrderDetailRespVO convert02(TradeOrderDO order, List<TradeOrderI
                                                 TradeOrderProperties tradeOrderProperties,
                                                 DeliveryExpressDO express) {
         AppTradeOrderDetailRespVO orderVO = convert3(order, orderItems);
-        orderVO.setPayExpireTime(addTime(tradeOrderProperties.getExpireTime()));
+        orderVO.setPayExpireTime(addTime(tradeOrderProperties.getPayExpireTime()));
         if (StrUtil.isNotEmpty(order.getPayChannelCode())) {
             orderVO.setPayChannelName(DictFrameworkUtils.getDictDataLabel(DictTypeConstants.CHANNEL_CODE, order.getPayChannelCode()));
         }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/dataobject/order/TradeOrderDO.java
Patch:
@@ -105,6 +105,8 @@ public class TradeOrderDO extends BaseDO {
      */
     private Boolean commentStatus;
 
+    // TODO @疯狂：加一个推广人编号；
+
     // ========== 价格 + 支付基本信息 ==========
 
     // 价格文档 - 淘宝：https://open.taobao.com/docV3.htm?docId=108471&docType=1

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/framework/aftersalelog/core/annotations/AfterSaleLog.java
Patch:
@@ -21,7 +21,8 @@
     /**
      * 售后 ID
      */
-    String id();
+    @Deprecated
+    String id() default "";
 
     /**
      * 操作类型
@@ -31,6 +32,7 @@
     /**
      * 日志内容
      */
+    @Deprecated
     String content() default "";
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/framework/aftersalelog/core/aop/AfterSaleLogAspect.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.iocoder.yudao.framework.common.util.spring.SpringExpressionUtils;
-import cn.iocoder.yudao.framework.operatelog.core.service.OperateLog;
 import cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.annotations.AfterSaleLog;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogCreateReqDTO;
@@ -96,7 +95,7 @@ public static Map<String, String> spelFormat(JoinPoint joinPoint, Object info) {
         String id = MapUtil.getStr(spelMap, afterSaleLogPoint.id());
         result.put(ID, id);
         // 操作类型
-        String operateType = afterSaleLogPoint.operateType().description();
+        String operateType = afterSaleLogPoint.operateType().getContent();
         result.put(OPERATE_TYPE, operateType);
         // 日志内容
         String content = MapUtil.getStr(spelMap, afterSaleLogPoint.content());

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/job/brokerage/BrokerageRecordUnfreezeJob.java
Patch:
@@ -14,13 +14,13 @@
  * @author owen
  */
 @Component
-@TenantJob
 public class BrokerageRecordUnfreezeJob implements JobHandler {
 
     @Resource
     private BrokerageRecordService brokerageRecordService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = brokerageRecordService.unfreezeRecord();
         return StrUtil.format("解冻佣金 {} 个", count);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/cart/CartServiceImpl.java
Patch:
@@ -26,7 +26,7 @@
 /**
  * 购物车 Service 实现类
  *
- * // TODO 芋艿：未来优化：购物车的价格计算，支持营销信息；目前不支持的原因，前端界面需要前端 pr 支持下；
+ * // TODO 芋艿：未来优化：购物车的价格计算，支持营销信息；目前不支持的原因，前端界面需要前端 pr 支持下；例如说：会员价格；
  *
  * @author 芋道源码
  */

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradePointGiveCalculator.java
Patch:
@@ -16,6 +16,7 @@
 
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.filterList;
 
+// TODO @疯狂：这个可以搞个单测；
 /**
  * 赠送积分的 {@link TradePriceCalculator} 实现类
  *
@@ -25,6 +26,7 @@
 @Order(TradePriceCalculator.ORDER_POINT_GIVE)
 @Slf4j
 public class TradePointGiveCalculator implements TradePriceCalculator {
+
     @Resource
     private MemberPointApi memberPointApi;
 
@@ -54,9 +56,9 @@ public void calculate(TradePriceCalculateReqBO param, TradePriceCalculateRespBO
             TradePriceCalculateRespBO.OrderItem orderItem = orderItems.get(i);
             // 商品可能赠送了积分，所以这里要加上
             orderItem.setGivePoint(orderItem.getGivePoint() + dividePoints.get(i));
-            TradePriceCalculatorHelper.recountPayPrice(orderItem);
         }
         // 3.3 更新订单赠送积分
         TradePriceCalculatorHelper.recountAllGivePoint(result);
     }
+
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradePriceCalculator.java
Patch:
@@ -21,11 +21,13 @@ public interface TradePriceCalculator {
     /**
      * 快递运费的计算
      *
-     * 放在各种营销活动、优惠劵后面 TODO
+     * 放在各种营销活动、优惠劵后面
      */
     int ORDER_DELIVERY = 50;
     /**
      * 赠送积分，放最后
+     *
+     * 放在 {@link #ORDER_DELIVERY} 后面的原因，是运费也会产生费用，需要赠送对应积分
      */
     int ORDER_POINT_GIVE = 999;
 

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/framework/delivery/core/client/impl/KdNiaoExpressClientIntegrationTest.java
Patch:
@@ -38,7 +38,7 @@ public void init() {
     public void testGetExpressTrackList() {
         ExpressTrackQueryReqDTO reqDTO = new ExpressTrackQueryReqDTO();
         reqDTO.setExpressCode("STO");
-        reqDTO.setLogisticsNo("663220402764314");
+        reqDTO.setLogisticsNo("777168349863987");
         List<ExpressTrackRespDTO> tracks = client.getExpressTrackList(reqDTO);
         System.out.println(JsonUtils.toJsonPrettyString(tracks));
     }

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceTest.java
Patch:
@@ -87,7 +87,7 @@ public class TradeOrderUpdateServiceTest extends BaseDbUnitTest {
     @BeforeEach
     public void setUp() {
         when(tradeOrderProperties.getAppId()).thenReturn(888L);
-        when(tradeOrderProperties.getExpireTime()).thenReturn(Duration.ofDays(1));
+        when(tradeOrderProperties.getPayExpireTime()).thenReturn(Duration.ofDays(1));
     }
 
     @Test
@@ -306,7 +306,7 @@ public void testReceiveOrder() {
         // mock 方法（支付单）
 
         // 调用
-        tradeOrderUpdateService.receiveOrder(userId, id);
+        tradeOrderUpdateService.receiveOrderByMember(userId, id);
         // 断言
         TradeOrderDO dbOrder = tradeOrderMapper.selectById(1L);
         assertEquals(dbOrder.getStatus(), TradeOrderStatusEnum.COMPLETED.getStatus());

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/point/MemberPointApi.java
Patch:
@@ -12,6 +12,7 @@
  */
 public interface MemberPointApi {
 
+    // TODO @疯狂：这个我们要不要搞成通用的会员配置？MemberConfig？
     /**
      * 获得积分配置
      *

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/point/dto/MemberPointConfigRespDTO.java
Patch:
@@ -9,6 +9,7 @@
  */
 @Data
 public class MemberPointConfigRespDTO {
+
     /**
      * 积分抵扣开关
      */
@@ -27,4 +28,5 @@ public class MemberPointConfigRespDTO {
      * 1 元赠送多少分
      */
     private Integer tradeGivePoint;
+
 }

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/user/dto/MemberUserRespDTO.java
Patch:
@@ -51,4 +51,5 @@ public class MemberUserRespDTO {
      * 积分
      */
     private Integer point;
+
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class AppAuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -53,4 +53,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSmsLoginReqVO.java
Patch:
@@ -35,7 +35,7 @@ public class AppAuthSmsLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -55,4 +55,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppAuthSocialLoginReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppSocialUserBindReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -27,4 +27,4 @@ public class AppSocialUserUnbindReqVO {
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -190,7 +190,7 @@ private String encodePassword(String password) {
     @Transactional(rollbackFor = Exception.class)
     public void updateUser(MemberUserUpdateReqVO updateReqVO) {
         // 校验存在
-        MemberUserDO user = validateUserExists(updateReqVO.getId());
+        validateUserExists(updateReqVO.getId());
         // 校验手机唯一
         validateMobileUnique(updateReqVO.getId(), updateReqVO.getMobile());
 
@@ -222,10 +222,10 @@ void validateMobileUnique(Long id, String mobile) {
         }
         // 如果 id 为空，说明不用比较是否为相同 id 的用户
         if (id == null) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
         if (!user.getId().equals(id)) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
     }
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/mysql/channel/PayChannelMapper.java
Patch:
@@ -28,7 +28,4 @@ default List<PayChannelDO> selectListByAppId(Long appId, Integer status) {
                 .eq(PayChannelDO::getStatus, status));
     }
 
-    @Select("SELECT COUNT(*) FROM pay_channel WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
-
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/notify/PayNotifyJob.java
Patch:
@@ -15,14 +15,14 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob // 多租户
 @Slf4j
 public class PayNotifyJob implements JobHandler {
 
     @Resource
     private PayNotifyService payNotifyService;
 
     @Override
+    @TenantJob
     public String execute(String param) throws Exception {
         int notifyCount = payNotifyService.executeNotify();
         return String.format("执行支付通知 %s 个", notifyCount);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/order/PayOrderExpireJob.java
Patch:
@@ -16,13 +16,13 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayOrderExpireJob implements JobHandler {
 
     @Resource
     private PayOrderService orderService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = orderService.expireOrder();
         return StrUtil.format("支付过期 {} 个", count);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/order/PayOrderSyncJob.java
Patch:
@@ -18,7 +18,6 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayOrderSyncJob implements JobHandler {
 
     /**
@@ -34,6 +33,7 @@ public class PayOrderSyncJob implements JobHandler {
     private PayOrderService orderService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         LocalDateTime minCreateTime = LocalDateTime.now().minus(CREATE_TIME_DURATION_BEFORE);
         int count = orderService.syncOrder(minCreateTime);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/refund/PayRefundSyncJob.java
Patch:
@@ -16,13 +16,13 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayRefundSyncJob implements JobHandler {
 
     @Resource
     private PayRefundService refundService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = refundService.syncRefund();
         return StrUtil.format("同步退款订单 {} 个", count);

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -9,7 +9,7 @@
  */
 public interface ErrorCodeConstants {
 
-    // ========== AUTH 模块 1003000000 ==========
-    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1003000000, "GoView 项目不存在");
+    // ========== AUTH 模块 1-003-000-000 ==========
+    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1_003_000_000, "GoView 项目不存在");
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.auth;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
@@ -153,4 +154,4 @@ public CommonResult<AuthLoginRespVO> socialQuickLogin(@RequestBody @Valid AuthSo
         return success(authService.socialLogin(reqVO));
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthLoginReqVO.java
Patch:
@@ -41,7 +41,7 @@ public class AuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -66,4 +66,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/sms/SmsChannelConvert.java
Patch:
@@ -32,8 +32,8 @@ public interface SmsChannelConvert {
 
     PageResult<SmsChannelRespVO> convertPage(PageResult<SmsChannelDO> page);
 
-    List<SmsChannelProperties> convertList02(List<SmsChannelDO> list);
-
     List<SmsChannelSimpleRespVO> convertList03(List<SmsChannelDO> list);
 
+    SmsChannelProperties convert02(SmsChannelDO channel);
+
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/dict/DictDataDO.java
Patch:
@@ -55,7 +55,7 @@ public class DictDataDO extends BaseDO {
     /**
      * css 样式
      */
-    @TableField(updateStrategy = FieldStrategy.IGNORED)
+    @TableField(updateStrategy = FieldStrategy.ALWAYS)
     private String cssClass;
     /**
      * 备注

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/job/DemoJob.java
Patch:
@@ -11,14 +11,14 @@
 import java.util.List;
 
 @Component
-@TenantJob // 标记多租户
 public class DemoJob implements JobHandler {
 
     @Resource
     private AdminUserMapper adminUserMapper;
 
     @Override
-    public String execute(String param) throws Exception {
+    @TenantJob // 标记多租户
+    public String execute(String param) {
         System.out.println("当前租户：" + TenantContextHolder.getTenantId());
         List<AdminUserDO> users = adminUserMapper.selectList();
         return "用户数量：" + users.size();

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/json/JsonUtils.java
Patch:
@@ -10,7 +10,6 @@
 import com.fasterxml.jackson.databind.SerializationFeature;
 import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 import lombok.SneakyThrows;
-import lombok.experimental.UtilityClass;
 import lombok.extern.slf4j.Slf4j;
 
 import java.io.IOException;
@@ -23,7 +22,6 @@
  *
  * @author 芋道源码
  */
-@UtilityClass
 @Slf4j
 public class JsonUtils {
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/AbstractPayClient.java
Patch:
@@ -50,7 +50,7 @@ public AbstractPayClient(Long channelId, String channelCode, Config config) {
      */
     public final void init() {
         doInit();
-        log.info("[init][客户端({}) 初始化完成]", getId());
+        log.debug("[init][客户端({}) 初始化完成]", getId());
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/AbstractSmsClient.java
Patch:
@@ -40,7 +40,7 @@ public AbstractSmsClient(SmsChannelProperties properties, SmsCodeMapping codeMap
      */
     public final void init() {
         doInit();
-        log.info("[init][配置({}) 初始化完成]", properties);
+        log.debug("[init][配置({}) 初始化完成]", properties);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/job/TenantJob.java
Patch:
@@ -8,7 +8,7 @@
 /**
  * 多租户 Job 注解
  */
-@Target({ElementType.TYPE})
+@Target({ElementType.METHOD})
 @Retention(RetentionPolicy.RUNTIME)
 public @interface TenantJob {
 }

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/redis/TenantRedisCacheManager.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.framework.tenant.core.redis;
 
+import cn.iocoder.yudao.framework.redis.core.TimeoutRedisCacheManager;
 import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.cache.Cache;
@@ -15,7 +16,7 @@
  * @author airhead
  */
 @Slf4j
-public class TenantRedisCacheManager extends RedisCacheManager {
+public class TenantRedisCacheManager extends TimeoutRedisCacheManager {
 
     public TenantRedisCacheManager(RedisCacheWriter cacheWriter,
                                    RedisCacheConfiguration defaultCacheConfiguration) {

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/test/java/cn/iocoder/yudao/framework/tenant/core/job/TestJob.java
Patch:
@@ -9,12 +9,12 @@
 import java.util.concurrent.CopyOnWriteArrayList;
 
 @Component
-@TenantJob // 标记多租户
 public class TestJob implements JobHandler {
 
     private final List<Long> tenantIds = new CopyOnWriteArrayList<>();
 
     @Override
+    @TenantJob // 标记多租户
     public String execute(String param) throws Exception {
         tenantIds.add(TenantContextHolder.getTenantId());
         return "success";
@@ -24,4 +24,5 @@ public List<Long> getTenantIds() {
         CollUtil.sort(tenantIds, Long::compareTo);
         return tenantIds;
     }
+
 }

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/AbstractFileClient.java
Patch:
@@ -30,7 +30,7 @@ public AbstractFileClient(Long id, Config config) {
      */
     public final void init() {
         doInit();
-        log.info("[init][配置({}) 初始化完成]", config);
+        log.debug("[init][配置({}) 初始化完成]", config);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java
Patch:
@@ -7,7 +7,6 @@
 import com.baomidou.mybatisplus.core.conditions.Wrapper;
 import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
-import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.toolkit.support.SFunction;
 import com.baomidou.mybatisplus.extension.toolkit.Db;

File: yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/lock4j/config/YudaoLock4jConfiguration.java
Patch:
@@ -3,9 +3,11 @@
 import cn.iocoder.yudao.framework.lock4j.core.DefaultLockFailureStrategy;
 import com.baomidou.lock.spring.boot.autoconfigure.LockAutoConfiguration;
 import org.springframework.boot.autoconfigure.AutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.context.annotation.Bean;
 
 @AutoConfiguration(before = LockAutoConfiguration.class)
+@ConditionalOnClass(name = "com.baomidou.lock.annotation.Lock4j")
 public class YudaoLock4jConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/core/TimeoutRedisCacheManager.java
Patch:
@@ -45,7 +45,7 @@ protected RedisCache createRedisCache(String name, RedisCacheConfiguration cache
             Duration duration = parseDuration(names[1]);
             cacheConfig = cacheConfig.entryTtl(duration);
         }
-        return super.createRedisCache(names[0], cacheConfig);
+        return super.createRedisCache(name, cacheConfig);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/xss/config/YudaoXssAutoConfiguration.java
Patch:
@@ -21,6 +21,7 @@
 
 @AutoConfiguration
 @EnableConfigurationProperties(XssProperties.class)
+@ConditionalOnProperty(prefix = "yudao.xss", name = "enable", havingValue = "true", matchIfMissing = true) // 设置为 false 时，禁用
 public class YudaoXssAutoConfiguration implements WebMvcConfigurer {
 
     /**

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/task/BpmProcessInstanceResultEnum.java
Patch:
@@ -20,7 +20,8 @@ public enum BpmProcessInstanceResultEnum {
 
     // ========== 流程任务独有的状态 ==========
 
-    BACK(5, "退回/驳回");
+    BACK(5, "驳回"), // 退回
+    DELEGATE(6, "委派");
 
     /**
      * 结果

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.PageUtils;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionListReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageItemRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageReqVO;
@@ -200,7 +200,7 @@ public boolean isProcessDefinitionEquals(@Valid BpmProcessDefinitionCreateReqDTO
         BpmnModel newModel = buildBpmnModel(createReqDTO.getBpmnBytes());
         BpmnModel oldModel = getBpmnModel(oldProcessDefinition.getId());
         // 对比字节变化
-        if (!FlowableUtils.equals(oldModel, newModel)) {
+        if (!BpmnModelUtils.equals(oldModel, newModel)) {
             return false;
         }
         // 最终发现都一致，则返回 true

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmTaskAssignRuleServiceImpl.java
Patch:
@@ -7,7 +7,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
 import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleCreateReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleUpdateReqVO;
@@ -114,7 +114,7 @@ public List<BpmTaskAssignRuleRespVO> getTaskAssignRuleList(String modelId, Strin
             return Collections.emptyList();
         }
         // 获得用户任务，只有用户任务才可以设置分配规则
-        List<UserTask> userTasks = FlowableUtils.getBpmnModelElements(model, UserTask.class);
+        List<UserTask> userTasks = BpmnModelUtils.getBpmnModelElements(model, UserTask.class);
         if (CollUtil.isEmpty(userTasks)) {
             return Collections.emptyList();
         }

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImplTest.java
Patch:
@@ -139,4 +139,5 @@ public void testGetFileContent() throws Exception {
         // 断言
         assertSame(result, content);
     }
+
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/spu/AppProductSpuController.java
Patch:
@@ -140,4 +140,5 @@ public Integer calculateVipPrice(Integer price, MemberLevelRespDTO memberLevel)
         return price - newPrice;
     }
 
+    // TODO 芋艿：商品的浏览记录；
 }

File: yudao-module-mall/yudao-module-product-biz/src/test/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentServiceImplTest.java
Patch:
@@ -16,7 +16,6 @@
 import cn.iocoder.yudao.module.product.enums.comment.ProductCommentScoresEnum;
 import cn.iocoder.yudao.module.product.service.sku.ProductSkuService;
 import cn.iocoder.yudao.module.product.service.spu.ProductSpuService;
-import cn.iocoder.yudao.module.trade.api.order.TradeOrderApi;
 import org.junit.jupiter.api.Test;
 import org.springframework.boot.test.mock.mockito.MockBean;
 import org.springframework.context.annotation.Import;
@@ -48,8 +47,6 @@ public class ProductCommentServiceImplTest extends BaseDbUnitTest {
     @Lazy
     private ProductCommentServiceImpl productCommentService;
 
-    @MockBean
-    private TradeOrderApi tradeOrderApi;
     @MockBean
     private ProductSpuService productSpuService;
     @MockBean

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/reward/dto/RewardActivityMatchRespDTO.java
Patch:
@@ -68,7 +68,7 @@ public static class Rule {
          */
         private List<Long> couponIds;
         /**
-         * 赠送的优惠卷数量的数组
+         * 赠送的优惠券数量的数组
          */
         private List<Integer> couponCounts;
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/common/PromotionProductScopeEnum.java
Patch:
@@ -15,9 +15,9 @@
 @AllArgsConstructor
 public enum PromotionProductScopeEnum implements IntArrayValuable {
 
-    ALL(1, "通用卷"), // 全部商品
-    SPU(2, "商品卷"), // 指定商品
-    CATEGORY(3, "品类卷"), // 指定商品
+    ALL(1, "通用券"), // 全部商品
+    SPU(2, "商品券"), // 指定商品
+    CATEGORY(3, "品类券"), // 指定品类
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(PromotionProductScopeEnum::getScope).toArray();

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/reward/vo/RewardActivityBaseVO.java
Patch:
@@ -84,7 +84,7 @@ public static class Rule {
         @Schema(description = "赠送的优惠劵编号的数组", example = "1,2,3")
         private List<Long> couponIds;
 
-        @Schema(description = "赠送的优惠卷数量的数组", example = "1,2,3")
+        @Schema(description = "赠送的优惠券数量的数组", example = "1,2,3")
         private List<Integer> couponCounts;
 
         @AssertTrue(message = "优惠劵和数量必须一一对应")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/help/AppBargainHelpCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainHelpCreateReqVO {
 
-    @Schema(description = "砍价记录编号", required = true, example = "1024")
+    @Schema(description = "砍价记录编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价记录编号不能为空")
     private Long recordId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/record/AppBargainRecordCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainRecordCreateReqVO {
 
-    @Schema(description = "砍价活动编号", required = true, example = "1024")
+    @Schema(description = "砍价活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价活动编号不能为空")
     private Long activityId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/coupon/AppCouponMatchReqVO.java
Patch:
@@ -15,15 +15,15 @@ public class AppCouponMatchReqVO {
     @NotNull(message = "商品金额不能为空")
     private Integer price;
 
-    @Schema(description = "商品 SPU 编号的数组", required = true, example = "[1, 2]")
+    @Schema(description = "商品 SPU 编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2]")
     @NotEmpty(message = "商品 SPU 编号不能为空")
     private List<Long> spuIds;
 
-    @Schema(description = "商品 SKU 编号的数组", required = true, example = "[1, 2]")
+    @Schema(description = "商品 SKU 编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2]")
     @NotEmpty(message = "商品 SKU 编号不能为空")
     private List<Long> skuIds;
 
-    @Schema(description = "分类编号的数组", required = true, example = "[10, 20]")
+    @Schema(description = "分类编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[10, 20]")
     @NotEmpty(message = "分类编号不能为空")
     private List<Long> categoryIds;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/coupon/AppCouponPageReqVO.java
Patch:
@@ -1,6 +1,8 @@
 package cn.iocoder.yudao.module.promotion.controller.app.coupon.vo.coupon;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
+import cn.iocoder.yudao.framework.common.validation.InEnum;
+import cn.iocoder.yudao.module.promotion.enums.coupon.CouponStatusEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -13,6 +15,7 @@
 public class AppCouponPageReqVO extends PageParam {
 
     @Schema(description = "优惠劵状态", example = "1")
+    @InEnum(value = CouponStatusEnum.class, message = "优惠劵状态，必须是 {value}")
     private Integer status;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/reward/RewardActivityDO.java
Patch:
@@ -110,7 +110,7 @@ public static class Rule implements Serializable {
          */
         private List<Long> couponIds;
         /**
-         * 赠送的优惠卷数量的数组
+         * 赠送的优惠券数量的数组
          */
         private List<Integer> couponCounts;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/coupon/CouponTemplateMapper.java
Patch:
@@ -39,6 +39,9 @@ default PageResult<CouponTemplateDO> selectPage(CouponTemplatePageReqVO reqVO) {
                 .eqIfPresent(CouponTemplateDO::getStatus, reqVO.getStatus())
                 .eqIfPresent(CouponTemplateDO::getDiscountType, reqVO.getDiscountType())
                 .betweenIfPresent(CouponTemplateDO::getCreateTime, reqVO.getCreateTime())
+                .eqIfPresent(CouponTemplateDO::getProductScope, reqVO.getProductScope())
+                .and(reqVO.getProductScopeValue() != null, w -> w.apply("FIND_IN_SET({0}, product_scope_values)",
+                        reqVO.getProductScopeValue()))
                 .and(canTakeConsumer != null, canTakeConsumer)
                 .orderByDesc(CouponTemplateDO::getId));
     }

File: yudao-module-mall/yudao-module-statistics-biz/src/main/java/cn/iocoder/yudao/module/statistics/controller/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.statistics.controller;

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/brokerage/BrokerageBindModeEnum.java
Patch:
@@ -18,15 +18,15 @@ public enum BrokerageBindModeEnum implements IntArrayValuable {
     /**
      * 只要用户没有推广人，随时都可以绑定分销关系
      */
-    ANYTIME(1, "没有推广人"),
+    ANYTIME(1, "首次绑定"),
     /**
      * 仅新用户注册时才能绑定推广关系
      */
-    REGISTER(2, "新用户"),
+    REGISTER(2, "注册绑定"),
     /**
      * 每次扫码都覆盖
      */
-    OVERRIDE(3, "扫码覆盖"),
+    OVERRIDE(3, "覆盖绑定"),
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(BrokerageBindModeEnum::getMode).toArray();

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/brokerage/BrokerageRecordBizTypeEnum.java
Patch:
@@ -17,7 +17,7 @@ public enum BrokerageRecordBizTypeEnum implements IntArrayValuable {
 
     ORDER(1, "获得推广佣金", "获得推广佣金 {}", true),
     WITHDRAW(2, "提现申请", "提现申请扣除佣金 {}", false),
-    WITHDRAW_REJECT(3, "提现申请驳回", "提现申请驳回返还佣金 {}", true),
+    WITHDRAW_REJECT(3, "提现申请驳回", "提现申请驳回，返还佣金 {}", true),
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(BrokerageRecordBizTypeEnum::getType).toArray();

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/brokerage/BrokerageWithdrawStatusEnum.java
Patch:
@@ -6,6 +6,7 @@
 
 import java.util.Arrays;
 
+// TODO 芋艿：提现的打通，在纠结下；
 /**
  * 佣金提现状态枚举
  *

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/order/TradeOrderCancelTypeEnum.java
Patch:
@@ -17,8 +17,7 @@ public enum TradeOrderCancelTypeEnum implements IntArrayValuable {
 
     PAY_TIMEOUT(10, "超时未支付"),
     AFTER_SALE_CLOSE(20, "退款关闭"),
-    MEMBER_CANCEL(30, "买家取消"),
-    PAY_ON_DELIVERY(40, "已通过货到付款交易"),; // TODO 芋艿：这个类型，是不是可以去掉
+    MEMBER_CANCEL(30, "买家取消");
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(TradeOrderCancelTypeEnum::getType).toArray();
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/TradeOrderController.java
Patch:
@@ -73,7 +73,7 @@ public CommonResult<TradeOrderDetailRespVO> getOrderDetail(@RequestParam("id") L
 
         // 查询订单项
         List<TradeOrderItemDO> orderItems = tradeOrderQueryService.getOrderItemListByOrderId(id);
-        // orderLog
+        // TODO @puhui999：orderLog
         // 拼接数据
         MemberUserRespDTO user = memberUserApi.getUser(order.getUserId());
         return success(TradeOrderConvert.INSTANCE.convert(order, orderItems, user));
@@ -120,4 +120,6 @@ public CommonResult<Boolean> updateOrderAddress(@RequestBody TradeOrderUpdateAdd
         return success(true);
     }
 
+    // TODO ：核销逻辑
+
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/brokerage/AppBrokerageRecordController.java
Patch:
@@ -45,7 +45,7 @@ public CommonResult<PageResult<AppBrokerageRecordRespVO>> getBrokerageRecordPage
     @GetMapping("/get-product-brokerage-price")
     @Operation(summary = "获得商品的分销金额")
     public CommonResult<AppBrokerageProductPriceRespVO> getProductBrokeragePrice(@RequestParam("spuId") Long spuId) {
-        return success(brokerageRecordService.calculateProductBrokeragePrice(spuId, getLoginUserId()));
+        return success(brokerageRecordService.calculateProductBrokeragePrice(getLoginUserId(), spuId));
     }
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/config/AppDeliveryConfigRespVO.java
Patch:
@@ -8,10 +8,10 @@
 @Data
 public class AppDeliveryConfigRespVO {
 
-    @Schema(description = "腾讯地图 KEY", required = true, example = "123456")
+    @Schema(description = "腾讯地图 KEY", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     private String tencentLbsKey;
 
-    @Schema(description = "是否开启自提", required = true, example = "true")
+    @Schema(description = "是否开启自提", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     private Boolean pickUpEnable;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/express/AppDeliveryExpressRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class AppDeliveryExpressRespVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "门店名称", required = true, example = "顺丰")
+    @Schema(description = "门店名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "顺丰")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementReqVO.java
Patch:
@@ -25,12 +25,12 @@ public class AppTradeOrderSettlementReqVO {
     @Schema(description = "优惠劵编号", example = "1024")
     private Long couponId;
 
-    @Schema(description = "是否使用积分", required = true, example = "true")
+    @Schema(description = "是否使用积分", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否使用积分不能为空")
     private Boolean pointStatus;
 
     // ========== 配送相关相关字段 ==========
-    @Schema(description = "配送方式", example = "1")
+    @Schema(description = "配送方式", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(value = DeliveryTypeEnum.class, message = "配送方式不正确")
     private Integer deliveryType;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @Data
 public class AppTradeOrderSettlementRespVO {
 
-    @Schema(description = "交易类型", required = true, example = "1") // 对应 TradeOrderTypeEnum 枚举
+    @Schema(description = "交易类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1") // 对应 TradeOrderTypeEnum 枚举
     private Integer type = 1; // TODO 芋艿：改成计算
 
     @Schema(description = "购物项数组", requiredMode = Schema.RequiredMode.REQUIRED)
@@ -37,6 +37,8 @@ public static class Item {
 
         // ========== SPU 信息 ==========
 
+        @Schema(description = "品类编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
+        private Long categoryId;
         @Schema(description = "SPU 编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
         private Long spuId;
         @Schema(description = "SPU 名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "Apple iPhone 12")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -90,7 +90,7 @@ default List<TradeOrderItemDO> convertList(TradeOrderDO tradeOrderDO, TradePrice
 
     default ProductSkuUpdateStockReqDTO convert(List<TradeOrderItemDO> list) {
         List<ProductSkuUpdateStockReqDTO.Item> items = CollectionUtils.convertList(list, item ->
-                new ProductSkuUpdateStockReqDTO.Item().setId(item.getSkuId()).setIncrCount(-item.getCount()));
+                new ProductSkuUpdateStockReqDTO.Item().setId(item.getSkuId()).setIncrCount(item.getCount()));
         return new ProductSkuUpdateStockReqDTO(items);
     }
     default ProductSkuUpdateStockReqDTO convertNegative(List<AppTradeOrderSettlementReqVO.Item> list) {
@@ -110,7 +110,7 @@ default PayOrderCreateReqDTO convert(TradeOrderDO order, List<TradeOrderItemDO>
         createReqDTO.setSubject(subject);
         createReqDTO.setBody(subject); // TODO 芋艿：临时写死
         // 订单相关字段
-        createReqDTO.setPrice(order.getPayPrice()).setExpireTime(addTime(orderProperties.getExpireTime()));
+        createReqDTO.setPrice(order.getPayPrice()).setExpireTime(addTime(orderProperties.getPayExpireTime()));
         return createReqDTO;
     }
 
@@ -180,7 +180,7 @@ default AppTradeOrderDetailRespVO convert02(TradeOrderDO order, List<TradeOrderI
                                                 TradeOrderProperties tradeOrderProperties,
                                                 DeliveryExpressDO express) {
         AppTradeOrderDetailRespVO orderVO = convert3(order, orderItems);
-        orderVO.setPayExpireTime(addTime(tradeOrderProperties.getExpireTime()));
+        orderVO.setPayExpireTime(addTime(tradeOrderProperties.getPayExpireTime()));
         if (StrUtil.isNotEmpty(order.getPayChannelCode())) {
             orderVO.setPayChannelName(DictFrameworkUtils.getDictDataLabel(DictTypeConstants.CHANNEL_CODE, order.getPayChannelCode()));
         }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/dataobject/order/TradeOrderDO.java
Patch:
@@ -105,6 +105,8 @@ public class TradeOrderDO extends BaseDO {
      */
     private Boolean commentStatus;
 
+    // TODO @疯狂：加一个推广人编号；
+
     // ========== 价格 + 支付基本信息 ==========
 
     // 价格文档 - 淘宝：https://open.taobao.com/docV3.htm?docId=108471&docType=1

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/framework/aftersalelog/core/annotations/AfterSaleLog.java
Patch:
@@ -21,7 +21,8 @@
     /**
      * 售后 ID
      */
-    String id();
+    @Deprecated
+    String id() default "";
 
     /**
      * 操作类型
@@ -31,6 +32,7 @@
     /**
      * 日志内容
      */
+    @Deprecated
     String content() default "";
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/framework/aftersalelog/core/aop/AfterSaleLogAspect.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.iocoder.yudao.framework.common.util.spring.SpringExpressionUtils;
-import cn.iocoder.yudao.framework.operatelog.core.service.OperateLog;
 import cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.annotations.AfterSaleLog;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogCreateReqDTO;
@@ -96,7 +95,7 @@ public static Map<String, String> spelFormat(JoinPoint joinPoint, Object info) {
         String id = MapUtil.getStr(spelMap, afterSaleLogPoint.id());
         result.put(ID, id);
         // 操作类型
-        String operateType = afterSaleLogPoint.operateType().description();
+        String operateType = afterSaleLogPoint.operateType().getContent();
         result.put(OPERATE_TYPE, operateType);
         // 日志内容
         String content = MapUtil.getStr(spelMap, afterSaleLogPoint.content());

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/job/brokerage/BrokerageRecordUnfreezeJob.java
Patch:
@@ -14,13 +14,13 @@
  * @author owen
  */
 @Component
-@TenantJob
 public class BrokerageRecordUnfreezeJob implements JobHandler {
 
     @Resource
     private BrokerageRecordService brokerageRecordService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = brokerageRecordService.unfreezeRecord();
         return StrUtil.format("解冻佣金 {} 个", count);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradePointGiveCalculator.java
Patch:
@@ -16,6 +16,7 @@
 
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.filterList;
 
+// TODO @疯狂：这个可以搞个单测；
 /**
  * 赠送积分的 {@link TradePriceCalculator} 实现类
  *
@@ -25,6 +26,7 @@
 @Order(TradePriceCalculator.ORDER_POINT_GIVE)
 @Slf4j
 public class TradePointGiveCalculator implements TradePriceCalculator {
+
     @Resource
     private MemberPointApi memberPointApi;
 
@@ -54,9 +56,9 @@ public void calculate(TradePriceCalculateReqBO param, TradePriceCalculateRespBO
             TradePriceCalculateRespBO.OrderItem orderItem = orderItems.get(i);
             // 商品可能赠送了积分，所以这里要加上
             orderItem.setGivePoint(orderItem.getGivePoint() + dividePoints.get(i));
-            TradePriceCalculatorHelper.recountPayPrice(orderItem);
         }
         // 3.3 更新订单赠送积分
         TradePriceCalculatorHelper.recountAllGivePoint(result);
     }
+
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradePriceCalculator.java
Patch:
@@ -21,11 +21,13 @@ public interface TradePriceCalculator {
     /**
      * 快递运费的计算
      *
-     * 放在各种营销活动、优惠劵后面 TODO
+     * 放在各种营销活动、优惠劵后面
      */
     int ORDER_DELIVERY = 50;
     /**
      * 赠送积分，放最后
+     *
+     * 放在 {@link #ORDER_DELIVERY} 后面的原因，是运费也会产生费用，需要赠送对应积分
      */
     int ORDER_POINT_GIVE = 999;
 

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/framework/delivery/core/client/impl/KdNiaoExpressClientIntegrationTest.java
Patch:
@@ -38,7 +38,7 @@ public void init() {
     public void testGetExpressTrackList() {
         ExpressTrackQueryReqDTO reqDTO = new ExpressTrackQueryReqDTO();
         reqDTO.setExpressCode("STO");
-        reqDTO.setLogisticsNo("663220402764314");
+        reqDTO.setLogisticsNo("777168349863987");
         List<ExpressTrackRespDTO> tracks = client.getExpressTrackList(reqDTO);
         System.out.println(JsonUtils.toJsonPrettyString(tracks));
     }

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderUpdateServiceTest.java
Patch:
@@ -87,7 +87,7 @@ public class TradeOrderUpdateServiceTest extends BaseDbUnitTest {
     @BeforeEach
     public void setUp() {
         when(tradeOrderProperties.getAppId()).thenReturn(888L);
-        when(tradeOrderProperties.getExpireTime()).thenReturn(Duration.ofDays(1));
+        when(tradeOrderProperties.getPayExpireTime()).thenReturn(Duration.ofDays(1));
     }
 
     @Test
@@ -306,7 +306,7 @@ public void testReceiveOrder() {
         // mock 方法（支付单）
 
         // 调用
-        tradeOrderUpdateService.receiveOrder(userId, id);
+        tradeOrderUpdateService.receiveOrderByMember(userId, id);
         // 断言
         TradeOrderDO dbOrder = tradeOrderMapper.selectById(1L);
         assertEquals(dbOrder.getStatus(), TradeOrderStatusEnum.COMPLETED.getStatus());

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/point/MemberPointApi.java
Patch:
@@ -12,6 +12,7 @@
  */
 public interface MemberPointApi {
 
+    // TODO @疯狂：这个我们要不要搞成通用的会员配置？MemberConfig？
     /**
      * 获得积分配置
      *

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/point/dto/MemberPointConfigRespDTO.java
Patch:
@@ -9,6 +9,7 @@
  */
 @Data
 public class MemberPointConfigRespDTO {
+
     /**
      * 积分抵扣开关
      */
@@ -27,4 +28,5 @@ public class MemberPointConfigRespDTO {
      * 1 元赠送多少分
      */
     private Integer tradeGivePoint;
+
 }

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/user/dto/MemberUserRespDTO.java
Patch:
@@ -51,4 +51,5 @@ public class MemberUserRespDTO {
      * 积分
      */
     private Integer point;
+
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class AppAuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -53,4 +53,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSmsLoginReqVO.java
Patch:
@@ -35,7 +35,7 @@ public class AppAuthSmsLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -55,4 +55,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppAuthSocialLoginReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppSocialUserBindReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -27,4 +27,4 @@ public class AppSocialUserUnbindReqVO {
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -190,7 +190,7 @@ private String encodePassword(String password) {
     @Transactional(rollbackFor = Exception.class)
     public void updateUser(MemberUserUpdateReqVO updateReqVO) {
         // 校验存在
-        MemberUserDO user = validateUserExists(updateReqVO.getId());
+        validateUserExists(updateReqVO.getId());
         // 校验手机唯一
         validateMobileUnique(updateReqVO.getId(), updateReqVO.getMobile());
 
@@ -222,10 +222,10 @@ void validateMobileUnique(Long id, String mobile) {
         }
         // 如果 id 为空，说明不用比较是否为相同 id 的用户
         if (id == null) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
         if (!user.getId().equals(id)) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
     }
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/mysql/channel/PayChannelMapper.java
Patch:
@@ -28,7 +28,4 @@ default List<PayChannelDO> selectListByAppId(Long appId, Integer status) {
                 .eq(PayChannelDO::getStatus, status));
     }
 
-    @Select("SELECT COUNT(*) FROM pay_channel WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
-
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/notify/PayNotifyJob.java
Patch:
@@ -15,14 +15,14 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob // 多租户
 @Slf4j
 public class PayNotifyJob implements JobHandler {
 
     @Resource
     private PayNotifyService payNotifyService;
 
     @Override
+    @TenantJob
     public String execute(String param) throws Exception {
         int notifyCount = payNotifyService.executeNotify();
         return String.format("执行支付通知 %s 个", notifyCount);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/order/PayOrderExpireJob.java
Patch:
@@ -16,13 +16,13 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayOrderExpireJob implements JobHandler {
 
     @Resource
     private PayOrderService orderService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = orderService.expireOrder();
         return StrUtil.format("支付过期 {} 个", count);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/order/PayOrderSyncJob.java
Patch:
@@ -18,7 +18,6 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayOrderSyncJob implements JobHandler {
 
     /**
@@ -34,6 +33,7 @@ public class PayOrderSyncJob implements JobHandler {
     private PayOrderService orderService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         LocalDateTime minCreateTime = LocalDateTime.now().minus(CREATE_TIME_DURATION_BEFORE);
         int count = orderService.syncOrder(minCreateTime);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/refund/PayRefundSyncJob.java
Patch:
@@ -16,13 +16,13 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayRefundSyncJob implements JobHandler {
 
     @Resource
     private PayRefundService refundService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = refundService.syncRefund();
         return StrUtil.format("同步退款订单 {} 个", count);

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -9,7 +9,7 @@
  */
 public interface ErrorCodeConstants {
 
-    // ========== AUTH 模块 1003000000 ==========
-    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1003000000, "GoView 项目不存在");
+    // ========== AUTH 模块 1-003-000-000 ==========
+    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1_003_000_000, "GoView 项目不存在");
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.auth;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
@@ -153,4 +154,4 @@ public CommonResult<AuthLoginRespVO> socialQuickLogin(@RequestBody @Valid AuthSo
         return success(authService.socialLogin(reqVO));
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthLoginReqVO.java
Patch:
@@ -41,7 +41,7 @@ public class AuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -66,4 +66,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/sms/SmsChannelConvert.java
Patch:
@@ -32,8 +32,8 @@ public interface SmsChannelConvert {
 
     PageResult<SmsChannelRespVO> convertPage(PageResult<SmsChannelDO> page);
 
-    List<SmsChannelProperties> convertList02(List<SmsChannelDO> list);
-
     List<SmsChannelSimpleRespVO> convertList03(List<SmsChannelDO> list);
 
+    SmsChannelProperties convert02(SmsChannelDO channel);
+
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/dict/DictDataDO.java
Patch:
@@ -55,7 +55,7 @@ public class DictDataDO extends BaseDO {
     /**
      * css 样式
      */
-    @TableField(updateStrategy = FieldStrategy.IGNORED)
+    @TableField(updateStrategy = FieldStrategy.ALWAYS)
     private String cssClass;
     /**
      * 备注

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/job/DemoJob.java
Patch:
@@ -11,14 +11,14 @@
 import java.util.List;
 
 @Component
-@TenantJob // 标记多租户
 public class DemoJob implements JobHandler {
 
     @Resource
     private AdminUserMapper adminUserMapper;
 
     @Override
-    public String execute(String param) throws Exception {
+    @TenantJob // 标记多租户
+    public String execute(String param) {
         System.out.println("当前租户：" + TenantContextHolder.getTenantId());
         List<AdminUserDO> users = adminUserMapper.selectList();
         return "用户数量：" + users.size();

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/json/JsonUtils.java
Patch:
@@ -10,7 +10,6 @@
 import com.fasterxml.jackson.databind.SerializationFeature;
 import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 import lombok.SneakyThrows;
-import lombok.experimental.UtilityClass;
 import lombok.extern.slf4j.Slf4j;
 
 import java.io.IOException;
@@ -23,7 +22,6 @@
  *
  * @author 芋道源码
  */
-@UtilityClass
 @Slf4j
 public class JsonUtils {
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/AbstractPayClient.java
Patch:
@@ -50,7 +50,7 @@ public AbstractPayClient(Long channelId, String channelCode, Config config) {
      */
     public final void init() {
         doInit();
-        log.info("[init][客户端({}) 初始化完成]", getId());
+        log.debug("[init][客户端({}) 初始化完成]", getId());
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/AbstractSmsClient.java
Patch:
@@ -40,7 +40,7 @@ public AbstractSmsClient(SmsChannelProperties properties, SmsCodeMapping codeMap
      */
     public final void init() {
         doInit();
-        log.info("[init][配置({}) 初始化完成]", properties);
+        log.debug("[init][配置({}) 初始化完成]", properties);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/job/TenantJob.java
Patch:
@@ -8,7 +8,7 @@
 /**
  * 多租户 Job 注解
  */
-@Target({ElementType.TYPE})
+@Target({ElementType.METHOD})
 @Retention(RetentionPolicy.RUNTIME)
 public @interface TenantJob {
 }

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/redis/TenantRedisCacheManager.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.framework.tenant.core.redis;
 
+import cn.iocoder.yudao.framework.redis.core.TimeoutRedisCacheManager;
 import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.cache.Cache;
@@ -15,7 +16,7 @@
  * @author airhead
  */
 @Slf4j
-public class TenantRedisCacheManager extends RedisCacheManager {
+public class TenantRedisCacheManager extends TimeoutRedisCacheManager {
 
     public TenantRedisCacheManager(RedisCacheWriter cacheWriter,
                                    RedisCacheConfiguration defaultCacheConfiguration) {

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/test/java/cn/iocoder/yudao/framework/tenant/core/job/TestJob.java
Patch:
@@ -9,12 +9,12 @@
 import java.util.concurrent.CopyOnWriteArrayList;
 
 @Component
-@TenantJob // 标记多租户
 public class TestJob implements JobHandler {
 
     private final List<Long> tenantIds = new CopyOnWriteArrayList<>();
 
     @Override
+    @TenantJob // 标记多租户
     public String execute(String param) throws Exception {
         tenantIds.add(TenantContextHolder.getTenantId());
         return "success";
@@ -24,4 +24,5 @@ public List<Long> getTenantIds() {
         CollUtil.sort(tenantIds, Long::compareTo);
         return tenantIds;
     }
+
 }

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/AbstractFileClient.java
Patch:
@@ -30,7 +30,7 @@ public AbstractFileClient(Long id, Config config) {
      */
     public final void init() {
         doInit();
-        log.info("[init][配置({}) 初始化完成]", config);
+        log.debug("[init][配置({}) 初始化完成]", config);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java
Patch:
@@ -7,7 +7,6 @@
 import com.baomidou.mybatisplus.core.conditions.Wrapper;
 import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
-import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.toolkit.support.SFunction;
 import com.baomidou.mybatisplus.extension.toolkit.Db;

File: yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/lock4j/config/YudaoLock4jConfiguration.java
Patch:
@@ -3,9 +3,11 @@
 import cn.iocoder.yudao.framework.lock4j.core.DefaultLockFailureStrategy;
 import com.baomidou.lock.spring.boot.autoconfigure.LockAutoConfiguration;
 import org.springframework.boot.autoconfigure.AutoConfiguration;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.context.annotation.Bean;
 
 @AutoConfiguration(before = LockAutoConfiguration.class)
+@ConditionalOnClass(name = "com.baomidou.lock.annotation.Lock4j")
 public class YudaoLock4jConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/core/TimeoutRedisCacheManager.java
Patch:
@@ -45,7 +45,7 @@ protected RedisCache createRedisCache(String name, RedisCacheConfiguration cache
             Duration duration = parseDuration(names[1]);
             cacheConfig = cacheConfig.entryTtl(duration);
         }
-        return super.createRedisCache(names[0], cacheConfig);
+        return super.createRedisCache(name, cacheConfig);
     }
 
     /**

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/xss/config/YudaoXssAutoConfiguration.java
Patch:
@@ -21,6 +21,7 @@
 
 @AutoConfiguration
 @EnableConfigurationProperties(XssProperties.class)
+@ConditionalOnProperty(prefix = "yudao.xss", name = "enable", havingValue = "true", matchIfMissing = true) // 设置为 false 时，禁用
 public class YudaoXssAutoConfiguration implements WebMvcConfigurer {
 
     /**

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/task/BpmProcessInstanceResultEnum.java
Patch:
@@ -20,7 +20,8 @@ public enum BpmProcessInstanceResultEnum {
 
     // ========== 流程任务独有的状态 ==========
 
-    BACK(5, "退回/驳回");
+    BACK(5, "驳回"), // 退回
+    DELEGATE(6, "委派");
 
     /**
      * 结果

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.PageUtils;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionListReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageItemRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageReqVO;
@@ -200,7 +200,7 @@ public boolean isProcessDefinitionEquals(@Valid BpmProcessDefinitionCreateReqDTO
         BpmnModel newModel = buildBpmnModel(createReqDTO.getBpmnBytes());
         BpmnModel oldModel = getBpmnModel(oldProcessDefinition.getId());
         // 对比字节变化
-        if (!FlowableUtils.equals(oldModel, newModel)) {
+        if (!BpmnModelUtils.equals(oldModel, newModel)) {
             return false;
         }
         // 最终发现都一致，则返回 true

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmTaskAssignRuleServiceImpl.java
Patch:
@@ -7,7 +7,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
 import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleCreateReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleUpdateReqVO;
@@ -114,7 +114,7 @@ public List<BpmTaskAssignRuleRespVO> getTaskAssignRuleList(String modelId, Strin
             return Collections.emptyList();
         }
         // 获得用户任务，只有用户任务才可以设置分配规则
-        List<UserTask> userTasks = FlowableUtils.getBpmnModelElements(model, UserTask.class);
+        List<UserTask> userTasks = BpmnModelUtils.getBpmnModelElements(model, UserTask.class);
         if (CollUtil.isEmpty(userTasks)) {
             return Collections.emptyList();
         }

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImplTest.java
Patch:
@@ -139,4 +139,5 @@ public void testGetFileContent() throws Exception {
         // 断言
         assertSame(result, content);
     }
+
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/help/AppBargainHelpCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainHelpCreateReqVO {
 
-    @Schema(description = "砍价记录编号", required = true, example = "1024")
+    @Schema(description = "砍价记录编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价记录编号不能为空")
     private Long recordId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/record/AppBargainRecordCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainRecordCreateReqVO {
 
-    @Schema(description = "砍价活动编号", required = true, example = "1024")
+    @Schema(description = "砍价活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价活动编号不能为空")
     private Long activityId;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/config/AppDeliveryConfigRespVO.java
Patch:
@@ -8,10 +8,10 @@
 @Data
 public class AppDeliveryConfigRespVO {
 
-    @Schema(description = "腾讯地图 KEY", required = true, example = "123456")
+    @Schema(description = "腾讯地图 KEY", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     private String tencentLbsKey;
 
-    @Schema(description = "是否开启自提", required = true, example = "true")
+    @Schema(description = "是否开启自提", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     private Boolean pickUpEnable;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/express/AppDeliveryExpressRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class AppDeliveryExpressRespVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "门店名称", required = true, example = "顺丰")
+    @Schema(description = "门店名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "顺丰")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementReqVO.java
Patch:
@@ -25,12 +25,12 @@ public class AppTradeOrderSettlementReqVO {
     @Schema(description = "优惠劵编号", example = "1024")
     private Long couponId;
 
-    @Schema(description = "是否使用积分", required = true, example = "true")
+    @Schema(description = "是否使用积分", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否使用积分不能为空")
     private Boolean pointStatus;
 
     // ========== 配送相关相关字段 ==========
-    @Schema(description = "配送方式", example = "1")
+    @Schema(description = "配送方式", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(value = DeliveryTypeEnum.class, message = "配送方式不正确")
     private Integer deliveryType;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @Data
 public class AppTradeOrderSettlementRespVO {
 
-    @Schema(description = "交易类型", required = true, example = "1") // 对应 TradeOrderTypeEnum 枚举
+    @Schema(description = "交易类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1") // 对应 TradeOrderTypeEnum 枚举
     private Integer type = 1; // TODO 芋艿：改成计算
 
     @Schema(description = "购物项数组", requiredMode = Schema.RequiredMode.REQUIRED)

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class AppAuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -53,4 +53,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSmsLoginReqVO.java
Patch:
@@ -35,7 +35,7 @@ public class AppAuthSmsLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -55,4 +55,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppAuthSocialLoginReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppSocialUserBindReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -27,4 +27,4 @@ public class AppSocialUserUnbindReqVO {
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -222,10 +222,10 @@ void validateMobileUnique(Long id, String mobile) {
         }
         // 如果 id 为空，说明不用比较是否为相同 id 的用户
         if (id == null) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
         if (!user.getId().equals(id)) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
     }
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/mysql/channel/PayChannelMapper.java
Patch:
@@ -28,7 +28,4 @@ default List<PayChannelDO> selectListByAppId(Long appId, Integer status) {
                 .eq(PayChannelDO::getStatus, status));
     }
 
-    @Select("SELECT COUNT(*) FROM pay_channel WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
-
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/notify/PayNotifyJob.java
Patch:
@@ -15,14 +15,14 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob // 多租户
 @Slf4j
 public class PayNotifyJob implements JobHandler {
 
     @Resource
     private PayNotifyService payNotifyService;
 
     @Override
+    @TenantJob
     public String execute(String param) throws Exception {
         int notifyCount = payNotifyService.executeNotify();
         return String.format("执行支付通知 %s 个", notifyCount);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/order/PayOrderExpireJob.java
Patch:
@@ -16,13 +16,13 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayOrderExpireJob implements JobHandler {
 
     @Resource
     private PayOrderService orderService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = orderService.expireOrder();
         return StrUtil.format("支付过期 {} 个", count);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/order/PayOrderSyncJob.java
Patch:
@@ -18,7 +18,6 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayOrderSyncJob implements JobHandler {
 
     /**
@@ -34,6 +33,7 @@ public class PayOrderSyncJob implements JobHandler {
     private PayOrderService orderService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         LocalDateTime minCreateTime = LocalDateTime.now().minus(CREATE_TIME_DURATION_BEFORE);
         int count = orderService.syncOrder(minCreateTime);

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/job/refund/PayRefundSyncJob.java
Patch:
@@ -16,13 +16,13 @@
  * @author 芋道源码
  */
 @Component
-@TenantJob
 public class PayRefundSyncJob implements JobHandler {
 
     @Resource
     private PayRefundService refundService;
 
     @Override
+    @TenantJob
     public String execute(String param) {
         int count = refundService.syncRefund();
         return StrUtil.format("同步退款订单 {} 个", count);

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -9,7 +9,7 @@
  */
 public interface ErrorCodeConstants {
 
-    // ========== AUTH 模块 1003000000 ==========
-    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1003000000, "GoView 项目不存在");
+    // ========== AUTH 模块 1-003-000-000 ==========
+    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1_003_000_000, "GoView 项目不存在");
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.auth;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
@@ -153,4 +154,4 @@ public CommonResult<AuthLoginRespVO> socialQuickLogin(@RequestBody @Valid AuthSo
         return success(authService.socialLogin(reqVO));
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthLoginReqVO.java
Patch:
@@ -41,7 +41,7 @@ public class AuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -66,4 +66,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/sms/SmsChannelConvert.java
Patch:
@@ -32,8 +32,8 @@ public interface SmsChannelConvert {
 
     PageResult<SmsChannelRespVO> convertPage(PageResult<SmsChannelDO> page);
 
-    List<SmsChannelProperties> convertList02(List<SmsChannelDO> list);
-
     List<SmsChannelSimpleRespVO> convertList03(List<SmsChannelDO> list);
 
+    SmsChannelProperties convert02(SmsChannelDO channel);
+
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/dict/DictDataDO.java
Patch:
@@ -55,7 +55,7 @@ public class DictDataDO extends BaseDO {
     /**
      * css 样式
      */
-    @TableField(updateStrategy = FieldStrategy.IGNORED)
+    @TableField(updateStrategy = FieldStrategy.ALWAYS)
     private String cssClass;
     /**
      * 备注

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/job/DemoJob.java
Patch:
@@ -11,14 +11,14 @@
 import java.util.List;
 
 @Component
-@TenantJob // 标记多租户
 public class DemoJob implements JobHandler {
 
     @Resource
     private AdminUserMapper adminUserMapper;
 
     @Override
-    public String execute(String param) throws Exception {
+    @TenantJob // 标记多租户
+    public String execute(String param) {
         System.out.println("当前租户：" + TenantContextHolder.getTenantId());
         List<AdminUserDO> users = adminUserMapper.selectList();
         return "用户数量：" + users.size();

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/ErrorCodeConstants.java
Patch:
@@ -50,9 +50,8 @@ public interface ErrorCodeConstants {
     ErrorCode TASK_TARGET_NODE_NOT_EXISTS = new ErrorCode(1_009_005_004, " 目标节点不存在");
     ErrorCode TASK_RETURN_FAIL_NO_RETURN_TASK = new ErrorCode(1_009_005_005, "回退任务失败，选择回退的节点没有需要回滚的任务！请重新选择其他任务节点");
     ErrorCode TASK_RETURN_FAIL_SOURCE_TARGET_ERROR = new ErrorCode(1_009_005_006, "回退任务失败，目标节点是在并行网关上或非同一路线上，不可跳转");
-    ErrorCode TASK_DELEGATE_APPROVE_FAIL = new ErrorCode(1_009_005_007, "任务审批失败：委派任务找不到原审批人");
-    ErrorCode TASK_DELEGATE_USER_REPEAT = new ErrorCode(1_009_005_008, "任务委派失败，委派人和当前审批人为同一人");
-    ErrorCode TASK_DELEGATE_RECEIVE_USER_NULL = new ErrorCode(1_009_005_009, "任务委派失败，接收人不存在");
+    ErrorCode TASK_DELEGATE_USER_REPEAT = new ErrorCode(1_009_005_007, "任务委派失败，委派人和当前审批人为同一人");
+    ErrorCode TASK_DELEGATE_USER_NULL = new ErrorCode(1_009_005_008, "任务委派失败，被委派人不存在");
 
     // ========== 流程任务分配规则 1-009-006-000 ==========
     ErrorCode TASK_ASSIGN_RULE_EXISTS = new ErrorCode(1_009_006_000, "流程({}) 的任务({}) 已经存在分配规则");

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/BpmTaskController.java
Patch:
@@ -95,7 +95,7 @@ public CommonResult<Boolean> returnTask(@Valid @RequestBody BpmTaskReturnReqVO r
     @Operation(summary = "委派任务", description = "用于【流程详情】的【委派】按钮，和向前加签有点像，和向前加签的唯一的区别是没有单独创立任务")
     @PreAuthorize("@ss.hasPermission('bpm:task:delegate')")
     public CommonResult<Boolean> delegateTask(@Valid @RequestBody BpmTaskDelegateReqVO reqVO) {
-        taskService.delegateTask(reqVO);
+        taskService.delegateTask(reqVO,getLoginUserId());
         return success(true);
     }
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskDelegateReqVO.java
Patch:
@@ -14,9 +14,9 @@ public class BpmTaskDelegateReqVO {
     @NotEmpty(message = "任务编号不能为空")
     private String id;
 
-    @Schema(description = "接收人ID", requiredMode = Schema.RequiredMode.REQUIRED,example = "1")
-    @NotNull(message = "接收人ID不能为空")
-    private Long receiveId;
+    @Schema(description = "被委派人ID", requiredMode = Schema.RequiredMode.REQUIRED,example = "1")
+    @NotNull(message = "被委派人ID不能为空")
+    private Long delegateUserId;
 
     @Schema(description = "委派原因", requiredMode = Schema.RequiredMode.REQUIRED,example = "做不了决定，需要你先帮忙瞅瞅")
     @NotEmpty(message = "委派原因不能为空")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskService.java
Patch:
@@ -140,7 +140,8 @@ default Map<String, List<Task>> getTaskMapByProcessInstanceIds(List<String> proc
     /**
      * 将指定任务委派给其他人处理，等接收人处理后再回到原审批人手中审批
      *
-     * @param reqVO 接收人和被委派的任务编号理由参数
+     * @param reqVO  被委派人和被委派的任务编号理由参数
+     * @param userId 委派人ID
      */
-    void delegateTask(BpmTaskDelegateReqVO reqVO);
+    void delegateTask(BpmTaskDelegateReqVO reqVO, Long userId);
 }

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/transfer/PayTransferUnifiedReqDTO.java
Patch:
@@ -51,7 +51,7 @@ public class PayTransferUnifiedReqDTO {
     private String title;
 
     /**
-     * 收款方信息，转账类型不同信息不同
+     * 收款方信息，转账类型不同，收款方信息不同
      */
     @NotEmpty(message = "收款方信息 不能为空")
     private Map<String, String> payeeInfo;

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -50,6 +50,8 @@ public PayClientFactoryImpl() {
         clientClass.put(ALIPAY_APP, AlipayAppPayClient.class);
         clientClass.put(ALIPAY_PC, AlipayPcPayClient.class);
         clientClass.put(ALIPAY_BAR, AlipayBarPayClient.class);
+        // 支付包转账客户端
+        clientClass.put(ALIPAY_TRANSFER, AlipayTransferClient.class);
         // Mock 支付客户端
         clientClass.put(MOCK, MockPayClient.class);
     }

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/alipay/AbstractAlipayPayClient.java
Patch:
@@ -151,7 +151,7 @@ protected PayRefundRespDTO doUnifiedRefund(PayRefundUnifiedReqDTO reqDTO) throws
         AlipayTradeRefundResponse response = client.execute(request);
         if (!response.isSuccess()) {
             // 当出现 ACQ.SYSTEM_ERROR, 退款可能成功也可能失败。 返回 WAIT 状态. 后续 job 会轮询
-            if (Objects.equals(response.getSubCode(), "ACQ.SYSTEM_ERROR")) {
+            if (ObjectUtils.equalsAny(response.getSubCode(), "ACQ.SYSTEM_ERROR", "SYSTEM_ERROR")) {
                 return PayRefundRespDTO.waitingOf(null, reqDTO.getOutRefundNo(), response);
             }
             return PayRefundRespDTO.failureOf(response.getSubCode(), response.getSubMsg(), reqDTO.getOutRefundNo(), response);

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/ErrorCodeConstants.java
Patch:
@@ -50,6 +50,9 @@ public interface ErrorCodeConstants {
     ErrorCode TASK_TARGET_NODE_NOT_EXISTS = new ErrorCode(1_009_005_004, " 目标节点不存在");
     ErrorCode TASK_RETURN_FAIL_NO_RETURN_TASK = new ErrorCode(1_009_005_005, "回退任务失败，选择回退的节点没有需要回滚的任务！请重新选择其他任务节点");
     ErrorCode TASK_RETURN_FAIL_SOURCE_TARGET_ERROR = new ErrorCode(1_009_005_006, "回退任务失败，目标节点是在并行网关上或非同一路线上，不可跳转");
+    ErrorCode TASK_DELEGATE_APPROVE_FAIL = new ErrorCode(1_009_005_007, "任务审批失败：委派任务找不到原审批人");
+    ErrorCode TASK_DELEGATE_USER_REPEAT = new ErrorCode(1_009_005_008, "任务委派失败，委派人和当前审批人为同一人");
+    ErrorCode TASK_DELEGATE_RECEIVE_USER_NULL = new ErrorCode(1_009_005_009, "任务委派失败，接收人不存在");
 
     // ========== 流程任务分配规则 1-009-006-000 ==========
     ErrorCode TASK_ASSIGN_RULE_EXISTS = new ErrorCode(1_009_006_000, "流程({}) 的任务({}) 已经存在分配规则");

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskServiceImpl.java
Patch:
@@ -492,6 +492,9 @@ public void delegateTask(BpmTaskDelegateReqVO reqVO) {
         // 添加审批意见
         AdminUserRespDTO currentUser = adminUserApi.getUser(WebFrameworkUtils.getLoginUserId());
         AdminUserRespDTO receiveUser = adminUserApi.getUser(reqVO.getReceiveId());
+        if (receiveUser == null) {
+            throw exception(TASK_DELEGATE_RECEIVE_USER_NULL);
+        }
         String comment = String.format("[%s]将任务委派给[%s]，委派理由为:%s", currentUser.getNickname(),
                 receiveUser.getNickname(), reqVO.getReason());
         String taskId = reqVO.getId();

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/BpmTaskController.java
Patch:
@@ -78,14 +78,14 @@ public CommonResult<Boolean> updateTaskAssignee(@Valid @RequestBody BpmTaskUpdat
     @GetMapping("/get-return-list")
     @Operation(summary = "获取所有可回退的节点", description = "用于【流程详情】的【回退】按钮")
     @Parameter(name = "taskId", description = "当前任务ID", required = true)
-    @PreAuthorize("@ss.hasPermission('bpm:task:return')")
+    @PreAuthorize("@ss.hasPermission('bpm:task:update')")
     public CommonResult<List<BpmTaskSimpleRespVO>> getReturnList(@RequestParam("taskId") String taskId) {
         return success(taskService.getReturnTaskList(taskId));
     }
 
     @PutMapping("/return")
     @Operation(summary = "回退任务", description = "用于【流程详情】的【回退】按钮")
-    @PreAuthorize("@ss.hasPermission('bpm:task:return')")
+    @PreAuthorize("@ss.hasPermission('bpm:task:update')")
     public CommonResult<Boolean> returnTask(@Valid @RequestBody BpmTaskReturnReqVO reqVO) {
         taskService.returnTask(reqVO);
         return success(true);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskReturnReqVO.java
Patch:
@@ -14,10 +14,11 @@ public class BpmTaskReturnReqVO {
     private String id;
 
     @Schema(description = "回退到的任务 Key", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
-    @NotEmpty(message = "回退到的任务Key不能为空")
+    @NotEmpty(message = "回退到的任务 Key 不能为空")
     private String targetDefinitionKey;
 
-    @Schema(description = "回退意见", example = "")
+    @Schema(description = "回退意见", requiredMode = Schema.RequiredMode.REQUIRED, example = "我就是想驳回")
+    @NotEmpty(message = "回退意见不能为空")
     private String reason;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -140,8 +140,7 @@ default BpmMessageSendWhenTaskCreatedReqDTO convert(ProcessInstance processInsta
         return reqDTO;
     }
 
-    @Mapping(source = "taskDefinitionKey", target = "id")
-    default List<BpmTaskSimpleRespVO> convertList(List<FlowElement> elementList) {
+    default List<BpmTaskSimpleRespVO> convertList(List<? extends FlowElement> elementList) {
         return CollectionUtils.convertList(elementList, element -> new BpmTaskSimpleRespVO()
                 .setName(element.getName())
                 .setDefinitionKey(element.getId()));

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.PageUtils;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionListReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageItemRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageReqVO;
@@ -200,7 +200,7 @@ public boolean isProcessDefinitionEquals(@Valid BpmProcessDefinitionCreateReqDTO
         BpmnModel newModel = buildBpmnModel(createReqDTO.getBpmnBytes());
         BpmnModel oldModel = getBpmnModel(oldProcessDefinition.getId());
         // 对比字节变化
-        if (!FlowableUtils.equals(oldModel, newModel)) {
+        if (!BpmnModelUtils.equals(oldModel, newModel)) {
             return false;
         }
         // 最终发现都一致，则返回 true

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmTaskAssignRuleServiceImpl.java
Patch:
@@ -7,7 +7,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
 import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
-import cn.iocoder.yudao.framework.flowable.core.util.FlowableUtils;
+import cn.iocoder.yudao.framework.flowable.core.util.BpmnModelUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleCreateReqVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule.BpmTaskAssignRuleUpdateReqVO;
@@ -114,7 +114,7 @@ public List<BpmTaskAssignRuleRespVO> getTaskAssignRuleList(String modelId, Strin
             return Collections.emptyList();
         }
         // 获得用户任务，只有用户任务才可以设置分配规则
-        List<UserTask> userTasks = FlowableUtils.getBpmnModelElements(model, UserTask.class);
+        List<UserTask> userTasks = BpmnModelUtils.getBpmnModelElements(model, UserTask.class);
         if (CollUtil.isEmpty(userTasks)) {
             return Collections.emptyList();
         }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskService.java
Patch:
@@ -125,7 +125,7 @@ default Map<String, List<Task>> getTaskMapByProcessInstanceIds(List<String> proc
     /**
      * 获取当前任务的可回退的流程集合
      *
-     * @param taskId 当前的任务ID
+     * @param taskId 当前的任务 ID
      * @return 可以回退的节点列表
      */
     List<BpmTaskSimpleRespVO> getReturnTaskList(String taskId);

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -217,10 +217,10 @@ void validateMobileUnique(Long id, String mobile) {
         }
         // 如果 id 为空，说明不用比较是否为相同 id 的用户
         if (id == null) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
         if (!user.getId().equals(id)) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/sensitiveword/SensitiveWordServiceImpl.java
Patch:
@@ -46,7 +46,7 @@ public class SensitiveWordServiceImpl implements SensitiveWordService {
     /**
      * 是否开启敏感词功能
      */
-    private static final Boolean ENABLED = false;
+    public static Boolean ENABLED = false;
 
     /**
      * 敏感词列表缓存

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -217,10 +217,10 @@ void validateMobileUnique(Long id, String mobile) {
         }
         // 如果 id 为空，说明不用比较是否为相同 id 的用户
         if (id == null) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
         if (!user.getId().equals(id)) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
     }
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -217,10 +217,10 @@ void validateMobileUnique(Long id, String mobile) {
         }
         // 如果 id 为空，说明不用比较是否为相同 id 的用户
         if (id == null) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
         if (!user.getId().equals(id)) {
-            throw exception(USER_MOBILE_USED);
+            throw exception(USER_MOBILE_USED, mobile);
         }
     }
 

File: yudao-module-bpm/yudao-module-bpm-api/src/main/java/cn/iocoder/yudao/module/bpm/enums/ErrorCodeConstants.java
Patch:
@@ -46,10 +46,10 @@ public interface ErrorCodeConstants {
     ErrorCode TASK_COMPLETE_FAIL_NOT_EXISTS = new ErrorCode(1_009_005_000, "审批任务失败，原因：该任务不处于未审批");
     ErrorCode TASK_COMPLETE_FAIL_ASSIGN_NOT_SELF = new ErrorCode(1_009_005_001, "审批任务失败，原因：该任务的审批人不是你");
     ErrorCode TASK_NOT_EXISTS = new ErrorCode(1_009_005_002, "流程任务不存在");
-    ErrorCode TASK_IS_NOT_ACTIVITY = new ErrorCode(1_009_005_003, "当前任务不属于活动状态，不能操作");
-    ErrorCode TASK_SOURCE_TARGET_ERROR = new ErrorCode(1_009_005_004, " 当前节点相对于目标节点，不属于串行关系，无法回退");
+    ErrorCode TASK_IS_PENDING = new ErrorCode(1_009_005_003, "当前任务处于挂起状态，不能操作");
+    ErrorCode TASK_SOURCE_TARGET_ERROR = new ErrorCode(1_009_005_004, "目标节点是在并行网关上或非同一路线上，不可跳转");
     ErrorCode TASK_TARGET_NODE_NOT_EXISTS = new ErrorCode(1_009_005_005, " 目标节点不存在");
-    ErrorCode TASK_ROLLBACK_FAIL = new ErrorCode(1_009_005_006, "回退任务失败，选择回退的节点没有需要回滚的任务！请重新选择其他任务节点");
+    ErrorCode TASK_RETURN_FAIL = new ErrorCode(1_009_005_006, "回退任务失败，选择回退的节点没有需要回滚的任务！请重新选择其他任务节点");
     // ========== 流程任务分配规则 1-009-006-000 ==========
     ErrorCode TASK_ASSIGN_RULE_EXISTS = new ErrorCode(1_009_006_000, "流程({}) 的任务({}) 已经存在分配规则");
     ErrorCode TASK_ASSIGN_RULE_NOT_EXISTS = new ErrorCode(1_009_006_001, "流程任务分配规则不存在");

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskReturnReqVO.java
Patch:
@@ -7,17 +7,17 @@
 
 @Schema(description = "管理后台 - 回退流程任务的 Request VO")
 @Data
-public class BpmTaskRollbackReqVO {
+public class BpmTaskReturnReqVO {
 
     @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "任务编号不能为空")
     private String id;
 
-    @Schema(description = "回退到的任务Key", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
+    @Schema(description = "回退到的任务 Key", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotEmpty(message = "回退到的任务Key不能为空")
     private String targetDefinitionKey;
 
-    @Schema(description = "回退意见")
+    @Schema(description = "回退意见", example = "")
     private String reason;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskSimpleRespVO.java
Patch:
@@ -8,10 +8,10 @@
  */
 @Schema(description = "管理后台 - 流程任务的 可回退的节点 Response VO")
 @Data
-public class BpmTaskRollbackRespVO {
+public class BpmTaskSimpleRespVO {
 
     @Schema(description = "任务定义的标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "Activity_one")
-    private String taskDefinitionKey;
+    private String definitionKey;
 
     @Schema(description = "任务名词", requiredMode = Schema.RequiredMode.REQUIRED, example = "经理审批")
     private String name;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/api/property/ProductPropertyValueApiImpl.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.product.api.property;
 
 import cn.iocoder.yudao.module.product.api.property.dto.ProductPropertyValueDetailRespDTO;
-import cn.iocoder.yudao.module.product.convert.propertyvalue.ProductPropertyValueConvert;
+import cn.iocoder.yudao.module.product.convert.property.ProductPropertyValueConvert;
 import cn.iocoder.yudao.module.product.service.property.ProductPropertyValueService;
 import org.springframework.stereotype.Service;
 import org.springframework.validation.annotation.Validated;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/property/ProductPropertyValueConvert.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.product.convert.propertyvalue;
+package cn.iocoder.yudao.module.product.convert.property;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/package-info.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * trade 模块，主要实现交易相关功能
+ * product 模块，主要实现交易相关功能
  * 例如：订单、退款、购物车等功能。
  *
  * 1. Controller URL：以 /product/ 开头，避免和其它 Module 冲突

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/property/ProductPropertyValueServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.iocoder.yudao.module.product.controller.admin.property.vo.value.ProductPropertyValueCreateReqVO;
 import cn.iocoder.yudao.module.product.controller.admin.property.vo.value.ProductPropertyValuePageReqVO;
 import cn.iocoder.yudao.module.product.controller.admin.property.vo.value.ProductPropertyValueUpdateReqVO;
-import cn.iocoder.yudao.module.product.convert.propertyvalue.ProductPropertyValueConvert;
+import cn.iocoder.yudao.module.product.convert.property.ProductPropertyValueConvert;
 import cn.iocoder.yudao.module.product.dal.dataobject.property.ProductPropertyDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.property.ProductPropertyValueDO;
 import cn.iocoder.yudao.module.product.dal.mysql.property.ProductPropertyValueMapper;

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/bargain/BargainActivityApi.java
Patch:
@@ -11,7 +11,7 @@ public interface BargainActivityApi {
      * 更新砍价活动库存
      *
      * @param id 砍价活动编号
-     * @param count      购买数量
+     * @param count 购买数量
      */
     void updateBargainActivityStock(Long id, Integer count);
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/seckill/SeckillActivityApi.java
Patch:
@@ -7,14 +7,13 @@
  */
 public interface SeckillActivityApi {
 
-    // TODO @puhui999：activityId 改成 id 好点哈；
     /**
      * 更新秒杀库存
      *
-     * @param activityId 活动编号
+     * @param id 活动编号
      * @param skuId      sku 编号
      * @param count      数量
      */
-    void updateSeckillStock(Long activityId, Long skuId, Integer count);
+    void updateSeckillStock(Long id, Long skuId, Integer count);
 
 }

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -56,7 +56,6 @@ public interface ErrorCodeConstants {
     ErrorCode SECKILL_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED_OR_END = new ErrorCode(1013008004, "秒杀活动未关闭或未结束，不能删除");
     ErrorCode SECKILL_ACTIVITY_CLOSE_FAIL_STATUS_CLOSED = new ErrorCode(1013008005, "秒杀活动已关闭，不能重复关闭");
     ErrorCode SECKILL_ACTIVITY_UPDATE_STOCK_FAIL = new ErrorCode(1013008006, "秒杀失败，原因秒杀库存不足");
-    ErrorCode SECKILL_ACTIVITY_FAIL_STATUS_CLOSED = new ErrorCode(1013008007, "秒杀活动已关闭");
 
     // ========== 秒杀时段 1013009000 ==========
     ErrorCode SECKILL_CONFIG_NOT_EXISTS = new ErrorCode(1013009000, "秒杀时段不存在");

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/common/PromotionTypeEnum.java
Patch:
@@ -22,7 +22,7 @@ public enum PromotionTypeEnum implements IntArrayValuable {
     DISCOUNT_ACTIVITY(4, "限时折扣"),
     REWARD_ACTIVITY(5, "满减送"),
 
-    MEMBER(6, "会员折扣"),
+    MEMBER_LEVEL(6, "会员折扣"),
     COUPON(7, "优惠劵"),
     POINT(8, "积分")
     ;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/api/seckill/SeckillActivityApiImpl.java
Patch:
@@ -17,8 +17,8 @@ public class SeckillActivityApiImpl implements SeckillActivityApi {
     private SeckillActivityService activityService;
 
     @Override
-    public void updateSeckillStock(Long activityId, Long skuId, Integer count) {
-        activityService.updateSeckillStock(activityId, skuId, count);
+    public void updateSeckillStock(Long id, Long skuId, Integer count) {
+        activityService.updateSeckillStock(id, skuId, count);
     }
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/AppBargainActivityController.java
Patch:
@@ -23,6 +23,7 @@
 import javax.annotation.Resource;
 import java.util.List;
 
+import static cn.hutool.core.util.ObjectUtil.defaultIfNull;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;
 
@@ -39,7 +40,7 @@ public class AppBargainActivityController {
     @GetMapping("/page")
     @Operation(summary = "获得砍价活动分页")
     public CommonResult<PageResult<AppBargainActivityRespVO>> getBargainActivityPage(PageParam pageReqVO) {
-        PageResult<BargainActivityDO> result = bargainActivityService.getBargainActivityPageForApp(pageReqVO);
+        PageResult<BargainActivityDO> result = bargainActivityService.getBargainActivityPage(pageReqVO);
         if (CollUtil.isEmpty(result.getList())) {
             return success(PageResult.empty(result.getTotal()));
         }
@@ -54,7 +55,7 @@ public CommonResult<PageResult<AppBargainActivityRespVO>> getBargainActivityPage
     @Parameter(name = "count", description = "需要展示的数量", example = "6")
     public CommonResult<List<AppBargainActivityRespVO>> getBargainActivityList(
             @RequestParam(name = "count", defaultValue = "6") Integer count) {
-        List<BargainActivityDO> list = bargainActivityService.getBargainActivityListForApp(count);
+        List<BargainActivityDO> list = bargainActivityService.getBargainActivityListByCount(defaultIfNull(count, 6));
         if (CollUtil.isEmpty(list)) {
             return success(BargainActivityConvert.INSTANCE.convertAppList(list));
         }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/combination/vo/activity/AppCombinationActivityRespVO.java
Patch:
@@ -28,7 +28,6 @@ public class AppCombinationActivityRespVO {
     private Integer marketPrice;
 
     @Schema(description = "拼团金额，单位：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "100")
-    // 从拼团商品里取最低价
     private Integer combinationPrice;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/seckill/vo/activity/AppSeckillActivityRespVO.java
Patch:
@@ -25,6 +25,9 @@ public class AppSeckillActivityRespVO {
     // 从 SPU 的 marketPrice 读取
     private Integer marketPrice;
 
+    @Schema(description = "秒杀活动状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
+    private Integer status;
+
     @Schema(description = "秒杀库存（剩余）", requiredMode = Schema.RequiredMode.REQUIRED, example = "100")
     private Integer stock;
     @Schema(description = "秒杀库存（总共）", requiredMode = Schema.RequiredMode.REQUIRED, example = "200")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillActivityMapper.java
Patch:
@@ -41,7 +41,7 @@ default List<SeckillActivityDO> selectListByStatus(Integer status) {
      * @param count 扣减的库存数量
      * @return 影响的行数
      */
-    default int updateActivityStock(Long id, int count) {
+    default int updateStock(Long id, int count) {
         return update(null, new LambdaUpdateWrapper<SeckillActivityDO>()
                 .eq(SeckillActivityDO::getId, id)
                 .gt(SeckillActivityDO::getTotalStock, 0)

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/TradeAfterSaleController.java
Patch:
@@ -8,11 +8,11 @@
 import cn.iocoder.yudao.module.member.api.user.dto.MemberUserRespDTO;
 import cn.iocoder.yudao.module.pay.api.notify.dto.PayRefundNotifyReqDTO;
 import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.*;
+import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.log.TradeAfterSaleLogRespVO;
 import cn.iocoder.yudao.module.trade.convert.aftersale.TradeAfterSaleConvert;
 import cn.iocoder.yudao.module.trade.dal.dataobject.aftersale.TradeAfterSaleDO;
 import cn.iocoder.yudao.module.trade.dal.dataobject.order.TradeOrderDO;
 import cn.iocoder.yudao.module.trade.dal.dataobject.order.TradeOrderItemDO;
-import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogRespDTO;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.service.AfterSaleLogService;
 import cn.iocoder.yudao.module.trade.service.aftersale.TradeAfterSaleService;
 import cn.iocoder.yudao.module.trade.service.order.TradeOrderQueryService;
@@ -87,13 +87,13 @@ public CommonResult<TradeAfterSaleDetailRespVO> getOrderDetail(@RequestParam("id
         // 拼接数据
         MemberUserRespDTO user = memberUserApi.getUser(afterSale.getUserId());
         // 获取售后日志
-        List<TradeAfterSaleLogRespDTO> logs = afterSaleLogService.getLog(afterSale.getId());
+        List<TradeAfterSaleLogRespVO> logs = afterSaleLogService.getLog(afterSale.getId());
         // TODO 方便测试看效果，review 后移除
         if (logs == null) {
             logs = new ArrayList<>();
         }
         for (int i = 1; i <= 6; i++) {
-            TradeAfterSaleLogRespDTO respVO = new TradeAfterSaleLogRespDTO();
+            TradeAfterSaleLogRespVO respVO = new TradeAfterSaleLogRespVO();
             respVO.setId((long) i);
             respVO.setUserId((long) i);
             respVO.setUserType(i % 2 == 0 ? 2 : 1);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/AppTradeOrderController.java
Patch:
@@ -156,7 +156,7 @@ public CommonResult<Boolean> cancelOrder(@RequestParam("id") Long id) {
     @Operation(summary = "删除交易订单")
     @Parameter(name = "id", description = "交易订单编号")
     public CommonResult<Boolean> deleteOrder(@RequestParam("id") Long id) {
-        // TODO @芋艿：未实现，mock 用
+        tradeOrderUpdateService.deleteOrder(getLoginUserId(), id);
         return success(true);
     }
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementRespVO.java
Patch:
@@ -82,6 +82,9 @@ public static class Price {
         @Schema(description = "积分抵扣的金额，单位：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "50")
         private Integer pointPrice;
 
+        @Schema(description = "VIP 减免金额，单位：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "30")
+        private Integer vipPrice;
+
         @Schema(description = "实际支付金额（总），单位：分", requiredMode = Schema.RequiredMode.REQUIRED, example = "450")
         private Integer payPrice;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -65,6 +65,7 @@ public interface TradeOrderConvert {
             @Mapping(source = "calculateRespBO.price.deliveryPrice", target = "deliveryPrice"),
             @Mapping(source = "calculateRespBO.price.couponPrice", target = "couponPrice"),
             @Mapping(source = "calculateRespBO.price.pointPrice", target = "pointPrice"),
+            @Mapping(source = "calculateRespBO.price.vipPrice", target = "vipPrice"),
             @Mapping(source = "calculateRespBO.price.payPrice", target = "payPrice")
     })
     TradeOrderDO convert(Long userId, String userIp, AppTradeOrderCreateReqVO createReqVO,

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/framework/aftersalelog/core/service/AfterSaleLogService.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.trade.framework.aftersalelog.core.service;
 
 
+import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.log.TradeAfterSaleLogRespVO;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogCreateReqDTO;
-import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogRespDTO;
 
 import java.util.List;
 
@@ -29,6 +29,6 @@ public interface AfterSaleLogService {
      * @param afterSaleId 售后编号
      * @return 售后日志
      */
-    List<TradeAfterSaleLogRespDTO> getLog(Long afterSaleId);
+    List<TradeAfterSaleLogRespVO> getLog(Long afterSaleId);
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/framework/order/core/aop/TradeOrderLogAspect.java
Patch:
@@ -63,6 +63,9 @@ public void doAfterReturning(JoinPoint joinPoint, TradeOrderLog orderLog) {
             Long userId = getUserId();
             // 1.2 订单信息
             Long orderId = ORDER_ID.get();
+            if (orderId == null) { // 如果未设置，只有注解，说明不需要记录订单日志
+                return;
+            }
             Integer beforeStatus = BEFORE_STATUS.get();
             Integer afterStatus = AFTER_STATUS.get();
             Map<String, Object> exts = ObjectUtil.defaultIfNull(EXTS.get(), emptyMap());

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/aftersale/TradeAfterSaleServiceImpl.java
Patch:
@@ -11,6 +11,7 @@
 import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.TradeAfterSaleDisagreeReqVO;
 import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.TradeAfterSalePageReqVO;
 import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.TradeAfterSaleRefuseReqVO;
+import cn.iocoder.yudao.module.trade.controller.admin.aftersale.vo.log.TradeAfterSaleLogRespVO;
 import cn.iocoder.yudao.module.trade.controller.app.aftersale.vo.AppTradeAfterSaleCreateReqVO;
 import cn.iocoder.yudao.module.trade.controller.app.aftersale.vo.AppTradeAfterSaleDeliveryReqVO;
 import cn.iocoder.yudao.module.trade.convert.aftersale.TradeAfterSaleConvert;
@@ -26,7 +27,6 @@
 import cn.iocoder.yudao.module.trade.enums.order.TradeOrderItemAfterSaleStatusEnum;
 import cn.iocoder.yudao.module.trade.enums.order.TradeOrderStatusEnum;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogCreateReqDTO;
-import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.dto.TradeAfterSaleLogRespDTO;
 import cn.iocoder.yudao.module.trade.framework.aftersalelog.core.service.AfterSaleLogService;
 import cn.iocoder.yudao.module.trade.framework.order.config.TradeOrderProperties;
 import cn.iocoder.yudao.module.trade.service.order.TradeOrderQueryService;
@@ -449,8 +449,9 @@ public void createLog(TradeAfterSaleLogCreateReqDTO logDTO) {
         }
     }
 
+    // TODO @puhui999：应该返回 do 哈。
     @Override
-    public List<TradeAfterSaleLogRespDTO> getLog(Long afterSaleId) {
+    public List<TradeAfterSaleLogRespVO> getLog(Long afterSaleId) {
         // TODO 不熟悉流程先这么滴
         List<TradeAfterSaleLogDO> saleLogDOs = tradeAfterSaleLogMapper.selectList(TradeAfterSaleLogDO::getAfterSaleId, afterSaleId);
         return TradeAfterSaleConvert.INSTANCE.convertList(saleLogDOs);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderQueryServiceImpl.java
Patch:
@@ -106,7 +106,7 @@ public List<ExpressTrackRespDTO> getExpressTrackList(Long id, Long userId) {
         if (order == null) {
             throw exception(ORDER_NOT_FOUND);
         }
-
+        // 查询物流
         return getExpressTrackList(order);
     }
 
@@ -117,7 +117,7 @@ public List<ExpressTrackRespDTO> getExpressTrackList(Long id) {
         if (order == null) {
             throw exception(ORDER_NOT_FOUND);
         }
-
+        // 查询物流
         return getExpressTrackList(order);
     }
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/handler/TradeOrderHandler.java
Patch:
@@ -24,9 +24,12 @@ public interface TradeOrderHandler {
      */
     void afterOrderCreate(TradeAfterOrderCreateReqBO reqBO);
 
+    // TODO @puhui999：这个搞成订单取消
     /**
      * 回滚
      */
     void rollback();
 
+    // TODO @puhui999：再搞个订单项取消哈
+
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradePriceCalculator.java
Patch:
@@ -13,6 +13,7 @@
  */
 public interface TradePriceCalculator {
 
+    int ORDER_MEMBER_LEVEL = 5;
     int ORDER_DISCOUNT_ACTIVITY = 10;
     int ORDER_REWARD_ACTIVITY = 20;
     int ORDER_COUPON = 30;

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradeCouponPriceCalculatorTest.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionDiscountTypeEnum;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionProductScopeEnum;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionTypeEnum;
+import cn.iocoder.yudao.module.trade.enums.order.TradeOrderTypeEnum;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateReqBO;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
 import org.junit.jupiter.api.Test;
@@ -47,6 +48,7 @@ public void testCalculate() {
                         new TradePriceCalculateReqBO.Item().setSkuId(40L).setCount(5).setSelected(false) // 匹配优惠劵，但是未选中
                     ));
         TradePriceCalculateRespBO result = new TradePriceCalculateRespBO()
+                .setType(TradeOrderTypeEnum.NORMAL.getType())
                 .setPrice(new TradePriceCalculateRespBO.Price())
                 .setPromotions(new ArrayList<>())
                 .setItems(asList(

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradeDiscountActivityPriceCalculatorTest.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.module.promotion.api.discount.dto.DiscountProductRespDTO;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionDiscountTypeEnum;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionTypeEnum;
+import cn.iocoder.yudao.module.trade.enums.order.TradeOrderTypeEnum;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateReqBO;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
 import org.junit.jupiter.api.Test;
@@ -42,6 +43,7 @@ public void testCalculate() {
                         new TradePriceCalculateReqBO.Item().setSkuId(20L).setCount(3).setSelected(false) // 匹配活动，但未选中
                 ));
         TradePriceCalculateRespBO result = new TradePriceCalculateRespBO()
+                .setType(TradeOrderTypeEnum.NORMAL.getType())
                 .setPrice(new TradePriceCalculateRespBO.Price())
                 .setPromotions(new ArrayList<>())
                 .setItems(asList(

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/price/calculator/TradeRewardActivityPriceCalculatorTest.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.module.promotion.api.reward.dto.RewardActivityMatchRespDTO;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionConditionTypeEnum;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionTypeEnum;
+import cn.iocoder.yudao.module.trade.enums.order.TradeOrderTypeEnum;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateReqBO;
 import cn.iocoder.yudao.module.trade.service.price.bo.TradePriceCalculateRespBO;
 import org.junit.jupiter.api.Test;
@@ -44,6 +45,7 @@ public void testCalculate_match() {
                         new TradePriceCalculateReqBO.Item().setSkuId(30L).setCount(4).setSelected(true) // 匹配活动 2
                 ));
         TradePriceCalculateRespBO result = new TradePriceCalculateRespBO()
+                .setType(TradeOrderTypeEnum.NORMAL.getType())
                 .setPrice(new TradePriceCalculateRespBO.Price())
                 .setPromotions(new ArrayList<>())
                 .setItems(asList(
@@ -157,6 +159,7 @@ public void testCalculate_notMatch() {
                         new TradePriceCalculateReqBO.Item().setSkuId(30L).setCount(4).setSelected(true)
                 ));
         TradePriceCalculateRespBO result = new TradePriceCalculateRespBO()
+                .setType(TradeOrderTypeEnum.NORMAL.getType())
                 .setPrice(new TradePriceCalculateRespBO.Price())
                 .setPromotions(new ArrayList<>())
                 .setItems(asList(

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/convert/level/MemberLevelConvert.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.member.convert.level;
 
+import cn.iocoder.yudao.module.member.api.level.dto.MemberLevelRespDTO;
 import cn.iocoder.yudao.module.member.controller.admin.level.vo.level.MemberLevelCreateReqVO;
 import cn.iocoder.yudao.module.member.controller.admin.level.vo.level.MemberLevelRespVO;
 import cn.iocoder.yudao.module.member.controller.admin.level.vo.level.MemberLevelSimpleRespVO;
@@ -33,4 +34,6 @@ public interface MemberLevelConvert {
 
     List<AppMemberLevelRespVO> convertList02(List<MemberLevelDO> list);
 
+    MemberLevelRespDTO convert02(MemberLevelDO bean);
+
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/CommonResult.java
Patch:
@@ -41,7 +41,7 @@ public class CommonResult<T> implements Serializable {
      * 因为 A 方法返回的 CommonResult 对象，不满足调用其的 B 方法的返回，所以需要进行转换。
      *
      * @param result 传入的 result 对象
-     * @param <T> 返回的泛型
+     * @param <T>    返回的泛型
      * @return 新的 CommonResult 对象
      */
     public static <T> CommonResult<T> error(CommonResult<?> result) {

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/validation/InEnum.java
Patch:
@@ -17,7 +17,7 @@
 @Retention(RetentionPolicy.RUNTIME)
 @Documented
 @Constraint(
-        validatedBy = InEnumValidator.class
+        validatedBy = {InEnumValidator.class, InEnumCollectionValidator.class}
 )
 public @interface InEnum {
 

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/db/DataPermissionDatabaseInterceptor.java
Patch:
@@ -5,7 +5,6 @@
 import cn.iocoder.yudao.framework.datapermission.core.rule.DataPermissionRule;
 import cn.iocoder.yudao.framework.datapermission.core.rule.DataPermissionRuleFactory;
 import cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils;
-import com.alibaba.ttl.TransmittableThreadLocal;
 import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;
 import com.baomidou.mybatisplus.core.toolkit.PluginUtils;
 import com.baomidou.mybatisplus.extension.parser.JsqlParserSupport;
@@ -508,6 +507,9 @@ private Expression buildDataPermissionExpression(Table table) {
             // 单条规则的条件
             String tableName = MyBatisUtils.getTableName(table);
             Expression oneExpress = rule.getExpression(tableName, table.getAlias());
+            if (oneExpress == null){
+                continue;
+            }
             // 拼接到 allExpression 中
             allExpression = allExpression == null ? oneExpress
                     : new AndExpression(allExpression, oneExpress);

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/alipay/AbstractAlipayPayClient.java
Patch:
@@ -27,6 +27,7 @@
 import com.alipay.api.response.AlipayTradeFastpayRefundQueryResponse;
 import com.alipay.api.response.AlipayTradeQueryResponse;
 import com.alipay.api.response.AlipayTradeRefundResponse;
+import lombok.Getter;
 import lombok.SneakyThrows;
 import lombok.extern.slf4j.Slf4j;
 
@@ -47,6 +48,7 @@
 @Slf4j
 public abstract class AbstractAlipayPayClient extends AbstractPayClient<AlipayPayClientConfig> {
 
+    @Getter // 仅用于单测场景
     protected DefaultAlipayClient client;
 
     public AbstractAlipayPayClient(Long channelId, String channelCode, AlipayPayClientConfig config) {

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/mock/MockPayClient.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundUnifiedReqDTO;
 import cn.iocoder.yudao.framework.pay.core.client.impl.AbstractPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.NonePayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.enums.channel.PayChannelEnum;
 
 import java.time.LocalDateTime;
@@ -17,11 +18,11 @@
  *
  * @author jason
  */
-public class MockPayClient extends AbstractPayClient<MockPayClientConfig> {
+public class MockPayClient extends AbstractPayClient<NonePayClientConfig> {
 
     private static final String MOCK_RESP_SUCCESS_DATA = "MOCK_SUCCESS";
 
-    public MockPayClient(Long channelId, MockPayClientConfig config) {
+    public MockPayClient(Long channelId, NonePayClientConfig config) {
         super(channelId, PayChannelEnum.MOCK.getCode(), config);
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/weixin/AbstractWxPayClient.java
Patch:
@@ -56,7 +56,7 @@ public AbstractWxPayClient(Long channelId, String channelCode, WxPayClientConfig
     protected void doInit(String tradeType) {
         // 创建 config 配置
         WxPayConfig payConfig = new WxPayConfig();
-        BeanUtil.copyProperties(config, payConfig, "keyContent");
+        BeanUtil.copyProperties(config, payConfig, "keyContent", "privateKeyContent", "privateCertContent");
         payConfig.setTradeType(tradeType);
         // weixin-pay-java 无法设置内容，只允许读取文件，所以这里要创建临时文件来解决
         if (Base64.isBase64(config.getKeyContent())) {

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/core/util/WebFrameworkUtils.java
Patch:
@@ -1,7 +1,6 @@
 package cn.iocoder.yudao.framework.web.core.util;
 
 import cn.hutool.core.util.NumberUtil;
-import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.web.config.WebProperties;
@@ -89,10 +88,10 @@ public static Integer getLoginUserType(HttpServletRequest request) {
             return userType;
         }
         // 2. 其次，基于 URL 前缀的约定
-        if (request.getRequestURI().startsWith(properties.getAdminApi().getPrefix())) {
+        if (request.getServletPath().startsWith(properties.getAdminApi().getPrefix())) {
             return UserTypeEnum.ADMIN.getValue();
         }
-        if (request.getRequestURI().startsWith(properties.getAppApi().getPrefix())) {
+        if (request.getServletPath().startsWith(properties.getAppApi().getPrefix())) {
             return UserTypeEnum.MEMBER.getValue();
         }
         return null;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmActivityConvert.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.bpm.convert.task;
 
+import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.activity.BpmActivityRespVO;
 import org.flowable.engine.history.HistoricActivityInstance;
 import org.mapstruct.Mapper;
@@ -14,7 +15,7 @@
  *
  * @author 芋道源码
  */
-@Mapper
+@Mapper(uses = DateUtils.class)
 public interface BpmActivityConvert {
 
     BpmActivityConvert INSTANCE = Mappers.getMapper(BpmActivityConvert.class);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmProcessInstanceConvert.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.bpm.convert.task;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
+import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstancePageItemRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.BpmProcessInstanceRespVO;
@@ -28,7 +29,7 @@
  *
  * @author 芋道源码
  */
-@Mapper
+@Mapper(uses = DateUtils.class)
 public interface BpmProcessInstanceConvert {
 
     BpmProcessInstanceConvert INSTANCE = Mappers.getMapper(BpmProcessInstanceConvert.class);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/JobLogController.java
Patch:
@@ -4,6 +4,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
 import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
+import cn.iocoder.yudao.framework.operatelog.core.util.OperateLogUtils;
 import cn.iocoder.yudao.module.infra.controller.admin.job.vo.log.JobLogExcelVO;
 import cn.iocoder.yudao.module.infra.controller.admin.job.vo.log.JobLogExportReqVO;
 import cn.iocoder.yudao.module.infra.controller.admin.job.vo.log.JobLogPageReqVO;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/ProductCommentController.java
Patch:
@@ -51,7 +51,7 @@ public CommonResult<Boolean> commentReply(@Valid @RequestBody ProductCommentRepl
         return success(true);
     }
 
-    @PutMapping("/create")
+    @PostMapping("/create")
     @Operation(summary = "添加自评")
     @PreAuthorize("@ss.hasPermission('product:comment:update')")
     public CommonResult<Boolean> createComment(@Valid @RequestBody ProductCommentCreateReqVO createReqVO) {

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentBaseVO.java
Patch:
@@ -11,11 +11,9 @@
 public class ProductCommentBaseVO {
 
     @Schema(description = "评价人", requiredMode = Schema.RequiredMode.REQUIRED, example = "16868")
-    @NotNull(message = "评价人不能为空")
     private Long userId;
 
     @Schema(description = "评价订单项", requiredMode = Schema.RequiredMode.REQUIRED, example = "19292")
-    @NotNull(message = "评价订单项不能为空")
     private Long orderItemId;
 
     @Schema(description = "评价人名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "小姑凉")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/sku/vo/ProductSkuBaseVO.java
Patch:
@@ -51,10 +51,10 @@ public class ProductSkuBaseVO {
     private Double volume;
 
     @Schema(description = "一级分销的佣金，单位：分", example = "199")
-    private Integer subCommissionFirstPrice;
+    private Integer firstBrokerageRecord;
 
     @Schema(description = "二级分销的佣金，单位：分", example = "19")
-    private Integer subCommissionSecondPrice;
+    private Integer secondBrokerageRecord;
 
     @Schema(description = "属性数组")
     private List<Property> properties;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/sku/ProductSkuConvert.java
Patch:
@@ -5,7 +5,6 @@
 import cn.iocoder.yudao.module.product.api.sku.dto.ProductSkuRespDTO;
 import cn.iocoder.yudao.module.product.api.sku.dto.ProductSkuUpdateStockReqDTO;
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuCreateOrUpdateReqVO;
-import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuOptionRespVO;
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuRespVO;
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
 import org.mapstruct.Mapper;
@@ -44,8 +43,6 @@ default List<ProductSkuDO> convertList06(List<ProductSkuCreateOrUpdateReqVO> lis
 
     List<ProductSkuRespDTO> convertList04(List<ProductSkuDO> list);
 
-    List<ProductSkuOptionRespVO> convertList05(List<ProductSkuDO> skus);
-
     /**
      * 获得 SPU 的库存变化 Map
      *

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/sku/ProductSkuDO.java
Patch:
@@ -81,11 +81,11 @@ public class ProductSkuDO extends BaseDO {
     /**
      * 一级分销的佣金，单位：分
      */
-    private Integer subCommissionFirstPrice;
+    private Integer firstBrokerageRecord;
     /**
      * 二级分销的佣金，单位：分
      */
-    private Integer subCommissionSecondPrice;
+    private Integer secondBrokerageRecord;
 
     // ========== 营销相关字段 =========
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/spu/ProductSpuServiceImpl.java
Patch:
@@ -110,8 +110,9 @@ private void initSpuFromSkus(ProductSpuDO spu, List<ProductSkuCreateOrUpdateReqV
         spu.setMarketPrice(getMinValue(skus, ProductSkuCreateOrUpdateReqVO::getMarketPrice));
         // sku 单价最低的商品的成本价格
         spu.setCostPrice(getMinValue(skus, ProductSkuCreateOrUpdateReqVO::getCostPrice));
-        // sku 单价最低的商品的条形码
-        spu.setBarCode(getMinValue(skus, ProductSkuCreateOrUpdateReqVO::getBarCode));
+        // sku 单价最低的商品的条形码 TODO 芋艿：条形码字段，是不是可以删除
+        spu.setBarCode("");
+//        spu.setBarCode(getMinValue(skus, ProductSkuCreateOrUpdateReqVO::getBarCode));
         // skus 库存总数
         spu.setStock(getSumValue(skus, ProductSkuCreateOrUpdateReqVO::getStock, Integer::sum));
         // 若是 spu 已有状态则不处理

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/coupon/dto/CouponRespDTO.java
Patch:
@@ -71,9 +71,9 @@ public class CouponRespDTO {
      */
     private Integer productScope;
     /**
-     * 商品 SPU 编号的数组
+     * 商品范围编号的数组
      */
-    private List<Long> productSpuIds;
+    private List<Long> productScopeValues;
     // ========== 使用规则 END ==========
 
     // ========== 使用效果 BEGIN ==========

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/common/PromotionProductScopeEnum.java
Patch:
@@ -15,8 +15,9 @@
 @AllArgsConstructor
 public enum PromotionProductScopeEnum implements IntArrayValuable {
 
-    ALL(1, "全部商品参与"),
-    SPU(2, "指定商品参与"),
+    ALL(1, "通用卷"), // 全部商品
+    SPU(2, "商品卷"), // 指定商品
+    CATEGORY(3, "品类卷"), // 指定商品
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(PromotionProductScopeEnum::getScope).toArray();

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/coupon/CouponTakeTypeEnum.java
Patch:
@@ -15,8 +15,9 @@
 @Getter
 public enum CouponTakeTypeEnum implements IntArrayValuable {
 
-    BY_USER(1, "直接领取"), // 用户可在首页、每日领劵直接领取
-    BY_ADMIN(2, "指定发放"), // 后台指定会员赠送优惠劵
+    USER(1, "直接领取"), // 用户可在首页、每日领劵直接领取
+    ADMIN(2, "指定发放"), // 后台指定会员赠送优惠劵
+    REGISTER(3, "新人券"), // 注册时自动领取
     ;
 
     public static final int[] ARRAYS = Arrays.stream(values()).mapToInt(CouponTakeTypeEnum::getValue).toArray();

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/decorate/DecoratePageEnum.java
Patch:
@@ -15,7 +15,9 @@
 @Getter
 public enum DecoratePageEnum implements IntArrayValuable {
 
-    INDEX(1, "首页");
+    INDEX(1, "首页"),
+    MY(2, "个人中心"),
+    ;
 
     private static final int[] ARRAYS = Arrays.stream(values()).mapToInt(DecoratePageEnum::getPage).toArray();
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/bargain/vo/BargainActivityBaseVO.java
Patch:
@@ -18,7 +18,7 @@
 @Data
 public class BargainActivityBaseVO {
 
-    @Schema(description = "砍价活动名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "越拼越省钱")
+    @Schema(description = "砍价活动名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "砍得越多省得越多，是兄弟就来砍我")
     @NotNull(message = "砍价名称不能为空")
     private String name;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/CouponTemplateController.java
Patch:
@@ -75,5 +75,4 @@ public CommonResult<PageResult<CouponTemplateRespVO>> getCouponTemplatePage(@Val
         PageResult<CouponTemplateDO> pageResult = couponTemplateService.getCouponTemplatePage(pageVO);
         return success(CouponTemplateConvert.INSTANCE.convertPage(pageResult));
     }
-
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/coupon/CouponBaseVO.java
Patch:
@@ -26,7 +26,7 @@ public class CouponBaseVO {
     // ========== 基本信息 BEGIN ==========
     @Schema(description = "优惠劵模板编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "优惠劵模板编号不能为空")
-    private Integer templateId;
+    private Long templateId;
 
     @Schema(description = "优惠劵名", requiredMode = Schema.RequiredMode.REQUIRED, example = "春节送送送")
     @NotNull(message = "优惠劵名不能为空")
@@ -67,8 +67,8 @@ public class CouponBaseVO {
     @InEnum(PromotionProductScopeEnum.class)
     private Integer productScope;
 
-    @Schema(description = "商品 SPU 编号的数组", example = "1,3")
-    private List<Long> productSpuIds;
+    @Schema(description = "商品范围编号的数组", example = "1,3")
+    private List<Long> productScopeValues;
     // ========== 使用规则 END ==========
 
     // ========== 使用效果 BEGIN ==========

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/SeckillConfigController.java
Patch:
@@ -81,12 +81,13 @@ public CommonResult<List<SeckillConfigRespVO>> getSeckillConfigList() {
     @GetMapping("/list-all-simple")
     @Operation(summary = "获得所有开启状态的秒杀时段精简列表", description = "主要用于前端的下拉选项")
     public CommonResult<List<SeckillConfigSimpleRespVO>> getListAllSimple() {
-        List<SeckillConfigDO> list = seckillConfigService.getSeckillConfigListByStatus(CommonStatusEnum.ENABLE.getStatus());
+        List<SeckillConfigDO> list = seckillConfigService.getSeckillConfigListByStatus(
+                CommonStatusEnum.ENABLE.getStatus());
         return success(SeckillConfigConvert.INSTANCE.convertList1(list));
     }
 
     @GetMapping("/page")
-    @Operation(summary = "获得秒杀活动分页")
+    @Operation(summary = "获得秒杀时间段分页")
     @PreAuthorize("@ss.hasPermission('promotion:seckill-config:query')")
     public CommonResult<PageResult<SeckillConfigRespVO>> getSeckillActivityPage(@Valid SeckillConfigPageReqVO pageVO) {
         PageResult<SeckillConfigDO> pageResult = seckillConfigService.getSeckillConfigPage(pageVO);

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/combination/AppCombinationActivityController.java
Patch:
@@ -38,7 +38,7 @@ public CommonResult<List<AppCombinationActivityRespVO>> getCombinationActivityLi
         activity1.setName("618 大拼团");
         activity1.setUserSize(3);
         activity1.setSpuId(2048L);
-        activity1.setPicUrl("https://demo26.crmeb.net/uploads/attach/2021/11/15/a79f5d2ea6bf0c3c11b2127332dfe2df.jpg");
+        activity1.setPicUrl("https://static.iocoder.cn/mall/a79f5d2ea6bf0c3c11b2127332dfe2df.jpg");
         activity1.setMarketPrice(50);
         activity1.setCombinationPrice(100);
         activityList.add(activity1);
@@ -48,7 +48,7 @@ public CommonResult<List<AppCombinationActivityRespVO>> getCombinationActivityLi
         activity2.setName("双十一拼团");
         activity2.setUserSize(5);
         activity2.setSpuId(4096L);
-        activity2.setPicUrl("https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXMYJOomfp7cebz3cIeb8sHk3GGSIJtWEgREe3j7J1WoAbTvIOicpcNdFkWAziatBSMod8b5RyS4CQ/132");
+        activity2.setPicUrl("https://static.iocoder.cn/mall/132.jpeg");
         activity2.setMarketPrice(100);
         activity2.setCombinationPrice(200);
         activityList.add(activity2);

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/combination/vo/record/AppCombinationRecordRespVO.java
Patch:
@@ -3,7 +3,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @Schema(description = "用户 App - 拼团记录 Response VO")
 @Data
@@ -22,7 +22,7 @@ public class AppCombinationRecordRespVO {
     private String avatar;
 
     @Schema(description = "过期时间", requiredMode = Schema.RequiredMode.REQUIRED)
-    private Date expireTime;
+    private LocalDateTime expireTime;
 
     @Schema(description = "可参团人数", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Integer userSize;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/template/AppCouponTemplateRespVO.java
Patch:
@@ -28,8 +28,8 @@ public class AppCouponTemplateRespVO {
 //    @InEnum(PromotionProductScopeEnum.class)
 //    private Integer productScope;
 //
-//    @Schema(description = "商品 SPU 编号的数组", example = "1,3")
-//    private List<Long> productSpuIds;
+//    @Schema(description = "商品范围编号的数组", example = "1,3")
+//    private List<Long> productScopeValues;
 
     @Schema(description = "生效日期类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer validityType;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/seckill/AppSeckillConfigController.java
Patch:
@@ -25,8 +25,8 @@ public class AppSeckillConfigController {
     public CommonResult<List<AppSeckillConfigRespVO>> getSeckillConfigList() {
         return success(Arrays.asList(
                 new AppSeckillConfigRespVO().setId(1L).setStartTime("00:00").setEndTime("09:59")
-                        .setSliderPicUrls(Arrays.asList("https://demo26.crmeb.net/uploads/attach/2021/11/15/a79f5d2ea6bf0c3c11b2127332dfe2df.jpg",
-                                "https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKXMYJOomfp7cebz3cIeb8sHk3GGSIJtWEgREe3j7J1WoAbTvIOicpcNdFkWAziatBSMod8b5RyS4CQ/132")),
+                        .setSliderPicUrls(Arrays.asList("https://static.iocoder.cn/mall/a79f5d2ea6bf0c3c11b2127332dfe2df.jpg",
+                                "https://static.iocoder.cn/mall/132.jpeg")),
                 new AppSeckillConfigRespVO().setId(2L).setStartTime("10:00").setEndTime("12:59"),
                 new AppSeckillConfigRespVO().setId(2L).setStartTime("13:00").setEndTime("22:59"),
                 new AppSeckillConfigRespVO().setId(2L).setStartTime("23:00").setEndTime("23:59")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/coupon/CouponTemplateDO.java
Patch:
@@ -85,10 +85,10 @@ public class CouponTemplateDO extends BaseDO {
      */
     private Integer productScope;
     /**
-     * 商品 SPU 编号的数组
+     * 商品范围编号的数组
      */
     @TableField(typeHandler = LongListTypeHandler.class)
-    private List<Long> productSpuIds;
+    private List<Long> productScopeValues;
     /**
      * 生效日期类型
      *

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillconfig/SeckillConfigMapper.java
Patch:
@@ -16,7 +16,7 @@ default PageResult<SeckillConfigDO> selectPage(SeckillConfigPageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<SeckillConfigDO>()
                 .likeIfPresent(SeckillConfigDO::getName, reqVO.getName())
                 .eqIfPresent(SeckillConfigDO::getStatus, reqVO.getStatus())
-                .orderByDesc(SeckillConfigDO::getId));
+                .orderByAsc(SeckillConfigDO::getStartTime));
     }
 
     default List<SeckillConfigDO> selectListByStatus(Integer status) {

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponTemplateService.java
Patch:
@@ -33,7 +33,7 @@ public interface CouponTemplateService {
     /**
      * 更新优惠劵模板的状态
      *
-     * @param id 编号
+     * @param id     编号
      * @param status 状态
      */
     void updateCouponTemplateStatus(Long id, Integer status);
@@ -64,7 +64,7 @@ public interface CouponTemplateService {
     /**
      * 更新优惠劵模板的领取数量
      *
-     * @param id 优惠劵模板编号
+     * @param id        优惠劵模板编号
      * @param incrCount 增加数量
      */
     void updateCouponTemplateTakeCount(Long id, int incrCount);

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/coupon/CouponTemplateServiceImpl.java
Patch:
@@ -14,7 +14,8 @@
 import javax.annotation.Resource;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
-import static cn.iocoder.yudao.module.promotion.enums.ErrorCodeConstants.*;
+import static cn.iocoder.yudao.module.promotion.enums.ErrorCodeConstants.COUPON_TEMPLATE_NOT_EXISTS;
+import static cn.iocoder.yudao.module.promotion.enums.ErrorCodeConstants.COUPON_TEMPLATE_TOTAL_COUNT_TOO_SMALL;
 
 /**
  * 优惠劵模板 Service 实现类

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppCartDetailRespVO.java
Patch:
@@ -8,7 +8,7 @@
 
 @Schema(description = "用户 App - 用户的购物车明细 Response VO")
 @Data
-public class AppTradeCartDetailRespVO {
+public class AppCartDetailRespVO {
 
     /**
      * 商品分组数组

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppCartResetReqVO.java
Patch:
@@ -8,7 +8,7 @@
 
 @Schema(description = "用户 App - 购物车重置 Request VO")
 @Data
-public class AppTradeCartResetReqVO {
+public class AppCartResetReqVO {
 
     @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppCartUpdateCountReqVO.java
Patch:
@@ -6,9 +6,9 @@
 import javax.validation.constraints.Min;
 import javax.validation.constraints.NotNull;
 
-@Schema(description = "用户 App - 购物车更新 Request VO")
+@Schema(description = "用户 App - 购物车更新数量 Request VO")
 @Data
-public class AppTradeCartUpdateReqVO {
+public class AppCartUpdateCountReqVO {
 
     @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/AppDeliverExpressController.java
Patch:
@@ -31,7 +31,7 @@ public class AppDeliverExpressController {
     @GetMapping("/list")
     @Operation(summary = "获得快递公司列表")
     public CommonResult<List<AppDeliveryExpressRespVO>> getDeliveryExpressList() {
-        List<DeliveryExpressDO> list = deliveryExpressService.getDeliveryExpressList(CommonStatusEnum.ENABLE.getStatus());
+        List<DeliveryExpressDO> list = deliveryExpressService.getDeliveryExpressListByStatus(CommonStatusEnum.ENABLE.getStatus());
         list.sort(Comparator.comparing(DeliveryExpressDO::getSort));
         return success(DeliveryExpressConvert.INSTANCE.convertList03(list));
     }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/AppDeliverPickUpStoreController.java
Patch:
@@ -24,6 +24,7 @@
 @Validated
 public class AppDeliverPickUpStoreController {
 
+    // TODO 待实现[门店自提]：如果 latitude、longitude 非空，计算经纬度，并排序。计算的库，可以使用 hutool 的 DistanceUtil 计算。
     @GetMapping("/list")
     @Operation(summary = "获得自提门店列表")
     public CommonResult<List<AppDeliveryPickUpStoreRespVO>> getDeliveryPickUpStoreList(
@@ -50,6 +51,7 @@ public CommonResult<List<AppDeliveryPickUpStoreRespVO>> getDeliveryPickUpStoreLi
         return success(list);
     }
 
+    // TODO 待实现[门店自提]：
     @GetMapping("/get")
     @Operation(summary = "获得自提门店")
     @Parameter(name = "id", description = "门店编号")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/config/AppDeliveryConfigRespVO.java
Patch:
@@ -3,7 +3,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-// TODO 芋艿：后续要实现下，配送配置
+// TODO 芋艿：后续要实现下，配送配置；后续融合到 AppTradeConfigRespVO 中
 @Schema(description = "用户 App - 配送配置 Response VO")
 @Data
 public class AppDeliveryConfigRespVO {

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderDetailRespVO.java
Patch:
@@ -21,7 +21,7 @@ public class AppTradeOrderDetailRespVO {
     private String no;
 
     @Schema(description = "下单时间", requiredMode = Schema.RequiredMode.REQUIRED)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @Schema(description = "用户备注", requiredMode = Schema.RequiredMode.REQUIRED, example = "你猜")
     private String userRemark;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderPageItemRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @Schema(description = "用户 App - 订单交易的分页项 Response VO")
@@ -30,7 +30,7 @@ public class AppTradeOrderPageItemRespVO {
     private Boolean commentStatus;
 
     @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     // ========== 价格 + 支付基本信息 ==========
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/delivery/DeliveryExpressConvert.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.trade.convert.delivery;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
+import cn.iocoder.yudao.module.trade.controller.admin.delivery.vo.express.*;
 import cn.iocoder.yudao.module.trade.controller.admin.delivery.vo.express.DeliveryExpressCreateReqVO;
 import cn.iocoder.yudao.module.trade.controller.admin.delivery.vo.express.DeliveryExpressExcelVO;
 import cn.iocoder.yudao.module.trade.controller.admin.delivery.vo.express.DeliveryExpressRespVO;
@@ -29,6 +30,8 @@ public interface DeliveryExpressConvert {
 
     List<DeliveryExpressExcelVO> convertList02(List<DeliveryExpressDO> list);
 
+    List<DeliveryExpressSimpleRespVO> convertList1(List<DeliveryExpressDO> list);
+
     List<AppDeliveryExpressRespVO> convertList03(List<DeliveryExpressDO> list);
 
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/CommonResult.java
Patch:
@@ -41,7 +41,7 @@ public class CommonResult<T> implements Serializable {
      * 因为 A 方法返回的 CommonResult 对象，不满足调用其的 B 方法的返回，所以需要进行转换。
      *
      * @param result 传入的 result 对象
-     * @param <T> 返回的泛型
+     * @param <T>    返回的泛型
      * @return 新的 CommonResult 对象
      */
     public static <T> CommonResult<T> error(CommonResult<?> result) {

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/mock/MockPayClient.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundUnifiedReqDTO;
 import cn.iocoder.yudao.framework.pay.core.client.impl.AbstractPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.NonePayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.enums.channel.PayChannelEnum;
 
 import java.time.LocalDateTime;
@@ -17,11 +18,11 @@
  *
  * @author jason
  */
-public class MockPayClient extends AbstractPayClient<MockPayClientConfig> {
+public class MockPayClient extends AbstractPayClient<NonePayClientConfig> {
 
     private static final String MOCK_RESP_SUCCESS_DATA = "MOCK_SUCCESS";
 
-    public MockPayClient(Long channelId, MockPayClientConfig config) {
+    public MockPayClient(Long channelId, NonePayClientConfig config) {
         super(channelId, PayChannelEnum.MOCK.getCode(), config);
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/channel/PayChannelEnum.java
Patch:
@@ -4,7 +4,6 @@
 import cn.iocoder.yudao.framework.pay.core.client.impl.NonePayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.PayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayPayClientConfig;
-import cn.iocoder.yudao.framework.pay.core.client.impl.mock.MockPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.weixin.WxPayClientConfig;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
@@ -30,7 +29,7 @@ public enum PayChannelEnum {
     ALIPAY_QR("alipay_qr", "支付宝扫码支付", AlipayPayClientConfig.class),
     ALIPAY_BAR("alipay_bar", "支付宝条码支付", AlipayPayClientConfig.class),
 
-    MOCK("mock", "模拟支付", MockPayClientConfig.class),
+    MOCK("mock", "模拟支付", NonePayClientConfig.class),
 
     WALLET("wallet", "钱包支付", NonePayClientConfig.class);
 

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java
Patch:
@@ -18,6 +18,9 @@
 
 /**
  * 在 MyBatis Plus 的 BaseMapper 的基础上拓展，提供更多的能力
+ *
+ * 1. {@link BaseMapper} 为 MyBatis Plus 的基础接口，提供基础的 CRUD 能力
+ * 2. {@link MPJBaseMapper} 为 MyBatis Plus Join 的基础接口，提供连表 Join 能力
  */
 public interface BaseMapperX<T> extends MPJBaseMapper<T> {
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -55,6 +55,7 @@ public interface ErrorCodeConstants {
     ErrorCode SECKILL_ACTIVITY_UPDATE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_008_003, "秒杀活动已关闭，不能修改");
     ErrorCode SECKILL_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED_OR_END = new ErrorCode(1_013_008_004, "秒杀活动未关闭或未结束，不能删除");
     ErrorCode SECKILL_ACTIVITY_CLOSE_FAIL_STATUS_CLOSED = new ErrorCode(1_013_008_005, "秒杀活动已关闭，不能重复关闭");
+    ErrorCode SECKILL_ACTIVITY_UPDATE_STOCK_FAIL = new ErrorCode(1013008006, "更新秒杀活动库存失败，原因秒杀库存不足");
 
     // ========== 秒杀时段 1-013-009-000 ==========
     ErrorCode SECKILL_CONFIG_NOT_EXISTS = new ErrorCode(1_013_009_000, "秒杀时段不存在");

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleDetailRespVO.java
Patch:
@@ -35,7 +35,7 @@ public class TradeAfterSaleDetailRespVO extends TradeAfterSaleBaseVO {
     /**
      * 售后日志
      */
-    private List<TradeAfterSaleLogRespVO> afterSaleLog;
+    private List<TradeAfterSaleLogRespVO> logs;
 
     @Schema(description = "管理后台 - 交易订单的详情的订单项目")
     @Data

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/config/AppDeliveryConfigRespVO.java
Patch:
@@ -3,7 +3,7 @@
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-// TODO 芋艿：后续要实现下，配送配置
+// TODO 芋艿：后续要实现下，配送配置；后续融合到 AppTradeConfigRespVO 中
 @Schema(description = "用户 App - 配送配置 Response VO")
 @Data
 public class AppDeliveryConfigRespVO {

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/aftersale/TradeAfterSaleConvert.java
Patch:
@@ -78,7 +78,7 @@ default TradeAfterSaleDetailRespVO convert(TradeAfterSaleDO afterSale, TradeOrde
         // 处理订单信息
         respVO.setOrder(convert(order));
         // 处理售后日志
-        respVO.setAfterSaleLog(convertList1(logs));
+        respVO.setLogs(convertList1(logs));
         return respVO;
     }
     List<TradeAfterSaleLogRespVO> convertList1(List<TradeAfterSaleLogRespDTO> list);

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/user/AppMemberUserController.java
Patch:
@@ -29,7 +29,6 @@ public class AppMemberUserController {
 
     @Resource
     private MemberUserService userService;
-
     @Resource
     private MemberLevelService levelService;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/user/vo/AppMemberUserInfoRespVO.java
Patch:
@@ -29,6 +29,9 @@ public class AppMemberUserInfoRespVO {
     @Schema(description = "用户等级")
     private Level level;
 
+    @Schema(description = "是否成为推广员", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
+    private Boolean brokerageEnabled;
+
     @Schema(description = "用户 App - 会员等级")
     @Data
     public static class Level {

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/convert/auth/AuthConvert.java
Patch:
@@ -25,7 +25,7 @@ public interface AuthConvert {
     SmsCodeUseReqDTO convert(AppMemberUserResetPasswordReqVO reqVO, SmsSceneEnum scene, String usedIp);
     SmsCodeUseReqDTO convert(AppAuthSmsLoginReqVO reqVO, Integer scene, String usedIp);
 
-    AppAuthLoginRespVO convert(OAuth2AccessTokenRespDTO bean);
+    AppAuthLoginRespVO convert(OAuth2AccessTokenRespDTO bean, String openid);
 
     SmsCodeValidateReqDTO convert(AppAuthSmsValidateReqVO bean);
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/dal/dataobject/point/MemberPointConfigDO.java
Patch:
@@ -6,14 +6,12 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.math.BigDecimal;
-
 /**
  * 会员积分配置 DO
  *
  * @author QingX
  */
-@TableName("member_point_config")
+@TableName(value = "member_point_config", autoResultMap = true)
 @KeySequence("member_point_config_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)

File: yudao-module-pay/yudao-module-pay-api/src/main/java/cn/iocoder/yudao/module/pay/enums/ErrorCodeConstants.java
Patch:
@@ -28,6 +28,7 @@ public interface ErrorCodeConstants {
     ErrorCode ORDER_SUBMIT_CHANNEL_ERROR = new ErrorCode(1_007_002_004, "发起支付报错，错误码：{}，错误提示：{}");
     ErrorCode ORDER_REFUND_FAIL_STATUS_ERROR = new ErrorCode(1_007_002_005, "支付订单退款失败，原因：状态不是已支付或已退款");
     ErrorCode ORDER_UPDATE_PRICE_FAIL_PAID = new ErrorCode(1_007_002_006, "支付订单调价失败，原因：支付订单已付款,不能调价");
+    ErrorCode ORDER_UPDATE_PRICE_FAIL_EQUAL = new ErrorCode(1007002007, "支付订单调价失败，原因：价格没有变化");
 
     // ========== ORDER 模块(拓展单) 1-007-003-000 ==========
     ErrorCode ORDER_EXTENSION_NOT_FOUND = new ErrorCode(1_007_003_000, "支付交易拓展单不存在");

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/app/wallet/AppPayWalletController.java
Patch:
@@ -37,7 +37,7 @@ public class AppPayWalletController {
     @Operation(summary = "获取钱包")
     @PreAuthenticated
     public CommonResult<AppPayWalletRespVO> getPayWallet() {
-        PayWalletDO wallet = payWalletService.getPayWallet(getLoginUserId(), UserTypeEnum.MEMBER.getValue());
+        PayWalletDO wallet = payWalletService.getOrCreateWallet(getLoginUserId(), UserTypeEnum.MEMBER.getValue());
         return success(PayWalletConvert.INSTANCE.convert(wallet));
     }
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/app/wallet/vo/transaction/AppPayWalletTransactionRespVO.java
Patch:
@@ -15,9 +15,6 @@ public class AppPayWalletTransactionRespVO {
     @Schema(description = "业务分类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer bizType;
 
-    @Schema(description = "交易时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "100")
-    private LocalDateTime transactionTime;
-
     @Schema(description = "交易金额，单位分", requiredMode = Schema.RequiredMode.REQUIRED, example = "100")
     private Long price;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/app/wallet/vo/wallet/AppPayWalletRespVO.java
Patch:
@@ -11,9 +11,9 @@ public class AppPayWalletRespVO {
     private Integer balance;
 
     @Schema(description = "累计支出, 单位分", requiredMode = Schema.RequiredMode.REQUIRED, example = "1000")
-    private Long totalExpense;
+    private Integer totalExpense;
 
     @Schema(description = "累计充值, 单位分", requiredMode = Schema.RequiredMode.REQUIRED, example = "2000")
-    private Long totalRecharge;
+    private Integer totalRecharge;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/dataobject/wallet/PayWalletDO.java
Patch:
@@ -45,10 +45,10 @@ public class PayWalletDO extends BaseDO {
     /**
      * 累计支出，单位分
      */
-    private Long totalExpense;
+    private Integer totalExpense;
     /**
      * 累计充值，单位分
      */
-    private Long totalRecharge;
+    private Integer totalRecharge;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/auth/AdminAuthServiceImplTest.java
Patch:
@@ -6,6 +6,7 @@
 import cn.iocoder.yudao.framework.test.core.ut.BaseDbUnitTest;
 import cn.iocoder.yudao.module.system.api.sms.SmsCodeApi;
 import cn.iocoder.yudao.module.system.api.social.dto.SocialUserBindReqDTO;
+import cn.iocoder.yudao.module.system.api.social.dto.SocialUserRespDTO;
 import cn.iocoder.yudao.module.system.controller.admin.auth.vo.*;
 import cn.iocoder.yudao.module.system.dal.dataobject.oauth2.OAuth2AccessTokenDO;
 import cn.iocoder.yudao.module.system.dal.dataobject.user.AdminUserDO;
@@ -235,8 +236,8 @@ public void testSocialLogin_success() {
         AuthSocialLoginReqVO reqVO = randomPojo(AuthSocialLoginReqVO.class);
         // mock 方法（绑定的用户编号）
         Long userId = 1L;
-        when(socialUserService.getBindUserId(eq(UserTypeEnum.ADMIN.getValue()), eq(reqVO.getType()),
-                eq(reqVO.getCode()), eq(reqVO.getState()))).thenReturn(userId);
+        when(socialUserService.getSocialUser(eq(UserTypeEnum.ADMIN.getValue()), eq(reqVO.getType()),
+                eq(reqVO.getCode()), eq(reqVO.getState()))).thenReturn(new SocialUserRespDTO(randomString(), userId));
         // mock（用户）
         AdminUserDO user = randomPojo(AdminUserDO.class, o -> o.setId(userId));
         when(userService.getUser(eq(userId))).thenReturn(user);

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/help/AppBargainHelpCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainHelpCreateReqVO {
 
-    @Schema(description = "砍价记录编号", required = true, example = "1024")
+    @Schema(description = "砍价记录编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价记录编号不能为空")
     private Long recordId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/bargain/vo/record/AppBargainRecordCreateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class AppBargainRecordCreateReqVO {
 
-    @Schema(description = "砍价活动编号", required = true, example = "1024")
+    @Schema(description = "砍价活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "砍价活动编号不能为空")
     private Long activityId;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/coupon/vo/coupon/AppCouponMatchReqVO.java
Patch:
@@ -15,15 +15,15 @@ public class AppCouponMatchReqVO {
     @NotNull(message = "商品金额不能为空")
     private Integer price;
 
-    @Schema(description = "商品 SPU 编号的数组", required = true, example = "[1, 2]")
+    @Schema(description = "商品 SPU 编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2]")
     @NotEmpty(message = "商品 SPU 编号不能为空")
     private List<Long> spuIds;
 
-    @Schema(description = "商品 SKU 编号的数组", required = true, example = "[1, 2]")
+    @Schema(description = "商品 SKU 编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2]")
     @NotEmpty(message = "商品 SKU 编号不能为空")
     private List<Long> skuIds;
 
-    @Schema(description = "分类编号的数组", required = true, example = "[10, 20]")
+    @Schema(description = "分类编号的数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[10, 20]")
     @NotEmpty(message = "分类编号不能为空")
     private List<Long> categoryIds;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/config/AppDeliveryConfigRespVO.java
Patch:
@@ -8,10 +8,10 @@
 @Data
 public class AppDeliveryConfigRespVO {
 
-    @Schema(description = "腾讯地图 KEY", required = true, example = "123456")
+    @Schema(description = "腾讯地图 KEY", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     private String tencentLbsKey;
 
-    @Schema(description = "是否开启自提", required = true, example = "true")
+    @Schema(description = "是否开启自提", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     private Boolean pickUpEnable;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/vo/express/AppDeliveryExpressRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class AppDeliveryExpressRespVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "门店名称", required = true, example = "顺丰")
+    @Schema(description = "门店名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "顺丰")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementReqVO.java
Patch:
@@ -25,12 +25,12 @@ public class AppTradeOrderSettlementReqVO {
     @Schema(description = "优惠劵编号", example = "1024")
     private Long couponId;
 
-    @Schema(description = "是否使用积分", required = true, example = "true")
+    @Schema(description = "是否使用积分", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否使用积分不能为空")
     private Boolean pointStatus;
 
     // ========== 配送相关相关字段 ==========
-    @Schema(description = "配送方式", required = true, example = "1")
+    @Schema(description = "配送方式", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(value = DeliveryTypeEnum.class, message = "配送方式不正确")
     private Integer deliveryType;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @Data
 public class AppTradeOrderSettlementRespVO {
 
-    @Schema(description = "交易类型", required = true, example = "1") // 对应 TradeOrderTypeEnum 枚举
+    @Schema(description = "交易类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1") // 对应 TradeOrderTypeEnum 枚举
     private Integer type = 1; // TODO 芋艿：改成计算
 
     @Schema(description = "购物项数组", requiredMode = Schema.RequiredMode.REQUIRED)

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/dict/DictDataDO.java
Patch:
@@ -55,7 +55,7 @@ public class DictDataDO extends BaseDO {
     /**
      * css 样式
      */
-    @TableField(updateStrategy = FieldStrategy.IGNORED)
+    @TableField(updateStrategy = FieldStrategy.ALWAYS)
     private String cssClass;
     /**
      * 备注

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -9,7 +9,7 @@
  */
 public interface ErrorCodeConstants {
 
-    // ========== AUTH 模块 1003000000 ==========
-    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1003000000, "GoView 项目不存在");
+    // ========== AUTH 模块 1-003-000-000 ==========
+    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1_003_000_000, "GoView 项目不存在");
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class AppAuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -53,4 +53,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSmsLoginReqVO.java
Patch:
@@ -35,7 +35,7 @@ public class AppAuthSmsLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -55,4 +55,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppAuthSocialLoginReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppSocialUserBindReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -27,4 +27,4 @@ public class AppSocialUserUnbindReqVO {
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.auth;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
@@ -153,4 +154,4 @@ public CommonResult<AuthLoginRespVO> socialQuickLogin(@RequestBody @Valid AuthSo
         return success(authService.socialLogin(reqVO));
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthLoginReqVO.java
Patch:
@@ -41,7 +41,7 @@ public class AuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -66,4 +66,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -9,7 +9,7 @@
  */
 public interface ErrorCodeConstants {
 
-    // ========== AUTH 模块 1003000000 ==========
-    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1003000000, "GoView 项目不存在");
+    // ========== AUTH 模块 1-003-000-000 ==========
+    ErrorCode GO_VIEW_PROJECT_NOT_EXISTS = new ErrorCode(1_003_000_000, "GoView 项目不存在");
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class AppAuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -53,4 +53,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSmsLoginReqVO.java
Patch:
@@ -35,7 +35,7 @@ public class AppAuthSmsLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -55,4 +55,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppAuthSocialLoginReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -31,4 +31,4 @@ public class AppSocialUserBindReqVO {
     @NotEmpty(message = "state 不能为空")
     private String state;
 
-}
+}
\ No newline at end of file

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
@@ -27,4 +27,4 @@ public class AppSocialUserUnbindReqVO {
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/AuthController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.auth;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
@@ -153,4 +154,4 @@ public CommonResult<AuthLoginRespVO> socialQuickLogin(@RequestBody @Valid AuthSo
         return success(authService.socialLogin(reqVO));
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthLoginReqVO.java
Patch:
@@ -41,7 +41,7 @@ public class AuthLoginReqVO {
 
     // ========== 绑定社交登录时，需要传递如下参数 ==========
 
-    @Schema(description = "社交平台的类型，参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
+    @Schema(description = "社交平台的类型，参见 SocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     private Integer socialType;
 
@@ -66,4 +66,4 @@ public boolean isSocialState() {
         return socialType == null || StrUtil.isNotEmpty(socialState);
     }
 
-}
+}
\ No newline at end of file

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceImpl.java
Patch:
@@ -39,6 +39,7 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
+import java.math.RoundingMode;
 import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Objects;
@@ -345,7 +346,8 @@ private Boolean updateOrderSuccess(PayChannelDO channel, PayOrderExtensionDO ord
                         .channelId(channel.getId()).channelCode(channel.getCode())
                         .successTime(notify.getSuccessTime()).extensionId(orderExtension.getId()).no(orderExtension.getNo())
                         .channelOrderNo(notify.getChannelOrderNo()).channelUserId(notify.getChannelUserId())
-                        .channelFeeRate(channel.getFeeRate()).channelFeePrice(MoneyUtils.calculateRatePrice(order.getPrice(), channel.getFeeRate()))
+                        .channelFeeRate(channel.getFeeRate())
+		                .channelFeePrice(MoneyUtils.calculateRatePrice(order.getPrice(), channel.getFeeRate(), 0, RoundingMode.HALF_UP).intValue())
                         .build());
         if (updateCounts == 0) { // 校验状态，必须是待支付
             throw exception(ORDER_STATUS_IS_NOT_WAITING);

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/convert/menu/MpMenuConvert.java
Patch:
@@ -40,6 +40,8 @@ public interface MpMenuConvert {
     @Mappings({
             @Mapping(source = "menuKey", target = "key"),
             @Mapping(source = "children", target = "subButtons"),
+            @Mapping(source = "miniProgramAppId", target = "appId"),
+            @Mapping(source = "miniProgramPagePath", target = "pagePath"),
     })
     WxMenuButton convert(MpMenuSaveReqVO.Menu bean);
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/weixin/AbstractWxPayClient.java
Patch:
@@ -56,7 +56,7 @@ public AbstractWxPayClient(Long channelId, String channelCode, WxPayClientConfig
     protected void doInit(String tradeType) {
         // 创建 config 配置
         WxPayConfig payConfig = new WxPayConfig();
-        BeanUtil.copyProperties(config, payConfig, "keyContent");
+        BeanUtil.copyProperties(config, payConfig, "keyContent", "privateKeyContent", "privateCertContent");
         payConfig.setTradeType(tradeType);
         // weixin-pay-java 无法设置内容，只允许读取文件，所以这里要创建临时文件来解决
         if (Base64.isBase64(config.getKeyContent())) {

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/delivery/AppDeliverExpressController.java
Patch:
@@ -31,7 +31,7 @@ public class AppDeliverExpressController {
     @GetMapping("/list")
     @Operation(summary = "获得快递公司列表")
     public CommonResult<List<AppDeliveryExpressRespVO>> getDeliveryExpressList() {
-        List<DeliveryExpressDO> list = deliveryExpressService.getDeliveryExpressList(CommonStatusEnum.ENABLE.getStatus());
+        List<DeliveryExpressDO> list = deliveryExpressService.getDeliveryExpressListByStatus(CommonStatusEnum.ENABLE.getStatus());
         list.sort(Comparator.comparing(DeliveryExpressDO::getSort));
         return success(DeliveryExpressConvert.INSTANCE.convertList03(list));
     }

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/aftersale/TradeAfterSaleServiceTest.java
Patch:
@@ -56,8 +56,7 @@ public class TradeAfterSaleServiceTest extends BaseDbUnitTest {
     private TradeOrderUpdateService tradeOrderUpdateService;
     @Resource
     private TradeOrderQueryService tradeOrderQueryService;
-    @MockBean
-    private TradeOrderQueryService tradeOrderQueryService;
+
     @MockBean
     private PayRefundApi payRefundApi;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/bargain/vo/BargainActivityBaseVO.java
Patch:
@@ -18,7 +18,7 @@
 @Data
 public class BargainActivityBaseVO {
 
-    @Schema(description = "砍价活动名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "越拼越省钱")
+    @Schema(description = "砍价活动名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "砍得越多省得越多，是兄弟就来砍我")
     @NotNull(message = "砍价名称不能为空")
     private String name;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/admin/point/vo/config/MemberPointConfigBaseVO.java
Patch:
@@ -14,7 +14,7 @@ public class MemberPointConfigBaseVO {
 
     private Long id;
 
-    @Schema(description = "积分抵扣开关", required = true, example = "true")
+    @Schema(description = "积分抵扣开关", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     private Boolean tradeDeductEnable;
 
     @Schema(description = "积分抵扣，单位：分", example = "13506")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/ip/vo/AreaNodeSimpleRespVO.java
Patch:
@@ -7,13 +7,13 @@
 @Data
 public class AreaNodeSimpleRespVO {
 
-    @Schema(description = "编号", required = true, example = "110000")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "110000")
     private Integer id;
 
-    @Schema(description = "名字", required = true, example = "北京")
+    @Schema(description = "名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "北京")
     private String name;
 
-    @Schema(description = "是否叶子节点", required = false, example = "false")
+    @Schema(description = "是否叶子节点", example = "false")
     private Boolean leaf;
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/admin/point/vo/config/MemberPointConfigBaseVO.java
Patch:
@@ -14,7 +14,7 @@ public class MemberPointConfigBaseVO {
 
     private Long id;
 
-    @Schema(description = "积分抵扣开关", required = true, example = "true")
+    @Schema(description = "积分抵扣开关", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     private Boolean tradeDeductEnable;
 
     @Schema(description = "积分抵扣，单位：分", example = "13506")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/ip/vo/AreaNodeSimpleRespVO.java
Patch:
@@ -7,13 +7,13 @@
 @Data
 public class AreaNodeSimpleRespVO {
 
-    @Schema(description = "编号", required = true, example = "110000")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "110000")
     private Integer id;
 
-    @Schema(description = "名字", required = true, example = "北京")
+    @Schema(description = "名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "北京")
     private String name;
 
-    @Schema(description = "是否叶子节点", required = false, example = "false")
+    @Schema(description = "是否叶子节点", example = "false")
     private Boolean leaf;
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/alipay/AbstractAlipayPayClient.java
Patch:
@@ -148,7 +148,7 @@ protected PayRefundRespDTO doUnifiedRefund(PayRefundUnifiedReqDTO reqDTO) throws
         // 2.1 执行请求
         AlipayTradeRefundResponse response = client.execute(request);
         if (!response.isSuccess()) {
-            return PayRefundRespDTO.failureOf(reqDTO.getOutRefundNo(), response);
+            return PayRefundRespDTO.failureOf(response.getSubCode(), response.getSubMsg(), reqDTO.getOutRefundNo(), response);
         }
         // 2.2 创建返回结果
         // 支付宝只要退款调用返回 success，就认为退款成功，不需要回调。具体可见 parseNotify 方法的说明。

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/bargain/BargainActivityConvert.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.promotion.convert.bargain;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityCreateReqVO;
+import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityBaseVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityRespVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityUpdateReqVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.bargain.BargainActivityDO;
@@ -20,7 +20,7 @@ public interface BargainActivityConvert {
 
     BargainActivityConvert INSTANCE = Mappers.getMapper(BargainActivityConvert.class);
 
-    BargainActivityDO convert(BargainActivityCreateReqVO bean);
+    BargainActivityDO convert(BargainActivityBaseVO bean);
 
     BargainActivityDO convert(BargainActivityUpdateReqVO bean);
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/combination/CombinationActivityConvert.java
Patch:
@@ -11,7 +11,6 @@
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.activity.CombinationActivityUpdateReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.product.CombinationProductBaseVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.product.CombinationProductRespVO;
-import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.product.CombinationProductUpdateReqVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.combination.CombinationActivityDO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.combination.CombinationProductDO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.combination.CombinationRecordDO;
@@ -73,7 +72,7 @@ default PageResult<CombinationActivityRespVO> convertPage(PageResult<Combination
             @Mapping(target = "activityId", source = "activity.id"),
             @Mapping(target = "spuId", source = "activity.spuId"),
             @Mapping(target = "skuId", source = "product.skuId"),
-            @Mapping(target = "activePrice", source = "product.activePrice"),
+            @Mapping(target = "combinationPrice", source = "product.combinationPrice"),
             @Mapping(target = "activityStartTime", source = "activity.startTime"),
             @Mapping(target = "activityEndTime", source = "activity.endTime")
     })
@@ -83,7 +82,7 @@ default List<CombinationProductDO> convertList(List<? extends CombinationProduct
         return CollectionUtils.convertList(products, item -> convert(activity, item).setActivityStatus(activity.getStatus()));
     }
 
-    default List<CombinationProductDO> convertList(List<CombinationProductUpdateReqVO> updateProductVOs,
+    default List<CombinationProductDO> convertList(List<CombinationProductBaseVO> updateProductVOs,
                                                    List<CombinationProductDO> products, CombinationActivityDO activity) {
         Map<Long, Long> productMap = convertMap(products, CombinationProductDO::getSkuId, CombinationProductDO::getId);
         return CollectionUtils.convertList(updateProductVOs, updateProductVO -> convert(activity, updateProductVO)

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/bargain/BargainActivityService.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.promotion.service.bargain;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityCreateReqVO;
+import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityBaseVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityPageReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityUpdateReqVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.bargain.BargainActivityDO;
@@ -21,7 +21,7 @@ public interface BargainActivityService {
      * @param createReqVO 创建信息
      * @return 编号
      */
-    Long createBargainActivity(@Valid BargainActivityCreateReqVO createReqVO);
+    Long createBargainActivity(@Valid BargainActivityBaseVO createReqVO);
 
     /**
      * 更新砍价活动

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/bargain/BargainRecordService.java
Patch:
@@ -2,7 +2,7 @@
 
 
 /**
- * 商品活动记录 service
+ * 砍价记录 service 接口
  *
  * @author HUIHUI
  */

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/bargain/vo/BargainActivityCreateReqVO.java
Patch:
@@ -1,14 +1,14 @@
-package cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.product;
+package cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo;
 
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-@Schema(description = "管理后台 - 砍价商品更新 Request VO")
+@Schema(description = "管理后台 - 砍价活动创建 Request VO")
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
-public class BargainProductUpdateReqVO extends BargainProductBaseVO {
+public class BargainActivityCreateReqVO extends BargainActivityBaseVO {
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/combination/CombinationActivityConvert.java
Patch:
@@ -5,6 +5,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
 import cn.iocoder.yudao.module.product.api.spu.dto.ProductSpuRespDTO;
 import cn.iocoder.yudao.module.promotion.api.combination.dto.CombinationRecordCreateReqDTO;
+import cn.iocoder.yudao.module.promotion.api.combination.dto.CombinationRecordRespDTO;
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.activity.CombinationActivityCreateReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.activity.CombinationActivityRespVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.activity.CombinationActivityUpdateReqVO;
@@ -93,4 +94,6 @@ default List<CombinationProductDO> convertList(List<CombinationProductUpdateReqV
 
     CombinationRecordDO convert(CombinationRecordCreateReqDTO reqDTO);
 
+    List<CombinationRecordRespDTO> convert(List<CombinationRecordDO> bean);
+
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/bargain/BargainActivityMapper.java
Patch:
@@ -3,7 +3,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
-import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.activity.BargainActivityPageReqVO;
+import cn.iocoder.yudao.module.promotion.controller.admin.bargain.vo.BargainActivityPageReqVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.bargain.BargainActivityDO;
 import org.apache.ibatis.annotations.Mapper;
 
@@ -20,6 +20,7 @@ public interface BargainActivityMapper extends BaseMapperX<BargainActivityDO> {
     default PageResult<BargainActivityDO> selectPage(BargainActivityPageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<BargainActivityDO>()
                 .likeIfPresent(BargainActivityDO::getName, reqVO.getName())
+                .eqIfPresent(BargainActivityDO::getStatus, reqVO.getStatus())
                 .orderByDesc(BargainActivityDO::getId));
     }
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/combination/CombinationActivityMapper.java
Patch:
@@ -20,6 +20,7 @@ public interface CombinationActivityMapper extends BaseMapperX<CombinationActivi
     default PageResult<CombinationActivityDO> selectPage(CombinationActivityPageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<CombinationActivityDO>()
                 .likeIfPresent(CombinationActivityDO::getName, reqVO.getName())
+                .eqIfPresent(CombinationActivityDO::getStatus, reqVO.getStatus())
                 .orderByDesc(CombinationActivityDO::getId));
     }
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/seckill/seckillconfig/SeckillConfigServiceImpl.java
Patch:
@@ -62,7 +62,6 @@ public void updateSeckillConfig(SeckillConfigUpdateReqVO updateReqVO) {
         seckillConfigMapper.updateById(updateObj);
     }
 
-    // TODO  @puhui999: 这个要不合并到更新操作里? 不单独有个操作咧; fix: 更新状态不用那么多必须的参数，更新的时候需要校验时间段
     @Override
     public void updateSeckillConfigStatus(Long id, Integer status) {
         // 校验秒杀时段是否存在

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderDeliveryReqVO.java
Patch:
@@ -29,7 +29,5 @@ public class TradeOrderDeliveryReqVO {
     @NotEmpty(message = "发货物流单号不能为空")
     private String logisticsNo;
 
-    // =============== 同城配送  ================
-    // TODO
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/AppTradeOrderController.java
Patch:
@@ -126,8 +126,7 @@ public CommonResult<Map<String, Long>> getOrderCount() {
     @Operation(summary = "确认交易订单收货")
     @Parameter(name = "id", description = "交易订单编号")
     public CommonResult<Boolean> takeOrder(@RequestParam("id") Long id) {
-        // TODO @芋艿：未实现，mock 用
-        return success(true);
+        return success(tradeOrderService.receiveOrder(getLoginUserId(), id));
     }
 
     @DeleteMapping("/cancel")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderService.java
Patch:
@@ -65,9 +65,10 @@ public interface TradeOrderService {
      * 【会员】收货交易订单
      *
      * @param userId 用户编号
-     * @param id 订单编号
+     * @param id     订单编号
+     * @return 成功/失败
      */
-    void receiveOrder(Long userId, Long id);
+    Boolean receiveOrder(Long userId, Long id);
 
     /**
      * 获得指定编号的交易订单

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/MenuServiceImpl.java
Patch:
@@ -45,7 +45,8 @@ public class MenuServiceImpl implements MenuService {
     private TenantService tenantService;
 
     @Override
-    @CacheEvict(value = RedisKeyConstants.PERMISSION_MENU_ID_LIST, condition = "#reqVO.permission != null",  key = "#reqVO.permission")
+    @CacheEvict(value = RedisKeyConstants.PERMISSION_MENU_ID_LIST, key = "#reqVO.permission",
+            condition = "#reqVO.permission != null")
     public Long createMenu(MenuCreateReqVO reqVO) {
         // 校验父菜单存在
         validateParentMenu(reqVO.getParentId(), null);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/MenuServiceImpl.java
Patch:
@@ -45,7 +45,7 @@ public class MenuServiceImpl implements MenuService {
     private TenantService tenantService;
 
     @Override
-    @CacheEvict(value = RedisKeyConstants.PERMISSION_MENU_ID_LIST, key = "#reqVO.permission")
+    @CacheEvict(value = RedisKeyConstants.PERMISSION_MENU_ID_LIST, condition = "#reqVO.permission != null",  key = "#reqVO.permission")
     public Long createMenu(MenuCreateReqVO reqVO) {
         // 校验父菜单存在
         validateParentMenu(reqVO.getParentId(), null);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/MenuServiceImpl.java
Patch:
@@ -45,7 +45,7 @@ public class MenuServiceImpl implements MenuService {
     private TenantService tenantService;
 
     @Override
-    @CacheEvict(value = RedisKeyConstants.PERMISSION_MENU_ID_LIST, key = "#reqVO.permission")
+    @CacheEvict(value = RedisKeyConstants.PERMISSION_MENU_ID_LIST, condition = "#reqVO.permission != null",  key = "#reqVO.permission")
     public Long createMenu(MenuCreateReqVO reqVO) {
         // 校验父菜单存在
         validateParentMenu(reqVO.getParentId(), null);

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/combination/dto/CombinationRecordCreateReqDTO.java
Patch:
@@ -70,7 +70,7 @@ public class CombinationRecordCreateReqDTO {
     @NotEmpty(message = "用户头像不能为空")
     private String avatar;
     /**
-     * 开团状态：正在开团 拼团成功 拼团失败 TODO 等待支付
+     * 开团状态：正在开团 拼团成功 拼团失败
      */
     @NotNull(message = "开团状态不能为空")
     private Integer status;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/bargain/BargainAssistDO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.*;
 
 /**
- * 砍价助力 DO
+ * 砍价助力 DO TODO
  *
  * @author HUIHUI
  */

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/bargain/BargainRecordDO.java
Patch:
@@ -9,7 +9,7 @@
 import java.time.LocalDateTime;
 
 /**
- * 砍价记录 DO
+ * 砍价记录 DO TODO
  *
  * @author HUIHUI
  */

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/combination/CombinationRecordDO.java
Patch:
@@ -52,7 +52,7 @@ public class CombinationRecordDO extends BaseDO {
     /**
      * 团长编号
      *
-     * 关联 {@link CombinationRecordDO#getUserId()}
+     * 关联 {@link CombinationRecordDO#getId()}
      */
     private Long headId;
     /**

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/combination/CombinationRecordMapper.java
Patch:
@@ -15,8 +15,7 @@
 @Mapper
 public interface CombinationRecordMapper extends BaseMapperX<CombinationRecordDO> {
 
-    // TODO @puhui999：selectByUserIdAndOrderId
-    default CombinationRecordDO selectRecord(Long userId, Long orderId) {
+    default CombinationRecordDO selectByUserIdAndOrderId(Long userId, Long orderId) {
         return selectOne(CombinationRecordDO::getUserId, userId,
                 CombinationRecordDO::getOrderId, orderId);
     }

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/ErrorCodeConstants.java
Patch:
@@ -62,6 +62,7 @@ public interface ErrorCodeConstants {
     ErrorCode EXPRESS_NOT_EXISTS = new ErrorCode(1011004000, "快递公司不存在");
     ErrorCode EXPRESS_CODE_DUPLICATE = new ErrorCode(1011004001, "已经存在该编码的快递公司");
     ErrorCode EXPRESS_CLIENT_NOT_PROVIDE = new ErrorCode(1011004002, "需要接入快递服务商，比如【快递100】");
+    ErrorCode EXPRESS_STATUS_NOT_ENABLE = new ErrorCode(1011004003, "快递公司未启用");
 
     ErrorCode EXPRESS_API_QUERY_ERROR = new ErrorCode(1011004101, "快递查询接口异常");
     ErrorCode EXPRESS_API_QUERY_FAILED = new ErrorCode(1011004102, "快递查询返回失败，原因：{}");

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/mail/MailAccountServiceImpl.java
Patch:
@@ -58,7 +58,7 @@ public void updateMailAccount(MailAccountUpdateReqVO updateReqVO) {
     }
 
     @Override
-    @CacheEvict(value = RedisKeyConstants.MAIL_ACCOUNT, key = "#updateReqVO.id")
+    @CacheEvict(value = RedisKeyConstants.MAIL_ACCOUNT, key = "#id")
     public void deleteMailAccount(Long id) {
         // 校验是否存在账号
         validateMailAccountExists(id);

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/combination/dto/CombinationRecordCreateReqDTO.java
Patch:
@@ -5,14 +5,13 @@
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 
-// TODO @puhui999：CombinationRecordCreateReqDTO，这样更容易知道是创建噢
 /**
  * 拼团记录 Request DTO
  *
  * @author HUIHUI
  */
 @Data
-public class CombinationRecordReqDTO {
+public class CombinationRecordCreateReqDTO {
 
     /**
      * 拼团活动编号

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -65,5 +65,8 @@ public interface ErrorCodeConstants {
     ErrorCode COMBINATION_ACTIVITY_STATUS_DISABLE = new ErrorCode(1013010002, "拼团活动已关闭不能修改");
     ErrorCode COMBINATION_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED_OR_END = new ErrorCode(1013010003, "拼团活动未关闭或未结束，不能删除");
     ErrorCode COMBINATION_RECORD_NOT_EXISTS = new ErrorCode(1013010004, "拼团不存在");
+    ErrorCode COMBINATION_RECORD_EXISTS = new ErrorCode(1013010005, "拼团失败，已参与过该拼团");
+    ErrorCode COMBINATION_RECORD_HEAD_NOT_EXISTS = new ErrorCode(1013010006, "拼团失败，父拼团不存在");
+    ErrorCode COMBINATION_RECORD_USER_FULL = new ErrorCode(1013010006, "拼团失败，拼团人数已满");
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/SeckillActivityController.java
Patch:
@@ -85,7 +85,7 @@ public CommonResult<SeckillActivityDetailRespVO> getSeckillActivity(@RequestPara
     @PreAuthorize("@ss.hasPermission('promotion:seckill-activity:query')")
     public CommonResult<List<SeckillActivityRespVO>> getSeckillActivityList(@RequestParam("ids") Collection<Long> ids) {
         List<SeckillActivityDO> list = seckillActivityService.getSeckillActivityList(ids);
-        return success(SeckillActivityConvert.INSTANCE.convertList(list));
+        return success(SeckillActivityConvert.INSTANCE.complementList(list));
     }
 
     @GetMapping("/page")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/SeckillConfigController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.promotion.controller.admin.seckill;
 
+import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.module.promotion.controller.admin.seckill.vo.config.*;
@@ -80,7 +81,7 @@ public CommonResult<List<SeckillConfigRespVO>> getSeckillConfigList() {
     @GetMapping("/list-all-simple")
     @Operation(summary = "获得所有开启状态的秒杀时段精简列表", description = "主要用于前端的下拉选项")
     public CommonResult<List<SeckillConfigSimpleRespVO>> getListAllSimple() {
-        List<SeckillConfigDO> list = seckillConfigService.getListAllSimple();
+        List<SeckillConfigDO> list = seckillConfigService.getSeckillConfigListByStatus(CommonStatusEnum.ENABLE.getStatus());
         return success(SeckillConfigConvert.INSTANCE.convertList1(list));
     }
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/combination/CombinationActivityDO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.promotion.dal.dataobject.combination.combinationactivity;
+package cn.iocoder.yudao.module.promotion.dal.dataobject.combination;
 
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
@@ -9,7 +9,6 @@
 
 import java.time.LocalDateTime;
 
-// TODO @puhui999：是不是应该在 combination 哈？
 /**
  * 拼团活动 DO
  *

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/combination/CombinationProductDO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.promotion.dal.dataobject.combination.combinationactivity;
+package cn.iocoder.yudao.module.promotion.dal.dataobject.combination;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import com.baomidou.mybatisplus.annotation.KeySequence;
@@ -42,6 +42,8 @@ public class CombinationProductDO extends BaseDO {
     private Long skuId;
     /**
      * 拼团商品状态
+     *
+     * 关联 {@link CombinationActivityDO#getStatus()}
      */
     private Integer activityStatus;
     /**

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/combination/CombinationRecordDO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.promotion.dal.dataobject.combination.combinationactivity;
+package cn.iocoder.yudao.module.promotion.dal.dataobject.combination;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.module.promotion.enums.combination.CombinationRecordStatusEnum;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/seckill/seckillconfig/SeckillConfigService.java
Patch:
@@ -73,9 +73,10 @@ public interface SeckillConfigService {
     /**
      * 获得所有正常状态的时段配置列表
      *
+     * @param status 状态
      * @return 秒杀时段列表
      */
-    List<SeckillConfigDO> getListAllSimple();
+    List<SeckillConfigDO> getSeckillConfigListByStatus(Integer status);
 
     /**
      * 更新秒杀时段配置状态

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/seckill/seckillactivity/SeckillActivityServiceImpl.java
Patch:
@@ -64,7 +64,7 @@ public Long createSeckillActivity(SeckillActivityCreateReqVO createReqVO) {
         List<ProductSkuRespDTO> skus = productSkuApi.getSkuListBySpuId(CollUtil.newArrayList(createReqVO.getSpuId()));
         // 校验商品 sku 是否存在
         // TODO @puhui999：直接校验 sku 数量，是不是就完事啦，不需要校验的特别严谨哈；
-        validateProductSkuExistence(skus, createReqVO.getProducts(), SeckillProductCreateReqVO::getSkuId);
+        validateProductSkuExistence(createReqVO.getProducts(), skus, SeckillProductCreateReqVO::getSkuId);
 
         // 插入秒杀活动
         SeckillActivityDO activity = SeckillActivityConvert.INSTANCE.convert(createReqVO)
@@ -122,7 +122,7 @@ public void updateSeckillActivity(SeckillActivityUpdateReqVO updateReqVO) {
         // 获取所选 spu下的所有 sku
         List<ProductSkuRespDTO> skus = productSkuApi.getSkuListBySpuId(CollUtil.newArrayList(updateReqVO.getSpuId()));
         // 校验商品 sku 是否存在
-        validateProductSkuExistence(skus, updateReqVO.getProducts(), SeckillProductUpdateReqVO::getSkuId);
+        validateProductSkuExistence(updateReqVO.getProducts(), skus, SeckillProductUpdateReqVO::getSkuId);
 
         // 更新活动
         SeckillActivityDO updateObj = SeckillActivityConvert.INSTANCE.convert(updateReqVO)

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -5,6 +5,8 @@
 import cn.iocoder.yudao.framework.pay.core.client.PayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.PayClientFactory;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.*;
+import cn.iocoder.yudao.framework.pay.core.client.impl.mock.MockPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.mock.MockPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.weixin.*;
 import cn.iocoder.yudao.framework.pay.core.enums.channel.PayChannelEnum;
 import lombok.extern.slf4j.Slf4j;
@@ -68,6 +70,7 @@ private <Config extends PayClientConfig> AbstractPayClient<Config> createPayClie
             case ALIPAY_APP: return (AbstractPayClient<Config>) new AlipayAppPayClient(channelId, (AlipayPayClientConfig) config);
             case ALIPAY_PC: return (AbstractPayClient<Config>) new AlipayPcPayClient(channelId, (AlipayPayClientConfig) config);
             case ALIPAY_BAR: return (AbstractPayClient<Config>) new AlipayBarPayClient(channelId, (AlipayPayClientConfig) config);
+            case MOCK: return (AbstractPayClient<Config>) new MockPayClient(channelId, (MockPayClientConfig) config);
         }
         // 创建失败，错误日志 + 抛出异常
         log.error("[createPayClient][配置({}) 找不到合适的客户端实现]", config);

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/combination/CombinationApi.java
Patch:
@@ -24,7 +24,8 @@ public interface CombinationApi {
      * @param userId  用户编号
      * @param orderId 订单编号
      */
-    Integer getRecordStatus(Long userId, Long orderId);
+    boolean validateRecordStatusIsSuccess(Long userId, Long orderId);
+
 
     /**
      * 更新开团记录状态
@@ -41,6 +42,7 @@ public interface CombinationApi {
      * @param userId  用户编号
      * @param orderId 订单编号
      * @param status  状态值
+     * @return
      */
     void updateRecordStatusAndStartTime(Long userId, Long orderId, Integer status);
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/api/combination/CombinationApiImpl.java
Patch:
@@ -23,8 +23,8 @@ public void createRecord(CombinationRecordReqDTO reqDTO) {
     }
 
     @Override
-    public Integer getRecordStatus(Long userId, Long orderId) {
-        return activityService.getRecordStatus(userId, orderId);
+    public boolean validateRecordStatusIsSuccess(Long userId, Long orderId) {
+        return activityService.validateRecordStatusIsSuccess(userId, orderId);
     }
 
     @Override

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/combination/CombinationActivityService.java
Patch:
@@ -99,6 +99,7 @@ public interface CombinationActivityService {
      * @param orderId   订单编号
      * @param status    状态
      * @param startTime 开始时间
+     * @return
      */
     void updateRecordStatusAndStartTimeByUserIdAndOrderId(Long userId, Long orderId, Integer status, LocalDateTime startTime);
 
@@ -116,5 +117,5 @@ public interface CombinationActivityService {
      * @param orderId 订单编号
      * @return 拼团状态
      */
-    Integer getRecordStatus(Long userId, Long orderId);
+    boolean validateRecordStatusIsSuccess(Long userId, Long orderId);
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/order/TradeOrderServiceImpl.java
Patch:
@@ -62,7 +62,6 @@
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertSet;
 import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.getSumValue;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
-import static cn.iocoder.yudao.module.pay.enums.ErrorCodeConstants.PAY_ORDER_NOT_FOUND;
 import static cn.iocoder.yudao.module.pay.enums.ErrorCodeConstants.ORDER_NOT_FOUND;
 import static cn.iocoder.yudao.module.trade.enums.ErrorCodeConstants.*;
 
@@ -345,7 +344,7 @@ private KeyValue<TradeOrderDO, PayOrderRespDTO> validateOrderPayable(Long id, Lo
         PayOrderRespDTO payOrder = payOrderApi.getOrder(payOrderId);
         if (payOrder == null) {
             log.error("[validateOrderPaid][order({}) payOrder({}) 不存在，请进行处理！]", id, payOrderId);
-            throw exception(cn.iocoder.yudao.module.pay.enums.ErrorCodeConstants.ORDER_NOT_FOUND);
+            throw exception(ORDER_NOT_FOUND);
         }
         // 校验支付单已支付
         if (!PayOrderStatusEnum.isSuccess(payOrder.getStatus())) {

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/PayClient.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedReqDTO;
-import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundUnifiedReqDTO;
 
@@ -30,7 +29,7 @@ public interface PayClient {
      * @param reqDTO 下单信息
      * @return 各支付渠道的返回结果
      */
-    PayOrderUnifiedRespDTO unifiedOrder(PayOrderUnifiedReqDTO reqDTO);
+    PayOrderRespDTO unifiedOrder(PayOrderUnifiedReqDTO reqDTO);
 
     /**
      * 解析 order 回调数据

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/order/PayOrderUnifiedReqDTO.java
Patch:
@@ -43,7 +43,6 @@ public class PayOrderUnifiedReqDTO {
     /**
      * 商品描述信息
      */
-    @NotEmpty(message = "商品描述信息不能为空")
     @Length(max = 128, message = "商品描述信息长度不能超过128")
     private String body;
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/weixin/WxAppPayClient.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.framework.pay.core.client.impl.weixin;
 
+import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedReqDTO;
-import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedRespDTO;
 import cn.iocoder.yudao.framework.pay.core.enums.channel.PayChannelEnum;
 import com.github.binarywang.wxpay.constant.WxPayConstants;
 import com.github.binarywang.wxpay.exception.WxPayException;
@@ -19,12 +19,12 @@ protected void doInit() {
     }
 
     @Override
-    protected PayOrderUnifiedRespDTO doUnifiedOrderV2(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
+    protected PayOrderRespDTO doUnifiedOrderV2(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
         return null;
     }
 
     @Override
-    protected PayOrderUnifiedRespDTO doUnifiedOrderV3(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
+    protected PayOrderRespDTO doUnifiedOrderV3(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
         return null;
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/weixin/WxH5PayClient.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.framework.pay.core.client.impl.weixin;
 
+import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderRespDTO;
 import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedReqDTO;
-import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedRespDTO;
 import cn.iocoder.yudao.framework.pay.core.enums.channel.PayChannelEnum;
 import com.github.binarywang.wxpay.constant.WxPayConstants;
 import com.github.binarywang.wxpay.exception.WxPayException;
@@ -19,12 +19,12 @@ protected void doInit() {
     }
 
     @Override
-    protected PayOrderUnifiedRespDTO doUnifiedOrderV2(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
+    protected PayOrderRespDTO doUnifiedOrderV2(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
         return null;
     }
 
     @Override
-    protected PayOrderUnifiedRespDTO doUnifiedOrderV3(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
+    protected PayOrderRespDTO doUnifiedOrderV3(PayOrderUnifiedReqDTO reqDTO) throws WxPayException {
         return null;
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/order/PayOrderDisplayModeEnum.java
Patch:
@@ -18,8 +18,7 @@ public enum PayOrderDisplayModeEnum {
     QR_CODE("qr_code"), // 二维码的文字内容
     QR_CODE_URL("qr_code_url"), // 二维码的图片链接
     BAR_CODE("bar_code"), // 条形码
-    APP("app"), // 应用【目前暂时用不到】
-    CUSTOM("custom"), // 自定义：每种支付方式，做个性化处理；例如说，微信公众号支付时，调用 JSAPI 接口
+    APP("app"), // 应用：Android、iOS、微信小程序、微信公众号等，需要做自定义处理的
     ;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/aftersale/TradeAfterSaleServiceImpl.java
Patch:
@@ -351,7 +351,7 @@ private void createPayRefund(String userIp, TradeAfterSaleDO afterSale) {
             public void afterCommit() {
                 // 创建退款单
                 PayRefundCreateReqDTO createReqDTO = TradeAfterSaleConvert.INSTANCE.convert(userIp, afterSale, tradeOrderProperties);
-                Long payRefundId = payRefundApi.createPayRefund(createReqDTO);
+                Long payRefundId = payRefundApi.createRefund(createReqDTO);
                 // 更新售后单的退款单号
                 tradeAfterSaleMapper.updateById(new TradeAfterSaleDO().setId(afterSale.getId()).setPayRefundId(payRefundId));
             }

File: yudao-module-pay/yudao-module-pay-api/src/main/java/cn/iocoder/yudao/module/pay/api/refund/PayRefundApi.java
Patch:
@@ -18,14 +18,14 @@ public interface PayRefundApi {
      * @param reqDTO 创建请求
      * @return 退款单编号
      */
-    Long createPayRefund(@Valid PayRefundCreateReqDTO reqDTO);
+    Long createRefund(@Valid PayRefundCreateReqDTO reqDTO);
 
     /**
      * 获得退款单
      *
      * @param id 退款单编号
      * @return 退款单
      */
-    PayRefundRespDTO getPayRefund(Long id);
+    PayRefundRespDTO getRefund(Long id);
 
 }

File: yudao-module-pay/yudao-module-pay-api/src/main/java/cn/iocoder/yudao/module/pay/enums/ErrorCodeConstants.java
Patch:
@@ -27,6 +27,7 @@ public interface ErrorCodeConstants {
     ErrorCode PAY_ORDER_STATUS_IS_NOT_WAITING = new ErrorCode(1007002001, "支付订单不处于待支付");
     ErrorCode PAY_ORDER_STATUS_IS_NOT_SUCCESS = new ErrorCode(1007002002, "支付订单不处于已支付");
     ErrorCode PAY_ORDER_IS_EXPIRED = new ErrorCode(1007002003, "支付订单已经过期");
+    ErrorCode PAY_ORDER_SUBMIT_CHANNEL_ERROR = new ErrorCode(1007002004, "发起支付报错，错误码：{}，错误提示：{}");
 
     // ========== ORDER 模块(拓展单) 1007003000 ==========
     ErrorCode PAY_ORDER_EXTENSION_NOT_FOUND = new ErrorCode(1007003000, "支付交易拓展单不存在");

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/api/refund/PayRefundApiImpl.java
Patch:
@@ -22,12 +22,12 @@ public class PayRefundApiImpl implements PayRefundApi {
     private PayRefundService payRefundService;
 
     @Override
-    public Long createPayRefund(PayRefundCreateReqDTO reqDTO) {
+    public Long createRefund(PayRefundCreateReqDTO reqDTO) {
         return payRefundService.createPayRefund(reqDTO);
     }
 
     @Override
-    public PayRefundRespDTO getPayRefund(Long id) {
+    public PayRefundRespDTO getRefund(Long id) {
         return PayRefundConvert.INSTANCE.convert02(payRefundService.getRefund(id));
     }
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/convert/order/PayOrderConvert.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedReqDTO;
-import cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderUnifiedRespDTO;
 import cn.iocoder.yudao.module.pay.api.order.dto.PayOrderCreateReqDTO;
 import cn.iocoder.yudao.module.pay.api.order.dto.PayOrderRespDTO;
 import cn.iocoder.yudao.module.pay.controller.admin.order.vo.*;
@@ -93,7 +92,8 @@ default PayOrderExcelVO excelConvert(PayOrderDO bean) {
 
     PayOrderUnifiedReqDTO convert2(PayOrderSubmitReqVO reqVO, String userIp);
 
-    PayOrderSubmitRespVO convert(PayOrderDO order, PayOrderUnifiedRespDTO unifiedRespDTO);
+    @Mapping(source = "order.status", target = "status")
+    PayOrderSubmitRespVO convert(PayOrderDO order, cn.iocoder.yudao.framework.pay.core.client.dto.order.PayOrderRespDTO respDTO);
 
     AppPayOrderSubmitRespVO convert3(PayOrderSubmitRespVO bean);
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/dataobject/refund/PayRefundDO.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.pay.dal.dataobject.refund;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
+import cn.iocoder.yudao.framework.pay.core.client.dto.refund.PayRefundRespDTO;
 import cn.iocoder.yudao.framework.pay.core.enums.channel.PayChannelEnum;
 import cn.iocoder.yudao.module.pay.dal.dataobject.app.PayAppDO;
 import cn.iocoder.yudao.module.pay.dal.dataobject.channel.PayChannelDO;
@@ -151,9 +152,9 @@ public class PayRefundDO extends BaseDO {
     private String channelErrorMsg;
 
     /**
-     * 支付渠道异步通知的内容
+     * 支付渠道的同步/异步通知的内容
      *
-     * 在退款成功后，会记录回调的数据
+     * 对应 {@link PayRefundRespDTO#getRawData()}
      */
     private String channelNotifyData;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/demo/PayDemoOrderServiceImpl.java
Patch:
@@ -189,7 +189,7 @@ public void refundDemoOrder(Long id, String userIp) {
         // 这里我们是个简单的 demo，所以没有售后维权表，直接使用订单 id + "-refund" 来演示
         String refundId = order.getId() + "-refund";
         // 2.2 创建退款单
-        Long payRefundId = payRefundApi.createPayRefund(new PayRefundCreateReqDTO()
+        Long payRefundId = payRefundApi.createRefund(new PayRefundCreateReqDTO()
                 .setAppId(PAY_APP_ID).setUserIp(getClientIP()) // 支付应用
                 .setMerchantOrderId(String.valueOf(order.getId())) // 支付单号
                 .setMerchantRefundId(refundId)
@@ -239,7 +239,7 @@ private PayRefundRespDTO validateDemoOrderCanRefunded(Long id, Long payRefundId)
         }
 
         // 2.1 校验退款订单
-        PayRefundRespDTO payRefund = payRefundApi.getPayRefund(payRefundId);
+        PayRefundRespDTO payRefund = payRefundApi.getRefund(payRefundId);
         if (payRefund == null) {
             throw exception(PAY_DEMO_ORDER_REFUND_FAIL_REFUND_NOT_FOUND);
         }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityRespVO.java
Patch:
@@ -18,7 +18,7 @@ public class SeckillActivityRespVO extends SeckillActivityBaseVO {
     @Schema(description = "商品名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "618大促")
     private String spuName;
 
-    @Schema(description = "商品主图", requiredMode = Schema.RequiredMode.REQUIRED, example = "618大促")
+    @Schema(description = "商品主图", requiredMode = Schema.RequiredMode.REQUIRED, example = "https://www.iocoder.cn/xx.png")
     private String picUrl;
 
     @Schema(description = "秒杀活动id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/seckill/seckillactivity/SeckillActivityConvert.java
Patch:
@@ -62,7 +62,7 @@ default SeckillActivityDetailRespVO convert(SeckillActivityDO seckillActivity, L
     }
 
     @Mappings({
-            @Mapping(target = "id", expression = "java(null)"),
+            @Mapping(target = "id", ignore = true),
             @Mapping(target = "activityId", source = "activityDO.id"),
             @Mapping(target = "configIds", source = "activityDO.configIds"),
             @Mapping(target = "spuId", source = "activityDO.spuId"),

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/combination/combinationactivity/CombinationProductMapper.java
Patch:
@@ -8,6 +8,7 @@
 import cn.iocoder.yudao.module.promotion.dal.dataobject.combination.combinationactivity.CombinationProductDO;
 import org.apache.ibatis.annotations.Mapper;
 
+import java.util.Collection;
 import java.util.List;
 
 /**
@@ -44,8 +45,8 @@ default List<CombinationProductDO> selectList(CombinationProductExportReqVO reqV
                 .orderByDesc(CombinationProductDO::getId));
     }
 
-    default List<CombinationProductDO> selectListByActivityId(Long id) {
-        return selectList(CombinationProductDO::getActivityId, id);
+    default List<CombinationProductDO> selectListByActivityIds(Collection<Long> ids) {
+        return selectList(CombinationProductDO::getActivityId, ids);
     }
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/combination/CombinationActivityService.java
Patch:
@@ -76,8 +76,8 @@ public interface CombinationActivityService {
     /**
      * 获得拼团活动商品列表
      *
-     * @param id 拼团活动 ID
+     * @param ids 拼团活动 ids
      * @return 拼团活动的商品列表
      */
-    List<CombinationProductDO> getProductsByActivityId(Long id);
+    List<CombinationProductDO> getProductsByActivityIds(Collection<Long> ids);
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/combination/CombinationActivityServiceImpl.java
Patch:
@@ -129,7 +129,7 @@ public void updateCombinationActivity(CombinationActivityUpdateReqVO updateReqVO
      * @param products  商品配置
      */
     private void updateCombinationProduct(CombinationActivityDO updateObj, List<CombinationProductUpdateReqVO> products) {
-        List<CombinationProductDO> combinationProductDOs = combinationProductMapper.selectListByActivityId(updateObj.getId());
+        List<CombinationProductDO> combinationProductDOs = combinationProductMapper.selectListByActivityIds(CollUtil.newArrayList(updateObj.getId()));
         // 数据库中的活动商品
         Set<Long> convertSet = CollectionUtils.convertSet(combinationProductDOs, CombinationProductDO::getSkuId);
         // 前端传过来的活动商品
@@ -197,8 +197,8 @@ public List<CombinationActivityDO> getCombinationActivityList(CombinationActivit
     }
 
     @Override
-    public List<CombinationProductDO> getProductsByActivityId(Long id) {
-        return combinationProductMapper.selectListByActivityId(id);
+    public List<CombinationProductDO> getProductsByActivityIds(Collection<Long> ids) {
+        return combinationProductMapper.selectListByActivityIds(ids);
     }
 
 }

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -62,5 +62,7 @@ public interface ErrorCodeConstants {
 
     // ========== 拼团活动 1013010000 ==========
     ErrorCode COMBINATION_ACTIVITY_NOT_EXISTS = new ErrorCode(1013010000, "拼团活动不存在");
-    ErrorCode COMBINATION_ACTIVITY_SPU_CONFLICTS = new ErrorCode(1013010000, "存在商品参加了其它拼团活动");
+    ErrorCode COMBINATION_ACTIVITY_SPU_CONFLICTS = new ErrorCode(1013010001, "存在商品参加了其它拼团活动");
+    ErrorCode COMBINATION_ACTIVITY_STATUS_DISABLE = new ErrorCode(1013010002, "拼团活动已关闭不能修改");
+    ErrorCode COMBINATION_ACTIVITY_DELETE_FAIL_STATUS_NOT_CLOSED_OR_END = new ErrorCode(1013010003, "拼团活动未关闭或未结束，不能删除");
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/combination/CombinationActivityController.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.module.promotion.controller.admin.combination.vo.activity.*;
 import cn.iocoder.yudao.module.promotion.convert.combination.CombinationActivityConvert;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.combination.combinationactivity.CombinationActivityDO;
+import cn.iocoder.yudao.module.promotion.dal.dataobject.combination.combinationactivity.CombinationProductDO;
 import cn.iocoder.yudao.module.promotion.service.combination.CombinationActivityService;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.Parameter;
@@ -64,7 +65,8 @@ public CommonResult<Boolean> deleteCombinationActivity(@RequestParam("id") Long
     @PreAuthorize("@ss.hasPermission('promotion:combination-activity:query')")
     public CommonResult<CombinationActivityRespVO> getCombinationActivity(@RequestParam("id") Long id) {
         CombinationActivityDO combinationActivity = combinationActivityService.getCombinationActivity(id);
-        return success(CombinationActivityConvert.INSTANCE.convert(combinationActivity));
+        List<CombinationProductDO> productDOs = combinationActivityService.getProductsByActivityId(id);
+        return success(CombinationActivityConvert.INSTANCE.convert(combinationActivity, productDOs));
     }
 
     @GetMapping("/list")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/combination/vo/activity/CombinationActivityBaseVO.java
Patch:
@@ -6,7 +6,6 @@
 
 import javax.validation.constraints.NotNull;
 import java.time.LocalDateTime;
-import java.util.List;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -23,7 +22,7 @@ public class CombinationActivityBaseVO {
 
     @Schema(description = "商品 SPU 编号关联 ProductSpuDO 的 id", example = "[1,2,3]")
     @NotNull(message = "拼团商品不能为空")
-    private List<Long> spuIds;
+    private Long spuId;
 
     @Schema(description = "总限购数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "16218")
     @NotNull(message = "总限购数量不能为空")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/combination/vo/activity/CombinationActivityCreateReqVO.java
Patch:
@@ -6,6 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
+import javax.validation.Valid;
 import java.util.List;
 
 @Schema(description = "管理后台 - 拼团活动创建 Request VO")
@@ -14,7 +15,8 @@
 @ToString(callSuper = true)
 public class CombinationActivityCreateReqVO extends CombinationActivityBaseVO {
 
-    @Schema(description = "秒杀商品", requiredMode = Schema.RequiredMode.REQUIRED)
+    @Schema(description = "拼团商品", requiredMode = Schema.RequiredMode.REQUIRED)
+    @Valid
     private List<CombinationProductCreateReqVO> products;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/combination/combinationactivity/CombinationActivityMapper.java
Patch:
@@ -34,4 +34,5 @@ default List<CombinationActivityDO> selectList(CombinationActivityExportReqVO re
     default List<CombinationActivityDO> selectListByStatus(Integer status) {
         return selectList(CombinationActivityDO::getStatus, status);
     }
+
 }

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/enums/ErrorCodeConstants.java
Patch:
@@ -46,7 +46,7 @@ public interface ErrorCodeConstants {
 
     // ========== 商品 评价 1008007000 ==========
     ErrorCode COMMENT_NOT_EXISTS = new ErrorCode(1008007000, "商品 评价 不存在");
-    ErrorCode ORDER_SPU_COMMENT_EXISTS = new ErrorCode(1008007001, "订单 商品评价 已存在");
+    ErrorCode ORDER_SKU_COMMENT_EXISTS = new ErrorCode(1008007001, "订单 商品评价 已存在");
     ErrorCode COMMENT_ERROR_OPT = new ErrorCode(1008007002, "商品评价非法操作");
     ErrorCode COMMENT_ADDITIONAL_EXISTS  = new ErrorCode(1008007003, "商品追加评价已存在");
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentPageReqVO.java
Patch:
@@ -35,9 +35,8 @@ public class ProductCommentPageReqVO extends PageParam {
     @InEnum(ProductCommentScoresEnum.class)
     private Integer scores;
 
-    // TODO @puhui999：replyStatus 哈
     @Schema(description = "商家是否回复", example = "true")
-    private Boolean replied;
+    private Boolean replyStatus;
 
     @Schema(description = "创建时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/comment/ProductCommentMapper.java
Patch:
@@ -51,11 +51,11 @@ default PageResult<ProductCommentDO> selectPage(AppCommentPageReqVO reqVO, Boole
         return selectPage(reqVO, queryWrapper);
     }
 
-    default ProductCommentDO selectByUserIdAndOrderItemIdAndSpuId(Long userId, Long orderItemId, Long spuId) {
+    default ProductCommentDO selectByUserIdAndOrderItemIdAndSpuId(Long userId, Long orderItemId, Long skuId) {
         return selectOne(new LambdaQueryWrapperX<ProductCommentDO>()
                 .eq(ProductCommentDO::getUserId, userId)
                 .eq(ProductCommentDO::getOrderItemId, orderItemId)
-                .eq(ProductCommentDO::getSpuId, spuId));
+                .eq(ProductCommentDO::getSpuId, skuId));
     }
 
     default Long selectCountBySpuId(Long spuId, Boolean visible, Integer type) {

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentService.java
Patch:
@@ -54,7 +54,7 @@ public interface ProductCommentService {
      * @param visible 是否可见
      * @return 商品评价分页
      */
-    PageResult<AppProductCommentRespVO> getCommentPage(AppCommentPageReqVO pageVO, Boolean visible);
+    PageResult<ProductCommentDO> getCommentPage(AppCommentPageReqVO pageVO, Boolean visible);
 
     /**
      * 创建商品评论

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/enums/ErrorCodeConstants.java
Patch:
@@ -27,6 +27,8 @@ public interface ErrorCodeConstants {
     ErrorCode ORDER_UPDATE_PAID_FAIL_PAY_PRICE_NOT_MATCH = new ErrorCode(1011000016, "交易订单更新支付状态失败，支付单金额不匹配");
     ErrorCode ORDER_DELIVERY_FAIL_STATUS_NOT_UNDELIVERED = new ErrorCode(1011000017, "交易订单发货失败，订单不是【待发货】状态");
     ErrorCode ORDER_RECEIVE_FAIL_STATUS_NOT_DELIVERED = new ErrorCode(1011000018, "交易订单收货失败，订单不是【待收货】状态");
+    ErrorCode ORDER_COMMENT_FAIL_STATUS_NOT_COMPLETED = new ErrorCode(1011000019, "创建交易订单项的评价失败，订单不是【已完成】状态");
+    ErrorCode ORDER_COMMENT_STATUS_NOT_FALSE = new ErrorCode(1011000019, "创建交易订单项的评价失败，订单已评价");
 
     // ==========  After Sale 模块 1011000100 ==========
     ErrorCode AFTER_SALE_NOT_FOUND = new ErrorCode(1011000100, "售后单不存在");

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -270,7 +270,6 @@ default AppTradeOrderDetailRespVO convert02(TradeOrderDO order, List<TradeOrderI
     @Mapping(target = "skuId", source = "tradeOrderItemDO.skuId")
     @Mapping(target = "orderId", source = "tradeOrderItemDO.orderId")
     @Mapping(target = "orderItemId", source = "tradeOrderItemDO.id")
-    @Mapping(target = "scores", source = "createReqVO.scores")
     @Mapping(target = "descriptionScores", source = "createReqVO.descriptionScores")
     @Mapping(target = "benefitScores", source = "createReqVO.benefitScores")
     @Mapping(target = "content", source = "createReqVO.content")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/util/PromotionUtils.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.promotion.util;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.date.LocalDateTimeUtils;
@@ -35,7 +36,8 @@ public static <T> void validateProductSkuExistence(List<ProductSkuRespDTO> skus,
         Set<Long> skuIdsSet = CollectionUtils.convertSet(products, func);
         Set<Long> skuIdsSet1 = CollectionUtils.convertSet(skus, ProductSkuRespDTO::getId);
         // 校验 skuId 是否存在
-        if (!skuIdsSet1.containsAll(skuIdsSet) || !skuIdsSet.containsAll(skuIdsSet1)) {
+        List<Long> f = CollectionUtils.filterList(skuIdsSet, s -> !skuIdsSet1.contains(s));
+        if (CollUtil.isNotEmpty(f)) {
             throw exception(SKU_NOT_EXISTS);
         }
     }

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/api/sku/ProductSkuApi.java
Patch:
@@ -30,14 +30,13 @@ public interface ProductSkuApi {
      */
     List<ProductSkuRespDTO> getSkuList(Collection<Long> ids);
 
-    // TODO puhui999：入参用 Collection<Long> 更通用
     /**
      * 批量查询 SKU 数组
      *
      * @param spuIds SPU 编号列表
      * @return SKU 数组
      */
-    List<ProductSkuRespDTO> getSkuListBySpuId(List<Long> spuIds);
+    List<ProductSkuRespDTO> getSkuListBySpuId(Collection<Long> spuIds);
 
     /**
      * 更新 SKU 库存

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/api/sku/ProductSkuApiImpl.java
Patch:
@@ -43,7 +43,7 @@ public List<ProductSkuRespDTO> getSkuList(Collection<Long> ids) {
     }
 
     @Override
-    public List<ProductSkuRespDTO> getSkuListBySpuId(List<Long> spuIds) {
+    public List<ProductSkuRespDTO> getSkuListBySpuId(Collection<Long> spuIds) {
         if (CollUtil.isEmpty(spuIds)) {
             return Collections.emptyList();
         }

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -4,7 +4,7 @@
 
 /**
  * Promotion 错误码枚举类
- *
+ * <p>
  * promotion 系统，使用 1-013-000-000 段
  */
 public interface ErrorCodeConstants {
@@ -58,6 +58,7 @@ public interface ErrorCodeConstants {
     ErrorCode SECKILL_TIME_CONFLICTS = new ErrorCode(1013009001, "秒杀时段冲突");
     ErrorCode SECKILL_TIME_EQUAL = new ErrorCode(1013009002, "秒杀时段开始时间和结束时间不能相等");
     ErrorCode SECKILL_START_TIME_BEFORE_END_TIME = new ErrorCode(1013009003, "秒杀时段开始时间不能在结束时间之后");
+    ErrorCode SECKILL_TIME_DISABLE = new ErrorCode(1013009004, "秒杀时段已关闭");
 
     // ========== 拼团活动 1013010000 ==========
     ErrorCode COMBINATION_ACTIVITY_NOT_EXISTS = new ErrorCode(1013010000, "拼团活动不存在");

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityRespVO.java
Patch:
@@ -23,7 +23,7 @@ public class SeckillActivityRespVO extends SeckillActivityBaseVO {
     private Long id;
 
     @Schema(description = "秒杀商品", requiredMode = Schema.RequiredMode.REQUIRED)
-    private List<SeckillProductRespVO> products; // TODO puhui: 考虑是否去除
+    private List<SeckillProductRespVO> products;
 
     @Schema(description = "活动状态 开启：0 禁用：1", requiredMode = Schema.RequiredMode.REQUIRED, example = "0")
     private Integer status;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/seckill/seckillactivity/SeckillActivityDO.java
Patch:
@@ -34,8 +34,7 @@ public class SeckillActivityDO extends BaseDO {
     /**
      * 秒杀活动商品
      */
-    @TableField(typeHandler = LongListTypeHandler.class)
-    private List<Long> spuIds;
+    private Long spuId;
     /**
      * 秒杀活动名称
      */

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/auth/MemberAuthServiceImpl.java
Patch:
@@ -127,7 +127,7 @@ public AppAuthLoginRespVO weixinMiniAppLogin(AppAuthWeixinMiniAppLoginReqVO reqV
         // 获得对应的手机号信息
         WxMaPhoneNumberInfo phoneNumberInfo;
         try {
-            phoneNumberInfo = wxMaService.getUserService().getNewPhoneNoInfo(reqVO.getPhoneCode());
+            phoneNumberInfo = wxMaService.getUserService().getPhoneNoInfo(reqVO.getPhoneCode());
         } catch (Exception exception) {
             throw exception(AUTH_WEIXIN_MINI_APP_PHONE_CODE_ERROR);
         }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityRespVO.java
Patch:
@@ -6,7 +6,6 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -24,8 +23,10 @@ public class SeckillActivityRespVO extends SeckillActivityBaseVO {
     private Long id;
 
     @Schema(description = "秒杀商品", requiredMode = Schema.RequiredMode.REQUIRED)
-    private List<SeckillProductRespVO> products;
+    private List<SeckillProductRespVO> products; // TODO puhui: 考虑是否去除
 
+    @Schema(description = "活动状态 开启：0 禁用：1", requiredMode = Schema.RequiredMode.REQUIRED, example = "0")
+    private Integer status;
 
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/seckill/seckillactivity/SeckillActivityDO.java
Patch:
@@ -3,7 +3,6 @@
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.mybatis.core.type.LongListTypeHandler;
-import cn.iocoder.yudao.module.promotion.enums.common.PromotionActivityStatusEnum;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableId;
@@ -35,7 +34,8 @@ public class SeckillActivityDO extends BaseDO {
     /**
      * 秒杀活动商品
      */
-    private Long spuId;
+    @TableField(typeHandler = LongListTypeHandler.class)
+    private List<Long> spuIds;
     /**
      * 秒杀活动名称
      */

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/discount/DiscountActivityServiceImpl.java
Patch:
@@ -52,7 +52,7 @@ public Long createDiscountActivity(DiscountActivityCreateReqVO createReqVO) {
 
         // 插入活动
         DiscountActivityDO discountActivity = DiscountActivityConvert.INSTANCE.convert(createReqVO)
-                .setStatus(PromotionUtils.calculateActivityStatus(createReqVO.getStartTime(), createReqVO.getEndTime()));
+                .setStatus(PromotionUtils.calculateActivityStatus(createReqVO.getEndTime()));
         discountActivityMapper.insert(discountActivity);
         // 插入商品
         List<DiscountProductDO> discountProducts = convertList(createReqVO.getProducts(),
@@ -74,7 +74,7 @@ public void updateDiscountActivity(DiscountActivityUpdateReqVO updateReqVO) {
 
         // 更新活动
         DiscountActivityDO updateObj = DiscountActivityConvert.INSTANCE.convert(updateReqVO)
-                .setStatus(PromotionUtils.calculateActivityStatus(updateReqVO.getStartTime(), updateReqVO.getEndTime()));
+                .setStatus(PromotionUtils.calculateActivityStatus(updateReqVO.getEndTime()));
         discountActivityMapper.updateById(updateObj);
         // 更新商品
         updateDiscountProduct(updateReqVO);

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/service/reward/RewardActivityServiceImpl.java
Patch:
@@ -41,7 +41,7 @@ public Long createRewardActivity(RewardActivityCreateReqVO createReqVO) {
 
         // 插入
         RewardActivityDO rewardActivity = RewardActivityConvert.INSTANCE.convert(createReqVO)
-                .setStatus(PromotionUtils.calculateActivityStatus(createReqVO.getStartTime(), createReqVO.getEndTime()));
+                .setStatus(PromotionUtils.calculateActivityStatus(createReqVO.getEndTime()));
         rewardActivityMapper.insert(rewardActivity);
         // 返回
         return rewardActivity.getId();
@@ -59,7 +59,7 @@ public void updateRewardActivity(RewardActivityUpdateReqVO updateReqVO) {
 
         // 更新
         RewardActivityDO updateObj = RewardActivityConvert.INSTANCE.convert(updateReqVO)
-                .setStatus(PromotionUtils.calculateActivityStatus(updateReqVO.getStartTime(), updateReqVO.getEndTime()));
+                .setStatus(PromotionUtils.calculateActivityStatus(updateReqVO.getEndTime()));
         rewardActivityMapper.updateById(updateObj);
     }
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandSimpleRespVO.java
Patch:
@@ -5,17 +5,16 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-// TODO @puhui999：class 类的开始和结束，都要有一个空行哈。
 @Schema(description = "管理后台 - 品牌精简信息 Response VO")
 @Data
 @NoArgsConstructor
 @AllArgsConstructor
 public class ProductBrandSimpleRespVO {
 
-    @Schema(description = "品牌编号", required = true, example = "1024")
+    @Schema(description = "品牌编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "品牌名称", required = true, example = "苹果")
+    @Schema(description = "品牌名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "苹果")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuPageReqVO.java
Patch:
@@ -1,7 +1,6 @@
 package cn.iocoder.yudao.module.product.controller.admin.spu.vo;
 
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
-import cn.iocoder.yudao.framework.common.validation.InEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -51,7 +50,7 @@ public class ProductSpuPageReqVO extends PageParam {
     @Schema(description = "商品名称", example = "清凉小短袖")
     private String name;
 
-    @Schema(description = "前端请求的tab类型", required = true, example = "1")
+    @Schema(description = "前端请求的tab类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer tabType;
 
     @Schema(description = "商品分类编号", example = "1")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/comment/ProductCommentConvert.java
Patch:
@@ -82,4 +82,5 @@ default ProductCommentDO convert(ProductCommentCreateReqDTO createReqDTO, Produc
     ProductCommentDO convert(ProductCommentCreateReqVO createReq);
 
     List<AppProductCommentRespVO> convertList02(List<ProductCommentDO> list);
+
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/combination/vo/record/AppCombinationRecordSummaryRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @Data
 public class AppCombinationRecordSummaryRespVO {
 
-    @Schema(description = "拼团用户数量", required = true, example = "1024")
+    @Schema(description = "拼团用户数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer userCount;
 
-    @Schema(description = "拼团用户头像列表", required = true) // 只返回最近的 7 个
+    @Schema(description = "拼团用户头像列表", requiredMode = Schema.RequiredMode.REQUIRED) // 只返回最近的 7 个
     private List<String> avatars;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/app/seckill/vo/activity/AppSeckillActivityNowRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @Data
 public class AppSeckillActivityNowRespVO {
 
-    @Schema(description = "秒杀时间段", required = true)
+    @Schema(description = "秒杀时间段", requiredMode = Schema.RequiredMode.REQUIRED)
     private AppSeckillConfigRespVO config;
 
-    @Schema(description = "秒杀活动数组", required = true)
+    @Schema(description = "秒杀活动数组", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<AppSeckillActivityRespVO> activities;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/delivery/vo/express/DeliveryExpressUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class DeliveryExpressUpdateReqVO extends DeliveryExpressBaseVO {
 
-    @Schema(description = "编号", required = true, example = "6592")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "6592")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/delivery/vo/expresstemplate/DeliveryExpressTemplateBaseVO.java
Patch:
@@ -12,15 +12,15 @@
 @Data
 public class DeliveryExpressTemplateBaseVO {
 
-    @Schema(description = "模板名称", required = true, example = "王五")
+    @Schema(description = "模板名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "王五")
     @NotNull(message = "模板名称不能为空")
     private String name;
 
-    @Schema(description = "配送计费方式 1:按件 2:按重量 3:按体积", required = true)
+    @Schema(description = "配送计费方式 1:按件 2:按重量 3:按体积", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "配送计费方式 1:按件 2:按重量 3:按体积不能为空")
     private Integer chargeMode;
 
-    @Schema(description = "排序", required = true)
+    @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "排序不能为空")
     private Integer sort;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/delivery/vo/expresstemplate/DeliveryExpressTemplateSimpleRespVO.java
Patch:
@@ -12,10 +12,10 @@
 @AllArgsConstructor
 public class DeliveryExpressTemplateSimpleRespVO {
 
-    @Schema(description = "模版编号", required = true, example = "1024")
+    @Schema(description = "模版编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "模板名称", required = true, example = "测试模版")
+    @Schema(description = "模板名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "测试模版")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/delivery/vo/expresstemplate/DeliveryExpressTemplateUpdateReqVO.java
Patch:
@@ -15,7 +15,7 @@
 @ToString(callSuper = true)
 public class DeliveryExpressTemplateUpdateReqVO extends DeliveryExpressTemplateBaseVO {
 
-    @Schema(description = "编号", required = true, example = "371")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "371")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/aftersale/vo/AppTradeAfterSaleCreateReqVO.java
Patch:
@@ -36,7 +36,7 @@ public class AppTradeAfterSaleCreateReqVO {
     /**
      * @see AfterSaleStatusEnum
      */
-    @Schema(description = "操作类型", required = true, example = "1")
+    @Schema(description = "操作类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "操作类型不能为空")
     private String operateType;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartAddReqVO.java
Patch:
@@ -17,7 +17,7 @@ public class AppTradeCartAddReqVO {
     @NotNull(message = "数量不能为空")
     private Integer count;
 
-    @Schema(description = "是否添加到购物车", required = true, example = "true")
+    @Schema(description = "是否添加到购物车", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否添加购物车不能为空")
     private Boolean addStatus;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartListRespVO.java
Patch:
@@ -25,10 +25,10 @@ public class AppTradeCartListRespVO {
     @Data
     public static class Cart {
 
-        @Schema(description = "购物项的编号", required = true, example = "1024")
+        @Schema(description = "购物项的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
         private Long id;
 
-        @Schema(description = "商品数量", required = true, example = "1")
+        @Schema(description = "商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
         private Integer count;
 
         /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartUpdateReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "商品数量", required = true, example = "1")
+    @Schema(description = "商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数量不能为空")
     @Min(message = "数量必须大于 0", value = 1L)
     private Integer count;

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/api/comment/ProductCommentApi.java
Patch:
@@ -9,14 +9,12 @@
  */
 public interface ProductCommentApi {
 
-    // TODO @puhui：Long orderId 放到 createReqDTO 里噶？
     /**
      * 创建评论
      *
      * @param createReqDTO 评论参数
-     * @param orderId      订单 id
      * @return 返回评论创建后的 id
      */
-    Long createComment(ProductCommentCreateReqDTO createReqDTO, Long orderId);
+    Long createComment(ProductCommentCreateReqDTO createReqDTO);
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentReplyReqVO.java
Patch:
@@ -12,11 +12,11 @@
 @ToString(callSuper = true)
 public class ProductCommentReplyReqVO {
 
-    @Schema(description = "评价编号", required = true, example = "15721")
+    @Schema(description = "评价编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "15721")
     @NotNull(message = "评价编号不能为空")
     private Long id;
 
-    @Schema(description = "商家回复内容", required = true, example = "谢谢亲")
+    @Schema(description = "商家回复内容", requiredMode = Schema.RequiredMode.REQUIRED, example = "谢谢亲")
     @NotEmpty(message = "商家回复内容不能为空")
     private String replyContent;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentUpdateVisibleReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @ToString(callSuper = true)
 public class ProductCommentUpdateVisibleReqVO {
 
-    @Schema(description = "评价编号", required = true, example = "15721")
+    @Schema(description = "评价编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "15721")
     @NotNull(message = "评价编号不能为空")
     private Long id;
 
-    @Schema(description = "是否可见", required = true, example = "false")
+    @Schema(description = "是否可见", requiredMode = Schema.RequiredMode.REQUIRED, example = "false")
     @NotNull(message = "是否可见不能为空")
     private Boolean visible;
 

File: yudao-module-mall/yudao-module-product-biz/src/test/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentServiceImplTest.java
Patch:
@@ -150,7 +150,7 @@ public void testGetCommentPage_success() {
         assertEquals(2, result3.getTotal());
 
         // 测试分页 tab count
-        AppCommentStatisticsRespVO tabsCount = productCommentService.getCommentPageTabsCount(spuId, Boolean.TRUE);
+        AppCommentStatisticsRespVO tabsCount = productCommentService.getCommentStatistics(spuId, Boolean.TRUE);
         assertEquals(6, tabsCount.getAllCount());
         assertEquals(4, tabsCount.getGoodCount());
         assertEquals(2, tabsCount.getMediocreCount());

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderSettlementReqVO.java
Patch:
@@ -21,7 +21,7 @@ public class AppTradeOrderSettlementReqVO {
     @Deprecated // TODO 芋艿：后续干掉这个字段，对于前端不需要关注这个
     private Integer type;
 
-    @Schema(description = "商品项数组", required = true)
+    @Schema(description = "商品项数组", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商品不能为空")
     private List<Item> items;
 

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/enums/ErrorCodeConstants.java
Patch:
@@ -56,5 +56,7 @@ public interface ErrorCodeConstants {
     // ========== 秒杀时段 1013009000 ==========
     ErrorCode SECKILL_TIME_NOT_EXISTS = new ErrorCode(1013009000, "秒杀时段不存在");
     ErrorCode SECKILL_TIME_CONFLICTS = new ErrorCode(1013009001, "秒杀时段冲突");
+    ErrorCode SECKILL_TIME_EQUAL = new ErrorCode(1013009002, "秒杀时段开始时间和结束时间不能相等");
+    ErrorCode SECKILL_START_TIME_BEFORE_END_TIME = new ErrorCode(1013009003, "秒杀时段开始时间不能在结束时间之后");
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/seckill/seckillconfig/SeckillConfigConvert.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.module.promotion.controller.admin.seckill.vo.config.SeckillConfigCreateReqVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.seckill.vo.config.SeckillConfigRespVO;
+import cn.iocoder.yudao.module.promotion.controller.admin.seckill.vo.config.SeckillConfigSimpleRespVO;
 import cn.iocoder.yudao.module.promotion.controller.admin.seckill.vo.config.SeckillConfigUpdateReqVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.seckill.seckillconfig.SeckillConfigDO;
 import org.mapstruct.Mapper;
@@ -28,6 +29,8 @@ public interface SeckillConfigConvert {
 
     List<SeckillConfigRespVO> convertList(List<SeckillConfigDO> list);
 
+    List<SeckillConfigSimpleRespVO> convertList1(List<SeckillConfigDO> list);
+
     PageResult<SeckillConfigRespVO> convertPage(PageResult<SeckillConfigDO> page);
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/seckill/seckillactivity/SeckillActivityDO.java
Patch:
@@ -41,7 +41,7 @@ public class SeckillActivityDO extends BaseDO {
     private String name;
     /**
      * 活动状态
-     * <p>
+     *
      * 枚举 {@link PromotionActivityStatusEnum 对应的类}
      */
     private Integer status;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/aftersale/TradeAfterSaleServiceImpl.java
Patch:
@@ -5,7 +5,7 @@
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
-import cn.iocoder.yudao.framework.trade.core.dto.TradeAfterSaleLogDTO;
+import cn.iocoder.yudao.framework.trade.core.dto.TradeAfterSaleLogCreateReqDTO;
 import cn.iocoder.yudao.framework.trade.core.service.AfterSaleLogService;
 import cn.iocoder.yudao.module.pay.api.refund.PayRefundApi;
 import cn.iocoder.yudao.module.pay.api.refund.dto.PayRefundCreateReqDTO;
@@ -388,7 +388,7 @@ public void cancelAfterSale(Long userId, Long id) {
     @Deprecated
     private void createAfterSaleLog(Long userId, Integer userType, TradeAfterSaleDO afterSale,
                                     Integer beforeStatus, Integer afterStatus) {
-        TradeAfterSaleLogDTO logDTO = new TradeAfterSaleLogDTO()
+        TradeAfterSaleLogCreateReqDTO logDTO = new TradeAfterSaleLogCreateReqDTO()
                 .setUserId(userId)
                 .setUserType(userType)
                 .setAfterSaleId(afterSale.getId())
@@ -406,7 +406,7 @@ private void createAfterSaleLog(Long userId, Integer userType, TradeAfterSaleDO
      */
     @Override
     @Async
-    public void insert(TradeAfterSaleLogDTO logDTO) {
+    public void insert(TradeAfterSaleLogCreateReqDTO logDTO) {
         try {
             TradeAfterSaleLogDO afterSaleLog = new TradeAfterSaleLogDO()
                     .setUserId(logDTO.getUserId())

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityPageReqVO.java
Patch:
@@ -26,7 +26,7 @@ public class SeckillActivityPageReqVO extends PageParam {
     private Integer status;
 
     @Schema(description = "秒杀时段id", example = "1")
-    private Long timeId;
+    private Long configId;
 
     @Schema(description = "创建时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityRespVO.java
Patch:
@@ -17,7 +17,7 @@ public class SeckillActivityRespVO extends SeckillActivityBaseVO {
     @Schema(description = "秒杀活动id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "付款订单数", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
+    @Schema(description = "新增订单数", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer orderCount;
 
     @Schema(description = "付款人数", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
@@ -27,7 +27,7 @@ public class SeckillActivityRespVO extends SeckillActivityBaseVO {
     private LocalDateTime createTime;
 
     @Schema(description = "秒杀时段id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,3")
-    private List<Long> timeIds;
+    private List<Long> configIds;
 
     @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer sort;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityUpdateReqVO.java
Patch:
@@ -29,7 +29,7 @@ public class SeckillActivityUpdateReqVO extends SeckillActivityBaseVO {
 
     @Schema(description = "秒杀时段id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,3")
     @NotEmpty(message = "秒杀时段id不能为空")
-    private List<Long> timeIds;
+    private List<Long> configIds;
 
     /**
      * 商品列表

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/seckill/seckillactivity/SeckillActivityConvert.java
Patch:
@@ -55,7 +55,7 @@ default boolean isEquals(SeckillProductDO productDO, SeckillActivityBaseVO.Produ
         return ObjectUtil.equals(productDO.getSpuId(), productVO.getSpuId())
                 && ObjectUtil.equals(productDO.getSkuId(), productVO.getSkuId())
                 && ObjectUtil.equals(productDO.getSeckillPrice(), productVO.getSeckillPrice())
-                && ObjectUtil.equals(productDO.getStock(), productVO.getStock())
+                && ObjectUtil.equals(productDO.getQuota(), productVO.getQuota())
                 && ObjectUtil.equals(productDO.getLimitCount(), productVO.getLimitCount());
     }
 
@@ -70,14 +70,14 @@ default boolean isEquals(SeckillProductDO productDO, SeckillProductDO productVO)
         return ObjectUtil.equals(productDO.getSpuId(), productVO.getSpuId())
                 && ObjectUtil.equals(productDO.getSkuId(), productVO.getSkuId())
                 && ObjectUtil.equals(productDO.getSeckillPrice(), productVO.getSeckillPrice())
-                && ObjectUtil.equals(productDO.getStock(), productVO.getStock())
+                && ObjectUtil.equals(productDO.getQuota(), productVO.getQuota())
                 && ObjectUtil.equals(productDO.getLimitCount(), productVO.getLimitCount());
 
     }
 
     default List<SeckillProductDO> convertList(List<SeckillActivityBaseVO.Product> products, SeckillActivityDO seckillActivity) {
         return CollectionUtils.convertList(products, product -> convert(product)
-                .setActivityId(seckillActivity.getId()).setTimeIds(seckillActivity.getTimeIds()));
+                .setActivityId(seckillActivity.getId()).setConfigIds(seckillActivity.getConfigIds()));
     }
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/convert/seckill/seckillconfig/SeckillConfigConvert.java
Patch:
@@ -6,7 +6,6 @@
 import cn.iocoder.yudao.module.promotion.controller.admin.seckill.vo.config.SeckillConfigUpdateReqVO;
 import cn.iocoder.yudao.module.promotion.dal.dataobject.seckill.seckillconfig.SeckillConfigDO;
 import org.mapstruct.Mapper;
-import org.mapstruct.Mapping;
 import org.mapstruct.factory.Mappers;
 
 import java.util.List;
@@ -25,7 +24,6 @@ public interface SeckillConfigConvert {
 
     SeckillConfigDO convert(SeckillConfigUpdateReqVO bean);
 
-    @Mapping(target = "s")
     SeckillConfigRespVO convert(SeckillConfigDO bean);
 
     List<SeckillConfigRespVO> convertList(List<SeckillConfigDO> list);

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/seckill/seckillactivity/SeckillProductDO.java
Patch:
@@ -21,6 +21,7 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class SeckillProductDO extends BaseDO {
+
     /**
      * 秒杀参与商品编号
      */
@@ -36,7 +37,7 @@ public class SeckillProductDO extends BaseDO {
      * 秒杀时段id
      */
     @TableField(typeHandler = LongListTypeHandler.class)
-    private List<Long> timeIds;
+    private List<Long> configIds;
 
     /**
      * 商品id
@@ -53,9 +54,8 @@ public class SeckillProductDO extends BaseDO {
      */
     private Integer seckillPrice;
 
-    // TODO @芋艿：改成 quota 限量库存；每次购买时，需要减小；
     /**
-     * 秒杀库存
+     * 秒杀库存 限量库存；每次购买时，需要减小；
      */
     private Integer quota;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillActivityMapper.java
Patch:
@@ -20,7 +20,7 @@ default PageResult<SeckillActivityDO> selectPage(SeckillActivityPageReqVO reqVO)
                 .likeIfPresent(SeckillActivityDO::getName, reqVO.getName())
                 .eqIfPresent(SeckillActivityDO::getStatus, reqVO.getStatus())
                 .betweenIfPresent(SeckillActivityDO::getCreateTime, reqVO.getCreateTime())
-                .apply(ObjectUtil.isNotNull(reqVO.getTimeId()),"FIND_IN_SET(" + reqVO.getTimeId() + ",time_ids) > 0")
+                .apply(ObjectUtil.isNotNull(reqVO.getConfigId()), "FIND_IN_SET(" + reqVO.getConfigId() + ",time_ids) > 0")
                 .orderByDesc(SeckillActivityDO::getId));
     }
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillactivity/SeckillProductMapper.java
Patch:
@@ -27,7 +27,7 @@ default List<SeckillProductDO> selectListBySkuIds(Collection<Long> skuIds) {
 
     default void updateTimeIdsByActivityId(Long id, List<Long> timeIds) {
         new LambdaUpdateChainWrapper<>(this)
-                .set(SeckillProductDO::getTimeIds, CollUtil.join(timeIds, ","))
+                .set(SeckillProductDO::getConfigIds, CollUtil.join(timeIds, ","))
                 .eq(SeckillProductDO::getActivityId, id)
                 .update();
     }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/mysql/seckill/seckillconfig/SeckillConfigMapper.java
Patch:
@@ -36,8 +36,6 @@ default void updateActivityCount(Collection<Long> ids, String type, Integer coun
     default PageResult<SeckillConfigDO> selectPage(SeckillConfigPageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<SeckillConfigDO>()
                 .likeIfPresent(SeckillConfigDO::getName, reqVO.getName())
-                .betweenIfPresent(SeckillConfigDO::getStartTime, reqVO.getStartTime())
-                .betweenIfPresent(SeckillConfigDO::getEndTime, reqVO.getEndTime())
                 .eqIfPresent(SeckillConfigDO::getStatus, reqVO.getStatus())
                 .orderByDesc(SeckillConfigDO::getId));
     }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityBaseVO.java
Patch:
@@ -54,7 +54,7 @@ public static class Product {
 
         @Schema(description = "秒杀库存", example = "80")
         @Min(value = 0, message = "秒杀库存需要大于等于 0")
-        private Integer stock;
+        private Integer quota;
 
         @Schema(description = "每人限购", example = "10") // 如果为 0 则不限购
         @Min(value = 0, message = "每人限购需要大于等于 0")

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/dal/dataobject/seckill/seckillactivity/SeckillProductDO.java
Patch:
@@ -57,7 +57,7 @@ public class SeckillProductDO extends BaseDO {
     /**
      * 秒杀库存
      */
-    private Integer stock;
+    private Integer quota;
 
     /**
      * 每人限购

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java
Patch:
@@ -36,7 +36,7 @@
  * 注意，使用 DeptDataPermissionRule 时，需要保证表中有 dept_id 部门编号的字段，可自定义。
  *
  * 实际业务场景下，会存在一个经典的问题？当用户修改部门时，冗余的 dept_id 是否需要修改？
- * 1. 一般情况下，dept_id 不进行修改，则会导致用户看到之前的数据。【yudao-server 采用该方案】
+ * 1. 一般情况下，dept_id 不进行修改，则会导致用户看不到之前的数据。【yudao-server 采用该方案】
  * 2. 部分情况下，希望该用户还是能看到之前的数据，则有两种方式解决：【需要你改造该 DeptDataPermissionRule 的实现代码】
  *  1）编写洗数据的脚本，将 dept_id 修改成新部门的编号；【建议】
  *      最终过滤条件是 WHERE dept_id = ?

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuUpdateReqVO.java
Patch:
@@ -27,13 +27,13 @@ public class ProductSpuUpdateReqVO extends ProductSpuBaseVO {
     @NotNull(message = "商品编号不能为空")
     private Long id;
 
-    @Schema(description = "商品销量", required = true, example = "1999")
+    @Schema(description = "商品销量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1999")
     private Integer salesCount;
 
-    @Schema(description = "浏览量", required = true, example = "1999")
+    @Schema(description = "浏览量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1999")
     private Integer browseCount;
 
-    @Schema(description = "商品状态", required = true, example = "1")
+    @Schema(description = "商品状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(ProductSpuStatusEnum.class)
     private Integer status;
 

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java
Patch:
@@ -36,7 +36,7 @@
  * 注意，使用 DeptDataPermissionRule 时，需要保证表中有 dept_id 部门编号的字段，可自定义。
  *
  * 实际业务场景下，会存在一个经典的问题？当用户修改部门时，冗余的 dept_id 是否需要修改？
- * 1. 一般情况下，dept_id 不进行修改，则会导致用户看到之前的数据。【yudao-server 采用该方案】
+ * 1. 一般情况下，dept_id 不进行修改，则会导致用户看不到之前的数据。【yudao-server 采用该方案】
  * 2. 部分情况下，希望该用户还是能看到之前的数据，则有两种方式解决：【需要你改造该 DeptDataPermissionRule 的实现代码】
  *  1）编写洗数据的脚本，将 dept_id 修改成新部门的编号；【建议】
  *      最终过滤条件是 WHERE dept_id = ?

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/ProductCommentController.java
Patch:
@@ -46,7 +46,7 @@ public CommonResult<Boolean> updateCommentVisible(@Valid @RequestBody ProductCom
     @PutMapping("/reply")
     @Operation(summary = "商家回复")
     @PreAuthorize("@ss.hasPermission('product:comment:update')")
-    public CommonResult<Boolean> commentReply(@Valid @RequestBody ProductCommentReplyVO replyVO) {
+    public CommonResult<Boolean> commentReply(@Valid @RequestBody ProductCommentReplyReqVO replyVO) {
         productCommentService.replyComment(replyVO, getLoginUserId());
         return success(true);
     }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentReplyReqVO.java
Patch:
@@ -7,11 +7,10 @@
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 
-// TODO @puhui999：ReqVO
 @Schema(description = "管理后台 - 商品评价可见修改 Request VO")
 @Data
 @ToString(callSuper = true)
-public class ProductCommentReplyVO {
+public class ProductCommentReplyReqVO {
 
     @Schema(description = "评价编号", required = true, example = "15721")
     @NotNull(message = "评价编号不能为空")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/AppTradeOrderController.java
Patch:
@@ -148,4 +148,6 @@ public CommonResult<Long> createOrderItemComment(@RequestBody AppTradeOrderItemC
         return success(productCommentApi.createComment(TradeOrderConvert.INSTANCE.convert04(createReqVO), item.getOrderId()));
     }
 
+    // TODO 合并代码后发现只有商家回复功能 用户追评不要了吗？
+
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentPageReqVO.java
Patch:
@@ -31,11 +31,11 @@ public class ProductCommentPageReqVO extends PageParam {
     @Schema(description = "商品SPU名称", example = "感冒药")
     private String spuName;
 
-    @Schema(description = "评分星级 1-5分")
+    @Schema(description = "评分星级 1-5分", example = "5")
     @InEnum(ProductCommentScoresEnum.class)
     private Integer scores;
 
-    @Schema(description = "商家是否回复")
+    @Schema(description = "商家是否回复", example = "true")
     private Boolean replied;
 
     @Schema(description = "创建时间")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/comment/vo/ProductCommentRespVO.java
Patch:
@@ -16,7 +16,7 @@ public class ProductCommentRespVO extends ProductCommentBaseVO {
     @Schema(description = "订单项编号", required = true, example = "24965")
     private Long id;
 
-    @Schema(description = "是否匿名：[false:不匿名 true:匿名]", required = true)
+    @Schema(description = "是否匿名：[false:不匿名 true:匿名]", required = true, example = "false")
     private Boolean anonymous;
 
     @Schema(description = "交易订单编号", required = true, example = "24428")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/spu/AppProductSpuController.java
Patch:
@@ -9,7 +9,6 @@
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.spu.ProductSpuDO;
 import cn.iocoder.yudao.module.product.enums.spu.ProductSpuStatusEnum;
-import cn.iocoder.yudao.module.product.service.property.ProductPropertyValueService;
 import cn.iocoder.yudao.module.product.service.sku.ProductSkuService;
 import cn.iocoder.yudao.module.product.service.spu.ProductSpuService;
 import io.swagger.v3.oas.annotations.Operation;
@@ -40,8 +39,6 @@ public class AppProductSpuController {
     private ProductSpuService productSpuService;
     @Resource
     private ProductSkuService productSkuService;
-    @Resource
-    private ProductPropertyValueService productPropertyValueService;
 
     @GetMapping("/page")
     @Operation(summary = "获得商品 SPU 分页")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/favorite/vo/AppFavoriteRespVO.java
Patch:
@@ -14,9 +14,6 @@ public class AppFavoriteRespVO {
     @Schema(description = "商品 SPU 编号", requiredMode = REQUIRED, example = "29502")
     private Long spuId;
 
-    @Schema(description = "类型", requiredMode = REQUIRED, example = "1")
-    private Integer type;
-
     // ========== 商品相关字段 ==========
 
     @Schema(description = "商品 SPU 名称", example = "赵六")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/favorite/ProductFavoriteConvert.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.product.convert.favorite;
 
-import cn.iocoder.yudao.module.product.controller.app.favorite.vo.AppFavoriteReqVO;
 import cn.iocoder.yudao.module.product.controller.app.favorite.vo.AppFavoriteRespVO;
 import cn.iocoder.yudao.module.product.dal.dataobject.favorite.ProductFavoriteDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.spu.ProductSpuDO;
@@ -19,7 +18,7 @@ public interface ProductFavoriteConvert {
 
     ProductFavoriteConvert INSTANCE = Mappers.getMapper(ProductFavoriteConvert.class);
 
-    ProductFavoriteDO convert(Long userId, AppFavoriteReqVO reqVO);
+    ProductFavoriteDO convert(Long userId, Long spuId);
 
     @Mapping(target = "id", source = "favorite.id")
     @Mapping(target = "spuName", source = "spu.name")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/comment/ProductCommentMapper.java
Patch:
@@ -37,17 +37,17 @@ default PageResult<ProductCommentDO> selectPage(ProductCommentPageReqVO reqVO) {
 
     static void appendTabQuery(LambdaQueryWrapperX<ProductCommentDO> queryWrapper, Integer type) {
         // 构建好评查询语句
-        if (ObjectUtil.equal(type, ProductCommentDO.FAVOURABLE_COMMENT)) {
+        if (ObjectUtil.equal(type, AppCommentPageReqVO.FAVOURABLE_COMMENT)) {
             // 好评计算 (商品评分星级+服务评分星级) >= 8
             queryWrapper.apply("(scores + benefit_scores) >= 8");
         }
         // 构建中评查询语句
-        if (ObjectUtil.equal(type, ProductCommentDO.MEDIOCRE_COMMENT)) {
+        if (ObjectUtil.equal(type, AppCommentPageReqVO.MEDIOCRE_COMMENT)) {
             // 中评计算 (商品评分星级+服务评分星级) > 4 且 (商品评分星级+服务评分星级) < 8
             queryWrapper.apply("(scores + benefit_scores) > 4 and (scores + benefit_scores) < 8");
         }
         // 构建差评查询语句
-        if (ObjectUtil.equal(type, ProductCommentDO.NEGATIVE_COMMENT)) {
+        if (ObjectUtil.equal(type, AppCommentPageReqVO.NEGATIVE_COMMENT)) {
             // 差评计算 (商品评分星级+服务评分星级) <= 4
             queryWrapper.apply("(scores + benefit_scores) <= 4");
         }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/comment/AppCommentController.java
Patch:
@@ -9,7 +9,6 @@
 import cn.iocoder.yudao.module.product.controller.app.comment.vo.AppCommentPageReqVO;
 import cn.iocoder.yudao.module.product.controller.app.comment.vo.AppCommentRespVO;
 import cn.iocoder.yudao.module.product.convert.comment.ProductCommentConvert;
-import cn.iocoder.yudao.module.product.dal.dataobject.comment.ProductCommentDO;
 import cn.iocoder.yudao.module.product.service.comment.ProductCommentService;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
@@ -38,8 +37,7 @@ public class AppCommentController {
     @GetMapping("/page")
     @Operation(summary = "获得商品评价分页")
     public CommonResult<PageResult<AppCommentRespVO>> getCommentPage(@Valid AppCommentPageReqVO pageVO) {
-        PageResult<ProductCommentDO> pageResult = productCommentService.getCommentPage(pageVO, Boolean.TRUE);
-        return success(ProductCommentConvert.INSTANCE.convertPage02(pageResult));
+        return success(productCommentService.getCommentPage(pageVO, Boolean.TRUE));
     }
 
     @GetMapping("/get-count")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/comment/ProductCommentMapper.java
Patch:
@@ -39,17 +39,17 @@ static void appendTabQuery(LambdaQueryWrapperX<ProductCommentDO> queryWrapper, I
         // 构建好评查询语句
         if (ObjectUtil.equal(type, ProductCommentDO.FAVOURABLE_COMMENT)) {
             // 好评计算 (商品评分星级+服务评分星级) >= 8
-            queryWrapper.apply("(scores + benefitScores) >= 8");
+            queryWrapper.apply("(scores + benefit_scores) >= 8");
         }
         // 构建中评查询语句
         if (ObjectUtil.equal(type, ProductCommentDO.MEDIOCRE_COMMENT)) {
             // 中评计算 (商品评分星级+服务评分星级) > 4 且 (商品评分星级+服务评分星级) < 8
-            queryWrapper.apply("(scores + benefitScores) > 4 and (scores + benefitScores) < 8");
+            queryWrapper.apply("(scores + benefit_scores) > 4 and (scores + benefit_scores) < 8");
         }
         // 构建差评查询语句
         if (ObjectUtil.equal(type, ProductCommentDO.NEGATIVE_COMMENT)) {
             // 差评计算 (商品评分星级+服务评分星级) <= 4
-            queryWrapper.apply("(scores + benefitScores) <= 4");
+            queryWrapper.apply("(scores + benefit_scores) <= 4");
         }
     }
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/comment/ProductCommentService.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.module.product.controller.admin.comment.vo.ProductCommentUpdateVisibleReqVO;
 import cn.iocoder.yudao.module.product.controller.app.comment.vo.AppCommentAdditionalReqVO;
 import cn.iocoder.yudao.module.product.controller.app.comment.vo.AppCommentPageReqVO;
+import cn.iocoder.yudao.module.product.controller.app.comment.vo.AppCommentRespVO;
 import cn.iocoder.yudao.module.product.dal.dataobject.comment.ProductCommentDO;
 import org.springframework.stereotype.Service;
 import org.springframework.validation.annotation.Validated;
@@ -52,7 +53,7 @@ public interface ProductCommentService {
      * @param visible 是否可见
      * @return 商品评价分页
      */
-    PageResult<ProductCommentDO> getCommentPage(AppCommentPageReqVO pageVO, Boolean visible);
+    PageResult<AppCommentRespVO> getCommentPage(AppCommentPageReqVO pageVO, Boolean visible);
 
     /**
      * 创建商品评论

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/property/ProductPropertyServiceImpl.java
Patch:
@@ -71,8 +71,8 @@ public void updateProperty(ProductPropertyUpdateReqVO updateReqVO) {
         // 更新
         ProductPropertyDO updateObj = ProductPropertyConvert.INSTANCE.convert(updateReqVO);
         productPropertyMapper.updateById(updateObj);
-        // TODO @puhui：是不是只要传递变量，不传递整个 updateObj 变量哈
-        productSkuService.updateSkuProperty(updateObj);
+        // 更新 sku 相关属性
+        productSkuService.updateSkuProperty(updateObj.getId(), updateObj.getName());
     }
 
     @Override

File: yudao-module-mall/yudao-module-trade-api/src/main/java/cn/iocoder/yudao/module/trade/api/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.trade.api;
\ No newline at end of file

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/api/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.module.trade.api;
\ No newline at end of file

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/delivery/DeliveryExpressTemplateController.java
Patch:
@@ -70,14 +70,14 @@ public CommonResult<List<DeliveryExpressTemplateRespVO>> getDeliveryExpressTempl
         return success(DeliveryExpressTemplateConvert.INSTANCE.convertList(list));
     }
 
-    // TODO @puhui999：DeliveryExpressTemplateRespVO 搞个 simple 的哈
+    // TODO @puhui999：DeliveryExpressTemplateRespVO 搞个 simple 的哈 fix
     @GetMapping("/list-all-simple")
     @Operation(summary = "获取快递模版精简信息列表", description = "主要用于前端的下拉选项")
-    public CommonResult<List<DeliveryExpressTemplateRespVO>> getSimpleTemplateList() {
+    public CommonResult<List<DeliveryExpressTemplateSimpleRespVO>> getSimpleTemplateList() {
         // 获取运费模版列表，只要开启状态的
         List<DeliveryExpressTemplateDO> list = deliveryExpressTemplateService.getDeliveryExpressTemplateList();
         // 排序后，返回给前端
-        return success(DeliveryExpressTemplateConvert.INSTANCE.convertList(list));
+        return success(DeliveryExpressTemplateConvert.INSTANCE.convertList1(list));
     }
 
     @GetMapping("/page")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/delivery/DeliveryExpressTemplateConvert.java
Patch:
@@ -28,11 +28,13 @@ public interface DeliveryExpressTemplateConvert {
 
     List<DeliveryExpressTemplateRespVO> convertList(List<DeliveryExpressTemplateDO> list);
 
+    List<DeliveryExpressTemplateSimpleRespVO> convertList1(List<DeliveryExpressTemplateDO> list);
+
     PageResult<DeliveryExpressTemplateRespVO> convertPage(PageResult<DeliveryExpressTemplateDO> page);
 
     default DeliveryExpressTemplateDetailRespVO convert(DeliveryExpressTemplateDO bean,
                                                         List<DeliveryExpressTemplateChargeDO> chargeList,
-                                                        List<DeliveryExpressTemplateFreeDO> freeList){
+                                                        List<DeliveryExpressTemplateFreeDO> freeList) {
         DeliveryExpressTemplateDetailRespVO respVO = convert2(bean);
         respVO.setTemplateCharge(convertTemplateChargeList(chargeList));
         respVO.setTemplateFree(convertTemplateFreeList(freeList));

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/convert/order/TradeOrderConvert.java
Patch:
@@ -11,6 +11,7 @@
 import cn.iocoder.yudao.module.product.api.property.dto.ProductPropertyValueDetailRespDTO;
 import cn.iocoder.yudao.module.product.api.sku.dto.ProductSkuUpdateStockReqDTO;
 import cn.iocoder.yudao.module.promotion.api.price.dto.PriceCalculateReqDTO;
+import cn.iocoder.yudao.module.trade.api.order.dto.TradeOrderRespDTO;
 import cn.iocoder.yudao.module.trade.controller.admin.base.member.user.MemberUserRespVO;
 import cn.iocoder.yudao.module.trade.controller.admin.base.product.property.ProductPropertyValueDetailRespVO;
 import cn.iocoder.yudao.module.trade.controller.admin.order.vo.TradeOrderDetailRespVO;
@@ -62,6 +63,8 @@ public interface TradeOrderConvert {
     TradeOrderDO convert(Long userId, String userIp, AppTradeOrderCreateReqVO createReqVO,
                          TradePriceCalculateRespBO calculateRespBO, AddressRespDTO address);
 
+    TradeOrderRespDTO convert(TradeOrderDO orderDO);
+
     default List<TradeOrderItemDO> convertList(TradeOrderDO tradeOrderDO, TradePriceCalculateRespBO calculateRespBO) {
         return CollectionUtils.convertList(calculateRespBO.getItems(), item -> {
             TradeOrderItemDO orderItem = convert(item);

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/delivery/DeliveryExpressTemplateController.java
Patch:
@@ -73,7 +73,7 @@ public CommonResult<List<DeliveryExpressTemplateRespVO>> getDeliveryExpressTempl
 
     @GetMapping("/list-all-simple")
     @Operation(summary = "获取快递模版精简信息列表", description = "主要用于前端的下拉选项")
-    public CommonResult<List<DeliveryExpressTemplateSimpleRespVO>> getSimpleTemplateList() {
+    public CommonResult<List<DeliveryExpressTemplateRespVO>> getSimpleTemplateList() {
         // 获取运费模版列表，只要开启状态的
         List<DeliveryExpressTemplateDO> list = deliveryExpressTemplateService.getDeliveryExpressTemplateList();
         // 排序后，返回给前端

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/enums/ErrorCodeConstants.java
Patch:
@@ -15,6 +15,7 @@ public interface ErrorCodeConstants {
     ErrorCode CATEGORY_PARENT_NOT_FIRST_LEVEL = new ErrorCode(1008001002, "父分类不能是二级分类");
     ErrorCode CATEGORY_EXISTS_CHILDREN = new ErrorCode(1008001003, "存在子分类，无法删除");
     ErrorCode CATEGORY_DISABLED = new ErrorCode(1008001004, "商品分类({})已禁用，无法使用");
+    ErrorCode CATEGORY_HAVE_BIND_SPU = new ErrorCode(1008001005, "类别下存在商品，无法删除");
 
     // ========== 商品品牌相关编号 1008002000 ==========
     ErrorCode BRAND_NOT_EXISTS = new ErrorCode(1008002000, "品牌不存在");

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/ProductBrandController.java
Patch:
@@ -65,7 +65,7 @@ public CommonResult<ProductBrandRespVO> getBrand(@RequestParam("id") Long id) {
 
     @GetMapping("/list-all-simple")
     @Operation(summary = "获取品牌精简信息列表", description = "主要用于前端的下拉选项")
-    public CommonResult<List<ProductBrandSimpleRespVO>> getSimpleUserList() {
+    public CommonResult<List<ProductBrandSimpleRespVO>> getSimpleBrandList() {
         // 获取品牌列表，只要开启状态的
         List<ProductBrandDO> list = brandService.getBrandListByStatus(CommonStatusEnum.ENABLE.getStatus());
         // 排序后，返回给前端

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/sku/ProductSkuConvert.java
Patch:
@@ -7,7 +7,6 @@
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuCreateOrUpdateReqVO;
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuOptionRespVO;
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuRespVO;
-import cn.iocoder.yudao.module.product.controller.admin.spu.vo.ProductSpuDetailRespVO;
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;

File: yudao-module-mall/yudao-module-product-biz/src/test/java/cn/iocoder/yudao/module/product/service/spu/ProductSpuServiceImplTest.java
Patch:
@@ -455,7 +455,7 @@ public static <T> List<List<T>> cartesianProduct(List<List<T>> data) {
     public void testUpdateSpuStock() {
         // 准备参数
         Map<Long, Integer> stockIncrCounts = MapUtil.builder(1L, 10).put(2L, -20).build();
-        // mock 方法（数据） // TODO ProductSpuDO中已没有相关属性
+        // mock 方法（数据）
         productSpuMapper.insert(randomPojo(ProductSpuDO.class, o ->{
             o.setCategoryId(generateId());
             o.setBrandId(generateId());
@@ -495,7 +495,7 @@ public void testUpdateSpuStock() {
 
         // 调用
         productSpuService.updateSpuStock(stockIncrCounts);
-        // 断言  // TODO ProductSpuDO中已没有相关属性
+        // 断言
         assertEquals(productSpuService.getSpu(1L).getStock(), 30);
         assertEquals(productSpuService.getSpu(2L).getStock(), 10);
     }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuRespVO.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * 商品 SPU Response VO
- * TODO 移除ProductSpuPageRespVO相关应用跟换为ProductSpuRespVO已继承ProductSpuBaseVO 补全表格展示所需属性
+ *
  * @author HUIHUI
  */
 @Schema(description = "管理后台 - 商品 SPU Response VO")

File: yudao-module-mall/yudao-module-product-biz/src/test/java/cn/iocoder/yudao/module/product/service/category/ProductCategoryServiceImplTest.java
Patch:
@@ -18,9 +18,8 @@
 import static cn.iocoder.yudao.framework.test.core.util.AssertUtils.assertServiceException;
 import static cn.iocoder.yudao.framework.test.core.util.RandomUtils.randomLongId;
 import static cn.iocoder.yudao.framework.test.core.util.RandomUtils.randomPojo;
-
+import static cn.iocoder.yudao.module.product.dal.dataobject.category.ProductCategoryDO.PARENT_ID_NULL;
 import static cn.iocoder.yudao.module.product.enums.ErrorCodeConstants.CATEGORY_NOT_EXISTS;
-import static cn.iocoder.yudao.module.product.enums.ProductConstants.PARENT_ID_NULL;
 import static org.junit.jupiter.api.Assertions.*;
 
 /**

File: yudao-module-mall/yudao-module-promotion-api/src/main/java/cn/iocoder/yudao/module/promotion/api/price/dto/PriceCalculateRespDTO.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.promotion.api.price.dto;
 
-import cn.iocoder.yudao.module.promotion.enums.common.PromotionLevelEnum;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionTypeEnum;
 import lombok.Data;
 
@@ -197,7 +196,7 @@ public static class Promotion {
         /**
          * 营销级别
          *
-         * 枚举 {@link PromotionLevelEnum}
+         * 枚举 @link PromotionLevelEnum} TODO PromotionLevelEnum 没有这个枚举类
          */
         private Integer level;
         /**

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/api/price/PriceApiImpl.java
Patch:
@@ -20,7 +20,9 @@ public class PriceApiImpl implements PriceApi {
 
     @Override
     public PriceCalculateRespDTO calculatePrice(PriceCalculateReqDTO calculateReqDTO) {
-        return priceService.calculatePrice(calculateReqDTO);
+        //return priceService.calculatePrice(calculateReqDTO); TODO 没有 calculatePrice 这个方法
+
+        return null;
     }
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/service/price/bo/TradePriceCalculateRespBO.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.trade.service.price.bo;
 
-import cn.iocoder.yudao.module.promotion.enums.common.PromotionLevelEnum;
 import cn.iocoder.yudao.module.promotion.enums.common.PromotionTypeEnum;
 import cn.iocoder.yudao.module.trade.enums.order.TradeOrderTypeEnum;
 import lombok.Data;
@@ -193,7 +192,7 @@ public static class Promotion {
         /**
          * 营销级别
          *
-         * 枚举 {@link PromotionLevelEnum}
+         * 枚举 @link PromotionLevelEnum} TODO PromotionLevelEnum 没有这个枚举类
          */
         private Integer level;
         /**

File: yudao-module-mall/yudao-module-trade-biz/src/test/java/cn/iocoder/yudao/module/trade/service/aftersale/TradeAfterSaleServiceTest.java
Patch:
@@ -69,7 +69,8 @@ public void testCreateAfterSale() {
                 .setApplyPicUrls(asList("https://www.baidu.com/1.png", "https://www.baidu.com/2.png"));
         // mock 方法（交易订单项）
         TradeOrderItemDO orderItem = randomPojo(TradeOrderItemDO.class, o -> {
-            o.setOrderId(111L).setUserId(userId).setOrderDividePrice(200);
+            //o.setOrderId(111L).setUserId(userId).setOrderDividePrice(200); TODO DO 中没有 orderDividePrice 属性
+            o.setOrderId(111L).setUserId(userId);
             o.setAfterSaleStatus(TradeOrderItemAfterSaleStatusEnum.NONE.getStatus());
         });
         when(tradeOrderService.getOrderItem(eq(1024L), eq(1L)))

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/ProductBrandController.java
Patch:
@@ -61,7 +61,8 @@ public CommonResult<Boolean> deleteBrand(@RequestParam("id") Long id) {
     public CommonResult<ProductBrandRespVO> getBrand(@RequestParam("id") Long id) {
         ProductBrandDO brand = brandService.getBrand(id);
         return success(ProductBrandConvert.INSTANCE.convert(brand));
-    } // TODO @puhui999：方法和方法之间，要有空行。
+    }
+
     @GetMapping("/list-all-simple")
     @Operation(summary = "获取品牌精简信息列表", description = "主要用于前端的下拉选项")
     public CommonResult<List<ProductBrandSimpleRespVO>> getSimpleUserList() {
@@ -70,6 +71,7 @@ public CommonResult<List<ProductBrandSimpleRespVO>> getSimpleUserList() {
         // 排序后，返回给前端
         return success(ProductBrandConvert.INSTANCE.convertList1(list));
     }
+
     @GetMapping("/page")
     @Operation(summary = "获得品牌分页")
     @PreAuthorize("@ss.hasPermission('product:brand:query')")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandBaseVO.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 public class ProductBrandBaseVO {
 
-    @Schema(description = "品牌名称", required = true, example = "芋道")
+    @Schema(description = "品牌名称", required = true, example = "苹果")
     @NotNull(message = "品牌名称不能为空")
     private String name;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandListReqVO.java
Patch:
@@ -7,7 +7,7 @@
 @Data
 public class ProductBrandListReqVO {
 
-    @Schema(description = "品牌名称", example = "芋道")
+    @Schema(description = "品牌名称", example = "苹果")
     private String name;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandPageReqVO.java
Patch:
@@ -17,7 +17,7 @@
 @ToString(callSuper = true)
 public class ProductBrandPageReqVO extends PageParam {
 
-    @Schema(description = "品牌名称", example = "芋道")
+    @Schema(description = "品牌名称", example = "苹果")
     private String name;
 
     @Schema(description = "状态", example = "0")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryCreateReqVO.java
Patch:
@@ -12,6 +12,8 @@
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class ProductCategoryCreateReqVO extends ProductCategoryBaseVO {
-    @Schema(description = "分类描述")
+
+    @Schema(description = "分类描述", example = "描述")
     private String description;
+
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryUpdateReqVO.java
Patch:
@@ -17,7 +17,8 @@ public class ProductCategoryUpdateReqVO extends ProductCategoryBaseVO {
     @Schema(description = "分类编号", required = true, example = "2")
     @NotNull(message = "分类编号不能为空")
     private Long id;
-    @Schema(description = "分类描述")
+
+    @Schema(description = "分类描述", example = "描述")
     private String description;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/ProductSpuController.java
Patch:
@@ -94,11 +94,10 @@ public CommonResult<PageResult<ProductSpuRespVO>> getSpuPage(@Valid ProductSpuPa
         return success(ProductSpuConvert.INSTANCE.convertPage(productSpuService.getSpuPage(pageVO)));
     }
 
-    // TODO @puhui999：方法名改成 getSpuCount，只是用于 tab 哈，这样更抽象一点。
     @GetMapping("/get-count")
     @Operation(summary = "获得商品 SPU 分页 tab count")
     @PreAuthorize("@ss.hasPermission('product:spu:query')")
-    public CommonResult<Map<Integer, Long>> getTabsCount() {
+    public CommonResult<Map<Integer, Long>> getSpuCount() {
         return success(productSpuService.getTabsCount());
     }
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuExcelVO.java
Patch:
@@ -16,6 +16,7 @@
  */
 @Data
 public class ProductSpuExcelVO {
+
     @ExcelProperty("商品编号")
     private Long id;
 
@@ -116,4 +117,5 @@ public class ProductSpuExcelVO {
 
     @ExcelProperty("创建时间")
     private LocalDateTime createTime;
+
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuExportReqVO.java
Patch:
@@ -18,14 +18,14 @@
 @AllArgsConstructor
 public class ProductSpuExportReqVO {
 
-    @Schema(description = "商品名称", example = "yutou")
+    @Schema(description = "商品名称", example = "清凉小短袖")
     private String name;
 
     @Schema(description = "前端请求的tab类型", example = "1")
     @InEnum(ProductSpuPageTabEnum.class)
     private Integer tabType;
 
-    @Schema(description = "商品分类编号")
+    @Schema(description = "商品分类编号", example = "100")
     private Long categoryId;
 
     @Schema(description = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/app/spu/AppProductSpuController.java
Patch:
@@ -67,8 +67,7 @@ public CommonResult<AppProductSpuDetailRespVO> getSpuDetail(@RequestParam("id")
         }
 
         // 查询商品 SKU
-        List<ProductSkuDO> skus = productSkuService.getSkuListBySpuIdAndStatus(spu.getId(),
-                CommonStatusEnum.ENABLE.getStatus());
+        List<ProductSkuDO> skus = productSkuService.getSkuListBySpuIdAndStatus(spu.getId());
         // 查询商品属性
         List<ProductPropertyValueDetailRespBO> propertyValues = productPropertyValueService
                 .getPropertyValueDetailList(ProductSkuConvert.INSTANCE.convertPropertyValueIds(skus));

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/sku/ProductSkuConvert.java
Patch:
@@ -43,8 +43,6 @@ default List<ProductSkuDO> convertList06(List<ProductSkuCreateOrUpdateReqVO> lis
 
     ProductSkuRespDTO convert02(ProductSkuDO bean);
 
-    List<ProductSkuRespVO> convertList03(List<ProductSkuDO> list);
-
     List<ProductSkuRespDTO> convertList04(List<ProductSkuDO> list);
 
     List<ProductSkuOptionRespVO> convertList05(List<ProductSkuDO> skus);

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/sku/ProductSkuDO.java
Patch:
@@ -19,7 +19,7 @@
  *
  * @author 芋道源码
  */
-@TableName(value = "product_sku",autoResultMap = true)
+@TableName(value = "product_sku", autoResultMap = true)
 @KeySequence("product_sku_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/brand/ProductBrandMapper.java
Patch:
@@ -31,8 +31,7 @@ default ProductBrandDO selectByName(String name) {
         return selectOne(ProductBrandDO::getName, name);
     }
 
-    // TODO @puhui999：) { 中间要有空格哈。
-    default List<ProductBrandDO> selectListByStatus(Integer status){
-        return selectList(ProductBrandDO::getStatus,status);
+    default List<ProductBrandDO> selectListByStatus(Integer status) {
+        return selectList(ProductBrandDO::getStatus, status);
     }
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/spu/ProductSpuDO.java
Patch:
@@ -1,6 +1,6 @@
 package cn.iocoder.yudao.module.product.dal.dataobject.spu;
 
-import cn.iocoder.yudao.framework.tenant.core.db.TenantBaseDO;
+import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.brand.ProductBrandDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.category.ProductCategoryDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/enums/ErrorCodeConstants.java
Patch:
@@ -18,7 +18,7 @@ public interface ErrorCodeConstants {
 
     // ========== 商品品牌相关编号 1008002000 ==========
     ErrorCode BRAND_NOT_EXISTS = new ErrorCode(1008002000, "品牌不存在");
-    ErrorCode BRAND_DISABLED = new ErrorCode(1008002001, "品牌不存在");
+    ErrorCode BRAND_DISABLED = new ErrorCode(1008002001, "品牌已禁用");
     ErrorCode BRAND_NAME_EXISTS = new ErrorCode(1008002002, "品牌名称已存在");
 
     // ========== 商品属性项 1008003000 ==========
@@ -32,8 +32,9 @@ public interface ErrorCodeConstants {
 
     // ========== 商品 SPU 1008005000 ==========
     ErrorCode SPU_NOT_EXISTS = new ErrorCode(1008005000, "商品 SPU 不存在");
-    ErrorCode SPU_SAVE_FAIL_CATEGORY_LEVEL_ERROR = new ErrorCode(1008005001, "商品分类不正确，原因：必须使用第三级的商品分类下");
+    ErrorCode SPU_SAVE_FAIL_CATEGORY_LEVEL_ERROR = new ErrorCode(1008005001, "商品分类不正确，原因：必须使用第二级的商品分类及以下");
     ErrorCode SPU_NOT_ENABLE = new ErrorCode(1008005002, "商品 SPU 不处于上架状态");
+    ErrorCode SPU_NOT_RECYCLE = new ErrorCode(1008005003, "商品 SPU 不处于回收站状态");
 
     // ========== 商品 SKU 1008006000 ==========
     ErrorCode SKU_NOT_EXISTS = new ErrorCode(1008006000, "商品 SKU 不存在");

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/brand/ProductBrandConvert.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.module.product.controller.admin.brand.vo.ProductBrandCreateReqVO;
 import cn.iocoder.yudao.module.product.controller.admin.brand.vo.ProductBrandRespVO;
+import cn.iocoder.yudao.module.product.controller.admin.brand.vo.ProductBrandSimpleRespVO;
 import cn.iocoder.yudao.module.product.controller.admin.brand.vo.ProductBrandUpdateReqVO;
 import cn.iocoder.yudao.module.product.dal.dataobject.brand.ProductBrandDO;
 import org.mapstruct.Mapper;
@@ -25,7 +26,7 @@ public interface ProductBrandConvert {
     ProductBrandDO convert(ProductBrandUpdateReqVO bean);
 
     ProductBrandRespVO convert(ProductBrandDO bean);
-
+    List<ProductBrandSimpleRespVO> convertList1(List<ProductBrandDO> list);
     List<ProductBrandRespVO> convertList(List<ProductBrandDO> list);
 
     PageResult<ProductBrandRespVO> convertPage(PageResult<ProductBrandDO> page);

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/property/ProductPropertyDO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.product.dal.dataobject.property;
 
+import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.tenant.core.db.TenantBaseDO;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
@@ -19,7 +20,7 @@
 @Builder
 @NoArgsConstructor
 @AllArgsConstructor
-public class ProductPropertyDO extends TenantBaseDO { // TODO @puhui999：这里是不是用 BaseDO 就可以了？
+public class ProductPropertyDO extends BaseDO {
 
     /**
      * 主键

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/property/ProductPropertyValueDO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.product.dal.dataobject.property;
 
+import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.tenant.core.db.TenantBaseDO;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
@@ -20,7 +21,7 @@
 @Builder
 @NoArgsConstructor
 @AllArgsConstructor
-public class ProductPropertyValueDO extends TenantBaseDO {  // TODO @puhui999：这里是不是用 BaseDO 就可以了？
+public class ProductPropertyValueDO extends BaseDO {
 
     /**
      * 主键

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/spu/ProductSpuDO.java
Patch:
@@ -29,7 +29,7 @@
 @Builder
 @NoArgsConstructor
 @AllArgsConstructor
-public class ProductSpuDO extends TenantBaseDO {
+public class ProductSpuDO extends BaseDO {
 
     /**
      * 商品 SPU 编号，自增

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/brand/ProductBrandMapper.java
Patch:
@@ -31,4 +31,7 @@ default ProductBrandDO selectByName(String name) {
         return selectOne(ProductBrandDO::getName, name);
     }
 
+    default List<ProductBrandDO> selectListByStatus(Integer status){
+        return selectList(ProductBrandDO::getStatus,status);
+    }
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/sku/ProductSkuServiceImpl.java
Patch:
@@ -176,7 +176,6 @@ public void updateSkuList(Long spuId, List<ProductSkuCreateOrUpdateReqVO> skus)
             Long existsSkuId = existsSkuMap.remove(propertiesKey);
             if (existsSkuId != null) {
                 sku.setId(existsSkuId);
-                // TODO 那spuId岂不是为null了
                 updateSkus.add(sku);
                 return;
             }

File: yudao-module-mall/yudao-module-product-biz/src/test/java/cn/iocoder/yudao/module/product/service/category/ProductCategoryServiceImplTest.java
Patch:
@@ -18,8 +18,9 @@
 import static cn.iocoder.yudao.framework.test.core.util.AssertUtils.assertServiceException;
 import static cn.iocoder.yudao.framework.test.core.util.RandomUtils.randomLongId;
 import static cn.iocoder.yudao.framework.test.core.util.RandomUtils.randomPojo;
-import static cn.iocoder.yudao.module.product.dal.dataobject.category.ProductCategoryDO.PARENT_ID_NULL;
+
 import static cn.iocoder.yudao.module.product.enums.ErrorCodeConstants.CATEGORY_NOT_EXISTS;
+import static cn.iocoder.yudao.module.product.enums.ProductConstants.PARENT_ID_NULL;
 import static org.junit.jupiter.api.Assertions.*;
 
 /**

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -5,7 +5,7 @@
 /**
  * Report 错误码枚举类
  *
- * system 系统，使用 1-003-000-000 段
+ * report 系统，使用 1-003-000-000 段
  */
 public interface ErrorCodeConstants {
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -152,7 +152,7 @@ public interface ErrorCodeConstants {
 
     // ========== 邮件发送 1002025000 ==========
     ErrorCode MAIL_SEND_TEMPLATE_PARAM_MISS = new ErrorCode(1002025000, "模板参数({})缺失");
-    ErrorCode MAIL_SEND_MAIL_NOT_EXISTS = new ErrorCode(1002025000, "邮箱不存在");
+    ErrorCode MAIL_SEND_MAIL_NOT_EXISTS = new ErrorCode(1002025001, "邮箱不存在");
 
     // ========== 站内信模版 1002026000 ==========
     ErrorCode NOTIFY_TEMPLATE_NOT_EXISTS = new ErrorCode(1002026000, "站内信模版不存在");
@@ -161,6 +161,6 @@ public interface ErrorCodeConstants {
     // ========== 站内信模版 1002027000 ==========
 
     // ========== 站内信发送 1002028000 ==========
-    ErrorCode NOTIFY_SEND_TEMPLATE_PARAM_MISS = new ErrorCode(1002025000, "模板参数({})缺失");
+    ErrorCode NOTIFY_SEND_TEMPLATE_PARAM_MISS = new ErrorCode(1002028000, "模板参数({})缺失");
 
 }

File: yudao-module-report/yudao-module-report-api/src/main/java/cn/iocoder/yudao/module/report/enums/ErrorCodeConstants.java
Patch:
@@ -5,7 +5,7 @@
 /**
  * Report 错误码枚举类
  *
- * system 系统，使用 1-003-000-000 段
+ * report 系统，使用 1-003-000-000 段
  */
 public interface ErrorCodeConstants {
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -152,7 +152,7 @@ public interface ErrorCodeConstants {
 
     // ========== 邮件发送 1002025000 ==========
     ErrorCode MAIL_SEND_TEMPLATE_PARAM_MISS = new ErrorCode(1002025000, "模板参数({})缺失");
-    ErrorCode MAIL_SEND_MAIL_NOT_EXISTS = new ErrorCode(1002025000, "邮箱不存在");
+    ErrorCode MAIL_SEND_MAIL_NOT_EXISTS = new ErrorCode(1002025001, "邮箱不存在");
 
     // ========== 站内信模版 1002026000 ==========
     ErrorCode NOTIFY_TEMPLATE_NOT_EXISTS = new ErrorCode(1002026000, "站内信模版不存在");
@@ -161,6 +161,6 @@ public interface ErrorCodeConstants {
     // ========== 站内信模版 1002027000 ==========
 
     // ========== 站内信发送 1002028000 ==========
-    ErrorCode NOTIFY_SEND_TEMPLATE_PARAM_MISS = new ErrorCode(1002025000, "模板参数({})缺失");
+    ErrorCode NOTIFY_SEND_TEMPLATE_PARAM_MISS = new ErrorCode(1002028000, "模板参数({})缺失");
 
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageParam.java
Patch:
@@ -15,12 +15,12 @@ public class PageParam implements Serializable {
     private static final Integer PAGE_NO = 1;
     private static final Integer PAGE_SIZE = 10;
 
-    @Schema(description = "页码，从 1 开始", required = true,example = "1")
+    @Schema(description = "页码，从 1 开始", requiredMode = Schema.RequiredMode.REQUIRED,example = "1")
     @NotNull(message = "页码不能为空")
     @Min(value = 1, message = "页码最小值为 1")
     private Integer pageNo = PAGE_NO;
 
-    @Schema(description = "每页条数，最大值为 100", required = true, example = "10")
+    @Schema(description = "每页条数，最大值为 100", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @NotNull(message = "每页条数不能为空")
     @Min(value = 1, message = "每页条数最小值为 1")
     @Max(value = 100, message = "每页条数最大值为 100")

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageResult.java
Patch:
@@ -11,10 +11,10 @@
 @Data
 public final class PageResult<T> implements Serializable {
 
-    @Schema(description = "数据", required = true)
+    @Schema(description = "数据", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<T> list;
 
-    @Schema(description = "总量", required = true)
+    @Schema(description = "总量", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long total;
 
     public PageResult() {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormBaseVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class BpmFormBaseVO {
 
-    @Schema(description = "表单名称", required = true, example = "芋道")
+    @Schema(description = "表单名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     @NotNull(message = "表单名称不能为空")
     private String name;
 
-    @Schema(description = "表单状态-参见 CommonStatusEnum 枚举", required = true, example = "1")
+    @Schema(description = "表单状态-参见 CommonStatusEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "表单状态不能为空")
     private Integer status;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormCreateReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @ToString(callSuper = true)
 public class BpmFormCreateReqVO extends BpmFormBaseVO {
 
-    @Schema(description = "表单的配置-JSON 字符串", required = true)
+    @Schema(description = "表单的配置-JSON 字符串", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单的配置不能为空")
     private String conf;
 
-    @Schema(description = "表单项的数组-JSON 字符串的数组", required = true)
+    @Schema(description = "表单项的数组-JSON 字符串的数组", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单项的数组不能为空")
     private List<String> fields;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class BpmFormSimpleRespVO {
 
-    @Schema(description = "表单编号", required = true, example = "1024")
+    @Schema(description = "表单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "表单名称", required = true, example = "芋道")
+    @Schema(description = "表单名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormUpdateReqVO.java
Patch:
@@ -10,15 +10,15 @@
 @ToString(callSuper = true)
 public class BpmFormUpdateReqVO extends BpmFormBaseVO {
 
-    @Schema(description = "表单编号", required = true, example = "1024")
+    @Schema(description = "表单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "表单编号不能为空")
     private Long id;
 
-    @Schema(description = "表单的配置-JSON 字符串", required = true)
+    @Schema(description = "表单的配置-JSON 字符串", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单的配置不能为空")
     private String conf;
 
-    @Schema(description = "表单项的数组-JSON 字符串的数组", required = true)
+    @Schema(description = "表单项的数组-JSON 字符串的数组", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单项的数组不能为空")
     private List<String> fields;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupRespVO.java
Patch:
@@ -1,20 +1,20 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.group;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 
 import java.time.LocalDateTime;
 
-
 @Schema(description = "管理后台 - 用户组 Response VO")
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class BpmUserGroupRespVO extends BpmUserGroupBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupSimpleRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @AllArgsConstructor
 public class BpmUserGroupSimpleRespVO {
 
-    @Schema(description = "用户组编号", required = true, example = "1024")
+    @Schema(description = "用户组编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "用户组名字", required = true, example = "芋道")
+    @Schema(description = "用户组名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupUpdateReqVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.group;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 import javax.validation.constraints.*;
@@ -9,7 +10,7 @@
 @ToString(callSuper = true)
 public class BpmUserGroupUpdateReqVO extends BpmUserGroupBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModeImportReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class BpmModeImportReqVO extends BpmModelCreateReqVO {
 
-    @Schema(description = "BPMN 文件", required = true)
+    @Schema(description = "BPMN 文件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "BPMN 文件不能为空")
     private MultipartFile bpmnFile;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelBaseVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class BpmModelBaseVO {
 
-    @Schema(description = "流程标识", required = true, example = "process_yudao")
+    @Schema(description = "流程标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "process_yudao")
     @NotEmpty(message = "流程标识不能为空")
     private String key;
 
-    @Schema(description = "流程名称", required = true, example = "芋道")
+    @Schema(description = "流程名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     @NotEmpty(message = "流程名称不能为空")
     private String name;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelCreateReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class BpmModelCreateReqVO {
 
-    @Schema(description = "流程标识", required = true, example = "process_yudao")
+    @Schema(description = "流程标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "process_yudao")
     @NotEmpty(message = "流程标识不能为空")
     private String key;
 
-    @Schema(description = "流程名称", required = true, example = "芋道")
+    @Schema(description = "流程名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     @NotEmpty(message = "流程名称不能为空")
     private String name;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class BpmModelRespVO extends BpmModelBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private String id;
 
-    @Schema(description = "BPMN XML", required = true)
+    @Schema(description = "BPMN XML", requiredMode = Schema.RequiredMode.REQUIRED)
     private String bpmnXml;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class BpmModelUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "编号不能为空")
     private String id;
 
@@ -22,7 +22,7 @@ public class BpmModelUpdateReqVO {
     @Schema(description = "流程分类-参见 bpm_model_category 数据字典", example = "1")
     private String category;
 
-    @Schema(description = "BPMN XML", required = true)
+    @Schema(description = "BPMN XML", requiredMode = Schema.RequiredMode.REQUIRED)
     private String bpmnXml;
 
     @Schema(description = "表单类型-参见 bpm_model_form_type 数据字典", example = "1")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelUpdateStateReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class BpmModelUpdateStateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private String id;
 
-    @Schema(description = "状态-见 SuspensionState 枚举", required = true, example = "1")
+    @Schema(description = "状态-见 SuspensionState 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer state;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/process/BpmProcessDefinitionPageItemRespVO.java
Patch:
@@ -16,7 +16,7 @@ public class BpmProcessDefinitionPageItemRespVO extends BpmProcessDefinitionResp
     @Schema(description = "表单名字", example = "请假表单")
     private String formName;
 
-    @Schema(description = "部署时间", required = true)
+    @Schema(description = "部署时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime deploymentTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/rule/BpmTaskAssignRuleBaseVO.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 import java.util.Set;
 
@@ -13,11 +13,11 @@
 @Data
 public class BpmTaskAssignRuleBaseVO {
 
-    @Schema(description = "规则类型", required = true, example = "bpm_task_assign_rule_type")
+    @Schema(description = "规则类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "bpm_task_assign_rule_type")
     @NotNull(message = "规则类型不能为空")
     private Integer type;
 
-    @Schema(description = "规则值数组", required = true, example = "1,2,3")
+    @Schema(description = "规则值数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,2,3")
     @NotNull(message = "规则值数组不能为空")
     private Set<Long> options;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/rule/BpmTaskAssignRuleCreateReqVO.java
Patch:
@@ -13,11 +13,11 @@
 @ToString(callSuper = true)
 public class BpmTaskAssignRuleCreateReqVO extends BpmTaskAssignRuleBaseVO {
 
-    @Schema(description = "流程模型的编号", required = true, example = "1024")
+    @Schema(description = "流程模型的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "流程模型的编号不能为空")
     private String modelId;
 
-    @Schema(description = "流程任务定义的编号", required = true, example = "2048")
+    @Schema(description = "流程任务定义的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotEmpty(message = "流程任务定义的编号不能为空")
     private String taskDefinitionKey;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/rule/BpmTaskAssignRuleUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class BpmTaskAssignRuleUpdateReqVO extends BpmTaskAssignRuleBaseVO {
 
-    @Schema(description = "任务分配规则的编号", required = true, example = "1024")
+    @Schema(description = "任务分配规则的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "任务分配规则的编号不能为空")
     private Long id;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/instance/BpmProcessInstanceCreateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class BpmProcessInstanceCreateReqVO {
 
-    @Schema(description = "流程定义的编号", required = true, example = "1024")
+    @Schema(description = "流程定义的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "流程定义编号不能为空")
     private String processDefinitionId;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskApproveReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class BpmTaskApproveReqVO {
 
-    @Schema(description = "任务编号", required = true, example = "1024")
+    @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "任务编号不能为空")
     private String id;
 
-    @Schema(description = "审批意见", required = true, example = "不错不错！")
+    @Schema(description = "审批意见", requiredMode = Schema.RequiredMode.REQUIRED, example = "不错不错！")
     @NotEmpty(message = "审批意见不能为空")
     private String reason;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskRejectReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class BpmTaskRejectReqVO {
 
-    @Schema(description = "任务编号", required = true, example = "1024")
+    @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "任务编号不能为空")
     private String id;
 
-    @Schema(description = "审批意见", required = true, example = "不错不错！")
+    @Schema(description = "审批意见", requiredMode = Schema.RequiredMode.REQUIRED, example = "不错不错！")
     @NotEmpty(message = "审批意见不能为空")
     private String reason;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/CodegenCreateListReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class CodegenCreateListReqVO {
 
-    @Schema(description = "数据源配置的编号", required = true, example = "1")
+    @Schema(description = "数据源配置的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数据源配置的编号不能为空")
     private Long dataSourceConfigId;
 
-    @Schema(description = "表名数组", required = true, example = "[1, 2, 3]")
+    @Schema(description = "表名数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2, 3]")
     @NotNull(message = "表名数组不能为空")
     private List<String> tableNames;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/CodegenPreviewRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class CodegenPreviewRespVO {
 
-    @Schema(description = "文件路径", required = true, example = "java/cn/iocoder/yudao/adminserver/modules/system/controller/test/SysTestDemoController.java")
+    @Schema(description = "文件路径", requiredMode = Schema.RequiredMode.REQUIRED, example = "java/cn/iocoder/yudao/adminserver/modules/system/controller/test/SysTestDemoController.java")
     private String filePath;
 
-    @Schema(description = "代码", required = true, example = "Hello World")
+    @Schema(description = "代码", requiredMode = Schema.RequiredMode.REQUIRED, example = "Hello World")
     private String code;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/CodegenUpdateReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class CodegenUpdateReqVO {
     @Valid
     public static class Table extends CodegenTableBaseVO {
 
-        @Schema(description = "编号", required = true, example = "1")
+        @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
         private Long id;
 
         @AssertTrue(message = "上级菜单不能为空，请前往 [修改生成配置 -> 生成信息] 界面，设置“上级菜单”字段")
@@ -51,7 +51,7 @@ public boolean isParentMenuIdValid() {
     @ToString(callSuper = true)
     public static class Column extends CodegenColumnBaseVO {
 
-        @Schema(description = "编号", required = true, example = "1")
+        @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
         private Long id;
 
     }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/column/CodegenColumnRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class CodegenColumnRespVO extends CodegenColumnBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/table/DatabaseTableRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class DatabaseTableRespVO {
 
-    @Schema(description = "表名称", required = true, example = "yuanma")
+    @Schema(description = "表名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "yuanma")
     private String name;
 
-    @Schema(description = "表描述", required = true, example = "芋道源码")
+    @Schema(description = "表描述", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道源码")
     private String comment;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigCreateReqVO.java
Patch:
@@ -12,7 +12,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class ConfigCreateReqVO extends ConfigBaseVO {
 
-    @Schema(description = "参数键名", required = true, example = "yunai.db.username")
+    @Schema(description = "参数键名", requiredMode = Schema.RequiredMode.REQUIRED, example = "yunai.db.username")
     @NotBlank(message = "参数键名长度不能为空")
     @Size(max = 100, message = "参数键名长度不能超过100个字符")
     private String key;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ConfigUpdateReqVO extends ConfigBaseVO {
 
-    @Schema(description = "参数配置序号", required = true, example = "1024")
+    @Schema(description = "参数配置序号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "参数配置编号不能为空")
     private Long id;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigBaseVO.java
Patch:
@@ -10,15 +10,15 @@
 @Data
 public class DataSourceConfigBaseVO {
 
-    @Schema(description = "数据源名称", required = true, example = "test")
+    @Schema(description = "数据源名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "test")
     @NotNull(message = "数据源名称不能为空")
     private String name;
 
-    @Schema(description = "数据源连接", required = true, example = "jdbc:mysql://127.0.0.1:3306/ruoyi-vue-pro")
+    @Schema(description = "数据源连接", requiredMode = Schema.RequiredMode.REQUIRED, example = "jdbc:mysql://127.0.0.1:3306/ruoyi-vue-pro")
     @NotNull(message = "数据源连接不能为空")
     private String url;
 
-    @Schema(description = "用户名", required = true, example = "root")
+    @Schema(description = "用户名", requiredMode = Schema.RequiredMode.REQUIRED, example = "root")
     @NotNull(message = "用户名不能为空")
     private String username;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigCreateReqVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 import javax.validation.constraints.*;
@@ -9,7 +10,7 @@
 @ToString(callSuper = true)
 public class DataSourceConfigCreateReqVO extends DataSourceConfigBaseVO {
 
-    @Schema(description = "密码", required = true, example = "123456")
+    @Schema(description = "密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     @NotNull(message = "密码不能为空")
     private String password;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigRespVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 
@@ -10,10 +11,10 @@
 @ToString(callSuper = true)
 public class DataSourceConfigRespVO extends DataSourceConfigBaseVO {
 
-    @Schema(description = "主键编号", required = true, example = "1024")
+    @Schema(description = "主键编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigUpdateReqVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 import javax.validation.constraints.*;
@@ -9,11 +10,11 @@
 @ToString(callSuper = true)
 public class DataSourceConfigUpdateReqVO extends DataSourceConfigBaseVO {
 
-    @Schema(description = "主键编号", required = true, example = "1024")
+    @Schema(description = "主键编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "主键编号不能为空")
     private Long id;
 
-    @Schema(description = "密码", required = true, example = "123456")
+    @Schema(description = "密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     @NotNull(message = "密码不能为空")
     private String password;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigBaseVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.file.vo.config;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
@@ -11,7 +12,7 @@
 @Data
 public class FileConfigBaseVO {
 
-    @Schema(description = "配置名", required = true, example = "S3 - 阿里云")
+    @Schema(description = "配置名", requiredMode = Schema.RequiredMode.REQUIRED, example = "S3 - 阿里云")
     @NotNull(message = "配置名不能为空")
     private String name;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigCreateReqVO.java
Patch:
@@ -14,11 +14,11 @@
 @ToString(callSuper = true)
 public class FileConfigCreateReqVO extends FileConfigBaseVO {
 
-    @Schema(description = "存储器,参见 FileStorageEnum 枚举类参见 FileStorageEnum 枚举类", required = true, example = "1")
+    @Schema(description = "存储器,参见 FileStorageEnum 枚举类参见 FileStorageEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "存储器不能为空")
     private Integer storage;
 
-    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", required = true)
+    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "存储配置不能为空")
     private Map<String, Object> config;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigUpdateReqVO.java
Patch:
@@ -14,11 +14,11 @@
 @ToString(callSuper = true)
 public class FileConfigUpdateReqVO extends FileConfigBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", required = true)
+    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "存储配置不能为空")
     private Map<String, Object> config;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FileUploadReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class FileUploadReqVO {
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件附件不能为空")
     private MultipartFile file;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/job/JobCreateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class JobCreateReqVO extends JobBaseVO {
 
-    @Schema(description = "处理器的名字", required = true, example = "sysUserSessionTimeoutJob")
+    @Schema(description = "处理器的名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "sysUserSessionTimeoutJob")
     @NotNull(message = "处理器的名字不能为空")
     private String handlerName;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/job/JobUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class JobUpdateReqVO extends JobBaseVO {
 
-    @Schema(description = "任务编号", required = true, example = "1024")
+    @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "任务编号不能为空")
     private Long id;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/log/JobLogRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class JobLogRespVO extends JobLogBaseVO {
 
-    @Schema(description = "日志编号", required = true, example = "1024")
+    @Schema(description = "日志编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ApiAccessLogRespVO extends ApiAccessLogBaseVO {
 
-    @Schema(description = "日志主键", required = true, example = "1024")
+    @Schema(description = "日志主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apierrorlog/ApiErrorLogRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class ApiErrorLogRespVO extends ApiErrorLogBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
-    @Schema(description = "处理时间", required = true)
+    @Schema(description = "处理时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime processTime;
 
     @Schema(description = "处理用户编号", example = "233")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/vo/RedisKeyValueRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @AllArgsConstructor
 public class RedisKeyValueRespVO {
 
-    @Schema(description = "c5f6990767804a928f4bb96ca249febf", required = true, example = "String")
+    @Schema(description = "c5f6990767804a928f4bb96ca249febf", requiredMode = Schema.RequiredMode.REQUIRED, example = "String")
     private String key;
 
-    @Schema(required = true, example = "String")
+    @Schema(requiredMode = Schema.RequiredMode.REQUIRED, example = "String")
     private String value;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class TestDemoRespVO extends TestDemoBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class TestDemoUpdateReqVO extends TestDemoBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ProductBrandRespVO extends ProductBrandBaseVO {
 
-    @Schema(description = "品牌编号", required = true, example = "1")
+    @Schema(description = "品牌编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductBrandUpdateReqVO extends ProductBrandBaseVO {
 
-    @Schema(description = "品牌编号", required = true, example = "1")
+    @Schema(description = "品牌编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "品牌编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ProductCategoryRespVO extends ProductCategoryBaseVO {
 
-    @Schema(description = "分类编号", required = true, example = "2")
+    @Schema(description = "分类编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductCategoryUpdateReqVO extends ProductCategoryBaseVO {
 
-    @Schema(description = "分类编号", required = true, example = "2")
+    @Schema(description = "分类编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     @NotNull(message = "分类编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyBaseVO.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 public class ProductPropertyBaseVO {
 
-    @Schema(description = "名称", required = true, example = "颜色")
+    @Schema(description = "名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "颜色")
     @NotBlank(message = "名称不能为空")
     private String name;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyPageReqVO.java
Patch:
@@ -20,7 +20,7 @@ public class ProductPropertyPageReqVO extends PageParam {
     @Schema(description = "名称", example = "颜色")
     private String name;
 
-    @Schema(description = "状态", required = true, example = "1")
+    @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ProductPropertyRespVO extends ProductPropertyBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductPropertyUpdateReqVO extends ProductPropertyBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "主键不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueBaseVO.java
Patch:
@@ -13,11 +13,11 @@
 @Data
 public class ProductPropertyValueBaseVO {
 
-    @Schema(description = "属性项的编号", required = true, example = "1024")
+    @Schema(description = "属性项的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "属性项的编号不能为空")
     private Long propertyId;
 
-    @Schema(description = "名称", required = true, example = "红色")
+    @Schema(description = "名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "红色")
     @NotEmpty(message = "名称名字不能为空")
     private String name;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValuePageReqVO.java
Patch:
@@ -18,7 +18,7 @@ public class ProductPropertyValuePageReqVO extends PageParam {
     @Schema(description = "名称", example = "红色")
     private String name;
 
-    @Schema(description = "状态", required = true, example = "1")
+    @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductPropertyValueRespVO extends ProductPropertyValueBaseVO {
 
-    @Schema(description = "编号", required = true, example = "10")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Long id;
 
     @Schema(description = "创建时间")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductPropertyValueUpdateReqVO extends ProductPropertyValueBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "主键不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/sku/vo/ProductSkuRespVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class ProductSkuRespVO extends ProductSkuBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "创建时间")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuUpdateReqVO.java
Patch:
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class ProductSpuUpdateReqVO extends ProductSpuBaseVO {
 
-    @Schema(description = "商品编号", required = true, example = "1")
+    @Schema(description = "商品编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "商品编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/banner/vo/BannerRespVO.java
Patch:
@@ -15,11 +15,11 @@
 @ToString(callSuper = true)
 public class BannerRespVO  extends BannerBaseVO {
 
-    @Schema(description = "banner编号", required = true)
+    @Schema(description = "banner编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "banner编号不能为空")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/banner/vo/BannerUpdateReqVO.java
Patch:
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class BannerUpdateReqVO extends BannerBaseVO {
 
-    @Schema(description = "banner 编号", required = true)
+    @Schema(description = "banner 编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "banner 编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/coupon/CouponRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class CouponRespVO extends CouponBaseVO {
 
-    @Schema(description = "优惠劵编号", required = true, example = "1024")
+    @Schema(description = "优惠劵编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/template/CouponTemplateUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class CouponTemplateUpdateReqVO extends CouponTemplateBaseVO {
 
-    @Schema(description = "模板编号", required = true, example = "1024")
+    @Schema(description = "模板编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "模板编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/template/CouponTemplateUpdateStatusReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class CouponTemplateUpdateStatusReqVO {
 
-    @Schema(description = "优惠劵模板编号", required = true, example = "1024")
+    @Schema(description = "优惠劵模板编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "优惠劵模板编号不能为空")
     private Long id;
 
-    @Schema(description = "状态", required = true, example = "1")
+    @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     @InEnum(value = CommonStatusEnum.class, message = "修改状态必须是 {value}")
     private Integer status;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/discount/vo/DiscountActivityRespVO.java
Patch:
@@ -14,14 +14,14 @@
 @ToString(callSuper = true)
 public class DiscountActivityRespVO extends DiscountActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "活动状态", required = true, example = "1")
+    @Schema(description = "活动状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "活动状态不能为空")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/discount/vo/DiscountActivityUpdateReqVO.java
Patch:
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class DiscountActivityUpdateReqVO extends DiscountActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "活动编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/reward/vo/RewardActivityRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class RewardActivityRespVO extends RewardActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer id;
 
-    @Schema(description = "活动状态", required = true, example = "1")
+    @Schema(description = "活动状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/reward/vo/RewardActivityUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class RewardActivityUpdateReqVO extends RewardActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "活动编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityCreateReqVO.java
Patch:
@@ -19,11 +19,11 @@ public class SeckillActivityCreateReqVO extends SeckillActivityBaseVO {
     @Schema(description = "备注", example = "限时秒杀活动")
     private String remark;
 
-    @Schema(description = "排序", required = true, example = "1")
+    @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "排序不能为空")
     private Integer sort;
 
-    @Schema(description = "秒杀时段id", required = true, example = "1,3")
+    @Schema(description = "秒杀时段id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,3")
     @NotEmpty(message = "参与场次不能为空")
     private List<Long> timeIds;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityUpdateReqVO.java
Patch:
@@ -16,18 +16,18 @@
 @ToString(callSuper = true)
 public class SeckillActivityUpdateReqVO extends SeckillActivityBaseVO {
 
-    @Schema(description = "秒杀活动编号", required = true, example = "224")
+    @Schema(description = "秒杀活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "224")
     @NotNull(message = "秒杀活动编号不能为空")
     private Long id;
 
     @Schema(description = "备注", example = "限时秒杀活动")
     private String remark;
 
-    @Schema(description = "排序", required = true, example = "1")
+    @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "排序不能为空")
     private Integer sort;
 
-    @Schema(description = "秒杀时段id", required = true, example = "1,3")
+    @Schema(description = "秒杀时段id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,3")
     @NotEmpty(message = "秒杀时段id不能为空")
     private List<Long> timeIds;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/time/SeckillTimeBaseVO.java
Patch:
@@ -13,15 +13,15 @@
 @Data
 public class SeckillTimeBaseVO {
 
-    @Schema(description = "秒杀时段名称", required = true, example = "上午场")
+    @Schema(description = "秒杀时段名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "上午场")
     @NotNull(message = "秒杀时段名称不能为空")
     private String name;
 
-    @Schema(description = "开始时间点", required = true, example = "16:30:40")
+    @Schema(description = "开始时间点", requiredMode = Schema.RequiredMode.REQUIRED, example = "16:30:40")
     @NotNull(message = "开始时间点不能为空")
     private LocalTime startTime;
 
-    @Schema(description = "结束时间点", required = true, example = "16:30:40")
+    @Schema(description = "结束时间点", requiredMode = Schema.RequiredMode.REQUIRED, example = "16:30:40")
     @NotNull(message = "结束时间点不能为空")
     private LocalTime endTime;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/time/SeckillTimeRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class SeckillTimeRespVO extends SeckillTimeBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "秒杀活动数量", required = true, example = "1")
+    @Schema(description = "秒杀活动数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer seckillActivityCount;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/time/SeckillTimeUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class SeckillTimeUpdateReqVO extends SeckillTimeBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleDisagreeReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class TradeAfterSaleDisagreeReqVO {
 
-    @Schema(description = "售后编号", required = true, example = "1024")
+    @Schema(description = "售后编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "售后编号不能为空")
     private Long id;
 
-    @Schema(description = "审批备注", required = true, example = "你猜")
+    @Schema(description = "审批备注", requiredMode = Schema.RequiredMode.REQUIRED, example = "你猜")
     @NotEmpty(message = "审批备注不能为空")
     private String auditReason;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleRefuseReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class TradeAfterSaleRefuseReqVO {
 
-    @Schema(description = "售后编号", required = true, example = "1024")
+    @Schema(description = "售后编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "售后编号不能为空")
     private Long id;
 
-    @Schema(description = "收货备注", required = true, example = "你猜")
+    @Schema(description = "收货备注", requiredMode = Schema.RequiredMode.REQUIRED, example = "你猜")
     @NotNull(message = "收货备注不能为空")
     private String refuseMemo;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleRespPageItemVO.java
Patch:
@@ -16,10 +16,10 @@
 @ToString(callSuper = true)
 public class TradeAfterSaleRespPageItemVO extends TradeAfterSaleBaseVO {
 
-    @Schema(description = "售后编号", required = true, example = "27630")
+    @Schema(description = "售后编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "27630")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/base/member/user/MemberUserRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MemberUserRespVO {
 
-    @Schema(description = "用户 ID", required = true, example = "1")
+    @Schema(description = "用户 ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "用户昵称", required = true, example = "芋道源码")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道源码")
     private String nickname;
 
     @Schema(description = "用户头像", example = "https://www.iocoder.cn/xxx.png")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderDeliveryReqVO.java
Patch:
@@ -10,15 +10,15 @@
 @Data
 public class TradeOrderDeliveryReqVO {
 
-    @Schema(description = "订单编号", required = true, example = "1024")
+    @Schema(description = "订单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "订单编号不能为空")
     private Long id;
 
-    @Schema(description = "发货物流公司编号", required = true, example = "1")
+    @Schema(description = "发货物流公司编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "发货物流公司编号不能为空")
     private Long logisticsId;
 
-    @Schema(description = "发货物流单号", required = true, example = "SF123456789")
+    @Schema(description = "发货物流单号", requiredMode = Schema.RequiredMode.REQUIRED, example = "SF123456789")
     @NotEmpty(message = "发货物流单号不能为空")
     private String logisticsNo;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderDetailRespVO.java
Patch:
@@ -11,7 +11,7 @@
 @Data
 public class TradeOrderDetailRespVO extends TradeOrderBaseVO {
 
-    @Schema(description = "收件人地区名字", required = true, example = "上海 上海市 普陀区")
+    @Schema(description = "收件人地区名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "上海 上海市 普陀区")
     private String receiverAreaName;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderPageItemRespVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class TradeOrderPageItemRespVO extends TradeOrderBaseVO {
 
-    @Schema(description = "收件人地区名字", required = true, example = "上海 上海市 普陀区")
+    @Schema(description = "收件人地区名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "上海 上海市 普陀区")
     private String receiverAreaName;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/base/sku/AppProductSkuBaseRespVO.java
Patch:
@@ -14,16 +14,16 @@
 @Data
 public class AppProductSkuBaseRespVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "商品 SKU 名字", required = true, example = "芋道")
+    @Schema(description = "商品 SKU 名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
     @Schema(description = "图片地址", example = "https://www.iocoder.cn/xx.png")
     private String picUrl;
 
-    @Schema(description = "库存", required = true, example = "1")
+    @Schema(description = "库存", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer stock;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/base/spu/AppProductSpuBaseRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @Data
 public class AppProductSpuBaseRespVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "商品 SPU 名字", required = true, example = "芋道")
+    @Schema(description = "商品 SPU 名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
     @Schema(description = "商品主图地址", example = "https://www.iocoder.cn/xx.png")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartItemAddCountReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartItemAddCountReqVO {
 
-    @Schema(description = "商品 SKU 编号", required = true,example = "1024")
+    @Schema(description = "商品 SKU 编号", requiredMode = Schema.RequiredMode.REQUIRED,example = "1024")
     @NotNull(message = "商品 SKU 编号不能为空")
     private Long skuId;
 
-    @Schema(description = "新增商品数量", required = true, example = "1")
+    @Schema(description = "新增商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数量不能为空")
     @Min(message = "数量必须大于 0", value = 1L)
     private Integer count;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartItemUpdateCountReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartItemUpdateCountReqVO {
 
-    @Schema(description = "商品 SKU 编号", required = true, example = "1024")
+    @Schema(description = "商品 SKU 编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "商品 SKU 编号不能为空")
     private Long skuId;
 
-    @Schema(description = "商品数量", required = true, example = "1")
+    @Schema(description = "商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数量不能为空")
     @Min(message = "数量必须大于 0", value = 1L)
     private Integer count;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartItemUpdateSelectedReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartItemUpdateSelectedReqVO {
 
-    @Schema(description = "商品 SKU 编号列表", required = true, example = "1024,2048")
+    @Schema(description = "商品 SKU 编号列表", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024,2048")
     @NotNull(message = "商品 SKU 编号列表不能为空")
     private Collection<Long> skuIds;
 
-    @Schema(description = "是否选中", required = true, example = "true")
+    @Schema(description = "是否选中", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否选中不能为空")
     private Boolean selected;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderGetCreateInfoRespVO.java
Patch:
@@ -44,7 +44,7 @@ public static class ItemGroup {
     public static class Sku {
 
         // SKU 自带信息
-        @Schema(description = "SKU 编号", required = true, example = "1024")
+        @Schema(description = "SKU 编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
         private Integer id;
         /**
          * SPU 信息
@@ -144,7 +144,7 @@ public static class Spu {
     @AllArgsConstructor
     public static class Fee {
 
-        @Schema(description = "购买总价", required = true, example = "1024")
+        @Schema(description = "购买总价", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
         private Integer buyPrice;
         /**
          * 优惠总价

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/address/vo/AppAddressRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @ToString(callSuper = true)
 public class AppAddressRespVO extends AppAddressBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/address/vo/AppAddressUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class AppAddressUpdateReqVO extends AppAddressBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthCheckCodeReqVO.java
Patch:
@@ -27,7 +27,7 @@ public class AppAuthCheckCodeReqVO {
     @Mobile
     private String mobile;
 
-    @Schema(description = "手机验证码", required = true, example = "1024")
+    @Schema(description = "手机验证码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotBlank(message = "手机验证码不能为空")
     @Length(min = 4, max = 6, message = "手机验证码长度为 4-6 位")
     @Pattern(regexp = "^[0-9]+$", message = "手机验证码必须都是数字")

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthResetPasswordReqVO.java
Patch:
@@ -20,18 +20,18 @@
 @Builder
 public class AppAuthResetPasswordReqVO {
 
-    @Schema(description = "新密码", required = true, example = "buzhidao")
+    @Schema(description = "新密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "buzhidao")
     @NotEmpty(message = "新密码不能为空")
     @Length(min = 4, max = 16, message = "密码长度为 4-16 位")
     private String password;
 
-    @Schema(description = "手机验证码", required = true, example = "1024")
+    @Schema(description = "手机验证码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "手机验证码不能为空")
     @Length(min = 4, max = 6, message = "手机验证码长度为 4-6 位")
     @Pattern(regexp = "^[0-9]+$", message = "手机验证码必须都是数字")
     private String code;
 
-    @Schema(description = "手机号",required = true,example = "15878962356")
+    @Schema(description = "手机号",requiredMode = Schema.RequiredMode.REQUIRED,example = "15878962356")
     @NotBlank(message = "手机号不能为空")
     @Mobile
     private String mobile;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,16 +18,16 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "授权码", required = true, example = "1024")
+    @Schema(description = "授权码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "授权码不能为空")
     private String code;
 
-    @Schema(description = "state", required = true, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
+    @Schema(description = "state", requiredMode = Schema.RequiredMode.REQUIRED, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
     @NotEmpty(message = "state 不能为空")
     private String state;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthUpdatePasswordReqVO.java
Patch:
@@ -18,12 +18,12 @@
 @Builder
 public class AppAuthUpdatePasswordReqVO {
 
-    @Schema(description = "用户旧密码", required = true, example = "123456")
+    @Schema(description = "用户旧密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     @NotBlank(message = "旧密码不能为空")
     @Length(min = 4, max = 16, message = "密码长度为 4-16 位")
     private String oldPassword;
 
-    @Schema(description = "新密码", required = true, example = "buzhidao")
+    @Schema(description = "新密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "buzhidao")
     @NotEmpty(message = "新密码不能为空")
     @Length(min = 4, max = 16, message = "密码长度为 4-16 位")
     private String password;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthWeixinMiniAppLoginReqVO.java
Patch:
@@ -15,11 +15,11 @@
 @Builder
 public class AppAuthWeixinMiniAppLoginReqVO {
 
-    @Schema(description = "手机 code,小程序通过 wx.getPhoneNumber 方法获得", required = true, example = "hello")
+    @Schema(description = "手机 code,小程序通过 wx.getPhoneNumber 方法获得", requiredMode = Schema.RequiredMode.REQUIRED, example = "hello")
     @NotEmpty(message = "手机 code 不能为空")
     private String phoneCode;
 
-    @Schema(description = "登录 code,小程序通过 wx.login 方法获得", required = true, example = "word")
+    @Schema(description = "登录 code,小程序通过 wx.login 方法获得", requiredMode = Schema.RequiredMode.REQUIRED, example = "word")
     @NotEmpty(message = "登录 code 不能为空")
     private String loginCode;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,16 +18,16 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "授权码", required = true, example = "1024")
+    @Schema(description = "授权码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "授权码不能为空")
     private String code;
 
-    @Schema(description = "state", required = true, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
+    @Schema(description = "state", requiredMode = Schema.RequiredMode.REQUIRED, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
     @NotEmpty(message = "state 不能为空")
     private String state;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,12 +18,12 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "社交用户的 openid", required = true, example = "IPRmJ0wvBptiPIlGEZiPewGwiEiE")
+    @Schema(description = "社交用户的 openid", requiredMode = Schema.RequiredMode.REQUIRED, example = "IPRmJ0wvBptiPIlGEZiPewGwiEiE")
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/user/vo/AppUserInfoRespVO.java
Patch:
@@ -11,12 +11,12 @@
 @AllArgsConstructor
 public class AppUserInfoRespVO {
 
-    @Schema(description = "用户昵称", required = true, example = "芋艿")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋艿")
     private String nickname;
 
-    @Schema(description = "用户头像", required = true, example = "/infra/file/get/35a12e57-4297-4faa-bf7d-7ed2f211c952")
+    @Schema(description = "用户头像", requiredMode = Schema.RequiredMode.REQUIRED, example = "/infra/file/get/35a12e57-4297-4faa-bf7d-7ed2f211c952")
     private String avatar;
 
-    @Schema(description = "用户手机号", required = true, example = "15601691300")
+    @Schema(description = "用户手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "15601691300")
     private String mobile;
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/MpAccountRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class MpAccountRespVO extends MpAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "二维码图片URL", example = "https://www.iocoder.cn/1024.png")
     private String qrCodeUrl;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/MpAccountSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MpAccountSimpleRespVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "公众号名称", required = true, example = "芋道源码")
+    @Schema(description = "公众号名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道源码")
     private String name;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/MpAccountUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpAccountUpdateReqVO extends MpAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpMaterialPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadNewsImageReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class MpMaterialUploadNewsImageReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件不能为空")
     @JsonIgnore // 避免被操作日志，进行序列化，导致报错
     private MultipartFile file;

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadPermanentReqVO.java
Patch:
@@ -15,15 +15,15 @@
 @Data
 public class MpMaterialUploadPermanentReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", required = true, example = "image")
+    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "image")
     @NotEmpty(message = "文件类型不能为空")
     private String type;
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件不能为空")
     @JsonIgnore // 避免被操作日志，进行序列化，导致报错
     private MultipartFile file;

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MpMaterialUploadRespVO {
 
-    @Schema(description = "素材的 media_id", required = true, example = "123")
+    @Schema(description = "素材的 media_id", requiredMode = Schema.RequiredMode.REQUIRED, example = "123")
     private String mediaId;
 
-    @Schema(description = "素材的 URL", required = true, example = "https://www.iocoder.cn/1.png")
+    @Schema(description = "素材的 URL", requiredMode = Schema.RequiredMode.REQUIRED, example = "https://www.iocoder.cn/1.png")
     private String url;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadTemporaryReqVO.java
Patch:
@@ -12,15 +12,15 @@
 @Data
 public class MpMaterialUploadTemporaryReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", required = true, example = "image")
+    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "image")
     @NotEmpty(message = "文件类型不能为空")
     private String type;
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件不能为空")
     @JsonIgnore // 避免被操作日志，进行序列化，导致报错
     private MultipartFile file;

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/menu/vo/MpMenuSaveReqVO.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 public class MpMenuSaveReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/autoreply/MpAutoReplyCreateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpAutoReplyCreateReqVO extends MpAutoReplyBaseVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/autoreply/MpAutoReplyPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpAutoReplyPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/autoreply/MpAutoReplyUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpAutoReplyUpdateReqVO extends MpAutoReplyBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "主键不能为空")
     private Long id;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/message/MpMessagePageReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @ToString(callSuper = true)
 public class MpMessagePageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/news/vo/MpDraftPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpDraftPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/news/vo/MpFreePublishPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpFreePublishPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsGetReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @Data
 public class MpStatisticsGetReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsUpstreamMessageRespVO.java
Patch:
@@ -9,13 +9,13 @@
 @Data
 public class MpStatisticsUpstreamMessageRespVO {
 
-    @Schema(description = "日期", required = true)
+    @Schema(description = "日期", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date refDate;
 
-    @Schema(description = "上行发送了（向公众号发送了）消息的粉丝数", required = true, example = "10")
+    @Schema(description = "上行发送了（向公众号发送了）消息的粉丝数", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Integer messageUser;
 
-    @Schema(description = "上行发送了消息的消息总数", required = true, example = "20")
+    @Schema(description = "上行发送了消息的消息总数", requiredMode = Schema.RequiredMode.REQUIRED, example = "20")
     private Integer messageCount;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsUserCumulateRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @Data
 public class MpStatisticsUserCumulateRespVO {
 
-    @Schema(description = "日期", required = true)
+    @Schema(description = "日期", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date refDate;
 
-    @Schema(description = "累计粉丝量", required = true, example = "10")
+    @Schema(description = "累计粉丝量", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Integer cumulateUser;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagBaseVO.java
Patch:
@@ -14,7 +14,7 @@
 @Data
 public class MpTagBaseVO {
 
-    @Schema(description = "标签名", required = true, example = "土豆")
+    @Schema(description = "标签名", requiredMode = Schema.RequiredMode.REQUIRED, example = "土豆")
     @NotEmpty(message = "标签名不能为空")
     private String name;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagCreateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpTagCreateReqVO extends MpTagBaseVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpTagPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotEmpty(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class MpTagRespVO extends MpTagBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "此标签下粉丝数量", required = true, example = "0")
+    @Schema(description = "此标签下粉丝数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "0")
     private Integer count;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagSimpleRespVO.java
Patch:
@@ -7,13 +7,13 @@
 @Data
 public class MpTagSimpleRespVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "公众号的标签编号", required = true, example = "2048")
+    @Schema(description = "公众号的标签编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     private Long tagId;
 
-    @Schema(description = "标签名称", required = true, example = "快乐")
+    @Schema(description = "标签名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "快乐")
     private String name;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpTagUpdateReqVO extends MpTagBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/user/vo/MpUserPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpUserPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/user/vo/MpUserUpdateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class MpUserUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/demo/vo/PayDemoOrderCreateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class PayDemoOrderCreateReqVO {
 
-    @Schema(description = "商品编号", required = true, example = "17682")
+    @Schema(description = "商品编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "17682")
     @NotNull(message = "商品编号不能为空")
     private Long spuId;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class PayAppRespVO extends PayAppBaseVO {
 
-    @Schema(description = "应用编号", required = true)
+    @Schema(description = "应用编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayAppUpdateReqVO extends PayAppBaseVO {
 
-    @Schema(description = "应用编号", required = true)
+    @Schema(description = "应用编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "应用编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppUpdateStatusReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class PayAppUpdateStatusReqVO {
 
-    @Schema(description = "商户编号", required = true, example = "1024")
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "商户编号不能为空")
     private Long id;
 
-    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", required = true, example = "1")
+    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelRespVO.java
Patch:
@@ -10,12 +10,12 @@
 @ToString(callSuper = true)
 public class PayChannelRespVO extends PayChannelBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
-    @Schema(description = "配置", required = true)
+    @Schema(description = "配置", requiredMode = Schema.RequiredMode.REQUIRED)
     private String config;
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayChannelUpdateReqVO extends PayChannelBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantBaseVO.java
Patch:
@@ -11,15 +11,15 @@
 @Data
 public class PayMerchantBaseVO {
 
-    @Schema(description = "商户全称", required = true)
+    @Schema(description = "商户全称", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户全称不能为空")
     private String name;
 
-    @Schema(description = "商户简称", required = true)
+    @Schema(description = "商户简称", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户简称不能为空")
     private String shortName;
 
-    @Schema(description = "开启状态", required = true)
+    @Schema(description = "开启状态", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "开启状态不能为空")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class PayMerchantRespVO extends PayMerchantBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
-    @Schema(description = "商户号", required = true, example = "M233666999")
+    @Schema(description = "商户号", requiredMode = Schema.RequiredMode.REQUIRED, example = "M233666999")
     private String no;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayMerchantUpdateReqVO extends PayMerchantBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantUpdateStatusReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class PayMerchantUpdateStatusReqVO {
 
-    @Schema(description = "商户编号", required = true, example = "1024")
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "商户编号不能为空")
     private Long id;
 
-    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", required = true, example = "1")
+    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderPageItemRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class PayOrderPageItemRespVO extends PayOrderBaseVO {
 
-    @Schema(description = "支付订单编号", required = true)
+    @Schema(description = "支付订单编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
     @Schema(description = "商户名称")

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class PayOrderRespVO extends PayOrderBaseVO {
 
-    @Schema(description = "支付订单编号", required = true)
+    @Schema(description = "支付订单编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderSubmitReqVO.java
Patch:
@@ -13,11 +13,11 @@
 @Data
 public class PayOrderSubmitReqVO {
 
-    @Schema(description = "支付单编号", required = true, example = "1024")
+    @Schema(description = "支付单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "支付单编号不能为空")
     private Long id;
 
-    @Schema(description = "支付渠道", required = true, example = "wx_pub")
+    @Schema(description = "支付渠道", requiredMode = Schema.RequiredMode.REQUIRED, example = "wx_pub")
     @NotEmpty(message = "支付渠道不能为空")
     private String channelCode;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderSubmitRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @Data
 public class PayOrderSubmitRespVO {
 
-    @Schema(description = "展示模式", required = true, example = "url") // 参见 PayDisplayModeEnum 枚举
+    @Schema(description = "展示模式", requiredMode = Schema.RequiredMode.REQUIRED, example = "url") // 参见 PayDisplayModeEnum 枚举
     private String displayMode;
 
-    @Schema(description = "展示内容", required = true)
+    @Schema(description = "展示内容", requiredMode = Schema.RequiredMode.REQUIRED)
     private String displayContent;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundDetailsRespVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class PayRefundDetailsRespVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付退款编号", required = true)
+    @Schema(description = "支付退款编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
     @Schema(description = "商户名称")

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundPageItemRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class PayRefundPageItemRespVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付订单编号", required = true)
+    @Schema(description = "支付订单编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
     @Schema(description = "商户名称")
@@ -25,7 +25,7 @@ public class PayRefundPageItemRespVO extends PayRefundBaseVO {
     @Schema(description = "渠道名称")
     private String channelCodeName;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class PayRefundRespVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付退款编号", required = true)
+    @Schema(description = "支付退款编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayRefundUpdateReqVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付退款编号", required = true)
+    @Schema(description = "支付退款编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "支付退款编号不能为空")
     private Long id;
 

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/data/GoViewDataGetBySqlReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class GoViewDataGetBySqlReqVO {
 
-    @Schema(description = "SQL 语句", required = true, example = "SELECT * FROM user")
+    @Schema(description = "SQL 语句", requiredMode = Schema.RequiredMode.REQUIRED, example = "SELECT * FROM user")
     @NotEmpty(message = "SQL 语句不能为空")
     private String sql;
 

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/data/GoViewDataRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @Data
 public class GoViewDataRespVO {
 
-    @Schema(description = "数据维度", required = true, example = "['product', 'data1', 'data2']")
+    @Schema(description = "数据维度", requiredMode = Schema.RequiredMode.REQUIRED, example = "['product', 'data1', 'data2']")
     private List<String> dimensions;
 
-    @Schema(description = "数据明细列表", required = true)
+    @Schema(description = "数据明细列表", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<Map<String, Object>> source;
 
 }

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/project/GoViewProjectCreateReqVO.java
Patch:
@@ -8,7 +8,7 @@
 @Data
 public class GoViewProjectCreateReqVO {
 
-    @Schema(description = "项目名称", required = true, example = "王五")
+    @Schema(description = "项目名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "王五")
     @NotEmpty(message = "项目名称不能为空")
     private String name;
 

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/project/GoViewProjectUpdateReqVO.java
Patch:
@@ -11,14 +11,14 @@
 @Data
 public class GoViewProjectUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "18993")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "18993")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "项目名称", required = true, example = "王五")
+    @Schema(description = "项目名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "王五")
     private String name;
 
-    @Schema(description = "发布状态", required = true, example = "1")
+    @Schema(description = "发布状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(value = CommonStatusEnum.class, message = "发布状态必须是 {value}")
     private Integer status;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSmsLoginReqVO.java
Patch:
@@ -16,12 +16,12 @@
 @Builder
 public class AuthSmsLoginReqVO {
 
-    @Schema(description = "手机号", required = true, example = "yudaoyuanma")
+    @Schema(description = "手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma")
     @NotEmpty(message = "手机号不能为空")
     @Mobile
     private String mobile;
 
-    @Schema(description = "短信验证码", required = true, example = "1024")
+    @Schema(description = "短信验证码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "验证码不能为空")
     private String code;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSmsSendReqVO.java
Patch:
@@ -19,12 +19,12 @@
 @Builder
 public class AuthSmsSendReqVO {
 
-    @Schema(description = "手机号", required = true, example = "yudaoyuanma")
+    @Schema(description = "手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma")
     @NotEmpty(message = "手机号不能为空")
     @Mobile
     private String mobile;
 
-    @Schema(description = "短信场景", required = true, example = "1")
+    @Schema(description = "短信场景", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "发送场景不能为空")
     @InEnum(SmsSceneEnum.class)
     private Integer scene;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSocialLoginReqVO.java
Patch:
@@ -18,16 +18,16 @@
 @Builder
 public class AuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型,参见 UserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 UserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "授权码", required = true, example = "1024")
+    @Schema(description = "授权码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "授权码不能为空")
     private String code;
 
-    @Schema(description = "state", required = true, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
+    @Schema(description = "state", requiredMode = Schema.RequiredMode.REQUIRED, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
     @NotEmpty(message = "state 不能为空")
     private String state;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptRespVO.java
Patch:
@@ -11,13 +11,13 @@
 @EqualsAndHashCode(callSuper = true)
 public class DeptRespVO extends DeptBaseVO {
 
-    @Schema(description = "部门编号", required = true, example = "1024")
+    @Schema(description = "部门编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", required = true, example = "1")
+    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptSimpleRespVO.java
Patch:
@@ -11,13 +11,13 @@
 @AllArgsConstructor
 public class DeptSimpleRespVO {
 
-    @Schema(description = "部门编号", required = true, example = "1024")
+    @Schema(description = "部门编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "部门名称", required = true, example = "芋道")
+    @Schema(description = "部门名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
-    @Schema(description = "父部门 ID", required = true, example = "1024")
+    @Schema(description = "父部门 ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long parentId;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DeptUpdateReqVO extends DeptBaseVO {
 
-    @Schema(description = "部门编号", required = true, example = "1024")
+    @Schema(description = "部门编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "部门编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @EqualsAndHashCode(callSuper = true)
 public class PostRespVO extends PostBaseVO {
 
-    @Schema(description = "岗位序号", required = true, example = "1024")
+    @Schema(description = "岗位序号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostSimpleRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @AllArgsConstructor
 public class PostSimpleRespVO {
 
-    @Schema(description = "岗位编号", required = true, example = "1024")
+    @Schema(description = "岗位编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "岗位名称", required = true, example = "芋道")
+    @Schema(description = "岗位名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class PostUpdateReqVO extends PostBaseVO {
 
-    @Schema(description = "岗位编号", required = true, example = "1024")
+    @Schema(description = "岗位编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "岗位编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataRespVO.java
Patch:
@@ -15,10 +15,10 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictDataRespVO extends DictDataBaseVO {
 
-    @Schema(description = "字典数据编号", required = true, example = "1024")
+    @Schema(description = "字典数据编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataSimpleRespVO.java
Patch:
@@ -7,13 +7,13 @@
 @Data
 public class DictDataSimpleRespVO {
 
-    @Schema(description = "字典类型", required = true, example = "gender")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "gender")
     private String dictType;
 
-    @Schema(description = "字典键值", required = true, example = "1")
+    @Schema(description = "字典键值", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private String value;
 
-    @Schema(description = "字典标签", required = true, example = "男")
+    @Schema(description = "字典标签", requiredMode = Schema.RequiredMode.REQUIRED, example = "男")
     private String label;
 
     @Schema(description = "颜色类型,default、primary、success、info、warning、danger", example = "default")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictDataUpdateReqVO extends DictDataBaseVO {
 
-    @Schema(description = "字典数据编号", required = true, example = "1024")
+    @Schema(description = "字典数据编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "字典数据编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeBaseVO.java
Patch:
@@ -14,12 +14,12 @@
 @Data
 public class DictTypeBaseVO {
 
-    @Schema(description = "字典名称", required = true, example = "性别")
+    @Schema(description = "字典名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "性别")
     @NotBlank(message = "字典名称不能为空")
     @Size(max = 100, message = "字典类型名称长度不能超过100个字符")
     private String name;
 
-    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", required = true, example = "1")
+    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer status;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeCreateReqVO.java
Patch:
@@ -12,7 +12,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictTypeCreateReqVO extends DictTypeBaseVO {
 
-    @Schema(description = "字典类型", required = true, example = "sys_common_sex")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "sys_common_sex")
     @NotNull(message = "字典类型不能为空")
     @Size(max = 100, message = "字典类型类型长度不能超过100个字符")
     private String type;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeRespVO.java
Patch:
@@ -15,13 +15,13 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictTypeRespVO extends DictTypeBaseVO {
 
-    @Schema(description = "字典类型编号", required = true, example = "1024")
+    @Schema(description = "字典类型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "字典类型", required = true, example = "sys_common_sex")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "sys_common_sex")
     private String type;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeSimpleRespVO.java
Patch:
@@ -11,13 +11,13 @@
 @AllArgsConstructor
 public class DictTypeSimpleRespVO {
 
-    @Schema(description = "字典类型编号", required = true, example = "1024")
+    @Schema(description = "字典类型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "字典类型名称", required = true, example = "芋道")
+    @Schema(description = "字典类型名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
-    @Schema(description = "字典类型", required = true, example = "sys_common_sex")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "sys_common_sex")
     private String type;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictTypeUpdateReqVO extends DictTypeBaseVO {
 
-    @Schema(description = "字典类型编号", required = true, example = "1024")
+    @Schema(description = "字典类型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "字典类型编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeBaseVO.java
Patch:
@@ -12,15 +12,15 @@
 @Data
 public class ErrorCodeBaseVO {
 
-    @Schema(description = "应用名", required = true, example = "dashboard")
+    @Schema(description = "应用名", requiredMode = Schema.RequiredMode.REQUIRED, example = "dashboard")
     @NotNull(message = "应用名不能为空")
     private String applicationName;
 
-    @Schema(description = "错误码编码", required = true, example = "1234")
+    @Schema(description = "错误码编码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1234")
     @NotNull(message = "错误码编码不能为空")
     private Integer code;
 
-    @Schema(description = "错误码错误提示", required = true, example = "帅气")
+    @Schema(description = "错误码错误提示", requiredMode = Schema.RequiredMode.REQUIRED, example = "帅气")
     @NotNull(message = "错误码错误提示不能为空")
     private String message;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class ErrorCodeRespVO extends ErrorCodeBaseVO {
 
-    @Schema(description = "错误码编号", required = true, example = "1024")
+    @Schema(description = "错误码编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "错误码类型,参见 ErrorCodeTypeEnum 枚举类", required = true, example = "1")
+    @Schema(description = "错误码类型,参见 ErrorCodeTypeEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer type;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ErrorCodeUpdateReqVO extends ErrorCodeBaseVO {
 
-    @Schema(description = "错误码编号", required = true, example = "1024")
+    @Schema(description = "错误码编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "错误码编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/ip/vo/AreaNodeRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @Data
 public class AreaNodeRespVO {
 
-    @Schema(description = "编号", required = true, example = "110000")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "110000")
     private Integer id;
 
-    @Schema(description = "名字", required = true, example = "北京")
+    @Schema(description = "名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "北京")
     private String name;
 
     /**

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/loginlog/LoginLogRespVO.java
Patch:
@@ -14,17 +14,17 @@
 @ToString(callSuper = true)
 public class LoginLogRespVO extends LoginLogBaseVO {
 
-    @Schema(description = "日志编号", required = true, example = "1024")
+    @Schema(description = "日志编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "用户编号", example = "666")
     private Long userId;
 
-    @Schema(description = "用户类型,参见 UserTypeEnum 枚举", required = true, example = "2")
+    @Schema(description = "用户类型,参见 UserTypeEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     @NotNull(message = "用户类型不能为空")
     private Integer userType;
 
-    @Schema(description = "登录时间", required = true)
+    @Schema(description = "登录时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/operatelog/OperateLogRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @ToString(callSuper = true)
 public class OperateLogRespVO extends OperateLogBaseVO {
 
-    @Schema(description = "日志编号", required = true, example = "1024")
+    @Schema(description = "日志编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "用户昵称", required = true, example = "芋艿")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋艿")
     private String userNickname;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountPageReqVO.java
Patch:
@@ -12,10 +12,10 @@
 @ToString(callSuper = true)
 public class MailAccountPageReqVO extends PageParam {
 
-    @Schema(description = "邮箱", required = true, example = "yudaoyuanma@123.com")
+    @Schema(description = "邮箱", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma@123.com")
     private String mail;
 
-    @Schema(description = "用户名" , required = true , example = "yudao")
+    @Schema(description = "用户名" , requiredMode = Schema.RequiredMode.REQUIRED , example = "yudao")
     private String username;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountRespVO.java
Patch:
@@ -14,11 +14,11 @@
 @ToString(callSuper = true)
 public class MailAccountRespVO extends MailAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MailAccountSimpleRespVO {
 
-    @Schema(description = "邮箱编号", required = true, example = "1024")
+    @Schema(description = "邮箱编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "邮箱", required = true, example = "768541388@qq.com")
+    @Schema(description = "邮箱", requiredMode = Schema.RequiredMode.REQUIRED, example = "768541388@qq.com")
     private String mail;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MailAccountUpdateReqVO extends MailAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/log/MailLogRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class MailLogRespVO extends MailLogBaseVO {
 
-    @Schema(description = "编号", required = true, example = "31020")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "31020")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateRespVO.java
Patch:
@@ -14,13 +14,13 @@
 @ToString(callSuper = true)
 public class MailTemplateRespVO extends MailTemplateBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "参数数组", example = "name,code")
     private List<String> params;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateSendReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class MailTemplateSendReqVO {
 
-    @Schema(description = "接收邮箱", required = true, example = "7685413@qq.com")
+    @Schema(description = "接收邮箱", requiredMode = Schema.RequiredMode.REQUIRED, example = "7685413@qq.com")
     @NotEmpty(message = "接收邮箱不能为空")
     private String mail;
 
-    @Schema(description = "模板编码", required = true, example = "test_01")
+    @Schema(description = "模板编码", requiredMode = Schema.RequiredMode.REQUIRED, example = "test_01")
     @NotNull(message = "模板编码不能为空")
     private String templateCode;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MailTemplateSimpleRespVO {
 
-    @Schema(description = "模版编号", required = true, example = "1024")
+    @Schema(description = "模版编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "模版名字", required = true, example = "哒哒哒")
+    @Schema(description = "模版名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "哒哒哒")
     private String name;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MailTemplateUpdateReqVO extends MailTemplateBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notice/vo/NoticeRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @EqualsAndHashCode(callSuper = true)
 public class NoticeRespVO extends NoticeBaseVO {
 
-    @Schema(description = "通知公告序号", required = true, example = "1024")
+    @Schema(description = "通知公告序号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notice/vo/NoticeUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class NoticeUpdateReqVO extends NoticeBaseVO {
 
-    @Schema(description = "岗位公告编号", required = true, example = "1024")
+    @Schema(description = "岗位公告编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "岗位公告编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/message/NotifyMessageRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class NotifyMessageRespVO extends NotifyMessageBaseVO {
 
-    @Schema(description = "ID", required = true, example = "1024")
+    @Schema(description = "ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateRespVO.java
Patch:
@@ -10,13 +10,13 @@
 @ToString(callSuper = true)
 public class NotifyTemplateRespVO extends NotifyTemplateBaseVO {
 
-    @Schema(description = "ID", required = true, example = "1024")
+    @Schema(description = "ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "参数数组", example = "name,code")
     private List<String> params;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateSendReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class NotifyTemplateSendReqVO {
 
-    @Schema(description = "用户id", required = true, example = "01")
+    @Schema(description = "用户id", requiredMode = Schema.RequiredMode.REQUIRED, example = "01")
     @NotNull(message = "用户id不能为空")
     private Long userId;
 
-    @Schema(description = "模板编码", required = true, example = "01")
+    @Schema(description = "模板编码", requiredMode = Schema.RequiredMode.REQUIRED, example = "01")
     @NotEmpty(message = "模板编码不能为空")
     private String templateCode;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateUpdateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @ToString(callSuper = true)
 public class NotifyTemplateUpdateReqVO extends NotifyTemplateBaseVO {
 
-    @Schema(description = "ID", required = true, example = "1024")
+    @Schema(description = "ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "ID 不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/client/OAuth2ClientRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class OAuth2ClientRespVO extends OAuth2ClientBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/client/OAuth2ClientUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class OAuth2ClientUpdateReqVO extends OAuth2ClientBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/open/OAuth2OpenAuthorizeInfoRespVO.java
Patch:
@@ -19,18 +19,18 @@ public class OAuth2OpenAuthorizeInfoRespVO {
      */
     private Client client;
 
-    @Schema(description = "scope 的选中信息,使用 List 保证有序性，Key 是 scope，Value 为是否选中", required = true)
+    @Schema(description = "scope 的选中信息,使用 List 保证有序性，Key 是 scope，Value 为是否选中", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<KeyValue<String, Boolean>> scopes;
 
     @Data
     @NoArgsConstructor
     @AllArgsConstructor
     public static class Client {
 
-        @Schema(description = "应用名", required = true, example = "土豆")
+        @Schema(description = "应用名", requiredMode = Schema.RequiredMode.REQUIRED, example = "土豆")
         private String name;
 
-        @Schema(description = "应用图标", required = true, example = "https://www.iocoder.cn/xx.png")
+        @Schema(description = "应用图标", requiredMode = Schema.RequiredMode.REQUIRED, example = "https://www.iocoder.cn/xx.png")
         private String logo;
 
     }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageParam.java
Patch:
@@ -15,12 +15,12 @@ public class PageParam implements Serializable {
     private static final Integer PAGE_NO = 1;
     private static final Integer PAGE_SIZE = 10;
 
-    @Schema(description = "页码，从 1 开始", required = true,example = "1")
+    @Schema(description = "页码，从 1 开始", requiredMode = Schema.RequiredMode.REQUIRED,example = "1")
     @NotNull(message = "页码不能为空")
     @Min(value = 1, message = "页码最小值为 1")
     private Integer pageNo = PAGE_NO;
 
-    @Schema(description = "每页条数，最大值为 100", required = true, example = "10")
+    @Schema(description = "每页条数，最大值为 100", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @NotNull(message = "每页条数不能为空")
     @Min(value = 1, message = "每页条数最小值为 1")
     @Max(value = 100, message = "每页条数最大值为 100")

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageResult.java
Patch:
@@ -11,10 +11,10 @@
 @Data
 public final class PageResult<T> implements Serializable {
 
-    @Schema(description = "数据", required = true)
+    @Schema(description = "数据", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<T> list;
 
-    @Schema(description = "总量", required = true)
+    @Schema(description = "总量", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long total;
 
     public PageResult() {

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormBaseVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class BpmFormBaseVO {
 
-    @Schema(description = "表单名称", required = true, example = "芋道")
+    @Schema(description = "表单名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     @NotNull(message = "表单名称不能为空")
     private String name;
 
-    @Schema(description = "表单状态-参见 CommonStatusEnum 枚举", required = true, example = "1")
+    @Schema(description = "表单状态-参见 CommonStatusEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "表单状态不能为空")
     private Integer status;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormCreateReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @ToString(callSuper = true)
 public class BpmFormCreateReqVO extends BpmFormBaseVO {
 
-    @Schema(description = "表单的配置-JSON 字符串", required = true)
+    @Schema(description = "表单的配置-JSON 字符串", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单的配置不能为空")
     private String conf;
 
-    @Schema(description = "表单项的数组-JSON 字符串的数组", required = true)
+    @Schema(description = "表单项的数组-JSON 字符串的数组", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单项的数组不能为空")
     private List<String> fields;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class BpmFormSimpleRespVO {
 
-    @Schema(description = "表单编号", required = true, example = "1024")
+    @Schema(description = "表单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "表单名称", required = true, example = "芋道")
+    @Schema(description = "表单名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormUpdateReqVO.java
Patch:
@@ -10,15 +10,15 @@
 @ToString(callSuper = true)
 public class BpmFormUpdateReqVO extends BpmFormBaseVO {
 
-    @Schema(description = "表单编号", required = true, example = "1024")
+    @Schema(description = "表单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "表单编号不能为空")
     private Long id;
 
-    @Schema(description = "表单的配置-JSON 字符串", required = true)
+    @Schema(description = "表单的配置-JSON 字符串", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单的配置不能为空")
     private String conf;
 
-    @Schema(description = "表单项的数组-JSON 字符串的数组", required = true)
+    @Schema(description = "表单项的数组-JSON 字符串的数组", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "表单项的数组不能为空")
     private List<String> fields;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupRespVO.java
Patch:
@@ -1,20 +1,20 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.group;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 
 import java.time.LocalDateTime;
 
-
 @Schema(description = "管理后台 - 用户组 Response VO")
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)
 public class BpmUserGroupRespVO extends BpmUserGroupBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupSimpleRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @AllArgsConstructor
 public class BpmUserGroupSimpleRespVO {
 
-    @Schema(description = "用户组编号", required = true, example = "1024")
+    @Schema(description = "用户组编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "用户组名字", required = true, example = "芋道")
+    @Schema(description = "用户组名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupUpdateReqVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.group;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 import javax.validation.constraints.*;
@@ -9,7 +10,7 @@
 @ToString(callSuper = true)
 public class BpmUserGroupUpdateReqVO extends BpmUserGroupBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModeImportReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class BpmModeImportReqVO extends BpmModelCreateReqVO {
 
-    @Schema(description = "BPMN 文件", required = true)
+    @Schema(description = "BPMN 文件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "BPMN 文件不能为空")
     private MultipartFile bpmnFile;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelBaseVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class BpmModelBaseVO {
 
-    @Schema(description = "流程标识", required = true, example = "process_yudao")
+    @Schema(description = "流程标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "process_yudao")
     @NotEmpty(message = "流程标识不能为空")
     private String key;
 
-    @Schema(description = "流程名称", required = true, example = "芋道")
+    @Schema(description = "流程名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     @NotEmpty(message = "流程名称不能为空")
     private String name;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelCreateReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class BpmModelCreateReqVO {
 
-    @Schema(description = "流程标识", required = true, example = "process_yudao")
+    @Schema(description = "流程标识", requiredMode = Schema.RequiredMode.REQUIRED, example = "process_yudao")
     @NotEmpty(message = "流程标识不能为空")
     private String key;
 
-    @Schema(description = "流程名称", required = true, example = "芋道")
+    @Schema(description = "流程名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     @NotEmpty(message = "流程名称不能为空")
     private String name;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class BpmModelRespVO extends BpmModelBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private String id;
 
-    @Schema(description = "BPMN XML", required = true)
+    @Schema(description = "BPMN XML", requiredMode = Schema.RequiredMode.REQUIRED)
     private String bpmnXml;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class BpmModelUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "编号不能为空")
     private String id;
 
@@ -22,7 +22,7 @@ public class BpmModelUpdateReqVO {
     @Schema(description = "流程分类-参见 bpm_model_category 数据字典", example = "1")
     private String category;
 
-    @Schema(description = "BPMN XML", required = true)
+    @Schema(description = "BPMN XML", requiredMode = Schema.RequiredMode.REQUIRED)
     private String bpmnXml;
 
     @Schema(description = "表单类型-参见 bpm_model_form_type 数据字典", example = "1")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelUpdateStateReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class BpmModelUpdateStateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private String id;
 
-    @Schema(description = "状态-见 SuspensionState 枚举", required = true, example = "1")
+    @Schema(description = "状态-见 SuspensionState 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer state;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/process/BpmProcessDefinitionPageItemRespVO.java
Patch:
@@ -16,7 +16,7 @@ public class BpmProcessDefinitionPageItemRespVO extends BpmProcessDefinitionResp
     @Schema(description = "表单名字", example = "请假表单")
     private String formName;
 
-    @Schema(description = "部署时间", required = true)
+    @Schema(description = "部署时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime deploymentTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/rule/BpmTaskAssignRuleBaseVO.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.rule;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
-import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 import java.util.Set;
 
@@ -13,11 +13,11 @@
 @Data
 public class BpmTaskAssignRuleBaseVO {
 
-    @Schema(description = "规则类型", required = true, example = "bpm_task_assign_rule_type")
+    @Schema(description = "规则类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "bpm_task_assign_rule_type")
     @NotNull(message = "规则类型不能为空")
     private Integer type;
 
-    @Schema(description = "规则值数组", required = true, example = "1,2,3")
+    @Schema(description = "规则值数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,2,3")
     @NotNull(message = "规则值数组不能为空")
     private Set<Long> options;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/rule/BpmTaskAssignRuleCreateReqVO.java
Patch:
@@ -13,11 +13,11 @@
 @ToString(callSuper = true)
 public class BpmTaskAssignRuleCreateReqVO extends BpmTaskAssignRuleBaseVO {
 
-    @Schema(description = "流程模型的编号", required = true, example = "1024")
+    @Schema(description = "流程模型的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "流程模型的编号不能为空")
     private String modelId;
 
-    @Schema(description = "流程任务定义的编号", required = true, example = "2048")
+    @Schema(description = "流程任务定义的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotEmpty(message = "流程任务定义的编号不能为空")
     private String taskDefinitionKey;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/rule/BpmTaskAssignRuleUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class BpmTaskAssignRuleUpdateReqVO extends BpmTaskAssignRuleBaseVO {
 
-    @Schema(description = "任务分配规则的编号", required = true, example = "1024")
+    @Schema(description = "任务分配规则的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "任务分配规则的编号不能为空")
     private Long id;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/instance/BpmProcessInstanceCreateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class BpmProcessInstanceCreateReqVO {
 
-    @Schema(description = "流程定义的编号", required = true, example = "1024")
+    @Schema(description = "流程定义的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "流程定义编号不能为空")
     private String processDefinitionId;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskApproveReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class BpmTaskApproveReqVO {
 
-    @Schema(description = "任务编号", required = true, example = "1024")
+    @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "任务编号不能为空")
     private String id;
 
-    @Schema(description = "审批意见", required = true, example = "不错不错！")
+    @Schema(description = "审批意见", requiredMode = Schema.RequiredMode.REQUIRED, example = "不错不错！")
     @NotEmpty(message = "审批意见不能为空")
     private String reason;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskRejectReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class BpmTaskRejectReqVO {
 
-    @Schema(description = "任务编号", required = true, example = "1024")
+    @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "任务编号不能为空")
     private String id;
 
-    @Schema(description = "审批意见", required = true, example = "不错不错！")
+    @Schema(description = "审批意见", requiredMode = Schema.RequiredMode.REQUIRED, example = "不错不错！")
     @NotEmpty(message = "审批意见不能为空")
     private String reason;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/CodegenCreateListReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class CodegenCreateListReqVO {
 
-    @Schema(description = "数据源配置的编号", required = true, example = "1")
+    @Schema(description = "数据源配置的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数据源配置的编号不能为空")
     private Long dataSourceConfigId;
 
-    @Schema(description = "表名数组", required = true, example = "[1, 2, 3]")
+    @Schema(description = "表名数组", requiredMode = Schema.RequiredMode.REQUIRED, example = "[1, 2, 3]")
     @NotNull(message = "表名数组不能为空")
     private List<String> tableNames;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/CodegenPreviewRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class CodegenPreviewRespVO {
 
-    @Schema(description = "文件路径", required = true, example = "java/cn/iocoder/yudao/adminserver/modules/system/controller/test/SysTestDemoController.java")
+    @Schema(description = "文件路径", requiredMode = Schema.RequiredMode.REQUIRED, example = "java/cn/iocoder/yudao/adminserver/modules/system/controller/test/SysTestDemoController.java")
     private String filePath;
 
-    @Schema(description = "代码", required = true, example = "Hello World")
+    @Schema(description = "代码", requiredMode = Schema.RequiredMode.REQUIRED, example = "Hello World")
     private String code;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/CodegenUpdateReqVO.java
Patch:
@@ -33,7 +33,7 @@ public class CodegenUpdateReqVO {
     @Valid
     public static class Table extends CodegenTableBaseVO {
 
-        @Schema(description = "编号", required = true, example = "1")
+        @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
         private Long id;
 
         @AssertTrue(message = "上级菜单不能为空，请前往 [修改生成配置 -> 生成信息] 界面，设置“上级菜单”字段")
@@ -51,7 +51,7 @@ public boolean isParentMenuIdValid() {
     @ToString(callSuper = true)
     public static class Column extends CodegenColumnBaseVO {
 
-        @Schema(description = "编号", required = true, example = "1")
+        @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
         private Long id;
 
     }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/column/CodegenColumnRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class CodegenColumnRespVO extends CodegenColumnBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/table/DatabaseTableRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class DatabaseTableRespVO {
 
-    @Schema(description = "表名称", required = true, example = "yuanma")
+    @Schema(description = "表名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "yuanma")
     private String name;
 
-    @Schema(description = "表描述", required = true, example = "芋道源码")
+    @Schema(description = "表描述", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道源码")
     private String comment;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigCreateReqVO.java
Patch:
@@ -12,7 +12,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class ConfigCreateReqVO extends ConfigBaseVO {
 
-    @Schema(description = "参数键名", required = true, example = "yunai.db.username")
+    @Schema(description = "参数键名", requiredMode = Schema.RequiredMode.REQUIRED, example = "yunai.db.username")
     @NotBlank(message = "参数键名长度不能为空")
     @Size(max = 100, message = "参数键名长度不能超过100个字符")
     private String key;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ConfigUpdateReqVO extends ConfigBaseVO {
 
-    @Schema(description = "参数配置序号", required = true, example = "1024")
+    @Schema(description = "参数配置序号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "参数配置编号不能为空")
     private Long id;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigBaseVO.java
Patch:
@@ -10,15 +10,15 @@
 @Data
 public class DataSourceConfigBaseVO {
 
-    @Schema(description = "数据源名称", required = true, example = "test")
+    @Schema(description = "数据源名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "test")
     @NotNull(message = "数据源名称不能为空")
     private String name;
 
-    @Schema(description = "数据源连接", required = true, example = "jdbc:mysql://127.0.0.1:3306/ruoyi-vue-pro")
+    @Schema(description = "数据源连接", requiredMode = Schema.RequiredMode.REQUIRED, example = "jdbc:mysql://127.0.0.1:3306/ruoyi-vue-pro")
     @NotNull(message = "数据源连接不能为空")
     private String url;
 
-    @Schema(description = "用户名", required = true, example = "root")
+    @Schema(description = "用户名", requiredMode = Schema.RequiredMode.REQUIRED, example = "root")
     @NotNull(message = "用户名不能为空")
     private String username;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigCreateReqVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 import javax.validation.constraints.*;
@@ -9,7 +10,7 @@
 @ToString(callSuper = true)
 public class DataSourceConfigCreateReqVO extends DataSourceConfigBaseVO {
 
-    @Schema(description = "密码", required = true, example = "123456")
+    @Schema(description = "密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     @NotNull(message = "密码不能为空")
     private String password;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigRespVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 
@@ -10,10 +11,10 @@
 @ToString(callSuper = true)
 public class DataSourceConfigRespVO extends DataSourceConfigBaseVO {
 
-    @Schema(description = "主键编号", required = true, example = "1024")
+    @Schema(description = "主键编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigUpdateReqVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.*;
 import javax.validation.constraints.*;
@@ -9,11 +10,11 @@
 @ToString(callSuper = true)
 public class DataSourceConfigUpdateReqVO extends DataSourceConfigBaseVO {
 
-    @Schema(description = "主键编号", required = true, example = "1024")
+    @Schema(description = "主键编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "主键编号不能为空")
     private Long id;
 
-    @Schema(description = "密码", required = true, example = "123456")
+    @Schema(description = "密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     @NotNull(message = "密码不能为空")
     private String password;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigBaseVO.java
Patch:
@@ -1,4 +1,5 @@
 package cn.iocoder.yudao.module.infra.controller.admin.file.vo.config;
+
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;
 
@@ -11,7 +12,7 @@
 @Data
 public class FileConfigBaseVO {
 
-    @Schema(description = "配置名", required = true, example = "S3 - 阿里云")
+    @Schema(description = "配置名", requiredMode = Schema.RequiredMode.REQUIRED, example = "S3 - 阿里云")
     @NotNull(message = "配置名不能为空")
     private String name;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigCreateReqVO.java
Patch:
@@ -14,11 +14,11 @@
 @ToString(callSuper = true)
 public class FileConfigCreateReqVO extends FileConfigBaseVO {
 
-    @Schema(description = "存储器,参见 FileStorageEnum 枚举类参见 FileStorageEnum 枚举类", required = true, example = "1")
+    @Schema(description = "存储器,参见 FileStorageEnum 枚举类参见 FileStorageEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "存储器不能为空")
     private Integer storage;
 
-    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", required = true)
+    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "存储配置不能为空")
     private Map<String, Object> config;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigUpdateReqVO.java
Patch:
@@ -14,11 +14,11 @@
 @ToString(callSuper = true)
 public class FileConfigUpdateReqVO extends FileConfigBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", required = true)
+    @Schema(description = "存储配置,配置是动态参数，所以使用 Map 接收", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "存储配置不能为空")
     private Map<String, Object> config;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FileUploadReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class FileUploadReqVO {
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件附件不能为空")
     private MultipartFile file;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/job/JobCreateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class JobCreateReqVO extends JobBaseVO {
 
-    @Schema(description = "处理器的名字", required = true, example = "sysUserSessionTimeoutJob")
+    @Schema(description = "处理器的名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "sysUserSessionTimeoutJob")
     @NotNull(message = "处理器的名字不能为空")
     private String handlerName;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/job/JobUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class JobUpdateReqVO extends JobBaseVO {
 
-    @Schema(description = "任务编号", required = true, example = "1024")
+    @Schema(description = "任务编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "任务编号不能为空")
     private Long id;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/log/JobLogRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class JobLogRespVO extends JobLogBaseVO {
 
-    @Schema(description = "日志编号", required = true, example = "1024")
+    @Schema(description = "日志编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ApiAccessLogRespVO extends ApiAccessLogBaseVO {
 
-    @Schema(description = "日志主键", required = true, example = "1024")
+    @Schema(description = "日志主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apierrorlog/ApiErrorLogRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class ApiErrorLogRespVO extends ApiErrorLogBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
-    @Schema(description = "处理时间", required = true)
+    @Schema(description = "处理时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime processTime;
 
     @Schema(description = "处理用户编号", example = "233")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/vo/RedisKeyValueRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @AllArgsConstructor
 public class RedisKeyValueRespVO {
 
-    @Schema(description = "c5f6990767804a928f4bb96ca249febf", required = true, example = "String")
+    @Schema(description = "c5f6990767804a928f4bb96ca249febf", requiredMode = Schema.RequiredMode.REQUIRED, example = "String")
     private String key;
 
-    @Schema(required = true, example = "String")
+    @Schema(requiredMode = Schema.RequiredMode.REQUIRED, example = "String")
     private String value;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class TestDemoRespVO extends TestDemoBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class TestDemoUpdateReqVO extends TestDemoBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ProductBrandRespVO extends ProductBrandBaseVO {
 
-    @Schema(description = "品牌编号", required = true, example = "1")
+    @Schema(description = "品牌编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductBrandUpdateReqVO extends ProductBrandBaseVO {
 
-    @Schema(description = "品牌编号", required = true, example = "1")
+    @Schema(description = "品牌编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "品牌编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ProductCategoryRespVO extends ProductCategoryBaseVO {
 
-    @Schema(description = "分类编号", required = true, example = "2")
+    @Schema(description = "分类编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductCategoryUpdateReqVO extends ProductCategoryBaseVO {
 
-    @Schema(description = "分类编号", required = true, example = "2")
+    @Schema(description = "分类编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     @NotNull(message = "分类编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyBaseVO.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 public class ProductPropertyBaseVO {
 
-    @Schema(description = "名称", required = true, example = "颜色")
+    @Schema(description = "名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "颜色")
     @NotBlank(message = "名称不能为空")
     private String name;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyPageReqVO.java
Patch:
@@ -20,7 +20,7 @@ public class ProductPropertyPageReqVO extends PageParam {
     @Schema(description = "名称", example = "颜色")
     private String name;
 
-    @Schema(description = "状态", required = true, example = "1")
+    @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class ProductPropertyRespVO extends ProductPropertyBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductPropertyUpdateReqVO extends ProductPropertyBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "主键不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueBaseVO.java
Patch:
@@ -13,11 +13,11 @@
 @Data
 public class ProductPropertyValueBaseVO {
 
-    @Schema(description = "属性项的编号", required = true, example = "1024")
+    @Schema(description = "属性项的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "属性项的编号不能为空")
     private Long propertyId;
 
-    @Schema(description = "名称", required = true, example = "红色")
+    @Schema(description = "名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "红色")
     @NotEmpty(message = "名称名字不能为空")
     private String name;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValuePageReqVO.java
Patch:
@@ -18,7 +18,7 @@ public class ProductPropertyValuePageReqVO extends PageParam {
     @Schema(description = "名称", example = "红色")
     private String name;
 
-    @Schema(description = "状态", required = true, example = "1")
+    @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductPropertyValueRespVO extends ProductPropertyValueBaseVO {
 
-    @Schema(description = "编号", required = true, example = "10")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Long id;
 
     @Schema(description = "创建时间")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ProductPropertyValueUpdateReqVO extends ProductPropertyValueBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "主键不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/sku/vo/ProductSkuRespVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class ProductSkuRespVO extends ProductSkuBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "创建时间")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuUpdateReqVO.java
Patch:
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class ProductSpuUpdateReqVO extends ProductSpuBaseVO {
 
-    @Schema(description = "商品编号", required = true, example = "1")
+    @Schema(description = "商品编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "商品编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/banner/vo/BannerRespVO.java
Patch:
@@ -15,11 +15,11 @@
 @ToString(callSuper = true)
 public class BannerRespVO  extends BannerBaseVO {
 
-    @Schema(description = "banner编号", required = true)
+    @Schema(description = "banner编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "banner编号不能为空")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/banner/vo/BannerUpdateReqVO.java
Patch:
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class BannerUpdateReqVO extends BannerBaseVO {
 
-    @Schema(description = "banner 编号", required = true)
+    @Schema(description = "banner 编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "banner 编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/coupon/CouponRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class CouponRespVO extends CouponBaseVO {
 
-    @Schema(description = "优惠劵编号", required = true, example = "1024")
+    @Schema(description = "优惠劵编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/template/CouponTemplateUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class CouponTemplateUpdateReqVO extends CouponTemplateBaseVO {
 
-    @Schema(description = "模板编号", required = true, example = "1024")
+    @Schema(description = "模板编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "模板编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/coupon/vo/template/CouponTemplateUpdateStatusReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class CouponTemplateUpdateStatusReqVO {
 
-    @Schema(description = "优惠劵模板编号", required = true, example = "1024")
+    @Schema(description = "优惠劵模板编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "优惠劵模板编号不能为空")
     private Long id;
 
-    @Schema(description = "状态", required = true, example = "1")
+    @Schema(description = "状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     @InEnum(value = CommonStatusEnum.class, message = "修改状态必须是 {value}")
     private Integer status;

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/discount/vo/DiscountActivityRespVO.java
Patch:
@@ -14,14 +14,14 @@
 @ToString(callSuper = true)
 public class DiscountActivityRespVO extends DiscountActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "活动状态", required = true, example = "1")
+    @Schema(description = "活动状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "活动状态不能为空")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/discount/vo/DiscountActivityUpdateReqVO.java
Patch:
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class DiscountActivityUpdateReqVO extends DiscountActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "活动编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/reward/vo/RewardActivityRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class RewardActivityRespVO extends RewardActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Integer id;
 
-    @Schema(description = "活动状态", required = true, example = "1")
+    @Schema(description = "活动状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/reward/vo/RewardActivityUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class RewardActivityUpdateReqVO extends RewardActivityBaseVO {
 
-    @Schema(description = "活动编号", required = true, example = "1024")
+    @Schema(description = "活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "活动编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityCreateReqVO.java
Patch:
@@ -19,11 +19,11 @@ public class SeckillActivityCreateReqVO extends SeckillActivityBaseVO {
     @Schema(description = "备注", example = "限时秒杀活动")
     private String remark;
 
-    @Schema(description = "排序", required = true, example = "1")
+    @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "排序不能为空")
     private Integer sort;
 
-    @Schema(description = "秒杀时段id", required = true, example = "1,3")
+    @Schema(description = "秒杀时段id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,3")
     @NotEmpty(message = "参与场次不能为空")
     private List<Long> timeIds;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/activity/SeckillActivityUpdateReqVO.java
Patch:
@@ -16,18 +16,18 @@
 @ToString(callSuper = true)
 public class SeckillActivityUpdateReqVO extends SeckillActivityBaseVO {
 
-    @Schema(description = "秒杀活动编号", required = true, example = "224")
+    @Schema(description = "秒杀活动编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "224")
     @NotNull(message = "秒杀活动编号不能为空")
     private Long id;
 
     @Schema(description = "备注", example = "限时秒杀活动")
     private String remark;
 
-    @Schema(description = "排序", required = true, example = "1")
+    @Schema(description = "排序", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "排序不能为空")
     private Integer sort;
 
-    @Schema(description = "秒杀时段id", required = true, example = "1,3")
+    @Schema(description = "秒杀时段id", requiredMode = Schema.RequiredMode.REQUIRED, example = "1,3")
     @NotEmpty(message = "秒杀时段id不能为空")
     private List<Long> timeIds;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/time/SeckillTimeBaseVO.java
Patch:
@@ -13,15 +13,15 @@
 @Data
 public class SeckillTimeBaseVO {
 
-    @Schema(description = "秒杀时段名称", required = true, example = "上午场")
+    @Schema(description = "秒杀时段名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "上午场")
     @NotNull(message = "秒杀时段名称不能为空")
     private String name;
 
-    @Schema(description = "开始时间点", required = true, example = "16:30:40")
+    @Schema(description = "开始时间点", requiredMode = Schema.RequiredMode.REQUIRED, example = "16:30:40")
     @NotNull(message = "开始时间点不能为空")
     private LocalTime startTime;
 
-    @Schema(description = "结束时间点", required = true, example = "16:30:40")
+    @Schema(description = "结束时间点", requiredMode = Schema.RequiredMode.REQUIRED, example = "16:30:40")
     @NotNull(message = "结束时间点不能为空")
     private LocalTime endTime;
 

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/time/SeckillTimeRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class SeckillTimeRespVO extends SeckillTimeBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "秒杀活动数量", required = true, example = "1")
+    @Schema(description = "秒杀活动数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer seckillActivityCount;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-promotion-biz/src/main/java/cn/iocoder/yudao/module/promotion/controller/admin/seckill/vo/time/SeckillTimeUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class SeckillTimeUpdateReqVO extends SeckillTimeBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleDisagreeReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class TradeAfterSaleDisagreeReqVO {
 
-    @Schema(description = "售后编号", required = true, example = "1024")
+    @Schema(description = "售后编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "售后编号不能为空")
     private Long id;
 
-    @Schema(description = "审批备注", required = true, example = "你猜")
+    @Schema(description = "审批备注", requiredMode = Schema.RequiredMode.REQUIRED, example = "你猜")
     @NotEmpty(message = "审批备注不能为空")
     private String auditReason;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleRefuseReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class TradeAfterSaleRefuseReqVO {
 
-    @Schema(description = "售后编号", required = true, example = "1024")
+    @Schema(description = "售后编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "售后编号不能为空")
     private Long id;
 
-    @Schema(description = "收货备注", required = true, example = "你猜")
+    @Schema(description = "收货备注", requiredMode = Schema.RequiredMode.REQUIRED, example = "你猜")
     @NotNull(message = "收货备注不能为空")
     private String refuseMemo;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/aftersale/vo/TradeAfterSaleRespPageItemVO.java
Patch:
@@ -16,10 +16,10 @@
 @ToString(callSuper = true)
 public class TradeAfterSaleRespPageItemVO extends TradeAfterSaleBaseVO {
 
-    @Schema(description = "售后编号", required = true, example = "27630")
+    @Schema(description = "售后编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "27630")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/base/member/user/MemberUserRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MemberUserRespVO {
 
-    @Schema(description = "用户 ID", required = true, example = "1")
+    @Schema(description = "用户 ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Long id;
 
-    @Schema(description = "用户昵称", required = true, example = "芋道源码")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道源码")
     private String nickname;
 
     @Schema(description = "用户头像", example = "https://www.iocoder.cn/xxx.png")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderDeliveryReqVO.java
Patch:
@@ -10,15 +10,15 @@
 @Data
 public class TradeOrderDeliveryReqVO {
 
-    @Schema(description = "订单编号", required = true, example = "1024")
+    @Schema(description = "订单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "订单编号不能为空")
     private Long id;
 
-    @Schema(description = "发货物流公司编号", required = true, example = "1")
+    @Schema(description = "发货物流公司编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "发货物流公司编号不能为空")
     private Long logisticsId;
 
-    @Schema(description = "发货物流单号", required = true, example = "SF123456789")
+    @Schema(description = "发货物流单号", requiredMode = Schema.RequiredMode.REQUIRED, example = "SF123456789")
     @NotEmpty(message = "发货物流单号不能为空")
     private String logisticsNo;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderDetailRespVO.java
Patch:
@@ -11,7 +11,7 @@
 @Data
 public class TradeOrderDetailRespVO extends TradeOrderBaseVO {
 
-    @Schema(description = "收件人地区名字", required = true, example = "上海 上海市 普陀区")
+    @Schema(description = "收件人地区名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "上海 上海市 普陀区")
     private String receiverAreaName;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/admin/order/vo/TradeOrderPageItemRespVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class TradeOrderPageItemRespVO extends TradeOrderBaseVO {
 
-    @Schema(description = "收件人地区名字", required = true, example = "上海 上海市 普陀区")
+    @Schema(description = "收件人地区名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "上海 上海市 普陀区")
     private String receiverAreaName;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/base/sku/AppProductSkuBaseRespVO.java
Patch:
@@ -14,16 +14,16 @@
 @Data
 public class AppProductSkuBaseRespVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "商品 SKU 名字", required = true, example = "芋道")
+    @Schema(description = "商品 SKU 名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
     @Schema(description = "图片地址", example = "https://www.iocoder.cn/xx.png")
     private String picUrl;
 
-    @Schema(description = "库存", required = true, example = "1")
+    @Schema(description = "库存", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer stock;
 
     /**

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/base/spu/AppProductSpuBaseRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @Data
 public class AppProductSpuBaseRespVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "商品 SPU 名字", required = true, example = "芋道")
+    @Schema(description = "商品 SPU 名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
     @Schema(description = "商品主图地址", example = "https://www.iocoder.cn/xx.png")

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartItemAddCountReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartItemAddCountReqVO {
 
-    @Schema(description = "商品 SKU 编号", required = true,example = "1024")
+    @Schema(description = "商品 SKU 编号", requiredMode = Schema.RequiredMode.REQUIRED,example = "1024")
     @NotNull(message = "商品 SKU 编号不能为空")
     private Long skuId;
 
-    @Schema(description = "新增商品数量", required = true, example = "1")
+    @Schema(description = "新增商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数量不能为空")
     @Min(message = "数量必须大于 0", value = 1L)
     private Integer count;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartItemUpdateCountReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartItemUpdateCountReqVO {
 
-    @Schema(description = "商品 SKU 编号", required = true, example = "1024")
+    @Schema(description = "商品 SKU 编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "商品 SKU 编号不能为空")
     private Long skuId;
 
-    @Schema(description = "商品数量", required = true, example = "1")
+    @Schema(description = "商品数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数量不能为空")
     @Min(message = "数量必须大于 0", value = 1L)
     private Integer count;

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/cart/vo/AppTradeCartItemUpdateSelectedReqVO.java
Patch:
@@ -10,11 +10,11 @@
 @Data
 public class AppTradeCartItemUpdateSelectedReqVO {
 
-    @Schema(description = "商品 SKU 编号列表", required = true, example = "1024,2048")
+    @Schema(description = "商品 SKU 编号列表", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024,2048")
     @NotNull(message = "商品 SKU 编号列表不能为空")
     private Collection<Long> skuIds;
 
-    @Schema(description = "是否选中", required = true, example = "true")
+    @Schema(description = "是否选中", requiredMode = Schema.RequiredMode.REQUIRED, example = "true")
     @NotNull(message = "是否选中不能为空")
     private Boolean selected;
 

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/AppTradeOrderGetCreateInfoRespVO.java
Patch:
@@ -44,7 +44,7 @@ public static class ItemGroup {
     public static class Sku {
 
         // SKU 自带信息
-        @Schema(description = "SKU 编号", required = true, example = "1024")
+        @Schema(description = "SKU 编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
         private Integer id;
         /**
          * SPU 信息
@@ -144,7 +144,7 @@ public static class Spu {
     @AllArgsConstructor
     public static class Fee {
 
-        @Schema(description = "购买总价", required = true, example = "1024")
+        @Schema(description = "购买总价", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
         private Integer buyPrice;
         /**
          * 优惠总价

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/address/vo/AppAddressRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @ToString(callSuper = true)
 public class AppAddressRespVO extends AppAddressBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/address/vo/AppAddressUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class AppAddressUpdateReqVO extends AppAddressBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthCheckCodeReqVO.java
Patch:
@@ -27,7 +27,7 @@ public class AppAuthCheckCodeReqVO {
     @Mobile
     private String mobile;
 
-    @Schema(description = "手机验证码", required = true, example = "1024")
+    @Schema(description = "手机验证码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotBlank(message = "手机验证码不能为空")
     @Length(min = 4, max = 6, message = "手机验证码长度为 4-6 位")
     @Pattern(regexp = "^[0-9]+$", message = "手机验证码必须都是数字")

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthResetPasswordReqVO.java
Patch:
@@ -20,18 +20,18 @@
 @Builder
 public class AppAuthResetPasswordReqVO {
 
-    @Schema(description = "新密码", required = true, example = "buzhidao")
+    @Schema(description = "新密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "buzhidao")
     @NotEmpty(message = "新密码不能为空")
     @Length(min = 4, max = 16, message = "密码长度为 4-16 位")
     private String password;
 
-    @Schema(description = "手机验证码", required = true, example = "1024")
+    @Schema(description = "手机验证码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "手机验证码不能为空")
     @Length(min = 4, max = 6, message = "手机验证码长度为 4-6 位")
     @Pattern(regexp = "^[0-9]+$", message = "手机验证码必须都是数字")
     private String code;
 
-    @Schema(description = "手机号",required = true,example = "15878962356")
+    @Schema(description = "手机号",requiredMode = Schema.RequiredMode.REQUIRED,example = "15878962356")
     @NotBlank(message = "手机号不能为空")
     @Mobile
     private String mobile;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -18,16 +18,16 @@
 @Builder
 public class AppAuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "授权码", required = true, example = "1024")
+    @Schema(description = "授权码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "授权码不能为空")
     private String code;
 
-    @Schema(description = "state", required = true, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
+    @Schema(description = "state", requiredMode = Schema.RequiredMode.REQUIRED, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
     @NotEmpty(message = "state 不能为空")
     private String state;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthUpdatePasswordReqVO.java
Patch:
@@ -18,12 +18,12 @@
 @Builder
 public class AppAuthUpdatePasswordReqVO {
 
-    @Schema(description = "用户旧密码", required = true, example = "123456")
+    @Schema(description = "用户旧密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "123456")
     @NotBlank(message = "旧密码不能为空")
     @Length(min = 4, max = 16, message = "密码长度为 4-16 位")
     private String oldPassword;
 
-    @Schema(description = "新密码", required = true, example = "buzhidao")
+    @Schema(description = "新密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "buzhidao")
     @NotEmpty(message = "新密码不能为空")
     @Length(min = 4, max = 16, message = "密码长度为 4-16 位")
     private String password;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthWeixinMiniAppLoginReqVO.java
Patch:
@@ -15,11 +15,11 @@
 @Builder
 public class AppAuthWeixinMiniAppLoginReqVO {
 
-    @Schema(description = "手机 code,小程序通过 wx.getPhoneNumber 方法获得", required = true, example = "hello")
+    @Schema(description = "手机 code,小程序通过 wx.getPhoneNumber 方法获得", requiredMode = Schema.RequiredMode.REQUIRED, example = "hello")
     @NotEmpty(message = "手机 code 不能为空")
     private String phoneCode;
 
-    @Schema(description = "登录 code,小程序通过 wx.login 方法获得", required = true, example = "word")
+    @Schema(description = "登录 code,小程序通过 wx.login 方法获得", requiredMode = Schema.RequiredMode.REQUIRED, example = "word")
     @NotEmpty(message = "登录 code 不能为空")
     private String loginCode;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserBindReqVO.java
Patch:
@@ -18,16 +18,16 @@
 @Builder
 public class AppSocialUserBindReqVO {
 
-    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "授权码", required = true, example = "1024")
+    @Schema(description = "授权码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "授权码不能为空")
     private String code;
 
-    @Schema(description = "state", required = true, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
+    @Schema(description = "state", requiredMode = Schema.RequiredMode.REQUIRED, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
     @NotEmpty(message = "state 不能为空")
     private String state;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/social/vo/AppSocialUserUnbindReqVO.java
Patch:
@@ -18,12 +18,12 @@
 @Builder
 public class AppSocialUserUnbindReqVO {
 
-    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 SysUserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "社交用户的 openid", required = true, example = "IPRmJ0wvBptiPIlGEZiPewGwiEiE")
+    @Schema(description = "社交用户的 openid", requiredMode = Schema.RequiredMode.REQUIRED, example = "IPRmJ0wvBptiPIlGEZiPewGwiEiE")
     @NotEmpty(message = "社交用户的 openid 不能为空")
     private String openid;
 

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/user/vo/AppUserInfoRespVO.java
Patch:
@@ -11,12 +11,12 @@
 @AllArgsConstructor
 public class AppUserInfoRespVO {
 
-    @Schema(description = "用户昵称", required = true, example = "芋艿")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋艿")
     private String nickname;
 
-    @Schema(description = "用户头像", required = true, example = "/infra/file/get/35a12e57-4297-4faa-bf7d-7ed2f211c952")
+    @Schema(description = "用户头像", requiredMode = Schema.RequiredMode.REQUIRED, example = "/infra/file/get/35a12e57-4297-4faa-bf7d-7ed2f211c952")
     private String avatar;
 
-    @Schema(description = "用户手机号", required = true, example = "15601691300")
+    @Schema(description = "用户手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "15601691300")
     private String mobile;
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/MpAccountRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class MpAccountRespVO extends MpAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "二维码图片URL", example = "https://www.iocoder.cn/1024.png")
     private String qrCodeUrl;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/MpAccountSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MpAccountSimpleRespVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "公众号名称", required = true, example = "芋道源码")
+    @Schema(description = "公众号名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道源码")
     private String name;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/MpAccountUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpAccountUpdateReqVO extends MpAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpMaterialPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadNewsImageReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class MpMaterialUploadNewsImageReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件不能为空")
     @JsonIgnore // 避免被操作日志，进行序列化，导致报错
     private MultipartFile file;

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadPermanentReqVO.java
Patch:
@@ -15,15 +15,15 @@
 @Data
 public class MpMaterialUploadPermanentReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", required = true, example = "image")
+    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "image")
     @NotEmpty(message = "文件类型不能为空")
     private String type;
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件不能为空")
     @JsonIgnore // 避免被操作日志，进行序列化，导致报错
     private MultipartFile file;

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MpMaterialUploadRespVO {
 
-    @Schema(description = "素材的 media_id", required = true, example = "123")
+    @Schema(description = "素材的 media_id", requiredMode = Schema.RequiredMode.REQUIRED, example = "123")
     private String mediaId;
 
-    @Schema(description = "素材的 URL", required = true, example = "https://www.iocoder.cn/1.png")
+    @Schema(description = "素材的 URL", requiredMode = Schema.RequiredMode.REQUIRED, example = "https://www.iocoder.cn/1.png")
     private String url;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/material/vo/MpMaterialUploadTemporaryReqVO.java
Patch:
@@ -12,15 +12,15 @@
 @Data
 public class MpMaterialUploadTemporaryReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 
-    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", required = true, example = "image")
+    @Schema(description = "文件类型 参见 WxConsts.MediaFileType 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "image")
     @NotEmpty(message = "文件类型不能为空")
     private String type;
 
-    @Schema(description = "文件附件", required = true)
+    @Schema(description = "文件附件", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "文件不能为空")
     @JsonIgnore // 避免被操作日志，进行序列化，导致报错
     private MultipartFile file;

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/menu/vo/MpMenuSaveReqVO.java
Patch:
@@ -12,7 +12,7 @@
 @Data
 public class MpMenuSaveReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/autoreply/MpAutoReplyCreateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpAutoReplyCreateReqVO extends MpAutoReplyBaseVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/autoreply/MpAutoReplyPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpAutoReplyPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/autoreply/MpAutoReplyUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpAutoReplyUpdateReqVO extends MpAutoReplyBaseVO {
 
-    @Schema(description = "主键", required = true, example = "1024")
+    @Schema(description = "主键", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "主键不能为空")
     private Long id;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/message/vo/message/MpMessagePageReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @ToString(callSuper = true)
 public class MpMessagePageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/news/vo/MpDraftPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpDraftPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/news/vo/MpFreePublishPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpFreePublishPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsGetReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @Data
 public class MpStatisticsGetReqVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "1024")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsUpstreamMessageRespVO.java
Patch:
@@ -9,13 +9,13 @@
 @Data
 public class MpStatisticsUpstreamMessageRespVO {
 
-    @Schema(description = "日期", required = true)
+    @Schema(description = "日期", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date refDate;
 
-    @Schema(description = "上行发送了（向公众号发送了）消息的粉丝数", required = true, example = "10")
+    @Schema(description = "上行发送了（向公众号发送了）消息的粉丝数", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Integer messageUser;
 
-    @Schema(description = "上行发送了消息的消息总数", required = true, example = "20")
+    @Schema(description = "上行发送了消息的消息总数", requiredMode = Schema.RequiredMode.REQUIRED, example = "20")
     private Integer messageCount;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/statistics/vo/MpStatisticsUserCumulateRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @Data
 public class MpStatisticsUserCumulateRespVO {
 
-    @Schema(description = "日期", required = true)
+    @Schema(description = "日期", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date refDate;
 
-    @Schema(description = "累计粉丝量", required = true, example = "10")
+    @Schema(description = "累计粉丝量", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     private Integer cumulateUser;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagBaseVO.java
Patch:
@@ -14,7 +14,7 @@
 @Data
 public class MpTagBaseVO {
 
-    @Schema(description = "标签名", required = true, example = "土豆")
+    @Schema(description = "标签名", requiredMode = Schema.RequiredMode.REQUIRED, example = "土豆")
     @NotEmpty(message = "标签名不能为空")
     private String name;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagCreateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpTagCreateReqVO extends MpTagBaseVO {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpTagPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotEmpty(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class MpTagRespVO extends MpTagBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "此标签下粉丝数量", required = true, example = "0")
+    @Schema(description = "此标签下粉丝数量", requiredMode = Schema.RequiredMode.REQUIRED, example = "0")
     private Integer count;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagSimpleRespVO.java
Patch:
@@ -7,13 +7,13 @@
 @Data
 public class MpTagSimpleRespVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "公众号的标签编号", required = true, example = "2048")
+    @Schema(description = "公众号的标签编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     private Long tagId;
 
-    @Schema(description = "标签名称", required = true, example = "快乐")
+    @Schema(description = "标签名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "快乐")
     private String name;
 
 }

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/tag/vo/MpTagUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MpTagUpdateReqVO extends MpTagBaseVO {
 
-    @Schema(description = "编号", required = true)
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/user/vo/MpUserPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class MpUserPageReqVO extends PageParam {
 
-    @Schema(description = "公众号账号的编号", required = true, example = "2048")
+    @Schema(description = "公众号账号的编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2048")
     @NotNull(message = "公众号账号的编号不能为空")
     private Long accountId;
 

File: yudao-module-mp/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/user/vo/MpUserUpdateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class MpUserUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/demo/vo/PayDemoOrderCreateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @Data
 public class PayDemoOrderCreateReqVO {
 
-    @Schema(description = "商品编号", required = true, example = "17682")
+    @Schema(description = "商品编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "17682")
     @NotNull(message = "商品编号不能为空")
     private Long spuId;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class PayAppRespVO extends PayAppBaseVO {
 
-    @Schema(description = "应用编号", required = true)
+    @Schema(description = "应用编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayAppUpdateReqVO extends PayAppBaseVO {
 
-    @Schema(description = "应用编号", required = true)
+    @Schema(description = "应用编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "应用编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppUpdateStatusReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class PayAppUpdateStatusReqVO {
 
-    @Schema(description = "商户编号", required = true, example = "1024")
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "商户编号不能为空")
     private Long id;
 
-    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", required = true, example = "1")
+    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelRespVO.java
Patch:
@@ -10,12 +10,12 @@
 @ToString(callSuper = true)
 public class PayChannelRespVO extends PayChannelBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
-    @Schema(description = "配置", required = true)
+    @Schema(description = "配置", requiredMode = Schema.RequiredMode.REQUIRED)
     private String config;
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayChannelUpdateReqVO extends PayChannelBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantBaseVO.java
Patch:
@@ -11,15 +11,15 @@
 @Data
 public class PayMerchantBaseVO {
 
-    @Schema(description = "商户全称", required = true)
+    @Schema(description = "商户全称", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户全称不能为空")
     private String name;
 
-    @Schema(description = "商户简称", required = true)
+    @Schema(description = "商户简称", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户简称不能为空")
     private String shortName;
 
-    @Schema(description = "开启状态", required = true)
+    @Schema(description = "开启状态", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "开启状态不能为空")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class PayMerchantRespVO extends PayMerchantBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
-    @Schema(description = "商户号", required = true, example = "M233666999")
+    @Schema(description = "商户号", requiredMode = Schema.RequiredMode.REQUIRED, example = "M233666999")
     private String no;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayMerchantUpdateReqVO extends PayMerchantBaseVO {
 
-    @Schema(description = "商户编号", required = true)
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "商户编号不能为空")
     private Long id;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantUpdateStatusReqVO.java
Patch:
@@ -9,11 +9,11 @@
 @Data
 public class PayMerchantUpdateStatusReqVO {
 
-    @Schema(description = "商户编号", required = true, example = "1024")
+    @Schema(description = "商户编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "商户编号不能为空")
     private Long id;
 
-    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", required = true, example = "1")
+    @Schema(description = "状态,见 SysCommonStatusEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer status;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderPageItemRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class PayOrderPageItemRespVO extends PayOrderBaseVO {
 
-    @Schema(description = "支付订单编号", required = true)
+    @Schema(description = "支付订单编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
     @Schema(description = "商户名称")

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class PayOrderRespVO extends PayOrderBaseVO {
 
-    @Schema(description = "支付订单编号", required = true)
+    @Schema(description = "支付订单编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderSubmitReqVO.java
Patch:
@@ -13,11 +13,11 @@
 @Data
 public class PayOrderSubmitReqVO {
 
-    @Schema(description = "支付单编号", required = true, example = "1024")
+    @Schema(description = "支付单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "支付单编号不能为空")
     private Long id;
 
-    @Schema(description = "支付渠道", required = true, example = "wx_pub")
+    @Schema(description = "支付渠道", requiredMode = Schema.RequiredMode.REQUIRED, example = "wx_pub")
     @NotEmpty(message = "支付渠道不能为空")
     private String channelCode;
 

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderSubmitRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @Data
 public class PayOrderSubmitRespVO {
 
-    @Schema(description = "展示模式", required = true, example = "url") // 参见 PayDisplayModeEnum 枚举
+    @Schema(description = "展示模式", requiredMode = Schema.RequiredMode.REQUIRED, example = "url") // 参见 PayDisplayModeEnum 枚举
     private String displayMode;
 
-    @Schema(description = "展示内容", required = true)
+    @Schema(description = "展示内容", requiredMode = Schema.RequiredMode.REQUIRED)
     private String displayContent;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundDetailsRespVO.java
Patch:
@@ -14,7 +14,7 @@
 @ToString(callSuper = true)
 public class PayRefundDetailsRespVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付退款编号", required = true)
+    @Schema(description = "支付退款编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
     @Schema(description = "商户名称")

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundPageItemRespVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class PayRefundPageItemRespVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付订单编号", required = true)
+    @Schema(description = "支付订单编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
     @Schema(description = "商户名称")
@@ -25,7 +25,7 @@ public class PayRefundPageItemRespVO extends PayRefundBaseVO {
     @Schema(description = "渠道名称")
     private String channelCodeName;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class PayRefundRespVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付退款编号", required = true)
+    @Schema(description = "支付退款编号", requiredMode = Schema.RequiredMode.REQUIRED)
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundUpdateReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @ToString(callSuper = true)
 public class PayRefundUpdateReqVO extends PayRefundBaseVO {
 
-    @Schema(description = "支付退款编号", required = true)
+    @Schema(description = "支付退款编号", requiredMode = Schema.RequiredMode.REQUIRED)
     @NotNull(message = "支付退款编号不能为空")
     private Long id;
 

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/data/GoViewDataGetBySqlReqVO.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class GoViewDataGetBySqlReqVO {
 
-    @Schema(description = "SQL 语句", required = true, example = "SELECT * FROM user")
+    @Schema(description = "SQL 语句", requiredMode = Schema.RequiredMode.REQUIRED, example = "SELECT * FROM user")
     @NotEmpty(message = "SQL 语句不能为空")
     private String sql;
 

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/data/GoViewDataRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @Data
 public class GoViewDataRespVO {
 
-    @Schema(description = "数据维度", required = true, example = "['product', 'data1', 'data2']")
+    @Schema(description = "数据维度", requiredMode = Schema.RequiredMode.REQUIRED, example = "['product', 'data1', 'data2']")
     private List<String> dimensions;
 
-    @Schema(description = "数据明细列表", required = true)
+    @Schema(description = "数据明细列表", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<Map<String, Object>> source;
 
 }

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/project/GoViewProjectCreateReqVO.java
Patch:
@@ -8,7 +8,7 @@
 @Data
 public class GoViewProjectCreateReqVO {
 
-    @Schema(description = "项目名称", required = true, example = "王五")
+    @Schema(description = "项目名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "王五")
     @NotEmpty(message = "项目名称不能为空")
     private String name;
 

File: yudao-module-report/yudao-module-report-biz/src/main/java/cn/iocoder/yudao/module/report/controller/admin/goview/vo/project/GoViewProjectUpdateReqVO.java
Patch:
@@ -11,14 +11,14 @@
 @Data
 public class GoViewProjectUpdateReqVO {
 
-    @Schema(description = "编号", required = true, example = "18993")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "18993")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "项目名称", required = true, example = "王五")
+    @Schema(description = "项目名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "王五")
     private String name;
 
-    @Schema(description = "发布状态", required = true, example = "1")
+    @Schema(description = "发布状态", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @InEnum(value = CommonStatusEnum.class, message = "发布状态必须是 {value}")
     private Integer status;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSmsLoginReqVO.java
Patch:
@@ -16,12 +16,12 @@
 @Builder
 public class AuthSmsLoginReqVO {
 
-    @Schema(description = "手机号", required = true, example = "yudaoyuanma")
+    @Schema(description = "手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma")
     @NotEmpty(message = "手机号不能为空")
     @Mobile
     private String mobile;
 
-    @Schema(description = "短信验证码", required = true, example = "1024")
+    @Schema(description = "短信验证码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "验证码不能为空")
     private String code;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSmsSendReqVO.java
Patch:
@@ -19,12 +19,12 @@
 @Builder
 public class AuthSmsSendReqVO {
 
-    @Schema(description = "手机号", required = true, example = "yudaoyuanma")
+    @Schema(description = "手机号", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma")
     @NotEmpty(message = "手机号不能为空")
     @Mobile
     private String mobile;
 
-    @Schema(description = "短信场景", required = true, example = "1")
+    @Schema(description = "短信场景", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "发送场景不能为空")
     @InEnum(SmsSceneEnum.class)
     private Integer scene;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthSocialLoginReqVO.java
Patch:
@@ -18,16 +18,16 @@
 @Builder
 public class AuthSocialLoginReqVO {
 
-    @Schema(description = "社交平台的类型,参见 UserSocialTypeEnum 枚举值", required = true, example = "10")
+    @Schema(description = "社交平台的类型,参见 UserSocialTypeEnum 枚举值", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")
     @InEnum(SocialTypeEnum.class)
     @NotNull(message = "社交平台的类型不能为空")
     private Integer type;
 
-    @Schema(description = "授权码", required = true, example = "1024")
+    @Schema(description = "授权码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotEmpty(message = "授权码不能为空")
     private String code;
 
-    @Schema(description = "state", required = true, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
+    @Schema(description = "state", requiredMode = Schema.RequiredMode.REQUIRED, example = "9b2ffbc1-7425-4155-9894-9d5c08541d62")
     @NotEmpty(message = "state 不能为空")
     private String state;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptRespVO.java
Patch:
@@ -11,13 +11,13 @@
 @EqualsAndHashCode(callSuper = true)
 public class DeptRespVO extends DeptBaseVO {
 
-    @Schema(description = "部门编号", required = true, example = "1024")
+    @Schema(description = "部门编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", required = true, example = "1")
+    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptSimpleRespVO.java
Patch:
@@ -11,13 +11,13 @@
 @AllArgsConstructor
 public class DeptSimpleRespVO {
 
-    @Schema(description = "部门编号", required = true, example = "1024")
+    @Schema(description = "部门编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "部门名称", required = true, example = "芋道")
+    @Schema(description = "部门名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
-    @Schema(description = "父部门 ID", required = true, example = "1024")
+    @Schema(description = "父部门 ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long parentId;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DeptUpdateReqVO extends DeptBaseVO {
 
-    @Schema(description = "部门编号", required = true, example = "1024")
+    @Schema(description = "部门编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "部门编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @EqualsAndHashCode(callSuper = true)
 public class PostRespVO extends PostBaseVO {
 
-    @Schema(description = "岗位序号", required = true, example = "1024")
+    @Schema(description = "岗位序号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostSimpleRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @AllArgsConstructor
 public class PostSimpleRespVO {
 
-    @Schema(description = "岗位编号", required = true, example = "1024")
+    @Schema(description = "岗位编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "岗位名称", required = true, example = "芋道")
+    @Schema(description = "岗位名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class PostUpdateReqVO extends PostBaseVO {
 
-    @Schema(description = "岗位编号", required = true, example = "1024")
+    @Schema(description = "岗位编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "岗位编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataRespVO.java
Patch:
@@ -15,10 +15,10 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictDataRespVO extends DictDataBaseVO {
 
-    @Schema(description = "字典数据编号", required = true, example = "1024")
+    @Schema(description = "字典数据编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataSimpleRespVO.java
Patch:
@@ -7,13 +7,13 @@
 @Data
 public class DictDataSimpleRespVO {
 
-    @Schema(description = "字典类型", required = true, example = "gender")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "gender")
     private String dictType;
 
-    @Schema(description = "字典键值", required = true, example = "1")
+    @Schema(description = "字典键值", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private String value;
 
-    @Schema(description = "字典标签", required = true, example = "男")
+    @Schema(description = "字典标签", requiredMode = Schema.RequiredMode.REQUIRED, example = "男")
     private String label;
 
     @Schema(description = "颜色类型,default、primary、success、info、warning、danger", example = "default")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictDataUpdateReqVO extends DictDataBaseVO {
 
-    @Schema(description = "字典数据编号", required = true, example = "1024")
+    @Schema(description = "字典数据编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "字典数据编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeBaseVO.java
Patch:
@@ -14,12 +14,12 @@
 @Data
 public class DictTypeBaseVO {
 
-    @Schema(description = "字典名称", required = true, example = "性别")
+    @Schema(description = "字典名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "性别")
     @NotBlank(message = "字典名称不能为空")
     @Size(max = 100, message = "字典类型名称长度不能超过100个字符")
     private String name;
 
-    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", required = true, example = "1")
+    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "状态不能为空")
     private Integer status;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeCreateReqVO.java
Patch:
@@ -12,7 +12,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictTypeCreateReqVO extends DictTypeBaseVO {
 
-    @Schema(description = "字典类型", required = true, example = "sys_common_sex")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "sys_common_sex")
     @NotNull(message = "字典类型不能为空")
     @Size(max = 100, message = "字典类型类型长度不能超过100个字符")
     private String type;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeRespVO.java
Patch:
@@ -15,13 +15,13 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictTypeRespVO extends DictTypeBaseVO {
 
-    @Schema(description = "字典类型编号", required = true, example = "1024")
+    @Schema(description = "字典类型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "字典类型", required = true, example = "sys_common_sex")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "sys_common_sex")
     private String type;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeSimpleRespVO.java
Patch:
@@ -11,13 +11,13 @@
 @AllArgsConstructor
 public class DictTypeSimpleRespVO {
 
-    @Schema(description = "字典类型编号", required = true, example = "1024")
+    @Schema(description = "字典类型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "字典类型名称", required = true, example = "芋道")
+    @Schema(description = "字典类型名称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋道")
     private String name;
 
-    @Schema(description = "字典类型", required = true, example = "sys_common_sex")
+    @Schema(description = "字典类型", requiredMode = Schema.RequiredMode.REQUIRED, example = "sys_common_sex")
     private String type;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class DictTypeUpdateReqVO extends DictTypeBaseVO {
 
-    @Schema(description = "字典类型编号", required = true, example = "1024")
+    @Schema(description = "字典类型编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "字典类型编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeBaseVO.java
Patch:
@@ -12,15 +12,15 @@
 @Data
 public class ErrorCodeBaseVO {
 
-    @Schema(description = "应用名", required = true, example = "dashboard")
+    @Schema(description = "应用名", requiredMode = Schema.RequiredMode.REQUIRED, example = "dashboard")
     @NotNull(message = "应用名不能为空")
     private String applicationName;
 
-    @Schema(description = "错误码编码", required = true, example = "1234")
+    @Schema(description = "错误码编码", requiredMode = Schema.RequiredMode.REQUIRED, example = "1234")
     @NotNull(message = "错误码编码不能为空")
     private Integer code;
 
-    @Schema(description = "错误码错误提示", required = true, example = "帅气")
+    @Schema(description = "错误码错误提示", requiredMode = Schema.RequiredMode.REQUIRED, example = "帅气")
     @NotNull(message = "错误码错误提示不能为空")
     private String message;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeRespVO.java
Patch:
@@ -13,13 +13,13 @@
 @ToString(callSuper = true)
 public class ErrorCodeRespVO extends ErrorCodeBaseVO {
 
-    @Schema(description = "错误码编号", required = true, example = "1024")
+    @Schema(description = "错误码编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "错误码类型,参见 ErrorCodeTypeEnum 枚举类", required = true, example = "1")
+    @Schema(description = "错误码类型,参见 ErrorCodeTypeEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer type;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class ErrorCodeUpdateReqVO extends ErrorCodeBaseVO {
 
-    @Schema(description = "错误码编号", required = true, example = "1024")
+    @Schema(description = "错误码编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "错误码编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/ip/vo/AreaNodeRespVO.java
Patch:
@@ -9,10 +9,10 @@
 @Data
 public class AreaNodeRespVO {
 
-    @Schema(description = "编号", required = true, example = "110000")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "110000")
     private Integer id;
 
-    @Schema(description = "名字", required = true, example = "北京")
+    @Schema(description = "名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "北京")
     private String name;
 
     /**

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/loginlog/LoginLogRespVO.java
Patch:
@@ -14,17 +14,17 @@
 @ToString(callSuper = true)
 public class LoginLogRespVO extends LoginLogBaseVO {
 
-    @Schema(description = "日志编号", required = true, example = "1024")
+    @Schema(description = "日志编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "用户编号", example = "666")
     private Long userId;
 
-    @Schema(description = "用户类型,参见 UserTypeEnum 枚举", required = true, example = "2")
+    @Schema(description = "用户类型,参见 UserTypeEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     @NotNull(message = "用户类型不能为空")
     private Integer userType;
 
-    @Schema(description = "登录时间", required = true)
+    @Schema(description = "登录时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/operatelog/OperateLogRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @ToString(callSuper = true)
 public class OperateLogRespVO extends OperateLogBaseVO {
 
-    @Schema(description = "日志编号", required = true, example = "1024")
+    @Schema(description = "日志编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "用户昵称", required = true, example = "芋艿")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋艿")
     private String userNickname;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountPageReqVO.java
Patch:
@@ -12,10 +12,10 @@
 @ToString(callSuper = true)
 public class MailAccountPageReqVO extends PageParam {
 
-    @Schema(description = "邮箱", required = true, example = "yudaoyuanma@123.com")
+    @Schema(description = "邮箱", requiredMode = Schema.RequiredMode.REQUIRED, example = "yudaoyuanma@123.com")
     private String mail;
 
-    @Schema(description = "用户名" , required = true , example = "yudao")
+    @Schema(description = "用户名" , requiredMode = Schema.RequiredMode.REQUIRED , example = "yudao")
     private String username;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountRespVO.java
Patch:
@@ -14,11 +14,11 @@
 @ToString(callSuper = true)
 public class MailAccountRespVO extends MailAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MailAccountSimpleRespVO {
 
-    @Schema(description = "邮箱编号", required = true, example = "1024")
+    @Schema(description = "邮箱编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "邮箱", required = true, example = "768541388@qq.com")
+    @Schema(description = "邮箱", requiredMode = Schema.RequiredMode.REQUIRED, example = "768541388@qq.com")
     private String mail;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MailAccountUpdateReqVO extends MailAccountBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/log/MailLogRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class MailLogRespVO extends MailLogBaseVO {
 
-    @Schema(description = "编号", required = true, example = "31020")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "31020")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateRespVO.java
Patch:
@@ -14,13 +14,13 @@
 @ToString(callSuper = true)
 public class MailTemplateRespVO extends MailTemplateBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "参数数组", example = "name,code")
     private List<String> params;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateSendReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class MailTemplateSendReqVO {
 
-    @Schema(description = "接收邮箱", required = true, example = "7685413@qq.com")
+    @Schema(description = "接收邮箱", requiredMode = Schema.RequiredMode.REQUIRED, example = "7685413@qq.com")
     @NotEmpty(message = "接收邮箱不能为空")
     private String mail;
 
-    @Schema(description = "模板编码", required = true, example = "test_01")
+    @Schema(description = "模板编码", requiredMode = Schema.RequiredMode.REQUIRED, example = "test_01")
     @NotNull(message = "模板编码不能为空")
     private String templateCode;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateSimpleRespVO.java
Patch:
@@ -7,10 +7,10 @@
 @Data
 public class MailTemplateSimpleRespVO {
 
-    @Schema(description = "模版编号", required = true, example = "1024")
+    @Schema(description = "模版编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "模版名字", required = true, example = "哒哒哒")
+    @Schema(description = "模版名字", requiredMode = Schema.RequiredMode.REQUIRED, example = "哒哒哒")
     private String name;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/template/MailTemplateUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class MailTemplateUpdateReqVO extends MailTemplateBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notice/vo/NoticeRespVO.java
Patch:
@@ -11,10 +11,10 @@
 @EqualsAndHashCode(callSuper = true)
 public class NoticeRespVO extends NoticeBaseVO {
 
-    @Schema(description = "通知公告序号", required = true, example = "1024")
+    @Schema(description = "通知公告序号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notice/vo/NoticeUpdateReqVO.java
Patch:
@@ -11,7 +11,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class NoticeUpdateReqVO extends NoticeBaseVO {
 
-    @Schema(description = "岗位公告编号", required = true, example = "1024")
+    @Schema(description = "岗位公告编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "岗位公告编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/message/NotifyMessageRespVO.java
Patch:
@@ -10,10 +10,10 @@
 @ToString(callSuper = true)
 public class NotifyMessageRespVO extends NotifyMessageBaseVO {
 
-    @Schema(description = "ID", required = true, example = "1024")
+    @Schema(description = "ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateRespVO.java
Patch:
@@ -10,13 +10,13 @@
 @ToString(callSuper = true)
 public class NotifyTemplateRespVO extends NotifyTemplateBaseVO {
 
-    @Schema(description = "ID", required = true, example = "1024")
+    @Schema(description = "ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
     @Schema(description = "参数数组", example = "name,code")
     private List<String> params;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private Date createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateSendReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class NotifyTemplateSendReqVO {
 
-    @Schema(description = "用户id", required = true, example = "01")
+    @Schema(description = "用户id", requiredMode = Schema.RequiredMode.REQUIRED, example = "01")
     @NotNull(message = "用户id不能为空")
     private Long userId;
 
-    @Schema(description = "模板编码", required = true, example = "01")
+    @Schema(description = "模板编码", requiredMode = Schema.RequiredMode.REQUIRED, example = "01")
     @NotEmpty(message = "模板编码不能为空")
     private String templateCode;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateUpdateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @ToString(callSuper = true)
 public class NotifyTemplateUpdateReqVO extends NotifyTemplateBaseVO {
 
-    @Schema(description = "ID", required = true, example = "1024")
+    @Schema(description = "ID", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "ID 不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/client/OAuth2ClientRespVO.java
Patch:
@@ -13,10 +13,10 @@
 @ToString(callSuper = true)
 public class OAuth2ClientRespVO extends OAuth2ClientBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "创建时间", required = true)
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED)
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/client/OAuth2ClientUpdateReqVO.java
Patch:
@@ -13,7 +13,7 @@
 @ToString(callSuper = true)
 public class OAuth2ClientUpdateReqVO extends OAuth2ClientBaseVO {
 
-    @Schema(description = "编号", required = true, example = "1024")
+    @Schema(description = "编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/open/OAuth2OpenAuthorizeInfoRespVO.java
Patch:
@@ -19,18 +19,18 @@ public class OAuth2OpenAuthorizeInfoRespVO {
      */
     private Client client;
 
-    @Schema(description = "scope 的选中信息,使用 List 保证有序性，Key 是 scope，Value 为是否选中", required = true)
+    @Schema(description = "scope 的选中信息,使用 List 保证有序性，Key 是 scope，Value 为是否选中", requiredMode = Schema.RequiredMode.REQUIRED)
     private List<KeyValue<String, Boolean>> scopes;
 
     @Data
     @NoArgsConstructor
     @AllArgsConstructor
     public static class Client {
 
-        @Schema(description = "应用名", required = true, example = "土豆")
+        @Schema(description = "应用名", requiredMode = Schema.RequiredMode.REQUIRED, example = "土豆")
         private String name;
 
-        @Schema(description = "应用图标", required = true, example = "https://www.iocoder.cn/xx.png")
+        @Schema(description = "应用图标", requiredMode = Schema.RequiredMode.REQUIRED, example = "https://www.iocoder.cn/xx.png")
         private String logo;
 
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/token/OAuth2AccessTokenPageReqVO.java
Patch:
@@ -10,13 +10,13 @@
 @EqualsAndHashCode(callSuper = true)
 public class OAuth2AccessTokenPageReqVO extends PageParam {
 
-    @Schema(description = "用户编号", required = true, example = "666")
+    @Schema(description = "用户编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "666")
     private Long userId;
 
-    @Schema(description = "用户类型,参见 UserTypeEnum 枚举", required = true, example = "2")
+    @Schema(description = "用户类型,参见 UserTypeEnum 枚举", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     private Integer userType;
 
-    @Schema(description = "客户端编号", required = true, example = "2")
+    @Schema(description = "客户端编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "2")
     private String clientId;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/user/OAuth2UserUpdateReqVO.java
Patch:
@@ -15,7 +15,7 @@
 @AllArgsConstructor
 public class OAuth2UserUpdateReqVO {
 
-    @Schema(description = "用户昵称", required = true, example = "芋艿")
+    @Schema(description = "用户昵称", requiredMode = Schema.RequiredMode.REQUIRED, example = "芋艿")
     @Size(max = 30, message = "用户昵称长度不能超过 30 个字符")
     private String nickname;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuRespVO.java
Patch:
@@ -15,13 +15,13 @@
 @EqualsAndHashCode(callSuper = true)
 public class MenuRespVO extends MenuBaseVO {
 
-    @Schema(description = "菜单编号", required = true, example = "1024")
+    @Schema(description = "菜单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     private Long id;
 
-    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", required = true, example = "1")
+    @Schema(description = "状态,参见 CommonStatusEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     private Integer status;
 
-    @Schema(description = "创建时间", required = true, example = "时间戳格式")
+    @Schema(description = "创建时间", requiredMode = Schema.RequiredMode.REQUIRED, example = "时间戳格式")
     private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuUpdateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 @EqualsAndHashCode(callSuper = true)
 public class MenuUpdateReqVO extends MenuBaseVO {
 
-    @Schema(description = "菜单编号", required = true, example = "1024")
+    @Schema(description = "菜单编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1024")
     @NotNull(message = "菜单编号不能为空")
     private Long id;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/permission/PermissionAssignRoleDataScopeReqVO.java
Patch:
@@ -11,11 +11,11 @@
 @Data
 public class PermissionAssignRoleDataScopeReqVO {
 
-    @Schema(description = "角色编号", required = true, example = "1")
+    @Schema(description = "角色编号", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "角色编号不能为空")
     private Long roleId;
 
-    @Schema(description = "数据范围,参见 DataScopeEnum 枚举类", required = true, example = "1")
+    @Schema(description = "数据范围,参见 DataScopeEnum 枚举类", requiredMode = Schema.RequiredMode.REQUIRED, example = "1")
     @NotNull(message = "数据范围不能为空")
 //    TODO 这里要多一个枚举校验
     private Integer dataScope;

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/api/spu/dto/ProductSpuRespDTO.java
Patch:
@@ -1,7 +1,6 @@
 package cn.iocoder.yudao.module.product.api.spu.dto;
 
 import cn.iocoder.yudao.module.product.api.sku.dto.ProductSkuRespDTO;
-import cn.iocoder.yudao.module.product.enums.spu.ProductSpuSpecTypeEnum;
 import cn.iocoder.yudao.module.product.enums.spu.ProductSpuStatusEnum;
 import lombok.Data;
 
@@ -76,8 +75,6 @@ public class ProductSpuRespDTO {
 
     /**
      * 规格类型
-     * <p>
-     * 枚举 {@link ProductSpuSpecTypeEnum}
      */
     private Boolean specType;
     /**

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuBaseVO.java
Patch:
@@ -1,7 +1,6 @@
 package cn.iocoder.yudao.module.product.controller.admin.spu.vo;
 
 import cn.iocoder.yudao.framework.common.validation.InEnum;
-import cn.iocoder.yudao.module.product.enums.spu.ProductSpuSpecTypeEnum;
 import cn.iocoder.yudao.module.product.enums.spu.ProductSpuStatusEnum;
 import io.swagger.v3.oas.annotations.media.Schema;
 import lombok.Data;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/spu/ProductSpuDO.java
Patch:
@@ -5,7 +5,6 @@
 import cn.iocoder.yudao.module.product.dal.dataobject.category.ProductCategoryDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.delivery.DeliveryTemplateDO;
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
-import cn.iocoder.yudao.module.product.enums.spu.ProductSpuSpecTypeEnum;
 import cn.iocoder.yudao.module.product.enums.spu.ProductSpuStatusEnum;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/sku/ProductSkuServiceImpl.java
Patch:
@@ -11,7 +11,6 @@
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
 import cn.iocoder.yudao.module.product.dal.mysql.sku.ProductSkuMapper;
 import cn.iocoder.yudao.module.product.enums.ErrorCodeConstants;
-import cn.iocoder.yudao.module.product.enums.spu.ProductSpuSpecTypeEnum;
 import cn.iocoder.yudao.module.product.service.property.ProductPropertyService;
 import cn.iocoder.yudao.module.product.service.property.ProductPropertyValueService;
 import cn.iocoder.yudao.module.product.service.spu.ProductSpuService;
@@ -81,7 +80,7 @@ public List<ProductSkuDO> getSkuList(Collection<Long> ids) {
     @Override
     public void validateSkuList(List<ProductSkuCreateOrUpdateReqVO> skus, Boolean specType) {
         // 非多规格，不需要校验
-        if (ObjectUtil.notEqual(specType, ProductSpuSpecTypeEnum.DISABLE.getType())) {
+        if (ObjectUtil.notEqual(specType, true)) {
             return;
         }
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/service/category/ProductCategoryServiceImpl.java
Patch:
@@ -100,7 +100,7 @@ public void validateCategory(Long id) {
         if (category == null) {
             throw exception(CATEGORY_NOT_EXISTS);
         }
-        if (Objects.equals(category.getStatus(), CommonStatusEnum.ENABLE.getStatus())) {
+        if (Objects.equals(category.getStatus(), CommonStatusEnum.DISABLE.getStatus())) {
             throw exception(CATEGORY_DISABLED, category.getName());
         }
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sensitiveword/vo/SensitiveWordExcelVO.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.iocoder.yudao.framework.excel.core.annotations.DictFormat;
 import cn.iocoder.yudao.framework.excel.core.convert.DictConvert;
+import cn.iocoder.yudao.framework.excel.core.convert.JsonConvert;
 import cn.iocoder.yudao.module.system.enums.DictTypeConstants;
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
@@ -23,7 +24,7 @@ public class SensitiveWordExcelVO {
     @ExcelProperty("敏感词")
     private String name;
 
-    @ExcelProperty("标签")
+    @ExcelProperty(value = "标签", converter = JsonConvert.class)
     private List<String> tags;
 
     @ExcelProperty(value = "状态", converter = DictConvert.class)

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/dict/DictDataDO.java
Patch:
@@ -2,9 +2,7 @@
 
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
-import com.baomidou.mybatisplus.annotation.KeySequence;
-import com.baomidou.mybatisplus.annotation.TableId;
-import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.*;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
@@ -57,6 +55,7 @@ public class DictDataDO extends BaseDO {
     /**
      * css 样式
      */
+    @TableField(updateStrategy = FieldStrategy.IGNORED)
     private String cssClass;
     /**
      * 备注

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/security/TenantSecurityWebFilter.java
Patch:
@@ -78,8 +78,8 @@ protected void doFilterInternal(HttpServletRequest request, HttpServletResponse
             // 2. 如果请求未带租户的编号，不允许访问。
             if (tenantId == null) {
                 log.error("[doFilterInternal][URL({}/{}) 未传递租户编号]", request.getRequestURI(), request.getMethod());
-                ServletUtils.writeJSON(response, CommonResult.error(GlobalErrorCodeConstants.BAD_REQUEST.getCode(),
-                        "租户的请求未传递，请进行排查"));
+                String msg = "请求的租户标识未传递，请进行排查";
+                ServletUtils.writeJSON(response, CommonResult.error(GlobalErrorCodeConstants.BAD_REQUEST.getCode(), msg));
                 return;
             }
             // 3. 校验租户是合法，例如说被禁用、到期

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/table/CodegenTablePageReqVO.java
Patch:
@@ -23,6 +23,9 @@ public class CodegenTablePageReqVO extends PageParam {
     @Schema(description = "表描述,模糊匹配", example = "芋道")
     private String tableComment;
 
+    @Schema(description = "实体,模糊匹配", example = "Yudao")
+    private String className;
+
     @Schema(description = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     private LocalDateTime[] createTime;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigBaseVO.java
Patch:
@@ -29,8 +29,8 @@ public class ConfigBaseVO {
     @Size(max = 500, message = "参数键值长度不能超过500个字符")
     private String value;
 
-    @Schema(description = "是否敏感", required = true, example = "true")
-    @NotNull(message = "是否敏感不能为空")
+    @Schema(description = "是否可见", required = true, example = "true")
+    @NotNull(message = "是否可见不能为空")
     private Boolean visible;
 
     @Schema(description = "备注", example = "备注一下很帅气！")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/codegen/CodegenTableMapper.java
Patch:
@@ -21,6 +21,7 @@ default PageResult<CodegenTableDO> selectPage(CodegenTablePageReqVO pageReqVO) {
         return selectPage(pageReqVO, new LambdaQueryWrapperX<CodegenTableDO>()
                 .likeIfPresent(CodegenTableDO::getTableName, pageReqVO.getTableName())
                 .likeIfPresent(CodegenTableDO::getTableComment, pageReqVO.getTableComment())
+                .likeIfPresent(CodegenTableDO::getClassName, pageReqVO.getClassName())
                 .betweenIfPresent(CodegenTableDO::getCreateTime, pageReqVO.getCreateTime()));
     }
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -103,6 +103,7 @@ public interface ErrorCodeConstants {
     ErrorCode TENANT_DISABLE = new ErrorCode(1002015001, "名字为【{}】的租户已被禁用");
     ErrorCode TENANT_EXPIRE = new ErrorCode(1002015002, "名字为【{}】的租户已过期");
     ErrorCode TENANT_CAN_NOT_UPDATE_SYSTEM = new ErrorCode(1002015003, "系统租户不能进行修改、删除等操作！");
+    ErrorCode TENANT_NAME_DUPLICATE = new ErrorCode(1002015004, "已经存在该名称的租户");
 
     // ========== 租户套餐 1002016000 ==========
     ErrorCode TENANT_PACKAGE_NOT_EXISTS = new ErrorCode(1002016000, "租户套餐不存在");

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/xss/core/filter/XssRequestWrapper.java
Patch:
@@ -64,7 +64,7 @@ public String getParameter(String name) {
     public Object getAttribute(String name) {
         Object value = super.getAttribute(name);
         if (value instanceof String) {
-            xssCleaner.clean((String) value);
+            return xssCleaner.clean((String) value);
         }
         return value;
     }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -135,6 +135,8 @@ default List<BpmTaskRespVO> convertList3(List<HistoricTaskInstance> tasks,
     }
 
     @Mapping(source = "taskDefinitionKey", target = "definitionKey")
+    @Mapping(target = "createTime", expression = "java(bean.getCreateTime() == null ? null : LocalDateTime.ofInstant(bean.getCreateTime().toInstant(), ZoneId.systemDefault()))")
+    @Mapping(target = "endTime", expression = "java(bean.getEndTime() == null ? null : LocalDateTime.ofInstant(bean.getEndTime().toInstant(), ZoneId.systemDefault()))")
     BpmTaskRespVO convert3(HistoricTaskInstance bean);
 
     BpmTaskRespVO.User convert3(AdminUserRespDTO bean);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/sms/SmsCodeDO.java
Patch:
@@ -26,7 +26,7 @@ public class SmsCodeDO extends BaseDO {
     /**
      * 编号
      */
-    private Integer id;
+    private Long id;
     /**
      * 手机号
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/sms/SmsCodeDO.java
Patch:
@@ -26,7 +26,7 @@ public class SmsCodeDO extends BaseDO {
     /**
      * 编号
      */
-    private Integer id;
+    private Long id;
     /**
      * 手机号
      */

File: yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImplTest.java
Patch:
@@ -16,7 +16,6 @@
 import cn.iocoder.yudao.module.system.dal.dataobject.dept.UserPostDO;
 import cn.iocoder.yudao.module.system.dal.dataobject.tenant.TenantDO;
 import cn.iocoder.yudao.module.system.dal.dataobject.user.AdminUserDO;
-import cn.iocoder.yudao.module.system.dal.mysql.dept.DeptMapper;
 import cn.iocoder.yudao.module.system.dal.mysql.dept.UserPostMapper;
 import cn.iocoder.yudao.module.system.dal.mysql.user.AdminUserMapper;
 import cn.iocoder.yudao.module.system.enums.common.SexEnum;
@@ -64,8 +63,6 @@ public class AdminUserServiceImplTest extends BaseDbUnitTest {
     private AdminUserMapper userMapper;
     @Resource
     private UserPostMapper userPostMapper;
-    @Resource
-    private DeptMapper deptMapper;
 
     @MockBean
     private DeptService deptService;

File: yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImplTest.java
Patch:
@@ -24,7 +24,6 @@
 import cn.iocoder.yudao.module.system.service.dept.PostService;
 import cn.iocoder.yudao.module.system.service.permission.PermissionService;
 import cn.iocoder.yudao.module.system.service.tenant.TenantService;
-import com.github.yulichang.wrapper.MPJLambdaWrapper;
 import org.junit.jupiter.api.Test;
 import org.mockito.stubbing.Answer;
 import org.springframework.boot.test.mock.mockito.MockBean;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -135,6 +135,8 @@ default List<BpmTaskRespVO> convertList3(List<HistoricTaskInstance> tasks,
     }
 
     @Mapping(source = "taskDefinitionKey", target = "definitionKey")
+    @Mapping(target = "createTime", expression = "java(bean.getCreateTime() == null ? null : LocalDateTime.ofInstant(bean.getCreateTime().toInstant(), ZoneId.systemDefault()))")
+    @Mapping(target = "endTime", expression = "java(bean.getEndTime() == null ? null : LocalDateTime.ofInstant(bean.getEndTime().toInstant(), ZoneId.systemDefault()))")
     BpmTaskRespVO convert3(HistoricTaskInstance bean);
 
     BpmTaskRespVO.User convert3(AdminUserRespDTO bean);

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/swagger/config/YudaoSwaggerAutoConfiguration.java
Patch:
@@ -52,8 +52,7 @@ public OpenAPI createApi(SwaggerProperties properties) {
                 // 接口信息
                 .info(buildInfo(properties))
                 // 接口安全配置
-                .components(new Components().securitySchemes(securitySchemas))
-                .addSecurityItem(new SecurityRequirement().addList(HttpHeaders.AUTHORIZATION));
+                .components(new Components().securitySchemes(securitySchemas));
         securitySchemas.keySet().forEach(key -> openAPI.addSecurityItem(new SecurityRequirement().addList(key)));
         return openAPI;
     }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/swagger/config/YudaoSwaggerAutoConfiguration.java
Patch:
@@ -52,8 +52,7 @@ public OpenAPI createApi(SwaggerProperties properties) {
                 // 接口信息
                 .info(buildInfo(properties))
                 // 接口安全配置
-                .components(new Components().securitySchemes(securitySchemas))
-                .addSecurityItem(new SecurityRequirement().addList(HttpHeaders.AUTHORIZATION));
+                .components(new Components().securitySchemes(securitySchemas));
         securitySchemas.keySet().forEach(key -> openAPI.addSecurityItem(new SecurityRequirement().addList(key)));
         return openAPI;
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/dept/UserPostMapper.java
Patch:
@@ -28,7 +28,7 @@ default List<UserPostDO> selectListByPostIds(Collection<Long> postIds) {
                 .in(UserPostDO::getPostId, postIds));
     }
 
-    default void deleteByUserId(Long userId){
+    default void deleteByUserId(Long userId) {
         delete(Wrappers.lambdaUpdate(UserPostDO.class).eq(UserPostDO::getUserId, userId));
     }
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/errorcode/ErrorCodeMapper.java
Patch:
@@ -36,11 +36,11 @@ default List<ErrorCodeDO> selectList(ErrorCodeExportReqVO reqVO) {
     }
 
     default List<ErrorCodeDO> selectListByCodes(Collection<Integer> codes) {
-        return selectList(new LambdaQueryWrapperX<ErrorCodeDO>().in(ErrorCodeDO::getCode, codes));
+        return selectList(ErrorCodeDO::getCode, codes);
     }
 
     default ErrorCodeDO selectByCode(Integer code) {
-        return selectOne(new LambdaQueryWrapperX<ErrorCodeDO>().eq(ErrorCodeDO::getCode, code));
+        return selectOne(ErrorCodeDO::getCode, code);
     }
 
     default List<ErrorCodeDO> selectListByApplicationNameAndUpdateTimeGt(String applicationName, LocalDateTime minUpdateTime) {

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/errorcode/ErrorCodeServiceImpl.java
Patch:
@@ -58,7 +58,7 @@ public Long createErrorCode(ErrorCodeCreateReqVO createReqVO) {
     @Override
     public void updateErrorCode(ErrorCodeUpdateReqVO updateReqVO) {
         // 校验存在
-        this.validateErrorCodeExists(updateReqVO.getId());
+        validateErrorCodeExists(updateReqVO.getId());
         // 校验 code 重复
         validateCodeDuplicate(updateReqVO.getCode(), updateReqVO.getId());
 
@@ -71,7 +71,7 @@ public void updateErrorCode(ErrorCodeUpdateReqVO updateReqVO) {
     @Override
     public void deleteErrorCode(Long id) {
         // 校验存在
-        this.validateErrorCodeExists(id);
+        validateErrorCodeExists(id);
         // 删除
         errorCodeMapper.deleteById(id);
     }
@@ -100,7 +100,7 @@ public void validateCodeDuplicate(Integer code, Long id) {
     }
 
     @VisibleForTesting
-    public void validateErrorCodeExists(Long id) {
+    void validateErrorCodeExists(Long id) {
         if (errorCodeMapper.selectById(id) == null) {
             throw exception(ERROR_CODE_NOT_EXISTS);
         }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/package-info.java
Patch:
@@ -1 +1,4 @@
+/**
+ * Web 框架，全局异常、API 日志等
+ */
 package cn.iocoder.yudao.framework;

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/DefaultDatabaseQueryTest.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.module.infra.service;
 
 import cn.hutool.core.util.StrUtil;
+import com.baomidou.mybatisplus.generator.query.DefaultQuery;
 import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
 import com.baomidou.mybatisplus.generator.config.builder.ConfigBuilder;
 import com.baomidou.mybatisplus.generator.config.po.TableInfo;
-import com.baomidou.mybatisplus.generator.query.DefaultQuery;
 
 import java.util.List;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/codegen/CodegenColumnDO.java
Patch:
@@ -6,6 +6,7 @@
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.generator.config.po.TableField;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
@@ -42,6 +43,7 @@ public class CodegenColumnDO extends BaseDO {
     private String columnName;
     /**
      * 字段类型
+     * 关联 {@link TableField#getColumnType()}}
      */
     private String dataType;
     /**

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/DefaultDatabaseQueryTest.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.infra.service;
 
 import cn.hutool.core.util.StrUtil;
-import com.baomidou.mybatisplus.generator.IDatabaseQuery.DefaultDatabaseQuery;
+import com.baomidou.mybatisplus.generator.query.DefaultQuery;
 import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
 import com.baomidou.mybatisplus.generator.config.builder.ConfigBuilder;
 import com.baomidou.mybatisplus.generator.config.po.TableInfo;
@@ -19,7 +19,7 @@ public static void main(String[] args) {
 
         ConfigBuilder builder = new ConfigBuilder(null, dataSourceConfig, null, null, null, null);
 
-        DefaultDatabaseQuery query = new DefaultDatabaseQuery(builder);
+        DefaultQuery query = new DefaultQuery(builder);
 
         long time = System.currentTimeMillis();
         List<TableInfo> tableInfos = query.queryTables();

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/core/clean/XssCleaner.java
Patch:
@@ -4,6 +4,7 @@
  * 对 html 文本中的有 Xss 风险的数据进行清理
  */
 public interface XssCleaner {
+
     /**
      * 清理有 Xss 风险的文本
      *

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/DefaultDatabaseQueryTest.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.infra.service;
 
 import cn.hutool.core.util.StrUtil;
-import com.baomidou.mybatisplus.generator.IDatabaseQuery.DefaultDatabaseQuery;
+import com.baomidou.mybatisplus.generator.query.DefaultQuery;
 import com.baomidou.mybatisplus.generator.config.DataSourceConfig;
 import com.baomidou.mybatisplus.generator.config.builder.ConfigBuilder;
 import com.baomidou.mybatisplus.generator.config.po.TableInfo;
@@ -19,7 +19,7 @@ public static void main(String[] args) {
 
         ConfigBuilder builder = new ConfigBuilder(null, dataSourceConfig, null, null, null, null);
 
-        DefaultDatabaseQuery query = new DefaultDatabaseQuery(builder);
+        DefaultQuery query = new DefaultQuery(builder);
 
         long time = System.currentTimeMillis();
         List<TableInfo> tableInfos = query.queryTables();

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/codegen/CodegenColumnDO.java
Patch:
@@ -6,6 +6,7 @@
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.generator.config.po.TableField;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
@@ -42,6 +43,7 @@ public class CodegenColumnDO extends BaseDO {
     private String columnName;
     /**
      * 字段类型
+     * 关联 {@link TableField#getColumnType()}}
      */
     private String dataType;
     /**

File: yudao-module-visualization/yudao-module-visualization-biz/src/main/java/cn/iocoder/yudao/module/visualization/framework/jmreport/config/JmReportConfiguration.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.visualization.framework.jmreport.config;
 
+import cn.iocoder.yudao.framework.security.config.SecurityProperties;
 import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
 import cn.iocoder.yudao.module.visualization.framework.jmreport.core.service.JmReportTokenServiceImpl;
 import org.jeecg.modules.jmreport.api.JmReportTokenServiceI;
@@ -18,8 +19,8 @@ public class JmReportConfiguration {
 
     @Bean
     @SuppressWarnings("SpringJavaInjectionPointsAutowiringInspection")
-    public JmReportTokenServiceI jmReportTokenService(OAuth2TokenApi oAuth2TokenApi) {
-        return new JmReportTokenServiceImpl(oAuth2TokenApi);
+    public JmReportTokenServiceI jmReportTokenService(OAuth2TokenApi oAuth2TokenApi, SecurityProperties securityProperties) {
+        return new JmReportTokenServiceImpl(oAuth2TokenApi, securityProperties);
     }
 
 }

File: yudao-module-visualization/yudao-module-visualization-biz/src/main/java/cn/iocoder/yudao/module/visualization/framework/jmreport/config/JmReportConfiguration.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.visualization.framework.jmreport.config;
 
+import cn.iocoder.yudao.framework.security.config.SecurityProperties;
 import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
 import cn.iocoder.yudao.module.visualization.framework.jmreport.core.service.JmReportTokenServiceImpl;
 import org.jeecg.modules.jmreport.api.JmReportTokenServiceI;
@@ -18,8 +19,8 @@ public class JmReportConfiguration {
 
     @Bean
     @SuppressWarnings("SpringJavaInjectionPointsAutowiringInspection")
-    public JmReportTokenServiceI jmReportTokenService(OAuth2TokenApi oAuth2TokenApi) {
-        return new JmReportTokenServiceImpl(oAuth2TokenApi);
+    public JmReportTokenServiceI jmReportTokenService(OAuth2TokenApi oAuth2TokenApi, SecurityProperties securityProperties) {
+        return new JmReportTokenServiceImpl(oAuth2TokenApi, securityProperties);
     }
 
 }

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoWebSecurityConfigurerAdapter.java
Patch:
@@ -129,6 +129,8 @@ protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exce
                 .antMatchers(buildAppApi("/**")).permitAll()
                 // 1.5 验证码captcha 允许匿名访问
                 .antMatchers("/captcha/get", "/captcha/check").permitAll()
+                // 1.6 webSocket 允许匿名访问
+                .antMatchers("/websocket/message").permitAll()
                 // ②：每个项目的自定义规则
                 .and().authorizeRequests(registry -> // 下面，循环设置自定义规则
                         authorizeRequestsCustomizers.forEach(customizer -> customizer.customize(registry)))

File: yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.framework.websocket;

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/SecurityProperties.java
Patch:
@@ -20,8 +20,6 @@ public class SecurityProperties {
     @NotEmpty(message = "Token Header 不能为空")
     private String tokenHeader = "Authorization";
 
-    private String jmTokenHeader = "X-Access-Token";
-
     /**
      * mock 模式的开关
      */

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/SecurityProperties.java
Patch:
@@ -20,6 +20,8 @@ public class SecurityProperties {
     @NotEmpty(message = "Token Header 不能为空")
     private String tokenHeader = "Authorization";
 
+    private String jmTokenHeader = "X-Access-Token";
+
     /**
      * mock 模式的开关
      */

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClientConfig.java
Patch:
@@ -19,6 +19,7 @@ public class S3FileClientConfig implements FileClientConfig {
 
     public static final String ENDPOINT_QINIU = "qiniucs.com";
     public static final String ENDPOINT_ALIYUN = "aliyuncs.com";
+    public static final String ENDPOINT_TENCENT = "myqcloud.com";
 
     /**
      * 节点地址

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClientConfig.java
Patch:
@@ -19,6 +19,7 @@ public class S3FileClientConfig implements FileClientConfig {
 
     public static final String ENDPOINT_QINIU = "qiniucs.com";
     public static final String ENDPOINT_ALIYUN = "aliyuncs.com";
+    public static final String ENDPOINT_TENCENT = "myqcloud.com";
 
     /**
      * 节点地址

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/file/FileContentDAOImpl.java
Patch:
@@ -30,7 +30,7 @@ public void delete(Long configId, String path) {
     @Override
     public byte[] selectContent(Long configId, String path) {
         List<FileContentDO> fileContentDOs = fileContentMapper.selectList(
-                buildQuery(configId, path).select(FileContentDO::getContent));
+                buildQuery(configId, path).select(FileContentDO::getContent).orderByDesc(FileContentDO::getId));
         return CollUtil.isNotEmpty(fileContentDOs) ? CollUtil.getFirst(fileContentDOs).getContent() : null;
     }
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -139,6 +139,6 @@ public interface ErrorCodeConstants {
 
     // ========== OAuth2 授权 1002022000 =========
     ErrorCode OAUTH2_CODE_NOT_EXISTS = new ErrorCode(1002022000, "code 不存在");
-    ErrorCode OAUTH2_CODE_EXPIRE = new ErrorCode(1002022000, "code 已过期");
+    ErrorCode OAUTH2_CODE_EXPIRE = new ErrorCode(1002022001, "code 已过期");
 
 }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -139,6 +139,6 @@ public interface ErrorCodeConstants {
 
     // ========== OAuth2 授权 1002022000 =========
     ErrorCode OAUTH2_CODE_NOT_EXISTS = new ErrorCode(1002022000, "code 不存在");
-    ErrorCode OAUTH2_CODE_EXPIRE = new ErrorCode(1002022000, "code 已过期");
+    ErrorCode OAUTH2_CODE_EXPIRE = new ErrorCode(1002022001, "code 已过期");
 
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/enums/DocumentEnum.java
Patch:
@@ -12,7 +12,8 @@
 @AllArgsConstructor
 public enum DocumentEnum {
 
-    REDIS_INSTALL("https://gitee.com/zhijiantianya/ruoyi-vue-pro/issues/I4VCSJ", "Redis 安装文档");
+    REDIS_INSTALL("https://gitee.com/zhijiantianya/ruoyi-vue-pro/issues/I4VCSJ", "Redis 安装文档"),
+    TENANT("https://doc.iocoder.cn", "SaaS 多租户文档");
 
     private final String url;
     private final String memo;

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/enums/WebFilterOrderEnum.java
Patch:
@@ -3,7 +3,7 @@
 /**
  * Web 过滤器顺序的枚举类，保证过滤器按照符合我们的预期
  *
- *  考虑到每个 starter 都需要用到该工具类，所以放到 common 模块下的 util 包下
+ *  考虑到每个 starter 都需要用到该工具类，所以放到 common 模块下的 enums 包下
  *
  * @author 芋道源码
  */

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageParam.java
Patch:
@@ -23,8 +23,8 @@ public class PageParam implements Serializable {
 
     @ApiModelProperty(value = "每页条数，最大值为 100", required = true, example = "10")
     @NotNull(message = "每页条数不能为空")
-    @Min(value = 1, message = "页码最小值为 1")
-    @Max(value = 100, message = "页码最大值为 100")
+    @Min(value = 1, message = "每页条数最小值为 1")
+    @Max(value = 100, message = "每页条数最大值为 100")
     private Integer pageSize = PAGE_SIZE;
 
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/collection/SetUtils.java
Patch:
@@ -11,6 +11,7 @@
  */
 public class SetUtils {
 
+    @SafeVarargs
     public static <T> Set<T> asSet(T... objs) {
         return new HashSet<>(Arrays.asList(objs));
     }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/object/ObjectUtils.java
Patch:
@@ -1,12 +1,10 @@
 package cn.iocoder.yudao.framework.common.util.object;
 
-import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.ReflectUtil;
 
 import java.lang.reflect.Field;
 import java.util.Arrays;
-import java.util.Objects;
 import java.util.function.Consumer;
 
 /**
@@ -47,6 +45,7 @@ public static <T extends Comparable<T>> T max(T obj1, T obj2) {
         return obj1.compareTo(obj2) > 0 ? obj1 : obj2;
     }
 
+    @SafeVarargs
     public static <T> T defaultIfNull(T... array) {
         for (T item : array) {
             if (item != null) {
@@ -56,6 +55,7 @@ public static <T> T defaultIfNull(T... array) {
         return null;
     }
 
+    @SafeVarargs
     public static <T> boolean equalsAny(T obj, T... array) {
         return Arrays.asList(array).contains(obj);
     }

File: yudao-framework/yudao-spring-boot-starter-activiti/src/main/java/cn/iocoder/yudao/framework/activiti/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.framework.activiti;

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/DeptDataPermissionRuleCustomizer.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.framework.datapermission.core.dept.rule;
+package cn.iocoder.yudao.framework.datapermission.core.rule.dept;
 
 /**
  * {@link DeptDataPermissionRule} 的自定义配置接口

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/test/java/cn/iocoder/yudao/framework/datapermission/core/db/DataPermissionDatabaseInterceptorTest.java
Patch:
@@ -62,7 +62,7 @@ public void testBeforeQuery_withoutRule() {
             // 调用
             interceptor.beforeQuery(null, mappedStatement, null, null, null, boundSql);
             // 断言
-            pluginUtilsMock.verify(never(), () -> PluginUtils.mpBoundSql(boundSql));
+            pluginUtilsMock.verify(() -> PluginUtils.mpBoundSql(boundSql), never());
         }
     }
 
@@ -87,7 +87,7 @@ public void testBeforeQuery_withMatchRule() {
             interceptor.beforeQuery(null, mappedStatement, null, null, null, boundSql);
             // 断言
             verify(mpBs, times(1)).sql(
-                    eq("SELECT * FROM t_user WHERE id = 1 AND dept_id = 100"));
+                    eq("SELECT * FROM t_user WHERE id = 1 AND t_user.dept_id = 100"));
             // 断言缓存
             assertTrue(interceptor.getMappedStatementCache().getNoRewritableMappedStatements().isEmpty());
         }

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/core/loader/ErrorCodeLoader.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.loader;
+package cn.iocoder.yudao.framework.errorcode.core.loader;
 
 import cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil;
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/config/YudaoPayAutoConfiguration.java
Patch:
@@ -2,16 +2,16 @@
 
 import cn.iocoder.yudao.framework.pay.core.client.PayClientFactory;
 import cn.iocoder.yudao.framework.pay.core.client.impl.PayClientFactoryImpl;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * 支付配置类
  *
  * @author 芋道源码
  */
-@Configuration
+@AutoConfiguration
 @EnableConfigurationProperties(PayProperties.class)
 public class YudaoPayAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/PayOrderNotifyRespDTO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 支付通知 Response DTO
@@ -33,7 +33,7 @@ public class PayOrderNotifyRespDTO {
     /**
      * 支付成功时间
      */
-    private Date successTime;
+    private LocalDateTime successTime;
 
     /**
      * 通知的原始数据

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/PayOrderUnifiedReqDTO.java
Patch:
@@ -7,7 +7,7 @@
 import javax.validation.constraints.DecimalMin;
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -68,7 +68,7 @@ public class PayOrderUnifiedReqDTO {
      * 支付过期时间
      */
     @NotNull(message = "支付过期时间不能为空")
-    private Date expireTime;
+    private LocalDateTime expireTime;
 
     // ========== 拓展参数 ==========
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/PayRefundNotifyDTO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 从渠道返回数据中解析得到的支付退款通知的Notify DTO
@@ -57,7 +57,7 @@ public class PayRefundNotifyDTO {
     /**
      * 退款成功时间
      */
-    private Date refundSuccessTime;
+    private LocalDateTime refundSuccessTime;
 
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/AbstractPayClient.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.pay.core.client.impl;
 
-import cn.hutool.extra.validation.ValidationUtil;
 import cn.iocoder.yudao.framework.pay.core.client.AbstractPayCodeMapping;
 import cn.iocoder.yudao.framework.pay.core.client.PayClient;
 import cn.iocoder.yudao.framework.pay.core.client.PayClientConfig;
@@ -10,6 +9,8 @@
 import cn.iocoder.yudao.framework.pay.core.client.dto.PayRefundUnifiedRespDTO;
 import lombok.extern.slf4j.Slf4j;
 
+import javax.validation.Validation;
+
 import static cn.iocoder.yudao.framework.common.util.json.JsonUtils.toJsonString;
 
 /**
@@ -79,7 +80,7 @@ public Long getId() {
 
     @Override
     public final PayCommonResult<?> unifiedOrder(PayOrderUnifiedReqDTO reqDTO) {
-        ValidationUtil.validate(reqDTO);
+        Validation.buildDefaultValidatorFactory().getValidator().validate(reqDTO);
         // 执行短信发送
         PayCommonResult<?> result;
         try {

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPayClientConfig.java
Patch:
@@ -11,8 +11,6 @@
 import java.io.FileNotFoundException;
 import java.util.Set;
 
-// TODO 芋艿：参数校验
-
 /**
  * 微信支付的 PayClientConfig 实现类
  * 属性主要来自 {@link com.github.binarywang.wxpay.config.WxPayConfig} 的必要属性
@@ -22,7 +20,6 @@
 @Data
 public class WXPayClientConfig implements PayClientConfig {
 
-    // TODO 芋艿：V2 or V3 客户端
     /**
      * API 版本 - V2
      * https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_1

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/PayChannelEnum.java
Patch:
@@ -22,7 +22,6 @@ public enum PayChannelEnum {
     WX_APP("wx_app", "微信 App 支付", WXPayClientConfig.class),
     WX_NATIVE("wx_native", "微信 native 支付", WXPayClientConfig.class),
 
-
     ALIPAY_PC("alipay_pc", "支付宝 PC 网站支付", AlipayPayClientConfig.class),
     ALIPAY_WAP("alipay_wap", "支付宝 Wap 网站支付", AlipayPayClientConfig.class),
     ALIPAY_APP("alipay_app", "支付宝App 支付", AlipayPayClientConfig.class),

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/test/java/cn.iocoder.yudao.framework.pay.core.client.impl/alipay/AlipayQrPayClientTest.java
Patch:
@@ -53,9 +53,8 @@ public class AlipayQrPayClientTest extends BaseMockitoUnitTest {
                 "lrsYhKkVK2OxwM3kFqjoBBY0CZoZCsSQ3LDH5WeZqPArlsS6xa2zqJBuuoKjMrdpELl3eXSjP8K54eDJCbeetCZNKWLL3DPahTPB7LZ" +
                 "ikfYmslb0QUvCgGapD0xkS7eVq70NaL1G57MWABs4tbfWgxike4Daj3EfUrzIVspQxj7w8HEj9WozJPgL88kSJSits0pqD3n5r8HSuseQIDAQAB");
 
-    // TODO @tina：= 前后要有空格哈
     @InjectMocks
-    AlipayQrPayClient client=new AlipayQrPayClient(10L,config);
+    AlipayQrPayClient client = new AlipayQrPayClient(10L,config);
 
     @Mock
     private DefaultAlipayClient defaultAlipayClient;

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/config/YudaoSmsAutoConfiguration.java
Patch:
@@ -2,15 +2,15 @@
 
 import cn.iocoder.yudao.framework.sms.core.client.SmsClientFactory;
 import cn.iocoder.yudao.framework.sms.core.client.impl.SmsClientFactoryImpl;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * 短信配置类
  *
  * @author 芋道源码
  */
-@Configuration
+@AutoConfiguration
 public class YudaoSmsAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/dto/SmsReceiveRespDTO.java
Patch:
@@ -2,7 +2,7 @@
 
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 消息接收 Response DTO
@@ -32,7 +32,7 @@ public class SmsReceiveRespDTO {
     /**
      * 用户接收时间
      */
-    private Date receiveTime;
+    private LocalDateTime receiveTime;
 
     /**
      * 短信 API 发送返回的序号

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/SmsClientFactoryImpl.java
Patch:
@@ -5,7 +5,6 @@
 import cn.iocoder.yudao.framework.sms.core.client.impl.aliyun.AliyunSmsClient;
 import cn.iocoder.yudao.framework.sms.core.client.impl.debug.DebugDingTalkSmsClient;
 import cn.iocoder.yudao.framework.sms.core.client.impl.tencent.TencentSmsClient;
-import cn.iocoder.yudao.framework.sms.core.client.impl.yunpian.YunpianSmsClient;
 import cn.iocoder.yudao.framework.sms.core.enums.SmsChannelEnum;
 import cn.iocoder.yudao.framework.sms.core.property.SmsChannelProperties;
 import lombok.extern.slf4j.Slf4j;
@@ -80,7 +79,6 @@ private AbstractSmsClient createSmsClient(SmsChannelProperties properties) {
         // 创建客户端
         switch (channelEnum) {
             case ALIYUN: return new AliyunSmsClient(properties);
-            case YUN_PIAN: return new YunpianSmsClient(properties);
             case DEBUG_DING_TALK: return new DebugDingTalkSmsClient(properties);
             case TENCENT: return new TencentSmsClient(properties);
         }

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/aliyun/AliyunSmsClient.java
Patch:
@@ -28,7 +28,7 @@
 import lombok.Data;
 import lombok.extern.slf4j.Slf4j;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Objects;
 import java.util.function.Function;
@@ -166,13 +166,13 @@ public static class SmsReceiveStatus {
          */
         @JsonProperty("send_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date sendTime;
+        private LocalDateTime sendTime;
         /**
          * 状态报告时间
          */
         @JsonProperty("report_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date reportTime;
+        private LocalDateTime reportTime;
         /**
          * 是否接收成功
          */

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/tencent/TencentSmsClient.java
Patch:
@@ -22,7 +22,7 @@
 import com.tencentcloudapi.sms.v20210111.models.*;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.function.Function;
 import java.util.function.Supplier;
@@ -240,7 +240,7 @@ private static class SmsReceiveStatus {
          */
         @JsonProperty("user_receive_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date receiveTime;
+        private LocalDateTime receiveTime;
 
         /**
          * 国家（或地区）码

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/enums/SmsChannelEnum.java
Patch:
@@ -15,7 +15,6 @@
 public enum SmsChannelEnum {
 
     DEBUG_DING_TALK("DEBUG_DING_TALK", "调试(钉钉)"),
-    YUN_PIAN("YUN_PIAN", "云片"),
     ALIYUN("ALIYUN", "阿里云"),
     TENCENT("TENCENT", "腾讯云"),
 //    HUA_WEI("HUA_WEI", "华为云"),

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/enums/SmsFrameworkErrorCodeConstants.java
Patch:
@@ -16,7 +16,6 @@ public interface SmsFrameworkErrorCodeConstants {
     // ========== 权限 / 限流等相关 2001000100 ==========
 
     ErrorCode SMS_PERMISSION_DENY = new ErrorCode(2001000100, "没有发送短信的权限");
-    // 云片：可以配置 IP 白名单，只有在白名单中才可以发送短信
     ErrorCode SMS_IP_DENY = new ErrorCode(2001000100, "IP 不允许发送短信");
 
     // 阿里云：将短信发送频率限制在正常的业务限流范围内。默认短信验证码：使用同一签名，对同一个手机号验证码，支持 1 条 / 分钟，5 条 / 小时，累计 10 条 / 天。

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/test/java/cn/iocoder/yudao/framework/sms/core/client/impl/aliyun/AliyunSmsClientTest.java
Patch:
@@ -11,7 +11,6 @@
 import cn.iocoder.yudao.framework.sms.core.enums.SmsTemplateAuditStatusEnum;
 import cn.iocoder.yudao.framework.sms.core.property.SmsChannelProperties;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
-import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.framework.sms.core.enums.SmsFrameworkErrorCodeConstants;
 import com.aliyuncs.AcsRequest;
 import com.aliyuncs.IAcsClient;
@@ -27,6 +26,7 @@
 import org.mockito.InjectMocks;
 import org.mockito.Mock;
 
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.function.Function;
 
@@ -125,7 +125,7 @@ public void testDoTParseSmsReceiveStatus() throws Throwable {
         assertEquals("DELIVERED", statuses.get(0).getErrorCode());
         assertEquals("用户接收成功", statuses.get(0).getErrorMsg());
         assertEquals("13900000001", statuses.get(0).getMobile());
-        assertEquals(DateUtils.buildTime(2017, 2, 2, 22, 23, 24), statuses.get(0).getReceiveTime());
+        assertEquals(LocalDateTime.of(2017, 2, 2, 22, 23, 24), statuses.get(0).getReceiveTime());
         assertEquals("12345", statuses.get(0).getSerialNo());
         assertEquals(67890L, statuses.get(0).getLogId());
     }
@@ -181,7 +181,7 @@ public void testInvoke_throwable() throws ClientException {
         when(client.getAcsResponse(any(AcsRequest.class))).thenThrow(ex);
 
         // 调用，并断言异常
-        SmsCommonResult<?> result = smsClient.invoke(request,null);
+        SmsCommonResult<?> result = smsClient.invoke(request, null);
         // 断言
         assertEquals(ex.getErrCode(), result.getApiCode());
         assertEquals(ex.getErrMsg(), result.getApiMsg());

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/test/java/cn/iocoder/yudao/framework/sms/core/client/impl/tencent/TencentSmsClientTest.java
Patch:
@@ -6,7 +6,6 @@
 import cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants;
 import cn.iocoder.yudao.framework.common.util.collection.ArrayUtils;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
-import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.framework.common.util.json.JsonUtils;
 import cn.iocoder.yudao.framework.sms.core.client.SmsCommonResult;
 import cn.iocoder.yudao.framework.sms.core.client.dto.SmsReceiveRespDTO;
@@ -25,6 +24,7 @@
 import org.mockito.InjectMocks;
 import org.mockito.Mock;
 
+import java.time.LocalDateTime;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -146,7 +146,7 @@ public void testDoTParseSmsReceiveStatus() throws Throwable {
         assertEquals("DELIVRD", statuses.get(0).getErrorCode());
         assertEquals("用户短信送达成功", statuses.get(0).getErrorMsg());
         assertEquals("13900000001", statuses.get(0).getMobile());
-        assertEquals(DateUtils.buildTime(2015, 10, 17, 8, 3, 4), statuses.get(0).getReceiveTime());
+        assertEquals(LocalDateTime.of(2015, 10, 17, 8, 3, 4), statuses.get(0).getReceiveTime());
         assertEquals("12345", statuses.get(0).getSerialNo());
         assertEquals(67890L, statuses.get(0).getLogId());
     }

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/config/TenantProperties.java
Patch:
@@ -3,6 +3,7 @@
 import lombok.Data;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+import java.util.Collections;
 import java.util.Set;
 
 /**
@@ -29,13 +30,13 @@ public class TenantProperties {
      *
      * 默认情况下，每个请求需要带上 tenant-id 的请求头。但是，部分请求是无需带上的，例如说短信回调、支付回调等 Open API！
      */
-    private Set<String> ignoreUrls;
+    private Set<String> ignoreUrls = Collections.emptySet();
 
     /**
      * 需要忽略多租户的表
      *
      * 即默认所有表都开启多租户的功能，所以记得添加对应的 tenant_id 字段哟
      */
-    private Set<String> ignoreTables;
+    private Set<String> ignoreTables = Collections.emptySet();
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/context/TenantContextHolder.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.framework.tenant.core.context;
 
+import cn.iocoder.yudao.framework.common.enums.DocumentEnum;
 import com.alibaba.ttl.TransmittableThreadLocal;
 
 /**
@@ -36,7 +37,8 @@ public static Long getTenantId() {
     public static Long getRequiredTenantId() {
         Long tenantId = getTenantId();
         if (tenantId == null) {
-            throw new NullPointerException("TenantContextHolder 不存在租户编号"); // TODO 芋艿：增加文档链接
+            throw new NullPointerException("TenantContextHolder 不存在租户编号！可参考文档："
+                + DocumentEnum.TENANT.getUrl());
         }
         return tenantId;
     }

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/mq/TenantRedisMessageInterceptor.java
Patch:
@@ -5,6 +5,8 @@
 import cn.iocoder.yudao.framework.mq.core.message.AbstractRedisMessage;
 import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 
+import static cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils.HEADER_TENANT_ID;
+
 /**
  * 多租户 {@link AbstractRedisMessage} 拦截器
  *
@@ -15,8 +17,6 @@
  */
 public class TenantRedisMessageInterceptor implements RedisMessageInterceptor {
 
-    private static final String HEADER_TENANT_ID = "tenant-id";
-
     @Override
     public void sendMessageBefore(AbstractRedisMessage message) {
         Long tenantId = TenantContextHolder.getTenantId();

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/security/TenantSecurityWebFilter.java
Patch:
@@ -28,8 +28,6 @@
  * 2. 如果请求未带租户的编号，检查是否是忽略的 URL，否则也不允许访问。
  * 3. 校验租户是合法，例如说被禁用、到期
  *
- * 校验用户访问的租户，是否是其所在的租户，
- *
  * @author 芋道源码
  */
 @Slf4j

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/config/YudaoFileAutoConfiguration.java
Patch:
@@ -2,15 +2,15 @@
 
 import cn.iocoder.yudao.framework.file.core.client.FileClientFactory;
 import cn.iocoder.yudao.framework.file.core.client.FileClientFactoryImpl;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * 文件配置类
  *
  * @author 芋道源码
  */
-@Configuration
+@AutoConfiguration
 public class YudaoFileAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/FileClient.java
Patch:
@@ -22,7 +22,7 @@ public interface FileClient {
      * @return 完整路径，即 HTTP 访问地址
      * @throws Exception 上传文件时，抛出 Exception 异常
      */
-    String upload(byte[] content, String path) throws  Exception;
+    String upload(byte[] content, String path, String type) throws  Exception;
 
     /**
      * 删除文件

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/db/DBFileClient.java
Patch:
@@ -21,7 +21,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         getDao().insert(getId(), path, content);
         // 拼接返回路径
         return super.formatFileUrl(config.getDomain(), path);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClient.java
Patch:
@@ -25,7 +25,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         FileUtil.writeBytes(content, filePath);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClient.java
Patch:
@@ -31,7 +31,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         File file = FileUtils.createTempFile(content);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClientTest.java
Patch:
@@ -25,7 +25,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         if (false) {
             byte[] bytes = client.getContent(path);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClientTest.java
Patch:
@@ -19,7 +19,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         client.delete(path);
     }

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClientTest.java
Patch:
@@ -101,7 +101,7 @@ private void testExecuteUpload(S3FileClientConfig config) throws Exception {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         // 读取文件
         if (true) {

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClientTest.java
Patch:
@@ -23,7 +23,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         if (false) {
             byte[] bytes = client.getContent(path);

File: yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/config/YudaoAsyncAutoConfiguration.java
Patch:
@@ -3,15 +3,15 @@
 import com.alibaba.ttl.TtlRunnable;
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.config.BeanPostProcessor;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableAsync;
 import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
 
 /**
  * 异步任务 Configuration
  */
-@Configuration
+@AutoConfiguration
 @EnableAsync
 public class YudaoAsyncAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/config/YudaoQuartzAutoConfiguration.java
Patch:
@@ -2,14 +2,14 @@
 
 import cn.iocoder.yudao.framework.quartz.core.scheduler.SchedulerManager;
 import org.quartz.Scheduler;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
  * 定时任务 Configuration
  */
-@Configuration
+@AutoConfiguration
 @EnableScheduling // 开启 Spring 自带的定时任务
 public class YudaoQuartzAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/core/service/JobLogFrameworkService.java
Patch:
@@ -2,7 +2,7 @@
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * Job 日志 Framework Service 接口
@@ -22,7 +22,7 @@ public interface JobLogFrameworkService {
      * @return Job 日志的编号
      */
     Long createJobLog(@NotNull(message = "任务编号不能为空") Long jobId,
-                      @NotNull(message = "开始时间") Date beginTime,
+                      @NotNull(message = "开始时间") LocalDateTime beginTime,
                       @NotEmpty(message = "Job 处理器的名字不能为空") String jobHandlerName,
                       String jobHandlerParam,
                       @NotNull(message = "第几次执行不能为空") Integer executeIndex);
@@ -37,7 +37,7 @@ Long createJobLog(@NotNull(message = "任务编号不能为空") Long jobId,
      * @param result   成功数据
      */
     void updateJobLogResultAsync(@NotNull(message = "日志编号不能为空") Long logId,
-                                 @NotNull(message = "结束时间不能为空") Date endTime,
+                                 @NotNull(message = "结束时间不能为空") LocalDateTime endTime,
                                  @NotNull(message = "运行时长不能为空") Integer duration,
                                  boolean success, String result);
 

File: yudao-framework/yudao-spring-boot-starter-monitor/src/main/java/cn/iocoder/yudao/framework/tracer/config/YudaoTracerAutoConfiguration.java
Patch:
@@ -3,19 +3,19 @@
 import cn.iocoder.yudao.framework.common.enums.WebFilterOrderEnum;
 import cn.iocoder.yudao.framework.tracer.core.aop.BizTraceAspect;
 import cn.iocoder.yudao.framework.tracer.core.filter.TraceFilter;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * Tracer 配置类
  *
  * @author mashu
  */
-@Configuration
+@AutoConfiguration
 @ConditionalOnClass({BizTraceAspect.class})
 @EnableConfigurationProperties(TracerProperties.class)
 @ConditionalOnProperty(prefix = "yudao.tracer", value = "enable", matchIfMissing = true)

File: yudao-framework/yudao-spring-boot-starter-monitor/src/main/java/cn/iocoder/yudao/framework/tracer/core/aop/BizTraceAspect.java
Patch:
@@ -38,7 +38,7 @@ public Object around(ProceedingJoinPoint joinPoint, BizTrace trace) throws Throw
         String operationName = getOperationName(joinPoint, trace);
         Span span = tracer.buildSpan(operationName)
                 .withTag(Tags.COMPONENT.getKey(), "biz")
-                .startManual();
+                .start();
         try {
             // 执行原有方法
             return joinPoint.proceed();

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/dept/DeptServiceImpl.java
Patch:
@@ -116,12 +116,12 @@ public void schedulePeriodicRefresh() {
     protected List<DeptDO> loadDeptIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
-            log.info("[loadMenuIfUpdate][首次加载全量部门]");
+            log.info("[loadDeptIfUpdate][首次加载全量部门]");
         } else { // 判断数据库中是否有更新的部门
             if (deptMapper.selectCountByUpdateTimeGt(maxUpdateTime) == 0) {
                 return null;
             }
-            log.info("[loadMenuIfUpdate][增量加载全量部门]");
+            log.info("[loadDeptIfUpdate][增量加载全量部门]");
         }
         // 第二步，如果有更新，则从数据库加载所有部门
         return deptMapper.selectList();

File: yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/config/YudaoMQAutoConfiguration.java
Patch:
@@ -8,7 +8,7 @@
 import cn.iocoder.yudao.framework.mq.core.interceptor.RedisMessageInterceptor;
 import cn.iocoder.yudao.framework.mq.core.pubsub.AbstractChannelMessageListener;
 import cn.iocoder.yudao.framework.mq.core.stream.AbstractStreamMessageListener;
-import cn.iocoder.yudao.framework.mq.scheduler.RedisPendingMessageResendJob;
+import cn.iocoder.yudao.framework.mq.job.RedisPendingMessageResendJob;
 import cn.iocoder.yudao.framework.redis.config.YudaoRedisAutoConfiguration;
 import lombok.extern.slf4j.Slf4j;
 import org.redisson.api.RedissonClient;

File: yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/job/RedisPendingMessageResendJob.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.framework.mq.scheduler;
+package cn.iocoder.yudao.framework.mq.job;
 
 import cn.hutool.core.collection.CollUtil;
 import cn.iocoder.yudao.framework.mq.core.RedisMQTemplate;

File: yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/scheduler/RedisPendingMessageResendJob.java
Patch:
@@ -43,7 +43,6 @@ public RedisPendingMessageResendJob(List<AbstractStreamMessageListener<?>> liste
     @Scheduled(cron = "35 * * * * ?")
     public void messageResend() {
         RLock lock = redissonClient.getLock(LOCK_KEY);
-        log.info("[messageResend][尝试获取锁]");
         // 尝试加锁
         if (lock.tryLock()) {
             try {

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.json.JsonUtils;
 import cn.iocoder.yudao.framework.datapermission.core.rule.DataPermissionRule;
+import cn.iocoder.yudao.framework.expression.OrExpressionX;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils;
 import cn.iocoder.yudao.framework.security.core.LoginUser;
@@ -20,7 +21,6 @@
 import net.sf.jsqlparser.expression.Expression;
 import net.sf.jsqlparser.expression.LongValue;
 import net.sf.jsqlparser.expression.NullValue;
-import net.sf.jsqlparser.expression.operators.conditional.OrExpression;
 import net.sf.jsqlparser.expression.operators.relational.EqualsTo;
 import net.sf.jsqlparser.expression.operators.relational.ExpressionList;
 import net.sf.jsqlparser.expression.operators.relational.InExpression;
@@ -143,8 +143,8 @@ public Expression getExpression(String tableName, Alias tableAlias) {
         if (userExpression == null) {
             return deptExpression;
         }
-        // 目前，如果有指定部门 + 可查看自己，采用 OR 条件。即，WHERE dept_id IN ? OR user_id = ?
-        return new OrExpression(deptExpression, userExpression);
+        // 目前，如果有指定部门 + 可查看自己，采用 OR 条件。即，WHERE (dept_id IN ? OR user_id = ?)
+        return new OrExpressionX(deptExpression, userExpression);
     }
 
     private Expression buildDeptExpression(String tableName, Alias tableAlias, Set<Long> deptIds) {

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/expression/AndExpressionX.java
Patch:
@@ -18,7 +18,7 @@ public AndExpressionX(Expression leftExpression, Expression rightExpression) {
 
     @Override
     public String toString() {
-        return "(" + this.getLeftExpression() + " " + this.getStringExpression() + " " + this.getRightExpression() + ")";
+        return "(" + super.toString() + ")";
     }
 
 }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/expression/OrExpressionX.java
Patch:
@@ -18,7 +18,7 @@ public OrExpressionX(Expression leftExpression, Expression rightExpression) {
 
     @Override
     public String toString() {
-        return "(" + this.getLeftExpression() + " " + this.getStringExpression() + " " + this.getRightExpression() + ")";
+        return "(" + super.toString() + ")";
     }
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/DeptDataPermissionRule.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.json.JsonUtils;
 import cn.iocoder.yudao.framework.datapermission.core.rule.DataPermissionRule;
+import cn.iocoder.yudao.framework.expression.OrExpressionX;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils;
 import cn.iocoder.yudao.framework.security.core.LoginUser;
@@ -20,7 +21,6 @@
 import net.sf.jsqlparser.expression.Expression;
 import net.sf.jsqlparser.expression.LongValue;
 import net.sf.jsqlparser.expression.NullValue;
-import net.sf.jsqlparser.expression.operators.conditional.OrExpression;
 import net.sf.jsqlparser.expression.operators.relational.EqualsTo;
 import net.sf.jsqlparser.expression.operators.relational.ExpressionList;
 import net.sf.jsqlparser.expression.operators.relational.InExpression;
@@ -143,8 +143,8 @@ public Expression getExpression(String tableName, Alias tableAlias) {
         if (userExpression == null) {
             return deptExpression;
         }
-        // 目前，如果有指定部门 + 可查看自己，采用 OR 条件。即，WHERE dept_id IN ? OR user_id = ?
-        return new OrExpression(deptExpression, userExpression);
+        // 目前，如果有指定部门 + 可查看自己，采用 OR 条件。即，WHERE (dept_id IN ? OR user_id = ?)
+        return new OrExpressionX(deptExpression, userExpression);
     }
 
     private Expression buildDeptExpression(String tableName, Alias tableAlias, Set<Long> deptIds) {

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceImpl.java
Patch:
@@ -103,7 +103,7 @@ public Long createPayOrder(PayOrderCreateReqDTO reqDTO) {
         if (order != null) {
             log.warn("[createPayOrder][appId({}) merchantOrderId({}) 已经存在对应的支付单({})]", order.getAppId(),
                     order.getMerchantOrderId(), JsonUtils.toJsonString(order)); // 理论来说，不会出现这个情况
-            return app.getId();
+            return order.getId();
         }
 
         // 创建支付交易单

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/refund/PayRefundServiceImpl.java
Patch:
@@ -130,7 +130,7 @@ public PayRefundRespDTO submitRefundOrder(PayRefundReqDTO req) {
         } else {
             // 成功，插入退款单 状态为生成.没有和渠道交互
             // TODO @jason：搞到 convert 里。一些额外的自动，手动 set 下；
-            payRefundDO = PayRefundDO.builder().channelOrderNo(order.getChannelOrderNo())
+            payRefundDO = PayRefundDO.builder()
                     .appId(order.getAppId())
                     .channelOrderNo(order.getChannelOrderNo())
                     .channelCode(order.getChannelCode())

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/dict/DictTypeServiceImpl.java
Patch:
@@ -13,6 +13,7 @@
 import org.springframework.stereotype.Service;
 
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.List;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/dict/DictTypeMapper.java
Patch:
@@ -10,6 +10,7 @@
 import org.apache.ibatis.annotations.Delete;
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
+import org.apache.ibatis.annotations.Update;
 
 import java.time.LocalDateTime;
 import java.util.List;
@@ -42,7 +43,7 @@ default DictTypeDO selectByName(String name) {
         return selectOne(DictTypeDO::getName, name);
     }
 
-    @Delete("UPDATE system_dict_type SET DELETED = 1,DELETED_TIME=#{deletedTime} WHERE id = #{id}")
+    @Update("UPDATE system_dict_type SET DELETED = 1,DELETED_TIME=#{deletedTime} WHERE id = #{id}")
     int deleteById(@Param("id") Long id, @Param("deletedTime") LocalDateTime deletedTime);
 
     default int deleteById(Long id) {

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/dict/DictTypeServiceImpl.java
Patch:
@@ -81,9 +81,7 @@ public void deleteDictType(Long id) {
             throw exception(DICT_TYPE_HAS_CHILDREN);
         }
         // 删除字典类型
-        dictType.setDeletedTime(LocalDateTime.now());
-        dictType.setDeleted(true);
-        dictTypeMapper.updateById(dictType);
+        dictTypeMapper.deleteById(id);
     }
 
     @Override

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/object/ObjectUtils.java
Patch:
@@ -1,12 +1,10 @@
 package cn.iocoder.yudao.framework.common.util.object;
 
-import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.ReflectUtil;
 
 import java.lang.reflect.Field;
 import java.util.Arrays;
-import java.util.Objects;
 import java.util.function.Consumer;
 
 /**
@@ -47,6 +45,7 @@ public static <T extends Comparable<T>> T max(T obj1, T obj2) {
         return obj1.compareTo(obj2) > 0 ? obj1 : obj2;
     }
 
+    @SafeVarargs
     public static <T> T defaultIfNull(T... array) {
         for (T item : array) {
             if (item != null) {
@@ -56,6 +55,7 @@ public static <T> T defaultIfNull(T... array) {
         return null;
     }
 
+    @SafeVarargs
     public static <T> boolean equalsAny(T obj, T... array) {
         return Arrays.asList(array).contains(obj);
     }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -48,7 +48,7 @@ public static <T> T copy(Object source, Class<T> target) {
             return null;
         }
         try {
-            T newInstance = target.newInstance();
+            T newInstance = target.getDeclaredConstructor().newInstance();
             BeanUtils.copyProperties(source, newInstance);
             return newInstance;
         } catch (Exception e) {

File: yudao-framework/yudao-spring-boot-starter-biz-social/src/main/java/cn/iocoder/yudao/framework/social/core/YudaoAuthRequestFactory.java
Patch:
@@ -43,6 +43,7 @@ public YudaoAuthRequestFactory(JustAuthProperties properties, AuthStateCache aut
      * @param source {@link AuthSource}
      * @return {@link AuthRequest}
      */
+    @Override
     public AuthRequest get(String source) {
         // 先尝试获取自定义扩展的
         AuthRequest authRequest = getExtendRequest(source);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -1 +1 @@
-package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.lang.Assert;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.number.NumberUtils;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.*;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;import cn.iocoder.yudao.module.bpm.dal.mysql.task.BpmProcessInstanceExtMapper;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventPublisher;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.dept.DeptApi;import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import lombok.extern.slf4j.Slf4j;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.flowable.task.api.Task;import org.springframework.context.annotation.Lazy;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import javax.annotation.Resource;import javax.validation.Valid;import java.time.LocalDateTime;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * * ProcessDefinition & ProcessInstance & Execution & Task 的关系： *     1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * * HistoricProcessInstance & ProcessInstance 的关系： *     1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private BpmProcessInstanceExtMapper processInstanceExtMapper;    @Resource    @Lazy // 解决循环依赖    private BpmTaskService taskService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private HistoryService historyService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private DeptApi deptApi;    @Resource    private BpmProcessInstanceResultEventPublisher processInstanceResultEventPublisher;    @Resource    private BpmMessageService messageService;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<BpmProcessInstancePageItemRespVO> getMyProcessInstancePage(Long userId,                                                                                 BpmProcessInstanceMyPageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        PageResult<BpmProcessInstanceExtDO> pageResult = processInstanceExtMapper.selectPage(userId, pageReqVO);        if (CollUtil.isEmpty(pageResult.getList())) {            return new PageResult<>(pageResult.getTotal());        }        // 获得流程 Task Map        List<String> processInstanceIds = convertList(pageResult.getList(), BpmProcessInstanceExtDO::getProcessInstanceId);        Map<String, List<Task>> taskMap = taskService.getTaskMapByProcessInstanceIds(processInstanceIds);        // 转换返回        return BpmProcessInstanceConvert.INSTANCE.convertPage(pageResult, taskMap);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null);    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey());    }    @Override    public BpmProcessInstanceRespVO getProcessInstanceVO(String id) {        // 获得流程实例        HistoricProcessInstance processInstance = getHistoricProcessInstance(id);        if (processInstance == null) {            return null;        }        BpmProcessInstanceExtDO processInstanceExt = processInstanceExtMapper.selectByProcessInstanceId(id);        Assert.notNull(processInstanceExt, "流程实例拓展({}) 不存在", id);        // 获得流程定义        ProcessDefinition processDefinition = processDefinitionService                                                    .getProcessDefinition(processInstance.getProcessDefinitionId());        Assert.notNull(processDefinition, "流程定义({}) 不存在", processInstance.getProcessDefinitionId());        BpmProcessDefinitionExtDO processDefinitionExt = processDefinitionService.getProcessDefinitionExt(                processInstance.getProcessDefinitionId());        Assert.notNull(processDefinitionExt, "流程定义拓展({}) 不存在", id);        String bpmnXml = processDefinitionService.getProcessDefinitionBpmnXML(processInstance.getProcessDefinitionId());        // 获得 User        AdminUserRespDTO startUser = adminUserApi.getUser(NumberUtils.parseLong(processInstance.getStartUserId()));        DeptRespDTO dept = null;        if (startUser != null) {            dept = deptApi.getDept(startUser.getDeptId());        }        // 拼接结果        return BpmProcessInstanceConvert.INSTANCE.convert2(processInstance, processInstanceExt,                processDefinition, processDefinitionExt, bpmnXml, startUser, dept);    }    @Override    public void cancelProcessInstance(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。通过历史表查询        deleteProcessInstance(cancelReqVO.getId(),                BpmProcessInstanceDeleteReasonEnum.CANCEL_TASK.format(cancelReqVO.getReason()));    }    /**     * 获得历史的流程实例     *     * @param id 流程实例的编号     * @return 历史的流程实例     */    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public void createProcessInstanceExt(ProcessInstance instance) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition2(instance.getProcessDefinitionId());        // 插入 BpmProcessInstanceExtDO 对象        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getId())                .setProcessDefinitionId(definition.getId())                .setName(instance.getProcessDefinitionName())                .setStartUserId(Long.valueOf(instance.getStartUserId()))                .setCategory(definition.getCategory())                .setStatus(BpmProcessInstanceStatusEnum.RUNNING.getStatus())                .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());        processInstanceExtMapper.insert(instanceExtDO);    }    @Override    public void updateProcessInstanceExtCancel(FlowableCancelledEvent event) {        // 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceExtReject 方法，已经进行更新了        if (BpmProcessInstanceDeleteReasonEnum.isRejectReason((String)event.getCause())) {            return;        }        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(event.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.CANCEL.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    public void updateProcessInstanceExtComplete(ProcessInstance instance) {        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()); // 如果正常完全，说明审批通过        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被通过的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.convert2ApprovedReq(instance));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceExtReject(String id, String reason) {        // 需要主动查询，因为 instance 只有 id 属性        ProcessInstance processInstance = getProcessInstance(id);        // 删除流程实例，以实现驳回任务时，取消整个审批流程        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));        // 更新 status + result        // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，        // 设置 result 为 BpmProcessInstanceStatusEnum.CANCEL，显然和 result 不一定是一致的        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO().setProcessInstanceId(id)                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被不通过的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey) {        // 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 创建流程实例        ProcessInstance instance = runtimeService.startProcessInstanceById(definition.getId(), businessKey, variables);        // 设置流程名字        runtimeService.setProcessInstanceName(instance.getId(), definition.getName());        // 补全流程实例的拓展表        processInstanceExtMapper.updateByProcessInstanceId(new BpmProcessInstanceExtDO().setProcessInstanceId(instance.getId())                .setFormVariables(variables));        return instance.getId();    }}
\ No newline at end of file
+package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.lang.Assert;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.number.NumberUtils;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.*;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;import cn.iocoder.yudao.module.bpm.dal.mysql.task.BpmProcessInstanceExtMapper;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventPublisher;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.dept.DeptApi;import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import lombok.extern.slf4j.Slf4j;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.flowable.task.api.Task;import org.springframework.context.annotation.Lazy;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import javax.annotation.Resource;import javax.validation.Valid;import java.time.LocalDateTime;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * * ProcessDefinition & ProcessInstance & Execution & Task 的关系： *     1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * * HistoricProcessInstance & ProcessInstance 的关系： *     1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private BpmProcessInstanceExtMapper processInstanceExtMapper;    @Resource    @Lazy // 解决循环依赖    private BpmTaskService taskService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private HistoryService historyService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private DeptApi deptApi;    @Resource    private BpmProcessInstanceResultEventPublisher processInstanceResultEventPublisher;    @Resource    private BpmMessageService messageService;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<BpmProcessInstancePageItemRespVO> getMyProcessInstancePage(Long userId,                                                                                 BpmProcessInstanceMyPageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        PageResult<BpmProcessInstanceExtDO> pageResult = processInstanceExtMapper.selectPage(userId, pageReqVO);        if (CollUtil.isEmpty(pageResult.getList())) {            return new PageResult<>(pageResult.getTotal());        }        // 获得流程 Task Map        List<String> processInstanceIds = convertList(pageResult.getList(), BpmProcessInstanceExtDO::getProcessInstanceId);        Map<String, List<Task>> taskMap = taskService.getTaskMapByProcessInstanceIds(processInstanceIds);        // 转换返回        return BpmProcessInstanceConvert.INSTANCE.convertPage(pageResult, taskMap);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null);    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey());    }    @Override    public BpmProcessInstanceRespVO getProcessInstanceVO(String id) {        // 获得流程实例        HistoricProcessInstance processInstance = getHistoricProcessInstance(id);        if (processInstance == null) {            return null;        }        BpmProcessInstanceExtDO processInstanceExt = processInstanceExtMapper.selectByProcessInstanceId(id);        Assert.notNull(processInstanceExt, "流程实例拓展({}) 不存在", id);        // 获得流程定义        ProcessDefinition processDefinition = processDefinitionService                                                    .getProcessDefinition(processInstance.getProcessDefinitionId());        Assert.notNull(processDefinition, "流程定义({}) 不存在", processInstance.getProcessDefinitionId());        BpmProcessDefinitionExtDO processDefinitionExt = processDefinitionService.getProcessDefinitionExt(                processInstance.getProcessDefinitionId());        Assert.notNull(processDefinitionExt, "流程定义拓展({}) 不存在", id);        String bpmnXml = processDefinitionService.getProcessDefinitionBpmnXML(processInstance.getProcessDefinitionId());        // 获得 User        AdminUserRespDTO startUser = adminUserApi.getUser(NumberUtils.parseLong(processInstance.getStartUserId()));        DeptRespDTO dept = null;        if (startUser != null) {            dept = deptApi.getDept(startUser.getDeptId());        }        // 拼接结果        return BpmProcessInstanceConvert.INSTANCE.convert2(processInstance, processInstanceExt,                processDefinition, processDefinitionExt, bpmnXml, startUser, dept);    }    @Override    public void cancelProcessInstance(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。通过历史表查询        deleteProcessInstance(cancelReqVO.getId(),                BpmProcessInstanceDeleteReasonEnum.CANCEL_TASK.format(cancelReqVO.getReason()));    }    /**     * 获得历史的流程实例     *     * @param id 流程实例的编号     * @return 历史的流程实例     */    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public void createProcessInstanceExt(ProcessInstance instance) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition2(instance.getProcessDefinitionId());        // 插入 BpmProcessInstanceExtDO 对象        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getId())                .setProcessDefinitionId(definition.getId())                .setName(instance.getProcessDefinitionName())                .setStartUserId(Long.valueOf(instance.getStartUserId()))                .setCategory(definition.getCategory())                .setStatus(BpmProcessInstanceStatusEnum.RUNNING.getStatus())                .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());        processInstanceExtMapper.insert(instanceExtDO);    }    @Override    public void updateProcessInstanceExtCancel(FlowableCancelledEvent event) {        // 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceExtReject 方法，已经进行更新了        if (BpmProcessInstanceDeleteReasonEnum.isRejectReason((String)event.getCause())) {            return;        }        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(event.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.CANCEL.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    public void updateProcessInstanceExtComplete(ProcessInstance instance) {        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()); // 如果正常完全，说明审批通过        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被通过的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.convert2ApprovedReq(instance));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceExtReject(String id, String reason) {        // 需要主动查询，因为 instance 只有 id 属性        ProcessInstance processInstance = getProcessInstance(id);        // 删除流程实例，以实现驳回任务时，取消整个审批流程        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));        // 更新 status + result        // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，        // 设置 result 为 BpmProcessInstanceStatusEnum.CANCEL，显然和 result 不一定是一致的        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO().setProcessInstanceId(id)                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被不通过的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey) {        // 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 创建流程实例        ProcessInstance instance = runtimeService.startProcessInstanceById(definition.getId(), businessKey, variables);        // 设置流程名字        runtimeService.setProcessInstanceName(instance.getId(), definition.getName());        // 补全流程实例的拓展表        processInstanceExtMapper.updateByProcessInstanceId(new BpmProcessInstanceExtDO().setProcessInstanceId(instance.getId())                .setFormVariables(variables));        return instance.getId();    }}
\ No newline at end of file

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/captcha/CaptchaController.java
Patch:
@@ -30,6 +30,7 @@ public class CaptchaController extends com.anji.captcha.controller.CaptchaContro
     @ApiOperation("获得验证码")
     @PermitAll
     @OperateLog(enable = false) // 避免 Post 请求被记录操作日志
+    @Override
     public ResponseModel get(@RequestBody CaptchaVO data, HttpServletRequest request) {
         return super.get(data, request);
     }
@@ -38,6 +39,7 @@ public ResponseModel get(@RequestBody CaptchaVO data, HttpServletRequest request
     @ApiOperation("校验验证码")
     @PermitAll
     @OperateLog(enable = false) // 避免 Post 请求被记录操作日志
+    @Override
     public ResponseModel check(@RequestBody CaptchaVO data, HttpServletRequest request) {
         return super.check(data, request);
     }

File: yudao-framework/yudao-spring-boot-starter-banner/src/main/java/cn/iocoder/yudao/framework/banner/config/YudaoBannerAutoConfiguration.java
Patch:
@@ -1,15 +1,15 @@
 package cn.iocoder.yudao.framework.banner.config;
 
 import cn.iocoder.yudao.framework.banner.core.BannerApplicationRunner;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * Banner 的自动配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoBannerAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/config/YudaoDataPermissionAutoConfiguration.java
Patch:
@@ -7,8 +7,8 @@
 import cn.iocoder.yudao.framework.datapermission.core.rule.DataPermissionRuleFactoryImpl;
 import cn.iocoder.yudao.framework.mybatis.core.util.MyBatisUtils;
 import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 import java.util.List;
 
@@ -17,7 +17,7 @@
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoDataPermissionAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/config/YudaoDeptDataPermissionAutoConfiguration.java
Patch:
@@ -4,10 +4,10 @@
 import cn.iocoder.yudao.framework.datapermission.core.rule.dept.DeptDataPermissionRuleCustomizer;
 import cn.iocoder.yudao.framework.security.core.LoginUser;
 import cn.iocoder.yudao.module.system.api.permission.PermissionApi;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 import java.util.List;
 
@@ -16,7 +16,7 @@
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @ConditionalOnClass(LoginUser.class)
 @ConditionalOnBean(value = {PermissionApi.class, DeptDataPermissionRuleCustomizer.class})
 public class YudaoDeptDataPermissionAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-biz-dict/src/main/java/cn/iocoder/yudao/framework/dict/config/YudaoDictAutoConfiguration.java
Patch:
@@ -2,10 +2,10 @@
 
 import cn.iocoder.yudao.framework.dict.core.util.DictFrameworkUtils;
 import cn.iocoder.yudao.module.system.api.dict.DictDataApi;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoDictAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/config/YudaoErrorCodeConfiguration.java
Patch:
@@ -6,18 +6,18 @@
 import cn.iocoder.yudao.framework.errorcode.core.loader.ErrorCodeLoaderImpl;
 import cn.iocoder.yudao.module.system.api.errorcode.ErrorCodeApi;
 import org.springframework.beans.factory.annotation.Value;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
  * 错误码配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @ConditionalOnProperty(prefix = "yudao.error-code", value = "enable", matchIfMissing = true) // 允许使用 yudao.error-code.enable=false 禁用访问日志
 @EnableConfigurationProperties(ErrorCodeProperties.class)
 @EnableScheduling // 开启调度任务的功能，因为 ErrorCodeRemoteLoader 通过定时刷新错误码

File: yudao-framework/yudao-spring-boot-starter-biz-operatelog/src/main/java/cn/iocoder/yudao/framework/operatelog/config/YudaoOperateLogAutoConfiguration.java
Patch:
@@ -4,10 +4,10 @@
 import cn.iocoder.yudao.framework.operatelog.core.service.OperateLogFrameworkService;
 import cn.iocoder.yudao.framework.operatelog.core.service.OperateLogFrameworkServiceImpl;
 import cn.iocoder.yudao.module.system.api.logger.OperateLogApi;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoOperateLogAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/config/YudaoPayAutoConfiguration.java
Patch:
@@ -2,16 +2,16 @@
 
 import cn.iocoder.yudao.framework.pay.core.client.PayClientFactory;
 import cn.iocoder.yudao.framework.pay.core.client.impl.PayClientFactoryImpl;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * 支付配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableConfigurationProperties(PayProperties.class)
 public class YudaoPayAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/config/YudaoSmsAutoConfiguration.java
Patch:
@@ -2,15 +2,15 @@
 
 import cn.iocoder.yudao.framework.sms.core.client.SmsClientFactory;
 import cn.iocoder.yudao.framework.sms.core.client.impl.SmsClientFactoryImpl;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * 短信配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoSmsAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-biz-social/src/main/java/cn/iocoder/yudao/framework/social/config/YudaoSocialAutoConfiguration.java
Patch:
@@ -6,10 +6,10 @@
 import com.xkcoding.justauth.autoconfigure.JustAuthProperties;
 import lombok.extern.slf4j.Slf4j;
 import me.zhyd.oauth.cache.AuthStateCache;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.context.annotation.Primary;
 
 /**
@@ -19,7 +19,7 @@
  * @date 2021-10-30
  */
 @Slf4j
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableConfigurationProperties(JustAuthProperties.class)
 public class YudaoSocialAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/config/YudaoTenantAutoConfiguration.java
Patch:
@@ -21,11 +21,11 @@
 import com.baomidou.mybatisplus.extension.plugins.inner.TenantLineInnerInterceptor;
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.config.BeanPostProcessor;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.context.annotation.Primary;
 import org.springframework.data.redis.cache.RedisCacheConfiguration;
 import org.springframework.data.redis.cache.RedisCacheManager;
@@ -35,7 +35,7 @@
 
 import java.util.Objects;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @ConditionalOnProperty(prefix = "yudao.tenant", value = "enable", matchIfMissing = true) // 允许使用 yudao.tenant.enable=false 禁用多租户
 @EnableConfigurationProperties(TenantProperties.class)
 public class YudaoTenantAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-captcha/src/main/java/cn/iocoder/yudao/framework/captcha/config/YudaoCaptchaConfiguration.java
Patch:
@@ -4,11 +4,11 @@
 import cn.iocoder.yudao.framework.captcha.core.enums.CaptchaRedisKeyConstants;
 import cn.iocoder.yudao.framework.captcha.core.service.RedisCaptchaServiceImpl;
 import com.anji.captcha.service.CaptchaCacheService;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.data.redis.core.StringRedisTemplate;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoCaptchaConfiguration {
 
     static {

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/config/YudaoFileAutoConfiguration.java
Patch:
@@ -2,15 +2,15 @@
 
 import cn.iocoder.yudao.framework.file.core.client.FileClientFactory;
 import cn.iocoder.yudao.framework.file.core.client.FileClientFactoryImpl;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * 文件配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoFileAutoConfiguration {
 
     @Bean

File: yudao-framework/yudao-spring-boot-starter-flowable/src/main/java/cn/iocoder/yudao/framework/flowable/config/YudaoFlowableConfiguration.java
Patch:
@@ -2,13 +2,13 @@
 
 import cn.iocoder.yudao.framework.common.enums.WebFilterOrderEnum;
 import cn.iocoder.yudao.framework.flowable.core.web.FlowableWebFilter;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.core.task.AsyncListenableTaskExecutor;
 import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoFlowableConfiguration {
 
     /**

File: yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/config/YudaoAsyncAutoConfiguration.java
Patch:
@@ -3,15 +3,15 @@
 import com.alibaba.ttl.TtlRunnable;
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.config.BeanPostProcessor;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableAsync;
 import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
 
 /**
  * 异步任务 Configuration
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableAsync
 public class YudaoAsyncAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/config/YudaoQuartzAutoConfiguration.java
Patch:
@@ -2,14 +2,14 @@
 
 import cn.iocoder.yudao.framework.quartz.core.scheduler.SchedulerManager;
 import org.quartz.Scheduler;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
 /**
  * 定时任务 Configuration
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableScheduling // 开启 Spring 自带的定时任务
 public class YudaoQuartzAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-monitor/src/main/java/cn/iocoder/yudao/framework/tracer/config/YudaoMetricsAutoConfiguration.java
Patch:
@@ -3,17 +3,17 @@
 import io.micrometer.core.instrument.MeterRegistry;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * Metrics 配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @ConditionalOnClass({MeterRegistryCustomizer.class})
 @ConditionalOnProperty(prefix = "yudao.metrics", value = "enable", matchIfMissing = true) // 允许使用 yudao.metrics.enable=false 禁用 Metrics
 public class YudaoMetricsAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-monitor/src/main/java/cn/iocoder/yudao/framework/tracer/config/YudaoTracerAutoConfiguration.java
Patch:
@@ -3,19 +3,19 @@
 import cn.iocoder.yudao.framework.common.enums.WebFilterOrderEnum;
 import cn.iocoder.yudao.framework.tracer.core.aop.BizTraceAspect;
 import cn.iocoder.yudao.framework.tracer.core.filter.TraceFilter;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 /**
  * Tracer 配置类
  *
  * @author mashu
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @ConditionalOnClass({BizTraceAspect.class})
 @EnableConfigurationProperties(TracerProperties.class)
 @ConditionalOnProperty(prefix = "yudao.tracer", value = "enable", matchIfMissing = true)

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/datasource/config/YudaoDataSourceAutoConfiguration.java
Patch:
@@ -2,19 +2,19 @@
 
 import cn.iocoder.yudao.framework.datasource.core.filter.DruidAdRemoveFilter;
 import com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.transaction.annotation.EnableTransactionManagement;
 
 /**
  * 数据库配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableTransactionManagement(proxyTargetClass = true) // 启动事务管理
 @EnableConfigurationProperties(DruidStatProperties.class)
 public class YudaoDataSourceAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/config/YudaoMybatisAutoConfiguration.java
Patch:
@@ -13,17 +13,17 @@
 import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
 import org.apache.ibatis.annotations.Mapper;
 import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.core.env.ConfigurableEnvironment;
 
 /**
  * MyBaits 配置类
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @MapperScan(value = "${yudao.info.base-package}", annotationClass = Mapper.class,
         lazyInitialization = "${mybatis.lazy-initialization:false}") // Mapper 懒加载，目前仅用于单元测试
 public class YudaoMybatisAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/config/YudaoCacheAutoConfiguration.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.framework.redis.config;
 
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.cache.CacheProperties;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.cache.annotation.EnableCaching;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.context.annotation.Primary;
 import org.springframework.data.redis.cache.RedisCacheConfiguration;
 import org.springframework.data.redis.serializer.RedisSerializationContext;
@@ -13,7 +13,7 @@
 /**
  * Cache 配置类，基于 Redis 实现
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableConfigurationProperties({CacheProperties.class})
 @EnableCaching
 public class YudaoCacheAutoConfiguration {

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/config/YudaoRedisAutoConfiguration.java
Patch:
@@ -1,15 +1,15 @@
 package cn.iocoder.yudao.framework.redis.config;
 
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.data.redis.connection.RedisConnectionFactory;
 import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.data.redis.serializer.RedisSerializer;
 
 /**
  * Redis 配置类
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 public class YudaoRedisAutoConfiguration {
 
     /**

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoSecurityAutoConfiguration.java
Patch:
@@ -11,9 +11,9 @@
 import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
 import cn.iocoder.yudao.module.system.api.permission.PermissionApi;
 import org.springframework.beans.factory.config.MethodInvokingFactoryBean;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.security.core.context.SecurityContextHolder;
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 import org.springframework.security.crypto.password.PasswordEncoder;
@@ -30,7 +30,7 @@
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableConfigurationProperties(SecurityProperties.class)
 public class YudaoSecurityAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoWebSecurityConfigurerAdapter.java
Patch:
@@ -4,10 +4,10 @@
 import cn.iocoder.yudao.framework.web.config.WebProperties;
 import com.google.common.collect.HashMultimap;
 import com.google.common.collect.Multimap;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.http.HttpMethod;
 import org.springframework.security.authentication.AuthenticationManager;
 import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
@@ -32,7 +32,7 @@
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)
 public class YudaoWebSecurityConfigurerAdapter extends WebSecurityConfigurerAdapter {
 

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/jackson/config/YudaoJacksonAutoConfiguration.java
Patch:
@@ -8,12 +8,12 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.config.BeanPostProcessor;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 
 import java.time.LocalDateTime;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @Slf4j
 public class YudaoJacksonAutoConfiguration {
 

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/swagger/config/YudaoSwaggerAutoConfiguration.java
Patch:
@@ -2,11 +2,11 @@
 
 import cn.iocoder.yudao.framework.swagger.core.SpringFoxHandlerProviderBeanPostProcessor;
 import com.github.xiaoymin.knife4j.spring.annotations.EnableKnife4j;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.http.HttpHeaders;
 import springfox.documentation.builders.ApiInfoBuilder;
 import springfox.documentation.builders.ExampleBuilder;
@@ -29,7 +29,7 @@
  *
  * @author 芋道源码
  */
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableSwagger2
 @EnableKnife4j
 @ConditionalOnClass({Docket.class, ApiInfoBuilder.class})

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/config/YudaoWebAutoConfiguration.java
Patch:
@@ -9,11 +9,11 @@
 import cn.iocoder.yudao.framework.web.core.handler.GlobalResponseBodyHandler;
 import cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils;
 import org.springframework.beans.factory.annotation.Value;
+import org.springframework.boot.autoconfigure.AutoConfiguration;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
 import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
 import org.springframework.util.AntPathMatcher;
 import org.springframework.util.PathMatcher;
 import org.springframework.web.bind.annotation.RestController;
@@ -26,7 +26,7 @@
 import javax.annotation.Resource;
 import javax.servlet.Filter;
 
-@Configuration(proxyBeanMethods = false)
+@AutoConfiguration
 @EnableConfigurationProperties({WebProperties.class, XssProperties.class})
 public class YudaoWebAutoConfiguration implements WebMvcConfigurer {
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -77,6 +77,8 @@ default List<BpmTaskTodoPageItemRespVO> convertList1(List<Task> tasks,
     }
 
     @Mapping(source = "suspended", target = "suspensionState", qualifiedByName = "convertSuspendedToSuspensionState")
+    @Mapping(target = "claimTime", expression = "java(bean.getClaimTime()==null?null: LocalDateTime.ofInstant(bean.getClaimTime().toInstant(),ZoneId.systemDefault()))")
+    @Mapping(target = "createTime", expression = "java(bean.getCreateTime()==null?null:LocalDateTime.ofInstant(bean.getCreateTime().toInstant(),ZoneId.systemDefault()))")
     BpmTaskTodoPageItemRespVO convert1(Task bean);
 
     @Named("convertSuspendedToSuspensionState")

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/FileClient.java
Patch:
@@ -22,7 +22,7 @@ public interface FileClient {
      * @return 完整路径，即 HTTP 访问地址
      * @throws Exception 上传文件时，抛出 Exception 异常
      */
-    String upload(byte[] content, String path) throws  Exception;
+    String upload(byte[] content, String path, String type) throws  Exception;
 
     /**
      * 删除文件

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/db/DBFileClient.java
Patch:
@@ -21,7 +21,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         getDao().insert(getId(), path, content);
         // 拼接返回路径
         return super.formatFileUrl(config.getDomain(), path);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClient.java
Patch:
@@ -38,7 +38,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         String fileName = FileUtil.getName(filePath);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClient.java
Patch:
@@ -25,7 +25,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         FileUtil.writeBytes(content, filePath);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClient.java
Patch:
@@ -82,10 +82,11 @@ private String buildRegion() {
     }
 
     @Override
-    public String upload(byte[] content, String path) throws Exception {
+    public String upload(byte[] content, String path, String type) throws Exception {
         // 执行上传
         client.putObject(PutObjectArgs.builder()
                 .bucket(config.getBucket()) // bucket 必须传递
+                .contentType(type)
                 .object(path) // 相对路径作为 key
                 .stream(new ByteArrayInputStream(content), content.length, -1) // 文件内容
                 .build());

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClient.java
Patch:
@@ -31,7 +31,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         File file = FileUtils.createTempFile(content);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClientTest.java
Patch:
@@ -25,7 +25,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         if (false) {
             byte[] bytes = client.getContent(path);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClientTest.java
Patch:
@@ -19,7 +19,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         client.delete(path);
     }

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClientTest.java
Patch:
@@ -101,7 +101,7 @@ private void testExecuteUpload(S3FileClientConfig config) throws Exception {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         // 读取文件
         if (true) {

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClientTest.java
Patch:
@@ -23,7 +23,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         if (false) {
             byte[] bytes = client.getContent(path);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImpl.java
Patch:
@@ -230,7 +230,7 @@ public String testFileConfig(Long id) throws Exception {
         this.validateFileConfigExists(id);
         // 上传文件
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        return fileClientFactory.getFileClient(id).upload(content, IdUtil.fastSimpleUUID() + ".jpg");
+        return fileClientFactory.getFileClient(id).upload(content, IdUtil.fastSimpleUUID() + ".jpg", "image/jpeg");
     }
 
     @Override

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImpl.java
Patch:
@@ -52,7 +52,7 @@ public String createFile(String name, String path, byte[] content) {
         // 上传到文件存储器
         FileClient client = fileConfigService.getMasterFileClient();
         Assert.notNull(client, "客户端(master) 不能为空");
-        String url = client.upload(content, path);
+        String url = client.upload(content, path, type);
 
         // 保存到数据库
         FileDO file = new FileDO();

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImplTest.java
Patch:
@@ -240,7 +240,7 @@ public void testFileConfig() throws Exception {
         // mock 获得 Client
         FileClient fileClient = mock(FileClient.class);
         when(fileClientFactory.getFileClient(eq(id))).thenReturn(fileClient);
-        when(fileClient.upload(any(), any())).thenReturn("https://www.iocoder.cn");
+        when(fileClient.upload(any(), any(), any())).thenReturn("https://www.iocoder.cn");
 
         // 调用，并断言
         assertEquals("https://www.iocoder.cn", fileConfigService.testFileConfig(id));

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceTest.java
Patch:
@@ -79,7 +79,7 @@ public void testCreateFile_success() throws Exception {
         FileClient client = mock(FileClient.class);
         when(fileConfigService.getMasterFileClient()).thenReturn(client);
         String url = randomString();
-        when(client.upload(same(content), same(path))).thenReturn(url);
+        when(client.upload(same(content), same(path), same("image/jpeg"))).thenReturn(url);
         when(client.getId()).thenReturn(10L);
         String name = "单测文件名";
         // 调用

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/FileClient.java
Patch:
@@ -22,7 +22,7 @@ public interface FileClient {
      * @return 完整路径，即 HTTP 访问地址
      * @throws Exception 上传文件时，抛出 Exception 异常
      */
-    String upload(byte[] content, String path) throws  Exception;
+    String upload(byte[] content, String path, String type) throws  Exception;
 
     /**
      * 删除文件

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/db/DBFileClient.java
Patch:
@@ -21,7 +21,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         getDao().insert(getId(), path, content);
         // 拼接返回路径
         return super.formatFileUrl(config.getDomain(), path);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClient.java
Patch:
@@ -38,7 +38,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         String fileName = FileUtil.getName(filePath);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClient.java
Patch:
@@ -25,7 +25,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         FileUtil.writeBytes(content, filePath);

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClient.java
Patch:
@@ -82,10 +82,11 @@ private String buildRegion() {
     }
 
     @Override
-    public String upload(byte[] content, String path) throws Exception {
+    public String upload(byte[] content, String path, String type) throws Exception {
         // 执行上传
         client.putObject(PutObjectArgs.builder()
                 .bucket(config.getBucket()) // bucket 必须传递
+                .contentType(type)
                 .object(path) // 相对路径作为 key
                 .stream(new ByteArrayInputStream(content), content.length, -1) // 文件内容
                 .build());

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClient.java
Patch:
@@ -31,7 +31,7 @@ protected void doInit() {
     }
 
     @Override
-    public String upload(byte[] content, String path) {
+    public String upload(byte[] content, String path, String type) {
         // 执行写入
         String filePath = getFilePath(path);
         File file = FileUtils.createTempFile(content);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClientTest.java
Patch:
@@ -25,7 +25,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         if (false) {
             byte[] bytes = client.getContent(path);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClientTest.java
Patch:
@@ -19,7 +19,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         client.delete(path);
     }

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/s3/S3FileClientTest.java
Patch:
@@ -101,7 +101,7 @@ private void testExecuteUpload(S3FileClientConfig config) throws Exception {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         // 读取文件
         if (true) {

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClientTest.java
Patch:
@@ -23,7 +23,7 @@ public void test() {
         // 上传文件
         String path = IdUtil.fastSimpleUUID() + ".jpg";
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        String fullPath = client.upload(content, path);
+        String fullPath = client.upload(content, path, "image/jpeg");
         System.out.println("访问地址：" + fullPath);
         if (false) {
             byte[] bytes = client.getContent(path);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImpl.java
Patch:
@@ -230,7 +230,7 @@ public String testFileConfig(Long id) throws Exception {
         this.validateFileConfigExists(id);
         // 上传文件
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
-        return fileClientFactory.getFileClient(id).upload(content, IdUtil.fastSimpleUUID() + ".jpg");
+        return fileClientFactory.getFileClient(id).upload(content, IdUtil.fastSimpleUUID() + ".jpg", "image/jpeg");
     }
 
     @Override

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImpl.java
Patch:
@@ -52,7 +52,7 @@ public String createFile(String name, String path, byte[] content) {
         // 上传到文件存储器
         FileClient client = fileConfigService.getMasterFileClient();
         Assert.notNull(client, "客户端(master) 不能为空");
-        String url = client.upload(content, path);
+        String url = client.upload(content, path, type);
 
         // 保存到数据库
         FileDO file = new FileDO();

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImplTest.java
Patch:
@@ -240,7 +240,7 @@ public void testFileConfig() throws Exception {
         // mock 获得 Client
         FileClient fileClient = mock(FileClient.class);
         when(fileClientFactory.getFileClient(eq(id))).thenReturn(fileClient);
-        when(fileClient.upload(any(), any())).thenReturn("https://www.iocoder.cn");
+        when(fileClient.upload(any(), any(), any())).thenReturn("https://www.iocoder.cn");
 
         // 调用，并断言
         assertEquals("https://www.iocoder.cn", fileConfigService.testFileConfig(id));

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceTest.java
Patch:
@@ -79,7 +79,7 @@ public void testCreateFile_success() throws Exception {
         FileClient client = mock(FileClient.class);
         when(fileConfigService.getMasterFileClient()).thenReturn(client);
         String url = randomString();
-        when(client.upload(same(content), same(path))).thenReturn(url);
+        when(client.upload(same(content), same(path), same("image/jpeg"))).thenReturn(url);
         when(client.getId()).thenReturn(10L);
         String name = "单测文件名";
         // 调用

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/message/NotifyMessageBaseVO.java
Patch:
@@ -34,8 +34,8 @@ public class NotifyMessageBaseVO {
     @NotNull(message = "内容不能为空")
     private String content;
 
-    @ApiModelProperty(value = "是否已读 0-未读  1-已读")
-    private Integer readStatus;
+    @ApiModelProperty(value = "是否已读 false-未读  true-已读")
+    private Boolean readStatus;
 
     @ApiModelProperty(value = "阅读时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateBaseVO.java
Patch:
@@ -29,7 +29,7 @@ public class NotifyTemplateBaseVO {
     @ApiModelProperty(value = "状态：1-启用 0-禁用", required = true)
     @NotNull(message = "状态：1-启用 0-禁用不能为空")
     @InEnum(value = CommonStatusEnum.class, message = "状态必须是 {value}")
-    private String status;
+    private Integer status;
 
     @ApiModelProperty(value = "备注")
     private String remarks;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateExcelVO.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.controller.admin.notify.vo.template;
 
+import cn.iocoder.yudao.module.system.enums.DictTypeConstants;
 import lombok.*;
 import java.util.*;
 import io.swagger.annotations.*;
@@ -30,8 +31,8 @@ public class NotifyTemplateExcelVO {
     private String content;
 
     @ExcelProperty(value = "状态：1-启用 0-禁用", converter = DictConvert.class)
-    @DictFormat("common_status") // TODO 代码优化：建议设置到对应的 XXXDictTypeConstants 枚举类中
-    private String status;
+    @DictFormat(DictTypeConstants.COMMON_STATUS)
+    private Integer status;
 
     @ExcelProperty("备注")
     private String remarks;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notify/vo/template/NotifyTemplateExportReqVO.java
Patch:
@@ -19,7 +19,7 @@ public class NotifyTemplateExportReqVO {
     private String title;
 
     @ApiModelProperty(value = "状态：1-启用 0-禁用")
-    private String status;
+    private Integer status;
 
     @ApiModelProperty(value = "创建时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/notify/NotifyTemplateDO.java
Patch:
@@ -53,7 +53,7 @@ public class NotifyTemplateDO extends BaseDO {
      *
      * 枚举 {@link CommonStatusEnum}
      */
-    private String status;
+    private Integer status;
     /**
      * 备注
      */

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -77,7 +77,8 @@ default List<BpmTaskTodoPageItemRespVO> convertList1(List<Task> tasks,
     }
 
     @Mapping(source = "suspended", target = "suspensionState", qualifiedByName = "convertSuspendedToSuspensionState")
-    @Mapping(target = "createTime", expression = "java(LocalDateTime.ofInstant(bean.getCreateTime().toInstant(),ZoneId.systemDefault()))")
+    @Mapping(target = "claimTime", expression = "java(bean.getClaimTime()==null?null: LocalDateTime.ofInstant(bean.getClaimTime().toInstant(),ZoneId.systemDefault()))")
+    @Mapping(target = "createTime", expression = "java(bean.getCreateTime()==null?null:LocalDateTime.ofInstant(bean.getCreateTime().toInstant(),ZoneId.systemDefault()))")
     BpmTaskTodoPageItemRespVO convert1(Task bean);
 
     @Named("convertSuspendedToSuspensionState")

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -77,6 +77,7 @@ default List<BpmTaskTodoPageItemRespVO> convertList1(List<Task> tasks,
     }
 
     @Mapping(source = "suspended", target = "suspensionState", qualifiedByName = "convertSuspendedToSuspensionState")
+    @Mapping(target = "createTime", expression = "java(LocalDateTime.ofInstant(bean.getCreateTime().toInstant(),ZoneId.systemDefault()))")
     BpmTaskTodoPageItemRespVO convert1(Task bean);
 
     @Named("convertSuspendedToSuspensionState")

File: yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/config/YudaoMQAutoConfiguration.java
Patch:
@@ -78,7 +78,6 @@ public RedisMessageListenerContainer redisMessageListenerContainer(
      * Redis Stream 的 xreadgroup 命令：https://www.geek-book.com/src/docs/redis/redis/redis.io/commands/xreadgroup.html
      */
     @Bean(initMethod = "start", destroyMethod = "stop")
-    @Async // 异步化，可降低 5 秒左右的启动时间
     public StreamMessageListenerContainer<String, ObjectRecord<String, String>> redisStreamMessageListenerContainer(
             RedisMQTemplate redisMQTemplate, List<AbstractStreamMessageListener<?>> listeners) {
         RedisTemplate<String, ?> redisTemplate = redisMQTemplate.getRedisTemplate();

File: yudao-framework/yudao-spring-boot-starter-mq/src/main/java/cn/iocoder/yudao/framework/mq/config/YudaoMQAutoConfiguration.java
Patch:
@@ -78,7 +78,6 @@ public RedisMessageListenerContainer redisMessageListenerContainer(
      * Redis Stream 的 xreadgroup 命令：https://www.geek-book.com/src/docs/redis/redis/redis.io/commands/xreadgroup.html
      */
     @Bean(initMethod = "start", destroyMethod = "stop")
-    @Async // 异步化，可降低 5 秒左右的启动时间
     public StreamMessageListenerContainer<String, ObjectRecord<String, String>> redisStreamMessageListenerContainer(
             RedisMQTemplate redisMQTemplate, List<AbstractStreamMessageListener<?>> listeners) {
         RedisTemplate<String, ?> redisTemplate = redisMQTemplate.getRedisTemplate();

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXLitePayClient.java
Patch:
@@ -50,7 +50,7 @@ public WXLitePayClient(Long channelId, WXPayClientConfig config) {
     @Override
     protected void doInit() {
         WxPayConfig payConfig = new WxPayConfig();
-        BeanUtil.copyProperties(config, payConfig, "keyContent");
+        BeanUtil.copyProperties(config, payConfig, "privateKeyContent","privateCertContent");
         payConfig.setTradeType(WxPayConstants.TradeType.JSAPI); // 设置使用 JS API 支付方式
 //        if (StrUtil.isNotEmpty(config.getKeyContent())) {
 //            payConfig.setKeyContent(config.getKeyContent().getBytes(StandardCharsets.UTF_8));

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -199,8 +199,8 @@ public boolean isProcessDefinitionEquals(@Valid BpmProcessDefinitionCreateReqDTO
         // 校验 BPMN XML 信息
         BpmnModel newModel = buildBpmnModel(createReqDTO.getBpmnBytes());
         BpmnModel oldModel = getBpmnModel(oldProcessDefinition.getId());
-        // TODO  貌似 flowable 不修改这个也不同。需要看看。 sourceSystemId 不同
-        if (FlowableUtils.equals(oldModel, newModel)) {
+        // 对比字节变化
+        if (!FlowableUtils.equals(oldModel, newModel)) {
             return false;
         }
         // 最终发现都一致，则返回 true

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/sms/SmsSendServiceImpl.java
Patch:
@@ -180,7 +180,7 @@ public void receiveSmsStatus(String channelCode, String text) throws Throwable {
         }
         // 更新短信日志的接收结果. 因为量一般不大，所以先使用 for 循环更新
         receiveResults.forEach(result -> smsLogService.updateSmsReceiveResult(result.getLogId(),
-                result.getSuccess(), result.getReceiveTime(), result.getErrorCode(), result.getErrorCode()));
+                result.getSuccess(), result.getReceiveTime(), result.getErrorCode(), result.getErrorMsg()));
     }
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/core/loader/ErrorCodeLoaderImpl.java
Patch:
@@ -10,7 +10,7 @@
 import org.springframework.context.event.EventListener;
 import org.springframework.scheduling.annotation.Scheduled;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -41,7 +41,7 @@ public class ErrorCodeLoaderImpl implements ErrorCodeLoader {
     /**
      * 缓存错误码的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
-    private Date maxUpdateTime;
+    private LocalDateTime maxUpdateTime;
 
     @EventListener(ApplicationReadyEvent.class)
     public void loadErrorCodes() {

File: yudao-framework/yudao-spring-boot-starter-biz-operatelog/src/main/java/cn/iocoder/yudao/framework/operatelog/core/service/OperateLog.java
Patch:
@@ -2,7 +2,7 @@
 
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -85,7 +85,7 @@ public class OperateLog {
     /**
      * 开始时间
      */
-    private Date startTime;
+    private LocalDateTime startTime;
 
     /**
      * 执行时长，单位：毫秒

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/PayOrderNotifyRespDTO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 支付通知 Response DTO
@@ -33,7 +33,7 @@ public class PayOrderNotifyRespDTO {
     /**
      * 支付成功时间
      */
-    private Date successTime;
+    private LocalDateTime successTime;
 
     /**
      * 通知的原始数据

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/PayOrderUnifiedReqDTO.java
Patch:
@@ -7,7 +7,7 @@
 import javax.validation.constraints.DecimalMin;
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -68,7 +68,7 @@ public class PayOrderUnifiedReqDTO {
      * 支付过期时间
      */
     @NotNull(message = "支付过期时间不能为空")
-    private Date expireTime;
+    private LocalDateTime expireTime;
 
     // ========== 拓展参数 ==========
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/dto/PayRefundNotifyDTO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 从渠道返回数据中解析得到的支付退款通知的Notify DTO
@@ -57,7 +57,7 @@ public class PayRefundNotifyDTO {
     /**
      * 退款成功时间
      */
-    private Date refundSuccessTime;
+    private LocalDateTime refundSuccessTime;
 
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXLitePayClient.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.date.DateUtil;
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.StrUtil;
@@ -167,7 +168,7 @@ private PayOrderNotifyRespDTO parseOrderNotifyV3(PayNotifyDataDTO data) throws W
                 .builder()
                 .orderExtensionNo(result.getOutTradeNo())
                 .channelOrderNo(result.getTradeState())
-                .successTime(DateUtil.parse(result.getSuccessTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
+                .successTime(LocalDateTimeUtil.parse(result.getSuccessTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
                 .data(data.getBody())
                 .build();
     }
@@ -181,7 +182,7 @@ private PayOrderNotifyRespDTO parseOrderNotifyV2(PayNotifyDataDTO data) throws W
                 .orderExtensionNo(notifyResult.getOutTradeNo())
                 .channelOrderNo(notifyResult.getTransactionId())
                 .channelUserId(notifyResult.getOpenid())
-                .successTime(DateUtil.parse(notifyResult.getTimeEnd(), "yyyyMMddHHmmss"))
+                .successTime(LocalDateTimeUtil.parse(notifyResult.getTimeEnd(), "yyyyMMddHHmmss"))
                 .data(data.getBody())
                 .build();
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXNativePayClient.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.date.DateUtil;
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.util.io.FileUtils;
@@ -150,7 +151,7 @@ private PayOrderNotifyRespDTO parseOrderNotifyV3(PayNotifyDataDTO data) throws W
                 .builder()
                 .orderExtensionNo(result.getOutTradeNo())
                 .channelOrderNo(result.getTradeState())
-                .successTime(DateUtil.parse(result.getSuccessTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
+                .successTime(LocalDateTimeUtil.parse(result.getSuccessTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
                 .data(data.getBody())
                 .build();
     }
@@ -164,7 +165,7 @@ private PayOrderNotifyRespDTO parseOrderNotifyV2(PayNotifyDataDTO data) throws W
                 .orderExtensionNo(notifyResult.getOutTradeNo())
                 .channelOrderNo(notifyResult.getTransactionId())
                 .channelUserId(notifyResult.getOpenid())
-                .successTime(DateUtil.parse(notifyResult.getTimeEnd(), "yyyyMMddHHmmss"))
+                .successTime(LocalDateTimeUtil.parse(notifyResult.getTimeEnd(), "yyyyMMddHHmmss"))
                 .data(data.getBody())
                 .build();
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPubPayClient.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.date.DateUtil;
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.StrUtil;
@@ -161,7 +162,7 @@ private PayOrderNotifyRespDTO parseOrderNotifyV3(PayNotifyDataDTO data) throws W
                 .builder()
                 .orderExtensionNo(result.getOutTradeNo())
                 .channelOrderNo(result.getTradeState())
-                .successTime(DateUtil.parse(result.getSuccessTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
+                .successTime(LocalDateTimeUtil.parse(result.getSuccessTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
                 .data(data.getBody())
                 .build();
     }
@@ -175,7 +176,7 @@ private PayOrderNotifyRespDTO parseOrderNotifyV2(PayNotifyDataDTO data) throws W
                 .orderExtensionNo(notifyResult.getOutTradeNo())
                 .channelOrderNo(notifyResult.getTransactionId())
                 .channelUserId(notifyResult.getOpenid())
-                .successTime(DateUtil.parse(notifyResult.getTimeEnd(), "yyyyMMddHHmmss"))
+                .successTime(LocalDateTimeUtil.parse(notifyResult.getTimeEnd(), "yyyyMMddHHmmss"))
                 .data(data.getBody())
                 .build();
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/dto/SmsReceiveRespDTO.java
Patch:
@@ -2,7 +2,7 @@
 
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 消息接收 Response DTO
@@ -32,7 +32,7 @@ public class SmsReceiveRespDTO {
     /**
      * 用户接收时间
      */
-    private Date receiveTime;
+    private LocalDateTime receiveTime;
 
     /**
      * 短信 API 发送返回的序号

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/aliyun/AliyunSmsClient.java
Patch:
@@ -28,7 +28,7 @@
 import lombok.Data;
 import lombok.extern.slf4j.Slf4j;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Objects;
 import java.util.function.Function;
@@ -166,13 +166,13 @@ public static class SmsReceiveStatus {
          */
         @JsonProperty("send_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date sendTime;
+        private LocalDateTime sendTime;
         /**
          * 状态报告时间
          */
         @JsonProperty("report_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date reportTime;
+        private LocalDateTime reportTime;
         /**
          * 是否接收成功
          */

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/tencent/TencentSmsClient.java
Patch:
@@ -22,7 +22,7 @@
 import com.tencentcloudapi.sms.v20210111.models.*;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.function.Function;
 import java.util.function.Supplier;
@@ -240,7 +240,7 @@ private static class SmsReceiveStatus {
          */
         @JsonProperty("user_receive_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date receiveTime;
+        private LocalDateTime receiveTime;
 
         /**
          * 国家（或地区）码

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/yunpian/YunpianSmsClient.java
Patch:
@@ -23,6 +23,7 @@
 import lombok.Data;
 import lombok.extern.slf4j.Slf4j;
 
+import java.time.LocalDateTime;
 import java.util.*;
 import java.util.function.Function;
 import java.util.function.Supplier;
@@ -198,7 +199,7 @@ public static class SmsReceiveStatus {
          */
         @JsonProperty("user_receive_time")
         @JsonFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND, timezone = TIME_ZONE_DEFAULT)
-        private Date userReceiveTime;
+        private LocalDateTime userReceiveTime;
 
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/test/java/cn/iocoder/yudao/framework/sms/core/client/impl/aliyun/AliyunSmsClientTest.java
Patch:
@@ -11,7 +11,6 @@
 import cn.iocoder.yudao.framework.sms.core.enums.SmsTemplateAuditStatusEnum;
 import cn.iocoder.yudao.framework.sms.core.property.SmsChannelProperties;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
-import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.framework.sms.core.enums.SmsFrameworkErrorCodeConstants;
 import com.aliyuncs.AcsRequest;
 import com.aliyuncs.IAcsClient;
@@ -27,6 +26,7 @@
 import org.mockito.InjectMocks;
 import org.mockito.Mock;
 
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.function.Function;
 
@@ -125,7 +125,7 @@ public void testDoTParseSmsReceiveStatus() throws Throwable {
         assertEquals("DELIVERED", statuses.get(0).getErrorCode());
         assertEquals("用户接收成功", statuses.get(0).getErrorMsg());
         assertEquals("13900000001", statuses.get(0).getMobile());
-        assertEquals(DateUtils.buildTime(2017, 2, 2, 22, 23, 24), statuses.get(0).getReceiveTime());
+        assertEquals(LocalDateTime.of(2017, 2, 2, 22, 23, 24), statuses.get(0).getReceiveTime());
         assertEquals("12345", statuses.get(0).getSerialNo());
         assertEquals(67890L, statuses.get(0).getLogId());
     }
@@ -181,7 +181,7 @@ public void testInvoke_throwable() throws ClientException {
         when(client.getAcsResponse(any(AcsRequest.class))).thenThrow(ex);
 
         // 调用，并断言异常
-        SmsCommonResult<?> result = smsClient.invoke(request,null);
+        SmsCommonResult<?> result = smsClient.invoke(request, null);
         // 断言
         assertEquals(ex.getErrCode(), result.getApiCode());
         assertEquals(ex.getErrMsg(), result.getApiMsg());

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/test/java/cn/iocoder/yudao/framework/sms/core/client/impl/tencent/TencentSmsClientTest.java
Patch:
@@ -6,7 +6,6 @@
 import cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants;
 import cn.iocoder.yudao.framework.common.util.collection.ArrayUtils;
 import cn.iocoder.yudao.framework.common.util.collection.MapUtils;
-import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.framework.common.util.json.JsonUtils;
 import cn.iocoder.yudao.framework.sms.core.client.SmsCommonResult;
 import cn.iocoder.yudao.framework.sms.core.client.dto.SmsReceiveRespDTO;
@@ -25,6 +24,7 @@
 import org.mockito.InjectMocks;
 import org.mockito.Mock;
 
+import java.time.LocalDateTime;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -146,7 +146,7 @@ public void testDoTParseSmsReceiveStatus() throws Throwable {
         assertEquals("DELIVRD", statuses.get(0).getErrorCode());
         assertEquals("用户短信送达成功", statuses.get(0).getErrorMsg());
         assertEquals("13900000001", statuses.get(0).getMobile());
-        assertEquals(DateUtils.buildTime(2015, 10, 17, 8, 3, 4), statuses.get(0).getReceiveTime());
+        assertEquals(LocalDateTime.of(2015, 10, 17, 8, 3, 4), statuses.get(0).getReceiveTime());
         assertEquals("12345", statuses.get(0).getSerialNo());
         assertEquals(67890L, statuses.get(0).getLogId());
     }

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/test/java/cn/iocoder/yudao/framework/sms/core/client/impl/yunpian/YunpianSmsClientTest.java
Patch:
@@ -10,7 +10,6 @@
 import cn.iocoder.yudao.framework.sms.core.client.dto.SmsTemplateRespDTO;
 import cn.iocoder.yudao.framework.sms.core.enums.SmsTemplateAuditStatusEnum;
 import cn.iocoder.yudao.framework.sms.core.property.SmsChannelProperties;
-import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import com.google.common.collect.Lists;
 import com.yunpian.sdk.YunpianClient;
 import com.yunpian.sdk.api.SmsApi;
@@ -23,6 +22,7 @@
 import org.mockito.InjectMocks;
 import org.mockito.Mock;
 
+import java.time.LocalDateTime;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -115,7 +115,7 @@ public void testDoParseSmsReceiveStatus() throws Throwable {
         assertEquals("", statuses.get(0).getErrorCode());
         assertNull(statuses.get(0).getErrorMsg());
         assertEquals("15205201314", statuses.get(0).getMobile());
-        assertEquals(DateUtils.buildTime(2014, 3, 17, 22, 55, 21), statuses.get(0).getReceiveTime());
+        assertEquals(LocalDateTime.of(2014, 3, 17, 22, 55, 21), statuses.get(0).getReceiveTime());
         assertEquals("9527", statuses.get(0).getSerialNo());
         assertEquals(1024L, statuses.get(0).getLogId());
     }

File: yudao-framework/yudao-spring-boot-starter-config/src/main/java/cn/iocoder/yudao/framework/apollo/internals/ConfigFrameworkDAO.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.yudao.framework.apollo.internals.dto.ConfigRespDTO;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -20,7 +20,7 @@ public interface ConfigFrameworkDAO {
      * @param maxUpdateTime 最大更新时间
      * @return 是否存在
      */
-    int selectCountByUpdateTimeGt(Date maxUpdateTime);
+    int selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
     /**
      * 查询配置列表

File: yudao-framework/yudao-spring-boot-starter-config/src/main/java/cn/iocoder/yudao/framework/apollo/internals/DBConfigRepository.java
Patch:
@@ -18,8 +18,8 @@
 import lombok.extern.slf4j.Slf4j;
 
 import java.lang.reflect.Constructor;
+import java.time.LocalDateTime;
 import java.util.Comparator;
-import java.util.Date;
 import java.util.List;
 import java.util.Properties;
 import java.util.concurrent.Executors;
@@ -48,7 +48,7 @@ public class DBConfigRepository extends AbstractConfigRepository {
     /**
      * 缓存配置的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     /**
      * 配置读取 DAO
@@ -166,7 +166,7 @@ private void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前配置的最大更新时间
      * @return 配置列表
      */
-    private List<ConfigRespDTO> loadConfigIfUpdate(Date maxUpdateTime) {
+    private List<ConfigRespDTO> loadConfigIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadConfigIfUpdate][首次加载全量配置]");

File: yudao-framework/yudao-spring-boot-starter-config/src/main/java/cn/iocoder/yudao/framework/apollo/internals/dto/ConfigRespDTO.java
Patch:
@@ -2,7 +2,7 @@
 
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 配置 Response DTO
@@ -28,6 +28,6 @@ public class ConfigRespDTO {
     /**
      * 更新时间
      */
-    private Date updateTime;
+    private LocalDateTime updateTime;
 
 }

File: yudao-framework/yudao-spring-boot-starter-job/src/main/java/cn/iocoder/yudao/framework/quartz/core/service/JobLogFrameworkService.java
Patch:
@@ -2,7 +2,7 @@
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * Job 日志 Framework Service 接口
@@ -22,7 +22,7 @@ public interface JobLogFrameworkService {
      * @return Job 日志的编号
      */
     Long createJobLog(@NotNull(message = "任务编号不能为空") Long jobId,
-                      @NotNull(message = "开始时间") Date beginTime,
+                      @NotNull(message = "开始时间") LocalDateTime beginTime,
                       @NotEmpty(message = "Job 处理器的名字不能为空") String jobHandlerName,
                       String jobHandlerParam,
                       @NotNull(message = "第几次执行不能为空") Integer executeIndex);
@@ -37,7 +37,7 @@ Long createJobLog(@NotNull(message = "任务编号不能为空") Long jobId,
      * @param result   成功数据
      */
     void updateJobLogResultAsync(@NotNull(message = "日志编号不能为空") Long logId,
-                                 @NotNull(message = "结束时间不能为空") Date endTime,
+                                 @NotNull(message = "结束时间不能为空") LocalDateTime endTime,
                                  @NotNull(message = "运行时长不能为空") Integer duration,
                                  boolean success, String result);
 

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/dataobject/BaseDO.java
Patch:
@@ -7,7 +7,7 @@
 import org.apache.ibatis.type.JdbcType;
 
 import java.io.Serializable;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 基础实体对象
@@ -21,12 +21,12 @@ public abstract class BaseDO implements Serializable {
      * 创建时间
      */
     @TableField(fill = FieldFill.INSERT)
-    private Date createTime;
+    private LocalDateTime createTime;
     /**
      * 最后更新时间
      */
     @TableField(fill = FieldFill.INSERT_UPDATE)
-    private Date updateTime;
+    private LocalDateTime updateTime;
     /**
      * 创建者，目前使用 SysUser 的 id 编号
      *

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/handler/DefaultDBFieldHandler.java
Patch:
@@ -5,7 +5,7 @@
 import com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;
 import org.apache.ibatis.reflection.MetaObject;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Objects;
 
 /**
@@ -22,7 +22,7 @@ public void insertFill(MetaObject metaObject) {
         if (Objects.nonNull(metaObject) && metaObject.getOriginalObject() instanceof BaseDO) {
             BaseDO baseDO = (BaseDO) metaObject.getOriginalObject();
 
-            Date current = new Date();
+            LocalDateTime current = LocalDateTime.now();
             // 创建时间为空，则以当前时间为插入时间
             if (Objects.isNull(baseDO.getCreateTime())) {
                 baseDO.setCreateTime(current);
@@ -49,7 +49,7 @@ public void updateFill(MetaObject metaObject) {
         // 更新时间为空，则以当前时间为更新时间
         Object modifyTime = getFieldValByName("updateTime", metaObject);
         if (Objects.isNull(modifyTime)) {
-            setFieldValByName("updateTime", new Date(), metaObject);
+            setFieldValByName("updateTime", LocalDateTime.now(), metaObject);
         }
 
         // 当前登录用户不为空，更新人为空，则当前登录用户为更新人

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiAccessLog.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 访问日志
@@ -61,12 +61,12 @@ public class ApiAccessLog {
      * 开始请求时间
      */
     @NotNull(message = "开始请求时间不能为空")
-    private Date beginTime;
+    private LocalDateTime beginTime;
     /**
      * 结束请求时间
      */
     @NotNull(message = "结束请求时间不能为空")
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 执行时长，单位：毫秒
      */

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiErrorLog.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 错误日志
@@ -61,7 +61,7 @@ public class ApiErrorLog {
      * 异常时间
      */
     @NotNull(message = "异常时间不能为空")
-    private Date exceptionTime;
+    private LocalDateTime exceptionTime;
     /**
      * 异常名
      */

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/core/handler/GlobalExceptionHandler.java
Patch:
@@ -31,7 +31,7 @@
 import javax.validation.ConstraintViolation;
 import javax.validation.ConstraintViolationException;
 import javax.validation.ValidationException;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 import static cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants.*;
@@ -267,7 +267,7 @@ private void initExceptionLog(ApiErrorLog errorLog, HttpServletRequest request,
         errorLog.setRequestMethod(request.getMethod());
         errorLog.setUserAgent(ServletUtils.getUserAgent(request));
         errorLog.setUserIp(ServletUtil.getClientIP(request));
-        errorLog.setExceptionTime(new Date());
+        errorLog.setExceptionTime(LocalDateTime.now());
     }
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/form/BpmFormRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.ToString;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @ApiModel("管理后台 - 动态表单 Response VO")
@@ -28,6 +28,6 @@ public class BpmFormRespVO extends BpmFormBaseVO {
     private List<String> fields;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/group/BpmUserGroupPageReqVO.java
Patch:
@@ -9,7 +9,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 用户组分页 Request VO")
 @Data
@@ -25,6 +25,6 @@ public class BpmUserGroupPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelPageItemRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 流程模型的分页的每一项 Response VO")
 @Data
@@ -21,7 +21,7 @@ public class BpmModelPageItemRespVO extends BpmModelBaseVO {
     private String formName;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * 最新部署的流程定义
@@ -39,7 +39,7 @@ public static class ProcessDefinition {
         private Integer version;
 
         @ApiModelProperty(value = "部署时间", required = true)
-        private Date deploymentTime;
+        private LocalDateTime deploymentTime;
 
         @ApiModelProperty(value = "中断状态", required = true, example = "1", notes = "参见 SuspensionState 枚举")
         private Integer suspensionState;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/model/BpmModelRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 流程模型的创建 Request VO")
 @Data
@@ -21,6 +21,6 @@ public class BpmModelRespVO extends BpmModelBaseVO {
     private String bpmnXml;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/vo/process/BpmProcessDefinitionPageItemRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 流程定义的分页的每一项 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class BpmProcessDefinitionPageItemRespVO extends BpmProcessDefinitionResp
     private String formName;
 
     @ApiModelProperty(value = "部署时间", required = true)
-    private Date deploymentTime;
+    private LocalDateTime deploymentTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/oa/vo/BpmOALeaveBaseVO.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.oa.vo;
 
 import lombok.*;
-import java.util.*;
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import javax.validation.constraints.*;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -18,11 +18,11 @@ public class BpmOALeaveBaseVO {
     @ApiModelProperty(value = "请假的开始时间", required = true)
     @NotNull(message = "开始时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date startTime;
+    private LocalDateTime startTime;
     @ApiModelProperty(value = "请假的结束时间", required = true)
     @NotNull(message = "结束时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "请假类型", required = true, example = "1", notes = "参见 bpm_oa_type 枚举")
     private Integer type;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/oa/vo/BpmOALeaveCreateReqVO.java
Patch:
@@ -15,7 +15,7 @@ public class BpmOALeaveCreateReqVO extends BpmOALeaveBaseVO {
 
     @AssertTrue(message = "结束时间，需要在开始时间之后")
     public boolean isEndTimeValid() {
-        return !getEndTime().before(getStartTime());
+        return !getEndTime().isBefore(getStartTime());
     }
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/oa/vo/BpmOALeavePageReqVO.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.bpm.controller.admin.oa.vo;
 
 import lombok.*;
-import java.util.*;
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -25,6 +25,6 @@ public class BpmOALeavePageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "申请时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/oa/vo/BpmOALeaveRespVO.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.format.annotation.DateTimeFormat;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -24,7 +24,7 @@ public class BpmOALeaveRespVO extends BpmOALeaveBaseVO {
     @ApiModelProperty(value = "申请时间", required = true)
     @NotNull(message = "申请时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "流程id")
     private String processInstanceId;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/activity/BpmActivityRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 流程活动的 Response VO")
 @Data
@@ -16,9 +16,9 @@ public class BpmActivityRespVO {
     private String type;
 
     @ApiModelProperty(value = "流程活动的开始时间", required = true)
-    private Date startTime;
+    private LocalDateTime startTime;
     @ApiModelProperty(value = "流程活动的结束时间", required = true)
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "关联的流程任务的编号", example = "2048", notes = "关联的流程任务，只有 UserTask 等类型才有")
     private String taskId;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/instance/BpmProcessInstanceMyPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -35,6 +35,6 @@ public class BpmProcessInstanceMyPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "创建时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/instance/BpmProcessInstancePageItemRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @ApiModel("管理后台 - 流程实例的分页 Item Response VO")
@@ -30,10 +30,10 @@ public class BpmProcessInstancePageItemRespVO {
     private Integer result;
 
     @ApiModelProperty(value = "提交时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "结束时间", required = true)
-    private Date endTime;
+    private LocalDateTime endTime;
 
     /**
      * 当前任务

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/instance/BpmProcessInstanceRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Map;
 
@@ -28,10 +28,10 @@ public class BpmProcessInstanceRespVO {
     private Integer result;
 
     @ApiModelProperty(value = "提交时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "结束时间", required = true)
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "提交的表单值", required = true)
     private Map<String, Object> formVariables;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskDonePageItemRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 流程任务的 Done 已完成的分页项 Response VO")
 @Data
@@ -15,7 +15,7 @@
 public class BpmTaskDonePageItemRespVO extends BpmTaskTodoPageItemRespVO {
 
     @ApiModelProperty(value = "结束时间", required = true)
-    private Date endTime;
+    private LocalDateTime endTime;
     @ApiModelProperty(value = "持续时间", required = true, example = "1000")
     private Long durationInMillis;
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskDonePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -23,10 +23,10 @@ public class BpmTaskDonePageReqVO extends PageParam {
 
     @ApiModelProperty(value = "开始的创建收间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date beginCreateTime;
+    private LocalDateTime beginCreateTime;
 
     @ApiModelProperty(value = "结束的创建时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date endCreateTime;
+    private LocalDateTime endCreateTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskTodoPageItemRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 流程任务的 Running 进行中的分页项 Response VO")
 @Data
@@ -17,10 +17,10 @@ public class BpmTaskTodoPageItemRespVO {
     private String name;
 
     @ApiModelProperty(value = "接收时间", required = true)
-    private Date claimTime;
+    private LocalDateTime claimTime;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "激活状态", required = true, example = "1", notes = "参见 SuspensionState 枚举")
     private Integer suspensionState;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskTodoPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -23,10 +23,10 @@ public class BpmTaskTodoPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "开始的创建收间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date beginCreateTime;
+    private LocalDateTime beginCreateTime;
 
     @ApiModelProperty(value = "结束的创建时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date endCreateTime;
+    private LocalDateTime endCreateTime;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/definition/BpmProcessDefinitionConvert.java
Patch:
@@ -1,6 +1,8 @@
 package cn.iocoder.yudao.module.bpm.convert.definition;
 
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
+import cn.iocoder.yudao.framework.common.util.date.DateUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionPageItemRespVO;
 import cn.iocoder.yudao.module.bpm.controller.admin.definition.vo.process.BpmProcessDefinitionRespVO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmFormDO;
@@ -67,7 +69,7 @@ default BpmProcessDefinitionPageItemRespVO convert(ProcessDefinition bean, Deplo
         BpmProcessDefinitionPageItemRespVO respVO = convert(bean);
         respVO.setSuspensionState(bean.isSuspended() ? SuspensionState.SUSPENDED.getStateCode() : SuspensionState.ACTIVE.getStateCode());
         if (deployment != null) {
-            respVO.setDeploymentTime(deployment.getDeploymentTime());
+            respVO.setDeploymentTime(LocalDateTimeUtil.of(deployment.getDeploymentTime()));
         }
         if (form != null) {
             respVO.setFormName(form.getName());

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.bpm.convert.task;
 
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
 import cn.iocoder.yudao.framework.common.util.number.NumberUtils;
 import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.task.BpmTaskDonePageItemRespVO;
@@ -151,7 +152,7 @@ default BpmTaskExtDO convert2TaskExt(Task task) {
         BpmTaskExtDO taskExtDO = new BpmTaskExtDO().setTaskId(task.getId())
             .setAssigneeUserId(NumberUtils.parseLong(task.getAssignee())).setName(task.getName())
             .setProcessDefinitionId(task.getProcessDefinitionId()).setProcessInstanceId(task.getProcessInstanceId());
-        taskExtDO.setCreateTime(task.getCreateTime());
+        taskExtDO.setCreateTime(LocalDateTimeUtil.of(task.getCreateTime()));
         return taskExtDO;
     }
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/oa/BpmOALeaveDO.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;
 import lombok.*;
-import java.util.*;
+import java.time.LocalDateTime;
 import com.baomidou.mybatisplus.annotation.*;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 
@@ -46,11 +46,11 @@ public class BpmOALeaveDO extends BaseDO {
     /**
      * 开始时间
      */
-    private Date startTime;
+    private LocalDateTime startTime;
     /**
      * 结束时间
      */
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 请假天数
      */

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/task/BpmProcessInstanceExtDO.java
Patch:
@@ -11,7 +11,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -79,7 +79,7 @@ public class BpmProcessInstanceExtDO extends BaseDO {
      *
      * 冗余 HistoricProcessInstance 的 endTime 属性
      */
-    private Date endTime;
+    private LocalDateTime endTime;
 
     /**
      * 提交的表单值

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/task/BpmTaskExtDO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * Bpm 流程任务的拓展表
@@ -67,7 +67,7 @@ public class BpmTaskExtDO extends BaseDO {
      *
      * 冗余 HistoricTaskInstance 的 endTime  属性
      */
-    private Date endTime;
+    private LocalDateTime endTime;
 
     /**
      * 流程实例的编号

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/oa/BpmOALeaveServiceImpl.java
Patch:
@@ -1,6 +1,6 @@
 package cn.iocoder.yudao.module.bpm.service.oa;
 
-import cn.hutool.core.date.DateUtil;
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.module.bpm.api.task.BpmProcessInstanceApi;
 import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;
@@ -46,7 +46,7 @@ public class BpmOALeaveServiceImpl implements BpmOALeaveService {
     @Transactional(rollbackFor = Exception.class)
     public Long createLeave(Long userId, BpmOALeaveCreateReqVO createReqVO) {
         // 插入 OA 请假单
-        long day = DateUtil.betweenDay(createReqVO.getStartTime(), createReqVO.getEndTime(), false);
+        long day = LocalDateTimeUtil.between(createReqVO.getStartTime(), createReqVO.getEndTime()).toDays();
         BpmOALeaveDO leave = BpmOALeaveConvert.INSTANCE.convert(createReqVO).setUserId(userId).setDay(day)
                 .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());
         leaveMapper.insert(leave);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -1 +1 @@
-package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.lang.Assert;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.number.NumberUtils;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.*;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;import cn.iocoder.yudao.module.bpm.dal.mysql.task.BpmProcessInstanceExtMapper;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventPublisher;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.dept.DeptApi;import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import lombok.extern.slf4j.Slf4j;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.flowable.task.api.Task;import org.springframework.context.annotation.Lazy;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import javax.annotation.Resource;import javax.validation.Valid;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * * ProcessDefinition & ProcessInstance & Execution & Task 的关系： *     1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * * HistoricProcessInstance & ProcessInstance 的关系： *     1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private BpmProcessInstanceExtMapper processInstanceExtMapper;    @Resource    @Lazy // 解决循环依赖    private BpmTaskService taskService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private HistoryService historyService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private DeptApi deptApi;    @Resource    private BpmProcessInstanceResultEventPublisher processInstanceResultEventPublisher;    @Resource    private BpmMessageService messageService;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<BpmProcessInstancePageItemRespVO> getMyProcessInstancePage(Long userId,                                                                                 BpmProcessInstanceMyPageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        PageResult<BpmProcessInstanceExtDO> pageResult = processInstanceExtMapper.selectPage(userId, pageReqVO);        if (CollUtil.isEmpty(pageResult.getList())) {            return new PageResult<>(pageResult.getTotal());        }        // 获得流程 Task Map        List<String> processInstanceIds = convertList(pageResult.getList(), BpmProcessInstanceExtDO::getProcessInstanceId);        Map<String, List<Task>> taskMap = taskService.getTaskMapByProcessInstanceIds(processInstanceIds);        // 转换返回        return BpmProcessInstanceConvert.INSTANCE.convertPage(pageResult, taskMap);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null);    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey());    }    @Override    public BpmProcessInstanceRespVO getProcessInstanceVO(String id) {        // 获得流程实例        HistoricProcessInstance processInstance = getHistoricProcessInstance(id);        if (processInstance == null) {            return null;        }        BpmProcessInstanceExtDO processInstanceExt = processInstanceExtMapper.selectByProcessInstanceId(id);        Assert.notNull(processInstanceExt, "流程实例拓展({}) 不存在", id);        // 获得流程定义        ProcessDefinition processDefinition = processDefinitionService                                                    .getProcessDefinition(processInstance.getProcessDefinitionId());        Assert.notNull(processDefinition, "流程定义({}) 不存在", processInstance.getProcessDefinitionId());        BpmProcessDefinitionExtDO processDefinitionExt = processDefinitionService.getProcessDefinitionExt(                processInstance.getProcessDefinitionId());        Assert.notNull(processDefinitionExt, "流程定义拓展({}) 不存在", id);        String bpmnXml = processDefinitionService.getProcessDefinitionBpmnXML(processInstance.getProcessDefinitionId());        // 获得 User        AdminUserRespDTO startUser = adminUserApi.getUser(NumberUtils.parseLong(processInstance.getStartUserId()));        DeptRespDTO dept = null;        if (startUser != null) {            dept = deptApi.getDept(startUser.getDeptId());        }        // 拼接结果        return BpmProcessInstanceConvert.INSTANCE.convert2(processInstance, processInstanceExt,                processDefinition, processDefinitionExt, bpmnXml, startUser, dept);    }    @Override    public void cancelProcessInstance(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。通过历史表查询        deleteProcessInstance(cancelReqVO.getId(),                BpmProcessInstanceDeleteReasonEnum.CANCEL_TASK.format(cancelReqVO.getReason()));    }    /**     * 获得历史的流程实例     *     * @param id 流程实例的编号     * @return 历史的流程实例     */    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public void createProcessInstanceExt(ProcessInstance instance) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition2(instance.getProcessDefinitionId());        // 插入 BpmProcessInstanceExtDO 对象        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getId())                .setProcessDefinitionId(definition.getId())                .setName(instance.getProcessDefinitionName())                .setStartUserId(Long.valueOf(instance.getStartUserId()))                .setCategory(definition.getCategory())                .setStatus(BpmProcessInstanceStatusEnum.RUNNING.getStatus())                .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());        processInstanceExtMapper.insert(instanceExtDO);    }    @Override    public void updateProcessInstanceExtCancel(FlowableCancelledEvent event) {        // 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceExtReject 方法，已经进行更新了        if (BpmProcessInstanceDeleteReasonEnum.isRejectReason((String)event.getCause())) {            return;        }        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(event.getProcessInstanceId())                .setEndTime(new Date()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.CANCEL.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    public void updateProcessInstanceExtComplete(ProcessInstance instance) {        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getProcessInstanceId())                .setEndTime(new Date()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()); // 如果正常完全，说明审批通过        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被通过的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.convert2ApprovedReq(instance));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceExtReject(String id, String reason) {        // 需要主动查询，因为 instance 只有 id 属性        ProcessInstance processInstance = getProcessInstance(id);        // 删除流程实例，以实现驳回任务时，取消整个审批流程        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));        // 更新 status + result        // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，        // 设置 result 为 BpmProcessInstanceStatusEnum.CANCEL，显然和 result 不一定是一致的        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO().setProcessInstanceId(id)                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被不通过的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey) {        // 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 创建流程实例        ProcessInstance instance = runtimeService.startProcessInstanceById(definition.getId(), businessKey, variables);        // 设置流程名字        runtimeService.setProcessInstanceName(instance.getId(), definition.getName());        // 补全流程实例的拓展表        processInstanceExtMapper.updateByProcessInstanceId(new BpmProcessInstanceExtDO().setProcessInstanceId(instance.getId())                .setFormVariables(variables));        return instance.getId();    }}
\ No newline at end of file
+package cn.iocoder.yudao.module.bpm.service.task;import cn.hutool.core.collection.CollUtil;import cn.hutool.core.lang.Assert;import cn.hutool.core.util.StrUtil;import cn.iocoder.yudao.framework.common.pojo.PageResult;import cn.iocoder.yudao.framework.common.util.number.NumberUtils;import cn.iocoder.yudao.module.bpm.api.task.dto.BpmProcessInstanceCreateReqDTO;import cn.iocoder.yudao.module.bpm.controller.admin.task.vo.instance.*;import cn.iocoder.yudao.module.bpm.convert.task.BpmProcessInstanceConvert;import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmProcessInstanceExtDO;import cn.iocoder.yudao.module.bpm.dal.mysql.task.BpmProcessInstanceExtMapper;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceDeleteReasonEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;import cn.iocoder.yudao.module.bpm.framework.bpm.core.event.BpmProcessInstanceResultEventPublisher;import cn.iocoder.yudao.module.bpm.service.definition.BpmProcessDefinitionService;import cn.iocoder.yudao.module.bpm.service.message.BpmMessageService;import cn.iocoder.yudao.module.system.api.dept.DeptApi;import cn.iocoder.yudao.module.system.api.dept.dto.DeptRespDTO;import cn.iocoder.yudao.module.system.api.user.AdminUserApi;import cn.iocoder.yudao.module.system.api.user.dto.AdminUserRespDTO;import lombok.extern.slf4j.Slf4j;import org.flowable.engine.HistoryService;import org.flowable.engine.RuntimeService;import org.flowable.engine.delegate.event.FlowableCancelledEvent;import org.flowable.engine.history.HistoricProcessInstance;import org.flowable.engine.repository.ProcessDefinition;import org.flowable.engine.runtime.ProcessInstance;import org.flowable.task.api.Task;import org.springframework.context.annotation.Lazy;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.validation.annotation.Validated;import javax.annotation.Resource;import javax.validation.Valid;import java.time.LocalDateTime;import java.util.*;import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;import static cn.iocoder.yudao.framework.common.util.collection.CollectionUtils.convertList;import static cn.iocoder.yudao.module.bpm.enums.ErrorCodeConstants.*;/** * 流程实例 Service 实现类 * * ProcessDefinition & ProcessInstance & Execution & Task 的关系： *     1. <a href="https://blog.csdn.net/bobozai86/article/details/105210414" /> * * HistoricProcessInstance & ProcessInstance 的关系： *     1. <a href=" https://my.oschina.net/843294669/blog/71902" /> * * 简单来说，前者 = 历史 + 运行中的流程实例，后者仅是运行中的流程实例 * * @author 芋道源码 */@Service@Validated@Slf4jpublic class BpmProcessInstanceServiceImpl implements BpmProcessInstanceService {    @Resource    private RuntimeService runtimeService;    @Resource    private BpmProcessInstanceExtMapper processInstanceExtMapper;    @Resource    @Lazy // 解决循环依赖    private BpmTaskService taskService;    @Resource    private BpmProcessDefinitionService processDefinitionService;    @Resource    private HistoryService historyService;    @Resource    private AdminUserApi adminUserApi;    @Resource    private DeptApi deptApi;    @Resource    private BpmProcessInstanceResultEventPublisher processInstanceResultEventPublisher;    @Resource    private BpmMessageService messageService;    @Override    public ProcessInstance getProcessInstance(String id) {        return runtimeService.createProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<ProcessInstance> getProcessInstances(Set<String> ids) {        return runtimeService.createProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public PageResult<BpmProcessInstancePageItemRespVO> getMyProcessInstancePage(Long userId,                                                                                 BpmProcessInstanceMyPageReqVO pageReqVO) {        // 通过 BpmProcessInstanceExtDO 表，先查询到对应的分页        PageResult<BpmProcessInstanceExtDO> pageResult = processInstanceExtMapper.selectPage(userId, pageReqVO);        if (CollUtil.isEmpty(pageResult.getList())) {            return new PageResult<>(pageResult.getTotal());        }        // 获得流程 Task Map        List<String> processInstanceIds = convertList(pageResult.getList(), BpmProcessInstanceExtDO::getProcessInstanceId);        Map<String, List<Task>> taskMap = taskService.getTaskMapByProcessInstanceIds(processInstanceIds);        // 转换返回        return BpmProcessInstanceConvert.INSTANCE.convertPage(pageResult, taskMap);    }    @Override    @Transactional(rollbackFor = Exception.class)    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqVO createReqVO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition(createReqVO.getProcessDefinitionId());        // 发起流程        return createProcessInstance0(userId, definition, createReqVO.getVariables(), null);    }    @Override    public String createProcessInstance(Long userId, @Valid BpmProcessInstanceCreateReqDTO createReqDTO) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getActiveProcessDefinition(createReqDTO.getProcessDefinitionKey());        // 发起流程        return createProcessInstance0(userId, definition, createReqDTO.getVariables(), createReqDTO.getBusinessKey());    }    @Override    public BpmProcessInstanceRespVO getProcessInstanceVO(String id) {        // 获得流程实例        HistoricProcessInstance processInstance = getHistoricProcessInstance(id);        if (processInstance == null) {            return null;        }        BpmProcessInstanceExtDO processInstanceExt = processInstanceExtMapper.selectByProcessInstanceId(id);        Assert.notNull(processInstanceExt, "流程实例拓展({}) 不存在", id);        // 获得流程定义        ProcessDefinition processDefinition = processDefinitionService                                                    .getProcessDefinition(processInstance.getProcessDefinitionId());        Assert.notNull(processDefinition, "流程定义({}) 不存在", processInstance.getProcessDefinitionId());        BpmProcessDefinitionExtDO processDefinitionExt = processDefinitionService.getProcessDefinitionExt(                processInstance.getProcessDefinitionId());        Assert.notNull(processDefinitionExt, "流程定义拓展({}) 不存在", id);        String bpmnXml = processDefinitionService.getProcessDefinitionBpmnXML(processInstance.getProcessDefinitionId());        // 获得 User        AdminUserRespDTO startUser = adminUserApi.getUser(NumberUtils.parseLong(processInstance.getStartUserId()));        DeptRespDTO dept = null;        if (startUser != null) {            dept = deptApi.getDept(startUser.getDeptId());        }        // 拼接结果        return BpmProcessInstanceConvert.INSTANCE.convert2(processInstance, processInstanceExt,                processDefinition, processDefinitionExt, bpmnXml, startUser, dept);    }    @Override    public void cancelProcessInstance(Long userId, @Valid BpmProcessInstanceCancelReqVO cancelReqVO) {        // 校验流程实例存在        ProcessInstance instance = getProcessInstance(cancelReqVO.getId());        if (instance == null) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_EXISTS);        }        // 只能取消自己的        if (!Objects.equals(instance.getStartUserId(), String.valueOf(userId))) {            throw exception(PROCESS_INSTANCE_CANCEL_FAIL_NOT_SELF);        }        // 通过删除流程实例，实现流程实例的取消,        // 删除流程实例，正则执行任务 ACT_RU_TASK. 任务会被删除。通过历史表查询        deleteProcessInstance(cancelReqVO.getId(),                BpmProcessInstanceDeleteReasonEnum.CANCEL_TASK.format(cancelReqVO.getReason()));    }    /**     * 获得历史的流程实例     *     * @param id 流程实例的编号     * @return 历史的流程实例     */    @Override    public HistoricProcessInstance getHistoricProcessInstance(String id) {        return historyService.createHistoricProcessInstanceQuery().processInstanceId(id).singleResult();    }    @Override    public List<HistoricProcessInstance> getHistoricProcessInstances(Set<String> ids) {        return historyService.createHistoricProcessInstanceQuery().processInstanceIds(ids).list();    }    @Override    public void createProcessInstanceExt(ProcessInstance instance) {        // 获得流程定义        ProcessDefinition definition = processDefinitionService.getProcessDefinition2(instance.getProcessDefinitionId());        // 插入 BpmProcessInstanceExtDO 对象        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getId())                .setProcessDefinitionId(definition.getId())                .setName(instance.getProcessDefinitionName())                .setStartUserId(Long.valueOf(instance.getStartUserId()))                .setCategory(definition.getCategory())                .setStatus(BpmProcessInstanceStatusEnum.RUNNING.getStatus())                .setResult(BpmProcessInstanceResultEnum.PROCESS.getResult());        processInstanceExtMapper.insert(instanceExtDO);    }    @Override    public void updateProcessInstanceExtCancel(FlowableCancelledEvent event) {        // 判断是否为 Reject 不通过。如果是，则不进行更新.        // 因为，updateProcessInstanceExtReject 方法，已经进行更新了        if (BpmProcessInstanceDeleteReasonEnum.isRejectReason((String)event.getCause())) {            return;        }        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(event.getProcessInstanceId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(event.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.CANCEL.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Override    public void updateProcessInstanceExtComplete(ProcessInstance instance) {        // 需要主动查询，因为 instance 只有 id 属性        // 另外，此时如果去查询 ProcessInstance 的话，字段是不全的，所以去查询了 HistoricProcessInstance        HistoricProcessInstance processInstance = getHistoricProcessInstance(instance.getId());        // 更新拓展表        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO()                .setProcessInstanceId(instance.getProcessInstanceId())                .setEndTime(LocalDateTime.now()) // 由于 ProcessInstance 里没有办法拿到 endTime，所以这里设置                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()); // 如果正常完全，说明审批通过        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被通过的消息        messageService.sendMessageWhenProcessInstanceApprove(BpmProcessInstanceConvert.INSTANCE.convert2ApprovedReq(instance));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    @Transactional(rollbackFor = Exception.class)    public void updateProcessInstanceExtReject(String id, String reason) {        // 需要主动查询，因为 instance 只有 id 属性        ProcessInstance processInstance = getProcessInstance(id);        // 删除流程实例，以实现驳回任务时，取消整个审批流程        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));        // 更新 status + result        // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，        // 设置 result 为 BpmProcessInstanceStatusEnum.CANCEL，显然和 result 不一定是一致的        BpmProcessInstanceExtDO instanceExtDO = new BpmProcessInstanceExtDO().setProcessInstanceId(id)                .setStatus(BpmProcessInstanceStatusEnum.FINISH.getStatus())                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult());        processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);        // 发送流程被不通过的消息        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));        // 发送流程实例的状态事件        processInstanceResultEventPublisher.sendProcessInstanceResultEvent(                BpmProcessInstanceConvert.INSTANCE.convert(this, processInstance, instanceExtDO.getResult()));    }    private void deleteProcessInstance(String id, String reason) {        runtimeService.deleteProcessInstance(id, reason);    }    private String createProcessInstance0(Long userId, ProcessDefinition definition,                                          Map<String, Object> variables, String businessKey) {        // 校验流程定义        if (definition == null) {            throw exception(PROCESS_DEFINITION_NOT_EXISTS);        }        if (definition.isSuspended()) {            throw exception(PROCESS_DEFINITION_IS_SUSPENDED);        }        // 创建流程实例        ProcessInstance instance = runtimeService.startProcessInstanceById(definition.getId(), businessKey, variables);        // 设置流程名字        runtimeService.setProcessInstanceName(instance.getId(), definition.getName());        // 补全流程实例的拓展表        processInstanceExtMapper.updateByProcessInstanceId(new BpmProcessInstanceExtDO().setProcessInstanceId(instance.getId())                .setFormVariables(variables));        return instance.getId();    }}
\ No newline at end of file

File: yudao-module-infra/yudao-module-infra-api/src/main/java/cn/iocoder/yudao/module/infra/api/logger/dto/ApiAccessLogCreateReqDTO.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 访问日志
@@ -61,12 +61,12 @@ public class ApiAccessLogCreateReqDTO {
      * 开始请求时间
      */
     @NotNull(message = "开始请求时间不能为空")
-    private Date beginTime;
+    private LocalDateTime beginTime;
     /**
      * 结束请求时间
      */
     @NotNull(message = "结束请求时间不能为空")
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 执行时长，单位：毫秒
      */

File: yudao-module-infra/yudao-module-infra-api/src/main/java/cn/iocoder/yudao/module/infra/api/logger/dto/ApiErrorLogCreateReqDTO.java
Patch:
@@ -3,7 +3,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 错误日志
@@ -61,7 +61,7 @@ public class ApiErrorLogCreateReqDTO {
      * 异常时间
      */
     @NotNull(message = "异常时间不能为空")
-    private Date exceptionTime;
+    private LocalDateTime exceptionTime;
     /**
      * 异常名
      */

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/column/CodegenColumnRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 代码生成字段定义 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class CodegenColumnRespVO extends CodegenColumnBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/table/CodegenTablePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,6 +26,6 @@ public class CodegenTablePageReqVO extends PageParam {
 
     @ApiModelProperty(value = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/table/CodegenTableRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 代码生成表定义 Response VO")
 @Data
@@ -21,9 +21,9 @@ public class CodegenTableRespVO extends CodegenTableBaseVO {
     private Integer dataSourceConfigId;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "更新时间", required = true)
-    private Date updateTime;
+    private LocalDateTime updateTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 参数配置 Excel 导出响应 VO
@@ -41,6 +41,6 @@ public class ConfigExcelVO {
     private String remark;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -24,6 +24,6 @@ public class ConfigExportReqVO {
 
     @ApiModelProperty(value = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -29,6 +29,6 @@ public class ConfigPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigRespVO.java
Patch:
@@ -7,7 +7,7 @@
 
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Size;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 参数配置信息 Response VO")
 @Data
@@ -26,6 +26,6 @@ public class ConfigRespVO extends ConfigBaseVO {
     private Integer type;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/vo/DataSourceConfigRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.infra.controller.admin.db.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 数据源配置 Response VO")
@@ -14,6 +15,6 @@ public class DataSourceConfigRespVO extends DataSourceConfigBaseVO {
     private Integer id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,6 +26,6 @@ public class FileConfigPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/config/FileConfigRespVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 文件配置 Response VO")
 @Data
@@ -31,6 +31,6 @@ public class FileConfigRespVO extends FileConfigBaseVO {
     private FileClientConfig config;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FilePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,6 +26,6 @@ public class FilePageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FileRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel(value = "管理后台 - 文件 Response VO", description = "不返回 content 字段，太大")
 @Data
@@ -32,6 +32,6 @@ public class FileRespVO {
     private Integer size;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/JobController.java
Patch:
@@ -22,9 +22,9 @@
 import javax.servlet.http.HttpServletResponse;
 import javax.validation.Valid;
 import java.io.IOException;
+import java.time.LocalDateTime;
 import java.util.Collection;
 import java.util.Collections;
-import java.util.Date;
 import java.util.List;
 
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
@@ -133,8 +133,8 @@ public void exportJobExcel(@Valid JobExportReqVO exportReqVO,
             @ApiImplicitParam(name = "count", value = "数量", example = "5", dataTypeClass = Long.class)
     })
     @PreAuthorize("@ss.hasPermission('infra:job:query')")
-    public CommonResult<List<Date>> getJobNextTimes(@RequestParam("id") Long id,
-                                                    @RequestParam(value = "count", required = false, defaultValue = "5") Integer count) {
+    public CommonResult<List<LocalDateTime>> getJobNextTimes(@RequestParam("id") Long id,
+                                                   @RequestParam(value = "count", required = false, defaultValue = "5") Integer count) {
         JobDO job = jobService.getJob(id);
         if (job == null) {
             return success(Collections.emptyList());

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/job/JobRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.ToString;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 定时任务 Response VO")
 @Data
@@ -26,6 +26,6 @@ public class JobRespVO extends JobBaseVO {
     private String handlerName;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/log/JobLogBaseVO.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.format.annotation.DateTimeFormat;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -34,11 +34,11 @@ public class JobLogBaseVO {
     @ApiModelProperty(value = "开始执行时间", required = true)
     @NotNull(message = "开始执行时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date beginTime;
+    private LocalDateTime beginTime;
 
     @ApiModelProperty(value = "结束执行时间")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "执行时长", example = "123")
     private Integer duration;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/log/JobLogExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -21,11 +21,11 @@ public class JobLogExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始执行时间")
-    private Date beginTime;
+    private LocalDateTime beginTime;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "结束执行时间")
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "任务状态", notes = "参见 JobLogStatusEnum 枚举")
     private Integer status;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/log/JobLogPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,11 +26,11 @@ public class JobLogPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始执行时间")
-    private Date beginTime;
+    private LocalDateTime beginTime;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "结束执行时间")
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "任务状态", notes = "参见 JobLogStatusEnum 枚举")
     private Integer status;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/job/vo/log/JobLogRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 定时任务日志 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class JobLogRespVO extends JobLogBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogBaseVO.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.format.annotation.DateTimeFormat;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -54,12 +54,12 @@ public class ApiAccessLogBaseVO {
     @ApiModelProperty(value = "开始请求时间", required = true)
     @NotNull(message = "开始请求时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date beginTime;
+    private LocalDateTime beginTime;
 
     @ApiModelProperty(value = "结束请求时间", required = true)
     @NotNull(message = "结束请求时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ApiModelProperty(value = "执行时长", required = true, example = "100")
     @NotNull(message = "执行时长不能为空")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 访问日志 Excel VO
@@ -48,10 +48,10 @@ public class ApiAccessLogExcelVO {
     private String userAgent;
 
     @ExcelProperty("开始请求时间")
-    private Date beginTime;
+    private LocalDateTime beginTime;
 
     @ExcelProperty("结束请求时间")
-    private Date endTime;
+    private LocalDateTime endTime;
 
     @ExcelProperty("执行时长")
     private Integer duration;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,7 +27,7 @@ public class ApiAccessLogExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始请求时间")
-    private Date[] beginTime;
+    private LocalDateTime[] beginTime;
 
     @ApiModelProperty(value = "执行时长", example = "100", notes = "大于等于，单位：毫秒")
     private Integer duration;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -32,7 +32,7 @@ public class ApiAccessLogPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始请求时间")
-    private Date[] beginTime;
+    private LocalDateTime[] beginTime;
 
     @ApiModelProperty(value = "执行时长", example = "100", notes = "大于等于，单位：毫秒")
     private Integer duration;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apiaccesslog/ApiAccessLogRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - API 访问日志 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class ApiAccessLogRespVO extends ApiAccessLogBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apierrorlog/ApiErrorLogBaseVO.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.format.annotation.DateTimeFormat;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -55,7 +55,7 @@ public class ApiErrorLogBaseVO {
     @ApiModelProperty(value = "异常发生时间", required = true)
     @NotNull(message = "异常发生时间不能为空")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date exceptionTime;
+    private LocalDateTime exceptionTime;
 
     @ApiModelProperty(value = "异常名", required = true)
     @NotNull(message = "异常名不能为空")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apierrorlog/ApiErrorLogExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,7 +27,7 @@ public class ApiErrorLogExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "异常发生时间")
-    private Date[] exceptionTime;
+    private LocalDateTime[] exceptionTime;
 
     @ApiModelProperty(value = "处理状态", example = "0")
     private Integer processStatus;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apierrorlog/ApiErrorLogPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -32,7 +32,7 @@ public class ApiErrorLogPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "异常发生时间")
-    private Date[] exceptionTime;
+    private LocalDateTime[] exceptionTime;
 
     @ApiModelProperty(value = "处理状态", example = "0")
     private Integer processStatus;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/logger/vo/apierrorlog/ApiErrorLogRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - API 错误日志 Response VO")
 @Data
@@ -18,10 +18,10 @@ public class ApiErrorLogRespVO extends ApiErrorLogBaseVO {
     private Integer id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "处理时间", required = true)
-    private Date processTime;
+    private LocalDateTime processTime;
 
     @ApiModelProperty(value = "处理用户编号", example = "233")
     private Integer processUserId;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoExcelVO.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.infra.controller.admin.test.vo;
 
 import lombok.*;
-import java.util.*;
-import io.swagger.annotations.*;
+
+import java.time.LocalDateTime;
 
 import com.alibaba.excel.annotation.ExcelProperty;
 
@@ -33,6 +33,6 @@ public class TestDemoExcelVO {
     private String remark;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoExportReqVO.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.infra.controller.admin.test.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
-import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
@@ -29,6 +29,6 @@ public class TestDemoExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoPageReqVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.infra.controller.admin.test.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -31,6 +32,6 @@ public class TestDemoPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/test/vo/TestDemoRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.infra.controller.admin.test.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 字典类型 Response VO")
@@ -14,6 +15,6 @@ public class TestDemoRespVO extends TestDemoBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/job/JobLogDO.java
Patch:
@@ -7,7 +7,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 定时任务的执行日志
@@ -56,11 +56,11 @@ public class JobLogDO extends BaseDO {
     /**
      * 开始执行时间
      */
-    private Date beginTime;
+    private LocalDateTime beginTime;
     /**
      * 结束执行时间
      */
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 执行时长，单位：毫秒
      */

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/logger/ApiAccessLogDO.java
Patch:
@@ -8,7 +8,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 访问日志
@@ -84,11 +84,11 @@ public class ApiAccessLogDO extends BaseDO {
     /**
      * 开始请求时间
      */
-    private Date beginTime;
+    private LocalDateTime beginTime;
     /**
      * 结束请求时间
      */
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 执行时长，单位：毫秒
      */

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/logger/ApiErrorLogDO.java
Patch:
@@ -8,7 +8,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * API 异常数据
@@ -84,7 +84,7 @@ public class ApiErrorLogDO extends BaseDO {
     /**
      * 异常发生时间
      */
-    private Date exceptionTime;
+    private LocalDateTime exceptionTime;
     /**
      * 异常名
      *
@@ -145,7 +145,7 @@ public class ApiErrorLogDO extends BaseDO {
     /**
      * 处理时间
      */
-    private Date processTime;
+    private LocalDateTime processTime;
     /**
      * 处理用户编号
      *

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/file/FileConfigMapper.java
Patch:
@@ -8,7 +8,7 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 文件配置 Mapper
@@ -27,6 +27,6 @@ default PageResult<FileConfigDO> selectPage(FileConfigPageReqVO reqVO) {
     }
 
     @Select("SELECT COUNT(*) FROM infra_file_config WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/db/DatabaseTableServiceImpl.java
Patch:
@@ -53,7 +53,7 @@ public List<TableInfo> getTableList0(Long dataSourceConfigId, String name) {
         if (StrUtil.isNotEmpty(name)) {
             strategyConfig.addInclude(name);
         }
-        GlobalConfig globalConfig = new GlobalConfig.Builder().dateType(DateType.ONLY_DATE).build(); // 只使用 Date 类型，不使用 LocalDate
+        GlobalConfig globalConfig = new GlobalConfig.Builder().dateType(DateType.TIME_PACK).build(); // 只使用 Date 类型，不使用 LocalDate
         ConfigBuilder builder = new ConfigBuilder(null, dataSourceConfig, strategyConfig.build(),
                 null, globalConfig, null);
         // 按照名字排序

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImpl.java
Patch:
@@ -31,8 +31,8 @@
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
 import javax.validation.Validator;
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 import java.util.Map;
 
@@ -60,7 +60,7 @@ public class FileConfigServiceImpl implements FileConfigService {
      * 缓存菜单的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
     @Getter
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     @Resource
     private FileClientFactory fileClientFactory;
@@ -118,7 +118,7 @@ public void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前文件配置的最大更新时间
      * @return 文件配置列表
      */
-    private List<FileConfigDO> loadFileConfigIfUpdate(Date maxUpdateTime) {
+    private List<FileConfigDO> loadFileConfigIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadFileConfigIfUpdate][首次加载全量文件配置]");

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/job/JobLogServiceImpl.java
Patch:
@@ -12,8 +12,8 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 /**
@@ -30,7 +30,7 @@ public class JobLogServiceImpl implements JobLogService {
     private JobLogMapper jobLogMapper;
 
     @Override
-    public Long createJobLog(Long jobId, Date beginTime, String jobHandlerName, String jobHandlerParam, Integer executeIndex) {
+    public Long createJobLog(Long jobId, LocalDateTime beginTime, String jobHandlerName, String jobHandlerParam, Integer executeIndex) {
         JobLogDO log = JobLogDO.builder().jobId(jobId).handlerName(jobHandlerName).handlerParam(jobHandlerParam).executeIndex(executeIndex)
                 .beginTime(beginTime).status(JobLogStatusEnum.RUNNING.getStatus()).build();
         jobLogMapper.insert(log);
@@ -39,7 +39,7 @@ public Long createJobLog(Long jobId, Date beginTime, String jobHandlerName, Stri
 
     @Override
     @Async
-    public void updateJobLogResultAsync(Long logId, Date endTime, Integer duration, boolean success, String result) {
+    public void updateJobLogResultAsync(Long logId, LocalDateTime endTime, Integer duration, boolean success, String result) {
         try {
             JobLogDO updateObj = JobLogDO.builder().id(logId).endTime(endTime).duration(duration)
                     .status(success ? JobLogStatusEnum.SUCCESS.getStatus() : JobLogStatusEnum.FAILURE.getStatus()).result(result).build();

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/logger/ApiErrorLogServiceImpl.java
Patch:
@@ -14,7 +14,7 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -57,7 +57,7 @@ public void updateApiErrorLogProcess(Long id, Integer processStatus, Long proces
         }
         // 标记处理
         apiErrorLogMapper.updateById(ApiErrorLogDO.builder().id(id).processStatus(processStatus)
-                .processUserId(processUserId).processTime(new Date()).build());
+                .processUserId(processUserId).processTime(LocalDateTime.now()).build());
     }
 
 }

File: yudao-module-mall/yudao-module-coupon-biz/src/main/java/cn/iocoder/yudao/module/coupon/controller/admin/coupon/vo/CouponRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.coupon.controller.admin.coupon.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 优惠券 Response VO")
@@ -14,6 +15,6 @@ public class CouponRespVO extends CouponBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-coupon-biz/src/main/java/cn/iocoder/yudao/module/coupon/controller/admin/templete/vo/CouponTempleteRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.coupon.controller.admin.templete.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 优惠券模板 Response VO")
@@ -14,6 +15,6 @@ public class CouponTempleteRespVO extends CouponTempleteBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-market-biz/src/main/java/cn/iocoder/yudao/module/market/controller/admin/banner/vo/BannerCreateReqVO.java
Patch:
@@ -1,13 +1,10 @@
 package cn.iocoder.yudao.module.market.controller.admin.banner.vo;
 
 import io.swagger.annotations.ApiModel;
-import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
-
 /**
  * @author xia
  */

File: yudao-module-mall/yudao-module-market-biz/src/main/java/cn/iocoder/yudao/module/market/controller/admin/banner/vo/BannerPageReqVO.java
Patch:
@@ -10,7 +10,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -33,6 +33,6 @@ public class BannerPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-mall/yudao-module-market-biz/src/main/java/cn/iocoder/yudao/module/market/controller/admin/banner/vo/BannerRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.ToString;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * @author xia
@@ -21,6 +21,6 @@ public class BannerRespVO  extends BannerBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-market-biz/src/main/java/cn/iocoder/yudao/module/market/dal/dataobject/discount/DiscountActivityDO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 限时折扣活动 DO
@@ -42,11 +42,11 @@ public class DiscountActivityDO extends BaseDO {
     /**
      * 开始时间
      */
-    private Date startTime;
+    private LocalDateTime startTime;
     /**
      * 结束时间
      */
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 备注
      */

File: yudao-module-mall/yudao-module-market-biz/src/main/java/cn/iocoder/yudao/module/market/dal/dataobject/discount/DiscountProductDO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 限时折扣商品 DO
@@ -46,11 +46,11 @@ public class DiscountProductDO extends BaseDO {
     /**
      * 开始时间
      */
-    private Date startTime;
+    private LocalDateTime startTime;
     /**
      * 结束时间
      */
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 销售价格，单位：分
      *

File: yudao-module-mall/yudao-module-market-biz/src/main/java/cn/iocoder/yudao/module/market/dal/dataobject/reward/RewardActivityDO.java
Patch:
@@ -12,7 +12,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -44,11 +44,11 @@ public class RewardActivityDO extends BaseDO {
     /**
      * 开始时间
      */
-    private Date startTime;
+    private LocalDateTime startTime;
     /**
      * 结束时间
      */
-    private Date endTime;
+    private LocalDateTime endTime;
     /**
      * 备注
      */

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,6 +26,6 @@ public class ProductBrandPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/brand/vo/ProductBrandRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 品牌 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class ProductBrandRespVO extends ProductBrandBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/ProductCategoryRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.product.controller.admin.category.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 商品分类 Response VO")
@@ -14,6 +15,6 @@ public class ProductCategoryRespVO extends ProductCategoryBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyAndValueRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @ApiModel("管理后台 - 规格 + 规格值 Response VO")
@@ -20,7 +20,7 @@ public class ProductPropertyAndValueRespVO extends ProductPropertyBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * 规格值的集合

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/property/ProductPropertyPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,6 +26,6 @@ public class ProductPropertyPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/property/vo/value/ProductPropertyValueRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 规格值 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class ProductPropertyValueRespVO extends ProductPropertyValueBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/sku/vo/ProductSkuRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @ApiModel("管理后台 - 商品sku Response VO")
@@ -19,7 +19,7 @@ public class ProductSkuRespVO extends ProductSkuBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * 规格值数组

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuDetailRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @ApiModel(value = "管理后台 - 商品 SPU 详细 Response VO", description = "包括关联的 SKU 等信息")
@@ -20,7 +20,7 @@ public class ProductSpuDetailRespVO extends ProductSpuBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * SKU 数组

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuPageReqVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.product.controller.admin.spu.vo;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -46,6 +47,6 @@ public class ProductSpuPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/vo/ProductSpuRespVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 // TODO @Luowenfeng：这个类只返回 SPU 相关的信息，删除 skus、categoryIds、productPropertyViews；明细使用 SpuDetailRespVO 替代
@@ -22,7 +22,7 @@ public class ProductSpuRespVO extends ProductSpuBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * SKU 数组

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/comment/ProductCommentDO.java
Patch:
@@ -10,7 +10,7 @@
 import com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -117,7 +117,7 @@ public class ProductCommentDO extends BaseDO {
     /**
      * 商家回复时间
      */
-    private Date replyTime;
+    private LocalDateTime replyTime;
 
     /**
      * 有用的计数

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/controller/app/order/vo/TradeOrderItemRespVO.java
Patch:
@@ -4,7 +4,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("交易订单项 Response VO")
 @Data
@@ -47,7 +47,7 @@ public class TradeOrderItemRespVO {
     @ApiModelProperty(value = "售后订单编号")
     private Integer afterSaleOrderId;
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 
 }

File: yudao-module-mall/yudao-module-trade-biz/src/main/java/cn/iocoder/yudao/module/trade/dal/dataobject/cart/CartItemDO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 购物车的商品信息 DO
@@ -30,7 +30,7 @@ public class CartItemDO extends BaseDO {
     /**
      * 购物时间
      */
-    private Date buyTime; // basket_date
+    private LocalDateTime buyTime; // basket_date
 
     // ========= 基础字段 END =========
 

File: yudao-module-member/yudao-module-member-api/src/main/java/cn/iocoder/yudao/module/member/api/user/dto/UserInfoDTO.java
Patch:
@@ -3,7 +3,7 @@
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 用户信息 Response DTO
@@ -47,6 +47,6 @@ public class UserInfoDTO {
     /**
      * 最后登录时间
      */
-    private Date loginDate;
+    private LocalDateTime loginDate;
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/address/vo/AppAddressRespVO.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.member.controller.app.address.vo;
 
 import lombok.*;
-import java.util.*;
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("用户 APP - 用户收件地址 Response VO")
@@ -14,6 +14,6 @@ public class AppAddressRespVO extends AppAddressBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthLoginRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("用户 APP - 登录 Response VO")
 @Data
@@ -26,6 +26,6 @@ public class AppAuthLoginRespVO {
     private String refreshToken;
 
     @ApiModelProperty(value = "过期时间", required = true)
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/dal/dataobject/user/MemberUserDO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.*;
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 会员用户 DO
@@ -67,7 +67,7 @@ public class MemberUserDO extends TenantBaseDO {
     /**
      * 最后登录时间
      */
-    private Date loginDate;
+    private LocalDateTime loginDate;
 
     // TODO 芋艿：name 真实名字；
     // TODO 芋艿：email 邮箱；

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 import javax.annotation.Resource;
 import javax.validation.Valid;
 import java.io.InputStream;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.framework.common.util.servlet.ServletUtils.getClientIP;
@@ -78,7 +78,7 @@ private MemberUserDO createUser(String mobile, String registerIp) {
     @Override
     public void updateUserLogin(Long id, String loginIp) {
         memberUserMapper.updateById(new MemberUserDO().setId(id)
-                .setLoginIp(loginIp).setLoginDate(new Date()));
+                .setLoginIp(loginIp).setLoginDate(LocalDateTime.now()));
     }
 
     @Override

File: yudao-module-pay/yudao-module-pay-api/src/main/java/cn/iocoder/yudao/module/pay/api/order/PayOrderDataCreateReqDTO.java
Patch:
@@ -7,7 +7,7 @@
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 import java.io.Serializable;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 支付单创建 Request DTO
@@ -60,6 +60,6 @@ public class PayOrderDataCreateReqDTO implements Serializable {
      * 支付过期时间
      */
     @NotNull(message = "支付过期时间不能为空")
-    private Date expireTime;
+    private LocalDateTime expireTime;
 
 }
\ No newline at end of file

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppExcelVO.java
Patch:
@@ -3,7 +3,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 支付应用信息 Excel VO
@@ -35,6 +35,6 @@ public class PayAppExcelVO {
     private Long merchantId;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppExportReqVO.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.app;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
-import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
@@ -32,6 +32,6 @@ public class PayAppExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppPageItemRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Set;
 
 @ApiModel(value = "管理后台 - 支付应用信息分页查询 Response VO", description = "相比于支付信息，还会多出应用渠道的开关信息")
@@ -19,7 +19,7 @@ public class PayAppPageItemRespVO extends PayAppBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * 所属商户

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppPageReqVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.app;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -34,6 +35,6 @@ public class PayAppPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/app/PayAppRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.app;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 支付应用信息 Response VO")
@@ -14,6 +15,6 @@ public class PayAppRespVO extends PayAppBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelExcelVO.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.channel;
 
 import lombok.*;
-import java.util.*;
-import io.swagger.annotations.*;
+
+import java.time.LocalDateTime;
 
 import com.alibaba.excel.annotation.ExcelProperty;
 
@@ -44,6 +44,6 @@ public class PayChannelExcelVO {
     /// private String config;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelExportReqVO.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.channel;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
-import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
@@ -35,6 +35,6 @@ public class PayChannelExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelPageReqVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.channel;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -37,6 +38,6 @@ public class PayChannelPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/channel/PayChannelRespVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.channel;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 
 @ApiModel("管理后台 - 支付渠道 Response VO")
@@ -14,7 +15,7 @@ public class PayChannelRespVO extends PayChannelBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "配置", required = true)
     private String config;

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantExcelVO.java
Patch:
@@ -5,7 +5,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 支付商户信息 Excel VO
@@ -35,6 +35,6 @@ public class PayMerchantExcelVO {
     private String remark;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantExportReqVO.java
Patch:
@@ -1,9 +1,9 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.merchant;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
-import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
@@ -29,6 +29,6 @@ public class PayMerchantExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantPageReqVO.java
Patch:
@@ -1,7 +1,8 @@
 package cn.iocoder.yudao.module.pay.controller.admin.merchant.vo.merchant;
 
 import lombok.*;
-import java.util.*;
+
+import java.time.LocalDateTime;
 import io.swagger.annotations.*;
 import cn.iocoder.yudao.framework.common.pojo.PageParam;
 import org.springframework.format.annotation.DateTimeFormat;
@@ -31,6 +32,6 @@ public class PayMerchantPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/merchant/vo/merchant/PayMerchantRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 支付商户信息 Response VO")
 @Data
@@ -18,7 +18,7 @@ public class PayMerchantRespVO extends PayMerchantBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "商户号", required = true, example = "M233666999")
     private String no;

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderDetailsRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 支付订单详细信息 Response VO")
 @Data
@@ -27,7 +27,7 @@ public class PayOrderDetailsRespVO extends PayOrderBaseVO {
     private String channelCodeName;
 
     @ApiModelProperty(value = "创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * 支付订单扩展

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderPageItemRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 支付订单分页 Request VO")
 @Data
@@ -18,7 +18,7 @@ public class PayOrderPageItemRespVO extends PayOrderBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "商户名称")
     private String merchantName;

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/order/vo/PayOrderRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 支付订单 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class PayOrderRespVO extends PayOrderBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundDetailsRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.ToString;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 退款订单详情 Response VO")
 @Data
@@ -31,9 +31,9 @@ public class PayRefundDetailsRespVO extends PayRefundBaseVO {
     private String subject;
 
     @ApiModelProperty(value = "创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "更新时间")
-    private Date updateTime;
+    private LocalDateTime updateTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundPageItemRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 退款订单分页查询 Response VO")
 @Data
@@ -27,6 +27,6 @@ public class PayRefundPageItemRespVO extends PayRefundBaseVO {
     private String channelCodeName;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/controller/admin/refund/vo/PayRefundRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 退款订单 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class PayRefundRespVO extends PayRefundBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/dataobject/notify/PayNotifyTaskDO.java
Patch:
@@ -13,7 +13,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 商户支付、退款等的通知
@@ -80,11 +80,11 @@ public class PayNotifyTaskDO extends BaseDO {
     /**
      * 下一次通知时间
      */
-    private Date nextNotifyTime;
+    private LocalDateTime nextNotifyTime;
     /**
      * 最后一次执行时间
      */
-    private Date lastExecuteTime;
+    private LocalDateTime lastExecuteTime;
     /**
      * 当前通知次数
      */

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/mysql/merchant/PayChannelMapper.java
Patch:
@@ -10,8 +10,8 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 @Mapper
@@ -22,7 +22,7 @@ default PayChannelDO selectByAppIdAndCode(Long appId, String code) {
     }
 
     @Select("SELECT COUNT(*) FROM pay_channel WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
     default PageResult<PayChannelDO> selectPage(PayChannelPageReqVO reqVO) {
         return selectPage(reqVO, new QueryWrapperX<PayChannelDO>()

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/dal/mysql/notify/PayNotifyTaskCoreMapper.java
Patch:
@@ -6,7 +6,7 @@
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import org.apache.ibatis.annotations.Mapper;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @Mapper
@@ -24,7 +24,7 @@ default List<PayNotifyTaskDO> selectListByNotify() {
         return selectList(new QueryWrapper<PayNotifyTaskDO>()
                 .in("status", PayNotifyStatusEnum.WAITING.getStatus(), PayNotifyStatusEnum.REQUEST_SUCCESS.getStatus(),
                         PayNotifyStatusEnum.REQUEST_FAILURE.getStatus())
-                .le("next_notify_time", new Date()));
+                .le("next_notify_time", LocalDateTime.now()));
     }
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/merchant/PayChannelServiceImpl.java
Patch:
@@ -28,8 +28,8 @@
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
 import javax.validation.Validator;
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
@@ -55,7 +55,7 @@ public class PayChannelServiceImpl implements PayChannelService {
     /**
      * 缓存菜单的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     @Resource
     private PayClientFactory payClientFactory;
@@ -101,7 +101,7 @@ public void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前支付渠道的最大更新时间
      * @return 支付渠道列表
      */
-    private List<PayChannelDO> loadPayChannelIfUpdate(Date maxUpdateTime) {
+    private List<PayChannelDO> loadPayChannelIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadPayChannelIfUpdate][首次加载全量支付渠道]");

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/order/PayOrderServiceImpl.java
Patch:
@@ -38,8 +38,8 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 import java.util.Objects;
 
@@ -204,7 +204,7 @@ private String generateOrderExtensionNo() {
         // 目前的算法
         // 时间序列，年月日时分秒 14 位
         // 纯随机，6 位 TODO 芋艿：此处估计是会有问题的，后续在调整
-        return DateUtil.format(new Date(), "yyyyMMddHHmmss") + // 时间序列
+        return DateUtil.format(LocalDateTime.now(), "yyyyMMddHHmmss") + // 时间序列
                 RandomUtil.randomInt(100000, 999999) // 随机。为什么是这个范围，因为偷懒
                 ;
     }
@@ -259,7 +259,7 @@ public void notifyPayOrder(Long channelId,  PayNotifyDataDTO notifyData) throws
                 PayOrderDO.builder().status(PayOrderStatusEnum.SUCCESS.getStatus()).channelId(channelId).channelCode(channel.getCode())
                         .successTime(notifyRespDTO.getSuccessTime()).successExtensionId(orderExtension.getId())
                         .channelOrderNo(notifyRespDTO.getChannelOrderNo()).channelUserId(notifyRespDTO.getChannelUserId())
-                        .notifyTime(new Date()).build());
+                        .notifyTime(LocalDateTime.now()).build());
         if (updateCounts == 0) { // 校验状态，必须是待支付
             throw ServiceExceptionUtil.exception(ErrorCodeConstants.PAY_ORDER_STATUS_IS_NOT_WAITING);
         }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/order/dto/PayOrderCreateReqDTO.java
Patch:
@@ -7,7 +7,7 @@
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 import java.io.Serializable;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 支付单创建 Request DTO
@@ -59,6 +59,6 @@ public class PayOrderCreateReqDTO implements Serializable {
      * 支付过期时间
      */
     @NotNull(message = "支付过期时间不能为空")
-    private Date expireTime;
+    private LocalDateTime expireTime;
 
 }

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/service/refund/PayRefundServiceImpl.java
Patch:
@@ -40,7 +40,7 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Objects;
 
@@ -223,7 +223,7 @@ private void payRefundSuccess(PayRefundNotifyDTO refundNotify) {
                 .setSuccessTime(refundNotify.getRefundSuccessTime())
                 .setChannelRefundNo(refundNotify.getChannelOrderNo())
                 .setTradeNo(refundNotify.getTradeNo())
-                .setNotifyTime(new Date())
+                .setNotifyTime(LocalDateTime.now())
                 .setStatus(PayRefundStatusEnum.SUCCESS.getStatus());
         refundMapper.updateById(updateRefundDO);
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/ErrorCodeApi.java
Patch:
@@ -4,7 +4,7 @@
 import cn.iocoder.yudao.module.system.api.errorcode.dto.ErrorCodeRespDTO;
 
 import javax.validation.Valid;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -30,6 +30,6 @@ public interface ErrorCodeApi {
      * @param minUpdateTime 最小更新时间
      * @return 错误码数组
      */
-    List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, Date minUpdateTime);
+    List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, LocalDateTime minUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/dto/ErrorCodeRespDTO.java
Patch:
@@ -2,7 +2,7 @@
 
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 错误码的 Response DTO
@@ -23,6 +23,6 @@ public class ErrorCodeRespDTO {
     /**
      * 更新时间
      */
-    private Date updateTime;
+    private LocalDateTime updateTime;
 
 }

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/logger/dto/OperateLogCreateReqDTO.java
Patch:
@@ -4,7 +4,7 @@
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -96,7 +96,7 @@ public class OperateLogCreateReqDTO {
      * 开始时间
      */
     @NotNull(message = "开始时间不能为空")
-    private Date startTime;
+    private LocalDateTime startTime;
 
     /**
      * 执行时长，单位：毫秒

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/oauth2/dto/OAuth2AccessTokenRespDTO.java
Patch:
@@ -4,7 +4,7 @@
 import lombok.experimental.Accessors;
 
 import java.io.Serializable;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * OAuth2.0 访问令牌的信息 Response DTO
@@ -34,6 +34,6 @@ public class OAuth2AccessTokenRespDTO implements Serializable {
     /**
      * 过期时间
      */
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/ErrorCodeApiImpl.java
Patch:
@@ -6,7 +6,7 @@
 import org.springframework.stereotype.Service;
 
 import javax.annotation.Resource;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -26,7 +26,7 @@ public void autoGenerateErrorCodes(List<ErrorCodeAutoGenerateReqDTO> autoGenerat
     }
 
     @Override
-    public List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, Date minUpdateTime) {
+    public List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, LocalDateTime minUpdateTime) {
         return errorCodeService.getErrorCodeList(applicationName, minUpdateTime);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/auth/vo/AuthLoginRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 登录 Response VO")
 @Data
@@ -26,6 +26,6 @@ public class AuthLoginRespVO {
     private String refreshToken;
 
     @ApiModelProperty(value = "过期时间", required = true)
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/dept/DeptRespVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 部门信息 Response VO")
 @Data
@@ -19,6 +19,6 @@ public class DeptRespVO extends DeptBaseVO {
     private Integer status;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dept/vo/post/PostRespVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 岗位信息 Response VO")
 @Data
@@ -16,6 +16,6 @@ public class PostRespVO extends PostBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/data/DictDataRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 字典数据信息 Response VO")
 @Data
@@ -20,6 +20,6 @@ public class DictDataRespVO extends DictDataBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -24,6 +24,6 @@ public class DictTypeExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.format.annotation.DateTimeFormat;
 
 import javax.validation.constraints.Size;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -29,6 +29,6 @@ public class DictTypePageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/dict/vo/type/DictTypeRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 字典类型信息 Response VO")
 @Data
@@ -23,6 +23,6 @@ public class DictTypeRespVO extends DictTypeBaseVO {
     private String type;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeExcelVO.java
Patch:
@@ -2,11 +2,10 @@
 
 import cn.iocoder.yudao.framework.excel.core.annotations.DictFormat;
 import cn.iocoder.yudao.framework.excel.core.convert.DictConvert;
-//import cn.iocoder.yudao.adminserver.modules.infra.enums.InfDictTypeConstants;
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 错误码 Excel VO
@@ -36,6 +35,6 @@ public class ErrorCodeExcelVO {
     private String memo;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,6 +27,6 @@ public class ErrorCodeExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -32,6 +32,6 @@ public class ErrorCodePageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/errorcode/vo/ErrorCodeRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 错误码 Response VO")
 @Data
@@ -21,6 +21,6 @@ public class ErrorCodeRespVO extends ErrorCodeBaseVO {
     private Integer type;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/loginlog/LoginLogExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 登录日志 Excel 导出响应 VO
@@ -35,6 +35,6 @@ public class LoginLogExcelVO {
     private String userAgent;
 
     @ExcelProperty("登录时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/loginlog/LoginLogExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -24,6 +24,6 @@ public class LoginLogExportReqVO {
 
     @ApiModelProperty(value = "登录时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/loginlog/LoginLogPageReqVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,6 +27,6 @@ public class LoginLogPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "登录时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/loginlog/LoginLogRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.ToString;
 
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 登录日志 Response VO")
 @Data
@@ -26,6 +26,6 @@ public class LoginLogRespVO extends LoginLogBaseVO {
     private Integer userType;
 
     @ApiModelProperty(value = "登录时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/operatelog/OperateLogBaseVO.java
Patch:
@@ -5,7 +5,7 @@
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -66,7 +66,7 @@ public class OperateLogBaseVO {
 
     @ApiModelProperty(value = "开始时间", required = true)
     @NotNull(message = "开始时间不能为空")
-    private Date startTime;
+    private LocalDateTime startTime;
 
     @ApiModelProperty(value = "执行时长，单位：毫秒", required = true)
     @NotNull(message = "执行时长不能为空")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/operatelog/OperateLogExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 操作日志 Excel 导出响应 VO
@@ -34,7 +34,7 @@ public class OperateLogExcelVO {
     private String successStr;
 
     @ExcelProperty("操作日志")
-    private Date startTime;
+    private LocalDateTime startTime;
 
     @ExcelProperty("执行时长")
     private Integer duration;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/operatelog/OperateLogExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,6 +27,6 @@ public class OperateLogExportReqVO {
 
     @ApiModelProperty(value = "开始时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] startTime;
+    private LocalDateTime[] startTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/logger/vo/operatelog/OperateLogPageReqVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -28,6 +28,6 @@ public class OperateLogPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "开始时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] startTime;
+    private LocalDateTime[] startTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/notice/vo/NoticeRespVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 通知公告信息 Response VO")
 @Data
@@ -16,6 +16,6 @@ public class NoticeRespVO extends NoticeBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/client/OAuth2ClientRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - OAuth2 客户端 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class OAuth2ClientRespVO extends OAuth2ClientBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/token/OAuth2AccessTokenRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 访问令牌 Response VO")
 @Data
@@ -33,9 +33,9 @@ public class OAuth2AccessTokenRespVO {
     private String clientId;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
     @ApiModelProperty(value = "过期时间", required = true)
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/menu/MenuRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 菜单信息 Response VO")
 @Data
@@ -23,6 +23,6 @@ public class MenuRespVO extends MenuBaseVO {
     private Integer status;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -24,6 +24,6 @@ public class RoleExportReqVO {
 
     @ApiModelProperty(value = "开始时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RolePageReqVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,6 +27,6 @@ public class RolePageReqVO extends PageParam {
 
     @ApiModelProperty(value = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/permission/vo/role/RoleRespVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Set;
 
 @ApiModel("管理后台 - 角色信息 Response VO")
@@ -33,6 +33,6 @@ public class RoleRespVO extends RoleBaseVO {
     private Integer type;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sensitiveword/vo/SensitiveWordExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -34,6 +34,6 @@ public class SensitiveWordExcelVO {
     private String description;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sensitiveword/vo/SensitiveWordExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -24,6 +24,6 @@ public class SensitiveWordExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sensitiveword/vo/SensitiveWordPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -29,6 +29,6 @@ public class SensitiveWordPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sensitiveword/vo/SensitiveWordRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 敏感词 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class SensitiveWordRespVO extends SensitiveWordBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/channel/SmsChannelPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -26,6 +26,6 @@ public class SmsChannelPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/channel/SmsChannelRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 短信渠道 Response VO")
 @Data
@@ -21,6 +21,6 @@ public class SmsChannelRespVO extends SmsChannelBaseVO {
     private String code;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/log/SmsLogExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,13 +27,13 @@ public class SmsLogExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始发送时间")
-    private Date[] sendTime;
+    private LocalDateTime[] sendTime;
 
     @ApiModelProperty(value = "接收状态", example = "0")
     private Integer receiveStatus;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始接收时间")
-    private Date[] receiveTime;
+    private LocalDateTime[] receiveTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/log/SmsLogPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -32,13 +32,13 @@ public class SmsLogPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "发送时间")
-    private Date[] sendTime;
+    private LocalDateTime[] sendTime;
 
     @ApiModelProperty(value = "接收状态", example = "0", notes = "参见 SmsReceiveStatusEnum 枚举类")
     private Integer receiveStatus;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "接收时间")
-    private Date[] receiveTime;
+    private LocalDateTime[] receiveTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/template/SmsTemplateExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 短信模板 Excel VO
@@ -50,6 +50,6 @@ public class SmsTemplateExcelVO {
     private String channelCode;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/template/SmsTemplateExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -33,6 +33,6 @@ public class SmsTemplateExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/template/SmsTemplatePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -38,6 +38,6 @@ public class SmsTemplatePageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/sms/vo/template/SmsTemplateRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @ApiModel("管理后台 - 短信模板 Response VO")
@@ -25,6 +25,6 @@ public class SmsTemplateRespVO extends SmsTemplateBaseVO {
     private List<String> params;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/packages/TenantPackagePageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -29,5 +29,5 @@ public class TenantPackagePageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/packages/TenantPackageRespVO.java
Patch:
@@ -6,7 +6,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.ToString;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @ApiModel("管理后台 - 租户套餐 Response VO")
 @Data
@@ -18,6 +18,6 @@ public class TenantPackageRespVO extends TenantPackageBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/tenant/TenantBaseVO.java
Patch:
@@ -5,7 +5,7 @@
 import org.hibernate.validator.constraints.URL;
 
 import javax.validation.constraints.*;
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
 * 租户 Base VO，提供给添加、修改、详细的子 VO 使用
@@ -39,7 +39,7 @@ public class TenantBaseVO {
 
     @ApiModelProperty(value = "过期时间", required = true)
     @NotNull(message = "过期时间不能为空")
-    private Date expireTime;
+    private LocalDateTime expireTime;
 
     @ApiModelProperty(value = "账号数量", required = true, example = "1024")
     @NotNull(message = "账号数量不能为空")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/tenant/TenantExcelVO.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.yudao.module.system.enums.DictTypeConstants;
 import lombok.*;
-import java.util.*;
+import java.time.LocalDateTime;
 
 import com.alibaba.excel.annotation.ExcelProperty;
 import cn.iocoder.yudao.framework.excel.core.annotations.DictFormat;
@@ -34,6 +34,6 @@ public class TenantExcelVO {
     private Integer status;
 
     @ExcelProperty("创建时间")
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/tenant/TenantExportReqVO.java
Patch:
@@ -5,7 +5,7 @@
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -27,6 +27,6 @@ public class TenantExportReqVO {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/tenant/TenantPageReqVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.ToString;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -32,6 +32,6 @@ public class TenantPageReqVO extends PageParam {
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "创建时间")
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/tenant/vo/tenant/TenantRespVO.java
Patch:
@@ -1,9 +1,10 @@
 package cn.iocoder.yudao.module.system.controller.admin.tenant.vo.tenant;
 
 import lombok.*;
-import java.util.*;
 import io.swagger.annotations.*;
 
+import java.time.LocalDateTime;
+
 @ApiModel("管理后台 - 租户 Response VO")
 @Data
 @EqualsAndHashCode(callSuper = true)
@@ -14,6 +15,6 @@ public class TenantRespVO extends TenantBaseVO {
     private Long id;
 
     @ApiModelProperty(value = "创建时间", required = true)
-    private Date createTime;
+    private LocalDateTime createTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/profile/UserProfileRespVO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.NoArgsConstructor;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 
@@ -29,10 +29,10 @@ public class UserProfileRespVO extends UserBaseVO {
     private String loginIp;
 
     @ApiModelProperty(value = "最后登录时间", required = true, example = "时间戳格式")
-    private Date loginDate;
+    private LocalDateTime loginDate;
 
     @ApiModelProperty(value = "创建时间", required = true, example = "时间戳格式")
-    private Date createTime;
+    private LocalDateTime createTime;
 
     /**
      * 所属角色

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/user/UserExcelVO.java
Patch:
@@ -6,7 +6,7 @@
 import com.alibaba.excel.annotation.ExcelProperty;
 import lombok.Data;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 用户 Excel 导出 VO
@@ -41,7 +41,7 @@ public class UserExcelVO {
     private String loginIp;
 
     @ExcelProperty("最后登录时间")
-    private Date loginDate;
+    private LocalDateTime loginDate;
 
     @ExcelProperty("部门名称")
     private String deptName;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/user/UserExportReqVO.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.NoArgsConstructor;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -28,7 +28,7 @@ public class UserExportReqVO {
 
     @ApiModelProperty(value = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
     @ApiModelProperty(value = "部门编号", example = "1024", notes = "同时筛选子部门")
     private Long deptId;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/user/UserPageReqVO.java
Patch:
@@ -9,7 +9,7 @@
 import lombok.NoArgsConstructor;
 import org.springframework.format.annotation.DateTimeFormat;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
@@ -31,7 +31,7 @@ public class UserPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "创建时间", example = "[2022-07-01 00:00:00,2022-07-01 23:59:59]")
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
-    private Date[] createTime;
+    private LocalDateTime[] createTime;
 
     @ApiModelProperty(value = "部门编号", example = "1024", notes = "同时筛选子部门")
     private Long deptId;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/oauth2/OAuth2OpenConvert.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.system.convert.oauth2;
 
+import cn.hutool.core.date.LocalDateTimeUtil;
 import cn.iocoder.yudao.framework.common.core.KeyValue;
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.util.collection.CollectionUtils;
@@ -34,7 +35,7 @@ default OAuth2OpenAccessTokenRespVO convert(OAuth2AccessTokenDO bean) {
 
     default OAuth2OpenCheckTokenRespVO convert2(OAuth2AccessTokenDO bean) {
         OAuth2OpenCheckTokenRespVO respVO = convert3(bean);
-        respVO.setExp(bean.getExpiresTime().getTime() / 1000L);
+        respVO.setExp(LocalDateTimeUtil.toEpochMilli(bean.getExpiresTime()) / 1000L);
         respVO.setUserType(UserTypeEnum.ADMIN.getValue());
         return respVO;
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/logger/OperateLogDO.java
Patch:
@@ -12,7 +12,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -117,7 +117,7 @@ public class OperateLogDO extends BaseDO {
     /**
      * 开始时间
      */
-    private Date startTime;
+    private LocalDateTime startTime;
     /**
      * 执行时长，单位：毫秒
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/oauth2/OAuth2AccessTokenDO.java
Patch:
@@ -10,7 +10,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -64,6 +64,6 @@ public class OAuth2AccessTokenDO extends TenantBaseDO {
     /**
      * 过期时间
      */
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/oauth2/OAuth2ApproveDO.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * OAuth2 批准 DO
@@ -58,6 +58,6 @@ public class OAuth2ApproveDO extends BaseDO {
     /**
      * 过期时间
      */
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/oauth2/OAuth2CodeDO.java
Patch:
@@ -9,7 +9,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -63,6 +63,6 @@ public class OAuth2CodeDO extends BaseDO {
     /**
      * 过期时间
      */
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/oauth2/OAuth2RefreshTokenDO.java
Patch:
@@ -10,7 +10,7 @@
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -58,6 +58,6 @@ public class OAuth2RefreshTokenDO extends BaseDO {
     /**
      * 过期时间
      */
-    private Date expiresTime;
+    private LocalDateTime expiresTime;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/sms/SmsCodeDO.java
Patch:
@@ -5,7 +5,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 手机验证码 DO
@@ -56,7 +56,7 @@ public class SmsCodeDO extends BaseDO {
     /**
      * 使用时间
      */
-    private Date usedTime;
+    private LocalDateTime usedTime;
     /**
      * 使用 IP
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/sms/SmsLogDO.java
Patch:
@@ -11,7 +11,7 @@
 import com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Map;
 
 /**
@@ -114,7 +114,7 @@ public class SmsLogDO extends BaseDO {
     /**
      * 发送时间
      */
-    private Date sendTime;
+    private LocalDateTime sendTime;
     /**
      * 发送结果的编码
      *
@@ -162,7 +162,7 @@ public class SmsLogDO extends BaseDO {
     /**
      * 接收时间
      */
-    private Date receiveTime;
+    private LocalDateTime receiveTime;
     /**
      * 短信 API 接收结果的编码
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/tenant/TenantDO.java
Patch:
@@ -7,7 +7,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 /**
  * 租户 DO
@@ -73,7 +73,7 @@ public class TenantDO extends BaseDO {
     /**
      * 过期时间
      */
-    private Date expireTime;
+    private LocalDateTime expireTime;
     /**
      * 账号数量
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/user/AdminUserDO.java
Patch:
@@ -11,7 +11,7 @@
 import lombok.*;
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.Set;
 
 /**
@@ -91,6 +91,6 @@ public class AdminUserDO extends TenantBaseDO {
     /**
      * 最后登录时间
      */
-    private Date loginDate;
+    private LocalDateTime loginDate;
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/dept/DeptMapper.java
Patch:
@@ -8,7 +8,7 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @Mapper
@@ -31,6 +31,6 @@ default Long selectCountByParentId(Long parentId) {
     }
 
     @Select("SELECT COUNT(*) FROM system_dept WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/errorcode/ErrorCodeMapper.java
Patch:
@@ -8,8 +8,8 @@
 import cn.iocoder.yudao.module.system.dal.dataobject.errorcode.ErrorCodeDO;
 import org.apache.ibatis.annotations.Mapper;
 
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 @Mapper
@@ -43,7 +43,7 @@ default ErrorCodeDO selectByCode(Integer code) {
         return selectOne(new LambdaQueryWrapperX<ErrorCodeDO>().eq(ErrorCodeDO::getCode, code));
     }
 
-    default List<ErrorCodeDO> selectListByApplicationNameAndUpdateTimeGt(String applicationName, Date minUpdateTime) {
+    default List<ErrorCodeDO> selectListByApplicationNameAndUpdateTimeGt(String applicationName, LocalDateTime minUpdateTime) {
         return selectList(new LambdaQueryWrapperX<ErrorCodeDO>().eq(ErrorCodeDO::getApplicationName, applicationName)
                 .gtIfPresent(ErrorCodeDO::getUpdateTime, minUpdateTime));
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/oauth2/OAuth2AccessTokenMapper.java
Patch:
@@ -7,7 +7,7 @@
 import cn.iocoder.yudao.module.system.dal.dataobject.oauth2.OAuth2AccessTokenDO;
 import org.apache.ibatis.annotations.Mapper;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @Mapper
@@ -26,7 +26,7 @@ default PageResult<OAuth2AccessTokenDO> selectPage(OAuth2AccessTokenPageReqVO re
                 .eqIfPresent(OAuth2AccessTokenDO::getUserId, reqVO.getUserId())
                 .eqIfPresent(OAuth2AccessTokenDO::getUserType, reqVO.getUserType())
                 .likeIfPresent(OAuth2AccessTokenDO::getClientId, reqVO.getClientId())
-                .gt(OAuth2AccessTokenDO::getExpiresTime, new Date())
+                .gt(OAuth2AccessTokenDO::getExpiresTime, LocalDateTime.now())
                 .orderByDesc(OAuth2AccessTokenDO::getId));
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/oauth2/OAuth2ClientMapper.java
Patch:
@@ -8,7 +8,8 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
+
 
 /**
  * OAuth2 客户端 Mapper
@@ -30,6 +31,6 @@ default OAuth2ClientDO selectByClientId(String clientId) {
     }
 
     @Select("SELECT COUNT(*) FROM system_oauth2_client WHERE update_time > #{maxUpdateTime}")
-    int selectCountByUpdateTimeGt(Date maxUpdateTime);
+    int selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/permission/MenuMapper.java
Patch:
@@ -8,7 +8,7 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @Mapper
@@ -29,6 +29,6 @@ default List<MenuDO> selectList(MenuListReqVO reqVO) {
     }
 
     @Select("SELECT COUNT(*) FROM system_menu WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/permission/RoleMapper.java
Patch:
@@ -11,8 +11,8 @@
 import org.apache.ibatis.annotations.Select;
 import org.springframework.lang.Nullable;
 
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 @Mapper
@@ -48,6 +48,6 @@ default List<RoleDO> selectListByStatus(@Nullable Collection<Integer> statuses)
     }
 
     @Select("SELECT COUNT(*) FROM system_role WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/permission/RoleMenuMapper.java
Patch:
@@ -8,8 +8,8 @@
 import org.apache.ibatis.annotations.Select;
 import org.springframework.stereotype.Repository;
 
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 @Mapper
@@ -37,6 +37,6 @@ default void deleteListByRoleId(Long roleId) {
     }
 
     @Select("SELECT COUNT(*) FROM system_role_menu WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/permission/UserRoleMapper.java
Patch:
@@ -6,8 +6,8 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
+import java.time.LocalDateTime;
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 
 @Mapper
@@ -40,6 +40,6 @@ default List<UserRoleDO> selectListByRoleIds(Collection<Long> roleIds) {
     }
 
     @Select("SELECT COUNT(*) FROM system_user_role WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/sensitiveword/SensitiveWordMapper.java
Patch:
@@ -9,7 +9,7 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -43,6 +43,6 @@ default SensitiveWordDO selectByName(String name) {
     }
 
     @Select("SELECT COUNT(*) FROM system_sensitive_word WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/sms/SmsChannelMapper.java
Patch:
@@ -8,7 +8,7 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 
 @Mapper
 public interface SmsChannelMapper extends BaseMapperX<SmsChannelDO> {
@@ -22,6 +22,6 @@ default PageResult<SmsChannelDO> selectPage(SmsChannelPageReqVO reqVO) {
     }
 
     @Select("SELECT COUNT(*) FROM system_sms_channel WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/sms/SmsTemplateMapper.java
Patch:
@@ -9,14 +9,14 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 @Mapper
 public interface SmsTemplateMapper extends BaseMapperX<SmsTemplateDO> {
 
     @Select("SELECT COUNT(*) FROM system_sms_template WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
     default SmsTemplateDO selectByCode(String code) {
         return selectOne(SmsTemplateDO::getCode, code);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/tenant/TenantMapper.java
Patch:
@@ -9,7 +9,7 @@
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Select;
 
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -53,6 +53,6 @@ default List<TenantDO> selectListByPackageId(Long packageId) {
     }
 
     @Select("SELECT COUNT(*) FROM system_tenant WHERE update_time > #{maxUpdateTime}")
-    Long selectCountByUpdateTimeGt(Date maxUpdateTime);
+    Long selectCountByUpdateTimeGt(LocalDateTime maxUpdateTime);
 
 }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/dept/DeptServiceImpl.java
Patch:
@@ -24,6 +24,7 @@
 
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.*;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
@@ -64,7 +65,7 @@ public class DeptServiceImpl implements DeptService {
     /**
      * 缓存部门的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     @Resource
     private DeptMapper deptMapper;
@@ -112,7 +113,7 @@ public void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前部门的最大更新时间
      * @return 部门列表
      */
-    protected List<DeptDO> loadDeptIfUpdate(Date maxUpdateTime) {
+    protected List<DeptDO> loadDeptIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadMenuIfUpdate][首次加载全量部门]");

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/errorcode/ErrorCodeService.java
Patch:
@@ -10,7 +10,7 @@
 import cn.iocoder.yudao.module.system.dal.dataobject.errorcode.ErrorCodeDO;
 
 import javax.validation.Valid;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 
 /**
@@ -36,7 +36,7 @@ public interface ErrorCodeService {
      * @param minUpdateTime 最小更新时间
      * @return 错误码数组
      */
-    List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, Date minUpdateTime);
+    List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, LocalDateTime minUpdateTime);
 
     /**
      * 创建错误码

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/errorcode/ErrorCodeServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
-import java.util.Date;
+import java.time.LocalDateTime;
 import java.util.List;
 import java.util.Map;
 
@@ -164,7 +164,7 @@ public void autoGenerateErrorCodes(List<ErrorCodeAutoGenerateReqDTO> autoGenerat
     }
 
     @Override
-    public List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, Date minUpdateTime) {
+    public List<ErrorCodeRespDTO> getErrorCodeList(String applicationName, LocalDateTime minUpdateTime) {
         List<ErrorCodeDO> errorCodeDOs = errorCodeMapper.selectListByApplicationNameAndUpdateTimeGt(
                 applicationName, minUpdateTime);
         return ErrorCodeConvert.INSTANCE.convertList03(errorCodeDOs);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/oauth2/OAuth2ClientServiceImpl.java
Patch:
@@ -23,6 +23,7 @@
 
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.*;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
@@ -59,7 +60,7 @@ public class OAuth2ClientServiceImpl implements OAuth2ClientService {
      * 缓存角色的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
     @Getter
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     @Resource
     private OAuth2ClientMapper oauth2ClientMapper;
@@ -97,7 +98,7 @@ public void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前客户端的最大更新时间
      * @return 客户端列表
      */
-    private List<OAuth2ClientDO> loadOAuth2ClientIfUpdate(Date maxUpdateTime) {
+    private List<OAuth2ClientDO> loadOAuth2ClientIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadOAuth2ClientIfUpdate][首次加载全量客户端]");

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/oauth2/OAuth2CodeServiceImpl.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.validation.annotation.Validated;
 
 import javax.annotation.Resource;
-import java.util.Calendar;
+import java.time.LocalDateTime;
 import java.util.List;
 
 import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
@@ -38,7 +38,7 @@ public OAuth2CodeDO createAuthorizationCode(Long userId, Integer userType, Strin
         OAuth2CodeDO codeDO = new OAuth2CodeDO().setCode(generateCode())
                 .setUserId(userId).setUserType(userType)
                 .setClientId(clientId).setScopes(scopes)
-                .setExpiresTime(DateUtils.addDate(Calendar.SECOND, TIMEOUT))
+                .setExpiresTime(LocalDateTime.now().plusSeconds(TIMEOUT))
                 .setRedirectUri(redirectUri).setState(state);
         oauth2CodeMapper.insert(codeDO);
         return codeDO;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/oauth2/OAuth2TokenServiceImpl.java
Patch:
@@ -18,6 +18,7 @@
 import org.springframework.transaction.annotation.Transactional;
 
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.Calendar;
 import java.util.List;
 
@@ -137,7 +138,7 @@ private OAuth2AccessTokenDO createOAuth2AccessToken(OAuth2RefreshTokenDO refresh
                 .setUserId(refreshTokenDO.getUserId()).setUserType(refreshTokenDO.getUserType())
                 .setClientId(clientDO.getClientId()).setScopes(refreshTokenDO.getScopes())
                 .setRefreshToken(refreshTokenDO.getRefreshToken())
-                .setExpiresTime(DateUtils.addDate(Calendar.SECOND, clientDO.getAccessTokenValiditySeconds()));
+                .setExpiresTime(LocalDateTime.now().plusSeconds(clientDO.getAccessTokenValiditySeconds()));
         accessTokenDO.setTenantId(TenantContextHolder.getTenantId()); // 手动设置租户编号，避免缓存到 Redis 的时候，无对应的租户编号
         oauth2AccessTokenMapper.insert(accessTokenDO);
         // 记录到 Redis 中
@@ -149,7 +150,7 @@ private OAuth2RefreshTokenDO createOAuth2RefreshToken(Long userId, Integer userT
         OAuth2RefreshTokenDO refreshToken = new OAuth2RefreshTokenDO().setRefreshToken(generateRefreshToken())
                 .setUserId(userId).setUserType(userType)
                 .setClientId(clientDO.getClientId()).setScopes(scopes)
-                .setExpiresTime(DateUtils.addDate(Calendar.SECOND, clientDO.getRefreshTokenValiditySeconds()));
+                .setExpiresTime(LocalDateTime.now().plusSeconds(clientDO.getRefreshTokenValiditySeconds()));
         oauth2RefreshTokenMapper.insert(refreshToken);
         return refreshToken;
     }

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/MenuServiceImpl.java
Patch:
@@ -28,6 +28,7 @@
 
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.*;
 import java.util.stream.Collectors;
 
@@ -66,7 +67,7 @@ public class MenuServiceImpl implements MenuService {
     /**
      * 缓存菜单的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     @Resource
     private MenuMapper menuMapper;
@@ -118,7 +119,7 @@ public void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前菜单的最大更新时间
      * @return 菜单列表
      */
-    private List<MenuDO> loadMenuIfUpdate(Date maxUpdateTime) {
+    private List<MenuDO> loadMenuIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadMenuIfUpdate][首次加载全量菜单]");

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -32,6 +32,7 @@
 
 import javax.annotation.PostConstruct;
 import javax.annotation.Resource;
+import java.time.LocalDateTime;
 import java.util.*;
 import java.util.stream.Collectors;
 
@@ -65,7 +66,7 @@ public class RoleServiceImpl implements RoleService {
      * 缓存角色的最大更新时间，用于后续的增量轮询，判断是否有更新
      */
     @Getter
-    private volatile Date maxUpdateTime;
+    private volatile LocalDateTime maxUpdateTime;
 
     @Resource
     private PermissionService permissionService;
@@ -111,7 +112,7 @@ public void schedulePeriodicRefresh() {
      * @param maxUpdateTime 当前角色的最大更新时间
      * @return 角色列表
      */
-    private List<RoleDO> loadRoleIfUpdate(Date maxUpdateTime) {
+    private List<RoleDO> loadRoleIfUpdate(LocalDateTime maxUpdateTime) {
         // 第一步，判断是否要更新。
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadRoleIfUpdate][首次加载全量角色]");

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -199,8 +199,8 @@ public boolean isProcessDefinitionEquals(@Valid BpmProcessDefinitionCreateReqDTO
         // 校验 BPMN XML 信息
         BpmnModel newModel = buildBpmnModel(createReqDTO.getBpmnBytes());
         BpmnModel oldModel = getBpmnModel(oldProcessDefinition.getId());
-        // TODO  貌似 flowable 不修改这个也不同。需要看看。 sourceSystemId 不同
-        if (FlowableUtils.equals(oldModel, newModel)) {
+        // 对比字节变化
+        if (!FlowableUtils.equals(oldModel, newModel)) {
             return false;
         }
         // 最终发现都一致，则返回 true

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXLitePayClient.java
Patch:
@@ -49,7 +49,7 @@ public WXLitePayClient(Long channelId, WXPayClientConfig config) {
     @Override
     protected void doInit() {
         WxPayConfig payConfig = new WxPayConfig();
-        BeanUtil.copyProperties(config, payConfig, "keyContent");
+        BeanUtil.copyProperties(config, payConfig, "privateKeyContent","privateCertContent");
         payConfig.setTradeType(WxPayConstants.TradeType.JSAPI); // 设置使用 JS API 支付方式
 //        if (StrUtil.isNotEmpty(config.getKeyContent())) {
 //            payConfig.setKeyContent(config.getKeyContent().getBytes(StandardCharsets.UTF_8));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/sms/SmsSendServiceImpl.java
Patch:
@@ -180,7 +180,7 @@ public void receiveSmsStatus(String channelCode, String text) throws Throwable {
         }
         // 更新短信日志的接收结果. 因为量一般不大，所以先使用 for 循环更新
         receiveResults.forEach(result -> smsLogService.updateSmsReceiveResult(result.getLogId(),
-                result.getSuccess(), result.getReceiveTime(), result.getErrorCode(), result.getErrorCode()));
+                result.getSuccess(), result.getReceiveTime(), result.getErrorCode(), result.getErrorMsg()));
     }
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/convert/sku/ProductSkuConvert.java
Patch:
@@ -1,7 +1,5 @@
 package cn.iocoder.yudao.module.product.convert.sku;
 
-import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.module.product.api.sku.dto.SkuInfoRespDTO;
 import cn.iocoder.yudao.module.product.api.sku.dto.ProductSkuRespDTO;
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuCreateOrUpdateReqVO;
 import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuRespVO;
@@ -36,6 +34,6 @@ public interface ProductSkuConvert {
 
     List<ProductSpuDetailRespVO.Sku> convertList03(List<ProductSkuDO> list);
 
-    List<SkuInfoRespDTO> convertList03(List<ProductSkuDO> list);
+    List<ProductSkuRespDTO> convertList04(List<ProductSkuDO> list);
 
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/sku/ProductSkuMapper.java
Patch:
@@ -3,7 +3,6 @@
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
 import cn.iocoder.yudao.module.product.api.sku.dto.SkuDecrementStockBatchReqDTO;
-import cn.iocoder.yudao.module.product.controller.admin.sku.vo.ProductSkuPageReqVO;
 import cn.iocoder.yudao.module.product.dal.dataobject.sku.ProductSkuDO;
 import com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;
 import org.apache.ibatis.annotations.Mapper;

File: yudao-module-pay/yudao-module-pay-biz/src/main/java/cn/iocoder/yudao/module/pay/api/PayOrderApiImpl.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.pay.api;
 
 import cn.iocoder.yudao.module.pay.api.order.PayOrderApi;
-import cn.iocoder.yudao.module.pay.api.order.PayOrderDataCreateReqDTO;
+import cn.iocoder.yudao.module.pay.api.order.PayOrderInfoCreateReqDTO;
 import org.springframework.stereotype.Service;
 
 /**
@@ -11,7 +11,7 @@
 public class PayOrderApiImpl implements PayOrderApi {
 
     @Override
-    public Long createPayOrder(PayOrderDataCreateReqDTO reqDTO) {
+    public Long createPayOrder(PayOrderInfoCreateReqDTO reqDTO) {
         return null;
     }
 

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/service/message/BpmMessageServiceImpl.java
Patch:
@@ -57,7 +57,7 @@ public void sendMessageWhenTaskAssigned(BpmMessageSendWhenTaskCreatedReqDTO reqD
         templateParams.put("taskName", reqDTO.getTaskName());
         templateParams.put("startUserNickname", reqDTO.getStartUserNickname());
         templateParams.put("detailUrl", getProcessInstanceDetailUrl(reqDTO.getProcessInstanceId()));
-        smsSendApi.sendSingleSmsToAdmin(BpmMessageConvert.INSTANCE.convert(reqDTO.getStartUserId(),
+        smsSendApi.sendSingleSmsToAdmin(BpmMessageConvert.INSTANCE.convert(reqDTO.getAssigneeUserId(),
                 BpmMessageEnum.TASK_ASSIGNED.getSmsTemplateCode(), templateParams));
     }
 

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/ProductSpuController.java
Patch:
@@ -69,7 +69,7 @@ public CommonResult<SpuRespVO> getSpu(@RequestParam("id") Long id) {
 
     @GetMapping("/list")
     @ApiOperation("获得商品spu列表")
-    @ApiImplicitParam(name = "ids", value = "编号列表", required = true, example = "1024,2048", dataTypeClass = Long.class)
+    @ApiImplicitParam(name = "ids", value = "编号列表", required = true, example = "1024,2048", dataTypeClass = List.class)
     @PreAuthorize("@ss.hasPermission('product:spu:query')")
     public CommonResult<List<SpuRespVO>> getSpuList(@RequestParam("ids") Collection<Long> ids) {
         List<ProductSpuDO> list = spuService.getSpuList(ids);

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/spu/ProductSpuController.java
Patch:
@@ -69,7 +69,7 @@ public CommonResult<SpuRespVO> getSpu(@RequestParam("id") Long id) {
 
     @GetMapping("/list")
     @ApiOperation("获得商品spu列表")
-    @ApiImplicitParam(name = "ids", value = "编号列表", required = true, example = "1024,2048", dataTypeClass = Long.class)
+    @ApiImplicitParam(name = "ids", value = "编号列表", required = true, example = "1024,2048", dataTypeClass = List.class)
     @PreAuthorize("@ss.hasPermission('product:spu:query')")
     public CommonResult<List<SpuRespVO>> getSpuList(@RequestParam("ids") Collection<Long> ids) {
         List<ProductSpuDO> list = spuService.getSpuList(ids);

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/vo/RedisMonitorRespVO.java
Patch:
@@ -34,7 +34,7 @@ public static class CommandStat {
         private String command;
 
         @ApiModelProperty(value = "调用次数", required = true, example = "1024")
-        private Integer calls;
+        private Long calls;
 
         @ApiModelProperty(value = "消耗 CPU 秒数", required = true, example = "666")
         private Long usec;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/convert/redis/RedisConvert.java
Patch:
@@ -22,7 +22,7 @@ default RedisMonitorRespVO build(Properties info, Long dbSize, Properties comman
         commandStats.forEach((key, value) -> {
             respVO.getCommandStats().add(RedisMonitorRespVO.CommandStat.builder()
                     .command(StrUtil.subAfter((String) key, "cmdstat_", false))
-                    .calls(Integer.valueOf(StrUtil.subBetween((String) value, "calls=", ",")))
+                    .calls(Long.valueOf(StrUtil.subBetween((String) value, "calls=", ",")))
                     .usec(Long.valueOf(StrUtil.subBetween((String) value, "usec=", ",")))
                     .build());
         });

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/redis/vo/RedisMonitorRespVO.java
Patch:
@@ -34,7 +34,7 @@ public static class CommandStat {
         private String command;
 
         @ApiModelProperty(value = "调用次数", required = true, example = "1024")
-        private Integer calls;
+        private Long calls;
 
         @ApiModelProperty(value = "消耗 CPU 秒数", required = true, example = "666")
         private Long usec;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/convert/redis/RedisConvert.java
Patch:
@@ -22,7 +22,7 @@ default RedisMonitorRespVO build(Properties info, Long dbSize, Properties comman
         commandStats.forEach((key, value) -> {
             respVO.getCommandStats().add(RedisMonitorRespVO.CommandStat.builder()
                     .command(StrUtil.subAfter((String) key, "cmdstat_", false))
-                    .calls(Integer.valueOf(StrUtil.subBetween((String) value, "calls=", ",")))
+                    .calls(Long.valueOf(StrUtil.subBetween((String) value, "calls=", ",")))
                     .usec(Long.valueOf(StrUtil.subBetween((String) value, "usec=", ",")))
                     .build());
         });

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/query/LambdaQueryWrapperX.java
Patch:
@@ -98,10 +98,10 @@ public LambdaQueryWrapperX<T> betweenIfPresent(SFunction<T, ?> column, Object[]
         if (values!= null && values.length >0 && values[0] != null && values[1] != null) {
             return (LambdaQueryWrapperX<T>) super.between(column, values[0], values[1]);
         }
-        if (values != null && values[0] != null) {
+        if (values != null && values.length >0 && values[0] != null) {
             return (LambdaQueryWrapperX<T>) ge(column, values[0]);
         }
-        if (values != null && values[1] != null) {
+        if (values != null && values.length >0 && values[1] != null) {
             return (LambdaQueryWrapperX<T>) le(column, values[2]);
         }
         return this;

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/query/QueryWrapperX.java
Patch:
@@ -95,13 +95,13 @@ public QueryWrapperX<T> betweenIfPresent(String column, Object val1, Object val2
     }
 
     public QueryWrapperX<T> betweenIfPresent(String column, Object[] values) {
-        if (values!= null && values[0] != null && values[1] != null) {
+        if (values!= null && values.length != 0 && values[0] != null && values[1] != null) {
             return (QueryWrapperX<T>) super.between(column, values[0], values[1]);
         }
-        if (values!= null && values[0] != null) {
+        if (values!= null && values.length != 0 && values[0] != null) {
             return (QueryWrapperX<T>) ge(column, values[0]);
         }
-        if (values!= null && values[1] != null) {
+        if (values!= null && values.length != 0 && values[1] != null) {
             return (QueryWrapperX<T>) le(column, values[1]);
         }
         return this;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/BpmTaskEventListener.java
Patch:
@@ -63,7 +63,7 @@ protected void taskAssigned(FlowableEngineEntityEvent event) {
 
     @Override
     protected void activityCancelled(FlowableActivityCancelledEvent event) {
-        HistoricActivityInstance activity = activityService.getHistoricActivityByExecutionId(event.getExecutionId());
+        HistoricActivityInstance activity = activityService.getHistoricActivityByExecutionId(event.getActivityId());
         if (activity == null) {
             log.error("[activityCancelled][使用 executionId({}) 查找不到对应的活动实例]", event.getExecutionId());
             return;

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/BpmTaskEventListener.java
Patch:
@@ -63,7 +63,7 @@ protected void taskAssigned(FlowableEngineEntityEvent event) {
 
     @Override
     protected void activityCancelled(FlowableActivityCancelledEvent event) {
-        HistoricActivityInstance activity = activityService.getHistoricActivityByExecutionId(event.getExecutionId());
+        HistoricActivityInstance activity = activityService.getHistoricActivityByExecutionId(event.getActivityId());
         if (activity == null) {
             log.error("[activityCancelled][使用 executionId({}) 查找不到对应的活动实例]", event.getExecutionId());
             return;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/file/FileDO.java
Patch:
@@ -5,8 +5,6 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 
-import java.io.InputStream;
-
 /**
  * 文件表
  * 每次文件上传，都会记录一条记录到该表中
@@ -46,7 +44,7 @@ public class FileDO extends BaseDO {
      */
     private String url;
     /**
-     * 文件的MIME类型，例如"application/octet-stream"
+     * 文件的 MIME 类型，例如 "application/octet-stream"
      */
     private String type;
     /**

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.infra.service.file;
 
-import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/user/AdminUserDO.java
Patch:
@@ -52,7 +52,7 @@ public class AdminUserDO extends TenantBaseDO {
      */
     private String remark;
     /**
-     * 部门ID
+     * 部门 ID
      */
     private Long deptId;
     /**

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/auth/AdminAuthServiceImpl.java
Patch:
@@ -123,7 +123,7 @@ public AuthLoginRespVO smsLogin(AuthSmsLoginReqVO reqVO) {
             throw exception(USER_NOT_EXISTS);
         }
 
-        // 缓存登陆用户到 Redis 中，返回 sessionId 编号
+        // 创建 Token 令牌，记录登录日志
         return createTokenAfterLoginSuccess(user.getId(), reqVO.getMobile(), LoginLogTypeEnum.LOGIN_MOBILE);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java
Patch:
@@ -87,7 +87,7 @@ public Long createUser(UserCreateReqVO reqVO) {
         // 插入用户
         AdminUserDO user = UserConvert.INSTANCE.convert(reqVO);
         user.setStatus(CommonStatusEnum.ENABLE.getStatus()); // 默认开启
-        user.setPassword(passwordEncoder.encode(reqVO.getPassword())); // 加密密码
+        user.setPassword(encodePassword(reqVO.getPassword())); // 加密密码
         userMapper.insert(user);
         // 插入关联岗位
         if (CollectionUtil.isNotEmpty(user.getPostIds())) {

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FilePageReqVO.java
Patch:
@@ -21,7 +21,7 @@ public class FilePageReqVO extends PageParam {
     @ApiModelProperty(value = "文件路径", example = "yudao", notes = "模糊匹配")
     private String path;
 
-    @ApiModelProperty(value = "文件类型", example = "jpg", notes = "模糊匹配")
+    @ApiModelProperty(value = "文件类型", example = "application/octet-stream", notes = "模糊匹配")
     private String type;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/file/FileDO.java
Patch:
@@ -46,9 +46,7 @@ public class FileDO extends BaseDO {
      */
     private String url;
     /**
-     * 文件类型
-     *
-     * 通过 {@link cn.hutool.core.io.FileTypeUtil#getType(InputStream)} 获取
+     * 文件的MIME类型，例如"application/octet-stream"
      */
     private String type;
     /**

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceTest.java
Patch:
@@ -40,15 +40,15 @@ public void testGetFilePage() {
         // mock 数据
         FileDO dbFile = randomPojo(FileDO.class, o -> { // 等会查询到
             o.setPath("yunai");
-            o.setType("jpg");
+            o.setType("image/jpg");
             o.setCreateTime(buildTime(2021, 1, 15));
         });
         fileMapper.insert(dbFile);
         // 测试 path 不匹配
         fileMapper.insert(ObjectUtils.cloneIgnoreId(dbFile, o -> o.setPath("tudou")));
         // 测试 type 不匹配
         fileMapper.insert(ObjectUtils.cloneIgnoreId(dbFile, o -> {
-            o.setType("png");
+            o.setType("image/png");
         }));
         // 测试 createTime 不匹配
         fileMapper.insert(ObjectUtils.cloneIgnoreId(dbFile, o -> {
@@ -90,7 +90,7 @@ public void testCreateFile_success() throws Exception {
         assertEquals(10L, file.getConfigId());
         assertEquals(path, file.getPath());
         assertEquals(url, file.getUrl());
-        assertEquals("jpg", file.getType());
+        assertEquals("image/jpg", file.getType());
         assertEquals(content.length, file.getSize());
     }
 

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/enums/WebFilterOrderEnum.java
Patch:
@@ -3,7 +3,7 @@
 /**
  * Web 过滤器顺序的枚举类，保证过滤器按照符合我们的预期
  *
- *  考虑到每个 starter 都需要用到该工具类，所以放到 common 模块下的 util 包下
+ *  考虑到每个 starter 都需要用到该工具类，所以放到 common 模块下的 enums 包下
  *
  * @author 芋道源码
  */

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageParam.java
Patch:
@@ -23,8 +23,8 @@ public class PageParam implements Serializable {
 
     @ApiModelProperty(value = "每页条数，最大值为 100", required = true, example = "10")
     @NotNull(message = "每页条数不能为空")
-    @Min(value = 1, message = "页码最小值为 1")
-    @Max(value = 100, message = "页码最大值为 100")
+    @Min(value = 1, message = "每页条数最小值为 1")
+    @Max(value = 100, message = "每页条数最大值为 100")
     private Integer pageSize = PAGE_SIZE;
 
 }

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/config/YudaoDataPermissionAutoConfiguration.java
Patch:
@@ -13,7 +13,7 @@
 import java.util.List;
 
 /**
- * 数据全新啊的自动配置类
+ * 数据权限的自动配置类
  *
  * @author 芋道源码
  */

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/test/java/cn/iocoder/yudao/framework/datapermission/core/db/DataPermissionDatabaseInterceptorTest.java
Patch:
@@ -62,7 +62,7 @@ public void testBeforeQuery_withoutRule() {
             // 调用
             interceptor.beforeQuery(null, mappedStatement, null, null, null, boundSql);
             // 断言
-            pluginUtilsMock.verify(never(), () -> PluginUtils.mpBoundSql(boundSql));
+            pluginUtilsMock.verify(() -> PluginUtils.mpBoundSql(boundSql), never());
         }
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-dict/src/main/java/cn/iocoder/yudao/framework/dict/config/YudaoDictAutoConfiguration.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.framework.dict.config;
 
-import cn.iocoder.yudao.framework.dict.core.service.DictDataFrameworkService;
 import cn.iocoder.yudao.framework.dict.core.util.DictFrameworkUtils;
+import cn.iocoder.yudao.module.system.api.dict.DictDataApi;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -10,8 +10,8 @@ public class YudaoDictAutoConfiguration {
 
     @Bean
     @SuppressWarnings("InstantiationOfUtilityClass")
-    public DictFrameworkUtils dictUtils(DictDataFrameworkService service) {
-        DictFrameworkUtils.init(service);
+    public DictFrameworkUtils dictUtils(DictDataApi dictDataApi) {
+        DictFrameworkUtils.init(dictDataApi);
         return new DictFrameworkUtils();
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/core/generator/ErrorCodeAutoGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.generator;
+package cn.iocoder.yudao.framework.errorcode.core.generator;
 
 /**
  * 错误码的自动生成器

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/core/loader/ErrorCodeLoader.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.loader;
+package cn.iocoder.yudao.framework.errorcode.core.loader;
 
 import cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil;
 

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayQrPayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayWapPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXLitePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXNativePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPubPayClient;
@@ -62,7 +63,7 @@ private <Config extends PayClientConfig> AbstractPayClient<Config> createPayClie
         // TODO @芋艿 WX_LITE WX_APP 如果不添加在 项目启动的时候去初始化会报错无法启动。所以我手动加了两个，具体需要你来配
         switch (channelEnum) {
             case WX_PUB: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
-            case WX_LITE: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
+            case WX_LITE: return (AbstractPayClient<Config>) new WXLitePayClient(channelId, (WXPayClientConfig) config); //微信小程序请求支付
             case WX_APP: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_NATIVE: return (AbstractPayClient<Config>) new WXNativePayClient(channelId, (WXPayClientConfig) config);
             case ALIPAY_WAP: return (AbstractPayClient<Config>) new AlipayWapPayClient(channelId, (AlipayPayClientConfig) config);

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPayClientConfig.java
Patch:
@@ -11,8 +11,6 @@
 import java.io.FileNotFoundException;
 import java.util.Set;
 
-// TODO 芋艿：参数校验
-
 /**
  * 微信支付的 PayClientConfig 实现类
  * 属性主要来自 {@link com.github.binarywang.wxpay.config.WxPayConfig} 的必要属性
@@ -22,7 +20,6 @@
 @Data
 public class WXPayClientConfig implements PayClientConfig {
 
-    // TODO 芋艿：V2 or V3 客户端
     /**
      * API 版本 - V2
      * https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_1

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/PayChannelEnum.java
Patch:
@@ -22,7 +22,6 @@ public enum PayChannelEnum {
     WX_APP("wx_app", "微信 App 支付", WXPayClientConfig.class),
     WX_NATIVE("wx_native", "微信 native 支付", WXPayClientConfig.class),
 
-
     ALIPAY_PC("alipay_pc", "支付宝 PC 网站支付", AlipayPayClientConfig.class),
     ALIPAY_WAP("alipay_wap", "支付宝 Wap 网站支付", AlipayPayClientConfig.class),
     ALIPAY_APP("alipay_app", "支付宝App 支付", AlipayPayClientConfig.class),

File: yudao-framework/yudao-spring-boot-starter-biz-social/src/main/java/cn/iocoder/yudao/framework/social/config/YudaoSocialAutoConfiguration.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.social.config;
 
-import cn.hutool.core.util.ReflectUtil;
 import cn.iocoder.yudao.framework.social.core.YudaoAuthRequestFactory;
 import com.xkcoding.http.HttpUtil;
 import com.xkcoding.http.support.hutool.HutoolImpl;
@@ -11,6 +10,7 @@
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Primary;
 
 /**
  * 社交自动装配类
@@ -24,6 +24,7 @@
 public class YudaoSocialAutoConfiguration {
 
     @Bean
+    @Primary
     @ConditionalOnProperty(prefix = "justauth", value = "enabled", havingValue = "true", matchIfMissing = true)
     public YudaoAuthRequestFactory yudaoAuthRequestFactory(JustAuthProperties properties, AuthStateCache authStateCache) {
         // 需要修改 HttpUtil 使用的实现，避免类报错

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/mq/TenantRedisMessageInterceptor.java
Patch:
@@ -5,6 +5,8 @@
 import cn.iocoder.yudao.framework.mq.core.message.AbstractRedisMessage;
 import cn.iocoder.yudao.framework.tenant.core.context.TenantContextHolder;
 
+import static cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils.HEADER_TENANT_ID;
+
 /**
  * 多租户 {@link AbstractRedisMessage} 拦截器
  *
@@ -15,8 +17,6 @@
  */
 public class TenantRedisMessageInterceptor implements RedisMessageInterceptor {
 
-    private static final String HEADER_TENANT_ID = "tenant-id";
-
     @Override
     public void sendMessageBefore(AbstractRedisMessage message) {
         Long tenantId = TenantContextHolder.getTenantId();

File: yudao-framework/yudao-spring-boot-starter-biz-tenant/src/main/java/cn/iocoder/yudao/framework/tenant/core/web/TenantContextWebFilter.java
Patch:
@@ -18,8 +18,6 @@
  */
 public class TenantContextWebFilter extends OncePerRequestFilter {
 
-    private static final String HEADER_TENANT_ID = "tenant-id";
-
     @Override
     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain)
             throws ServletException, IOException {

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoSecurityAutoConfiguration.java
Patch:
@@ -8,7 +8,7 @@
 import cn.iocoder.yudao.framework.security.core.service.SecurityFrameworkService;
 import cn.iocoder.yudao.framework.security.core.service.SecurityFrameworkServiceImpl;
 import cn.iocoder.yudao.framework.web.core.handler.GlobalExceptionHandler;
-import cn.iocoder.yudao.module.system.api.auth.OAuth2TokenApi;
+import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
 import cn.iocoder.yudao.module.system.api.permission.PermissionApi;
 import org.springframework.beans.factory.config.MethodInvokingFactoryBean;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
@@ -81,7 +81,7 @@ public TokenAuthenticationFilter authenticationTokenFilter(GlobalExceptionHandle
         return new TokenAuthenticationFilter(securityProperties, globalExceptionHandler, oauth2TokenApi);
     }
 
-    @Bean("ss") // 使用 Spring Security 的缩写，方便食用
+    @Bean("ss") // 使用 Spring Security 的缩写，方便使用
     public SecurityFrameworkService securityFrameworkService(PermissionApi permissionApi) {
         return new SecurityFrameworkServiceImpl(permissionApi);
     }

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/filter/TokenAuthenticationFilter.java
Patch:
@@ -10,8 +10,8 @@
 import cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils;
 import cn.iocoder.yudao.framework.web.core.handler.GlobalExceptionHandler;
 import cn.iocoder.yudao.framework.web.core.util.WebFrameworkUtils;
-import cn.iocoder.yudao.module.system.api.auth.OAuth2TokenApi;
-import cn.iocoder.yudao.module.system.api.auth.dto.OAuth2AccessTokenCheckRespDTO;
+import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
+import cn.iocoder.yudao.module.system.api.oauth2.dto.OAuth2AccessTokenCheckRespDTO;
 import lombok.RequiredArgsConstructor;
 import org.springframework.security.access.AccessDeniedException;
 import org.springframework.web.filter.OncePerRequestFilter;

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/core/util/WebFrameworkUtils.java
Patch:
@@ -23,7 +23,7 @@ public class WebFrameworkUtils {
 
     private static final String REQUEST_ATTRIBUTE_COMMON_RESULT = "common_result";
 
-    private static final String HEADER_TENANT_ID = "tenant-id";
+    public static final String HEADER_TENANT_ID = "tenant-id";
 
     private static WebProperties properties;
 

File: yudao-module-infra/yudao-module-infra-api/src/main/java/cn/iocoder/yudao/module/infra/api/logger/dto/ApiAccessLogCreateReqDTO.java
Patch:
@@ -1,12 +1,12 @@
-package cn.iocoder.yudao.framework.apilog.core.service.dto;
+package cn.iocoder.yudao.module.infra.api.logger.dto;
 
 import lombok.Data;
 
 import javax.validation.constraints.NotNull;
 import java.util.Date;
 
 /**
- * API 访问日志创建 DTO
+ * API 访问日志
  *
  * @author 芋道源码
  */

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApiImpl.java
Patch:
@@ -19,8 +19,8 @@ public class FileApiImpl implements FileApi {
     private FileService fileService;
 
     @Override
-    public String createFile(String path, byte[] content) throws Exception {
-        return fileService.createFile(path, content);
+    public String createFile(String name, String path, byte[] content) {
+        return fileService.createFile(name, path, content);
     }
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileController.java
Patch:
@@ -22,6 +22,7 @@
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
+import javax.annotation.security.PermitAll;
 import javax.servlet.http.HttpServletResponse;
 import javax.validation.Valid;
 
@@ -46,7 +47,7 @@ public class FileController {
     @OperateLog(logArgs = false) // 上传文件，没有记录操作日志的必要
     public CommonResult<String> uploadFile(@RequestParam("file") MultipartFile file,
                                            @RequestParam(value = "path", required = false) String path) throws Exception {
-        return success(fileService.createFile(path, IoUtil.readBytes(file.getInputStream())));
+        return success(fileService.createFile(file.getOriginalFilename(), path, IoUtil.readBytes(file.getInputStream())));
     }
 
     @DeleteMapping("/delete")
@@ -59,6 +60,7 @@ public CommonResult<Boolean> deleteFile(@RequestParam("id") Long id) throws Exce
     }
 
     @GetMapping("/{configId}/get/{path}")
+    @PermitAll
     @ApiOperation("下载文件")
     @ApiImplicitParams({
             @ApiImplicitParam(name = "configId", value = "配置编号",  required = true, dataTypeClass = Long.class),

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FileRespVO.java
Patch:
@@ -16,6 +16,9 @@ public class FileRespVO {
     @ApiModelProperty(value = "文件路径", required = true, example = "yudao.jpg")
     private String path;
 
+    @ApiModelProperty(value = "原文件名", required = true, example = "yudao.jpg")
+    private String name;
+
     @ApiModelProperty(value = "文件 URL", required = true, example = "https://www.iocoder.cn/yudao.jpg")
     private String url;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/convert/logger/ApiAccessLogConvert.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.infra.convert.logger;
 
-import cn.iocoder.yudao.framework.apilog.core.service.dto.ApiAccessLogCreateReqDTO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
+import cn.iocoder.yudao.module.infra.api.logger.dto.ApiAccessLogCreateReqDTO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apiaccesslog.ApiAccessLogExcelVO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apiaccesslog.ApiAccessLogRespVO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.logger.ApiAccessLogDO;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/convert/logger/ApiErrorLogConvert.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.infra.convert.logger;
 
-import cn.iocoder.yudao.framework.apilog.core.service.dto.ApiErrorLogCreateReqDTO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
+import cn.iocoder.yudao.module.infra.api.logger.dto.ApiErrorLogCreateReqDTO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apierrorlog.ApiErrorLogExcelVO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apierrorlog.ApiErrorLogRespVO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.logger.ApiErrorLogDO;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/framework/security/config/SecurityConfiguration.java
Patch:
@@ -35,8 +35,6 @@ public void customize(ExpressionUrlAuthorizationConfigurer<HttpSecurity>.Express
                 // Spring Boot Admin Server 的安全配置
                 registry.antMatchers(adminSeverContextPath).anonymous()
                         .antMatchers(adminSeverContextPath + "/**").anonymous();
-                // 文件的获取接口，可匿名访问
-                registry.antMatchers(buildAdminApi("/infra/file/*/get/**"), buildAppApi("/infra/file/get/**")).permitAll();
             }
 
         };

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileService.java
Patch:
@@ -22,11 +22,12 @@ public interface FileService {
     /**
      * 保存文件，并返回文件的访问路径
      *
+     * @param name 文件名称
      * @param path 文件路径
      * @param content 文件内容
      * @return 文件路径
      */
-    String createFile(String path, byte[] content) throws Exception;
+    String createFile(String name, String path, byte[] content);
 
     /**
      * 删除文件

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceTest.java
Patch:
@@ -80,9 +80,9 @@ public void testCreateFile_success() throws Exception {
         String url = randomString();
         when(client.upload(same(content), same(path))).thenReturn(url);
         when(client.getId()).thenReturn(10L);
-
+        String name = "单测文件名";
         // 调用
-        String result = fileService.createFile(path, content);
+        String result = fileService.createFile(name, path, content);
         // 断言
         assertEquals(result, url);
         // 校验数据

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/logger/ApiAccessLogServiceImplTest.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.infra.service.logger;
 
 import cn.hutool.core.util.RandomUtil;
-import cn.iocoder.yudao.framework.apilog.core.service.dto.ApiAccessLogCreateReqDTO;
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
 import cn.iocoder.yudao.framework.test.core.ut.BaseDbUnitTest;
 import cn.iocoder.yudao.framework.test.core.util.RandomUtils;
+import cn.iocoder.yudao.module.infra.api.logger.dto.ApiAccessLogCreateReqDTO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apiaccesslog.ApiAccessLogExportReqVO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apiaccesslog.ApiAccessLogPageReqVO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.logger.ApiAccessLogDO;
@@ -155,7 +155,7 @@ public void testCreateApiAccessLogAsync() {
                 dto -> dto.setUserType(RandomUtil.randomEle(UserTypeEnum.values()).getValue()));
 
         // 调用
-        apiAccessLogService.createApiAccessLogAsync(createDTO);
+        apiAccessLogService.createApiAccessLog(createDTO);
         // 断言
         ApiAccessLogDO infApiAccessLogDO = apiAccessLogMapper.selectOne(null);
         assertNotNull(infApiAccessLogDO);

File: yudao-module-infra/yudao-module-infra-biz/src/test/java/cn/iocoder/yudao/module/infra/service/logger/ApiErrorLogServiceImplTest.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.module.infra.service.logger;
 
 import cn.hutool.core.util.RandomUtil;
-import cn.iocoder.yudao.framework.apilog.core.service.dto.ApiErrorLogCreateReqDTO;
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;
 import cn.iocoder.yudao.framework.test.core.ut.BaseDbUnitTest;
 import cn.iocoder.yudao.framework.test.core.util.RandomUtils;
+import cn.iocoder.yudao.module.infra.api.logger.dto.ApiErrorLogCreateReqDTO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apierrorlog.ApiErrorLogExportReqVO;
 import cn.iocoder.yudao.module.infra.controller.admin.logger.vo.apierrorlog.ApiErrorLogPageReqVO;
 import cn.iocoder.yudao.module.infra.dal.dataobject.logger.ApiErrorLogDO;
@@ -187,7 +187,7 @@ public void testCreateApiErrorLogAsync() {
                 dto -> dto.setUserType(RandomUtil.randomEle(UserTypeEnum.values()).getValue()));
 
         // 调用
-        apiErrorLogService.createApiErrorLogAsync(createDTO);
+        apiErrorLogService.createApiErrorLog(createDTO);
         // 断言
         ApiErrorLogDO infApiErrorLogDO = infApiErrorLogMapper.selectOne(null);
         assertNotNull(infApiErrorLogDO);

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/address/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.module.member.controller.app.address;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/auth/vo/AppAuthSocialLoginReqVO.java
Patch:
@@ -17,7 +17,7 @@
 @NoArgsConstructor
 @AllArgsConstructor
 @Builder
-public class AppAuthSocialQuickLoginReqVO {
+public class AppAuthSocialLoginReqVO {
 
     @ApiModelProperty(value = "社交平台的类型", required = true, example = "10", notes = "参见 SysUserSocialTypeEnum 枚举值")
     @InEnum(SocialTypeEnum.class)

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/controller/app/user/AppUserController.java
Patch:
@@ -40,7 +40,7 @@ public CommonResult<Boolean> updateUserNickname(@RequestParam("nickname") String
         return success(true);
     }
 
-    @PutMapping("/update-avatar")
+    @PostMapping("/update-avatar")
     @ApiOperation("修改用户头像")
     @PreAuthenticated
     public CommonResult<String> updateUserAvatar(@RequestParam("avatarFile") MultipartFile file) throws Exception {

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/convert/auth/AuthConvert.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.yudao.module.member.controller.app.auth.vo.*;
 import cn.iocoder.yudao.module.member.controller.app.social.vo.AppSocialUserUnbindReqVO;
-import cn.iocoder.yudao.module.system.api.auth.dto.OAuth2AccessTokenRespDTO;
+import cn.iocoder.yudao.module.system.api.oauth2.dto.OAuth2AccessTokenRespDTO;
 import cn.iocoder.yudao.module.system.api.sms.dto.code.SmsCodeSendReqDTO;
 import cn.iocoder.yudao.module.system.api.sms.dto.code.SmsCodeUseReqDTO;
 import cn.iocoder.yudao.module.system.api.social.dto.SocialUserBindReqDTO;
@@ -16,8 +16,7 @@ public interface AuthConvert {
 
     AuthConvert INSTANCE = Mappers.getMapper(AuthConvert.class);
 
-    SocialUserBindReqDTO convert(Long userId, Integer userType, AppAuthSocialBindLoginReqVO reqVO);
-    SocialUserBindReqDTO convert(Long userId, Integer userType, AppAuthSocialQuickLoginReqVO reqVO);
+    SocialUserBindReqDTO convert(Long userId, Integer userType, AppAuthSocialLoginReqVO reqVO);
     SocialUserUnbindReqDTO convert(Long userId, Integer userType, AppSocialUserUnbindReqVO reqVO);
 
     SmsCodeSendReqDTO convert(AppAuthSmsSendReqVO reqVO);

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/convert/user/UserConvert.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.member.convert.user;
 
+import cn.iocoder.yudao.module.member.api.user.dto.UserInfoDTO;
 import cn.iocoder.yudao.module.member.api.user.dto.UserRespDTO;
 import cn.iocoder.yudao.module.member.controller.app.user.vo.AppUserInfoRespVO;
 import cn.iocoder.yudao.module.member.dal.dataobject.user.MemberUserDO;
@@ -14,4 +15,5 @@ public interface UserConvert {
     AppUserInfoRespVO convert(MemberUserDO bean);
 
     UserRespDTO convert2(MemberUserDO bean);
+    UserInfoDTO convertInfo(MemberUserDO bean);
 }

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/dal/dataobject/address/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.module.member.dal.dataobject.address;

File: yudao-module-member/yudao-module-member-biz/src/main/java/cn/iocoder/yudao/module/member/framework/package-info.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * 属于 system 模块的 framework 封装
+ * 属于 member 模块的 framework 封装
  *
  * @author 芋道源码
  */

File: yudao-module-member/yudao-module-member-biz/src/test/java/cn/iocoder/yudao/module/member/service/auth/MemberAuthServiceTest.java
Patch:
@@ -9,7 +9,7 @@
 import cn.iocoder.yudao.module.member.dal.dataobject.user.MemberUserDO;
 import cn.iocoder.yudao.module.member.dal.mysql.user.MemberUserMapper;
 import cn.iocoder.yudao.module.member.service.user.MemberUserService;
-import cn.iocoder.yudao.module.system.api.auth.OAuth2TokenApi;
+import cn.iocoder.yudao.module.system.api.oauth2.OAuth2TokenApi;
 import cn.iocoder.yudao.module.system.api.logger.LoginLogApi;
 import cn.iocoder.yudao.module.system.api.sms.SmsCodeApi;
 import cn.iocoder.yudao.module.system.api.social.SocialUserApi;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/dict/dto/DictDataRespDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.framework.dict.core.dto;
+package cn.iocoder.yudao.module.system.api.dict.dto;
 
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import lombok.Data;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/dto/ErrorCodeAutoGenerateReqDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.dto;
+package cn.iocoder.yudao.module.system.api.errorcode.dto;
 
 import lombok.Data;
 import lombok.experimental.Accessors;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/dto/ErrorCodeRespDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.dto;
+package cn.iocoder.yudao.module.system.api.errorcode.dto;
 
 import lombok.Data;
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/oauth2/dto/OAuth2AccessTokenCheckRespDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.api.auth.dto;
+package cn.iocoder.yudao.module.system.api.oauth2.dto;
 
 import lombok.Data;
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/oauth2/dto/OAuth2AccessTokenCreateReqDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.api.auth.dto;
+package cn.iocoder.yudao.module.system.api.oauth2.dto;
 
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.validation.InEnum;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/oauth2/dto/OAuth2AccessTokenRespDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.api.auth.dto;
+package cn.iocoder.yudao.module.system.api.oauth2.dto;
 
 import lombok.Data;
 import lombok.experimental.Accessors;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/oauth2/OAuth2ClientConstants.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.enums.auth;
+package cn.iocoder.yudao.module.system.enums.oauth2;
 
 /**
  * OAuth2.0 客户端的通用枚举

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/oauth2/OAuth2GrantTypeEnum.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.enums.auth;
+package cn.iocoder.yudao.module.system.enums.oauth2;
 
 import cn.hutool.core.util.ArrayUtil;
 import lombok.AllArgsConstructor;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FilePageReqVO.java
Patch:
@@ -21,8 +21,8 @@ public class FilePageReqVO extends PageParam {
     @ApiModelProperty(value = "文件路径", example = "yudao", notes = "模糊匹配")
     private String path;
 
-    @ApiModelProperty(value = "文件扩展名", example = "jpg", notes = "模糊匹配")
-    private String extName;
+    @ApiModelProperty(value = "文件类型", example = "application/octet-stream", notes = "模糊匹配")
+    private String type;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始创建时间")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/file/FileMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface FileMapper extends BaseMapperX<FileDO> {
     default PageResult<FileDO> selectPage(FilePageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<FileDO>()
                 .likeIfPresent(FileDO::getPath, reqVO.getPath())
-                .likeIfPresent(FileDO::getExtName, reqVO.getExtName())
+                .likeIfPresent(FileDO::getType, reqVO.getType())
                 .betweenIfPresent(FileDO::getCreateTime, reqVO.getBeginCreateTime(), reqVO.getEndCreateTime())
                 .orderByDesc(FileDO::getId));
     }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/FilePageReqVO.java
Patch:
@@ -21,8 +21,8 @@ public class FilePageReqVO extends PageParam {
     @ApiModelProperty(value = "文件路径", example = "yudao", notes = "模糊匹配")
     private String path;
 
-    @ApiModelProperty(value = "文件类型", example = "jpg", notes = "模糊匹配")
-    private String type;
+    @ApiModelProperty(value = "文件扩展名", example = "jpg", notes = "模糊匹配")
+    private String extName;
 
     @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
     @ApiModelProperty(value = "开始创建时间")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/file/FileMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface FileMapper extends BaseMapperX<FileDO> {
     default PageResult<FileDO> selectPage(FilePageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<FileDO>()
                 .likeIfPresent(FileDO::getPath, reqVO.getPath())
-                .likeIfPresent(FileDO::getExtName, reqVO.getType())
+                .likeIfPresent(FileDO::getExtName, reqVO.getExtName())
                 .betweenIfPresent(FileDO::getCreateTime, reqVO.getBeginCreateTime(), reqVO.getEndCreateTime())
                 .orderByDesc(FileDO::getId));
     }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApiImpl.java
Patch:
@@ -19,8 +19,8 @@ public class FileApiImpl implements FileApi {
     private FileService fileService;
 
     @Override
-    public String createFile(String name, String path, byte[] content) {
-        return fileService.createFile(name, path, content);
+    public String createFile(String name, String path, String mimeType, byte[] content) {
+        return fileService.createFile(name, path, mimeType, content);
     }
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileController.java
Patch:
@@ -46,7 +46,7 @@ public class FileController {
     @OperateLog(logArgs = false) // 上传文件，没有记录操作日志的必要
     public CommonResult<String> uploadFile(@RequestParam("file") MultipartFile file,
                                            @RequestParam(value = "path", required = false) String path) throws Exception {
-        return success(fileService.createFile(file.getOriginalFilename(), path, IoUtil.readBytes(file.getInputStream())));
+        return success(fileService.createFile(file.getOriginalFilename(), path, file.getContentType(), IoUtil.readBytes(file.getInputStream())));
     }
 
     @DeleteMapping("/delete")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/file/FileMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface FileMapper extends BaseMapperX<FileDO> {
     default PageResult<FileDO> selectPage(FilePageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<FileDO>()
                 .likeIfPresent(FileDO::getPath, reqVO.getPath())
-                .likeIfPresent(FileDO::getType, reqVO.getType())
+                .likeIfPresent(FileDO::getExtName, reqVO.getType())
                 .betweenIfPresent(FileDO::getCreateTime, reqVO.getBeginCreateTime(), reqVO.getEndCreateTime())
                 .orderByDesc(FileDO::getId));
     }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileService.java
Patch:
@@ -24,10 +24,11 @@ public interface FileService {
      *
      * @param name 文件名称
      * @param path 文件路径
+     * @param mimeType 文件MIME类型
      * @param content 文件内容
      * @return 文件路径
      */
-    String createFile(String name, String path, byte[] content);
+    String createFile(String name, String path, String mimeType,byte[] content);
 
     /**
      * 删除文件

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApiImpl.java
Patch:
@@ -19,8 +19,8 @@ public class FileApiImpl implements FileApi {
     private FileService fileService;
 
     @Override
-    public String createFile(String name, String path, byte[] content) {
-        return fileService.createFile(name, path, content);
+    public String createFile(String name, String path, String mimeType, byte[] content) {
+        return fileService.createFile(name, path, mimeType, content);
     }
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileController.java
Patch:
@@ -46,7 +46,7 @@ public class FileController {
     @OperateLog(logArgs = false) // 上传文件，没有记录操作日志的必要
     public CommonResult<String> uploadFile(@RequestParam("file") MultipartFile file,
                                            @RequestParam(value = "path", required = false) String path) throws Exception {
-        return success(fileService.createFile(file.getOriginalFilename(), path, IoUtil.readBytes(file.getInputStream())));
+        return success(fileService.createFile(file.getOriginalFilename(), path, file.getContentType(), IoUtil.readBytes(file.getInputStream())));
     }
 
     @DeleteMapping("/delete")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileService.java
Patch:
@@ -24,10 +24,11 @@ public interface FileService {
      *
      * @param name 文件名称
      * @param path 文件路径
+     * @param mimeType 文件MIME类型
      * @param content 文件内容
      * @return 文件路径
      */
-    String createFile(String name, String path, byte[] content);
+    String createFile(String name, String path, String mimeType,byte[] content);
 
     /**
      * 删除文件

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/config/YudaoErrorCodeConfiguration.java
Patch:
@@ -6,6 +6,7 @@
 import cn.iocoder.yudao.framework.errorcode.core.loader.ErrorCodeLoaderImpl;
 import cn.iocoder.yudao.module.system.api.errorcode.ErrorCodeApi;
 import org.springframework.beans.factory.annotation.Value;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -17,6 +18,7 @@
  * @author 芋道源码
  */
 @Configuration
+@ConditionalOnProperty(prefix = "yudao.error-code", value = "enable", matchIfMissing = true) // 允许使用 yudao.error-code.enable=false 禁用访问日志
 @EnableConfigurationProperties(ErrorCodeProperties.class)
 @EnableScheduling // 开启调度任务的功能，因为 ErrorCodeRemoteLoader 通过定时刷新错误码
 public class YudaoErrorCodeConfiguration {

File: yudao-module-wechat/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/controller/admin/account/vo/WxAccountUpdateReqVO.java
Patch:
@@ -4,6 +4,9 @@
 import io.swagger.annotations.*;
 import javax.validation.constraints.*;
 
+/**
+ * @author fengdan
+ */
 @ApiModel("管理后台 - 公众号账户更新 Request VO")
 @Data
 @EqualsAndHashCode(callSuper = true)

File: yudao-module-wechat/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/dal/mysql/account/WxAccountMapper.java
Patch:
@@ -22,7 +22,7 @@ default PageResult<WxAccountDO> selectPage(WxAccountPageReqVO reqVO) {
         return selectPage(reqVO, new LambdaQueryWrapperX<WxAccountDO>()
                 .likeIfPresent(WxAccountDO::getName, reqVO.getName())
                 .eqIfPresent(WxAccountDO::getAccount, reqVO.getAccount())
-                .eqIfPresent(WxAccountDO::getAppId, reqVO.getAppid())
+                .eqIfPresent(WxAccountDO::getAppId, reqVO.getAppId())
                 .betweenIfPresent(WxAccountDO::getCreateTime, reqVO.getBeginCreateTime(), reqVO.getEndCreateTime())
                 .orderByDesc(WxAccountDO::getId));
     }
@@ -31,7 +31,7 @@ default List<WxAccountDO> selectList(WxAccountExportReqVO reqVO) {
         return selectList(new LambdaQueryWrapperX<WxAccountDO>()
                 .likeIfPresent(WxAccountDO::getName, reqVO.getName())
                 .eqIfPresent(WxAccountDO::getAccount, reqVO.getAccount())
-                .eqIfPresent(WxAccountDO::getAppId, reqVO.getAppid())
+                .eqIfPresent(WxAccountDO::getAppId, reqVO.getAppId())
                 .betweenIfPresent(WxAccountDO::getCreateTime, reqVO.getBeginCreateTime(), reqVO.getEndCreateTime())
                 .orderByDesc(WxAccountDO::getId));
     }

File: yudao-module-wechat/yudao-module-mp-api/src/main/java/cn/iocoder/yudao/module/mp/enums/ErrorCodeConstants.java
Patch:
@@ -10,8 +10,8 @@
 public interface ErrorCodeConstants {
 
     // ========== 用户相关  1004001000============
-    ErrorCode WX_ACCOUNT_NOT_EXISTS = new ErrorCode(1004001000, "用户不存在");
-    ErrorCode WX_ACCOUNT_FANS_NOT_EXISTS = new ErrorCode(1004001000, "用户不存在");
-    ErrorCode COMMON_NOT_EXISTS = new ErrorCode(1004001000, "用户不存在");
+    ErrorCode WX_ACCOUNT_NOT_EXISTS = new ErrorCode(1004001000, "公众号账户不存在");
+    ErrorCode WX_ACCOUNT_FANS_NOT_EXISTS = new ErrorCode(1004001001, "粉丝账号不存在");
+    ErrorCode COMMON_NOT_EXISTS = new ErrorCode(1004001002, "用户不存在");
 
 }

File: yudao-module-wechat/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/mq/message/WxConfigDataRefreshMessage.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.mp.mq.message.dict;
+package cn.iocoder.yudao.module.mp.mq.message;
 
 import cn.iocoder.yudao.framework.mq.core.pubsub.AbstractChannelMessage;
 import lombok.Data;

File: yudao-module-wechat/yudao-module-mp-biz/src/main/java/cn/iocoder/yudao/module/mp/mq/producer/WxMpConfigDataProducer.java
Patch:
@@ -1,7 +1,7 @@
-package cn.iocoder.yudao.module.mp.mq.producer.dict;
+package cn.iocoder.yudao.module.mp.mq.producer;
 
 import cn.iocoder.yudao.framework.mq.core.RedisMQTemplate;
-import cn.iocoder.yudao.module.mp.mq.message.dict.WxConfigDataRefreshMessage;
+import cn.iocoder.yudao.module.mp.mq.message.WxConfigDataRefreshMessage;
 import org.springframework.stereotype.Component;
 
 import javax.annotation.Resource;

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/config/YudaoErrorCodeConfiguration.java
Patch:
@@ -19,7 +19,7 @@
 @Configuration
 @EnableConfigurationProperties(ErrorCodeProperties.class)
 @EnableScheduling // 开启调度任务的功能，因为 ErrorCodeRemoteLoader 通过定时刷新错误码
-public class ErrorCodeConfiguration {
+public class YudaoErrorCodeConfiguration {
 
     @Bean
     public ErrorCodeAutoGenerator errorCodeAutoGenerator(@Value("${spring.application.name}") String applicationName,

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/config/ErrorCodeProperties.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.config;
+package cn.iocoder.yudao.framework.errorcode.config;
 
 import lombok.Data;
 import org.springframework.boot.context.properties.ConfigurationProperties;

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/core/generator/ErrorCodeAutoGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.generator;
+package cn.iocoder.yudao.framework.errorcode.core.generator;
 
 /**
  * 错误码的自动生成器

File: yudao-framework/yudao-spring-boot-starter-biz-error-code/src/main/java/cn/iocoder/yudao/framework/errorcode/core/loader/ErrorCodeLoader.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.loader;
+package cn.iocoder.yudao.framework.errorcode.core.loader;
 
 import cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil;
 

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/dto/ErrorCodeAutoGenerateReqDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.dto;
+package cn.iocoder.yudao.module.system.api.errorcode.dto;
 
 import lombok.Data;
 import lombok.experimental.Accessors;

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/errorcode/dto/ErrorCodeRespDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.system.framework.errorcode.core.dto;
+package cn.iocoder.yudao.module.system.api.errorcode.dto;
 
 import lombok.Data;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/convert/errorcode/ErrorCodeConvert.java
Patch:
@@ -1,13 +1,13 @@
 package cn.iocoder.yudao.module.system.convert.errorcode;
 
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
+import cn.iocoder.yudao.module.system.api.errorcode.dto.ErrorCodeAutoGenerateReqDTO;
+import cn.iocoder.yudao.module.system.api.errorcode.dto.ErrorCodeRespDTO;
 import cn.iocoder.yudao.module.system.controller.admin.errorcode.vo.ErrorCodeCreateReqVO;
 import cn.iocoder.yudao.module.system.controller.admin.errorcode.vo.ErrorCodeExcelVO;
 import cn.iocoder.yudao.module.system.controller.admin.errorcode.vo.ErrorCodeRespVO;
-import cn.iocoder.yudao.module.system.dal.dataobject.errorcode.ErrorCodeDO;
-import cn.iocoder.yudao.module.system.framework.errorcode.core.dto.ErrorCodeAutoGenerateReqDTO;
-import cn.iocoder.yudao.module.system.framework.errorcode.core.dto.ErrorCodeRespDTO;
 import cn.iocoder.yudao.module.system.controller.admin.errorcode.vo.ErrorCodeUpdateReqVO;
+import cn.iocoder.yudao.module.system.dal.dataobject.errorcode.ErrorCodeDO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/auth/AdminAuthServiceImpl.java
Patch:
@@ -229,7 +229,7 @@ private void createLogoutLog(Long userId, Integer userType, Integer logType) {
         reqDTO.setTraceId(TracerUtils.getTraceId());
         reqDTO.setUserId(userId);
         reqDTO.setUserType(userType);
-        if (ObjectUtil.notEqual(getUserType(), userType)) {
+        if (ObjectUtil.equal(getUserType().getValue(), userType)) {
             reqDTO.setUsername(getUsername(userId));
         } else {
             reqDTO.setUsername(memberService.getMemberUserMobile(userId));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/user/OAuth2UserInfoRespVO.java
Patch:
@@ -8,7 +8,7 @@
 
 import java.util.List;
 
-@ApiModel("管理后台 - OAuth2.0 获得用户基本信息 Response VO")
+@ApiModel("管理后台 - OAuth2 获得用户基本信息 Response VO")
 @Data
 @NoArgsConstructor
 @AllArgsConstructor

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/oauth2/vo/user/OAuth2UserUpdateReqVO.java
Patch:
@@ -10,7 +10,7 @@
 import javax.validation.constraints.Email;
 import javax.validation.constraints.Size;
 
-@ApiModel("管理后台 - OAuth2.0 更新用户基本信息 Request VO")
+@ApiModel("管理后台 - OAuth2 更新用户基本信息 Request VO")
 @Data
 @NoArgsConstructor
 @AllArgsConstructor

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/swagger/config/YudaoSwaggerAutoConfiguration.java
Patch:
@@ -22,6 +22,8 @@
 import java.util.Collections;
 import java.util.List;
 
+import static springfox.documentation.builders.RequestHandlerSelectors.basePackage;
+
 /**
  * Swagger2 自动配置类
  *
@@ -56,7 +58,7 @@ public Docket createRestApi() {
                 .apiInfo(apiInfo(properties))
                 // 设置扫描指定 package 包下的
                 .select()
-//                .apis(basePackage(properties.getBasePackage()))
+                .apis(basePackage(properties.getBasePackage()))
 //                .apis(basePackage("cn.iocoder.yudao.module.system")) // 可用于 swagger 无法展示时使用
                 .paths(PathSelectors.any())
                 .build()

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayQrPayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayWapPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXLitePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXNativePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPubPayClient;
@@ -62,7 +63,7 @@ private <Config extends PayClientConfig> AbstractPayClient<Config> createPayClie
         // TODO @芋艿 WX_LITE WX_APP 如果不添加在 项目启动的时候去初始化会报错无法启动。所以我手动加了两个，具体需要你来配
         switch (channelEnum) {
             case WX_PUB: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
-            case WX_LITE: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
+            case WX_LITE: return (AbstractPayClient<Config>) new WXLitePayClient(channelId, (WXPayClientConfig) config); //微信小程序请求支付
             case WX_APP: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_NATIVE: return (AbstractPayClient<Config>) new WXNativePayClient(channelId, (WXPayClientConfig) config);
             case ALIPAY_WAP: return (AbstractPayClient<Config>) new AlipayWapPayClient(channelId, (AlipayPayClientConfig) config);

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPayClientConfig.java
Patch:
@@ -11,8 +11,6 @@
 import java.io.FileNotFoundException;
 import java.util.Set;
 
-// TODO 芋艿：参数校验
-
 /**
  * 微信支付的 PayClientConfig 实现类
  * 属性主要来自 {@link com.github.binarywang.wxpay.config.WxPayConfig} 的必要属性
@@ -22,7 +20,6 @@
 @Data
 public class WXPayClientConfig implements PayClientConfig {
 
-    // TODO 芋艿：V2 or V3 客户端
     /**
      * API 版本 - V2
      * https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_1

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/PayChannelEnum.java
Patch:
@@ -22,7 +22,6 @@ public enum PayChannelEnum {
     WX_APP("wx_app", "微信 App 支付", WXPayClientConfig.class),
     WX_NATIVE("wx_native", "微信 native 支付", WXPayClientConfig.class),
 
-
     ALIPAY_PC("alipay_pc", "支付宝 PC 网站支付", AlipayPayClientConfig.class),
     ALIPAY_WAP("alipay_wap", "支付宝 Wap 网站支付", AlipayPayClientConfig.class),
     ALIPAY_APP("alipay_app", "支付宝App 支付", AlipayPayClientConfig.class),

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoSecurityAutoConfiguration.java
Patch:
@@ -81,7 +81,7 @@ public TokenAuthenticationFilter authenticationTokenFilter(GlobalExceptionHandle
         return new TokenAuthenticationFilter(securityProperties, globalExceptionHandler, oauth2TokenApi);
     }
 
-    @Bean("ss") // 使用 Spring Security 的缩写，方便食用
+    @Bean("ss") // 使用 Spring Security 的缩写，方便使用
     public SecurityFrameworkService securityFrameworkService(PermissionApi permissionApi) {
         return new SecurityFrameworkServiceImpl(permissionApi);
     }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/type/StringListTypeHandler.java
Patch:
@@ -21,7 +21,7 @@
  */
 @MappedJdbcTypes(JdbcType.VARCHAR)
 @MappedTypes(List.class)
-public class StringLiSTTypeHandler implements TypeHandler<List<String>> {
+public class StringListTypeHandler implements TypeHandler<List<String>> {
 
     private static final String COMMA = ",";
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/sensitiveword/SensitiveWordDO.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
-import cn.iocoder.yudao.framework.mybatis.core.type.StringLiSTTypeHandler;
+import cn.iocoder.yudao.framework.mybatis.core.type.StringListTypeHandler;
 import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableId;
@@ -46,7 +46,7 @@ public class SensitiveWordDO extends BaseDO {
      * 例如说，tag 有短信、论坛两种，敏感词 "推广" 在短信下是敏感词，在论坛下不是敏感词。
      * 此时，我们会存储一条敏感词记录，它的 name 为"推广"，tag 为短信。
      */
-    @TableField(typeHandler = StringLiSTTypeHandler.class)
+    @TableField(typeHandler = StringListTypeHandler.class)
     private List<String> tags;
     /**
      * 状态

File: yudao-server/src/main/java/cn/iocoder/yudao/server/framework/tip/core/TipApplicationRunner.java
Patch:
@@ -23,7 +23,7 @@ public void run(ApplicationArguments args) throws Exception {
                             "项目启动成功！\n\t" +
                             "接口文档: \t{} \n\t" +
                             "开发文档: \t{} \n\t" +
-                            "视频教程: \t{} \n" +
+                            "视频教程: \t{} \n\t" +
                             "源码解析: \t{} \n" +
                             "----------------------------------------------------------",
                     "https://mtw.so/6w48hX",

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/PermissionServiceImpl.java
Patch:
@@ -250,7 +250,7 @@ public List<MenuDO> getRoleMenuListFromCache(Collection<Long> roleIds, Collectio
     public Set<Long> getUserRoleIdsFromCache(Long userId, Collection<Integer> roleStatuses) {
         Set<Long> cacheRoleIds = userRoleCache.get(userId);
         // 创建用户的时候没有分配角色，会存在空指针异常
-        if (cacheRoleIds == null || cacheRoleIds.isEmpty()) {
+        if (CollUtil.isEmpty(cacheRoleIds)) {
             return Collections.emptySet();
         }
         Set<Long> roleIds = new HashSet<>(cacheRoleIds);

File: yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/business/hi/task/inst/service/HiTaskInstService.java
Patch:
@@ -254,7 +254,7 @@ private void getFlow(BpmnModel bpmnModel, FlowElement targetFlowElement,
                 for (Long userId : bpmTaskAssignRuleDO.getOptions()) {
                     BpmTaskRespVO bpmTaskRespVO =
                         (BpmTaskRespVO)new BpmTaskRespVO().setName(targetFlowElement.getName());
-                    bpmTaskRespVOList.addFirst(bpmTaskRespVO);
+                    bpmTaskRespVOList.addLast(bpmTaskRespVO);
                     AdminUserDO adminUserDO = userDoMap.get(userId);
                     DeptDO deptDO = deptMap.get(adminUserDO.getDeptId());
                     bpmTaskRespVO.setAssigneeUser(setUser(adminUserDO));

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -215,6 +215,9 @@ public RoleDO getRoleFromCache(Long id) {
 
     @Override
     public List<RoleDO> getRoles(@Nullable Collection<Integer> statuses) {
+        if (statuses==null) {
+    		return roleMapper.selectList();
+		}
         return roleMapper.selectListByStatus(statuses);
     }
 

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/DeptDataPermissionRuleCustomizer.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.framework.datapermission.core.dept.rule;
+package cn.iocoder.yudao.framework.datapermission.core.rule.dept;
 
 /**
  * {@link DeptDataPermissionRule} 的自定义配置接口

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/rule/dept/package-info.java
Patch:
@@ -3,4 +3,4 @@
  *
  * @author 芋道源码
  */
-package cn.iocoder.yudao.framework.datapermission.core.dept;
+package cn.iocoder.yudao.framework.datapermission.core.rule.dept;

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/service/SecurityFrameworkService.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.framework.security.core.service;
 
 /**
- * Security 框架 Permission Service 接口，定义 security 组件需要的功能
+ * Security 框架 Service 接口，定义权限相关的校验操作
  *
  * @author 芋道源码
  */
-public interface SecurityPermissionFrameworkService {
+public interface SecurityFrameworkService {
 
     /**
      * 判断是否有权限

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/api/permission/dto/DeptDataPermissionRespDTO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.framework.datapermission.core.dept.service.dto;
+package cn.iocoder.yudao.module.system.api.permission.dto;
 
 import lombok.Data;
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/framework/datapermission/config/DataPermissionConfiguration.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.yudao.module.system.dal.dataobject.dept.DeptDO;
 import cn.iocoder.yudao.module.system.dal.dataobject.user.AdminUserDO;
-import cn.iocoder.yudao.framework.datapermission.core.dept.rule.DeptDataPermissionRuleCustomizer;
+import cn.iocoder.yudao.framework.datapermission.core.rule.dept.DeptDataPermissionRuleCustomizer;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 

File: yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/auth/AuthServiceImplTest.java
Patch:
@@ -13,6 +13,7 @@
 import cn.iocoder.yudao.module.system.enums.logger.LoginResultEnum;
 import cn.iocoder.yudao.module.system.service.common.CaptchaService;
 import cn.iocoder.yudao.module.system.service.logger.LoginLogService;
+import cn.iocoder.yudao.module.system.service.member.MemberService;
 import cn.iocoder.yudao.module.system.service.social.SocialUserService;
 import cn.iocoder.yudao.module.system.service.user.AdminUserService;
 import org.junit.jupiter.api.BeforeEach;
@@ -49,6 +50,8 @@ public class AuthServiceImplTest extends BaseDbUnitTest {
     private SmsCodeApi smsCodeApi;
     @MockBean
     private OAuth2TokenService oauth2TokenService;
+    @MockBean
+    private MemberService memberService;
 
     @MockBean
     private Validator validator;

File: yudao-module-mall/yudao-module-product-api/src/main/java/cn/iocoder/yudao/module/product/enums/ErrorCodeConstants.java
Patch:
@@ -11,6 +11,8 @@ public interface ErrorCodeConstants {
 
     // ========== 商品分类相关  1008001000============
     ErrorCode CATEGORY_NOT_EXISTS = new ErrorCode(1008001000, "商品分类不存在");
+    ErrorCode CATEGORY_PARENT_NOT_EXISTS = new ErrorCode(1008001001, "父分类不存在");
+    ErrorCode CATEGORY_EXISTS_CHILDREN = new ErrorCode(1008001002, "存在子分类，无法删除");
 
     // ========== 品牌相关编号 1008002000 ==========
     ErrorCode BRAND_NOT_EXISTS = new ErrorCode(1008002000, "品牌不存在");

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/mysql/category/CategoryMapper.java
Patch:
@@ -34,4 +34,7 @@ default List<CategoryDO> selectList(CategoryExportReqVO reqVO) {
                 .orderByDesc(CategoryDO::getId));
     }
 
+    default Long selectCountByParentId(Long parentId) {
+        return selectCount(CategoryDO::getParentId, parentId);
+    }
 }

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/controller/admin/category/vo/CategoryBaseVO.java
Patch:
@@ -15,7 +15,7 @@ public class CategoryBaseVO {
 
     @ApiModelProperty(value = "父分类编号", required = true, example = "1")
     @NotNull(message = "父分类编号不能为空")
-    private Long pid;
+    private Long parentId;
 
     @ApiModelProperty(value = "分类名称", required = true, example = "办公文具")
     @NotBlank(message = "分类名称不能为空")

File: yudao-module-mall/yudao-module-product-biz/src/main/java/cn/iocoder/yudao/module/product/dal/dataobject/category/CategoryDO.java
Patch:
@@ -28,8 +28,7 @@ public class CategoryDO extends BaseDO {
     /**
      * 父分类编号
      */
-    // TODO @JeromeSoar：改成 parentId 字段
-    private Long pid;
+    private Long parentId;
     /**
      * 分类名称
      */

File: yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/lock4j/config/YudaoLock4jConfiguration.java
Patch:
@@ -1,12 +1,15 @@
 package cn.iocoder.yudao.framework.lock4j.config;
 
 import cn.hutool.core.util.ClassUtil;
+import com.baomidou.lock.spring.boot.autoconfigure.LockAutoConfiguration;
 import cn.iocoder.yudao.framework.lock4j.core.DefaultLockFailureStrategy;
 import cn.iocoder.yudao.framework.lock4j.core.Lock4jRedisKeyConstants;
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
 @Configuration
+@AutoConfigureBefore(LockAutoConfiguration.class)
 public class YudaoLock4jConfiguration {
 
     static {

File: yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/lock4j/config/YudaoLock4jConfiguration.java
Patch:
@@ -1,12 +1,15 @@
 package cn.iocoder.yudao.framework.lock4j.config;
 
 import cn.hutool.core.util.ClassUtil;
+import com.baomidou.lock.spring.boot.autoconfigure.LockAutoConfiguration;
 import cn.iocoder.yudao.framework.lock4j.core.DefaultLockFailureStrategy;
 import cn.iocoder.yudao.framework.lock4j.core.Lock4jRedisKeyConstants;
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
 @Configuration
+@AutoConfigureBefore(LockAutoConfiguration.class)
 public class YudaoLock4jConfiguration {
 
     static {

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -215,6 +215,9 @@ public RoleDO getRoleFromCache(Long id) {
 
     @Override
     public List<RoleDO> getRoles(@Nullable Collection<Integer> statuses) {
+        if (statuses==null) {
+    		return roleMapper.selectList();
+		}
         return roleMapper.selectListByStatus(statuses);
     }
 

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/mail/MailLogDO.java
Patch:
@@ -39,7 +39,7 @@ public class MailLogDO extends BaseDO implements Serializable {
     /**
      * 邮箱账号
      */
-    private String from;
+    private String fromAddress;
 
     /**
      * 模版主键

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/message/mail/MailSendMessage.java
Patch:
@@ -26,7 +26,7 @@ public class MailSendMessage extends AbstractStreamMessage {
      * 邮箱地址
      */
     @NotNull(message = "邮箱地址不能为空")
-    private String from;
+    private String fromAddress;
     /**
      * 用户名
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/mq/producer/mail/MailProducer.java
Patch:
@@ -57,7 +57,7 @@ public void sendMailAccountRefreshMessage() {
     public void sendMailSendMessage(MailAccountDO mailAccountDO, MailTemplateDO mailTemplateDO, String content, List<String> tos, String title , Long sendLogId) {
         MailSendMessage message = new MailSendMessage();
         message.setContent(content);
-        message.setFrom(mailAccountDO.getFrom());
+        message.setFromAddress(mailAccountDO.getFromAddress());
         message.setHost(mailAccountDO.getHost());
         message.setPort(mailAccountDO.getPort());
         message.setPassword(mailAccountDO.getPassword());

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/mail/impl/MailLogServiceImpl.java
Patch:
@@ -43,7 +43,7 @@ public List<MailLogDO> getMailLogList(MailLogExportReqVO exportReqVO) {
     @Override
     public Long createMailLog(MailAccountDO mailAccountDO , MailTemplateDO mailTemplateDO , String from, String content, List<String> tos, String title, Boolean isSend) {
         MailLogDO.MailLogDOBuilder logDOBuilder = MailLogDO.builder();
-        logDOBuilder.from(mailAccountDO.getFrom());
+        logDOBuilder.fromAddress(mailAccountDO.getFromAddress());
         logDOBuilder.accountId(mailAccountDO.getId());
         logDOBuilder.content(content);
         logDOBuilder.title(title);

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountBaseVO.java
Patch:
@@ -13,11 +13,11 @@ public class MailAccountBaseVO {
 
     @ApiModelProperty(value = "邮箱",required = true,example = "yudaoyuanma@123.com")
     @NotNull(message = "邮箱必填")
-    private String from;
+    @Email(message = "必须是Email格式")
+    private String fromAddress;
 
     @ApiModelProperty(value = "用户名",required = true,example = "yudao")
     @NotNull(message = "用户名必填")
-    @Email(message = "必须是Email格式")
     private String username;
 
     @ApiModelProperty(value = "网站",required = true,example = "www.iocoder.cn")

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/account/MailAccountPageReqVO.java
Patch:
@@ -14,7 +14,7 @@
 public class MailAccountPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "邮箱" , required = true , example = "yudaoyuanma@123.com")
-    private String from;
+    private String fromAddress;
 
     @ApiModelProperty(value = "用户名" , required = true , example = "yudao")
     private String username;

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/mail/MailAccountDO.java
Patch:
@@ -25,8 +25,7 @@ public class MailAccountDO extends BaseDO {
     /**
      * 邮箱
      */
-    @TableField("`from`")
-    private String from;
+    private String fromAddress;
     /**
      * 用户名
      */

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/mail/MailAccountDO.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.system.dal.dataobject.mail;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
+import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -24,6 +25,7 @@ public class MailAccountDO extends BaseDO {
     /**
      * 邮箱
      */
+    @TableField("`from`")
     private String from;
     /**
      * 用户名

File: yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/mail/MailAccountMapper.java
Patch:
@@ -16,7 +16,7 @@ public interface MailAccountMapper extends BaseMapperX<MailAccountDO> {
 
     default PageResult<MailAccountDO> selectPage(MailAccountPageReqVO pageReqVO) {
         return selectPage(pageReqVO, new QueryWrapperX<MailAccountDO>()
-                .likeIfPresent("form" , pageReqVO.getFrom())
+                .likeIfPresent("from" , pageReqVO.getFrom())
                 .likeIfPresent("host" , pageReqVO.getHost())
                 .likeIfPresent("username" , pageReqVO.getUsername())
                 .eqIfPresent("password" , pageReqVO.getPassword())

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/collection/CollectionUtils.java
Patch:
@@ -115,7 +115,7 @@ public static <T, K, V> Map<K, List<V>> convertMultiMap(Collection<T> from, Func
             return new HashMap<>();
         }
         return from.stream()
-                   .collect(Collectors.groupingBy(keyFunc, Collectors.mapping(valueFunc, Collectors.toList())));
+                .collect(Collectors.groupingBy(keyFunc, Collectors.mapping(valueFunc, Collectors.toList())));
     }
 
     // 暂时没想好名字，先以 2 结尾噶
@@ -169,4 +169,5 @@ public static <T> void addIfNotNull(Collection<T> coll, T item) {
     public static <T> Collection<T> singleton(T deptId) {
         return deptId == null ? Collections.emptyList() : Collections.singleton(deptId);
     }
+
 }

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/http/HttpUtils.java
Patch:
@@ -1,9 +1,7 @@
 package cn.iocoder.yudao.framework.common.util.http;
 
-import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.map.TableMap;
 import cn.hutool.core.net.url.UrlBuilder;
-import cn.hutool.core.util.ReferenceUtil;
 import cn.hutool.core.util.ReflectUtil;
 
 import java.nio.charset.Charset;

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/io/IoUtils.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.io.IoUtil;
-import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.StrUtil;
 
 import java.io.InputStream;

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/dept/rule/DeptDataPermissionRule.java
Patch:
@@ -35,7 +35,7 @@
  * 注意，使用 DeptDataPermissionRule 时，需要保证表中有 dept_id 部门编号的字段，可自定义。
  *
  * 实际业务场景下，会存在一个经典的问题？当用户修改部门时，冗余的 dept_id 是否需要修改？
- * 1. 一般情况下，dept_id 不进行修改，则会导致用户看到之前的数据。【yudao-admin-server 采用该方案】
+ * 1. 一般情况下，dept_id 不进行修改，则会导致用户看到之前的数据。【yudao-server 采用该方案】
  * 2. 部分情况下，希望该用户还是能看到之前的数据，则有两种方式解决：【需要你改造该 DeptDataPermissionRule 的实现代码】
  *  1）编写洗数据的脚本，将 dept_id 修改成新部门的编号；【建议】
  *      最终过滤条件是 WHERE dept_id = ?

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayQrPayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayWapPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXNativePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPubPayClient;
 import cn.iocoder.yudao.framework.pay.core.enums.PayChannelEnum;
@@ -63,6 +64,7 @@ private <Config extends PayClientConfig> AbstractPayClient<Config> createPayClie
             case WX_PUB: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_LITE: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_APP: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
+            case WX_NATIVE: return (AbstractPayClient<Config>) new WXNativePayClient(channelId, (WXPayClientConfig) config);
             case ALIPAY_WAP: return (AbstractPayClient<Config>) new AlipayWapPayClient(channelId, (AlipayPayClientConfig) config);
             case ALIPAY_QR: return (AbstractPayClient<Config>) new AlipayQrPayClient(channelId, (AlipayPayClientConfig) config);
             case ALIPAY_APP: return (AbstractPayClient<Config>) new AlipayQrPayClient(channelId, (AlipayPayClientConfig) config);

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPayClientConfig.java
Patch:
@@ -82,9 +82,9 @@ public class WXPayClientConfig implements PayClientConfig {
     @NotBlank(message = "apiclient_cert 不能为空", groups = V3.class)
     private String privateCertContent;
     /**
-     * apiV3 秘钥值
+     * apiV3 密钥值
      */
-    @NotBlank(message = "apiV3 秘钥值 不能为空", groups = V3.class)
+    @NotBlank(message = "apiV3 密钥值 不能为空", groups = V3.class)
     private String apiV3Key;
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPubPayClient.java
Patch:
@@ -98,7 +98,7 @@ private WxPayMpOrderResult unifiedOrderV2(PayOrderUnifiedReqDTO reqDTO) throws W
                 // TODO 芋艿：貌似没 title？
                 .body(reqDTO.getBody())
                 .totalFee(reqDTO.getAmount().intValue()) // 单位分
-                .timeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyyMMddHHmmss"))
+                .timeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
                 .spbillCreateIp(reqDTO.getUserIp())
                 .openid(getOpenid(reqDTO))
                 .notifyUrl(reqDTO.getNotifyUrl())
@@ -114,7 +114,7 @@ private WxPayUnifiedOrderV3Result.JsapiResult unifiedOrderV3(PayOrderUnifiedReqD
         // TODO 芋艿：貌似没 title？
         request.setDescription(reqDTO.getBody());
         request.setAmount(new WxPayUnifiedOrderV3Request.Amount().setTotal(reqDTO.getAmount().intValue())); // 单位分
-        request.setTimeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyyMMddHHmmss"));
+        request.setTimeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"));
         request.setPayer(new WxPayUnifiedOrderV3Request.Payer().setOpenid(getOpenid(reqDTO)));
         request.setSceneInfo(new WxPayUnifiedOrderV3Request.SceneInfo().setPayerClientIp(reqDTO.getUserIp()));
         request.setNotifyUrl(reqDTO.getNotifyUrl());

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/PayChannelEnum.java
Patch:
@@ -20,6 +20,8 @@ public enum PayChannelEnum {
     WX_PUB("wx_pub", "微信 JSAPI 支付", WXPayClientConfig.class), // 公众号网页
     WX_LITE("wx_lite", "微信小程序支付", WXPayClientConfig.class),
     WX_APP("wx_app", "微信 App 支付", WXPayClientConfig.class),
+    WX_NATIVE("wx_native", "微信 native 支付", WXPayClientConfig.class),
+
 
     ALIPAY_PC("alipay_pc", "支付宝 PC 网站支付", AlipayPayClientConfig.class),
     ALIPAY_WAP("alipay_wap", "支付宝 Wap 网站支付", AlipayPayClientConfig.class),

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/SmsClient.java
Patch:
@@ -11,7 +11,7 @@
  * 短信客户端，用于对接各短信平台的 SDK，实现短信发送等功能
  *
  * @author zzf
- * @date 2021/1/25 14:14
+ * @since 2021/1/25 14:14
  */
 public interface SmsClient {
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/SmsClientFactory.java
Patch:
@@ -6,7 +6,7 @@
  * 短信客户端的工厂接口
  *
  * @author zzf
- * @date 2021/1/28 14:01
+ * @since 2021/1/28 14:01
  */
 public interface SmsClientFactory {
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/SmsClientFactoryImpl.java
Patch:
@@ -4,6 +4,7 @@
 import cn.iocoder.yudao.framework.sms.core.client.SmsClientFactory;
 import cn.iocoder.yudao.framework.sms.core.client.impl.aliyun.AliyunSmsClient;
 import cn.iocoder.yudao.framework.sms.core.client.impl.debug.DebugDingTalkSmsClient;
+import cn.iocoder.yudao.framework.sms.core.client.impl.tencent.TencentSmsClient;
 import cn.iocoder.yudao.framework.sms.core.client.impl.yunpian.YunpianSmsClient;
 import cn.iocoder.yudao.framework.sms.core.enums.SmsChannelEnum;
 import cn.iocoder.yudao.framework.sms.core.property.SmsChannelProperties;
@@ -44,7 +45,7 @@ public SmsClientFactoryImpl() {
         Arrays.stream(SmsChannelEnum.values()).forEach(channel -> {
             // 创建一个空的 SmsChannelProperties 对象
             SmsChannelProperties properties = new SmsChannelProperties().setCode(channel.getCode())
-                    .setApiKey("default").setApiSecret("default");
+                    .setApiKey("default default").setApiSecret("default");
             // 创建 Sms 客户端
             AbstractSmsClient smsClient = createSmsClient(properties);
             channelCodeClients.put(channel.getCode(), smsClient);
@@ -81,6 +82,7 @@ private AbstractSmsClient createSmsClient(SmsChannelProperties properties) {
             case ALIYUN: return new AliyunSmsClient(properties);
             case YUN_PIAN: return new YunpianSmsClient(properties);
             case DEBUG_DING_TALK: return new DebugDingTalkSmsClient(properties);
+            case TENCENT: return new TencentSmsClient(properties);
         }
         // 创建失败，错误日志 + 抛出异常
         log.error("[createSmsClient][配置({}) 找不到合适的客户端实现]", properties);

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/aliyun/AliyunSmsClient.java
Patch:
@@ -41,7 +41,7 @@
  * 阿里短信客户端的实现类
  *
  * @author zzf
- * @date 2021/1/25 14:17
+ * @since 2021/1/25 14:17
  */
 @Slf4j
 public class AliyunSmsClient extends AbstractSmsClient {

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/yunpian/YunpianSmsClient.java
Patch:
@@ -35,7 +35,7 @@
  * 云片短信客户端的实现类
  *
  * @author zzf
- * @date 9:48 2021/3/5
+ * @since 9:48 2021/3/5
  */
 @Slf4j
 public class YunpianSmsClient extends AbstractSmsClient {

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/enums/SmsChannelEnum.java
Patch:
@@ -8,7 +8,7 @@
  * 短信渠道枚举
  *
  * @author zzf
- * @date 2021/1/25 10:56
+ * @since 2021/1/25 10:56
  */
 @Getter
 @AllArgsConstructor
@@ -17,7 +17,7 @@ public enum SmsChannelEnum {
     DEBUG_DING_TALK("DEBUG_DING_TALK", "调试(钉钉)"),
     YUN_PIAN("YUN_PIAN", "云片"),
     ALIYUN("ALIYUN", "阿里云"),
-//    TENCENT("TENCENT", "腾讯云"),
+    TENCENT("TENCENT", "腾讯云"),
 //    HUA_WEI("HUA_WEI", "华为云"),
     ;
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/property/SmsChannelProperties.java
Patch:
@@ -11,7 +11,7 @@
  * 短信渠道配置类
  *
  * @author zzf
- * @date 2021/1/25 17:01
+ * @since 2021/1/25 17:01
  */
 @Data
 @Validated
@@ -40,9 +40,9 @@ public class SmsChannelProperties {
     @NotEmpty(message = "短信 API 的账号不能为空")
     private String apiKey;
     /**
-     * 短信 API 的秘钥
+     * 短信 API 的密钥
      */
-    @NotEmpty(message = "短信 API 的秘钥不能为空")
+    @NotEmpty(message = "短信 API 的密钥不能为空")
     private String apiSecret;
     /**
      * 短信发送回调 URL

File: yudao-framework/yudao-spring-boot-starter-config/src/main/java/cn/iocoder/yudao/framework/apollo/internals/ConfigFrameworkDAO.java
Patch:
@@ -15,12 +15,12 @@
 public interface ConfigFrameworkDAO {
 
     /**
-     * 查询是否存在比 maxUpdateTime 更新记录更晚的配置
+     * 查询是否存在比 maxUpdateTime 的更新记录数量
      *
      * @param maxUpdateTime 最大更新时间
      * @return 是否存在
      */
-    boolean selectExistsByUpdateTimeAfter(Date maxUpdateTime);
+    int selectCountByUpdateTimeGt(Date maxUpdateTime);
 
     /**
      * 查询配置列表

File: yudao-framework/yudao-spring-boot-starter-config/src/main/java/cn/iocoder/yudao/framework/apollo/internals/DBConfigRepository.java
Patch:
@@ -24,7 +24,6 @@
 import java.util.Properties;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
-import java.util.function.Predicate;
 
 @Slf4j
 public class DBConfigRepository extends AbstractConfigRepository {
@@ -172,7 +171,7 @@ private List<ConfigRespDTO> loadConfigIfUpdate(Date maxUpdateTime) {
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadConfigIfUpdate][首次加载全量配置]");
         } else { // 判断数据库中是否有更新的配置
-            if (!configFrameworkDAO.selectExistsByUpdateTimeAfter(maxUpdateTime)) {
+            if (configFrameworkDAO.selectCountByUpdateTimeGt(maxUpdateTime) == 0) {
                 return null;
             }
             log.info("[loadConfigIfUpdate][增量加载全量配置]");

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClient.java
Patch:
@@ -44,7 +44,7 @@ public String upload(byte[] content, String path) {
         String dir = StrUtil.removeSuffix(filePath, fileName);
         boolean success = ftp.upload(dir, fileName, new ByteArrayInputStream(content));
         if (!success) {
-            throw new FtpException(StrUtil.format("上海文件到目标目录 ({}) 失败", filePath));
+            throw new FtpException(StrUtil.format("上传文件到目标目录 ({}) 失败", filePath));
         }
         // 拼接返回路径
         return super.formatFileUrl(config.getDomain(), path);

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClientTest.java
Patch:
@@ -3,11 +3,13 @@
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.util.IdUtil;
 import cn.hutool.extra.ftp.FtpMode;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class FtpFileClientTest {
 
     @Test
+    @Disabled
     public void test() {
         // 创建客户端
         FtpFileClientConfig config = new FtpFileClientConfig();

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClientTest.java
Patch:
@@ -2,11 +2,13 @@
 
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.util.IdUtil;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class LocalFileClientTest {
 
     @Test
+    @Disabled
     public void test() {
         // 创建客户端
         LocalFileClientConfig config = new LocalFileClientConfig();

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClientTest.java
Patch:
@@ -2,11 +2,13 @@
 
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.util.IdUtil;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class SftpFileClientTest {
 
     @Test
+    @Disabled
     public void test() {
         // 创建客户端
         SftpFileClientConfig config = new SftpFileClientConfig();

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/dataobject/BaseDO.java
Patch:
@@ -3,8 +3,8 @@
 import com.baomidou.mybatisplus.annotation.FieldFill;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableLogic;
-import lombok.Builder;
 import lombok.Data;
+import org.apache.ibatis.type.JdbcType;
 
 import java.io.Serializable;
 import java.util.Date;
@@ -32,14 +32,14 @@ public abstract class BaseDO implements Serializable {
      *
      * 使用 String 类型的原因是，未来可能会存在非数值的情况，留好拓展性。
      */
-    @TableField(fill = FieldFill.INSERT)
+    @TableField(fill = FieldFill.INSERT, jdbcType = JdbcType.VARCHAR)
     private String creator;
     /**
      * 更新者，目前使用 SysUser 的 id 编号
      *
      * 使用 String 类型的原因是，未来可能会存在非数值的情况，留好拓展性。
      */
-    @TableField(fill = FieldFill.INSERT_UPDATE)
+    @TableField(fill = FieldFill.INSERT_UPDATE, jdbcType = JdbcType.VARCHAR)
     private String updater;
     /**
      * 是否删除

File: yudao-framework/yudao-spring-boot-starter-redis/src/main/java/cn/iocoder/yudao/framework/redis/config/YudaoRedisAutoConfiguration.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.framework.redis.config;
 
-import lombok.extern.slf4j.Slf4j;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.data.redis.connection.RedisConnectionFactory;
@@ -11,7 +10,6 @@
  * Redis 配置类
  */
 @Configuration
-@Slf4j
 public class YudaoRedisAutoConfiguration {
 
     /**

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/SecurityProperties.java
Patch:
@@ -37,10 +37,10 @@ public class SecurityProperties {
     @NotNull(message = "mock 模式的开关不能为空")
     private Boolean mockEnable;
     /**
-     * mock 模式的秘钥
-     * 一定要配置秘钥，保证安全性
+     * mock 模式的密钥
+     * 一定要配置密钥，保证安全性
      */
-    @NotEmpty(message = "mock 模式的秘钥不能为空") // 这里设置了一个默认值，因为实际上只有 mockEnable 为 true 时才需要配置。
+    @NotEmpty(message = "mock 模式的密钥不能为空") // 这里设置了一个默认值，因为实际上只有 mockEnable 为 true 时才需要配置。
     private String mockSecret = "yudaoyuanma";
 
 }

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/YudaoWebSecurityConfigurerAdapter.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.security.core.authentication.MultiUserDetailsAuthenticationProvider;
-import cn.iocoder.yudao.framework.security.core.filter.JWTAuthenticationTokenFilter;
+import cn.iocoder.yudao.framework.security.core.filter.TokenAuthenticationFilter;
 import cn.iocoder.yudao.framework.web.config.WebProperties;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.context.annotation.Bean;
@@ -55,7 +55,7 @@ public class YudaoWebSecurityConfigurerAdapter extends WebSecurityConfigurerAdap
      * Token 认证过滤器 Bean
      */
     @Resource
-    private JWTAuthenticationTokenFilter authenticationTokenFilter;
+    private TokenAuthenticationFilter authenticationTokenFilter;
 
     /**
      * 自定义的权限映射 Bean 们

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/filter/TokenAuthenticationFilter.java
Patch:
@@ -18,13 +18,13 @@
 import java.io.IOException;
 
 /**
- * JWT 过滤器，验证 token 的有效性
+ * Token 过滤器，验证 token 的有效性
  * 验证通过后，获得 {@link LoginUser} 信息，并加入到 Spring Security 上下文
  *
  * @author 芋道源码
  */
 @RequiredArgsConstructor
-public class JWTAuthenticationTokenFilter extends OncePerRequestFilter {
+public class TokenAuthenticationFilter extends OncePerRequestFilter {
 
     private final SecurityProperties securityProperties;
 
@@ -43,7 +43,7 @@ protected void doFilterInternal(HttpServletRequest request, HttpServletResponse
                 LoginUser loginUser = authenticationProvider.verifyTokenAndRefresh(request, token);
                 // 模拟 Login 功能，方便日常开发调试
                 if (loginUser == null) {
-                    loginUser = this.mockLoginUser(request, token);
+                    loginUser = mockLoginUser(request, token);
                 }
                 // 设置当前用户
                 if (loginUser != null) {

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseDbAndRedisUnitTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.pay.test;
+package cn.iocoder.yudao.framework.test.core.ut;
 
 import cn.iocoder.yudao.framework.datasource.config.YudaoDataSourceAutoConfiguration;
 import cn.iocoder.yudao.framework.mybatis.config.YudaoMybatisAutoConfiguration;

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseDbUnitTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.infra.test;
+package cn.iocoder.yudao.framework.test.core.ut;
 
 import cn.iocoder.yudao.framework.datasource.config.YudaoDataSourceAutoConfiguration;
 import cn.iocoder.yudao.framework.mybatis.config.YudaoMybatisAutoConfiguration;

File: yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseRedisUnitTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.pay.test;
+package cn.iocoder.yudao.framework.test.core.ut;
 
 import cn.iocoder.yudao.framework.redis.config.YudaoRedisAutoConfiguration;
 import cn.iocoder.yudao.framework.test.config.RedisTestConfiguration;

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskDonePageItemRespVO.java
Patch:
@@ -22,6 +22,6 @@ public class BpmTaskDonePageItemRespVO extends BpmTaskTodoPageItemRespVO {
     @ApiModelProperty(value = "任务结果", required = true, notes = "参见 bpm_process_instance_result", example = "2")
     private Integer result;
     @ApiModelProperty(value = "审批建议", required = true, example = "不请假了！")
-    private String comment;
+    private String reason;
 
 }

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/task/vo/task/BpmTaskRejectReqVO.java
Patch:
@@ -16,6 +16,6 @@ public class BpmTaskRejectReqVO {
 
     @ApiModelProperty(value = "审批意见", required = true, example = "不错不错！")
     @NotEmpty(message = "审批意见不能为空")
-    private String comment;
+    private String reason;
 
 }

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/definition/BpmFormDO.java
Patch:
@@ -1,6 +1,7 @@
 package cn.iocoder.yudao.module.bpm.dal.dataobject.definition;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
+import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -16,6 +17,7 @@
  * @author 芋道源码
  */
 @TableName(value = "bpm_form", autoResultMap = true)
+@KeySequence("bpm_form_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/definition/BpmProcessDefinitionExtDO.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmModelFormTypeEnum;
+import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -17,6 +18,7 @@
  * @author 芋道源码
  */
 @TableName(value = "bpm_process_definition_ext", autoResultMap = true)
+@KeySequence("bpm_process_definition_ext_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/definition/BpmUserGroupDO.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.framework.mybatis.core.type.JsonLongSetTypeHandler;
+import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -16,6 +17,7 @@
  * @author 芋道源码
  */
 @TableName(value = "bpm_user_group", autoResultMap = true)
+@KeySequence("bpm_user_group_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/dataobject/task/BpmProcessInstanceExtDO.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceResultEnum;
 import cn.iocoder.yudao.module.bpm.enums.task.BpmProcessInstanceStatusEnum;
+import com.baomidou.mybatisplus.annotation.KeySequence;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableId;
 import com.baomidou.mybatisplus.annotation.TableName;
@@ -21,6 +22,7 @@
  * @author 芋道源码
  */
 @TableName(value = "bpm_process_instance_ext", autoResultMap = true)
+@KeySequence("bpm_process_instance_ext_seq") // 用于 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库的主键自增。如果是 MySQL 等数据库，可不写。
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/mysql/definition/BpmProcessDefinitionExtMapper.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.bpm.dal.mysql.definition;
 
-import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
+import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;
 import org.apache.ibatis.annotations.Mapper;
 
 import java.util.Collection;
@@ -11,11 +11,11 @@
 public interface BpmProcessDefinitionExtMapper extends BaseMapperX<BpmProcessDefinitionExtDO> {
 
     default List<BpmProcessDefinitionExtDO> selectListByProcessDefinitionIds(Collection<String> processDefinitionIds) {
-        return selectList("process_definition_id", processDefinitionIds);
+        return selectList(BpmProcessDefinitionExtDO::getProcessDefinitionId, processDefinitionIds);
     }
 
     default BpmProcessDefinitionExtDO selectByProcessDefinitionId(String processDefinitionId) {
-        return selectOne("process_definition_id", processDefinitionId);
+        return selectOne(BpmProcessDefinitionExtDO::getProcessDefinitionId, processDefinitionId);
     }
 
 }

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/mysql/task/BpmTaskExtMapper.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.yudao.module.bpm.dal.mysql.task;
 
-import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmTaskExtDO;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
+import cn.iocoder.yudao.module.bpm.dal.dataobject.task.BpmTaskExtDO;
 import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
 import org.apache.ibatis.annotations.Mapper;
 
@@ -20,6 +20,6 @@ default List<BpmTaskExtDO> selectListByTaskIds(Collection<String> taskIds) {
     }
 
     default List<BpmTaskExtDO> selectListByProcessInstanceId(String processInstanceId) {
-        return selectList("process_instance_id", processInstanceId);
+        return selectList(BpmTaskExtDO::getProcessInstanceId, processInstanceId);
     }
 }

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/service/message/BpmMessageService.java
Patch:
@@ -22,7 +22,6 @@ public interface BpmMessageService {
      */
     void sendMessageWhenProcessInstanceApprove(@Valid BpmMessageSendWhenProcessInstanceApproveReqDTO reqDTO);
 
-
     /**
      * 发送流程实例被不通过的消息
      *

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/service/message/BpmMessageServiceImpl.java
Patch:
@@ -44,7 +44,7 @@ public void sendMessageWhenProcessInstanceApprove(BpmMessageSendWhenProcessInsta
     public void sendMessageWhenProcessInstanceReject(BpmMessageSendWhenProcessInstanceRejectReqDTO reqDTO) {
         Map<String, Object> templateParams = new HashMap<>();
         templateParams.put("processInstanceName", reqDTO.getProcessInstanceName());
-        templateParams.put("comment", reqDTO.getComment());
+        templateParams.put("reason", reqDTO.getReason());
         templateParams.put("detailUrl", getProcessInstanceDetailUrl(reqDTO.getProcessInstanceId()));
         smsSendApi.sendSingleSmsToAdmin(BpmMessageConvert.INSTANCE.convert(reqDTO.getStartUserId(),
                 BpmMessageEnum.PROCESS_INSTANCE_REJECT.getSmsTemplateCode(), templateParams));

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/service/message/dto/BpmMessageSendWhenProcessInstanceRejectReqDTO.java
Patch:
@@ -28,6 +28,6 @@ public class BpmMessageSendWhenProcessInstanceRejectReqDTO {
      * 不通过理由
      */
     @NotEmpty(message = "不通过理由不能为空")
-    private String comment;
+    private String reason;
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmProcessInstanceConvert.java
Patch:
@@ -116,10 +116,10 @@ default BpmProcessInstanceResultEvent convert(Object source, HistoricProcessInst
         return event;
     }
 
-    default BpmMessageSendWhenProcessInstanceRejectReqDTO convert(ProcessInstance processInstance, String comment) {
+    default BpmMessageSendWhenProcessInstanceRejectReqDTO convert(ProcessInstance processInstance, String reason) {
         BpmMessageSendWhenProcessInstanceRejectReqDTO reqDTO = new BpmMessageSendWhenProcessInstanceRejectReqDTO();
         copyTo(processInstance, reqDTO);
-        reqDTO.setComment(comment);
+        reqDTO.setReason(reason);
         return reqDTO;
     }
     @Mapping(source = "name", target = "processInstanceName")

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmModelServiceImpl.java
Patch:
@@ -215,6 +215,9 @@ private void updateProcessDefinitionSuspended(String deploymentId) {
         if (oldDefinition == null) {
             return;
         }
+        if(oldDefinition.isSuspended()) {
+            return;
+        }
         processDefinitionService.updateProcessDefinitionState(oldDefinition.getId(), SuspensionState.SUSPENDED.getStateCode());
     }
 

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -103,6 +103,9 @@ public List<BpmProcessDefinitionRespVO> getProcessDefinitionList(BpmProcessDefin
         }
         // 执行查询
         List<ProcessDefinition> processDefinitions = definitionQuery.list();
+        if (CollUtil.isEmpty(processDefinitions)) {
+            return Collections.emptyList();
+        }
 
         // 获得 BpmProcessDefinitionDO Map
         List<BpmProcessDefinitionExtDO> processDefinitionDOs = processDefinitionMapper.selectListByProcessDefinitionIds(

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceService.java
Patch:
@@ -158,8 +158,8 @@ default Map<String, HistoricProcessInstance> getHistoricProcessInstanceMap(Set<S
      * 更新 ProcessInstance 拓展记录为不通过
      *
      * @param id 流程编号
-     * @param comment 理由。例如说，审批不通过时，需要传递该值
+     * @param reason 理由。例如说，审批不通过时，需要传递该值
      */
-    void updateProcessInstanceExtReject(String id, String comment);
+    void updateProcessInstanceExtReject(String id, String reason);
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -285,11 +285,11 @@ public void updateProcessInstanceExtComplete(org.activiti.api.process.model.Proc
     }
 
     @Transactional(rollbackFor = Exception.class)
-    public void updateProcessInstanceExtReject(String id, String comment) {
+    public void updateProcessInstanceExtReject(String id, String reason) {
         // 需要主动查询，因为 instance 只有 id 属性
         ProcessInstance processInstance = getProcessInstance(id);
         // 删除流程实例，以实现驳回任务时，取消整个审批流程
-        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(comment)));
+        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));
 
         // 更新 status + result
         // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，
@@ -300,7 +300,7 @@ public void updateProcessInstanceExtReject(String id, String comment) {
         processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);
 
         // 发送流程被不通过的消息
-        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert(processInstance, comment));
+        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert(processInstance, reason));
 
         // 发送流程实例的状态事件
         processInstanceResultEventPublisher.sendProcessInstanceResultEvent(

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskServiceImpl.java
Patch:
@@ -226,7 +226,7 @@ public void approveTask(Long userId, BpmTaskApproveReqVO reqVO) {
         taskService.complete(task.getId(), instance.getProcessVariables()); // TODO 芋艿：variables 的选择
         // 更新任务拓展表为通过
         taskExtMapper.updateByTaskId(new BpmTaskExtDO().setTaskId(task.getId())
-                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()).setComment(reqVO.getComment()));
+                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()).setReason(reqVO.getReason()));
 
         // TODO 芋艿：添加评论
 //        taskService.addComment(task.getId(), task.getProcessInstanceId(), reqVO.getComment());
@@ -250,11 +250,11 @@ public void rejectTask(Long userId, @Valid BpmTaskRejectReqVO reqVO) {
         }
 
         // 更新流程实例为不通过
-        processInstanceService.updateProcessInstanceExtReject(instance.getProcessInstanceId(), reqVO.getComment());
+        processInstanceService.updateProcessInstanceExtReject(instance.getProcessInstanceId(), reqVO.getReason());
 
         // 更新任务拓展表为不通过
         taskExtMapper.updateByTaskId(new BpmTaskExtDO().setTaskId(task.getId())
-                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult()).setComment(reqVO.getComment()));
+                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult()).setReason(reqVO.getReason()));
 
         // TODO 芋艿：添加评论
 //        taskService.addComment(task.getId(), task.getProcessInstanceId(), reqVO.getComment());

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/behavior/BpmUserTaskActivityBehavior.java
Patch:
@@ -5,7 +5,6 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
-import cn.iocoder.yudao.framework.datapermission.core.dept.rule.DeptDataPermissionRule;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmTaskAssignRuleDO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmUserGroupDO;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmTaskAssignRuleTypeEnum;
@@ -69,11 +68,13 @@ public class BpmUserTaskActivityBehavior extends UserTaskActivityBehavior {
     public BpmUserTaskActivityBehavior(UserTask userTask) {
         super(userTask);
     }
+
     public void setScripts(List<BpmTaskAssignScript> scripts) {
         this.scriptMap = convertMap(scripts, script -> script.getEnum().getId());
     }
 
     @Override
+    @DataPermission(enable = false) // 不需要处理数据权限， 不然会有问题，查询不到数据
     protected void handleAssignments(TaskService taskService, String assignee, String owner, List<String> candidateUsers, List<String> candidateGroups, TaskEntity task, ExpressionManager expressionManager, DelegateExecution execution, ProcessEngineConfigurationImpl processEngineConfiguration) {
         // 第一步，获得任务的规则
         BpmTaskAssignRuleDO rule = getTaskRule(task);
@@ -98,7 +99,6 @@ private BpmTaskAssignRuleDO getTaskRule(TaskEntity task) {
         return taskRules.get(0);
     }
 
-    @VisibleForTesting
     Set<Long> calculateTaskCandidateUsers(TaskEntity task, BpmTaskAssignRuleDO rule) {
         Set<Long> assigneeUserIds = null;
         if (Objects.equals(BpmTaskAssignRuleTypeEnum.ROLE.getType(), rule.getType())) {

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/behavior/script/impl/BpmTaskAssignLeaderX2Script.java
Patch:
@@ -15,7 +15,6 @@
 @Component
 public class BpmTaskAssignLeaderX2Script extends BpmTaskAssignLeaderAbstractScript {
 
-
     @Override
     @DataPermission(enable = false) // 不需要处理数据权限， 不然会有问题，查询不到数据
     public Set<Long> calculateTaskCandidateUsers(TaskEntity task) {

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -236,6 +236,9 @@ public List<BpmProcessDefinitionRespVO> getProcessDefinitionList(BpmProcessDefin
         }
         // 执行查询
         List<ProcessDefinition> processDefinitions = definitionQuery.list();
+        if (CollUtil.isEmpty(processDefinitions)) {
+            return Collections.emptyList();
+        }
 
         // 获得 BpmProcessDefinitionDO Map
         List<BpmProcessDefinitionExtDO> processDefinitionDOs = processDefinitionMapper.selectListByProcessDefinitionIds(

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmTaskAssignRuleServiceImpl.java
Patch:
@@ -21,7 +21,6 @@
 import cn.iocoder.yudao.module.system.api.user.AdminUserApi;
 import lombok.extern.slf4j.Slf4j;
 import org.flowable.bpmn.model.BpmnModel;
-import org.flowable.bpmn.model.FlowElement;
 import org.flowable.bpmn.model.UserTask;
 import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceService.java
Patch:
@@ -141,9 +141,9 @@ default Map<String, HistoricProcessInstance> getHistoricProcessInstanceMap(Set<S
      * 更新 ProcessInstance 拓展记录为不通过
      *
      * @param id 流程编号
-     * @param comment 理由。例如说，审批不通过时，需要传递该值
+     * @param reason 理由。例如说，审批不通过时，需要传递该值
      */
-    void updateProcessInstanceExtReject(String id, String comment);
+    void updateProcessInstanceExtReject(String id, String reason);
 
 
 }

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmProcessInstanceServiceImpl.java
Patch:
@@ -250,11 +250,11 @@ public void updateProcessInstanceExtComplete(ProcessInstance instance) {
     }
 
     @Transactional(rollbackFor = Exception.class)
-    public void updateProcessInstanceExtReject(String id, String comment) {
+    public void updateProcessInstanceExtReject(String id, String reason) {
         // 需要主动查询，因为 instance 只有 id 属性
         ProcessInstance processInstance = getProcessInstance(id);
         // 删除流程实例，以实现驳回任务时，取消整个审批流程
-        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(comment)));
+        deleteProcessInstance(id, StrUtil.format(BpmProcessInstanceDeleteReasonEnum.REJECT_TASK.format(reason)));
 
         // 更新 status + result
         // 注意，不能和上面的逻辑更换位置。因为 deleteProcessInstance 会触发流程的取消，进而调用 updateProcessInstanceExtCancel 方法，
@@ -265,7 +265,7 @@ public void updateProcessInstanceExtReject(String id, String comment) {
         processInstanceExtMapper.updateByProcessInstanceId(instanceExtDO);
 
         // 发送流程被不通过的消息
-        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, comment));
+        messageService.sendMessageWhenProcessInstanceReject(BpmProcessInstanceConvert.INSTANCE.convert2RejectReq(processInstance, reason));
 
         // 发送流程实例的状态事件
         processInstanceResultEventPublisher.sendProcessInstanceResultEvent(

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/task/BpmTaskServiceImpl.java
Patch:
@@ -182,7 +182,7 @@ public void approveTask(Long userId, @Valid BpmTaskApproveReqVO reqVO) {
         taskService.complete(task.getId(), instance.getProcessVariables());
         // 更新任务拓展表为通过
         taskExtMapper.updateByTaskId(new BpmTaskExtDO().setTaskId(task.getId())
-                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()).setComment(reqVO.getComment()));
+                .setResult(BpmProcessInstanceResultEnum.APPROVE.getResult()).setReason(reqVO.getReason()));
     }
 
     @Override
@@ -196,11 +196,11 @@ public void rejectTask(Long userId, @Valid BpmTaskRejectReqVO reqVO) {
         }
 
         // 更新流程实例为不通过
-        processInstanceService.updateProcessInstanceExtReject(instance.getProcessInstanceId(), reqVO.getComment());
+        processInstanceService.updateProcessInstanceExtReject(instance.getProcessInstanceId(), reqVO.getReason());
 
         // 更新任务拓展表为不通过
         taskExtMapper.updateByTaskId(new BpmTaskExtDO().setTaskId(task.getId())
-                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult()).setComment(reqVO.getComment()));
+                .setResult(BpmProcessInstanceResultEnum.REJECT.getResult()).setReason(reqVO.getReason()));
     }
 
     @Override

File: yudao-module-infra/yudao-module-infra-api/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApi.java
Patch:
@@ -15,7 +15,7 @@ public interface FileApi {
      * @param content 文件内容
      * @return 文件路径
      */
-   default String createFile(byte[] content) {
+   default String createFile(byte[] content) throws Exception {
        return createFile(IdUtil.fastUUID(), content);
    }
 
@@ -26,6 +26,6 @@ default String createFile(byte[] content) {
      * @param content 文件内容
      * @return 文件路径
      */
-    String createFile(String path, byte[] content);
+    String createFile(String path, byte[] content) throws Exception;
 
 }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApiImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.infra.api.file;
 
-import cn.iocoder.yudao.module.infra.api.file.FileApi;
 import cn.iocoder.yudao.module.infra.service.file.FileService;
 import org.springframework.stereotype.Service;
 import org.springframework.validation.annotation.Validated;
@@ -20,7 +19,7 @@ public class FileApiImpl implements FileApi {
     private FileService fileService;
 
     @Override
-    public String createFile(String path, byte[] content) {
+    public String createFile(String path, byte[] content) throws Exception {
         return fileService.createFile(path, content);
     }
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/column/CodegenColumnBaseVO.java
Patch:
@@ -22,7 +22,7 @@ public class CodegenColumnBaseVO {
 
     @ApiModelProperty(value = "字段类型", required = true, example = "int(11)")
     @NotNull(message = "字段类型不能为空")
-    private String columnType;
+    private String dataType;
 
     @ApiModelProperty(value = "字段描述", required = true, example = "年龄")
     @NotNull(message = "字段描述不能为空")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/table/CodegenTableRespVO.java
Patch:
@@ -17,6 +17,9 @@ public class CodegenTableRespVO extends CodegenTableBaseVO {
     @ApiModelProperty(value = "编号", required = true, example = "1")
     private Long id;
 
+    @ApiModelProperty(value = "主键编号", required = true, example = "1024")
+    private Integer dataSourceConfigId;
+
     @ApiModelProperty(value = "创建时间", required = true)
     private Date createTime;
 

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/ConfigController.java
Patch:
@@ -68,15 +68,15 @@ public CommonResult<ConfigRespVO> getConfig(@RequestParam("id") Long id) {
     }
 
     @GetMapping(value = "/get-value-by-key")
-    @ApiOperation(value = "根据参数键名查询参数值", notes = "敏感配置，不允许返回给前端")
+    @ApiOperation(value = "根据参数键名查询参数值", notes = "不可见的配置，不允许返回给前端")
     @ApiImplicitParam(name = "key", value = "参数键", required = true, example = "yunai.biz.username", dataTypeClass = String.class)
     public CommonResult<String> getConfigKey(@RequestParam("key") String key) {
         ConfigDO config = configService.getConfigByKey(key);
         if (config == null) {
             return null;
         }
-        if (config.getSensitive()) {
-            throw ServiceExceptionUtil.exception(ErrorCodeConstants.CONFIG_GET_VALUE_ERROR_IF_SENSITIVE);
+        if (config.getVisible()) {
+            throw ServiceExceptionUtil.exception(ErrorCodeConstants.CONFIG_GET_VALUE_ERROR_IF_VISIBLE);
         }
         return success(config.getValue());
     }

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigBaseVO.java
Patch:
@@ -18,7 +18,7 @@ public class ConfigBaseVO {
     @ApiModelProperty(value = "参数分组", required = true, example = "biz")
     @NotEmpty(message = "参数分组不能为空")
     @Size(max = 50, message = "参数名称不能超过50个字符")
-    private String group;
+    private String category;
 
     @ApiModelProperty(value = "参数名称", required = true, example = "数据库名")
     @NotBlank(message = "参数名称不能为空")
@@ -32,7 +32,7 @@ public class ConfigBaseVO {
 
     @ApiModelProperty(value = "是否敏感", required = true, example = "true")
     @NotNull(message = "是否敏感不能为空")
-    private Boolean sensitive;
+    private Boolean visible;
 
     @ApiModelProperty(value = "备注", example = "备注一下很帅气！")
     private String remark;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/config/vo/ConfigPageReqVO.java
Patch:
@@ -18,7 +18,7 @@
 @ToString(callSuper = true)
 public class ConfigPageReqVO extends PageParam {
 
-    @ApiModelProperty(value = "参数名称", example = "模糊匹配")
+    @ApiModelProperty(value = "数据源名称", example = "模糊匹配")
     private String name;
 
     @ApiModelProperty(value = "参数键名", example = "yunai.db.username", notes = "模糊匹配")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/db/DatabaseDocController.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.module.infra.controller.admin.doc;
+package cn.iocoder.yudao.module.infra.controller.admin.db;
 
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.util.IdUtil;
@@ -30,7 +30,7 @@
 @Api(tags = "管理后台 - 数据库文档")
 @RestController
 @RequestMapping("/infra/db-doc")
-public class DbDocController {
+public class DatabaseDocController {
 
     @Resource
     private DynamicDataSourceProperties dynamicDataSourceProperties;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileConfigController.java
Patch:
@@ -82,7 +82,7 @@ public CommonResult<PageResult<FileConfigRespVO>> getFileConfigPage(@Valid FileC
     @GetMapping("/test")
     @ApiOperation("测试文件配置是否正确")
     @PreAuthorize("@ss.hasPermission('infra:file-config:query')")
-    public CommonResult<String> testFileConfig(@RequestParam("id") Long id) {
+    public CommonResult<String> testFileConfig(@RequestParam("id") Long id) throws Exception {
         String url = fileConfigService.testFileConfig(id);
         return success(url);
     }

File: yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/dataobject/BaseDO.java
Patch:
@@ -3,8 +3,8 @@
 import com.baomidou.mybatisplus.annotation.FieldFill;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableLogic;
-import lombok.Builder;
 import lombok.Data;
+import org.apache.ibatis.type.JdbcType;
 
 import java.io.Serializable;
 import java.util.Date;
@@ -32,14 +32,14 @@ public abstract class BaseDO implements Serializable {
      *
      * 使用 String 类型的原因是，未来可能会存在非数值的情况，留好拓展性。
      */
-    @TableField(fill = FieldFill.INSERT)
+    @TableField(fill = FieldFill.INSERT, jdbcType = JdbcType.VARCHAR)
     private String creator;
     /**
      * 更新者，目前使用 SysUser 的 id 编号
      *
      * 使用 String 类型的原因是，未来可能会存在非数值的情况，留好拓展性。
      */
-    @TableField(fill = FieldFill.INSERT_UPDATE)
+    @TableField(fill = FieldFill.INSERT_UPDATE, jdbcType = JdbcType.VARCHAR)
     private String updater;
     /**
      * 是否删除

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/codegen/vo/column/CodegenColumnBaseVO.java
Patch:
@@ -22,7 +22,7 @@ public class CodegenColumnBaseVO {
 
     @ApiModelProperty(value = "字段类型", required = true, example = "int(11)")
     @NotNull(message = "字段类型不能为空")
-    private String columnType;
+    private String dataType;
 
     @ApiModelProperty(value = "字段描述", required = true, example = "年龄")
     @NotNull(message = "字段描述不能为空")

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/codegen/CodegenColumnDO.java
Patch:
@@ -41,7 +41,7 @@ public class CodegenColumnDO extends BaseDO {
     /**
      * 字段类型
      */
-    private String columnType;
+    private String dataType;
     /**
      * 字段描述
      */

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/mysql/db/DatabaseTableMySQLDAOImpl.java
Patch:
@@ -41,18 +41,18 @@ public List<DatabaseTableDO> selectTableList(Connection connection, String table
     @Override
     public List<DatabaseColumnDO> selectColumnList(Connection connection, String tableName) {
         // 拼接 SQL
-        String sql = "SELECT table_name, column_name, column_type, column_comment, ordinal_position" +
+        String sql = "SELECT table_name, column_name, data_type, column_comment, ordinal_position," +
                 " (CASE WHEN is_nullable = 'yes' THEN '1' ELSE '0' END) AS nullable," +
                 " (CASE WHEN column_key = 'PRI' THEN '1' ELSE '0' END) AS primary_key," +
-                " (CASE WHEN extra = 'auto_increment' THEN '1' ELSE '0' END) AS auto_increment," +
+                " (CASE WHEN extra = 'auto_increment' THEN '1' ELSE '0' END) AS auto_increment" +
                 " FROM information_schema.COLUMNS" +
                 " WHERE table_schema = (SELECT DATABASE())" +
                 String.format(" AND table_name = '%s'", tableName);
         // 执行并返回结果
         return JdbcUtils.query(connection, sql, (rs, rowNum) -> DatabaseColumnDO.builder()
                 .tableName(rs.getString("table_name"))
                 .columnName(rs.getString("column_name"))
-                .columnType(rs.getString("column_type"))
+                .dataType(rs.getString("data_type"))
                 .columnComment(rs.getString("column_comment"))
                 .nullable(rs.getBoolean("nullable"))
                 .primaryKey(rs.getBoolean("primary_key"))

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/CodegenServiceImpl.java
Patch:
@@ -13,7 +13,6 @@
 import cn.iocoder.yudao.module.infra.dal.mysql.codegen.CodegenColumnMapper;
 import cn.iocoder.yudao.module.infra.dal.mysql.codegen.CodegenTableMapper;
 import cn.iocoder.yudao.module.infra.enums.codegen.CodegenImportTypeEnum;
-import cn.iocoder.yudao.module.infra.framework.codegen.config.CodegenProperties;
 import cn.iocoder.yudao.module.infra.service.codegen.inner.CodegenBuilder;
 import cn.iocoder.yudao.module.infra.service.codegen.inner.CodegenEngine;
 import cn.iocoder.yudao.module.infra.service.codegen.inner.CodegenSQLParser;

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenSQLParser.java
Patch:
@@ -104,7 +104,7 @@ private static void parseColumnDefinition(List<DatabaseColumnDO> columns, SQLCol
         String text = definition.toString().toUpperCase();
         columns.add(DatabaseColumnDO.builder()
                 .columnName(normalize(definition.getColumnName()))
-                .columnType(definition.getDataType().toString())
+                .dataType(definition.getDataType().toString())
                 .columnComment(Objects.isNull(definition.getComment()) ? ""
                         : normalize(definition.getComment().toString()))
                 .nullable(!text.contains(" NOT NULL"))

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayQrPayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayWapPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXLitePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXNativePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPubPayClient;
@@ -62,7 +63,7 @@ private <Config extends PayClientConfig> AbstractPayClient<Config> createPayClie
         // TODO @芋艿 WX_LITE WX_APP 如果不添加在 项目启动的时候去初始化会报错无法启动。所以我手动加了两个，具体需要你来配
         switch (channelEnum) {
             case WX_PUB: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
-            case WX_LITE: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
+            case WX_LITE: return (AbstractPayClient<Config>) new WXLitePayClient(channelId, (WXPayClientConfig) config); //微信小程序请求支付
             case WX_APP: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_NATIVE: return (AbstractPayClient<Config>) new WXNativePayClient(channelId, (WXPayClientConfig) config);
             case ALIPAY_WAP: return (AbstractPayClient<Config>) new AlipayWapPayClient(channelId, (AlipayPayClientConfig) config);

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/PayClientFactoryImpl.java
Patch:
@@ -7,6 +7,7 @@
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayQrPayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.alipay.AlipayWapPayClient;
+import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXNativePayClient;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPayClientConfig;
 import cn.iocoder.yudao.framework.pay.core.client.impl.wx.WXPubPayClient;
 import cn.iocoder.yudao.framework.pay.core.enums.PayChannelEnum;
@@ -63,6 +64,7 @@ private <Config extends PayClientConfig> AbstractPayClient<Config> createPayClie
             case WX_PUB: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_LITE: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
             case WX_APP: return (AbstractPayClient<Config>) new WXPubPayClient(channelId, (WXPayClientConfig) config);
+            case WX_NATIVE: return (AbstractPayClient<Config>) new WXNativePayClient(channelId, (WXPayClientConfig) config);
             case ALIPAY_WAP: return (AbstractPayClient<Config>) new AlipayWapPayClient(channelId, (AlipayPayClientConfig) config);
             case ALIPAY_QR: return (AbstractPayClient<Config>) new AlipayQrPayClient(channelId, (AlipayPayClientConfig) config);
             case ALIPAY_APP: return (AbstractPayClient<Config>) new AlipayQrPayClient(channelId, (AlipayPayClientConfig) config);

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPubPayClient.java
Patch:
@@ -98,7 +98,7 @@ private WxPayMpOrderResult unifiedOrderV2(PayOrderUnifiedReqDTO reqDTO) throws W
                 // TODO 芋艿：貌似没 title？
                 .body(reqDTO.getBody())
                 .totalFee(reqDTO.getAmount().intValue()) // 单位分
-                .timeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyyMMddHHmmss"))
+                .timeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"))
                 .spbillCreateIp(reqDTO.getUserIp())
                 .openid(getOpenid(reqDTO))
                 .notifyUrl(reqDTO.getNotifyUrl())
@@ -114,7 +114,7 @@ private WxPayUnifiedOrderV3Result.JsapiResult unifiedOrderV3(PayOrderUnifiedReqD
         // TODO 芋艿：貌似没 title？
         request.setDescription(reqDTO.getBody());
         request.setAmount(new WxPayUnifiedOrderV3Request.Amount().setTotal(reqDTO.getAmount().intValue())); // 单位分
-        request.setTimeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyyMMddHHmmss"));
+        request.setTimeExpire(DateUtil.format(reqDTO.getExpireTime(), "yyyy-MM-dd'T'HH:mm:ssXXX"));
         request.setPayer(new WxPayUnifiedOrderV3Request.Payer().setOpenid(getOpenid(reqDTO)));
         request.setSceneInfo(new WxPayUnifiedOrderV3Request.SceneInfo().setPayerClientIp(reqDTO.getUserIp()));
         request.setNotifyUrl(reqDTO.getNotifyUrl());

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/enums/PayChannelEnum.java
Patch:
@@ -20,6 +20,8 @@ public enum PayChannelEnum {
     WX_PUB("wx_pub", "微信 JSAPI 支付", WXPayClientConfig.class), // 公众号网页
     WX_LITE("wx_lite", "微信小程序支付", WXPayClientConfig.class),
     WX_APP("wx_app", "微信 App 支付", WXPayClientConfig.class),
+    WX_NATIVE("wx_native", "微信 native 支付", WXPayClientConfig.class),
+
 
     ALIPAY_PC("alipay_pc", "支付宝 PC 网站支付", AlipayPayClientConfig.class),
     ALIPAY_WAP("alipay_wap", "支付宝 Wap 网站支付", AlipayPayClientConfig.class),

File: yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/vo/file/UploadRespVO.java
Patch:
@@ -5,8 +5,8 @@
 import lombok.Data;
 
 @Data
-@ApiModel(value = "管理后台 - 简单上传文件 VO", description = "简单上传文件, 不需要 path")
-public class SimpleUploadRespVO {
+@ApiModel(value = "管理后台 - 上传文件 VO")
+public class UploadRespVO {
 
     @ApiModelProperty(value = "文件名", required = true, example = "yudao.jpg")
     private String fileName;

File: yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/util/collection/CollectionUtils.java
Patch:
@@ -115,7 +115,7 @@ public static <T, K, V> Map<K, List<V>> convertMultiMap(Collection<T> from, Func
             return new HashMap<>();
         }
         return from.stream()
-                   .collect(Collectors.groupingBy(keyFunc, Collectors.mapping(valueFunc, Collectors.toList())));
+                .collect(Collectors.groupingBy(keyFunc, Collectors.mapping(valueFunc, Collectors.toList())));
     }
 
     // 暂时没想好名字，先以 2 结尾噶
@@ -169,4 +169,5 @@ public static <T> void addIfNotNull(Collection<T> coll, T item) {
     public static <T> Collection<T> singleton(T deptId) {
         return deptId == null ? Collections.emptyList() : Collections.singleton(deptId);
     }
+
 }

File: yudao-framework/yudao-spring-boot-starter-biz-data-permission/src/main/java/cn/iocoder/yudao/framework/datapermission/core/dept/rule/DeptDataPermissionRule.java
Patch:
@@ -35,7 +35,7 @@
  * 注意，使用 DeptDataPermissionRule 时，需要保证表中有 dept_id 部门编号的字段，可自定义。
  *
  * 实际业务场景下，会存在一个经典的问题？当用户修改部门时，冗余的 dept_id 是否需要修改？
- * 1. 一般情况下，dept_id 不进行修改，则会导致用户看到之前的数据。【yudao-admin-server 采用该方案】
+ * 1. 一般情况下，dept_id 不进行修改，则会导致用户看到之前的数据。【yudao-server 采用该方案】
  * 2. 部分情况下，希望该用户还是能看到之前的数据，则有两种方式解决：【需要你改造该 DeptDataPermissionRule 的实现代码】
  *  1）编写洗数据的脚本，将 dept_id 修改成新部门的编号；【建议】
  *      最终过滤条件是 WHERE dept_id = ?

File: yudao-framework/yudao-spring-boot-starter-biz-pay/src/main/java/cn/iocoder/yudao/framework/pay/core/client/impl/wx/WXPayClientConfig.java
Patch:
@@ -82,9 +82,9 @@ public class WXPayClientConfig implements PayClientConfig {
     @NotBlank(message = "apiclient_cert 不能为空", groups = V3.class)
     private String privateCertContent;
     /**
-     * apiV3 秘钥值
+     * apiV3 密钥值
      */
-    @NotBlank(message = "apiV3 秘钥值 不能为空", groups = V3.class)
+    @NotBlank(message = "apiV3 密钥值 不能为空", groups = V3.class)
     private String apiV3Key;
 
     /**

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/SmsClient.java
Patch:
@@ -11,7 +11,7 @@
  * 短信客户端，用于对接各短信平台的 SDK，实现短信发送等功能
  *
  * @author zzf
- * @date 2021/1/25 14:14
+ * @since 2021/1/25 14:14
  */
 public interface SmsClient {
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/SmsClientFactory.java
Patch:
@@ -6,7 +6,7 @@
  * 短信客户端的工厂接口
  *
  * @author zzf
- * @date 2021/1/28 14:01
+ * @since 2021/1/28 14:01
  */
 public interface SmsClientFactory {
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/SmsClientFactoryImpl.java
Patch:
@@ -4,6 +4,7 @@
 import cn.iocoder.yudao.framework.sms.core.client.SmsClientFactory;
 import cn.iocoder.yudao.framework.sms.core.client.impl.aliyun.AliyunSmsClient;
 import cn.iocoder.yudao.framework.sms.core.client.impl.debug.DebugDingTalkSmsClient;
+import cn.iocoder.yudao.framework.sms.core.client.impl.tencent.TencentSmsClient;
 import cn.iocoder.yudao.framework.sms.core.client.impl.yunpian.YunpianSmsClient;
 import cn.iocoder.yudao.framework.sms.core.enums.SmsChannelEnum;
 import cn.iocoder.yudao.framework.sms.core.property.SmsChannelProperties;
@@ -44,7 +45,7 @@ public SmsClientFactoryImpl() {
         Arrays.stream(SmsChannelEnum.values()).forEach(channel -> {
             // 创建一个空的 SmsChannelProperties 对象
             SmsChannelProperties properties = new SmsChannelProperties().setCode(channel.getCode())
-                    .setApiKey("default").setApiSecret("default");
+                    .setApiKey("default default").setApiSecret("default");
             // 创建 Sms 客户端
             AbstractSmsClient smsClient = createSmsClient(properties);
             channelCodeClients.put(channel.getCode(), smsClient);
@@ -81,6 +82,7 @@ private AbstractSmsClient createSmsClient(SmsChannelProperties properties) {
             case ALIYUN: return new AliyunSmsClient(properties);
             case YUN_PIAN: return new YunpianSmsClient(properties);
             case DEBUG_DING_TALK: return new DebugDingTalkSmsClient(properties);
+            case TENCENT: return new TencentSmsClient(properties);
         }
         // 创建失败，错误日志 + 抛出异常
         log.error("[createSmsClient][配置({}) 找不到合适的客户端实现]", properties);

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/aliyun/AliyunSmsClient.java
Patch:
@@ -41,7 +41,7 @@
  * 阿里短信客户端的实现类
  *
  * @author zzf
- * @date 2021/1/25 14:17
+ * @since 2021/1/25 14:17
  */
 @Slf4j
 public class AliyunSmsClient extends AbstractSmsClient {

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/client/impl/yunpian/YunpianSmsClient.java
Patch:
@@ -35,7 +35,7 @@
  * 云片短信客户端的实现类
  *
  * @author zzf
- * @date 9:48 2021/3/5
+ * @since 9:48 2021/3/5
  */
 @Slf4j
 public class YunpianSmsClient extends AbstractSmsClient {

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/enums/SmsChannelEnum.java
Patch:
@@ -8,7 +8,7 @@
  * 短信渠道枚举
  *
  * @author zzf
- * @date 2021/1/25 10:56
+ * @since 2021/1/25 10:56
  */
 @Getter
 @AllArgsConstructor
@@ -17,7 +17,7 @@ public enum SmsChannelEnum {
     DEBUG_DING_TALK("DEBUG_DING_TALK", "调试(钉钉)"),
     YUN_PIAN("YUN_PIAN", "云片"),
     ALIYUN("ALIYUN", "阿里云"),
-//    TENCENT("TENCENT", "腾讯云"),
+    TENCENT("TENCENT", "腾讯云"),
 //    HUA_WEI("HUA_WEI", "华为云"),
     ;
 

File: yudao-framework/yudao-spring-boot-starter-biz-sms/src/main/java/cn/iocoder/yudao/framework/sms/core/property/SmsChannelProperties.java
Patch:
@@ -11,7 +11,7 @@
  * 短信渠道配置类
  *
  * @author zzf
- * @date 2021/1/25 17:01
+ * @since 2021/1/25 17:01
  */
 @Data
 @Validated
@@ -40,9 +40,9 @@ public class SmsChannelProperties {
     @NotEmpty(message = "短信 API 的账号不能为空")
     private String apiKey;
     /**
-     * 短信 API 的秘钥
+     * 短信 API 的密钥
      */
-    @NotEmpty(message = "短信 API 的秘钥不能为空")
+    @NotEmpty(message = "短信 API 的密钥不能为空")
     private String apiSecret;
     /**
      * 短信发送回调 URL

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/config/SecurityProperties.java
Patch:
@@ -37,10 +37,10 @@ public class SecurityProperties {
     @NotNull(message = "mock 模式的开关不能为空")
     private Boolean mockEnable;
     /**
-     * mock 模式的秘钥
-     * 一定要配置秘钥，保证安全性
+     * mock 模式的密钥
+     * 一定要配置密钥，保证安全性
      */
-    @NotEmpty(message = "mock 模式的秘钥不能为空") // 这里设置了一个默认值，因为实际上只有 mockEnable 为 true 时才需要配置。
+    @NotEmpty(message = "mock 模式的密钥不能为空") // 这里设置了一个默认值，因为实际上只有 mockEnable 为 true 时才需要配置。
     private String mockSecret = "yudaoyuanma";
 
 }

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/mysql/definition/BpmProcessDefinitionExtMapper.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.bpm.dal.mysql.definition;
 
+import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import org.apache.ibatis.annotations.Mapper;

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmModelServiceImpl.java
Patch:
@@ -215,6 +215,9 @@ private void updateProcessDefinitionSuspended(String deploymentId) {
         if (oldDefinition == null) {
             return;
         }
+        if(oldDefinition.isSuspended()) {
+            return;
+        }
         processDefinitionService.updateProcessDefinitionState(oldDefinition.getId(), SuspensionState.SUSPENDED.getStateCode());
     }
 

File: yudao-module-bpm/yudao-module-bpm-biz-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -103,6 +103,9 @@ public List<BpmProcessDefinitionRespVO> getProcessDefinitionList(BpmProcessDefin
         }
         // 执行查询
         List<ProcessDefinition> processDefinitions = definitionQuery.list();
+        if (CollUtil.isEmpty(processDefinitions)) {
+            return Collections.emptyList();
+        }
 
         // 获得 BpmProcessDefinitionDO Map
         List<BpmProcessDefinitionExtDO> processDefinitionDOs = processDefinitionMapper.selectListByProcessDefinitionIds(

File: yudao-module-bpm/yudao-module-bpm-biz-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -236,6 +236,9 @@ public List<BpmProcessDefinitionRespVO> getProcessDefinitionList(BpmProcessDefin
         }
         // 执行查询
         List<ProcessDefinition> processDefinitions = definitionQuery.list();
+        if (CollUtil.isEmpty(processDefinitions)) {
+            return Collections.emptyList();
+        }
 
         // 获得 BpmProcessDefinitionDO Map
         List<BpmProcessDefinitionExtDO> processDefinitionDOs = processDefinitionMapper.selectListByProcessDefinitionIds(

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/mysql/definition/BpmProcessDefinitionExtMapper.java
Patch:
@@ -12,8 +12,7 @@
 public interface BpmProcessDefinitionExtMapper extends BaseMapperX<BpmProcessDefinitionExtDO> {
 
     default List<BpmProcessDefinitionExtDO> selectListByProcessDefinitionIds(Collection<String> processDefinitionIds) {
-        return selectList(new LambdaQueryWrapperX<BpmProcessDefinitionExtDO>()
-                .inIfPresent(BpmProcessDefinitionExtDO::getProcessDefinitionId,processDefinitionIds));
+        return selectList("process_definition_id", processDefinitionIds);
     }
 
     default BpmProcessDefinitionExtDO selectByProcessDefinitionId(String processDefinitionId) {

File: yudao-module-bpm/yudao-module-bpm-impl-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmModelServiceImpl.java
Patch:
@@ -215,7 +215,7 @@ private void updateProcessDefinitionSuspended(String deploymentId) {
         if (oldDefinition == null) {
             return;
         }
-        if(oldDefinition.isSuspended()){
+        if(oldDefinition.isSuspended()) {
             return;
         }
         processDefinitionService.updateProcessDefinitionState(oldDefinition.getId(), SuspensionState.SUSPENDED.getStateCode());

File: yudao-module-bpm/yudao-module-bpm-impl-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -103,6 +103,9 @@ public List<BpmProcessDefinitionRespVO> getProcessDefinitionList(BpmProcessDefin
         }
         // 执行查询
         List<ProcessDefinition> processDefinitions = definitionQuery.list();
+        if (CollUtil.isEmpty(processDefinitions)) {
+            return Collections.emptyList();
+        }
 
         // 获得 BpmProcessDefinitionDO Map
         List<BpmProcessDefinitionExtDO> processDefinitionDOs = processDefinitionMapper.selectListByProcessDefinitionIds(

File: yudao-module-bpm/yudao-module-bpm-impl-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmProcessDefinitionServiceImpl.java
Patch:
@@ -236,6 +236,9 @@ public List<BpmProcessDefinitionRespVO> getProcessDefinitionList(BpmProcessDefin
         }
         // 执行查询
         List<ProcessDefinition> processDefinitions = definitionQuery.list();
+        if (CollUtil.isEmpty(processDefinitions)) {
+            return Collections.emptyList();
+        }
 
         // 获得 BpmProcessDefinitionDO Map
         List<BpmProcessDefinitionExtDO> processDefinitionDOs = processDefinitionMapper.selectListByProcessDefinitionIds(

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/dal/mysql/definition/BpmProcessDefinitionExtMapper.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.module.bpm.dal.mysql.definition;
 
+import cn.iocoder.yudao.framework.mybatis.core.query.LambdaQueryWrapperX;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmProcessDefinitionExtDO;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import org.apache.ibatis.annotations.Mapper;
@@ -11,7 +12,8 @@
 public interface BpmProcessDefinitionExtMapper extends BaseMapperX<BpmProcessDefinitionExtDO> {
 
     default List<BpmProcessDefinitionExtDO> selectListByProcessDefinitionIds(Collection<String> processDefinitionIds) {
-        return selectList("process_definition_id", processDefinitionIds);
+        return selectList(new LambdaQueryWrapperX<BpmProcessDefinitionExtDO>()
+                .inIfPresent(BpmProcessDefinitionExtDO::getProcessDefinitionId,processDefinitionIds));
     }
 
     default BpmProcessDefinitionExtDO selectByProcessDefinitionId(String processDefinitionId) {

File: yudao-module-bpm/yudao-module-bpm-impl-activiti/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmModelServiceImpl.java
Patch:
@@ -215,6 +215,9 @@ private void updateProcessDefinitionSuspended(String deploymentId) {
         if (oldDefinition == null) {
             return;
         }
+        if(oldDefinition.isSuspended()){
+            return;
+        }
         processDefinitionService.updateProcessDefinitionState(oldDefinition.getId(), SuspensionState.SUSPENDED.getStateCode());
     }
 

File: yudao-module-member/yudao-module-member-impl/src/main/java/cn/iocoder/yudao/module/member/convert/auth/AuthConvert.java
Patch:
@@ -33,6 +33,6 @@ default LoginUser convert(MemberUserDO bean) {
 
     SmsCodeSendReqDTO convert(AppAuthSendSmsReqVO reqVO);
     SmsCodeUseReqDTO convert(AppAuthResetPasswordReqVO reqVO, SmsSceneEnum scene, String usedIp);
-    SmsCodeUseReqDTO convert(AppAuthSmsLoginReqVO reqVO, Integer scene, String userIp);
+    SmsCodeUseReqDTO convert(AppAuthSmsLoginReqVO reqVO, Integer scene, String usedIp);
 
 }

File: yudao-module-member/yudao-module-member-impl/src/main/java/cn/iocoder/yudao/module/member/convert/auth/AuthConvert.java
Patch:
@@ -33,6 +33,6 @@ default LoginUser convert(MemberUserDO bean) {
 
     SmsCodeSendReqDTO convert(AppAuthSendSmsReqVO reqVO);
     SmsCodeUseReqDTO convert(AppAuthResetPasswordReqVO reqVO, SmsSceneEnum scene, String usedIp);
-    SmsCodeUseReqDTO convert(AppAuthSmsLoginReqVO reqVO, Integer scene, String userIp);
+    SmsCodeUseReqDTO convert(AppAuthSmsLoginReqVO reqVO, Integer scene, String usedIp);
 
 }

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java
Patch:
@@ -111,7 +111,7 @@ public Long createUser(UserCreateReqVO reqVO) {
             List<UserPostDO> userPostList = new ArrayList<>();
             for (Long postId : postIds) {
                 UserPostDO entity = new UserPostDO();
-                entity.setUserId(entity.getUserId());
+                entity.setUserId(user.getId());
                 entity.setPostId(postId);
                 userPostList.add(entity);
             }

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClient.java
Patch:
@@ -44,7 +44,7 @@ public String upload(byte[] content, String path) {
         String dir = StrUtil.removeSuffix(filePath, fileName);
         boolean success = ftp.upload(dir, fileName, new ByteArrayInputStream(content));
         if (!success) {
-            throw new FtpException(StrUtil.format("上海文件到目标目录 ({}) 失败", filePath));
+            throw new FtpException(StrUtil.format("上传文件到目标目录 ({}) 失败", filePath));
         }
         // 拼接返回路径
         return super.formatFileUrl(config.getDomain(), path);

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenBuilder.java
Patch:
@@ -160,8 +160,9 @@ private void processColumnJava(CodegenColumnDO column) {
         // 处理 javaField 字段
         column.setJavaField(toCamelCase(column.getColumnName()));
         // 处理 dictType 字段，暂无
-        // 处理 javaType 字段
-        String dbType = subBefore(column.getColumnType(), '(', false);
+        // 处理 javaType 字段(兼容无符号类型)
+        String dbType = replaceIgnoreCase(subBefore(column.getColumnType(), '(', false),
+                " UNSIGNED", "");
         javaTypeMappings.entrySet().stream()
                 .filter(entry -> entry.getValue().contains(dbType))
                 .findFirst().ifPresent(entry -> column.setJavaType(entry.getKey()));

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/inner/CodegenBuilder.java
Patch:
@@ -160,8 +160,9 @@ private void processColumnJava(CodegenColumnDO column) {
         // 处理 javaField 字段
         column.setJavaField(toCamelCase(column.getColumnName()));
         // 处理 dictType 字段，暂无
-        // 处理 javaType 字段
-        String dbType = subBefore(column.getColumnType(), '(', false);
+        // 处理 javaType 字段(兼容无符号类型)
+        String dbType = replaceIgnoreCase(subBefore(column.getColumnType(), '(', false),
+                " UNSIGNED", "");
         javaTypeMappings.entrySet().stream()
                 .filter(entry -> entry.getValue().contains(dbType))
                 .findFirst().ifPresent(entry -> column.setJavaType(entry.getKey()));

File: yudao-framework/yudao-spring-boot-starter-file/src/main/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClient.java
Patch:
@@ -44,7 +44,7 @@ public String upload(byte[] content, String path) {
         String dir = StrUtil.removeSuffix(filePath, fileName);
         boolean success = ftp.upload(dir, fileName, new ByteArrayInputStream(content));
         if (!success) {
-            throw new FtpException(StrUtil.format("上海文件到目标目录 ({}) 失败", filePath));
+            throw new FtpException(StrUtil.format("上传文件到目标目录 ({}) 失败", filePath));
         }
         // 拼接返回路径
         return super.formatFileUrl(config.getDomain(), path);

File: yudao-module-system/yudao-module-system-api/src/main/java/cn/iocoder/yudao/module/system/enums/ErrorCodeConstants.java
Patch:
@@ -123,8 +123,8 @@ public interface ErrorCodeConstants {
     ErrorCode MAIL_ACCOUNT_NOT_EXISTS = new ErrorCode(1002019000, "邮箱账号不存在");
     ErrorCode MAIL_ACCOUNT_EXISTS = new ErrorCode(1002019001, "邮箱账号存在");
 
-    // ========== 邮箱账号 1002020000 ==========
+    // ========== 邮箱模版 1002020000 ==========
     ErrorCode MAIL_TEMPLATE_NOT_EXISTS = new ErrorCode(1002020000 , "邮箱模版不存在");
-    ErrorCode MAIL_TEMPLATE_EXISTS = new ErrorCode(1002020001, "邮箱账号存在");
+    ErrorCode MAIL_TEMPLATE_EXISTS = new ErrorCode(1002020001, "邮箱模版存在");
 
 }

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/mail/MailAccountDO.java
Patch:
@@ -16,7 +16,7 @@
 @Data
 @EqualsAndHashCode(callSuper = true)
 @Accessors(chain = true)
-@ApiModel(value="MailAccount对象", description="")
+@ApiModel(value="MailAccount对象", description="邮箱账号")
 @TableName(value = "system_mail_account", autoResultMap = true)
 public class MailAccountDO extends BaseDO implements Serializable {
 
@@ -37,7 +37,7 @@ public class MailAccountDO extends BaseDO implements Serializable {
     private String host;
 
     @TableField("port")
-    private String port;
+    private Integer port;
 
     @TableField("sslEnable")
     private Boolean sslEnable;

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/mail/MailAccountService.java
Patch:
@@ -4,6 +4,7 @@
 import cn.iocoder.yudao.module.system.controller.admin.mail.vo.account.MailAccountCreateReqVO;
 import cn.iocoder.yudao.module.system.controller.admin.mail.vo.account.MailAccountPageReqVO;
 import cn.iocoder.yudao.module.system.controller.admin.mail.vo.account.MailAccountUpdateReqVO;
+import cn.iocoder.yudao.module.system.controller.admin.mail.vo.send.MailSendVO;
 import cn.iocoder.yudao.module.system.dal.dataobject.mail.MailAccountDO;
 
 import java.util.List;
@@ -30,4 +31,6 @@ public interface MailAccountService {
     PageResult<MailAccountDO> getMailAccountPage(MailAccountPageReqVO pageReqVO);
 
     List<MailAccountDO> getMailAccountList();
+
+    void sendMail(MailSendVO mailSendVO);
 }

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/log/MailLogBaseVO.java
Patch:
@@ -15,10 +15,10 @@ public class MailLogBaseVO {
     private String from;
 
     @ApiModelProperty(value = "模版编号" , required = false , example = "templeId")
-    private String templeId;
+    private String templateId;
 
     @ApiModelProperty(value = "模版code" , required = false , example = "templeCode")
-    private String templeCode;
+    private String templateCode;
 
     @ApiModelProperty(value = "标题" , required = false , example = "芋道源码")
     private String title;

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/log/MailLogExcelVO.java
Patch:
@@ -1,12 +1,14 @@
 package cn.iocoder.yudao.module.system.controller.admin.mail.vo.log;
 
 import com.alibaba.excel.annotation.ExcelProperty;
+import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
 import java.sql.Timestamp;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
 
+@Data
 public class MailLogExcelVO {
 
     @ExcelProperty(value = "邮箱" )

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/controller/admin/mail/vo/log/MailLogPageReqVO.java
Patch:
@@ -8,16 +8,17 @@
 import java.sql.Timestamp;
 
 import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;
+
 @Data
 public class MailLogPageReqVO extends PageParam {
     @ApiModelProperty(value = "邮箱" , required = false , example = "yudaoyuanma@123.com")
     private String from;
 
     @ApiModelProperty(value = "模版编号" , required = false , example = "templeId")
-    private String templeId;
+    private String templateId;
 
     @ApiModelProperty(value = "模版code" , required = false , example = "templeCode")
-    private String templeCode;
+    private String templateCode;
 
     @ApiModelProperty(value = "标题" , required = false , example = "芋道源码")
     private String title;

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/dal/dataobject/mail/MailTemplateDO.java
Patch:
@@ -13,7 +13,7 @@
 
 /**
  * <p>
- * 邮箱账号
+ * 邮箱模版
  * </p>
  *
  * @author wangjingyi
@@ -22,8 +22,8 @@
 @Data
 @EqualsAndHashCode(callSuper = true)
 @Accessors(chain = true)
-@ApiModel(value="SystemMailTemple对象", description="")
-public class MailTempleDO extends BaseDO implements Serializable {
+@ApiModel(value="SystemMailTemplate对象", description="")
+public class MailTemplateDO extends BaseDO implements Serializable {
 
     private static final long serialVersionUID = 1L;
     @TableId

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/convert/logger/OperateLogConvert.java
Patch:
@@ -30,7 +30,7 @@ public interface OperateLogConvert {
     default List<OperateLogExcelVO> convertList(List<OperateLogDO> list, Map<Long, AdminUserDO> userMap) {
         return list.stream().map(operateLog -> {
             OperateLogExcelVO excelVO = convert02(operateLog);
-            MapUtils.findAndThen(userMap, operateLog.getId(), user -> excelVO.setUserNickname(user.getNickname()));
+            MapUtils.findAndThen(userMap, operateLog.getUserId(), user -> excelVO.setUserNickname(user.getNickname()));
             excelVO.setSuccessStr(SUCCESS.getCode().equals(operateLog.getResultCode()) ? "成功" : "失败");
             return excelVO;
         }).collect(Collectors.toList());

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/convert/logger/OperateLogConvert.java
Patch:
@@ -30,7 +30,7 @@ public interface OperateLogConvert {
     default List<OperateLogExcelVO> convertList(List<OperateLogDO> list, Map<Long, AdminUserDO> userMap) {
         return list.stream().map(operateLog -> {
             OperateLogExcelVO excelVO = convert02(operateLog);
-            MapUtils.findAndThen(userMap, operateLog.getId(), user -> excelVO.setUserNickname(user.getNickname()));
+            MapUtils.findAndThen(userMap, operateLog.getUserId(), user -> excelVO.setUserNickname(user.getNickname()));
             excelVO.setSuccessStr(SUCCESS.getCode().equals(operateLog.getResultCode()) ? "成功" : "失败");
             return excelVO;
         }).collect(Collectors.toList());

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/ftp/FtpFileClientTest.java
Patch:
@@ -3,11 +3,13 @@
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.util.IdUtil;
 import cn.hutool.extra.ftp.FtpMode;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class FtpFileClientTest {
 
     @Test
+    @Disabled
     public void test() {
         // 创建客户端
         FtpFileClientConfig config = new FtpFileClientConfig();

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/local/LocalFileClientTest.java
Patch:
@@ -2,11 +2,13 @@
 
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.util.IdUtil;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class LocalFileClientTest {
 
     @Test
+    @Disabled
     public void test() {
         // 创建客户端
         LocalFileClientConfig config = new LocalFileClientConfig();

File: yudao-framework/yudao-spring-boot-starter-file/src/test/java/cn/iocoder/yudao/framework/file/core/client/sftp/SftpFileClientTest.java
Patch:
@@ -2,11 +2,13 @@
 
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.util.IdUtil;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class SftpFileClientTest {
 
     @Test
+    @Disabled
     public void test() {
         // 创建客户端
         SftpFileClientConfig config = new SftpFileClientConfig();

File: yudao-module-bpm/yudao-module-bpm-base/src/main/java/cn/iocoder/yudao/module/bpm/service/message/BpmMessageService.java
Patch:
@@ -22,7 +22,6 @@ public interface BpmMessageService {
      */
     void sendMessageWhenProcessInstanceApprove(@Valid BpmMessageSendWhenProcessInstanceApproveReqDTO reqDTO);
 
-
     /**
      * 发送流程实例被不通过的消息
      *

File: yudao-module-bpm/yudao-module-bpm-impl-flowable/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/behavior/BpmUserTaskActivityBehavior.java
Patch:
@@ -5,7 +5,6 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.datapermission.core.annotation.DataPermission;
-import cn.iocoder.yudao.framework.datapermission.core.dept.rule.DeptDataPermissionRule;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmTaskAssignRuleDO;
 import cn.iocoder.yudao.module.bpm.dal.dataobject.definition.BpmUserGroupDO;
 import cn.iocoder.yudao.module.bpm.enums.definition.BpmTaskAssignRuleTypeEnum;
@@ -69,11 +68,13 @@ public class BpmUserTaskActivityBehavior extends UserTaskActivityBehavior {
     public BpmUserTaskActivityBehavior(UserTask userTask) {
         super(userTask);
     }
+
     public void setScripts(List<BpmTaskAssignScript> scripts) {
         this.scriptMap = convertMap(scripts, script -> script.getEnum().getId());
     }
 
     @Override
+    @DataPermission(enable = false) // 不需要处理数据权限， 不然会有问题，查询不到数据
     protected void handleAssignments(TaskService taskService, String assignee, String owner, List<String> candidateUsers, List<String> candidateGroups, TaskEntity task, ExpressionManager expressionManager, DelegateExecution execution, ProcessEngineConfigurationImpl processEngineConfiguration) {
         // 第一步，获得任务的规则
         BpmTaskAssignRuleDO rule = getTaskRule(task);
@@ -98,7 +99,6 @@ private BpmTaskAssignRuleDO getTaskRule(TaskEntity task) {
         return taskRules.get(0);
     }
 
-    @VisibleForTesting
     Set<Long> calculateTaskCandidateUsers(TaskEntity task, BpmTaskAssignRuleDO rule) {
         Set<Long> assigneeUserIds = null;
         if (Objects.equals(BpmTaskAssignRuleTypeEnum.ROLE.getType(), rule.getType())) {

File: yudao-module-bpm/yudao-module-bpm-impl-flowable/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/behavior/script/impl/BpmTaskAssignLeaderX2Script.java
Patch:
@@ -15,7 +15,6 @@
 @Component
 public class BpmTaskAssignLeaderX2Script extends BpmTaskAssignLeaderAbstractScript {
 
-
     @Override
     @DataPermission(enable = false) // 不需要处理数据权限， 不然会有问题，查询不到数据
     public Set<Long> calculateTaskCandidateUsers(TaskEntity task) {

File: yudao-module-infra/yudao-module-infra-api/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApi.java
Patch:
@@ -15,7 +15,7 @@ public interface FileApi {
      * @param content 文件内容
      * @return 文件路径
      */
-   default String createFile(byte[] content) {
+   default String createFile(byte[] content) throws Exception {
        return createFile(IdUtil.fastUUID(), content);
    }
 
@@ -26,6 +26,6 @@ default String createFile(byte[] content) {
      * @param content 文件内容
      * @return 文件路径
      */
-    String createFile(String path, byte[] content);
+    String createFile(String path, byte[] content) throws Exception;
 
 }

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/api/file/FileApiImpl.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.yudao.module.infra.api.file;
 
-import cn.iocoder.yudao.module.infra.api.file.FileApi;
 import cn.iocoder.yudao.module.infra.service.file.FileService;
 import org.springframework.stereotype.Service;
 import org.springframework.validation.annotation.Validated;
@@ -20,7 +19,7 @@ public class FileApiImpl implements FileApi {
     private FileService fileService;
 
     @Override
-    public String createFile(String path, byte[] content) {
+    public String createFile(String path, byte[] content) throws Exception {
         return fileService.createFile(path, content);
     }
 

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/controller/admin/file/FileConfigController.java
Patch:
@@ -82,7 +82,7 @@ public CommonResult<PageResult<FileConfigRespVO>> getFileConfigPage(@Valid FileC
     @GetMapping("/test")
     @ApiOperation("测试文件配置是否正确")
     @PreAuthorize("@ss.hasPermission('infra:file-config:query')")
-    public CommonResult<String> testFileConfig(@RequestParam("id") Long id) {
+    public CommonResult<String> testFileConfig(@RequestParam("id") Long id) throws Exception {
         String url = fileConfigService.testFileConfig(id);
         return success(url);
     }

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/codegen/CodegenServiceImpl.java
Patch:
@@ -82,7 +82,7 @@ private Long createCodegen0(Long userId, CodegenImportTypeEnum importType,
         table.setAuthor(userApi.getUser(userId).getNickname());
         codegenTableMapper.insert(table);
         // 构建 CodegenColumnDO 数组，插入到 DB 中
-        List<CodegenColumnDO> columns = codegenBuilder.buildColumns(schemaColumns);
+        List<CodegenColumnDO> columns = codegenBuilder.buildColumns(table.getId(), schemaColumns);
         codegenColumnMapper.insertBatch(columns);
         return table.getId();
     }
@@ -196,7 +196,7 @@ private void syncCodegen0(Long tableId, List<SchemaColumnDO> schemaColumns) {
         }
 
         // 插入新增的字段
-        List<CodegenColumnDO> columns = codegenBuilder.buildColumns(schemaColumns);
+        List<CodegenColumnDO> columns = codegenBuilder.buildColumns(tableId, schemaColumns);
         codegenColumnMapper.insertBatch(columns);
         // 删除不存在的字段
         if (CollUtil.isNotEmpty(deleteColumnIds)) {

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileConfigService.java
Patch:
@@ -82,7 +82,7 @@ public interface FileConfigService {
      * @param id 编号
      * @return 文件 URL
      */
-    String testFileConfig(Long id);
+    String testFileConfig(Long id) throws Exception;
 
     /**
      * 获得指定编号的文件客户端

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImpl.java
Patch:
@@ -225,7 +225,7 @@ public PageResult<FileConfigDO> getFileConfigPage(FileConfigPageReqVO pageReqVO)
     }
 
     @Override
-    public String testFileConfig(Long id) {
+    public String testFileConfig(Long id) throws Exception {
         // 校验存在
         this.validateFileConfigExists(id);
         // 上传文件

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileService.java
Patch:
@@ -26,14 +26,14 @@ public interface FileService {
      * @param content 文件内容
      * @return 文件路径
      */
-    String createFile(String path, byte[] content);
+    String createFile(String path, byte[] content) throws Exception;
 
     /**
      * 删除文件
      *
      * @param id 编号
      */
-    void deleteFile(Long id);
+    void deleteFile(Long id) throws Exception;
 
     /**
      * 获得文件内容
@@ -42,6 +42,6 @@ public interface FileService {
      * @param path 文件路径
      * @return 文件内容
      */
-    byte[] getFileContent(Long configId, String path);
+    byte[] getFileContent(Long configId, String path) throws Exception;
 
 }

File: yudao-module-infra/yudao-module-infra-impl/src/main/java/cn/iocoder/yudao/module/infra/service/file/FileServiceImpl.java
Patch:
@@ -35,7 +35,7 @@ public PageResult<FileDO> getFilePage(FilePageReqVO pageReqVO) {
     }
 
     @Override
-    public String createFile(String path, byte[] content) {
+    public String createFile(String path, byte[] content) throws Exception {
         // 上传到文件存储器
         FileClient client = fileConfigService.getMasterFileClient();
         Assert.notNull(client, "客户端(master) 不能为空");
@@ -53,7 +53,7 @@ public String createFile(String path, byte[] content) {
     }
 
     @Override
-    public void deleteFile(Long id) {
+    public void deleteFile(Long id) throws Exception {
         // 校验存在
         FileDO file = this.validateFileExists(id);
 
@@ -75,7 +75,7 @@ private FileDO validateFileExists(Long id) {
     }
 
     @Override
-    public byte[] getFileContent(Long configId, String path) {
+    public byte[] getFileContent(Long configId, String path) throws Exception {
         FileClient client = fileConfigService.getFileClient(configId);
         Assert.notNull(client, "客户端({}) 不能为空", configId);
         return client.getContent(path);

File: yudao-module-infra/yudao-module-infra-impl/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileConfigServiceImplTest.java
Patch:
@@ -228,7 +228,7 @@ public void testGetFileConfigPage() {
     }
 
     @Test
-    public void testFileConfig() {
+    public void testFileConfig() throws Exception {
         // mock 数据
         FileConfigDO dbFileConfig = randomFileConfigDO().setMaster(false);
         fileConfigMapper.insert(dbFileConfig);// @Sql: 先插入出一条存在的数据

File: yudao-module-infra/yudao-module-infra-impl/src/test/java/cn/iocoder/yudao/module/infra/service/file/FileServiceTest.java
Patch:
@@ -70,7 +70,7 @@ public void testGetFilePage() {
     }
 
     @Test
-    public void testCreateFile_success() {
+    public void testCreateFile_success() throws Exception {
         // 准备参数
         String path = randomString();
         byte[] content = ResourceUtil.readBytes("file/erweima.jpg");
@@ -95,7 +95,7 @@ public void testCreateFile_success() {
     }
 
     @Test
-    public void testDeleteFile_success() {
+    public void testDeleteFile_success() throws Exception {
         // mock 数据
         FileDO dbFile = randomPojo(FileDO.class, o -> o.setConfigId(10L).setPath("tudou.jpg"));
         fileMapper.insert(dbFile);// @Sql: 先插入出一条存在的数据
@@ -123,7 +123,7 @@ public void testDeleteFile_notExists() {
     }
 
     @Test
-    public void testGetFileContent() {
+    public void testGetFileContent() throws Exception {
         // 准备参数
         Long configId = 10L;
         String path = "tudou.jpg";

File: yudao-module-member/yudao-module-member-impl/src/main/java/cn/iocoder/yudao/module/member/controller/app/user/AppUserController.java
Patch:
@@ -16,9 +16,8 @@
 
 import javax.annotation.Resource;
 import javax.validation.Valid;
-import java.io.IOException;
 
-import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.*;
+import static cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil.exception;
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static cn.iocoder.yudao.module.infra.enums.ErrorCodeConstants.FILE_IS_EMPTY;
@@ -44,7 +43,7 @@ public CommonResult<Boolean> updateUserNickname(@RequestParam("nickname") String
     @PutMapping("/update-avatar")
     @ApiOperation("修改用户头像")
     @PreAuthenticated
-    public CommonResult<String> updateUserAvatar(@RequestParam("avatarFile") MultipartFile file) throws IOException {
+    public CommonResult<String> updateUserAvatar(@RequestParam("avatarFile") MultipartFile file) throws Exception {
         if (file.isEmpty()) {
             throw exception(FILE_IS_EMPTY);
         }

File: yudao-module-member/yudao-module-member-impl/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserService.java
Patch:
@@ -60,7 +60,7 @@ public interface MemberUserService {
      * @param inputStream 头像文件
      * @return 头像url
      */
-    String updateUserAvatar(Long userId, InputStream inputStream);
+    String updateUserAvatar(Long userId, InputStream inputStream) throws Exception;
 
     /**
      * 修改手机

File: yudao-module-member/yudao-module-member-impl/src/main/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImpl.java
Patch:
@@ -100,7 +100,7 @@ public void updateUserNickname(Long userId, String nickname) {
     }
 
     @Override
-    public String updateUserAvatar(Long userId, InputStream avatarFile) {
+    public String updateUserAvatar(Long userId, InputStream avatarFile) throws Exception {
         this.checkUserExists(userId);
         // 创建文件
         String avatar = fileApi.createFile(IoUtil.readBytes(avatarFile));

File: yudao-module-member/yudao-module-member-impl/src/test/java/cn/iocoder/yudao/module/member/service/user/MemberUserServiceImplTest.java
Patch:
@@ -74,7 +74,7 @@ public void testUpdateNickName_success(){
     }
 
     @Test
-    public void testUpdateAvatar_success(){
+    public void testUpdateAvatar_success() throws Exception {
         // mock 数据
         MemberUserDO dbUser = randomUserDO();
         userMapper.insert(dbUser);

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/UserProfileController.java
Patch:
@@ -29,7 +29,6 @@
 
 import javax.annotation.Resource;
 import javax.validation.Valid;
-import java.io.IOException;
 import java.util.List;
 
 import static cn.iocoder.yudao.framework.common.pojo.CommonResult.success;
@@ -99,7 +98,7 @@ public CommonResult<Boolean> updateUserProfilePassword(@Valid @RequestBody UserP
 
     @PutMapping("/update-avatar")
     @ApiOperation("上传用户个人头像")
-    public CommonResult<String> updateUserAvatar(@RequestParam("avatarFile") MultipartFile file) throws IOException {
+    public CommonResult<String> updateUserAvatar(@RequestParam("avatarFile") MultipartFile file) throws Exception {
         if (file.isEmpty()) {
             throw ServiceExceptionUtil.exception(FILE_IS_EMPTY);
         }

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/permission/MenuServiceImpl.java
Patch:
@@ -120,7 +120,7 @@ private List<MenuDO> loadMenuIfUpdate(Date maxUpdateTime) {
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadMenuIfUpdate][首次加载全量菜单]");
         } else { // 判断数据库中是否有更新的菜单
-            if (!menuMapper.selectExistsByUpdateTimeAfter(maxUpdateTime)) {
+            if (menuMapper.selectExistsByUpdateTimeAfter(maxUpdateTime) == null) {
                 return null;
             }
             log.info("[loadMenuIfUpdate][增量加载全量菜单]");

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/permission/RoleServiceImpl.java
Patch:
@@ -116,7 +116,7 @@ private List<RoleDO> loadRoleIfUpdate(Date maxUpdateTime) {
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadRoleIfUpdate][首次加载全量角色]");
         } else { // 判断数据库中是否有更新的角色
-            if (!roleMapper.selectExistsByUpdateTimeAfter(maxUpdateTime)) {
+            if (roleMapper.selectExistsByUpdateTimeAfter(maxUpdateTime) == null) {
                 return null;
             }
             log.info("[loadRoleIfUpdate][增量加载全量角色]");

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserService.java
Patch:
@@ -64,7 +64,7 @@ public interface AdminUserService {
      * @param id         用户 id
      * @param avatarFile 头像文件
      */
-    String updateUserAvatar(Long id, InputStream avatarFile);
+    String updateUserAvatar(Long id, InputStream avatarFile) throws Exception;
 
     /**
      * 修改密码

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/user/AdminUserServiceImpl.java
Patch:
@@ -63,6 +63,7 @@ public class AdminUserServiceImpl implements AdminUserService {
     private FileApi fileApi;
 
     @Override
+
     public Long createUser(UserCreateReqVO reqVO) {
         // 校验账户配合
         tenantService.handleTenantInfo(tenant -> {
@@ -118,7 +119,7 @@ public void updateUserPassword(Long id, UserProfileUpdatePasswordReqVO reqVO) {
     }
 
     @Override
-    public String updateUserAvatar(Long id, InputStream avatarFile) {
+    public String updateUserAvatar(Long id, InputStream avatarFile) throws Exception {
         this.checkUserExists(id);
         // 存储文件
         String avatar = fileApi.createFile(IoUtil.readBytes(avatarFile));

File: yudao-module-system/yudao-module-system-impl/src/test/java/cn/iocoder/yudao/module/system/service/user/UserServiceImplTest.java
Patch:
@@ -196,7 +196,7 @@ public void testUpdateUserPassword_success() {
     }
 
     @Test
-    public void testUpdateUserAvatar_success() {
+    public void testUpdateUserAvatar_success() throws Exception {
         // mock 数据
         AdminUserDO dbUser = randomAdminUserDO();
         userMapper.insert(dbUser);

File: yudao-module-bpm/yudao-module-bpm-impl-flowable/src/main/java/cn/iocoder/yudao/module/bpm/controller/admin/definition/BpmModelController.java
Patch:
@@ -61,6 +61,7 @@ public CommonResult<Boolean> updateModel(@Valid @RequestBody BpmModelUpdateReqVO
 
     @PostMapping("/import")
     @ApiOperation(value = "导入模型")
+    @PreAuthorize("@ss.hasPermission('bpm:model:import')")
     public CommonResult<String> importModel(@Valid BpmModeImportReqVO importReqVO) throws IOException {
         BpmModelCreateReqVO createReqVO = BpmModelConvert.INSTANCE.convert(importReqVO);
         // 读取文件

File: yudao-module-bpm/yudao-module-bpm-impl-flowable/src/main/java/cn/iocoder/yudao/module/bpm/convert/task/BpmTaskConvert.java
Patch:
@@ -108,6 +108,7 @@ default List<BpmTaskRespVO> convertList3(List<HistoricTaskInstance> tasks, Map<S
 
     BpmTaskRespVO.User convert3(AdminUserRespDTO bean);
 
+    @Mapping(target = "id", ignore = true)
     void copyTo(BpmTaskExtDO from, @MappingTarget BpmTaskDonePageItemRespVO to);
 
     @Mappings({

File: yudao-module-bpm/yudao-module-bpm-impl-flowable/src/main/java/cn/iocoder/yudao/module/bpm/service/definition/BpmModelServiceImpl.java
Patch:
@@ -132,6 +132,7 @@ public BpmModelRespVO getModel(String id) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class) // 因为进行多个操作，所以开启事务
     public void updateModel(@Valid BpmModelUpdateReqVO updateReqVO) {
         // 校验流程模型存在
         Model model = repositoryService.getModel(updateReqVO.getId());
@@ -148,6 +149,7 @@ public void updateModel(@Valid BpmModelUpdateReqVO updateReqVO) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class) // 因为进行多个操作，所以开启事务
     public void deployModel(String id) {
         // 校验流程模型存在
         Model model = repositoryService.getModel(id);

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/user/UserBaseVO.java
Patch:
@@ -6,6 +6,7 @@
 
 import javax.validation.constraints.Email;
 import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.Pattern;
 import javax.validation.constraints.Size;
 import java.util.Set;
 
@@ -18,6 +19,7 @@ public class UserBaseVO {
 
     @ApiModelProperty(value = "用户账号", required = true, example = "yudao")
     @NotBlank(message = "用户账号不能为空")
+    @Pattern(regexp = "^[a-zA-Z0-9]{4,30}$", message = "用户账号由 数字、字母 组成")
     @Size(min = 4, max = 30, message = "用户账号长度为 4-30 个字符")
     private String username;
 

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/controller/admin/user/vo/user/UserBaseVO.java
Patch:
@@ -6,6 +6,7 @@
 
 import javax.validation.constraints.Email;
 import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.Pattern;
 import javax.validation.constraints.Size;
 import java.util.Set;
 
@@ -18,6 +19,7 @@ public class UserBaseVO {
 
     @ApiModelProperty(value = "用户账号", required = true, example = "yudao")
     @NotBlank(message = "用户账号不能为空")
+    @Pattern(regexp = "^[a-zA-Z0-9]{4,30}$", message = "用户账号由 数字、字母 组成")
     @Size(min = 4, max = 30, message = "用户账号长度为 4-30 个字符")
     private String username;
 

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/permission/PermissionServiceImpl.java
Patch:
@@ -406,7 +406,7 @@ public DeptDataPermissionRespDTO getDeptDataPermission(LoginUser loginUser) {
     @Override
     public Set<Long> getUserRoleIdListByRoleIds(Collection<Long> roleIds) {
         return CollectionUtils.convertSet(userRoleMapper.selectListByRoleIds(roleIds),
-                UserRoleDO::getRoleId);
+                UserRoleDO::getUserId);
     }
 
 }

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/permission/PermissionServiceImpl.java
Patch:
@@ -406,7 +406,7 @@ public DeptDataPermissionRespDTO getDeptDataPermission(LoginUser loginUser) {
     @Override
     public Set<Long> getUserRoleIdListByRoleIds(Collection<Long> roleIds) {
         return CollectionUtils.convertSet(userRoleMapper.selectListByRoleIds(roleIds),
-                UserRoleDO::getRoleId);
+                UserRoleDO::getUserId);
     }
 
 }

File: yudao-module-system/yudao-module-system-impl/src/test/java/cn/iocoder/yudao/module/system/service/permission/PermissionServiceTest.java
Patch:
@@ -203,8 +203,9 @@ public void testGetDeptDataPermission_DeptAndChild() {
         // 断言
         assertFalse(result.getAll());
         assertFalse(result.getSelf());
-        assertEquals(1, result.getDeptIds().size());
+        assertEquals(2, result.getDeptIds().size());
         assertTrue(CollUtil.contains(result.getDeptIds(), deptDO.getId()));
+        assertTrue(CollUtil.contains(result.getDeptIds(), loginUser.getDeptId()));
         assertSame(result, loginUser.getContext(PermissionServiceImpl.CONTEXT_KEY, DeptDataPermissionRespDTO.class));
     }
 

File: yudao-module-system/yudao-module-system-impl/src/main/java/cn/iocoder/yudao/module/system/service/dept/DeptServiceImpl.java
Patch:
@@ -112,7 +112,7 @@ private List<DeptDO> loadDeptIfUpdate(Date maxUpdateTime) {
         if (maxUpdateTime == null) { // 如果更新时间为空，说明 DB 一定有新数据
             log.info("[loadMenuIfUpdate][首次加载全量部门]");
         } else { // 判断数据库中是否有更新的部门
-            if (deptMapper.selectExistsByUpdateTimeAfter(maxUpdateTime) != null) {
+            if (deptMapper.selectExistsByUpdateTimeAfter(maxUpdateTime) == null) {
                 return null;
             }
             log.info("[loadMenuIfUpdate][增量加载全量部门]");

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/handler/AccessDeniedHandlerImpl.java
Patch:
@@ -16,6 +16,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.io.IOException;
 
+import static cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants.FORBIDDEN;
 import static cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants.UNAUTHORIZED;
 
 /**
@@ -36,7 +37,7 @@ public void handle(HttpServletRequest request, HttpServletResponse response, Acc
         log.warn("[commence][访问 URL({}) 时，用户({}) 权限不够]", request.getRequestURI(),
                 SecurityFrameworkUtils.getLoginUserId(), e);
         // 返回 403
-        ServletUtils.writeJSON(response, CommonResult.error(UNAUTHORIZED));
+        ServletUtils.writeJSON(response, CommonResult.error(FORBIDDEN));
     }
 
 }

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/handler/AccessDeniedHandlerImpl.java
Patch:
@@ -16,6 +16,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.io.IOException;
 
+import static cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants.FORBIDDEN;
 import static cn.iocoder.yudao.framework.common.exception.enums.GlobalErrorCodeConstants.UNAUTHORIZED;
 
 /**
@@ -36,7 +37,7 @@ public void handle(HttpServletRequest request, HttpServletResponse response, Acc
         log.warn("[commence][访问 URL({}) 时，用户({}) 权限不够]", request.getRequestURI(),
                 SecurityFrameworkUtils.getLoginUserId(), e);
         // 返回 403
-        ServletUtils.writeJSON(response, CommonResult.error(UNAUTHORIZED));
+        ServletUtils.writeJSON(response, CommonResult.error(FORBIDDEN));
     }
 
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/activiti/package-info.java
Patch:
@@ -1,2 +0,0 @@
-// TODO @芋艿：思考下 activiti、oa 的定位，边界，模块的拆分
-package cn.iocoder.yudao.adminserver.modules.activiti;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/file/InfFileController.java
Patch:
@@ -54,7 +54,7 @@ public CommonResult<String> uploadFile(@RequestParam("file") MultipartFile file,
 
     @DeleteMapping("/delete")
     @ApiOperation("删除文件")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = String.class)
     @PreAuthorize("@ss.hasPermission('infra:file:delete')")
     public CommonResult<Boolean> deleteFile(@RequestParam("id") String id) {
         fileCoreService.deleteFile(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/redis/vo/InfRedisMonitorRespVO.java
Patch:
@@ -37,7 +37,7 @@ public static class CommandStat {
         private Integer calls;
 
         @ApiModelProperty(value = "消耗 CPU 秒数", required = true, example = "666")
-        private Integer usec;
+        private Long usec;
 
     }
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/convert/redis/RedisConvert.java
Patch:
@@ -23,7 +23,7 @@ default InfRedisMonitorRespVO build(Properties info, Long dbSize, Properties com
             respVO.getCommandStats().add(InfRedisMonitorRespVO.CommandStat.builder()
                     .command(StrUtil.subAfter((String) key, "cmdstat_", false))
                     .calls(Integer.valueOf(StrUtil.subBetween((String) value, "calls=", ",")))
-                    .usec(Integer.valueOf(StrUtil.subBetween((String) value, "usec=", ",")))
+                    .usec(Long.valueOf(StrUtil.subBetween((String) value, "usec=", ",")))
                     .build());
         });
         return respVO;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/pay/enums/PayErrorCodeConstants.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.adminserver.modules.pay.enums;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/auth/vo/auth/SysAuthPermissionInfoRespVO.java
Patch:
@@ -32,6 +32,9 @@ public class SysAuthPermissionInfoRespVO {
     @Builder
     public static class UserVO {
 
+        @ApiModelProperty(value = "用户编号", required = true, example = "1024")
+        private Long id;
+
         @ApiModelProperty(value = "用户昵称", required = true, example = "芋道源码")
         private String nickname;
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/errorcode/SysErrorCodeController.java
Patch:
@@ -50,7 +50,7 @@ public CommonResult<Boolean> updateErrorCode(@Valid @RequestBody SysErrorCodeUpd
 
     @DeleteMapping("/delete")
     @ApiOperation("删除错误码")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:error-code:delete')")
     public CommonResult<Boolean> deleteErrorCode(@RequestParam("id") Long id) {
         errorCodeService.deleteErrorCode(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/permission/SysPermissionController.java
Patch:
@@ -59,7 +59,7 @@ public CommonResult<Boolean> assignRoleDataScope(
     @GetMapping("/list-user-roles")
 //    @RequiresPermissions("system:permission:assign-user-role")
     public CommonResult<Set<Long>> listAdminRoles(@RequestParam("userId") Long userId) {
-        return success(permissionService.listUserRoleIs(userId));
+        return success(permissionService.getUserRoleIdListByUserId(userId));
     }
 
     @ApiOperation("赋予用户角色")

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/permission/SysRoleController.java
Patch:
@@ -97,7 +97,7 @@ public CommonResult<List<SysRoleSimpleRespVO>> getSimpleRoles() {
     @OperateLog(type = EXPORT)
     @PreAuthorize("@ss.hasPermission('system:role:export')")
     public void export(HttpServletResponse response, @Validated SysRoleExportReqVO reqVO) throws IOException {
-        List<SysRoleDO> list = roleService.getRoles(reqVO);
+        List<SysRoleDO> list = roleService.getRoleList(reqVO);
         List<SysRoleExcelVO> data = SysRoleConvert.INSTANCE.convertList03(list);
         // 输出
         ExcelUtils.write(response, "角色数据.xls", "角色列表", SysRoleExcelVO.class, data);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/sms/SysSmsChannelController.java
Patch:
@@ -44,7 +44,7 @@ public CommonResult<Boolean> updateSmsChannel(@Valid @RequestBody SysSmsChannelU
 
     @DeleteMapping("/delete")
     @ApiOperation("删除短信渠道")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:sms-channel:delete')")
     public CommonResult<Boolean> deleteSmsChannel(@RequestParam("id") Long id) {
         smsChannelService.deleteSmsChannel(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/sms/SysSmsTemplateController.java
Patch:
@@ -51,7 +51,7 @@ public CommonResult<Boolean> updateSmsTemplate(@Valid @RequestBody SysSmsTemplat
 
     @DeleteMapping("/delete")
     @ApiOperation("删除短信模板")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:sms-template:delete')")
     public CommonResult<Boolean> deleteSmsTemplate(@RequestParam("id") Long id) {
         smsTemplateService.deleteSmsTemplate(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/tenant/SysTenantController.java
Patch:
@@ -57,7 +57,7 @@ public CommonResult<Boolean> updateTenant(@Valid @RequestBody SysTenantUpdateReq
 
     @DeleteMapping("/delete")
     @ApiOperation("删除租户")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:tenant:delete')")
     public CommonResult<Boolean> deleteTenant(@RequestParam("id") Long id) {
         tenantService.deleteTenant(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/user/SysUserProfileController.java
Patch:
@@ -65,7 +65,7 @@ public CommonResult<SysUserProfileRespVO> profile() {
         SysUserDO user = userCoreService.getUser(getLoginUserId());
         SysUserProfileRespVO resp = SysUserConvert.INSTANCE.convert03(user);
         // 获得用户角色
-        List<SysRoleDO> userRoles = roleService.getRolesFromCache(permissionService.listUserRoleIs(user.getId()));
+        List<SysRoleDO> userRoles = roleService.getRolesFromCache(permissionService.getUserRoleIdListByUserId(user.getId()));
         resp.setRoles(SysUserConvert.INSTANCE.convertList(userRoles));
         // 获得部门信息
         if (user.getDeptId() != null) {

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/user/vo/user/SysUserExcelVO.java
Patch:
@@ -47,6 +47,6 @@ public class SysUserExcelVO {
     private String deptName;
 
     @ExcelProperty("部门负责人")
-    private String deptLeader;
+    private String deptLeaderNickname;
 
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/convert/auth/SysAuthConvert.java
Patch:
@@ -31,7 +31,7 @@ default LoginUser convert(SysUserDO bean) {
 
     default SysAuthPermissionInfoRespVO convert(SysUserDO user, List<SysRoleDO> roleList, List<SysMenuDO> menuList) {
         return SysAuthPermissionInfoRespVO.builder()
-            .user(SysAuthPermissionInfoRespVO.UserVO.builder().nickname(user.getNickname()).avatar(user.getAvatar()).build())
+            .user(SysAuthPermissionInfoRespVO.UserVO.builder().id(user.getId()).nickname(user.getNickname()).avatar(user.getAvatar()).build())
             .roles(CollectionUtils.convertSet(roleList, SysRoleDO::getCode))
             .permissions(CollectionUtils.convertSet(menuList, SysMenuDO::getPermission))
             .build();

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/convert/user/SysUserConvert.java
Patch:
@@ -45,4 +45,5 @@ public interface SysUserConvert {
 
     List<SysUserProfileRespVO.SocialUser> convertList03(List<SysSocialUserDO> list);
 
+    List<SysUserSimpleRespVO> convertList04(List<SysUserDO> list);
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -31,6 +31,7 @@ public interface SysErrorCodeConstants {
     ErrorCode ROLE_NAME_DUPLICATE = new ErrorCode(1002003001, "已经存在名为【{}】的角色");
     ErrorCode ROLE_CODE_DUPLICATE = new ErrorCode(1002003002, "已经存在编码为【{}】的角色");
     ErrorCode ROLE_CAN_NOT_UPDATE_SYSTEM_TYPE_ROLE = new ErrorCode(1002003004, "不能操作类型为系统内置的角色");
+    ErrorCode ROLE_IS_DISABLE = new ErrorCode(1002003004, "名字为【{}】的角色已被禁用");
 
     // ========== 用户模块 1002004000 ==========
     ErrorCode USER_USERNAME_EXISTS = new ErrorCode(1002004000, "用户账号已经存在");
@@ -39,6 +40,7 @@ public interface SysErrorCodeConstants {
     ErrorCode USER_NOT_EXISTS = new ErrorCode(1002004003, "用户不存在");
     ErrorCode USER_IMPORT_LIST_IS_EMPTY = new ErrorCode(1002004004, "导入用户数据不能为空！");
     ErrorCode USER_PASSWORD_FAILED = new ErrorCode(1002004005, "用户密码校验失败");
+    ErrorCode USER_IS_DISABLE = new ErrorCode(1002003004, "名字为【{}】的用户已被禁用");
 
     // ========== 部门模块 1002005000 ==========
     ErrorCode DEPT_NAME_DUPLICATE = new ErrorCode(1002004001, "已经存在该名字的部门");
@@ -65,7 +67,7 @@ public interface SysErrorCodeConstants {
 
     // ========== 字典数据 1002007000 ==========
     ErrorCode DICT_DATA_NOT_EXISTS = new ErrorCode(1002007001, "当前字典数据不存在");
-    ErrorCode DICT_DATA_NOT_ENABLE = new ErrorCode(1002007002, "字典数据不处于开启状态，不允许选择");
+    ErrorCode DICT_DATA_NOT_ENABLE = new ErrorCode(1002007002, "字典数据({})不处于开启状态，不允许选择");
     ErrorCode DICT_DATA_VALUE_DUPLICATE = new ErrorCode(1002007003, "已经存在该值的字典数据");
 
     // ========== 通知公告 1002008000 ==========

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/auth/impl/SysAuthServiceImpl.java
Patch:
@@ -325,7 +325,6 @@ private LoginUser buildLoginUser(SysUserDO user) {
         // 补全字段
         loginUser.setDeptId(user.getDeptId());
         loginUser.setRoleIds(this.getUserRoleIds(loginUser.getId()));
-        loginUser.setGroups(this.getUserPosts(user.getPostIds()));
         return loginUser;
     }
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/activiti/package-info.java
Patch:
@@ -1,2 +0,0 @@
-// TODO @芋艿：思考下 activiti、oa 的定位，边界，模块的拆分
-package cn.iocoder.yudao.adminserver.modules.activiti;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/file/InfFileController.java
Patch:
@@ -54,7 +54,7 @@ public CommonResult<String> uploadFile(@RequestParam("file") MultipartFile file,
 
     @DeleteMapping("/delete")
     @ApiOperation("删除文件")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = String.class)
     @PreAuthorize("@ss.hasPermission('infra:file:delete')")
     public CommonResult<Boolean> deleteFile(@RequestParam("id") String id) {
         fileCoreService.deleteFile(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/auth/vo/auth/SysAuthPermissionInfoRespVO.java
Patch:
@@ -32,6 +32,9 @@ public class SysAuthPermissionInfoRespVO {
     @Builder
     public static class UserVO {
 
+        @ApiModelProperty(value = "用户编号", required = true, example = "1024")
+        private Long id;
+
         @ApiModelProperty(value = "用户昵称", required = true, example = "芋道源码")
         private String nickname;
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/errorcode/SysErrorCodeController.java
Patch:
@@ -50,7 +50,7 @@ public CommonResult<Boolean> updateErrorCode(@Valid @RequestBody SysErrorCodeUpd
 
     @DeleteMapping("/delete")
     @ApiOperation("删除错误码")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:error-code:delete')")
     public CommonResult<Boolean> deleteErrorCode(@RequestParam("id") Long id) {
         errorCodeService.deleteErrorCode(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/permission/SysPermissionController.java
Patch:
@@ -59,7 +59,7 @@ public CommonResult<Boolean> assignRoleDataScope(
     @GetMapping("/list-user-roles")
 //    @RequiresPermissions("system:permission:assign-user-role")
     public CommonResult<Set<Long>> listAdminRoles(@RequestParam("userId") Long userId) {
-        return success(permissionService.listUserRoleIs(userId));
+        return success(permissionService.getUserRoleIdListByUserId(userId));
     }
 
     @ApiOperation("赋予用户角色")

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/permission/SysRoleController.java
Patch:
@@ -97,7 +97,7 @@ public CommonResult<List<SysRoleSimpleRespVO>> getSimpleRoles() {
     @OperateLog(type = EXPORT)
     @PreAuthorize("@ss.hasPermission('system:role:export')")
     public void export(HttpServletResponse response, @Validated SysRoleExportReqVO reqVO) throws IOException {
-        List<SysRoleDO> list = roleService.getRoles(reqVO);
+        List<SysRoleDO> list = roleService.getRoleList(reqVO);
         List<SysRoleExcelVO> data = SysRoleConvert.INSTANCE.convertList03(list);
         // 输出
         ExcelUtils.write(response, "角色数据.xls", "角色列表", SysRoleExcelVO.class, data);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/sms/SysSmsChannelController.java
Patch:
@@ -44,7 +44,7 @@ public CommonResult<Boolean> updateSmsChannel(@Valid @RequestBody SysSmsChannelU
 
     @DeleteMapping("/delete")
     @ApiOperation("删除短信渠道")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:sms-channel:delete')")
     public CommonResult<Boolean> deleteSmsChannel(@RequestParam("id") Long id) {
         smsChannelService.deleteSmsChannel(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/sms/SysSmsTemplateController.java
Patch:
@@ -51,7 +51,7 @@ public CommonResult<Boolean> updateSmsTemplate(@Valid @RequestBody SysSmsTemplat
 
     @DeleteMapping("/delete")
     @ApiOperation("删除短信模板")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:sms-template:delete')")
     public CommonResult<Boolean> deleteSmsTemplate(@RequestParam("id") Long id) {
         smsTemplateService.deleteSmsTemplate(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/tenant/SysTenantController.java
Patch:
@@ -57,7 +57,7 @@ public CommonResult<Boolean> updateTenant(@Valid @RequestBody SysTenantUpdateReq
 
     @DeleteMapping("/delete")
     @ApiOperation("删除租户")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:tenant:delete')")
     public CommonResult<Boolean> deleteTenant(@RequestParam("id") Long id) {
         tenantService.deleteTenant(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/user/SysUserProfileController.java
Patch:
@@ -65,7 +65,7 @@ public CommonResult<SysUserProfileRespVO> profile() {
         SysUserDO user = userCoreService.getUser(getLoginUserId());
         SysUserProfileRespVO resp = SysUserConvert.INSTANCE.convert03(user);
         // 获得用户角色
-        List<SysRoleDO> userRoles = roleService.getRolesFromCache(permissionService.listUserRoleIs(user.getId()));
+        List<SysRoleDO> userRoles = roleService.getRolesFromCache(permissionService.getUserRoleIdListByUserId(user.getId()));
         resp.setRoles(SysUserConvert.INSTANCE.convertList(userRoles));
         // 获得部门信息
         if (user.getDeptId() != null) {

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/user/vo/user/SysUserExcelVO.java
Patch:
@@ -47,6 +47,6 @@ public class SysUserExcelVO {
     private String deptName;
 
     @ExcelProperty("部门负责人")
-    private String deptLeader;
+    private String deptLeaderNickname;
 
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/convert/auth/SysAuthConvert.java
Patch:
@@ -31,7 +31,7 @@ default LoginUser convert(SysUserDO bean) {
 
     default SysAuthPermissionInfoRespVO convert(SysUserDO user, List<SysRoleDO> roleList, List<SysMenuDO> menuList) {
         return SysAuthPermissionInfoRespVO.builder()
-            .user(SysAuthPermissionInfoRespVO.UserVO.builder().nickname(user.getNickname()).avatar(user.getAvatar()).build())
+            .user(SysAuthPermissionInfoRespVO.UserVO.builder().id(user.getId()).nickname(user.getNickname()).avatar(user.getAvatar()).build())
             .roles(CollectionUtils.convertSet(roleList, SysRoleDO::getCode))
             .permissions(CollectionUtils.convertSet(menuList, SysMenuDO::getPermission))
             .build();

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/convert/user/SysUserConvert.java
Patch:
@@ -45,4 +45,5 @@ public interface SysUserConvert {
 
     List<SysUserProfileRespVO.SocialUser> convertList03(List<SysSocialUserDO> list);
 
+    List<SysUserSimpleRespVO> convertList04(List<SysUserDO> list);
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/enums/SysDictTypeConstants.java
Patch:
@@ -47,4 +47,7 @@ public interface SysDictTypeConstants {
      */
     String PAY_REFUND_ORDER_TYPE = "pay_refund_order_type";
 
+    String BPM_TASK_ASSIGN_RULE_TYPE = "bpm_task_assign_rule_type"; // 任务分配规则类型
+    String BPM_TASK_ASSIGN_SCRIPT = "bpm_task_assign_script"; // 任务分配自定义脚本
+
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -31,6 +31,7 @@ public interface SysErrorCodeConstants {
     ErrorCode ROLE_NAME_DUPLICATE = new ErrorCode(1002003001, "已经存在名为【{}】的角色");
     ErrorCode ROLE_CODE_DUPLICATE = new ErrorCode(1002003002, "已经存在编码为【{}】的角色");
     ErrorCode ROLE_CAN_NOT_UPDATE_SYSTEM_TYPE_ROLE = new ErrorCode(1002003004, "不能操作类型为系统内置的角色");
+    ErrorCode ROLE_IS_DISABLE = new ErrorCode(1002003004, "名字为【{}】的角色已被禁用");
 
     // ========== 用户模块 1002004000 ==========
     ErrorCode USER_USERNAME_EXISTS = new ErrorCode(1002004000, "用户账号已经存在");
@@ -39,6 +40,7 @@ public interface SysErrorCodeConstants {
     ErrorCode USER_NOT_EXISTS = new ErrorCode(1002004003, "用户不存在");
     ErrorCode USER_IMPORT_LIST_IS_EMPTY = new ErrorCode(1002004004, "导入用户数据不能为空！");
     ErrorCode USER_PASSWORD_FAILED = new ErrorCode(1002004005, "用户密码校验失败");
+    ErrorCode USER_IS_DISABLE = new ErrorCode(1002003004, "名字为【{}】的用户已被禁用");
 
     // ========== 部门模块 1002005000 ==========
     ErrorCode DEPT_NAME_DUPLICATE = new ErrorCode(1002004001, "已经存在该名字的部门");
@@ -65,7 +67,7 @@ public interface SysErrorCodeConstants {
 
     // ========== 字典数据 1002007000 ==========
     ErrorCode DICT_DATA_NOT_EXISTS = new ErrorCode(1002007001, "当前字典数据不存在");
-    ErrorCode DICT_DATA_NOT_ENABLE = new ErrorCode(1002007002, "字典数据不处于开启状态，不允许选择");
+    ErrorCode DICT_DATA_NOT_ENABLE = new ErrorCode(1002007002, "字典数据({})不处于开启状态，不允许选择");
     ErrorCode DICT_DATA_VALUE_DUPLICATE = new ErrorCode(1002007003, "已经存在该值的字典数据");
 
     // ========== 通知公告 1002008000 ==========

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/auth/impl/SysAuthServiceImpl.java
Patch:
@@ -325,7 +325,6 @@ private LoginUser buildLoginUser(SysUserDO user) {
         // 补全字段
         loginUser.setDeptId(user.getDeptId());
         loginUser.setRoleIds(this.getUserRoleIds(loginUser.getId()));
-        loginUser.setGroups(this.getUserPosts(user.getPostIds()));
         return loginUser;
     }
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/tool/service/codegen/impl/ToolCodegenServiceImpl.java
Patch:
@@ -258,6 +258,7 @@ public List<ToolSchemaTableDO> getSchemaTableList(String tableName, String table
         List<ToolSchemaTableDO> tables = schemaTableMapper.selectList(codegenProperties.getDbSchemas(), tableName, tableComment);
         // TODO 强制移除 Quartz 的表，未来做成可配置
         tables.removeIf(table -> table.getTableName().startsWith("QRTZ_"));
+        tables.removeIf(table -> table.getTableName().startsWith("ACT_"));
         return tables;
     }
 

File: yudao-admin-server/src/test/java/cn/iocoder/yudao/adminserver/modules/bpm/service/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.adminserver.modules.bpm.service;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/controller/definition/BpmFormController.java
Patch:
@@ -45,7 +45,7 @@ public CommonResult<Boolean> updateForm(@Valid @RequestBody BpmFormUpdateReqVO u
 
     @DeleteMapping("/delete")
     @ApiOperation("删除动态表单")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('bpm:form:delete')")
     public CommonResult<Boolean> deleteForm(@RequestParam("id") Long id) {
         formService.deleteForm(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/controller/definition/BpmUserGroupController.java
Patch:
@@ -53,7 +53,7 @@ public CommonResult<Boolean> updateUserGroup(@Valid @RequestBody BpmUserGroupUpd
 
     @DeleteMapping("/delete")
     @ApiOperation("删除用户组")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('bpm:user-group:delete')")
     public CommonResult<Boolean> deleteUserGroup(@RequestParam("id") Long id) {
         userGroupService.deleteUserGroup(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/controller/oa/OALeaveController.java
Patch:
@@ -61,7 +61,7 @@ public CommonResult<Boolean> updateLeave(@Valid @RequestBody OALeaveUpdateReqVO
 
     @DeleteMapping("/delete")
     @ApiOperation("删除请假申请")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('oa:leave:delete')")
     public CommonResult<Boolean> deleteLeave(@RequestParam("id") Long id) {
         leaveService.deleteLeave(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/file/InfFileController.java
Patch:
@@ -54,7 +54,7 @@ public CommonResult<String> uploadFile(@RequestParam("file") MultipartFile file,
 
     @DeleteMapping("/delete")
     @ApiOperation("删除文件")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = String.class)
     @PreAuthorize("@ss.hasPermission('infra:file:delete')")
     public CommonResult<Boolean> deleteFile(@RequestParam("id") String id) {
         fileCoreService.deleteFile(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/errorcode/SysErrorCodeController.java
Patch:
@@ -50,7 +50,7 @@ public CommonResult<Boolean> updateErrorCode(@Valid @RequestBody SysErrorCodeUpd
 
     @DeleteMapping("/delete")
     @ApiOperation("删除错误码")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:error-code:delete')")
     public CommonResult<Boolean> deleteErrorCode(@RequestParam("id") Long id) {
         errorCodeService.deleteErrorCode(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/sms/SysSmsChannelController.java
Patch:
@@ -44,7 +44,7 @@ public CommonResult<Boolean> updateSmsChannel(@Valid @RequestBody SysSmsChannelU
 
     @DeleteMapping("/delete")
     @ApiOperation("删除短信渠道")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:sms-channel:delete')")
     public CommonResult<Boolean> deleteSmsChannel(@RequestParam("id") Long id) {
         smsChannelService.deleteSmsChannel(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/sms/SysSmsTemplateController.java
Patch:
@@ -51,7 +51,7 @@ public CommonResult<Boolean> updateSmsTemplate(@Valid @RequestBody SysSmsTemplat
 
     @DeleteMapping("/delete")
     @ApiOperation("删除短信模板")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:sms-template:delete')")
     public CommonResult<Boolean> deleteSmsTemplate(@RequestParam("id") Long id) {
         smsTemplateService.deleteSmsTemplate(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/tenant/SysTenantController.java
Patch:
@@ -57,7 +57,7 @@ public CommonResult<Boolean> updateTenant(@Valid @RequestBody SysTenantUpdateReq
 
     @DeleteMapping("/delete")
     @ApiOperation("删除租户")
-    @ApiImplicitParam(name = "id", value = "编号", required = true)
+    @ApiImplicitParam(name = "id", value = "编号", required = true, dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('system:tenant:delete')")
     public CommonResult<Boolean> deleteTenant(@RequestParam("id") Long id) {
         tenantService.deleteTenant(id);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/pay/controller/merchant/PayMerchantController.java
Patch:
@@ -77,9 +77,9 @@ public CommonResult<PayMerchantRespVO> getMerchant(@RequestParam("id") Long id)
 
     @GetMapping("/list-name")
     @ApiOperation("根据商户名称获得支付商户信息列表")
-    @ApiImplicitParam(name = "name", value = "商户名称", required = true, example = "芋道", dataTypeClass = Long.class)
+    @ApiImplicitParam(name = "name", value = "商户名称", example = "芋道", dataTypeClass = Long.class)
     @PreAuthorize("@ss.hasPermission('pay:merchant:query')")
-    public CommonResult<List<PayMerchantRespVO>> getMerchantListByName(@RequestParam("name") String name) {
+    public CommonResult<List<PayMerchantRespVO>> getMerchantListByName(@RequestParam(required = false) String name) {
         List<PayMerchantDO> merchantListDO = merchantService.getMerchantListByName(name);
         return success(PayMerchantConvert.INSTANCE.convertList(merchantListDO));
     }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/pay/dal/mysql/merchant/PayMerchantMapper.java
Patch:
@@ -6,8 +6,6 @@
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.QueryWrapperX;
-import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
-import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;
@@ -49,6 +47,7 @@ default List<PayMerchantDO> selectList(PayMerchantExportReqVO reqVO) {
      * @return 商户集合
      */
     default List<PayMerchantDO> getMerchantListByName(String merchantName) {
-        return this.selectList(new LambdaQueryWrapper<PayMerchantDO>().like(PayMerchantDO::getName, merchantName));
+        return this.selectList(new QueryWrapperX<PayMerchantDO>()
+                .likeIfPresent("name", merchantName));
     }
 }

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/pay/dal/dataobject/order/PayOrderExtensionDO.java
Patch:
@@ -16,7 +16,7 @@
  *
  * @author 芋道源码
  */
-@TableName("pay_order_extension")
+@TableName(value = "pay_order_extension",autoResultMap = true)
 @Data
 @EqualsAndHashCode(callSuper = true)
 @ToString(callSuper = true)

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/pay/service/order/impl/PayOrderCoreServiceImpl.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.date.DateUtil;
 import cn.hutool.core.util.RandomUtil;
-import cn.hutool.core.util.StrUtil;
 import cn.iocoder.yudao.coreservice.modules.pay.convert.order.PayOrderCoreConvert;
 import cn.iocoder.yudao.coreservice.modules.pay.dal.dataobject.merchant.PayAppDO;
 import cn.iocoder.yudao.coreservice.modules.pay.dal.dataobject.merchant.PayChannelDO;
@@ -18,7 +17,6 @@
 import cn.iocoder.yudao.coreservice.modules.pay.service.notify.PayNotifyCoreService;
 import cn.iocoder.yudao.coreservice.modules.pay.service.notify.dto.PayNotifyTaskCreateReqDTO;
 import cn.iocoder.yudao.coreservice.modules.pay.service.order.PayOrderCoreService;
-
 import cn.iocoder.yudao.coreservice.modules.pay.service.order.dto.PayOrderCreateReqDTO;
 import cn.iocoder.yudao.coreservice.modules.pay.service.order.dto.PayOrderSubmitReqDTO;
 import cn.iocoder.yudao.coreservice.modules.pay.service.order.dto.PayOrderSubmitRespDTO;
@@ -98,6 +96,7 @@ public Long createPayOrder(PayOrderCreateReqDTO reqDTO) {
         // 订单相关字段
         order.setStatus(PayOrderStatusEnum.WAITING.getStatus());
         // 退款相关字段
+        // todo @芋艿 创建支付的订单的退款状态枚举是不是有问题，应该是 PayRefundTypeEnum 吧 您这填写的是 PayOrderNotifyStatusEnum 回调状态枚举
         order.setRefundStatus(PayOrderNotifyStatusEnum.NO.getStatus())
                 .setRefundTimes(0).setRefundAmount(0L);
         payOrderCoreMapper.insert(order);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/controller/workflow/ModelController.java
Patch:
@@ -43,8 +43,8 @@ public class ModelController {
 
     @GetMapping ("/page")
     @ApiOperation(value = "分页数据")
-    public PageResult<Model> pageList(ModelPageReqVo modelPageReqVo) {
-       return bpmModelService.pageList(modelPageReqVo);
+    public CommonResult<PageResult<Model>> pageList(ModelPageReqVo modelPageReqVo) {
+       return CommonResult.success(bpmModelService.pageList(modelPageReqVo));
     }
 
     @PostMapping("/create")

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/enums/BpmErrorCodeConstants.java
Patch:
@@ -28,5 +28,6 @@ public interface BpmErrorCodeConstants {
     ErrorCode BPMN_MODEL_EDITOR_SOURCE_NOT_EXISTS = new ErrorCode(1004001001, "模型数据为空，请先成功设计流程并保存");
     ErrorCode BPMN_MODEL_ERROR = new ErrorCode(1004001002, "工作流模型异常");
     ErrorCode BPMN_MODEL_PROCESS_NOT_EXISTS = new ErrorCode(1004001003, "流程数据为空");
+    ErrorCode BPMN_PROCESS_DEFINITION_NOT_EXISTS = new ErrorCode(1004001004, "流程定义不存在");
 
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/service/workflow/BpmTaskService.java
Patch:
@@ -51,6 +51,7 @@ public interface BpmTaskService {
     /**
      * 返回高亮的流转进程
      * @param processInstanceId 实例Id
+     * @return {@link FileResp} 返回文件
      */
     FileResp getHighlightImg(String processInstanceId);
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/tool/service/codegen/impl/ToolCodegenSQLParser.java
Patch:
@@ -16,6 +16,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 
 import static com.alibaba.druid.sql.SQLUtils.normalize;
 
@@ -97,7 +98,8 @@ private static void parseColumnDefinition(List<ToolSchemaColumnDO> columns, SQLC
         columns.add(ToolSchemaColumnDO.builder()
                 .columnName(normalize(definition.getColumnName()))
                 .columnType(definition.getDataType().toString())
-                .columnComment(normalize(definition.getComment().toString()))
+                .columnComment(Objects.isNull(definition.getComment()) ? ""
+                        : normalize(definition.getComment().toString()))
                 .nullable(!text.contains(" NOT NULL"))
                 .primaryKey(false)
                 .autoIncrement(text.contains("AUTO_INCREMENT"))

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/enums/oa/OAErrorCodeConstants.java
Patch:
@@ -16,4 +16,7 @@ public interface OAErrorCodeConstants {
     ErrorCode DEPART_BM_POST_NOT_EXISTS = new ErrorCode(1003001005, "部门的部门经理不存在");
     ErrorCode HR_POST_NOT_EXISTS = new ErrorCode(1003001006, "HR岗位未设置");
     ErrorCode DAY_LEAVE_ERROR = new ErrorCode(1003001007, "请假天数必须大于0");
+
+    ErrorCode PROCESS_INSTANCE_NOT_EXISTS = new ErrorCode(1003001008, "流程实例不存在");
+    ErrorCode HIGHLIGHT_IMG_ERROR = new ErrorCode(1003001009, "获取高亮流程图异常");
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/bpm/service/workflow/TaskService.java
Patch:
@@ -54,7 +54,6 @@ public interface TaskService {
     /**
      * 返回高亮的流转进程
      * @param processInstanceId 实例Id
-     * @param response 响应
      */
-    void getHighlightImg(String processInstanceId, HttpServletResponse response);
+    FileResp getHighlightImg(String processInstanceId);
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/activiti/controller/workflow/TaskController.java
Patch:
@@ -59,7 +59,7 @@ public CommonResult<List<TaskStepVO>> getHistorySteps(@RequestParam("id") String
     }
 
     /**
-     * 返回高亮的流转进程
+     * 返回高亮的流转图SVG
      * @param processInstanceId
      */
     @GetMapping("/process/highlight-img/{id}")

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/activiti/service/workflow/TaskService.java
Patch:
@@ -27,7 +27,8 @@ public interface TaskService {
 
     /**
      * 返回高亮的流转进程
-     * @param processInstanceId
+     * @param processInstanceId 实例Id
+     * @param response 响应
      */
     void getHighlightImg(String processInstanceId, HttpServletResponse response);
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/dict/SysDictTypeController.java
Patch:
@@ -60,15 +60,15 @@ public CommonResult<Boolean> deleteDictType(Long id) {
 
     @ApiOperation("/获得字典类型的分页列表")
     @GetMapping("/page")
-    @PreAuthorize("@ss.hasPermission('system:dict:quey')")
+    @PreAuthorize("@ss.hasPermission('system:dict:query')")
     public CommonResult<PageResult<SysDictTypeRespVO>> pageDictTypes(@Valid SysDictTypePageReqVO reqVO) {
         return success(SysDictTypeConvert.INSTANCE.convertPage(dictTypeService.getDictTypePage(reqVO)));
     }
 
     @ApiOperation("/查询字典类型详细")
     @ApiImplicitParam(name = "id", value = "编号", required = true, example = "1024", dataTypeClass = Long.class)
     @GetMapping(value = "/get")
-    @PreAuthorize("@ss.hasPermission('system:dict:quey')")
+    @PreAuthorize("@ss.hasPermission('system:dict:query')")
     public CommonResult<SysDictTypeRespVO> getDictType(@RequestParam("id") Long id) {
         return success(SysDictTypeConvert.INSTANCE.convert(dictTypeService.getDictType(id)));
     }
@@ -83,7 +83,7 @@ public CommonResult<List<SysDictTypeSimpleRespVO>> listSimpleDictTypes() {
 
     @ApiOperation("导出数据类型")
     @GetMapping("/export")
-    @PreAuthorize("@ss.hasPermission('system:dict:quey')")
+    @PreAuthorize("@ss.hasPermission('system:dict:query')")
     @OperateLog(type = EXPORT)
     public void export(HttpServletResponse response, @Valid SysDictTypeExportReqVO reqVO) throws IOException {
         List<SysDictTypeDO> list = dictTypeService.getDictTypeList(reqVO);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/notice/SysNoticeController.java
Patch:
@@ -56,15 +56,15 @@ public CommonResult<Boolean> deleteNotice(@RequestParam("id") Long id) {
 
     @GetMapping("/page")
     @ApiOperation("获取通知公告列表")
-    @PreAuthorize("@ss.hasPermission('system:notice:quey')")
+    @PreAuthorize("@ss.hasPermission('system:notice:query')")
     public CommonResult<PageResult<SysNoticeRespVO>> pageNotices(@Validated SysNoticePageReqVO reqVO) {
         return success(SysNoticeConvert.INSTANCE.convertPage(noticeService.pageNotices(reqVO)));
     }
 
     @GetMapping("/get")
     @ApiOperation("获得通知公告")
     @ApiImplicitParam(name = "id", value = "编号", required = true, example = "1024", dataTypeClass = Long.class)
-    @PreAuthorize("@ss.hasPermission('system:notice:quey')")
+    @PreAuthorize("@ss.hasPermission('system:notice:query')")
     public CommonResult<SysNoticeRespVO> getNotice(@RequestParam("id") Long id) {
         return success(SysNoticeConvert.INSTANCE.convert(noticeService.getNotice(id)));
     }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/convert/file/InfFileConvert.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.adminserver.modules.infra.convert.file;
 
+import cn.iocoder.yudao.coreservice.modules.infra.controller.file.vo.InfFileRespVO;
 import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
-import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFileRespVO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/enums/InfErrorCodeConstants.java
Patch:
@@ -27,7 +27,4 @@ public interface InfErrorCodeConstants {
     ErrorCode API_ERROR_LOG_NOT_FOUND = new ErrorCode(1001002000, "API 错误日志不存在");
     ErrorCode API_ERROR_LOG_PROCESSED = new ErrorCode(1001002001, "API 错误日志已处理");
 
-    // ========== 文件 1001003000 ==========
-    ErrorCode FILE_NOT_EXISTS = new ErrorCode(1001003000, "文件不存在");
-
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -1,7 +1,6 @@
 package cn.iocoder.yudao.adminserver.modules.system.enums;
 
 import cn.iocoder.yudao.framework.common.exception.ErrorCode;
-import javafx.beans.binding.MapExpression;
 
 /**
  * System 错误码枚举类

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/user/impl/SysUserServiceImpl.java
Patch:
@@ -4,7 +4,6 @@
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.util.IdUtil;
 import cn.hutool.core.util.StrUtil;
-import cn.iocoder.yudao.adminserver.modules.infra.service.file.InfFileService;
 import cn.iocoder.yudao.adminserver.modules.system.controller.user.vo.profile.SysUserProfileUpdatePasswordReqVO;
 import cn.iocoder.yudao.adminserver.modules.system.controller.user.vo.profile.SysUserProfileUpdateReqVO;
 import cn.iocoder.yudao.adminserver.modules.system.controller.user.vo.user.*;
@@ -16,6 +15,7 @@
 import cn.iocoder.yudao.adminserver.modules.system.service.dept.SysPostService;
 import cn.iocoder.yudao.adminserver.modules.system.service.permission.SysPermissionService;
 import cn.iocoder.yudao.adminserver.modules.system.service.user.SysUserService;
+import cn.iocoder.yudao.coreservice.modules.infra.service.file.InfFileCoreService;
 import cn.iocoder.yudao.coreservice.modules.system.dal.dataobject.user.SysUserDO;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
 import cn.iocoder.yudao.framework.common.exception.ServiceException;
@@ -59,7 +59,7 @@ public class SysUserServiceImpl implements SysUserService {
     @Resource
     private PasswordEncoder passwordEncoder;
     @Resource
-    private InfFileService fileService;
+    private InfFileCoreService fileService;
 
     @Override
     public Long createUser(SysUserCreateReqVO reqVO) {

File: yudao-admin-server/src/test/java/cn/iocoder/yudao/adminserver/modules/system/service/user/SysUserServiceImplTest.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.RandomUtil;
 import cn.iocoder.yudao.adminserver.BaseDbUnitTest;
-import cn.iocoder.yudao.adminserver.modules.infra.service.file.InfFileService;
 import cn.iocoder.yudao.adminserver.modules.system.controller.user.vo.profile.SysUserProfileUpdatePasswordReqVO;
 import cn.iocoder.yudao.adminserver.modules.system.controller.user.vo.profile.SysUserProfileUpdateReqVO;
 import cn.iocoder.yudao.adminserver.modules.system.controller.user.vo.user.*;
@@ -14,6 +13,7 @@
 import cn.iocoder.yudao.adminserver.modules.system.service.dept.SysPostService;
 import cn.iocoder.yudao.adminserver.modules.system.service.permission.SysPermissionService;
 import cn.iocoder.yudao.adminserver.modules.system.service.user.impl.SysUserServiceImpl;
+import cn.iocoder.yudao.coreservice.modules.infra.service.file.InfFileCoreService;
 import cn.iocoder.yudao.coreservice.modules.system.dal.dataobject.user.SysUserDO;
 import cn.iocoder.yudao.coreservice.modules.system.enums.common.SysSexEnum;
 import cn.iocoder.yudao.framework.common.enums.CommonStatusEnum;
@@ -69,7 +69,7 @@ public class SysUserServiceImplTest extends BaseDbUnitTest {
     @MockBean
     private PasswordEncoder passwordEncoder;
     @MockBean
-    private InfFileService fileService;
+    private InfFileCoreService fileService;
 
     @Test
     public void testCreatUser_success() {

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/controller/file/vo/InfFileRespVO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo;
+package cn.iocoder.yudao.coreservice.modules.infra.controller.file.vo;
 
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/dal/mysql/file/InfFileCoreMapper.java
Patch:
@@ -6,5 +6,7 @@
 
 @Mapper
 public interface InfFileCoreMapper extends BaseMapperX<InfFileDO> {
-
+    default Integer selectCountById(String id) {
+        return selectCount("id", id);
+    }
 }

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/framework/file/config/FileConfiguration.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.adminserver.modules.infra.framework.file.config;
+package cn.iocoder.yudao.coreservice.modules.infra.framework.file.config;
 
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Configuration;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/framework/file/config/FileProperties.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.adminserver.modules.infra.framework.file.config;
+package cn.iocoder.yudao.coreservice.modules.infra.framework.file.config;
 
 import lombok.Data;
 import org.springframework.boot.context.properties.ConfigurationProperties;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/framework/file/package-info.java
Patch:
@@ -13,4 +13,4 @@
  * 综合考虑，暂时使用方案 3 的方式，比较适合这样一个 all in one 的项目。
  * 随着文件的量级大了之后，还是推荐采用云服务。
  */
-package cn.iocoder.yudao.adminserver.modules.infra.framework.file;
+package cn.iocoder.yudao.coreservice.modules.infra.framework.file;

File: yudao-user-server/src/main/java/cn/iocoder/yudao/userserver/modules/member/enums/MbrErrorCodeConstants.java
Patch:
@@ -13,5 +13,5 @@ public interface MbrErrorCodeConstants {
     ErrorCode USER_NOT_EXISTS = new ErrorCode(1004001000, "用户不存在");
 
     // ==========文件相关 ===========
-    ErrorCode FILE_IS_EMPTY = new ErrorCode(1004002000, "文件不存在");
+    ErrorCode FILE_IS_EMPTY = new ErrorCode(1004002000, "文件为空");
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/auth/impl/SysUserSessionServiceImpl.java
Patch:
@@ -86,7 +86,8 @@ private void createTimeoutLogoutLog(Collection<SysUserSessionDO> timeoutSessionD
             SysLoginLogCreateReqDTO reqDTO = new SysLoginLogCreateReqDTO();
             reqDTO.setLogType(SysLoginLogTypeEnum.LOGOUT_TIMEOUT.getType());
             reqDTO.setTraceId(TracerUtils.getTraceId());
-            reqDTO.setUserType(UserTypeEnum.ADMIN.getValue());
+            reqDTO.setUserId(timeoutSessionDO.getUserId());
+            reqDTO.setUserType(timeoutSessionDO.getUserType());
             reqDTO.setUsername(timeoutSessionDO.getUsername());
             reqDTO.setUserAgent(timeoutSessionDO.getUserAgent());
             reqDTO.setUserIp(timeoutSessionDO.getUserIp());

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/config/InfConfigController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.adminserver.modules.infra.controller.config;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
 import cn.iocoder.yudao.framework.operatelog.core.annotations.OperateLog;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.*;
 import cn.iocoder.yudao.adminserver.modules.infra.convert.config.InfConfigConvert;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.adminserver.modules.infra.service.config.InfConfigService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiImplicitParam;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/file/InfFileController.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.adminserver.modules.infra.controller.file;
 
 import cn.hutool.core.io.IoUtil;
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFilePageReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFileRespVO;
 import cn.iocoder.yudao.adminserver.modules.infra.convert.file.InfFileConvert;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.adminserver.modules.infra.service.file.InfFileService;
 import cn.iocoder.yudao.framework.common.util.servlet.ServletUtils;
 import io.swagger.annotations.Api;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/logger/InfApiAccessLogController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.adminserver.modules.infra.controller.logger;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger.InfApiAccessLogDO;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
@@ -9,7 +10,6 @@
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogPageReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogRespVO;
 import cn.iocoder.yudao.adminserver.modules.infra.convert.logger.InfApiAccessLogConvert;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.logger.InfApiAccessLogDO;
 import cn.iocoder.yudao.adminserver.modules.infra.service.logger.InfApiAccessLogService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/controller/logger/InfApiErrorLogController.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.adminserver.modules.infra.controller.logger;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger.InfApiErrorLogDO;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.excel.core.util.ExcelUtils;
@@ -9,7 +10,6 @@
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apierrorlog.InfApiErrorLogPageReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apierrorlog.InfApiErrorLogRespVO;
 import cn.iocoder.yudao.adminserver.modules.infra.convert.logger.InfApiErrorLogConvert;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.logger.InfApiErrorLogDO;
 import cn.iocoder.yudao.adminserver.modules.infra.service.logger.InfApiErrorLogService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiImplicitParam;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/convert/config/InfConfigConvert.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.adminserver.modules.infra.convert.config;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigCreateReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigExcelVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigRespVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigUpdateReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.config.InfConfigDO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/convert/file/InfFileConvert.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.adminserver.modules.infra.convert.file;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFileRespVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file.InfFileDO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/convert/logger/InfApiAccessLogConvert.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.adminserver.modules.infra.convert.logger;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger.InfApiAccessLogDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.apilog.core.service.dto.ApiAccessLogCreateDTO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogExcelVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogRespVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.logger.InfApiAccessLogDO;
 import org.mapstruct.Mapper;
 import org.mapstruct.factory.Mappers;
 
@@ -20,8 +20,6 @@ public interface InfApiAccessLogConvert {
 
     InfApiAccessLogConvert INSTANCE = Mappers.getMapper(InfApiAccessLogConvert.class);
 
-    InfApiAccessLogDO convert(ApiAccessLogCreateDTO bean);
-
     InfApiAccessLogRespVO convert(InfApiAccessLogDO bean);
 
     List<InfApiAccessLogRespVO> convertList(List<InfApiAccessLogDO> list);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/dal/mysql/config/InfConfigMapper.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.config;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.QueryWrapperX;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigExportReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigPageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.config.InfConfigDO;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import org.apache.ibatis.annotations.Mapper;
 

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/dal/mysql/file/InfFileMapper.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.file;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.QueryWrapperX;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFilePageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file.InfFileDO;
 import org.apache.ibatis.annotations.Mapper;
 
 @Mapper

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/dal/mysql/logger/InfApiAccessLogMapper.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.logger;
 
+import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogExportReqVO;
+import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogPageReqVO;
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger.InfApiAccessLogDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.QueryWrapperX;
-import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogExportReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apiaccesslog.InfApiAccessLogPageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.logger.InfApiAccessLogDO;
 import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/dal/mysql/logger/InfApiErrorLogMapper.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.logger;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger.InfApiErrorLogDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.framework.mybatis.core.mapper.BaseMapperX;
 import cn.iocoder.yudao.framework.mybatis.core.query.QueryWrapperX;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apierrorlog.InfApiErrorLogExportReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.logger.vo.apierrorlog.InfApiErrorLogPageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.logger.InfApiErrorLogDO;
 import org.apache.ibatis.annotations.Mapper;
 
 import java.util.List;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/service/config/InfConfigService.java
Patch:
@@ -1,11 +1,11 @@
 package cn.iocoder.yudao.adminserver.modules.infra.service.config;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigCreateReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigExportReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigPageReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigUpdateReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.config.InfConfigDO;
 
 import javax.validation.Valid;
 import java.util.List;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/service/config/impl/InfConfigServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package cn.iocoder.yudao.adminserver.modules.infra.service.config.impl;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.framework.common.exception.util.ServiceExceptionUtil;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigCreateReqVO;
@@ -8,7 +9,6 @@
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigUpdateReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.convert.config.InfConfigConvert;
 import cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.config.InfConfigMapper;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.adminserver.modules.infra.enums.config.InfConfigTypeEnum;
 import cn.iocoder.yudao.adminserver.modules.infra.mq.producer.config.InfConfigProducer;
 import cn.iocoder.yudao.adminserver.modules.infra.service.config.InfConfigService;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/service/file/InfFileService.java
Patch:
@@ -1,8 +1,8 @@
 package cn.iocoder.yudao.adminserver.modules.infra.service.file;
 
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFilePageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file.InfFileDO;
 
 /**
  * 文件 Service 接口

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/infra/service/file/impl/InfFileServiceImpl.java
Patch:
@@ -1,10 +1,10 @@
 package cn.iocoder.yudao.adminserver.modules.infra.service.file.impl;
 
 import cn.hutool.core.io.FileTypeUtil;
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.framework.file.config.FileProperties;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFilePageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.file.InfFileMapper;
 import cn.iocoder.yudao.adminserver.modules.infra.service.file.InfFileService;
 import org.springframework.stereotype.Service;

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/controller/user/SysUserProfileController.java
Patch:
@@ -34,9 +34,6 @@
 import static cn.iocoder.yudao.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
 import static cn.iocoder.yudao.adminserver.modules.system.enums.SysErrorCodeConstants.FILE_IS_EMPTY;
 
-/**
- * @author niudehua
- */
 @Api(tags = "用户个人中心")
 @RestController
 @RequestMapping("/system/user/profile")

File: yudao-admin-server/src/test/java/cn/iocoder/yudao/adminserver/modules/infra/service/config/InfConfigServiceTest.java
Patch:
@@ -1,12 +1,12 @@
 package cn.iocoder.yudao.adminserver.modules.infra.service.config;
 
 import cn.iocoder.yudao.adminserver.BaseDbUnitTest;
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigCreateReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigExportReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigPageReqVO;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.config.vo.InfConfigUpdateReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.config.InfConfigDO;
 import cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.config.InfConfigMapper;
 import cn.iocoder.yudao.adminserver.modules.infra.enums.config.InfConfigTypeEnum;
 import cn.iocoder.yudao.adminserver.modules.infra.mq.producer.config.InfConfigProducer;

File: yudao-admin-server/src/test/java/cn/iocoder/yudao/adminserver/modules/infra/service/file/InfFileServiceTest.java
Patch:
@@ -2,10 +2,10 @@
 
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.iocoder.yudao.adminserver.BaseDbUnitTest;
+import cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.framework.common.pojo.PageResult;
 import cn.iocoder.yudao.adminserver.modules.infra.framework.file.config.FileProperties;
 import cn.iocoder.yudao.adminserver.modules.infra.controller.file.vo.InfFilePageReqVO;
-import cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file.InfFileDO;
 import cn.iocoder.yudao.adminserver.modules.infra.dal.mysql.file.InfFileMapper;
 import cn.iocoder.yudao.adminserver.modules.infra.service.file.impl.InfFileServiceImpl;
 import cn.iocoder.yudao.framework.common.util.object.ObjectUtils;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/convert/package-info.java
Patch:
@@ -3,4 +3,4 @@
  *
  * 目前使用 MapStruct 框架
  */
-package cn.iocoder.yudao.userserver.modules.infra.convert;
+package cn.iocoder.yudao.coreservice.modules.infra.convert;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/dal/dataobject/config/InfConfigDO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.userserver.modules.infra.dal.dataobject.config;
+package cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.config;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import com.baomidou.mybatisplus.annotation.TableField;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/dal/dataobject/file/InfFileDO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.file;
+package cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.file;
 
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
 import com.baomidou.mybatisplus.annotation.IdType;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/dal/dataobject/logger/InfApiAccessLogDO.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.adminserver.modules.infra.dal.dataobject.logger;
+package cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger;
 
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.common.pojo.CommonResult;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/dal/dataobject/logger/InfApiErrorLogDO.java
Patch:
@@ -1,8 +1,8 @@
-package cn.iocoder.yudao.userserver.modules.infra.dal.dataobject.logger;
+package cn.iocoder.yudao.coreservice.modules.infra.dal.dataobject.logger;
 
 import cn.iocoder.yudao.framework.common.enums.UserTypeEnum;
 import cn.iocoder.yudao.framework.mybatis.core.dataobject.BaseDO;
-import cn.iocoder.yudao.userserver.modules.infra.enums.logger.InfApiErrorLogProcessStatusEnum;
+import cn.iocoder.yudao.coreservice.modules.infra.enums.logger.InfApiErrorLogProcessStatusEnum;
 import com.baomidou.mybatisplus.annotation.TableName;
 import lombok.*;
 

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/enums/logger/InfApiErrorLogProcessStatusEnum.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.userserver.modules.infra.enums.logger;
+package cn.iocoder.yudao.coreservice.modules.infra.enums.logger;
 
 import lombok.AllArgsConstructor;
 import lombok.Getter;

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/service/logger/InfApiAccessLogCoreService.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.userserver.modules.infra.service.logger;
+package cn.iocoder.yudao.coreservice.modules.infra.service.logger;
 
 import cn.iocoder.yudao.framework.apilog.core.service.ApiAccessLogFrameworkService;
 
@@ -7,6 +7,6 @@
  *
  * @author 芋道源码
  */
-public interface InfApiAccessLogService extends ApiAccessLogFrameworkService {
+public interface InfApiAccessLogCoreService extends ApiAccessLogFrameworkService {
 
 }

File: yudao-core-service/src/main/java/cn/iocoder/yudao/coreservice/modules/infra/service/logger/InfApiErrorLogCoreService.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.yudao.userserver.modules.infra.service.logger;
+package cn.iocoder.yudao.coreservice.modules.infra.service.logger;
 
 import cn.iocoder.yudao.framework.apilog.core.service.ApiErrorLogFrameworkService;
 
@@ -7,6 +7,6 @@
  *
  * @author 芋道源码
  */
-public interface InfApiErrorLogService extends ApiErrorLogFrameworkService {
+public interface InfApiErrorLogCoreService extends ApiErrorLogFrameworkService {
 
 }

File: yudao-core-service/src/test/java/cn/iocoder/yudao/coreservice/modules/infra/service/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.coreservice.modules.infra.service;

File: yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/util/SecurityFrameworkUtils.java
Patch:
@@ -97,6 +97,7 @@ public static void setLoginUser(LoginUser loginUser, HttpServletRequest request)
         // 额外设置到 request 中，用于 ApiAccessLogFilter 可以获取到用户编号；
         // 原因是，Spring Security 的 Filter 在 ApiAccessLogFilter 后面，在它记录访问日志时，线上上下文已经没有用户编号等信息
         WebFrameworkUtils.setLoginUserId(request, loginUser.getId());
+        WebFrameworkUtils.setLoginUserType(request, loginUser.getUserType());
     }
 
 }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/filter/ApiAccessLogFilter.java
Patch:
@@ -81,7 +81,7 @@ private void buildApiAccessLogDTO(ApiAccessLogCreateDTO accessLog, HttpServletRe
                                       Map<String, String> queryString, String requestBody, Exception ex) {
         // 处理用户信息
         accessLog.setUserId(WebFrameworkUtils.getLoginUserId(request));
-        accessLog.setUserType(WebFrameworkUtils.getUserType(request));
+        accessLog.setUserType(WebFrameworkUtils.getLoginUserType(request));
         // 设置访问结果
         CommonResult<?> result = WebFrameworkUtils.getCommonResult(request);
         if (result != null) {

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiAccessLogFrameworkService.java
Patch:
@@ -16,8 +16,7 @@ public interface ApiAccessLogFrameworkService {
      * 创建 API 访问日志
      *
      * @param createDTO 创建信息
-     * @return 是否创建成功
      */
-    Future<Boolean> createApiAccessLogAsync(@Valid ApiAccessLogCreateDTO createDTO);
+    void createApiAccessLogAsync(@Valid ApiAccessLogCreateDTO createDTO);
 
 }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/apilog/core/service/ApiErrorLogFrameworkService.java
Patch:
@@ -16,8 +16,7 @@ public interface ApiErrorLogFrameworkService {
      * 创建 API 错误日志
      *
      * @param createDTO 创建信息
-     * @return 是否创建成功
      */
-    Future<Boolean> createApiErrorLogAsync(@Valid ApiErrorLogCreateDTO createDTO);
+    void createApiErrorLogAsync(@Valid ApiErrorLogCreateDTO createDTO);
 
 }

File: yudao-framework/yudao-spring-boot-starter-web/src/main/java/cn/iocoder/yudao/framework/web/core/handler/GlobalExceptionHandler.java
Patch:
@@ -245,7 +245,7 @@ private void createExceptionLog(HttpServletRequest req, Throwable e) {
     private void initExceptionLog(ApiErrorLogCreateDTO errorLog, HttpServletRequest request, Throwable e) {
         // 处理用户信息
         errorLog.setUserId(WebFrameworkUtils.getLoginUserId(request));
-        errorLog.setUserType(WebFrameworkUtils.getUserType(request));
+        errorLog.setUserType(WebFrameworkUtils.getLoginUserType(request));
         // 设置异常字段
         errorLog.setExceptionName(e.getClass().getName());
         errorLog.setExceptionMessage(ExceptionUtil.getMessage(e));

File: yudao-user-server/src/main/java/cn/iocoder/yudao/userserver/framework/security/SecurityConfiguration.java
Patch:
@@ -18,7 +18,7 @@ public class SecurityConfiguration {
     @Bean
     public Customizer<ExpressionUrlAuthorizationConfigurer<HttpSecurity>.ExpressionInterceptUrlRegistry> authorizeRequestsCustomizer() {
         return registry -> {
-            registry.antMatchers(api("/**")).anonymous(); // 默认 API 都是用户可访问
+            registry.antMatchers(api("/**")).permitAll(); // 默认 API 都是用户可访问
         };
     }
 

File: yudao-user-server/src/main/java/cn/iocoder/yudao/userserver/modules/infra/service/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.yudao.userserver.modules.infra.service;
\ No newline at end of file

File: yudao-user-server/src/main/java/cn/iocoder/yudao/userserver/modules/member/controller/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.yudao.userserver.modules.member.controller;

File: yudao-user-server/src/main/java/cn/iocoder/yudao/userserver/modules/system/convert/auth/SysAuthConvert.java
Patch:
@@ -8,9 +8,9 @@
 import org.mapstruct.factory.Mappers;
 
 @Mapper
-public interface MbrAuthConvert {
+public interface SysAuthConvert {
 
-    MbrAuthConvert INSTANCE = Mappers.getMapper(MbrAuthConvert.class);
+    SysAuthConvert INSTANCE = Mappers.getMapper(SysAuthConvert.class);
 
     @Mapping(source = "mobile", target = "username")
     LoginUser convert0(MbrUserDO bean);

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/user/SysUserService.java
Patch:
@@ -63,7 +63,7 @@ public interface SysUserService {
      * @param id         用户 id
      * @param avatarFile 头像文件
      */
-    void updateUserAvatar(Long id, InputStream avatarFile);
+    String updateUserAvatar(Long id, InputStream avatarFile);
 
     /**
      * 修改密码

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/user/impl/SysUserServiceImpl.java
Patch:
@@ -105,7 +105,7 @@ public void updateUserPassword(Long id, SysUserProfileUpdatePasswordReqVO reqVO)
     }
 
     @Override
-    public void updateUserAvatar(Long id, InputStream avatarFile) {
+    public String updateUserAvatar(Long id, InputStream avatarFile) {
         this.checkUserExists(id);
         // 存储文件
         String avatar = fileService.createFile(IdUtil.fastUUID(), IoUtil.readBytes(avatarFile));
@@ -114,6 +114,7 @@ public void updateUserAvatar(Long id, InputStream avatarFile) {
         sysUserDO.setId(id);
         sysUserDO.setAvatar(avatar);
         userMapper.updateById(sysUserDO);
+        return avatar;
     }
 
     @Override

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/enums/SysDictTypeConstants.java
Patch:
@@ -12,6 +12,7 @@ public interface SysDictTypeConstants {
 
     String USER_SEX = "sys_user_sex"; // 用户性别
     String OPERATE_TYPE = "sys_operate_type"; // 操作类型
+    String LOGIN_TYPE = "sys_login_type"; // 登陆日志的类型
     String LOGIN_RESULT = "sys_login_result"; // 登陆结果
     String CONFIG_TYPE = "sys_config_type"; // 参数配置类型
     String BOOLEAN_STRING = "sys_boolean_string"; // Boolean 是否类型
@@ -21,5 +22,4 @@ public interface SysDictTypeConstants {
     String SMS_SEND_STATUS = "sys_sms_send_status"; // 短信发送状态
     String SMS_RECEIVE_STATUS = "sys_sms_receive_status"; // 短信接收状态
 
-
 }

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/enums/logger/SysLoginLogTypeEnum.java
Patch:
@@ -12,6 +12,7 @@ public enum SysLoginLogTypeEnum {
 
     LOGIN_USERNAME(100), // 使用账号登录
     LOGIN_SOCIAL(101), // 使用社交登陆
+    LOGIN_MOCK(102), // 使用 Mock 登陆
 
     LOGOUT_SELF(200),  // 自己主动登出
     LOGOUT_TIMEOUT(201), // 超时登出

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/user/SysUserService.java
Patch:
@@ -74,7 +74,7 @@ public interface SysUserService {
     void updateUserPassword(Long id, String password);
 
     /**
-     * 修改密码
+     * 修改状态
      *
      * @param id     用户编号
      * @param status 状态

File: yudao-admin-server/src/main/java/cn/iocoder/yudao/adminserver/modules/system/service/user/SysUserService.java
Patch:
@@ -74,7 +74,7 @@ public interface SysUserService {
     void updateUserPassword(Long id, String password);
 
     /**
-     * 修改密码
+     * 修改状态
      *
      * @param id     用户编号
      * @param status 状态

File: yudao-framework/yudao-spring-boot-starter-biz-dict/src/main/java/cn/iocoder/yudao/framework/dict/core/util/DictFrameworkUtils.java
Patch:
@@ -22,7 +22,7 @@ public static DictDataRespDTO getDictDataFromCache(String type, String value) {
     }
 
     public static DictDataRespDTO parseDictDataFromCache(String type, String label) {
-        return service.getDictDataFromCache(type, label);
+        return service.parseDictDataFromCache(type, label);
     }
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dept/vo/post/SysPostExportReqVO.java
Patch:
@@ -8,6 +8,9 @@
 @Data
 public class SysPostExportReqVO {
 
+    @ApiModelProperty(value = "岗位编码", example = "yudao", notes = "模糊匹配")
+    private String code;
+
     @ApiModelProperty(value = "岗位名称", example = "芋道", notes = "模糊匹配")
     private String name;
 

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dept/vo/post/SysPostPageReqVO.java
Patch:
@@ -11,6 +11,9 @@
 @EqualsAndHashCode(callSuper = true)
 public class SysPostPageReqVO extends PageParam {
 
+    @ApiModelProperty(value = "岗位编码", example = "yudao", notes = "模糊匹配")
+    private String code;
+
     @ApiModelProperty(value = "岗位名称", example = "芋道", notes = "模糊匹配")
     private String name;
 

File: src/main/java/cn/iocoder/dashboard/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -91,5 +91,8 @@ public interface SysErrorCodeConstants {
     ErrorCode SMS_SEND_MOBILE_NOT_EXISTS = new ErrorCode(1002012000, "手机号不存在");
     ErrorCode SMS_SEND_MOBILE_TEMPLATE_PARAM_MISS = new ErrorCode(1002012001, "模板参数({})缺失");
 
+    // ========== 错误码模块 1002013000 ==========
+    ErrorCode ERROR_CODE_NOT_EXISTS = new ErrorCode(1002013000, "错误码不存在");
+    ErrorCode ERROR_CODE_DUPLICATE = new ErrorCode(1002013001, "已经存在编码为【{}】的错误码");
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/enums/dict/SysDictTypeEnum.java
Patch:
@@ -22,12 +22,12 @@ public enum SysDictTypeEnum {
     SYS_SMS_TEMPLATE_TYPE("sys_sms_template_type"), // 短信模板类型
     SYS_SMS_SEND_STATUS("sys_sms_send_status"), // 短信发送状态
     SYS_SMS_RECEIVE_STATUS("sys_sms_receive_status"), // 短信接收状态
+    SYS_ERROR_CODE_TYPE("inf_error_code_type"), // 错误码的类型枚举
 
     INF_REDIS_TIMEOUT_TYPE("inf_redis_timeout_type"),  // Redis 超时类型
     INF_JOB_STATUS("inf_job_status"), // 定时任务状态的枚举
     INF_JOB_LOG_STATUS("inf_job_log_status"), // 定时任务日志状态的枚举
     INF_API_ERROR_LOG_PROCESS_STATUS("inf_api_error_log_process_status"), // API 错误日志的处理状态的枚举
-
     ;
 
 

File: src/main/java/cn/iocoder/dashboard/modules/system/service/auth/impl/SysAuthServiceImpl.java
Patch:
@@ -85,7 +85,7 @@ public LoginUser mockLogin(Long userId) {
     @Override
     public String login(SysAuthLoginReqVO reqVO, String userIp, String userAgent) {
         // 判断验证码是否正确
-        this.verifyCaptcha(reqVO.getUsername(), reqVO.getUuid(), reqVO.getCode());
+//        this.verifyCaptcha(reqVO.getUsername(), reqVO.getUuid(), reqVO.getCode());
 
         // 使用账号密码，进行登陆。
         LoginUser loginUser = this.login0(reqVO.getUsername(), reqVO.getPassword());

File: src/main/java/cn/iocoder/dashboard/framework/errorcode/config/ErrorCodeConfiguration.java
Patch:
@@ -17,13 +17,13 @@
 @Configuration
 @EnableConfigurationProperties(ErrorCodeProperties.class)
 @EnableScheduling // 开启调度任务的功能，因为 ErrorCodeRemoteLoader 通过定时刷新错误码
-public class ErrorCodeAutoConfiguration {
+public class ErrorCodeConfiguration {
 
     @Bean
     public ErrorCodeAutoGenerator errorCodeAutoGenerator(@Value("${spring.application.name}") String applicationName,
                                                          ErrorCodeProperties errorCodeProperties,
                                                          ErrorCodeFrameworkService errorCodeFrameworkService) {
-        return new ErrorCodeAutoGeneratorImpl(applicationName, errorCodeProperties.getConstantsClass(),
+        return new ErrorCodeAutoGeneratorImpl(applicationName, errorCodeProperties.getConstantsClassList(),
                 errorCodeFrameworkService);
     }
 

File: src/main/java/cn/iocoder/dashboard/framework/errorcode/core/loader/ErrorCodeLoaderImpl.java
Patch:
@@ -14,7 +14,7 @@
 import java.util.List;
 
 /**
- * ErrorCodeLoader 的实现类，从 system 的数据库中，加载错误码。
+ * ErrorCodeLoader 的实现类，从 infra 的数据库中，加载错误码。
  *
  * 考虑到错误码会刷新，所以按照 {@link #REFRESH_ERROR_CODE_PERIOD} 频率，增量加载错误码。
  *

File: src/main/java/cn/iocoder/dashboard/common/exception/ServiceException.java
Patch:
@@ -30,7 +30,7 @@ public ServiceException() {
 
     public ServiceException(ErrorCode errorCode) {
         this.code = errorCode.getCode();
-        this.message = errorCode.getMessage();
+        this.message = errorCode.getMsg();
     }
 
     public ServiceException(Integer code, String message) {

File: src/main/java/cn/iocoder/dashboard/common/exception/enums/GlobalErrorCodeConstants.java
Patch:
@@ -32,6 +32,7 @@ public interface GlobalErrorCodeConstants {
 
     // ========== 自定义错误段 ==========
     ErrorCode REPEATED_REQUESTS = new ErrorCode(900, "重复请求，请稍后重试"); // 重复请求
+    ErrorCode DEMO_DENY = new ErrorCode(901, "演示模式，禁止写操作");
 
     ErrorCode UNKNOWN = new ErrorCode(999, "未知错误");
 

File: src/main/java/cn/iocoder/dashboard/common/exception/util/ServiceExceptionUtil.java
Patch:
@@ -47,12 +47,12 @@ public static void delete(Integer code, String message) {
     // ========== 和 ServiceException 的集成 ==========
 
     public static ServiceException exception(ErrorCode errorCode) {
-        String messagePattern = MESSAGES.getOrDefault(errorCode.getCode(), errorCode.getMessage());
+        String messagePattern = MESSAGES.getOrDefault(errorCode.getCode(), errorCode.getMsg());
         return exception0(errorCode.getCode(), messagePattern);
     }
 
     public static ServiceException exception(ErrorCode errorCode, Object... params) {
-        String messagePattern = MESSAGES.getOrDefault(errorCode.getCode(), errorCode.getMessage());
+        String messagePattern = MESSAGES.getOrDefault(errorCode.getCode(), errorCode.getMsg());
         return exception0(errorCode.getCode(), messagePattern, params);
     }
 

File: src/main/java/cn/iocoder/dashboard/framework/file/config/FileProperties.java
Patch:
@@ -1,6 +1,6 @@
 package cn.iocoder.dashboard.framework.file.config;
 
-import cn.iocoder.dashboard.modules.system.controller.common.SysFileController;
+import cn.iocoder.dashboard.modules.infra.controller.file.InfFileController;
 import lombok.Data;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.validation.annotation.Validated;
@@ -13,7 +13,7 @@
 public class FileProperties {
 
     /**
-     * 对应 {@link SysFileController#}
+     * 对应 {@link InfFileController#}
      */
     @NotNull(message = "基础文件路径不能为空")
     private String basePath;

File: src/main/java/cn/iocoder/dashboard/framework/logger/apilog/core/filter/ApiAccessLogFilter.java
Patch:
@@ -81,7 +81,7 @@ private void buildApiAccessLogDTO(ApiAccessLogCreateDTO accessLog, HttpServletRe
                                       Map<String, String> queryString, String requestBody, Exception ex) {
         // 处理用户信息
         accessLog.setUserId(WebFrameworkUtils.getLoginUserId(request));
-        accessLog.setUserType(WebFrameworkUtils.getUesrType(request));
+        accessLog.setUserType(WebFrameworkUtils.getUserType(request));
         // 设置访问结果
         CommonResult<?> result = WebFrameworkUtils.getCommonResult(request);
         if (result != null) {

File: src/main/java/cn/iocoder/dashboard/framework/logger/apilog/core/service/ApiAccessLogFrameworkService.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.dashboard.framework.logger.apilog.core.service.dto.ApiAccessLogCreateDTO;
 
 import javax.validation.Valid;
+import java.util.concurrent.Future;
 
 /**
  * API 访问日志 Framework Service 接口
@@ -15,7 +16,8 @@ public interface ApiAccessLogFrameworkService {
      * 创建 API 访问日志
      *
      * @param createDTO 创建信息
+     * @return 是否创建成功
      */
-    void createApiAccessLogAsync(@Valid ApiAccessLogCreateDTO createDTO);
+    Future<Boolean> createApiAccessLogAsync(@Valid ApiAccessLogCreateDTO createDTO);
 
 }

File: src/main/java/cn/iocoder/dashboard/framework/logger/apilog/core/service/ApiErrorLogFrameworkService.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.dashboard.framework.logger.apilog.core.service.dto.ApiErrorLogCreateDTO;
 
 import javax.validation.Valid;
+import java.util.concurrent.Future;
 
 /**
  * API 错误日志 Framework Service 接口
@@ -15,7 +16,8 @@ public interface ApiErrorLogFrameworkService {
      * 创建 API 错误日志
      *
      * @param createDTO 创建信息
+     * @return 是否创建成功
      */
-    void createApiErrorLogAsync(@Valid ApiErrorLogCreateDTO createDTO);
+    Future<Boolean> createApiErrorLogAsync(@Valid ApiErrorLogCreateDTO createDTO);
 
 }

File: src/main/java/cn/iocoder/dashboard/framework/mybatis/core/handler/DefaultDBFieldHandler.java
Patch:
@@ -57,7 +57,7 @@ public void updateFill(MetaObject metaObject) {
         }
         // 当前登录用户不为空，更新人为空，则当前登录用户为更新人
         if (Objects.nonNull(loginUser) && Objects.isNull(modifier)) {
-            setFieldValByName("updater", loginUser.getId(), metaObject);
+            setFieldValByName("updater", loginUser.getId().toString(), metaObject);
         }
     }
 }

File: src/main/java/cn/iocoder/dashboard/framework/redis/core/pubsub/ChannelMessage.java
Patch:
@@ -4,6 +4,8 @@
 
 /**
  * Redis Channel Message 接口
+ *
+ * @author 芋道源码
  */
 public interface ChannelMessage {
 
@@ -12,7 +14,7 @@ public interface ChannelMessage {
      *
      * @return Channel
      */
-    @JsonIgnore // 必须序列化
+    @JsonIgnore // 避免序列化
     String getChannel();
 
 }

File: src/main/java/cn/iocoder/dashboard/framework/web/core/enums/FilterOrderEnum.java
Patch:
@@ -9,6 +9,7 @@ public interface FilterOrderEnum {
 
     int CORS_FILTER = Integer.MIN_VALUE;
 
+
     int REQUEST_BODY_CACHE_FILTER = Integer.MIN_VALUE + 500;
 
     // OrderedRequestContextFilter 默认为 -105，用于国际化上下文等等
@@ -19,4 +20,6 @@ public interface FilterOrderEnum {
 
     // Spring Security Filter 默认为 -100，可见 SecurityProperties 配置属性类
 
+    int DEMO_FILTER = Integer.MAX_VALUE;
+
 }

File: src/main/java/cn/iocoder/dashboard/framework/web/core/util/WebFrameworkUtils.java
Patch:
@@ -31,7 +31,7 @@ public static Long getLoginUserId(HttpServletRequest request) {
         return (Long) request.getAttribute(REQUEST_ATTRIBUTE_LOGIN_USER_ID);
     }
 
-    public static Integer getUesrType(HttpServletRequest request) {
+    public static Integer getUserType(HttpServletRequest request) {
         return UserTypeEnum.ADMIN.getValue(); // TODO 芋艿：等后续优化
     }
 

File: src/main/java/cn/iocoder/dashboard/modules/infra/controller/job/InfJobLogController.java
Patch:
@@ -75,7 +75,7 @@ public void exportJobLogExcel(@Valid InfJobLogExportReqVO exportReqVO,
         List<InfJobLogDO> list = jobLogService.getJobLogList(exportReqVO);
         // 导出 Excel
         List<InfJobLogExcelVO> datas = InfJobLogConvert.INSTANCE.convertList02(list);
-        ExcelUtils.write(response, "定时任务.xls", "数据", InfJobLogExcelVO.class, datas);
+        ExcelUtils.write(response, "任务日志.xls", "数据", InfJobLogExcelVO.class, datas);
     }
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/infra/controller/logger/vo/apierrorlog/InfApiErrorLogExportReqVO.java
Patch:
@@ -14,7 +14,7 @@
 public class InfApiErrorLogExportReqVO {
 
     @ApiModelProperty(value = "用户编号", example = "666")
-    private Integer userId;
+    private Long userId;
 
     @ApiModelProperty(value = "用户类型", example = "1")
     private Integer userType;

File: src/main/java/cn/iocoder/dashboard/modules/infra/controller/logger/vo/apierrorlog/InfApiErrorLogPageReqVO.java
Patch:
@@ -19,7 +19,7 @@
 public class InfApiErrorLogPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "用户编号", example = "666")
-    private Integer userId;
+    private Long userId;
 
     @ApiModelProperty(value = "用户类型", example = "1")
     private Integer userType;

File: src/main/java/cn/iocoder/dashboard/modules/infra/controller/redis/RedisController.java
Patch:
@@ -30,9 +30,9 @@ public class RedisController {
     @Resource
     private StringRedisTemplate stringRedisTemplate;
 
+    @GetMapping("/get-monitor-info")
     @ApiOperation("获得 Redis 监控信息")
     @PreAuthorize("@ss.hasPermission('infra:redis:get-monitor-info')")
-    @GetMapping("/get-monitor-info")
     public CommonResult<InfRedisMonitorRespVO> getRedisMonitorInfo() {
         // 获得 Redis 统计信息
         Properties info = stringRedisTemplate.execute((RedisCallback<Properties>) RedisServerCommands::info);
@@ -44,9 +44,9 @@ public CommonResult<InfRedisMonitorRespVO> getRedisMonitorInfo() {
         return success(RedisConvert.INSTANCE.build(info, dbSize, commandStats));
     }
 
+    @GetMapping("/get-key-list")
     @ApiOperation("获得 Redis Key 列表")
     @PreAuthorize("@ss.hasPermission('infra:redis:get-key-list')")
-    @GetMapping("/get-key-list")
     public CommonResult<List<InfRedisKeyRespVO>> getKeyList() {
         List<RedisKeyDefine> keyDefines = RedisKeyRegistry.list();
         return success(RedisConvert.INSTANCE.convertList(keyDefines));

File: src/main/java/cn/iocoder/dashboard/modules/infra/dal/dataobject/logger/InfApiAccessLogDO.java
Patch:
@@ -37,7 +37,7 @@ public class InfApiAccessLogDO extends BaseDO {
     /**
      * 用户编号
      */
-    private Integer userId;
+    private Long userId;
     /**
      * 用户类型
      *

File: src/main/java/cn/iocoder/dashboard/modules/infra/dal/dataobject/logger/InfApiErrorLogDO.java
Patch:
@@ -30,7 +30,7 @@ public class InfApiErrorLogDO extends BaseDO {
     /**
      * 用户编号
      */
-    private Integer userId;
+    private Long userId;
     /**
      * 链路追踪编号
      *
@@ -148,6 +148,6 @@ public class InfApiErrorLogDO extends BaseDO {
      *
      * 关联 {@link SysUserDO#getId()}
      */
-    private Integer processUserId;
+    private Long processUserId;
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/infra/enums/InfErrorCodeConstants.java
Patch:
@@ -27,4 +27,7 @@ public interface InfErrorCodeConstants {
     ErrorCode API_ERROR_LOG_NOT_FOUND = new ErrorCode(1001002000, "API 错误日志不存在");
     ErrorCode API_ERROR_LOG_PROCESSED = new ErrorCode(1001002001, "API 错误日志已处理");
 
+    // ========== 文件 1001003000 ==========
+    ErrorCode FILE_NOT_EXISTS = new ErrorCode(1001003000, "文件不存在");
+
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/common/SysCaptchaController.java
Patch:
@@ -21,8 +21,8 @@ public class SysCaptchaController {
     @Resource
     private SysCaptchaService captchaService;
 
-    @ApiOperation("生成图片验证码")
     @GetMapping("/get-image")
+    @ApiOperation("生成图片验证码")
     public CommonResult<SysCaptchaImageRespVO> getCaptchaImage() {
         return success(captchaService.getCaptchaImage());
     }

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dept/vo/dept/SysDeptBaseVO.java
Patch:
@@ -25,7 +25,7 @@ public class SysDeptBaseVO {
     private Long parentId;
 
     @ApiModelProperty(value = "显示顺序不能为空", required = true, example = "1024")
-    @NotBlank(message = "显示顺序不能为空")
+    @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 
     @ApiModelProperty(value = "负责人", example = "芋道")

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dept/vo/post/SysPostBaseVO.java
Patch:
@@ -4,6 +4,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.NotNull;
 import javax.validation.constraints.Size;
 
 /**
@@ -24,7 +25,7 @@ public class SysPostBaseVO {
     private String code;
 
     @ApiModelProperty(value = "显示顺序不能为空", required = true, example = "1024")
-    @NotBlank(message = "显示顺序不能为空")
+    @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 
     @ApiModelProperty(value = "状态", required = true, example = "1", notes = "参见 SysCommonStatusEnum 枚举类")

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dict/vo/data/SysDictDataBaseVO.java
Patch:
@@ -15,7 +15,7 @@
 public class SysDictDataBaseVO {
 
     @ApiModelProperty(value = "显示顺序不能为空", required = true, example = "1024")
-    @NotBlank(message = "显示顺序不能为空")
+    @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 
     @ApiModelProperty(value = "字典标签", required = true, example = "芋道")

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dict/vo/data/SysDictDataSimpleRespVO.java
Patch:
@@ -4,9 +4,9 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
-@ApiModel("数据字典精简 VO")
+@ApiModel("数据字典精简 Response VO")
 @Data
-public class SysDictDataSimpleVO {
+public class SysDictDataSimpleRespVO {
 
     @ApiModelProperty(value = "字典类型", required = true, example = "gender")
     private String dictType;

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/permission/vo/menu/SysMenuBaseVO.java
Patch:
@@ -28,7 +28,7 @@ public class SysMenuBaseVO {
     private Integer type;
 
     @ApiModelProperty(value = "显示顺序不能为空", required = true, example = "1024")
-    @NotBlank(message = "显示顺序不能为空")
+    @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 
     @ApiModelProperty(value = "父菜单 ID", required = true, example = "1024")

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/permission/vo/role/SysRoleBaseVO.java
Patch:
@@ -4,6 +4,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.NotNull;
 import javax.validation.constraints.Size;
 
 /**
@@ -24,7 +25,7 @@ public class SysRoleBaseVO {
     private String code;
 
     @ApiModelProperty(value = "显示顺序不能为空", required = true, example = "1024")
-    @NotBlank(message = "显示顺序不能为空")
+    @NotNull(message = "显示顺序不能为空")
     private Integer sort;
 
     @ApiModelProperty(value = "角色类型", required = true, example = "1", notes = "见 SysRoleTypeEnum 枚举")

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/user/vo/user/SysUserBaseVO.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
+import org.hibernate.validator.constraints.Length;
 
 import javax.validation.constraints.Email;
 import javax.validation.constraints.NotBlank;
@@ -35,11 +36,11 @@ public class SysUserBaseVO {
 
     @ApiModelProperty(value = "用户邮箱", example = "yudao@iocoder.cn")
     @Email(message = "邮箱格式不正确")
-    @Size(max = 50, message = "邮箱长度不能超过50个字符")
+    @Size(max = 50, message = "邮箱长度不能超过 50 个字符")
     private String email;
 
     @ApiModelProperty(value = "手机号码", example = "15601691300")
-    @Size(max = 11, message = "手机号码长度不能超过11个字符")
+    @Length(min = 11, max = 11, message = "手机号长度必须 11 位")
     private String mobile;
 
     @ApiModelProperty(value = "用户性别", example = "1", notes = "参见 SysSexEnum 枚举类")
@@ -48,5 +49,4 @@ public class SysUserBaseVO {
     @ApiModelProperty(value = "用户头像", example = "http://www.iocoder.cn/xxx.png")
     private String avatar;
 
-
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/user/vo/user/SysUserPageItemRespVO.java
Patch:
@@ -1,6 +1,5 @@
 package cn.iocoder.dashboard.modules.system.controller.user.vo.user;
 
-import com.fasterxml.jackson.annotation.JsonIgnore;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
@@ -18,7 +17,6 @@ public class SysUserPageItemRespVO extends SysUserRespVO {
     /**
      * 所在部门
      */
-    @JsonIgnore
     private Dept dept;
 
     @ApiModel("部门")

File: src/main/java/cn/iocoder/dashboard/modules/system/convert/dict/SysDictDataConvert.java
Patch:
@@ -13,7 +13,7 @@ public interface SysDictDataConvert {
 
     SysDictDataConvert INSTANCE = Mappers.getMapper(SysDictDataConvert.class);
 
-    List<SysDictDataSimpleVO> convertList(List<SysDictDataDO> list);
+    List<SysDictDataSimpleRespVO> convertList(List<SysDictDataDO> list);
 
     SysDictDataRespVO convert(SysDictDataDO bean);
 

File: src/main/java/cn/iocoder/dashboard/modules/system/mq/producer/permission/SysRoleProducer.java
Patch:
@@ -9,6 +9,8 @@
 
 /**
  * Role 角色相关消息的 Producer
+ *
+ * @author 芋道源码
  */
 @Component
 public class SysRoleProducer {

File: src/main/java/cn/iocoder/dashboard/modules/system/service/auth/impl/SysAuthServiceImpl.java
Patch:
@@ -61,7 +61,7 @@ public class SysAuthServiceImpl implements SysAuthService {
     @Override
     public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
         // 获取 username 对应的 SysUserDO
-        SysUserDO user = userService.getUserByUserName(username);
+        SysUserDO user = userService.getUserByUsername(username);
         if (user == null) {
             throw new UsernameNotFoundException(username);
         }

File: src/main/java/cn/iocoder/dashboard/modules/system/service/auth/impl/SysUserSessionServiceImpl.java
Patch:
@@ -101,7 +101,7 @@ public PageResult<SysUserSessionDO> getUserSessionPage(SysUserSessionPageReqVO r
         // 处理基于用户昵称的查询
         Collection<Long> userIds = null;
         if (StrUtil.isNotEmpty(reqVO.getUsername())) {
-            userIds = convertSet(userService.listUsersByUsername(reqVO.getUsername()), SysUserDO::getId);
+            userIds = convertSet(userService.getUsersByUsername(reqVO.getUsername()), SysUserDO::getId);
             if (CollUtil.isEmpty(userIds)) {
                 return PageResult.empty();
             }

File: src/main/java/cn/iocoder/dashboard/modules/system/service/dict/impl/SysDictDataServiceImpl.java
Patch:
@@ -131,7 +131,7 @@ private List<SysDictDataDO> loadDictDataIfUpdate(Date maxUpdateTime) {
     }
 
     @Override
-    public List<SysDictDataDO> getDictDataList() {
+    public List<SysDictDataDO> getDictDatas() {
         List<SysDictDataDO> list = dictDataMapper.selectList();
         list.sort(COMPARATOR_TYPE_AND_SORT);
         return list;
@@ -143,7 +143,7 @@ public PageResult<SysDictDataDO> getDictDataPage(SysDictDataPageReqVO reqVO) {
     }
 
     @Override
-    public List<SysDictDataDO> getDictDataList(SysDictDataExportReqVO reqVO) {
+    public List<SysDictDataDO> getDictDatas(SysDictDataExportReqVO reqVO) {
         List<SysDictDataDO> list = dictDataMapper.selectList(reqVO);
         list.sort(COMPARATOR_TYPE_AND_SORT);
         return list;

File: src/main/java/cn/iocoder/dashboard/modules/system/service/logger/SysOperateLogService.java
Patch:
@@ -19,14 +19,14 @@ public interface SysOperateLogService extends OperateLogFrameworkService {
      * @param reqVO 分页条件
      * @return 操作日志分页列表
      */
-    PageResult<SysOperateLogDO> pageOperateLog(SysOperateLogPageReqVO reqVO);
+    PageResult<SysOperateLogDO> getOperateLogPage(SysOperateLogPageReqVO reqVO);
 
     /**
      * 获得操作日志列表
      *
      * @param reqVO 列表条件
      * @return 日志列表
      */
-    List<SysOperateLogDO> listOperateLogs(SysOperateLogExportReqVO reqVO);
+    List<SysOperateLogDO> getOperateLogs(SysOperateLogExportReqVO reqVO);
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/service/permission/SysPermissionService.java
Patch:
@@ -18,7 +18,7 @@
 public interface SysPermissionService extends SecurityPermissionFrameworkService {
 
     /**
-     * 初始化
+     * 初始化权限的本地缓存
      */
     void initLocalCache();
 
@@ -32,8 +32,8 @@ public interface SysPermissionService extends SecurityPermissionFrameworkService
      * @param menusStatuses 菜单状态数组
      * @return 菜单列表
      */
-    List<SysMenuDO> listRoleMenusFromCache(Collection<Long> roleIds, Collection<Integer> menuTypes,
-                                           Collection<Integer> menusStatuses);
+    List<SysMenuDO> getRoleMenusFromCache(Collection<Long> roleIds, Collection<Integer> menuTypes,
+                                          Collection<Integer> menusStatuses);
 
     /**
      * 获得用户拥有的角色编号集合

File: src/main/java/cn/iocoder/dashboard/modules/tool/dal/dataobject/codegen/ToolCodegenColumnDO.java
Patch:
@@ -9,6 +9,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
 
 /**
  * 代码生成 column 字段定义
@@ -17,7 +18,7 @@
  */
 @TableName(value = "tool_codegen_column", autoResultMap = true)
 @Data
-@Builder
+@Accessors(chain = true)
 @EqualsAndHashCode(callSuper = true)
 public class ToolCodegenColumnDO extends BaseDO {
 

File: src/main/java/cn/iocoder/dashboard/modules/tool/dal/dataobject/codegen/ToolCodegenTableDO.java
Patch:
@@ -7,6 +7,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
 
 /**
  * 代码生成 table 表定义
@@ -15,7 +16,7 @@
  */
 @TableName(value = "tool_codegen_table", autoResultMap = true)
 @Data
-@Builder
+@Accessors(chain = true)
 @EqualsAndHashCode(callSuper = true)
 public class ToolCodegenTableDO extends BaseDO {
 

File: src/main/java/cn/iocoder/dashboard/modules/tool/dal/mysql/codegen/ToolSchemaColumnMapper.java
Patch:
@@ -10,9 +10,10 @@
 @Mapper
 public interface ToolSchemaColumnMapper extends BaseMapperX<ToolSchemaColumnDO> {
 
-    default List<ToolSchemaColumnDO> selectListByTableName(String tableName) {
+    default List<ToolSchemaColumnDO> selectListByTableName(String tableSchema, String tableName) {
         return selectList(new QueryWrapper<ToolSchemaColumnDO>().eq("table_name", tableName)
-            .orderByAsc("ordinal_position"));
+                .eq("table_schema", tableSchema)
+                .orderByAsc("ordinal_position"));
     }
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/tool/service/codegen/impl/ToolCodegenBuilder.java
Patch:
@@ -99,6 +99,7 @@ public class ToolCodegenBuilder {
             .put(String.class.getSimpleName(), Sets.newHashSet("tinytext", "text", "mediumtext", "longtext", // 长文本
                     "char", "varchar", "nvarchar", "varchar2")) // 短文本
             .put(Date.class.getSimpleName(), Sets.newHashSet("datetime", "time", "date", "timestamp"))
+            .put("byte[]", Sets.newHashSet("blob"))
             .build();
 
     static {

File: src/test-integration/java/cn/iocoder/dashboard/framework/sms/core/client/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.dashboard.framework.sms.core.client;

File: src/test-integration/java/cn/iocoder/dashboard/modules/tool/dal/mysql/codegen/ToolInformationSchemaColumnMapperTest.java
Patch:
@@ -1,6 +1,6 @@
 package cn.iocoder.dashboard.modules.tool.dal.mysql.codegen;
 
-import cn.iocoder.dashboard.BaseSpringBootUnitTest;
+import cn.iocoder.dashboard.BaseDbUnitTest;
 import cn.iocoder.dashboard.modules.tool.dal.dataobject.codegen.ToolSchemaColumnDO;
 import org.junit.jupiter.api.Test;
 
@@ -9,15 +9,15 @@
 
 import static org.junit.jupiter.api.Assertions.assertTrue;
 
-public class ToolInformationSchemaColumnMapperTest extends BaseSpringBootUnitTest {
+public class ToolInformationSchemaColumnMapperTest extends BaseDbUnitTest {
 
     @Resource
     private ToolSchemaColumnMapper toolInformationSchemaColumnMapper;
 
     @Test
     public void testSelectListByTableName() {
         List<ToolSchemaColumnDO> columns = toolInformationSchemaColumnMapper
-                .selectListByTableName("inf_config");
+                .selectListByTableName("", "inf_config");
         assertTrue(columns.size() > 0);
     }
 

File: src/test/java/cn/iocoder/dashboard/BaseDbUnitTest.java
Patch:
@@ -5,6 +5,7 @@
 import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure;
 import com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration;
 import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
+import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration;
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.context.annotation.Import;
 import org.springframework.test.context.ActiveProfiles;
@@ -26,6 +27,7 @@ public class BaseDbUnitTest {
             // DB 配置类
             DataSourceConfiguration.class, // 自己的 DB 配置类
             DataSourceAutoConfiguration.class, // Spring DB 自动配置类
+            DataSourceTransactionManagerAutoConfiguration.class, // Spring 事务自动配置类
             DruidDataSourceAutoConfigure.class, // Druid 自动配置类
             // MyBatis 配置类
             MybatisConfiguration.class, // 自己的 MyBatis 配置类

File: src/test/java/cn/iocoder/dashboard/framework/package-info.java
Patch:
@@ -0,0 +1 @@
+package cn.iocoder.dashboard.framework;

File: src/main/java/cn/iocoder/dashboard/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -30,7 +30,7 @@ public interface SysErrorCodeConstants {
 
     // ========== 角色模块 1002003000 ==========
     ErrorCode ROLE_NOT_EXISTS = new ErrorCode(1002003000, "角色不存在");
-    ErrorCode ROLE_NAME_DUPLICATE = new ErrorCode(1002003001, "已经存在名为【{}}】的角色");
+    ErrorCode ROLE_NAME_DUPLICATE = new ErrorCode(1002003001, "已经存在名为【{}】的角色");
     ErrorCode ROLE_CODE_DUPLICATE = new ErrorCode(1002003002, "已经存在编码为【{}】的角色");
     ErrorCode ROLE_CAN_NOT_UPDATE_SYSTEM_TYPE_ROLE = new ErrorCode(1002003004, "不能操作类型为系统内置的角色");
 

File: src/main/java/cn/iocoder/dashboard/framework/redis/core/stream/AbstractStreamMessageListener.java
Patch:
@@ -46,6 +46,9 @@ protected AbstractStreamMessageListener() {
     @Override
     public void onMessage(ObjectRecord<String, String> message) {
         System.out.println(message);
+        if (true) {
+//            throw new IllegalStateException("测试下");
+        }
     }
 
     /**

File: src/main/java/cn/iocoder/dashboard/framework/redis/core/util/RedisMessageUtils.java
Patch:
@@ -31,7 +31,7 @@ public static <T extends ChannelMessage> void sendChannelMessage(RedisTemplate<?
      * @param message 消息
      * @return 消息记录的编号对象
      */
-    public static <T extends StreamMessage> RecordId sendStreamMessage(RedisTemplate<String, String> redisTemplate, T message) {
+    public static <T extends StreamMessage> RecordId sendStreamMessage(RedisTemplate<String, ?> redisTemplate, T message) {
         return redisTemplate.opsForStream().add(StreamRecords.newRecord()
                 .ofObject(JsonUtils.toJsonString(message)) // 设置内容
                 .withStreamKey(message.getStreamKey())); // 设置 stream key

File: src/main/java/cn/iocoder/dashboard/framework/logger/apilog/core/service/ApiAccessLogFrameworkService.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.dashboard.framework.logger.apilog.core.service.dto.ApiAccessLogCreateDTO;
 
 import javax.validation.Valid;
+import java.util.concurrent.Future;
 
 /**
  * API 访问日志 Framework Service 接口
@@ -15,7 +16,8 @@ public interface ApiAccessLogFrameworkService {
      * 创建 API 访问日志
      *
      * @param createDTO 创建信息
+     * @return 是否创建成功
      */
-    void createApiAccessLogAsync(@Valid ApiAccessLogCreateDTO createDTO);
+    Future<Boolean> createApiAccessLogAsync(@Valid ApiAccessLogCreateDTO createDTO);
 
 }

File: src/main/java/cn/iocoder/dashboard/framework/logger/apilog/core/service/ApiErrorLogFrameworkService.java
Patch:
@@ -3,6 +3,7 @@
 import cn.iocoder.dashboard.framework.logger.apilog.core.service.dto.ApiErrorLogCreateDTO;
 
 import javax.validation.Valid;
+import java.util.concurrent.Future;
 
 /**
  * API 错误日志 Framework Service 接口
@@ -15,7 +16,8 @@ public interface ApiErrorLogFrameworkService {
      * 创建 API 错误日志
      *
      * @param createDTO 创建信息
+     * @return 是否创建成功
      */
-    void createApiErrorLogAsync(@Valid ApiErrorLogCreateDTO createDTO);
+    Future<Boolean> createApiErrorLogAsync(@Valid ApiErrorLogCreateDTO createDTO);
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/infra/controller/logger/vo/apierrorlog/InfApiErrorLogExportReqVO.java
Patch:
@@ -14,7 +14,7 @@
 public class InfApiErrorLogExportReqVO {
 
     @ApiModelProperty(value = "用户编号", example = "666")
-    private Integer userId;
+    private Long userId;
 
     @ApiModelProperty(value = "用户类型", example = "1")
     private Integer userType;

File: src/main/java/cn/iocoder/dashboard/modules/infra/controller/logger/vo/apierrorlog/InfApiErrorLogPageReqVO.java
Patch:
@@ -19,7 +19,7 @@
 public class InfApiErrorLogPageReqVO extends PageParam {
 
     @ApiModelProperty(value = "用户编号", example = "666")
-    private Integer userId;
+    private Long userId;
 
     @ApiModelProperty(value = "用户类型", example = "1")
     private Integer userType;

File: src/main/java/cn/iocoder/dashboard/modules/infra/dal/dataobject/logger/InfApiAccessLogDO.java
Patch:
@@ -37,7 +37,7 @@ public class InfApiAccessLogDO extends BaseDO {
     /**
      * 用户编号
      */
-    private Integer userId;
+    private Long userId;
     /**
      * 用户类型
      *

File: src/main/java/cn/iocoder/dashboard/modules/infra/dal/dataobject/logger/InfApiErrorLogDO.java
Patch:
@@ -30,7 +30,7 @@ public class InfApiErrorLogDO extends BaseDO {
     /**
      * 用户编号
      */
-    private Integer userId;
+    private Long userId;
     /**
      * 链路追踪编号
      *
@@ -148,6 +148,6 @@ public class InfApiErrorLogDO extends BaseDO {
      *
      * 关联 {@link SysUserDO#getId()}
      */
-    private Integer processUserId;
+    private Long processUserId;
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/tool/dal/dataobject/codegen/ToolCodegenColumnDO.java
Patch:
@@ -9,6 +9,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
 
 /**
  * 代码生成 column 字段定义
@@ -17,7 +18,7 @@
  */
 @TableName(value = "tool_codegen_column", autoResultMap = true)
 @Data
-@Builder
+@Accessors(chain = true)
 @EqualsAndHashCode(callSuper = true)
 public class ToolCodegenColumnDO extends BaseDO {
 

File: src/main/java/cn/iocoder/dashboard/modules/tool/dal/dataobject/codegen/ToolCodegenTableDO.java
Patch:
@@ -7,6 +7,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.EqualsAndHashCode;
+import lombok.experimental.Accessors;
 
 /**
  * 代码生成 table 表定义
@@ -15,7 +16,7 @@
  */
 @TableName(value = "tool_codegen_table", autoResultMap = true)
 @Data
-@Builder
+@Accessors(chain = true)
 @EqualsAndHashCode(callSuper = true)
 public class ToolCodegenTableDO extends BaseDO {
 

File: src/main/java/cn/iocoder/dashboard/framework/security/core/util/SecurityFrameworkUtils.java
Patch:
@@ -56,7 +56,7 @@ public static LoginUser getLoginUser() {
         if (authentication == null) {
             return null;
         }
-        return (LoginUser) authentication.getPrincipal();
+        return authentication.getPrincipal() instanceof LoginUser ? (LoginUser) authentication.getPrincipal() : null;
     }
 
     /**

File: src/main/java/cn/iocoder/dashboard/framework/mybatis/core/handle/DefaultDBFieldHandler.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.dashboard.framework.mybatis.config;
+package cn.iocoder.dashboard.framework.mybatis.core.handle;
 
 import cn.iocoder.dashboard.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.dashboard.framework.security.core.LoginUser;
@@ -18,7 +18,7 @@
  * @author hexiaowu
  */
 @Component
-public class DefaultParamHandler implements MetaObjectHandler {
+public class DefaultDBFieldHandler implements MetaObjectHandler {
 
     @Override
     public void insertFill(MetaObject metaObject) {

File: src/main/java/cn/iocoder/dashboard/framework/mybatis/core/handle/DefaultDBFieldHandler.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.dashboard.framework.mybatis.config;
+package cn.iocoder.dashboard.framework.mybatis.core.handle;
 
 import cn.iocoder.dashboard.framework.mybatis.core.dataobject.BaseDO;
 import cn.iocoder.dashboard.framework.security.core.LoginUser;
@@ -18,7 +18,7 @@
  * @author hexiaowu
  */
 @Component
-public class DefaultParamHandler implements MetaObjectHandler {
+public class DefaultDBFieldHandler implements MetaObjectHandler {
 
     @Override
     public void insertFill(MetaObject metaObject) {

File: src/main/java/cn/iocoder/dashboard/modules/system/service/dict/impl/SysDictTypeServiceImpl.java
Patch:
@@ -99,8 +99,8 @@ private void checkCreateOrUpdate(Long id, String name, String type) {
     }
 
     @VisibleForTesting
-    public void checkDictTypeNameUnique(Long id, String type) {
-        SysDictTypeDO dictType = dictTypeMapper.selectByName(type);
+    public void checkDictTypeNameUnique(Long id, String name) {
+        SysDictTypeDO dictType = dictTypeMapper.selectByName(name);
         if (dictType == null) {
             return;
         }

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dict/SysDictTypeController.java
Patch:
@@ -32,7 +32,7 @@ public class SysDictTypeController {
     @GetMapping("/page")
 //    @PreAuthorize("@ss.hasPermi('system:dict:list')")
     public CommonResult<PageResult<SysDictTypeRespVO>> pageDictTypes(@Validated SysDictTypePageReqVO reqVO) {
-        return success(SysDictTypeConvert.INSTANCE.convertPage(dictTypeService.pageDictTypes(reqVO)));
+        return success(SysDictTypeConvert.INSTANCE.convertPage(dictTypeService.getDictTypePage(reqVO)));
     }
 
     @ApiOperation("/查询字典类型详细")
@@ -75,7 +75,7 @@ public CommonResult<Boolean> deleteDictType(Long id) {
     @ApiOperation(value = "获得全部字典类型列表", notes = "包括开启 + 禁用的字典类型，主要用于前端的下拉选项")
     // 无需添加权限认证，因为前端全局都需要
     public CommonResult<List<SysDictTypeSimpleRespVO>> listSimpleDictTypes() {
-        List<SysDictTypeDO> list = dictTypeService.listDictTypes();
+        List<SysDictTypeDO> list = dictTypeService.getDictTypeList();
         return success(SysDictTypeConvert.INSTANCE.convertList(list));
     }
 
@@ -84,7 +84,7 @@ public CommonResult<List<SysDictTypeSimpleRespVO>> listSimpleDictTypes() {
 //    @Log(title = "字典类型", businessType = BusinessType.EXPORT)
 //    @PreAuthorize("@ss.hasPermi('system:dict:export')")
     public void export(HttpServletResponse response, @Validated SysDictTypeExportReqVO reqVO) throws IOException {
-        List<SysDictTypeDO> list = dictTypeService.listDictTypes(reqVO);
+        List<SysDictTypeDO> list = dictTypeService.getDictTypeList(reqVO);
         List<SysDictTypeExcelVO> excelTypeList = SysDictTypeConvert.INSTANCE.convertList02(list);
         // 输出
         ExcelUtils.write(response, "字典类型.xls", "类型列表",

File: src/main/java/cn/iocoder/dashboard/modules/system/dal/dataobject/dict/SysDictTypeDO.java
Patch:
@@ -33,7 +33,7 @@ public class SysDictTypeDO extends BaseDO {
     /**
      * 字典类型
      */
-    @TableField("dict_type")
+    @TableField("`type`")
     private String type;
     /**
      * 状态

File: src/main/java/cn/iocoder/dashboard/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -58,7 +58,7 @@ public interface SysErrorCodeConstants {
     ErrorCode POST_CODE_DUPLICATE = new ErrorCode(1002005001, "已经存在该标识的岗位");
 
     // ========== 字典类型 1002006000 ==========
-    ErrorCode DICT_TYPE_NOT_FOUND = new ErrorCode(1002006001, "当前字典类型不存在");
+    ErrorCode DICT_TYPE_NOT_EXISTS = new ErrorCode(1002006001, "当前字典类型不存在");
     ErrorCode DICT_TYPE_NOT_ENABLE = new ErrorCode(1002006002, "字典类型不处于开启状态，不允许选择");
     ErrorCode DICT_TYPE_NAME_DUPLICATE = new ErrorCode(1002006003, "已经存在该名字的字典类型");
     ErrorCode DICT_TYPE_TYPE_DUPLICATE = new ErrorCode(1002006004, "已经存在该类型的字典类型");

File: src/main/java/cn/iocoder/dashboard/modules/system/service/dict/SysDictTypeService.java
Patch:
@@ -22,15 +22,15 @@ public interface SysDictTypeService {
      * @param reqVO 分页请求
      * @return 字典类型分页列表
      */
-    PageResult<SysDictTypeDO> pageDictTypes(SysDictTypePageReqVO reqVO);
+    PageResult<SysDictTypeDO> getDictTypePage(SysDictTypePageReqVO reqVO);
 
     /**
      * 获得字典类型列表
      *
      * @param reqVO 列表请求
      * @return 字典类型列表
      */
-    List<SysDictTypeDO> listDictTypes(SysDictTypeExportReqVO reqVO);
+    List<SysDictTypeDO> getDictTypeList(SysDictTypeExportReqVO reqVO);
 
     /**
      * 获得字典类型详情
@@ -75,6 +75,6 @@ public interface SysDictTypeService {
      *
      * @return 字典类型列表
      */
-    List<SysDictTypeDO> listDictTypes();
+    List<SysDictTypeDO> getDictTypeList();
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/service/dict/impl/SysDictDataServiceImpl.java
Patch:
@@ -227,7 +227,7 @@ private void checkDictDataExists(Long id) {
     private void checkDictTypeValid(String type) {
         SysDictTypeDO dictType = dictTypeService.getDictType(type);
         if (dictType == null) {
-            throw ServiceExceptionUtil.exception(DICT_TYPE_NOT_FOUND);
+            throw ServiceExceptionUtil.exception(DICT_TYPE_NOT_EXISTS);
         }
         if (!CommonStatusEnum.ENABLE.getStatus().equals(dictType.getStatus())) {
             throw ServiceExceptionUtil.exception(DICT_TYPE_NOT_ENABLE);

File: src/test/java/cn/iocoder/dashboard/modules/system/service/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.dashboard.modules.system.service;

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/dict/SysDictTypeController.java
Patch:
@@ -32,7 +32,7 @@ public class SysDictTypeController {
     @GetMapping("/page")
 //    @PreAuthorize("@ss.hasPermi('system:dict:list')")
     public CommonResult<PageResult<SysDictTypeRespVO>> pageDictTypes(@Validated SysDictTypePageReqVO reqVO) {
-        return success(SysDictTypeConvert.INSTANCE.convertPage(dictTypeService.pageDictTypes(reqVO)));
+        return success(SysDictTypeConvert.INSTANCE.convertPage(dictTypeService.getDictTypePage(reqVO)));
     }
 
     @ApiOperation("/查询字典类型详细")
@@ -75,7 +75,7 @@ public CommonResult<Boolean> deleteDictType(Long id) {
     @ApiOperation(value = "获得全部字典类型列表", notes = "包括开启 + 禁用的字典类型，主要用于前端的下拉选项")
     // 无需添加权限认证，因为前端全局都需要
     public CommonResult<List<SysDictTypeSimpleRespVO>> listSimpleDictTypes() {
-        List<SysDictTypeDO> list = dictTypeService.listDictTypes();
+        List<SysDictTypeDO> list = dictTypeService.getDictTypeList();
         return success(SysDictTypeConvert.INSTANCE.convertList(list));
     }
 
@@ -84,7 +84,7 @@ public CommonResult<List<SysDictTypeSimpleRespVO>> listSimpleDictTypes() {
 //    @Log(title = "字典类型", businessType = BusinessType.EXPORT)
 //    @PreAuthorize("@ss.hasPermi('system:dict:export')")
     public void export(HttpServletResponse response, @Validated SysDictTypeExportReqVO reqVO) throws IOException {
-        List<SysDictTypeDO> list = dictTypeService.listDictTypes(reqVO);
+        List<SysDictTypeDO> list = dictTypeService.getDictTypeList(reqVO);
         List<SysDictTypeExcelVO> excelTypeList = SysDictTypeConvert.INSTANCE.convertList02(list);
         // 输出
         ExcelUtils.write(response, "字典类型.xls", "类型列表",

File: src/main/java/cn/iocoder/dashboard/modules/system/dal/dataobject/dict/SysDictTypeDO.java
Patch:
@@ -33,7 +33,7 @@ public class SysDictTypeDO extends BaseDO {
     /**
      * 字典类型
      */
-    @TableField("dict_type")
+    @TableField("`type`")
     private String type;
     /**
      * 状态

File: src/main/java/cn/iocoder/dashboard/modules/system/enums/SysErrorCodeConstants.java
Patch:
@@ -58,7 +58,7 @@ public interface SysErrorCodeConstants {
     ErrorCode POST_CODE_DUPLICATE = new ErrorCode(1002005001, "已经存在该标识的岗位");
 
     // ========== 字典类型 1002006000 ==========
-    ErrorCode DICT_TYPE_NOT_FOUND = new ErrorCode(1002006001, "当前字典类型不存在");
+    ErrorCode DICT_TYPE_NOT_EXISTS = new ErrorCode(1002006001, "当前字典类型不存在");
     ErrorCode DICT_TYPE_NOT_ENABLE = new ErrorCode(1002006002, "字典类型不处于开启状态，不允许选择");
     ErrorCode DICT_TYPE_NAME_DUPLICATE = new ErrorCode(1002006003, "已经存在该名字的字典类型");
     ErrorCode DICT_TYPE_TYPE_DUPLICATE = new ErrorCode(1002006004, "已经存在该类型的字典类型");

File: src/main/java/cn/iocoder/dashboard/modules/system/service/dict/SysDictTypeService.java
Patch:
@@ -22,15 +22,15 @@ public interface SysDictTypeService {
      * @param reqVO 分页请求
      * @return 字典类型分页列表
      */
-    PageResult<SysDictTypeDO> pageDictTypes(SysDictTypePageReqVO reqVO);
+    PageResult<SysDictTypeDO> getDictTypePage(SysDictTypePageReqVO reqVO);
 
     /**
      * 获得字典类型列表
      *
      * @param reqVO 列表请求
      * @return 字典类型列表
      */
-    List<SysDictTypeDO> listDictTypes(SysDictTypeExportReqVO reqVO);
+    List<SysDictTypeDO> getDictTypeList(SysDictTypeExportReqVO reqVO);
 
     /**
      * 获得字典类型详情
@@ -75,6 +75,6 @@ public interface SysDictTypeService {
      *
      * @return 字典类型列表
      */
-    List<SysDictTypeDO> listDictTypes();
+    List<SysDictTypeDO> getDictTypeList();
 
 }

File: src/main/java/cn/iocoder/dashboard/modules/system/service/dict/impl/SysDictDataServiceImpl.java
Patch:
@@ -227,7 +227,7 @@ private void checkDictDataExists(Long id) {
     private void checkDictTypeValid(String type) {
         SysDictTypeDO dictType = dictTypeService.getDictType(type);
         if (dictType == null) {
-            throw ServiceExceptionUtil.exception(DICT_TYPE_NOT_FOUND);
+            throw ServiceExceptionUtil.exception(DICT_TYPE_NOT_EXISTS);
         }
         if (!CommonStatusEnum.ENABLE.getStatus().equals(dictType.getStatus())) {
             throw ServiceExceptionUtil.exception(DICT_TYPE_NOT_ENABLE);

File: src/test/java/cn/iocoder/dashboard/modules/system/service/package-info.java
Patch:
@@ -1 +0,0 @@
-package cn.iocoder.dashboard.modules.system.service;

File: src/main/java/cn/iocoder/dashboard/framework/tracer/core/util/TracerUtils.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.dashboard.framework.tracer.core.ITrace;
-import cn.iocoder.dashboard.util.bean.SpringUtil;
+import cn.iocoder.dashboard.util.sping.SpringBeanUtil;
 import org.apache.skywalking.apm.toolkit.trace.TraceContext;
 
 import java.util.UUID;
@@ -61,7 +61,7 @@ public static String getTraceId() {
      * @return ITrace
      */
     private static ITrace getTracer() {
-        return SpringUtil.getBean(ITrace.class);
+        return SpringBeanUtil.getBean(ITrace.class);
     }
 
     /**

File: src/main/java/cn/iocoder/dashboard/util/sping/SpringBeanUtil.java
Patch:
@@ -1,4 +1,4 @@
-package cn.iocoder.dashboard.util.bean;
+package cn.iocoder.dashboard.util.sping;
 
 import org.springframework.beans.BeansException;
 
@@ -12,7 +12,7 @@
 
 
 @Component
-public class SpringUtil implements ApplicationContextAware {
+public class SpringBeanUtil implements ApplicationContextAware {
 
     /**
      * Spring context

File: src/main/java/cn/iocoder/dashboard/framework/logger/operatelog/core/aop/OperateLogAspect.java
Patch:
@@ -8,7 +8,7 @@
 import cn.iocoder.dashboard.framework.logger.operatelog.core.annotations.OperateLog;
 import cn.iocoder.dashboard.framework.logger.operatelog.core.enums.OperateTypeEnum;
 import cn.iocoder.dashboard.framework.logger.operatelog.core.service.OperateLogFrameworkService;
-import cn.iocoder.dashboard.framework.security.core.util.SecurityUtils;
+import cn.iocoder.dashboard.framework.security.core.util.SecurityFrameworkUtils;
 import cn.iocoder.dashboard.framework.tracer.core.util.TracerUtils;
 import cn.iocoder.dashboard.modules.system.controller.logger.vo.operatelog.SysOperateLogCreateReqVO;
 import cn.iocoder.dashboard.util.json.JsonUtils;
@@ -148,7 +148,7 @@ private void log0(ProceedingJoinPoint joinPoint, OperateLog operateLog, ApiOpera
     }
 
     private static void fillUserFields(SysOperateLogCreateReqVO operateLogVO) {
-        operateLogVO.setUserId(SecurityUtils.getLoginUserId());
+        operateLogVO.setUserId(SecurityFrameworkUtils.getLoginUserId());
     }
 
     private static void fillModuleFields(SysOperateLogCreateReqVO operateLogVO,

File: src/main/java/cn/iocoder/dashboard/framework/security/core/handler/AccessDeniedHandlerImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.iocoder.dashboard.common.exception.enums.GlobalErrorCodeConstants;
 import cn.iocoder.dashboard.common.pojo.CommonResult;
-import cn.iocoder.dashboard.framework.security.core.util.SecurityUtils;
+import cn.iocoder.dashboard.framework.security.core.util.SecurityFrameworkUtils;
 import cn.iocoder.dashboard.util.servlet.ServletUtils;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.security.access.AccessDeniedException;
@@ -35,7 +35,7 @@ public void handle(HttpServletRequest request, HttpServletResponse response, Acc
             throws IOException, ServletException {
         // 打印 warn 的原因是，不定期合并 warn，看看有没恶意破坏
         log.warn("[commence][访问 URL({}) 时，用户({}) 权限不够]", request.getRequestURI(),
-                SecurityUtils.getLoginUser().getId(), e);
+                SecurityFrameworkUtils.getLoginUser().getId(), e);
         // 返回 403
         ServletUtils.writeJSON(response, CommonResult.error(UNAUTHORIZED));
     }

File: src/main/java/cn/iocoder/dashboard/framework/security/core/handler/LogoutSuccessHandlerImpl.java
Patch:
@@ -3,7 +3,7 @@
 import cn.hutool.core.util.StrUtil;
 import cn.iocoder.dashboard.framework.security.config.SecurityProperties;
 import cn.iocoder.dashboard.framework.security.core.service.SecurityAuthFrameworkService;
-import cn.iocoder.dashboard.framework.security.core.util.SecurityUtils;
+import cn.iocoder.dashboard.framework.security.core.util.SecurityFrameworkUtils;
 import cn.iocoder.dashboard.util.servlet.ServletUtils;
 import org.springframework.security.core.Authentication;
 import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;
@@ -31,7 +31,7 @@ public class LogoutSuccessHandlerImpl implements LogoutSuccessHandler {
     @Override
     public void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) {
         // 执行退出
-        String token = SecurityUtils.obtainAuthorization(request, securityProperties.getTokenHeader());
+        String token = SecurityFrameworkUtils.obtainAuthorization(request, securityProperties.getTokenHeader());
         if (StrUtil.isNotBlank(token)) {
             securityFrameworkService.logout(token);
         }

File: src/main/java/cn/iocoder/dashboard/framework/web/config/WebConfiguration.java
Patch:
@@ -1,7 +1,7 @@
 package cn.iocoder.dashboard.framework.web.config;
 
 import cn.iocoder.dashboard.framework.web.core.enums.FilterOrderEnum;
-import cn.iocoder.dashboard.framework.web.core.filter.RequestBodyCacheFilter;
+import cn.iocoder.dashboard.framework.web.core.filter.CacheRequestBodyFilter;
 import cn.iocoder.dashboard.framework.web.core.filter.XssFilter;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.boot.web.servlet.FilterRegistrationBean;
@@ -55,8 +55,8 @@ public FilterRegistrationBean<CorsFilter> corsFilterBean() {
      * 创建 RequestBodyCacheFilter Bean，可重复读取请求内容
      */
     @Bean
-    public FilterRegistrationBean<RequestBodyCacheFilter> requestBodyCacheFilter() {
-        return createFilterBean(new RequestBodyCacheFilter(), FilterOrderEnum.REQUEST_BODY_CACHE_FILTER);
+    public FilterRegistrationBean<CacheRequestBodyFilter> requestBodyCacheFilter() {
+        return createFilterBean(new CacheRequestBodyFilter(), FilterOrderEnum.REQUEST_BODY_CACHE_FILTER);
     }
 
     /**

File: src/main/java/cn/iocoder/dashboard/modules/system/controller/auth/SysAuthController.java
Patch:
@@ -26,8 +26,8 @@
 import java.util.List;
 
 import static cn.iocoder.dashboard.common.pojo.CommonResult.success;
-import static cn.iocoder.dashboard.framework.security.core.util.SecurityUtils.getLoginUserId;
-import static cn.iocoder.dashboard.framework.security.core.util.SecurityUtils.getLoginUserRoleIds;
+import static cn.iocoder.dashboard.framework.security.core.util.SecurityFrameworkUtils.getLoginUserId;
+import static cn.iocoder.dashboard.framework.security.core.util.SecurityFrameworkUtils.getLoginUserRoleIds;
 import static cn.iocoder.dashboard.util.servlet.ServletUtils.getClientIP;
 import static cn.iocoder.dashboard.util.servlet.ServletUtils.getUserAgent;
 

File: src/main/java/cn/iocoder/dashboard/modules/system/service/permission/impl/SysPermissionServiceImpl.java
Patch:
@@ -4,7 +4,7 @@
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.util.ArrayUtil;
 import cn.iocoder.dashboard.framework.mybatis.core.dataobject.BaseDO;
-import cn.iocoder.dashboard.framework.security.core.util.SecurityUtils;
+import cn.iocoder.dashboard.framework.security.core.util.SecurityFrameworkUtils;
 import cn.iocoder.dashboard.modules.system.dal.mysql.permission.SysRoleMenuMapper;
 import cn.iocoder.dashboard.modules.system.dal.mysql.permission.SysUserRoleMapper;
 import cn.iocoder.dashboard.modules.system.dal.dataobject.permission.SysMenuDO;
@@ -262,7 +262,7 @@ public boolean hasAnyPermissions(String... permissions) {
         }
 
         // 获得当前登陆的角色。如果为空，说明没有权限
-        Set<Long> roleIds = SecurityUtils.getLoginUserRoleIds();
+        Set<Long> roleIds = SecurityFrameworkUtils.getLoginUserRoleIds();
         if (CollUtil.isEmpty(roleIds)) {
             return false;
         }
@@ -297,7 +297,7 @@ public boolean hasAnyRoles(String... roles) {
         }
 
         // 获得当前登陆的角色。如果为空，说明没有权限
-        Set<Long> roleIds = SecurityUtils.getLoginUserRoleIds();
+        Set<Long> roleIds = SecurityFrameworkUtils.getLoginUserRoleIds();
         if (CollUtil.isEmpty(roleIds)) {
             return false;
         }

File: ruoyi-common/src/main/java/com/ruoyi/common/utils/poi/ExcelUtil.java
Patch:
@@ -476,7 +476,7 @@ public void setCellVo(Object value, Excel attr, Cell cell)
     {
         if (ColumnType.STRING == attr.cellType())
         {
-            cell.setCellType(CellType.NUMERIC);
+            cell.setCellType(CellType.STRING);
             cell.setCellValue(StringUtils.isNull(value) ? attr.defaultValue() : value + attr.suffix());
         }
         else if (ColumnType.NUMERIC == attr.cellType())

File: ruoyi-common/src/main/java/com/ruoyi/common/utils/poi/ExcelUtil.java
Patch:
@@ -476,7 +476,7 @@ public void setCellVo(Object value, Excel attr, Cell cell)
     {
         if (ColumnType.STRING == attr.cellType())
         {
-            cell.setCellType(CellType.NUMERIC);
+            cell.setCellType(CellType.STRING);
             cell.setCellValue(StringUtils.isNull(value) ? attr.defaultValue() : value + attr.suffix());
         }
         else if (ColumnType.NUMERIC == attr.cellType())

File: ruoyi-generator/src/main/java/com/ruoyi/generator/util/VelocityUtils.java
Patch:
@@ -17,7 +17,7 @@ public class VelocityUtils
     private static final String PROJECT_PATH = "main/java";
 
     /** mybatis空间路径 */
-    private static final String MYBATIS_PATH = "main/resources/mybatis";
+    private static final String MYBATIS_PATH = "main/resources/mapper";
 
     /** 默认上级菜单，系统工具 */
     private static final String DEFAULT_PARENT_MENU_ID = "3";

File: ruoyi/src/main/java/com/ruoyi/common/utils/http/HttpUtils.java
Patch:
@@ -118,7 +118,7 @@ public static String sendPost(String url, String param)
         StringBuilder result = new StringBuilder();
         try
         {
-            String urlNameString = url + "?" + param;
+            String urlNameString = url;
             log.info("sendPost - {}", urlNameString);
             URL realUrl = new URL(urlNameString);
             URLConnection conn = realUrl.openConnection();

File: ruoyi/src/main/java/com/ruoyi/common/utils/ip/AddressUtils.java
Patch:
@@ -3,6 +3,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import com.alibaba.fastjson.JSONObject;
+import com.ruoyi.common.constant.Constants;
 import com.ruoyi.common.utils.StringUtils;
 import com.ruoyi.common.utils.http.HttpUtils;
 import com.ruoyi.framework.config.RuoYiConfig;
@@ -34,7 +35,7 @@ public static String getRealAddressByIP(String ip)
         {
             try
             {
-                String rspStr = HttpUtils.sendGet(IP_URL, "ip=" + ip + "&json=true");
+                String rspStr = HttpUtils.sendGet(IP_URL, "ip=" + ip + "&json=true", Constants.GBK);
                 if (StringUtils.isEmpty(rspStr))
                 {
                     log.error("获取地理位置异常 {}", ip);

File: ruoyi/src/main/java/com/ruoyi/framework/security/service/PermissionService.java
Patch:
@@ -10,7 +10,7 @@
 import com.ruoyi.project.system.domain.SysRole;
 
 /**
- * RuoYi首创 自定义权限实现，se取自SpringSecurity首字母
+ * RuoYi首创 自定义权限实现，ss取自SpringSecurity首字母
  * 
  * @author ruoyi
  */

