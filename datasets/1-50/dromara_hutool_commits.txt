File: hutool-cache/src/main/java/cn/hutool/cache/impl/LFUCache.java
Patch:
@@ -15,7 +15,7 @@
  * @param <K> 键类型
  * @param <V> 值类型
  */
-public class LFUCache<K, V> extends StampedCache<K, V> {
+public class LFUCache<K, V> extends ReentrantCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/**

File: hutool-cache/src/main/java/cn/hutool/cache/impl/StampedCache.java
Patch:
@@ -12,7 +12,9 @@
  * @param <V> 值类型
  * @author looly
  * @since 5.7.15
+ * @deprecated Map使用StampedLock可能造成数据不一致甚至Map循环调用，此缓存废弃
  */
+@Deprecated
 public abstract class StampedCache<K, V> extends AbstractCache<K, V> {
 	private static final long serialVersionUID = 1L;
 

File: hutool-cache/src/main/java/cn/hutool/cache/impl/TimedCache.java
Patch:
@@ -17,7 +17,7 @@
  * @param <K> 键类型
  * @param <V> 值类型
  */
-public class TimedCache<K, V> extends StampedCache<K, V> {
+public class TimedCache<K, V> extends ReentrantCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/** 正在执行的定时任务 */

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -147,6 +147,8 @@ public Excel03SaxReader read(POIFSFileSystem fs, String idOrRidOrSheetName) thro
 			factory.processWorkbookEvents(request, fs);
 		} catch (IOException e) {
 			throw new POIException(e);
+		} catch (final StopReadException e) {
+			// issue#3820 跳过，用户抛出此异常，表示强制结束读取
 		} finally {
 			IoUtil.close(fs);
 		}

File: hutool-cache/src/main/java/cn/hutool/cache/impl/FIFOCache.java
Patch:
@@ -16,7 +16,7 @@
  * @param <V> 值类型
  * @author Looly
  */
-public class FIFOCache<K, V> extends StampedCache<K, V> {
+public class FIFOCache<K, V> extends ReentrantCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/**

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java
Patch:
@@ -169,7 +169,7 @@ public void init(String sshHost, int sshPort, String sshUser, String sshPass, Ch
 	 */
 	public void init() {
 		// issue#IB69U8 如果用户传入Session对象，则不能使用配置初始化，而是尝试重新连接
-		if(StrUtil.isEmpty(this.ftpConfig.getHost()) && null != this.session){
+		if(null != this.session){
 			try {
 				this.session.connect((int) this.ftpConfig.getConnectionTimeout());
 			} catch (JSchException e) {

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -132,7 +132,8 @@ public interface RegexPool {
 	/**
 	 * MAC地址正则
 	 */
-	String MAC_ADDRESS = "((?:[a-fA-F0-9]{1,2}[:-]){5}[a-fA-F0-9]{1,2})|0x(\\d{12}).+ETHER";
+	//String MAC_ADDRESS = "((?:[a-fA-F0-9]{1,2}[:-]){5}[a-fA-F0-9]{1,2})|0x(\\d{12}).+ETHER";
+	String MAC_ADDRESS = "((?:[a-fA-F0-9]{1,2}[:-]){5}[a-fA-F0-9]{1,2})|((?:[a-fA-F0-9]{1,4}[.]){2}[a-fA-F0-9]{1,4})|[a-fA-F0-9]{12}|0x(\\d{12}).+ETHER";
 	/**
 	 * 16进制字符串
 	 */

File: hutool-jwt/src/main/java/cn/hutool/jwt/signers/JWTSignerUtil.java
Patch:
@@ -278,7 +278,7 @@ public static JWTSigner createSigner(String algorithmId, Key key) {
 		if (key instanceof PrivateKey || key instanceof PublicKey) {
 			// issue3205@Github
 			if(ReUtil.isMatch("ES\\d{3}", algorithmId)){
-				return new EllipticCurveJWTSigner(algorithmId, key);
+				return new EllipticCurveJWTSigner(AlgorithmUtil.getAlgorithm(algorithmId), key);
 			}
 
 			return new AsymmetricJWTSigner(AlgorithmUtil.getAlgorithm(algorithmId), key);

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/ExcelSaxUtil.java
Patch:
@@ -266,9 +266,9 @@ private static Number getNumberValue(String value, String numFmtString) {
 			return null;
 		}
 
-		// issue#IB0EJ9 可能精度丢失
+		// issue#IB0EJ9 可能精度丢失，对含有小数的value判断并转为BigDecimal
 		final double number = Double.parseDouble(value);
-		if(false == value.equals(Double.toString(number))){
+		if(StrUtil.contains(value, CharUtil.DOT) && !value.equals(Double.toString(number))){
 			// 精度丢失
 			return NumberUtil.toBigDecimal(value);
 		}

File: hutool-extra/src/main/java/cn/hutool/extra/mail/JakartaMail.java
Patch:
@@ -268,6 +268,8 @@ public JakartaMail setAttachments(DataSource... attachments) {
 					if (StrUtil.startWith(attachment.getContentType(), "image/")) {
 						// 图片附件，用于正文中引用图片
 						bodyPart.setContentID(nameEncoded);
+						// 图片附件设置内联,否则无法正常引用图片
+						bodyPart.setDisposition(MimeBodyPart.INLINE);
 					}
 					this.multipart.addBodyPart(bodyPart);
 				}

File: hutool-poi/src/test/java/cn/hutool/poi/excel/IssueIB0EJ9Test.java
Patch:
@@ -9,7 +9,7 @@ public class IssueIB0EJ9Test {
 	@Test
 	@Disabled
 	void saxReadTest() {
-		ExcelUtil.readBySax(FileUtil.file("d:/test/bbb.xlsx"), "Sheet1",
+		ExcelUtil.readBySax(FileUtil.file("d:/test/数值型测试.xlsx"), "hcm工资表",
 			(sheetIndex, rowIndex, rowlist) -> Console.log("[{}] [{}] {}", sheetIndex, rowIndex, rowlist));
 	}
 }

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -31,6 +31,8 @@ public class Browser extends UserAgentInfo {
 		// 部分特殊浏览器是基于安卓、Iphone等的，需要优先判断
 		// 企业微信 企业微信使用微信浏览器内核,会包含 MicroMessenger 所以要放在前面
 		new Browser("wxwork", "wxwork", "wxwork\\/([\\d\\w\\.\\-]+)"),
+		// issue#IB3SJF 微信电脑端
+		new Browser("WindowsWechat", "WindowsWechat", "MicroMessenger" + Other_Version),
 		// 微信
 		new Browser("MicroMessenger", "MicroMessenger", Other_Version),
 		// 微信小程序

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -160,7 +160,7 @@ public DateTime(Date date) {
 	 * @since 4.1.2
 	 */
 	public DateTime(Date date, TimeZone timeZone) {
-		this(ObjectUtil.defaultIfNull(date, new Date()).getTime(), timeZone);
+		this(ObjectUtil.defaultIfNull(date, () -> new Date()).getTime(), timeZone);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -117,7 +117,7 @@ public String toString(String charsetName) {
 	 */
 	public String toString(Charset charset) {
 		return new String(toByteArray(),
-				ObjectUtil.defaultIfNull(charset, CharsetUtil.defaultCharset()));
+				ObjectUtil.defaultIfNull(charset, () -> CharsetUtil.defaultCharset()));
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/io/file/PathMover.java
Patch:
@@ -59,7 +59,7 @@ public PathMover(final Path src, final Path target, final CopyOption[] options)
 		}
 		this.src = src;
 		this.target = Assert.notNull(target, "Target path must be not null !");
-		this.options = ObjUtil.defaultIfNull(options, new CopyOption[]{});;
+		this.options = ObjUtil.defaultIfNull(options, () -> new CopyOption[]{});
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/ResourceClassLoader.java
Patch:
@@ -31,7 +31,7 @@ public class ResourceClassLoader<T extends Resource> extends SecureClassLoader {
 	 */
 	public ResourceClassLoader(ClassLoader parentClassLoader, Map<String, T> resourceMap) {
 		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil::getClassLoader));
-		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, new HashMap<>());
+		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, () -> new HashMap<>());
 		this.cacheClassMap = new HashMap<>();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlPath.java
Patch:
@@ -54,7 +54,7 @@ public UrlPath setWithEndTag(boolean withEngTag) {
 	 * @return 节点列表
 	 */
 	public List<String> getSegments() {
-		return ObjectUtil.defaultIfNull(this.segments, ListUtil.empty());
+		return ObjectUtil.defaultIfNull(this.segments, ListUtil::empty);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/TypeUtil.java
Patch:
@@ -389,7 +389,7 @@ public static Type getActualType(Type type, Field field) {
 		if (null == field) {
 			return null;
 		}
-		return getActualType(ObjectUtil.defaultIfNull(type, field.getDeclaringClass()), field.getGenericType());
+		return getActualType(ObjectUtil.defaultIfNull(type, field::getDeclaringClass), field.getGenericType());
 	}
 
 	/**

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -105,8 +105,8 @@ public JSONObject(JSONConfig config) {
 	 * @since 4.1.19
 	 */
 	public JSONObject(int capacity, JSONConfig config) {
-		super(InternalJSONUtil.createRawMap(capacity, ObjectUtil.defaultIfNull(config, JSONConfig.create())));
-		this.config = ObjectUtil.defaultIfNull(config, JSONConfig.create());
+		super(InternalJSONUtil.createRawMap(capacity, ObjectUtil.defaultIfNull(config, JSONConfig::create)));
+		this.config = ObjectUtil.defaultIfNull(config, JSONConfig::create);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -160,7 +160,7 @@ public DateTime(Date date) {
 	 * @since 4.1.2
 	 */
 	public DateTime(Date date, TimeZone timeZone) {
-		this(ObjectUtil.defaultIfNull(date, new Date()).getTime(), timeZone);
+		this(ObjectUtil.defaultIfNull(date, () -> new Date()).getTime(), timeZone);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -117,7 +117,7 @@ public String toString(String charsetName) {
 	 */
 	public String toString(Charset charset) {
 		return new String(toByteArray(),
-				ObjectUtil.defaultIfNull(charset, CharsetUtil.defaultCharset()));
+				ObjectUtil.defaultIfNull(charset, () -> CharsetUtil.defaultCharset()));
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/io/file/PathMover.java
Patch:
@@ -59,7 +59,7 @@ public PathMover(final Path src, final Path target, final CopyOption[] options)
 		}
 		this.src = src;
 		this.target = Assert.notNull(target, "Target path must be not null !");
-		this.options = ObjUtil.defaultIfNull(options, new CopyOption[]{});;
+		this.options = ObjUtil.defaultIfNull(options, () -> new CopyOption[]{});
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/ResourceClassLoader.java
Patch:
@@ -31,7 +31,7 @@ public class ResourceClassLoader<T extends Resource> extends SecureClassLoader {
 	 */
 	public ResourceClassLoader(ClassLoader parentClassLoader, Map<String, T> resourceMap) {
 		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil::getClassLoader));
-		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, new HashMap<>());
+		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, () -> new HashMap<>());
 		this.cacheClassMap = new HashMap<>();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlPath.java
Patch:
@@ -54,7 +54,7 @@ public UrlPath setWithEndTag(boolean withEngTag) {
 	 * @return 节点列表
 	 */
 	public List<String> getSegments() {
-		return ObjectUtil.defaultIfNull(this.segments, ListUtil.empty());
+		return ObjectUtil.defaultIfNull(this.segments, ListUtil::empty);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/TypeUtil.java
Patch:
@@ -389,7 +389,7 @@ public static Type getActualType(Type type, Field field) {
 		if (null == field) {
 			return null;
 		}
-		return getActualType(ObjectUtil.defaultIfNull(type, field.getDeclaringClass()), field.getGenericType());
+		return getActualType(ObjectUtil.defaultIfNull(type, field::getDeclaringClass), field.getGenericType());
 	}
 
 	/**

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -105,8 +105,8 @@ public JSONObject(JSONConfig config) {
 	 * @since 4.1.19
 	 */
 	public JSONObject(int capacity, JSONConfig config) {
-		super(InternalJSONUtil.createRawMap(capacity, ObjectUtil.defaultIfNull(config, JSONConfig.create())));
-		this.config = ObjectUtil.defaultIfNull(config, JSONConfig.create());
+		super(InternalJSONUtil.createRawMap(capacity, ObjectUtil.defaultIfNull(config, JSONConfig::create)));
+		this.config = ObjectUtil.defaultIfNull(config, JSONConfig::create);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1406,7 +1406,7 @@ public static DateTime offsetHour(Date date, int offset) {
 		return offset(date, DateField.HOUR_OF_DAY, offset);
 	}
 
-	/**w
+	/**
 	 * 偏移天
 	 *
 	 * @param date   日期

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -17,7 +17,6 @@
  * JDK8+中的{@link LocalDateTime} 工具类封装
  *
  * @author looly
- * @see DateUtil java7和以下版本，使用Date工具类
  * @see DatePattern 常用格式工具类
  * @since 5.3.9
  */

File: hutool-http/src/main/java/cn/hutool/http/HttpConnection.java
Patch:
@@ -352,8 +352,8 @@ public HttpConnection setCookie(String cookie) {
 	}
 
 	/**
-	 * 设置固定长度流模式，默认为0，表示不设置固定长度流模式，即默认为按需发送数据长度。<br>
-	 * 当发送大文件时，如果每次发送的数据长度不一致，可能造成接收方无法正常接收，此时可以设置固定长度流模式，此时发送的数据长度为contentLength，不足部分用0补齐。
+	 * 设置固定长度的流模式，会设置HTTP请求头中的Content-Length字段，告知服务器整个请求体的精确字节大小。<br>
+	 * 这在上传文件或大数据量时非常有用，因为它允许服务器准确地知道何时接收完所有的请求数据，而不需要依赖于连接的关闭来判断数据传输的结束。
 	 *
 	 * @param contentLength 固定长度
 	 * @return this

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -351,8 +351,8 @@ public HttpConnection getConnection() {
 	}
 
 	/**
-	 * 设置固定长度流模式，默认为0，表示不设置固定长度流模式，即默认为按需发送数据长度。<br>
-	 * 当发送大文件时，如果每次发送的数据长度不一致，可能造成接收方无法正常接收，此时可以设置固定长度流模式，此时发送的数据长度为contentLength，不足部分用0补齐。
+	 * 设置固定长度的流模式，会设置HTTP请求头中的Content-Length字段，告知服务器整个请求体的精确字节大小。<br>
+	 * 这在上传文件或大数据量时非常有用，因为它允许服务器准确地知道何时接收完所有的请求数据，而不需要依赖于连接的关闭来判断数据传输的结束。
 	 *
 	 * @param contentLength 固定长度
 	 * @return this

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -1358,7 +1358,7 @@ private void send() throws IORuntimeException {
 	 * @throws IOException IO异常
 	 */
 	private void sendFormUrlEncoded() throws IOException {
-		if (StrUtil.isBlank(this.header(Header.CONTENT_TYPE))) {
+		if (this.config.useDefaultContentTypeIfNull && StrUtil.isBlank(this.header(Header.CONTENT_TYPE))) {
 			// 如果未自定义Content-Type，使用默认的application/x-www-form-urlencoded
 			this.httpConnection.header(Header.CONTENT_TYPE, ContentType.FORM_URLENCODED.toString(this.charset), true);
 		}

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -1093,7 +1093,7 @@ private static Date parse(CharSequence dateStr, DateFormat dateFormat) {
 
 				// issue#3713 尝试使用US Locale解析
 				try {
-					DateUtil.newSimpleFormat(pattern, Locale.US, null).parse(dateStr.toString());
+					return DateUtil.newSimpleFormat(pattern, Locale.US, null).parse(dateStr.toString());
 				} catch (Exception ignore) {
 					// ignore
 				}

File: hutool-http/src/main/java/cn/hutool/http/ContentType.java
Patch:
@@ -120,8 +120,7 @@ public static boolean isFormUrlEncode(String contentType) {
 	public static ContentType get(String body) {
 		ContentType contentType = null;
 		if (StrUtil.isNotBlank(body)) {
-			body = StrUtil.trim(body);
-			char firstChar = body.charAt(0);
+			char firstChar = StrUtil.trimStart(body).charAt(0);
 			switch (firstChar) {
 				case '{':
 				case '[':

File: hutool-http/src/main/java/cn/hutool/http/ContentType.java
Patch:
@@ -120,6 +120,7 @@ public static boolean isFormUrlEncode(String contentType) {
 	public static ContentType get(String body) {
 		ContentType contentType = null;
 		if (StrUtil.isNotBlank(body)) {
+			body = StrUtil.trim(body);
 			char firstChar = body.charAt(0);
 			switch (firstChar) {
 				case '{':

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.convert.impl.*;
 import cn.hutool.core.date.DateTime;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.Opt;
 import cn.hutool.core.lang.Pair;
 import cn.hutool.core.lang.TypeReference;

File: hutool-http/src/main/java/cn/hutool/http/ContentType.java
Patch:
@@ -120,6 +120,7 @@ public static boolean isFormUrlEncode(String contentType) {
 	public static ContentType get(String body) {
 		ContentType contentType = null;
 		if (StrUtil.isNotBlank(body)) {
+			body = StrUtil.trim(body);
 			char firstChar = body.charAt(0);
 			switch (firstChar) {
 				case '{':

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -529,7 +529,7 @@ public static String readHex64Upper(InputStream in) throws IORuntimeException {
 	public static String readHex8192Upper(InputStream in) throws IORuntimeException {
 		try {
 			int i = in.available();
-			return readHex(in, Math.min(8192, in.available()), false);
+			return readHex(in, Math.min(8192, i), false);
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		}

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -1132,7 +1132,7 @@ public static <T extends AccessibleObject> T setAccessible(T accessibleObject) {
 	 *     <li> 基本类型 byte, char, short, int, long, float, double, boolean</li>
 	 *     <li> Literal String 类型(直接双引号字符串)</li>
 	 * </ul>
-	 * <h3>以下属性，可以通过反射修改：</h3>
+	 * <p>以下属性，可以通过反射修改：</p>
 	 * <ul>
 	 *     <li>基本类型的包装类 Byte、Character、Short、Long、Float、Double、Boolean</li>
 	 *     <li>字符串，通过 new String("")实例化</li>

File: hutool-core/src/main/java/cn/hutool/core/comparator/VersionComparator.java
Patch:
@@ -57,9 +57,9 @@ public int compare(String version1, String version2) {
 		}
 		if (version1 == null && version2 == null) {
 			return 0;
-		} else if (version1 == null) {// null视为最小版本，排在前
+		} else if (version1 == null || "".equals(version1)) {// null或""视为最小版本，排在前
 			return -1;
-		} else if (version2 == null) {
+		} else if (version2 == null || "".equals(version2)) {
 			return 1;
 		}
 

File: hutool-cache/src/main/java/cn/hutool/cache/Cache.java
Patch:
@@ -66,7 +66,7 @@ default V get(K key) {
 	/**
 	 * 从缓存中获得对象，当对象不在缓存中或已经过期返回Func0回调产生的对象
 	 * <p>
-	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回{@code null}，否则返回值。
+	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回返回supplier回调产生的对象，否则返回值。
 	 * <p>
 	 * 每次调用此方法会刷新最后访问时间，也就是说会重新计算超时时间。
 	 *
@@ -81,7 +81,7 @@ default V get(K key, Func0<V> supplier) {
 	/**
 	 * 从缓存中获得对象，当对象不在缓存中或已经过期返回Func0回调产生的对象
 	 * <p>
-	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回{@code null}，否则返回值。
+	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回supplier回调产生的对象，否则返回值。
 	 * <p>
 	 * 每次调用此方法会可选是否刷新最后访问时间，{@code true}表示会重新计算超时时间。
 	 *
@@ -95,7 +95,7 @@ default V get(K key, Func0<V> supplier) {
 	/**
 	 * 从缓存中获得对象，当对象不在缓存中或已经过期返回Func0回调产生的对象
 	 * <p>
-	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回{@code null}，否则返回值。
+	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回supplier回调产生的对象，否则返回值。
 	 * <p>
 	 * 每次调用此方法会可选是否刷新最后访问时间，{@code true}表示会重新计算超时时间。
 	 *

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -375,7 +375,7 @@ public static int thisYear() {
 	}
 
 	/**
-	 * @return 当前月份
+	 * @return 当前月份，从0开始计数
 	 */
 	public static int thisMonth() {
 		return month(date());

File: hutool-core/src/main/java/cn/hutool/core/util/IdUtil.java
Patch:
@@ -276,7 +276,7 @@ public static String nanoId(int size) {
 
 	/**
 	 * 简单获取Snowflake 的 nextId
-	 * 终端ID 数据中心ID 默认为1
+	 * 终端ID 数据中心ID 默认为PID和MAC地址生成
 	 *
 	 * @return nextId
 	 * @since 5.7.18
@@ -287,7 +287,7 @@ public static long getSnowflakeNextId() {
 
 	/**
 	 * 简单获取Snowflake 的 nextId
-	 * 终端ID 数据中心ID 默认为1
+	 * 终端ID 数据中心ID 默认为PID和MAC地址生成
 	 *
 	 * @return nextIdStr
 	 * @since 5.7.18

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberChineseFormatter.java
Patch:
@@ -243,7 +243,7 @@ public static String formatThousand(int amount, boolean isUseTraditional) {
 	 *
 	 * @param amount           数字
 	 * @param isUseTraditional 是否使用繁体
-	 * @param isUseColloquial  是否使用口语化(e.g. 一十 -> 十)
+	 * @param isUseColloquial  是否使用口语化(e.g. 一十 -》 十)
 	 * @return 中文
 	 * @since 5.8.28
 	 */

File: hutool-crypto/src/main/java/cn/hutool/crypto/SignUtil.java
Patch:
@@ -14,7 +14,7 @@
  * 签名工具类<br>
  * 封装包括：
  * <ul>
- *     <li>非堆成签名，签名算法支持见{@link SignAlgorithm}</li>
+ *     <li>非对称签名，签名算法支持见{@link SignAlgorithm}</li>
  *     <li>对称签名，支持Map类型参数排序后签名</li>
  *     <li>摘要签名，支持Map类型参数排序后签名，签名方法见：{@link DigestAlgorithm}</li>
  * </ul>

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -480,6 +480,7 @@ public ExcelWriter addHeaderAlias(String name, String alias) {
 
 	/**
 	 * 设置是否只保留别名中的字段值，如果为true，则不设置alias的字段将不被输出，false表示原样输出
+	 * Bean中设置@Alias时，setOnlyAlias是无效的，这个参数只和addHeaderAlias配合使用，原因是注解是Bean内部的操作，而addHeaderAlias是Writer的操作，不互通。
 	 *
 	 * @param isOnlyAlias 是否只保留别名中的字段值
 	 * @return this

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -480,6 +480,7 @@ public ExcelWriter addHeaderAlias(String name, String alias) {
 
 	/**
 	 * 设置是否只保留别名中的字段值，如果为true，则不设置alias的字段将不被输出，false表示原样输出
+	 * Bean中设置@Alias时，setOnlyAlias是无效的，这个参数只和addHeaderAlias配合使用，原因是注解是Bean内部的操作，而addHeaderAlias是Writer的操作，不互通。
 	 *
 	 * @param isOnlyAlias 是否只保留别名中的字段值
 	 * @return this

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitSetBloomFilter.java
Patch:
@@ -25,7 +25,7 @@ public class BitSetBloomFilter implements BloomFilter {
 	private final int hashFunctionNumber;
 
 	/**
-	 * 构造一个布隆过滤器，过滤器的容量为c * n 个bit.
+	 * 构造一个布隆过滤器，过滤器的容量为c * k 个bit.
 	 *
 	 * @param c 当前过滤器预先开辟的最大包含记录,通常要比预计存入的记录多一倍.
 	 * @param n 当前过滤器预计所要包含的记录.

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BloomFilterUtil.java
Patch:
@@ -9,7 +9,7 @@
 public class BloomFilterUtil {
 
 	/**
-	 * 创建一个BitSet实现的布隆过滤器，过滤器的容量为c * n 个bit.
+	 * 创建一个BitSet实现的布隆过滤器，过滤器的容量为c * k 个bit.
 	 *
 	 * @param c 当前过滤器预先开辟的最大包含记录,通常要比预计存入的记录多一倍.
 	 * @param n 当前过滤器预计所要包含的记录.

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -1059,7 +1059,7 @@ public static File copyFile(Resource src, File dest, StandardCopyOption... optio
 	 * 通过JDK7+的 Files#copy(InputStream, Path, CopyOption...) 方法拷贝文件
 	 *
 	 * @param src     源文件流，使用后不关闭
-	 * @param dest    目标文件或目录，如果为目录使用与源文件相同的文件名
+	 * @param dest    目标文件，不存在自动创建
 	 * @param options {@link StandardCopyOption}
 	 * @return 目标文件
 	 * @throws IORuntimeException IO异常

File: hutool-core/src/main/java/cn/hutool/core/map/ReferenceConcurrentMap.java
Patch:
@@ -177,6 +177,7 @@ public void clear() {
 
 	@Override
 	public Set<K> keySet() {
+		this.purgeStaleKeys();
 		// TODO 非高效方式的set转换，应该返回一个view
 		final Collection<K> trans = CollUtil.trans(this.raw.keySet(), (reference) -> null == reference ? null : reference.get());
 		return new HashSet<>(trans);

File: hutool-core/src/test/java/cn/hutool/core/util/Issue3516Test.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.core.util;
 
-import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -153,7 +153,8 @@ public <T> Converter<T> getConverter(Type type, boolean isCustomFirst) {
 	 */
 	@SuppressWarnings("unchecked")
 	public <T> Converter<T> getDefaultConverter(Type type) {
-		return (null == defaultConverterMap) ? null : (Converter<T>) defaultConverterMap.get(TypeUtil.getClass(type));
+		Class<?> key = TypeUtil.getClass(type);
+		return (null == defaultConverterMap || null == key) ? null : (Converter<T>) defaultConverterMap.get(key);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -2226,7 +2226,7 @@ public static BigDecimal toBigDecimal(Number number) {
 		}
 
 		// Float、Double等有精度问题，转换为字符串后再转换
-		return toBigDecimal(number.toString());
+		return new BigDecimal(number.toString());
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/util/Issue3423Test.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.core.util;
 
 import cn.hutool.core.lang.Console;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.text.DecimalFormat;
@@ -15,6 +16,7 @@ public void toBigDecimalOfNaNTest() {
 	}
 
 	@Test
+	@Ignore
 	public void toBigDecimalOfNaNTest2() throws ParseException {
 		final NumberFormat format = NumberFormat.getInstance();
 		((DecimalFormat) format).setParseBigDecimal(true);

File: hutool-system/src/main/java/cn/hutool/system/UserInfo.java
Patch:
@@ -19,7 +19,7 @@ public class UserInfo implements Serializable{
 	private final String USER_COUNTRY;
 
 	public UserInfo(){
-		USER_NAME = fixPath(SystemUtil.get("user.name", false));
+		USER_NAME = SystemUtil.get("user.name", false);
 		USER_HOME = fixPath(SystemUtil.get("user.home", false));
 		USER_DIR = fixPath(SystemUtil.get("user.dir", false));
 		JAVA_IO_TMPDIR = fixPath(SystemUtil.get("java.io.tmpdir", false));

File: hutool-system/src/main/java/cn/hutool/system/UserInfo.java
Patch:
@@ -19,7 +19,7 @@ public class UserInfo implements Serializable{
 	private final String USER_COUNTRY;
 
 	public UserInfo(){
-		USER_NAME = fixPath(SystemUtil.get("user.name", false));
+		USER_NAME = SystemUtil.get("user.name", false);
 		USER_HOME = fixPath(SystemUtil.get("user.home", false));
 		USER_DIR = fixPath(SystemUtil.get("user.dir", false));
 		JAVA_IO_TMPDIR = fixPath(SystemUtil.get("java.io.tmpdir", false));

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberWordFormatter.java
Patch:
@@ -19,7 +19,7 @@ public class NumberWordFormatter {
 			"FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN"};
 	private static final String[] NUMBER_TEN = new String[]{"TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY",
 			"SEVENTY", "EIGHTY", "NINETY"};
-	private static final String[] NUMBER_MORE = new String[]{"", "THOUSAND", "MILLION", "BILLION"};
+	private static final String[] NUMBER_MORE = new String[]{"", "THOUSAND", "MILLION", "BILLION", "TRILLION"};
 
 	private static final String[] NUMBER_SUFFIX = new String[]{"k", "w", "", "m", "", "", "b", "", "", "t", "", "", "p", "", "", "e"};
 

File: hutool-core/src/test/java/cn/hutool/core/convert/NumberWordFormatTest.java
Patch:
@@ -12,6 +12,9 @@ public void formatTest() {
 
 		String format2 = NumberWordFormatter.format("2100.00");
 		Assert.assertEquals("TWO THOUSAND ONE HUNDRED AND CENTS  ONLY", format2);
+
+		String format3 = NumberWordFormatter.format("1234567890123.12");
+		Assert.assertEquals("ONE TRILLION TWO HUNDRED AND THIRTY FOUR BILLION FIVE HUNDRED AND SIXTY SEVEN MILLION EIGHT HUNDRED AND NINETY THOUSAND ONE HUNDRED AND TWENTY THREE AND CENTS TWELVE ONLY", format3);
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/convert/NumberWordFormatTest.java
Patch:
@@ -12,6 +12,9 @@ public void formatTest() {
 
 		String format2 = NumberWordFormatter.format("2100.00");
 		Assert.assertEquals("TWO THOUSAND ONE HUNDRED AND CENTS  ONLY", format2);
+
+		String format3 = NumberWordFormatter.format("1234567890123.12");
+		Assert.assertEquals("ONE TRILLION TWO HUNDRED AND THIRTY FOUR BILLION FIVE HUNDRED AND SIXTY SEVEN MILLION EIGHT HUNDRED AND NINETY THOUSAND ONE HUNDRED AND TWENTY THREE AND CENTS TWELVE ONLY", format3);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberWordFormatter.java
Patch:
@@ -19,7 +19,7 @@ public class NumberWordFormatter {
 			"FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN"};
 	private static final String[] NUMBER_TEN = new String[]{"TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY",
 			"SEVENTY", "EIGHTY", "NINETY"};
-	private static final String[] NUMBER_MORE = new String[]{"", "THOUSAND", "MILLION", "BILLION"};
+	private static final String[] NUMBER_MORE = new String[]{"", "THOUSAND", "MILLION", "BILLION", "TRILLION"};
 
 	private static final String[] NUMBER_SUFFIX = new String[]{"k", "w", "", "m", "", "", "b", "", "", "t", "", "", "p", "", "", "e"};
 

File: hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java
Patch:
@@ -223,7 +223,7 @@ public static int randomInt(int min, int max, final boolean includeMin, final bo
 			min++;
 		}
 		if (includeMax) {
-			max--;
+			max++;
 		}
 		return getRandom().nextInt(min, max);
 	}
@@ -296,7 +296,7 @@ public static long randomLong(long min, long max, final boolean includeMin, fina
 			min++;
 		}
 		if (includeMax) {
-			max--;
+			max++;
 		}
 		return getRandom().nextLong(min, max);
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/compress/archiver/StreamArchiver.java
Patch:
@@ -177,6 +177,8 @@ private void addInternal(File file, String path, Filter<File> filter) throws IOE
 				for (File childFile : files) {
 					addInternal(childFile, entryName, filter);
 				}
+			} else {
+				out.closeArchiveEntry();
 			}
 		} else {
 			if (file.isFile()) {

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -488,7 +488,9 @@ public static String truncateUtf8(String str, int maxBytes) {
 	}
 
 	/**
-	 * 截断字符串，使用其按照指定编码为字节后不超过maxBytes长度
+	 * 截断字符串，使用其按照指定编码为字节后不超过maxBytes长度<br>
+	 * 此方法用于截取总bytes数不超过指定长度，如果字符出没有超出原样输出，如果超出了，则截取掉超出部分，并可选添加...，
+	 * 但是添加“...”后总长度也不超过限制长度。
 	 *
 	 * @param str        原始字符串
 	 * @param charset    指定编码

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -673,8 +673,8 @@ public void truncateUtf8Test() {
 	@Test
 	public void truncateUtf8Test2() {
 		final String str = "这是This一";
-		final String ret = StrUtil.truncateUtf8(str, 12);
-		Assert.assertEquals("这是Thi...", ret);
+		final String ret = StrUtil.truncateUtf8(str, 13);
+		Assert.assertEquals("这是This一", ret);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberWordFormatter.java
Patch:
@@ -5,7 +5,8 @@
 
 /**
  * 将浮点数类型的number转换成英语的表达方式 <br>
- * 参考博客：http://blog.csdn.net/eric_sunah/article/details/8713226
+ * 参考博客：http://blog.csdn.net/eric_sunah/article/details/8713226<br>
+ * 本质上此类为金额转英文表达，因此没有四舍五入考虑，小数点超过两位直接忽略。
  *
  * @author Looly,totalo
  * @since 3.0.9

File: hutool-core/src/main/java/cn/hutool/core/codec/Morse.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  * 莫尔斯电码的编码和解码实现<br>
- * 参考：https://github.com/TakWolf/Java-MorseCoder
+ * 参考：https://github.com/TakWolf-Deprecated/Java-MorseCoder
  *
  * @author looly, TakWolf
  * @since 4.4.1

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -28,7 +28,7 @@
 import java.util.stream.Collectors;
 
 /**
- * 时间工具类
+ * 日期时间工具类
  *
  * @author xiaoleilu
  * @see LocalDateTimeUtil java8日志工具类

File: hutool-core/src/main/java/cn/hutool/core/collection/CollStreamUtil.java
Patch:
@@ -7,7 +7,6 @@
 import cn.hutool.core.stream.StreamUtil;
 
 import java.util.Collection;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.comparator.PinyinComparator;
 import cn.hutool.core.comparator.PropertyComparator;
-import cn.hutool.core.exceptions.UtilException;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.lang.Matcher;
 import cn.hutool.core.lang.Validator;

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.convert.impl.*;
 import cn.hutool.core.date.DateTime;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.Opt;
 import cn.hutool.core.lang.Pair;
 import cn.hutool.core.lang.TypeReference;

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/BeanConverter.java
Patch:
@@ -6,7 +6,6 @@
 import cn.hutool.core.bean.copier.ValueProvider;
 import cn.hutool.core.convert.AbstractConverter;
 import cn.hutool.core.convert.ConvertException;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapProxy;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.ReflectUtil;

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -133,7 +133,7 @@ public static Img from(URL imageUrl) {
 	 * @return Img
 	 */
 	public static Img from(Image image) {
-		return new Img(ImgUtil.toBufferedImage(image));
+		return new Img(ImgUtil.castToBufferedImage(image, ImgUtil.IMAGE_TYPE_JPG));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/img/gif/GifDecoder.java
Patch:
@@ -606,7 +606,7 @@ protected void readContents() {
 							for (int i = 0; i < 11; i++) {
 								app.append((char) block[i]);
 							}
-							if ("NETSCAPE2.0".equals(app.toString())) {
+							if ("NETSCAPE2.0".contentEquals(app)) {
 								readNetscapeExt();
 							} else {
 								skip(); // don't care

File: hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java
Patch:
@@ -1,14 +1,12 @@
 package cn.hutool.core.io.resource;
 
 import cn.hutool.core.io.FileUtil;
-import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.URLUtil;
 
 import java.io.*;
 import java.net.URI;
 import java.net.URL;
-import java.net.URLConnection;
 
 /**
  * URL资源访问类

File: hutool-core/src/main/java/cn/hutool/core/io/unit/DataSize.java
Patch:
@@ -185,7 +185,7 @@ public static DataSize parse(CharSequence text) {
 	public static DataSize parse(CharSequence text, DataUnit defaultUnit) {
 		Assert.notNull(text, "Text must not be null");
 		try {
-			final Matcher matcher = PATTERN.matcher(text);
+			final Matcher matcher = PATTERN.matcher(StrUtil.cleanBlank(text));
 			Assert.state(matcher.matches(), "Does not match data size pattern");
 
 			final DataUnit unit = determineDataUnit(matcher.group(3), defaultUnit);

File: hutool-core/src/main/java/cn/hutool/core/map/multi/AbsCollValueMap.java
Patch:
@@ -5,7 +5,6 @@
 
 import java.util.Collection;
 import java.util.HashMap;
-import java.util.Iterator;
 import java.util.Map;
 
 /**

File: hutool-core/src/main/java/cn/hutool/core/net/URLDecoder.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.core.net;
 
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharUtil;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.StrUtil;

File: hutool-core/src/test/java/cn/hutool/core/io/file/PathUtilTest.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.Ignore;
 import org.junit.Test;
 
-import java.io.File;
 import java.nio.file.Paths;
 import java.nio.file.StandardCopyOption;
 

File: hutool-core/src/test/java/cn/hutool/core/map/MapUtilTest.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.core.map;
 
 import cn.hutool.core.convert.Convert;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.Dict;
 import cn.hutool.core.lang.Opt;
 import cn.hutool.core.util.StrUtil;

File: hutool-core/src/test/java/cn/hutool/core/text/NamingCaseTest.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.core.text;
 
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.Dict;
 import cn.hutool.core.util.CharUtil;
 import org.junit.Assert;

File: hutool-core/src/test/java/cn/hutool/core/util/ReflectUtilTest.java
Patch:
@@ -15,6 +15,7 @@
 import java.lang.reflect.Method;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Comparator;
 import java.util.List;
 import java.util.Map;
 
@@ -225,8 +226,10 @@ public void getMethodsFromInterfaceTest() {
 		final Method[] methods = ReflectUtil.getMethods(TestInterface3.class);
 		Assert.assertEquals(4, methods.length);
 
+		Arrays.sort(methods, Comparator.comparing(Method::toString));
 		// 接口里，调用getMethods和getPublicMethods效果相同
 		final Method[] publicMethods = ReflectUtil.getPublicMethods(TestInterface3.class);
+		Arrays.sort(publicMethods, Comparator.comparing(Method::toString));
 		Assert.assertArrayEquals(methods, publicMethods);
 	}
 

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/Part.java
Patch:
@@ -89,7 +89,7 @@ public int getMax() {
 	 */
 	public int checkValue(int value) throws CronException {
 		Assert.checkBetween(value, min, max,
-				() -> new CronException("Value {} out of range: [{} , {}]", value, min, max));
+				() -> new CronException("{} value {} out of range: [{} , {}]", this.name(), value, min, max));
 		return value;
 	}
 

File: hutool-crypto/src/test/java/cn/hutool/crypto/BCUtilTest.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.crypto;
 
-import cn.hutool.crypto.BCUtil;
 import org.bouncycastle.crypto.params.ECPrivateKeyParameters;
 import org.bouncycastle.crypto.params.ECPublicKeyParameters;
 import org.junit.Assert;

File: hutool-crypto/src/test/java/cn/hutool/crypto/KeyUtilTest.java
Patch:
@@ -1,8 +1,5 @@
 package cn.hutool.crypto;
 
-import cn.hutool.crypto.CryptoException;
-import cn.hutool.crypto.GlobalBouncyCastleProvider;
-import cn.hutool.crypto.KeyUtil;
 import org.junit.Assert;
 import org.junit.Ignore;
 import org.junit.Test;

File: hutool-db/src/main/java/cn/hutool/db/meta/Column.java
Patch:
@@ -258,7 +258,7 @@ public Column setSize(int size) {
 	 *
 	 * @return 大小或数据长度
 	 */
-	public int getDigit() {
+	public Integer getDigit() {
 		return digit;
 	}
 

File: hutool-db/src/test/java/cn/hutool/db/MySQLTest.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.db;
 
 import cn.hutool.core.lang.Console;
-import cn.hutool.core.util.ArrayUtil;
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Ignore;

File: hutool-db/src/test/java/cn/hutool/db/dialect/DialectFactoryTest.java
Patch:
@@ -4,9 +4,7 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-
 import java.util.HashMap;
-
 import java.util.Map;
 
 import static cn.hutool.db.dialect.DriverNamePool.*;

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -8,7 +8,6 @@
 import cn.hutool.core.io.resource.MultiFileResource;
 import cn.hutool.core.io.resource.Resource;
 import cn.hutool.core.lang.Assert;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.map.TableMap;
 import cn.hutool.core.net.SSLUtil;
@@ -1405,15 +1404,14 @@ private void sendMultipart() throws IOException {
 
 	/**
 	 * 是否忽略读取响应body部分<br>
-	 * HEAD、CONNECT、OPTIONS、TRACE方法将不读取响应体
+	 * HEAD、CONNECT、TRACE方法将不读取响应体
 	 *
 	 * @return 是否需要忽略响应body部分
 	 * @since 3.1.2
 	 */
 	private boolean isIgnoreResponseBody() {
 		return Method.HEAD == this.method //
 				|| Method.CONNECT == this.method //
-				|| Method.OPTIONS == this.method //
 				|| Method.TRACE == this.method;
 	}
 

File: hutool-http/src/main/java/cn/hutool/http/server/SimpleServer.java
Patch:
@@ -126,7 +126,8 @@ public SimpleServer addFilter(HttpFilter filter) {
 		return addFilter(new SimpleFilter() {
 			@Override
 			public void doFilter(HttpExchange httpExchange, Chain chain) throws IOException {
-				filter.doFilter(new HttpServerRequest(httpExchange), new HttpServerResponse(httpExchange), chain);
+				final HttpExchangeWrapper httpExchangeWrapper = new HttpExchangeWrapper(httpExchange);
+				filter.doFilter(httpExchangeWrapper.getRequest(), httpExchangeWrapper.getResponse(), chain);
 			}
 		});
 	}

File: hutool-json/src/main/java/cn/hutool/json/JSONParser.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.json;
 
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.Filter;
 import cn.hutool.core.lang.mutable.Mutable;
 import cn.hutool.core.lang.mutable.MutablePair;

File: hutool-json/src/test/java/cn/hutool/json/Issue2365Test.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.json;
 
-import cn.hutool.json.JSONUtil;
 import lombok.Data;
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-json/src/test/java/cn/hutool/json/Issue3051Test.java
Patch:
@@ -10,9 +10,8 @@
  * See the Mulan PSL v2 for more details.
  */
 
-package cn.hutool.json;import cn.hutool.json.JSONConfig;
-import cn.hutool.json.JSONObject;
-import cn.hutool.json.JSONUtil;
+package cn.hutool.json;
+
 import lombok.Data;
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-json/src/test/java/cn/hutool/json/Issue3139Test.java
Patch:
@@ -12,7 +12,6 @@
 
 package cn.hutool.json;
 
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.XmlUtil;
 import lombok.Data;
 import org.junit.Assert;

File: hutool-json/src/test/java/cn/hutool/json/IssueI6YN2ATest.java
Patch:
@@ -12,8 +12,6 @@
 
 package cn.hutool.json;
 
-import cn.hutool.core.lang.Console;
-import cn.hutool.core.lang.TypeReference;
 import lombok.Data;
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-jwt/src/test/java/cn/hutool/jwt/Issue3205Test.java
Patch:
@@ -30,7 +30,7 @@ public void es256Test() {
 
 		final String token = jwt.sign();
 
-		final boolean signed = Jwts.parserBuilder().setSigningKey(keyPair.getPublic()).build().isSigned(token);
+		final boolean signed = Jwts.parser().verifyWith(keyPair.getPublic()).build().isSigned(token);
 
 		Assert.assertTrue(signed);
 	}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/RowUtil.java
Patch:
@@ -12,7 +12,6 @@
 
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Optional;
 import java.util.stream.Collectors;
 import java.util.stream.IntStream;
 

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -1,12 +1,9 @@
 package cn.hutool.poi.excel.sax;
 
-import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.lang.Assert;
-import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
-import cn.hutool.log.StaticLog;
 import cn.hutool.poi.excel.sax.handler.RowHandler;
 import cn.hutool.poi.exceptions.POIException;
 import org.apache.poi.hssf.eventusermodel.EventWorkbookBuilder.SheetRecordCollectingListener;

File: hutool-core/src/main/java/cn/hutool/core/annotation/SynthesizedAnnotationProxy.java
Patch:
@@ -95,7 +95,7 @@ public static boolean isProxyAnnotation(Class<?> annotationType) {
 	public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
 		return Opt.ofNullable(methods.get(method.getName()))
 				.map(m -> m.apply(method, args))
-				.orElseGet(() -> ReflectUtil.invoke(this, method, args));
+				.orElseGet(() -> ReflectUtil.invoke(proxy, method, args));
 	}
 
 	// ========================= 代理方法 =========================

File: hutool-core/src/test/java/cn/hutool/core/util/ReflectUtilTest.java
Patch:
@@ -15,6 +15,7 @@
 import java.lang.reflect.Method;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Comparator;
 import java.util.List;
 import java.util.Map;
 
@@ -225,8 +226,10 @@ public void getMethodsFromInterfaceTest() {
 		final Method[] methods = ReflectUtil.getMethods(TestInterface3.class);
 		Assert.assertEquals(4, methods.length);
 
+		Arrays.sort(methods, Comparator.comparing(Method::toString));
 		// 接口里，调用getMethods和getPublicMethods效果相同
 		final Method[] publicMethods = ReflectUtil.getPublicMethods(TestInterface3.class);
+		Arrays.sort(publicMethods, Comparator.comparing(Method::toString));
 		Assert.assertArrayEquals(methods, publicMethods);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/annotation/SynthesizedAnnotationProxy.java
Patch:
@@ -95,7 +95,7 @@ public static boolean isProxyAnnotation(Class<?> annotationType) {
 	public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
 		return Opt.ofNullable(methods.get(method.getName()))
 				.map(m -> m.apply(method, args))
-				.orElseGet(() -> ReflectUtil.invoke(this, method, args));
+				.orElseGet(() -> ReflectUtil.invoke(proxy, method, args));
 	}
 
 	// ========================= 代理方法 =========================

File: hutool-core/src/test/java/cn/hutool/core/util/ReflectUtilTest.java
Patch:
@@ -15,6 +15,7 @@
 import java.lang.reflect.Method;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Comparator;
 import java.util.List;
 import java.util.Map;
 
@@ -225,8 +226,10 @@ public void getMethodsFromInterfaceTest() {
 		final Method[] methods = ReflectUtil.getMethods(TestInterface3.class);
 		Assert.assertEquals(4, methods.length);
 
+		Arrays.sort(methods, Comparator.comparing(Method::toString));
 		// 接口里，调用getMethods和getPublicMethods效果相同
 		final Method[] publicMethods = ReflectUtil.getPublicMethods(TestInterface3.class);
+		Arrays.sort(publicMethods, Comparator.comparing(Method::toString));
 		Assert.assertArrayEquals(methods, publicMethods);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/annotation/CombinationAnnotationElement.java
Patch:
@@ -7,6 +7,7 @@
 import java.lang.reflect.AnnotatedElement;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Comparator;
 import java.util.Map;
 import java.util.function.Predicate;
 
@@ -98,10 +99,12 @@ public Annotation[] getDeclaredAnnotations() {
 	 */
 	private void init(AnnotatedElement element) {
 		final Annotation[] declaredAnnotations = element.getDeclaredAnnotations();
+		Arrays.sort(declaredAnnotations, Comparator.comparing(Annotation::toString));
 		this.declaredAnnotationMap = new TableMap<>();
 		parseDeclared(declaredAnnotations);
 
 		final Annotation[] annotations = element.getAnnotations();
+		Arrays.sort(annotations, Comparator.comparing(Annotation::toString));
 		if (Arrays.equals(declaredAnnotations, annotations)) {
 			this.annotationMap = this.declaredAnnotationMap;
 		} else {

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AbstractTypeAnnotationScanner.java
Patch:
@@ -185,6 +185,7 @@ public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement anno
 				scanInterfaceIfNecessary(nextClassQueue, targetClass);
 				// 处理层级索引和注解
 				final Annotation[] targetAnnotations = getAnnotationsFromTargetClass(annotatedEle, index, targetClass);
+				Arrays.sort(targetAnnotations, Comparator.comparing(Annotation::toString).reversed());
 				for (final Annotation annotation : targetAnnotations) {
 					if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 						consumer.accept(index, annotation);

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -273,8 +273,8 @@ public void minTest() {
 
 	@Test
 	public void parseIntTest() {
-		int number = NumberUtil.parseInt("0xFF");
-		Assert.assertEquals(255, number);
+		int number = NumberUtil.parseInt("0xFE");
+		Assert.assertEquals(254, number);
 
 		// 0开头
 		number = NumberUtil.parseInt("010");

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -273,8 +273,8 @@ public void minTest() {
 
 	@Test
 	public void parseIntTest() {
-		int number = NumberUtil.parseInt("0xFF");
-		Assert.assertEquals(255, number);
+		int number = NumberUtil.parseInt("0xFE");
+		Assert.assertEquals(254, number);
 
 		// 0开头
 		number = NumberUtil.parseInt("010");

File: hutool-core/src/main/java/cn/hutool/core/io/file/Tailer.java
Patch:
@@ -174,7 +174,9 @@ public void stop(){
 			this.executorService.shutdown();
 		}finally {
 			IoUtil.close(this.randomAccessFile);
-			fileDeleteWatchMonitor.close();
+			if (fileDeleteWatchMonitor != null) {
+				fileDeleteWatchMonitor.close();
+			}
 		}
 	}
 

File: hutool-http/src/test/java/cn/hutool/http/IssueI7ZRJUTest.java
Patch:
@@ -19,7 +19,7 @@
 import javax.net.ssl.SSLSocketFactory;
 
 public class IssueI7ZRJUTest {
-	
+
 	@Test
 	@Ignore
 	public void getTest() {

File: hutool-core/src/main/java/cn/hutool/core/io/file/Tailer.java
Patch:
@@ -174,7 +174,9 @@ public void stop(){
 			this.executorService.shutdown();
 		}finally {
 			IoUtil.close(this.randomAccessFile);
-			fileDeleteWatchMonitor.close();
+			if (fileDeleteWatchMonitor != null) {
+				fileDeleteWatchMonitor.close();
+			}
 		}
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -1064,7 +1064,7 @@ public static String getContainsStr(CharSequence str, CharSequence... testStrs)
 			return null;
 		}
 		for (CharSequence checkStr : testStrs) {
-			if (str.toString().contains(checkStr)) {
+			if (null != checkStr && str.toString().contains(checkStr)) {
 				return checkStr.toString();
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -1064,7 +1064,7 @@ public static String getContainsStr(CharSequence str, CharSequence... testStrs)
 			return null;
 		}
 		for (CharSequence checkStr : testStrs) {
-			if (str.toString().contains(checkStr)) {
+			if (null != checkStr && str.toString().contains(checkStr)) {
 				return checkStr.toString();
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/annotation/CombinationAnnotationElement.java
Patch:
@@ -143,7 +143,7 @@ private void parse(Annotation[] annotations) {
 			annotationType = annotation.annotationType();
 			// issue#I5FQGW@Gitee：跳过元注解和已经处理过的注解，防止递归调用
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotationType)
-					&& false == declaredAnnotationMap.containsKey(annotationType)) {
+					&& false == annotationMap.containsKey(annotationType)) {
 				if(test(annotation)){
 					annotationMap.put(annotationType, annotation);
 				}

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -622,6 +622,6 @@ public void issueI7R2B6Test() {
 		Assert.assertEquals(61.67D,
 			NumberUtil.div(NumberUtil.mul(15858155520D, 100), 25715638272D, 2), 0.01);
 
-		Console.log(NumberUtil.div(NumberUtil.mul(15858155520D, 100), 25715638272D, 2));
+		Assert.assertEquals(61.67, NumberUtil.div(NumberUtil.mul(15858155520D, 100), 25715638272D, 2), 0.01);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -102,7 +102,7 @@ public ZipReader(ZipInputStream zin) {
 	 *
 	 * @param maxSizeDiff 检查ZipBomb文件差异倍数，-1表示不检查ZipBomb
 	 * @return this
-	 * @since 6.0.0
+	 * @since 5.8.21
 	 */
 	public ZipReader setMaxSizeDiff(final int maxSizeDiff) {
 		this.maxSizeDiff = maxSizeDiff;

File: hutool-json/src/main/java/cn/hutool/json/JSON.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.json;
 
 import cn.hutool.core.bean.BeanPath;
+import cn.hutool.core.bean.copier.IJSONTypeConverter;
 import cn.hutool.core.lang.TypeReference;
 
 import java.io.Serializable;
@@ -13,7 +14,7 @@
  *
  * @author Looly
  */
-public interface JSON extends Cloneable, Serializable {
+public interface JSON extends Cloneable, Serializable, IJSONTypeConverter {
 
 	/**
 	 * 获取JSON配置
@@ -177,7 +178,7 @@ default <T> T toBean(TypeReference<T> reference) {
 	 * @since 3.0.8
 	 */
 	default <T> T toBean(Type type) {
-		return JSONConverter.jsonConvert(type, this, getConfig());
+		return toBean(type, getConfig().isIgnoreError());
 	}
 
 	/**

File: hutool-extra/src/test/java/cn/hutool/extra/expression/AviatorTest.java
Patch:
@@ -21,17 +21,17 @@ public void simpleTest(){
 		ExpressionEngine engine = new AviatorEngine();
 		String exp =
 				"\"[foo i=\"+ foo.i + \", f=\" + foo.f + \", date.year=\" + (foo.date.year+1900) + \", date.month=\" + foo.date.month + \", bars[0].name=\" + #foo.bars[0].name + \"]\"";
-		String result = (String) engine.eval(exp, Dict.create().set("foo", foo));
+		String result = (String) engine.eval(exp, Dict.create().set("foo", foo), null);
 		Assert.assertEquals("[foo i=100, f=3.14, date.year=2020, date.month=10, bars[0].name=bar]", result);
 
 		// Assignment.
 		exp = "#foo.bars[0].name='hello aviator' ; #foo.bars[0].name";
-		result = (String) engine.eval(exp, Dict.create().set("foo", foo));
+		result = (String) engine.eval(exp, Dict.create().set("foo", foo), null);
 		Assert.assertEquals("hello aviator", result);
 		Assert.assertEquals("hello aviator", foo.bars[0].getName());
 
 		exp = "foo.bars[0] = nil ; foo.bars[0]";
-		result = (String) engine.eval(exp, Dict.create().set("foo", foo));
+		result = (String) engine.eval(exp, Dict.create().set("foo", foo), null);
 		Console.log("Execute expression: " + exp);
 		Assert.assertNull(result);
 		Assert.assertNull(foo.bars[0]);

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -54,7 +54,7 @@ public class Browser extends UserAgentInfo {
 			// 联想浏览器
 			new Browser("Lenovo", "SLBrowser", "SLBrowser/([\\d\\w\\.\\-]+)"),
 			new Browser("MSEdge", "Edge|Edg", "(?:edge|Edg|EdgA)\\/([\\d\\w\\.\\-]+)"),
-			new Browser("Chrome", "chrome", Other_Version),
+			new Browser("Chrome", "chrome|(iphone.*crios.*safari)", "(?:Chrome|CriOS)\\/([\\d\\w\\.\\-]+)"),
 			new Browser("Firefox", "firefox", Other_Version),
 			new Browser("IEMobile", "iemobile", Other_Version),
 			new Browser("Android Browser", "android", "version\\/([\\d\\w\\.\\-]+)"),

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -54,7 +54,7 @@ public class Browser extends UserAgentInfo {
 			// 联想浏览器
 			new Browser("Lenovo", "SLBrowser", "SLBrowser/([\\d\\w\\.\\-]+)"),
 			new Browser("MSEdge", "Edge|Edg", "(?:edge|Edg|EdgA)\\/([\\d\\w\\.\\-]+)"),
-			new Browser("Chrome", "chrome", Other_Version),
+			new Browser("Chrome", "chrome|(iphone.*crios.*safari)", "(?:Chrome|CriOS)\\/([\\d\\w\\.\\-]+)"),
 			new Browser("Firefox", "firefox", Other_Version),
 			new Browser("IEMobile", "iemobile", Other_Version),
 			new Browser("Android Browser", "android", "version\\/([\\d\\w\\.\\-]+)"),

File: hutool-core/src/main/java/cn/hutool/core/util/DesensitizedUtil.java
Patch:
@@ -321,7 +321,7 @@ public static String bankCard(String bankCardNo) {
 		if (StrUtil.isBlank(bankCardNo)) {
 			return bankCardNo;
 		}
-		bankCardNo = StrUtil.replace(bankCardNo," ","");
+		bankCardNo = StrUtil.cleanBlank(bankCardNo);
 		if (bankCardNo.length() < 9) {
 			return bankCardNo;
 		}

File: hutool-core/src/test/java/cn/hutool/core/util/DesensitizedUtilTest.java
Patch:
@@ -31,7 +31,7 @@ public void desensitizedTest() {
 		Assert.assertEquals("d*************@gmail.com.cn", DesensitizedUtil.desensitized("duandazhi-jack@gmail.com.cn", DesensitizedUtil.DesensitizedType.EMAIL));
 		Assert.assertEquals("**********", DesensitizedUtil.desensitized("1234567890", DesensitizedUtil.DesensitizedType.PASSWORD));
 		Assert.assertEquals("1101 **** **** **** 3256", DesensitizedUtil.desensitized("11011111222233333256", DesensitizedUtil.DesensitizedType.BANK_CARD));
-		Assert.assertEquals("6227 **** **** *** 5123", DesensitizedUtil.desensitized("6227880100100105123", DesensitizedUtil.DesensitizedType.BANK_CARD));
+		Assert.assertEquals("6227 **** **** **** 123", DesensitizedUtil.desensitized("6227880100100105123", DesensitizedUtil.DesensitizedType.BANK_CARD));
 		Assert.assertEquals("192.*.*.*", DesensitizedUtil.desensitized("192.168.1.1", DesensitizedUtil.DesensitizedType.IPV4));
 		Assert.assertEquals("2001:*:*:*:*:*:*:*", DesensitizedUtil.desensitized("2001:0db8:86a3:08d3:1319:8a2e:0370:7344", DesensitizedUtil.DesensitizedType.IPV6));
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/file/PathUtil.java
Patch:
@@ -620,8 +620,9 @@ public static Path toAbsNormal(Path path) {
 	public static String getMimeType(Path file) {
 		try {
 			return Files.probeContentType(file);
-		} catch (IOException e) {
-			throw new IORuntimeException(e);
+		} catch (IOException ignore) {
+			// issue#3179，使用OpenJDK可能抛出NoSuchFileException，此处返回null
+			return null;
 		}
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2884,7 +2884,7 @@ public static <V> List<V> values(Collection<Map<?, V>> mapCollection) {
 	 * @since 4.6.5
 	 */
 	public static <T extends Comparable<? super T>> T max(Collection<T> coll) {
-		return Collections.max(coll);
+		return isEmpty(coll) ? null : Collections.max(coll);
 	}
 
 	/**
@@ -2897,7 +2897,7 @@ public static <T extends Comparable<? super T>> T max(Collection<T> coll) {
 	 * @since 4.6.5
 	 */
 	public static <T extends Comparable<? super T>> T min(Collection<T> coll) {
-		return Collections.min(coll);
+		return isEmpty(coll) ? null : Collections.min(coll);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanDescTest.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.core.bean;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 
 /**
@@ -67,6 +68,7 @@ public void getSetTest() {
 	}
 
 	@Test
+	@Ignore
 	public void propDescOfBooleanTest3() {
 		BeanDesc desc = BeanUtil.getBeanDesc(User.class);
 

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -780,12 +780,12 @@ public static boolean startWithAny(CharSequence str, CharSequence... prefixes) {
 	}
 
 	/**
-	 * 给定字符串是否以任何一个字符串结尾（忽略大小写）<br>
+	 * 给定字符串是否以任何一个字符串开始（忽略大小写）<br>
 	 * 给定字符串和数组为空都返回false
 	 *
 	 * @param str      给定字符串
-	 * @param suffixes 需要检测的结尾字符串
-	 * @return 给定字符串是否以任何一个字符串结尾
+	 * @param suffixes 需要检测的开始字符串
+	 * @return 给定字符串是否以任何一个字符串开始
 	 * @since 5.8.1
 	 */
 	public static boolean startWithAnyIgnoreCase(final CharSequence str, final CharSequence... suffixes) {

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -552,7 +552,7 @@ public static Short getDayByIdCard(String idcard) {
 	public static int getGenderByIdCard(String idcard) {
 		Assert.notBlank(idcard);
 		final int len = idcard.length();
-		if (len < CHINA_ID_MIN_LENGTH) {
+		if (!(len == CHINA_ID_MIN_LENGTH || len == CHINA_ID_MAX_LENGTH)) {
 			throw new IllegalArgumentException("ID Card length must be 15 or 18");
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -552,7 +552,7 @@ public static Short getDayByIdCard(String idcard) {
 	public static int getGenderByIdCard(String idcard) {
 		Assert.notBlank(idcard);
 		final int len = idcard.length();
-		if (len < CHINA_ID_MIN_LENGTH) {
+		if (!(len == CHINA_ID_MIN_LENGTH || len == CHINA_ID_MAX_LENGTH)) {
 			throw new IllegalArgumentException("ID Card length must be 15 or 18");
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -809,7 +809,7 @@ public T setValue(T value) {
 	 *
 	 * @param <K> 键和值类型
 	 * @param <V> 键和值类型
-	 * @param map Map对象，键值类型必须一致
+	 * @param map Map对象
 	 * @return 互换后的Map
 	 * @since 5.2.6
 	 */

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -1305,7 +1305,7 @@ public static <T> T getQuietly(Map<?, ?> map, Object key, TypeReference<T> type,
 
 	/**
 	 * 重命名键<br>
-	 * 实现方式为一处然后重新put，当旧的key不存在直接返回<br>
+	 * 实现方式为移除然后重新put，当旧的key不存在直接返回<br>
 	 * 当新的key存在，抛出{@link IllegalArgumentException} 异常
 	 *
 	 * @param <K>    key的类型

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -809,7 +809,7 @@ public T setValue(T value) {
 	 *
 	 * @param <K> 键和值类型
 	 * @param <V> 键和值类型
-	 * @param map Map对象，键值类型必须一致
+	 * @param map Map对象
 	 * @return 互换后的Map
 	 * @since 5.2.6
 	 */

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -1116,7 +1116,7 @@ public static File copyContent(File src, File dest, boolean isOverride) throws I
 	 * 情况如下：
 	 *
 	 * <pre>
-	 * 1、src和dest都为目录，则将src下所有文件（包括子目录）拷贝到dest下
+	 * 1、src和dest都为目录，则将src下所有文件（不包括子目录）拷贝到dest下
 	 * 2、src和dest都为文件，直接复制，名字为dest
 	 * 3、src为文件，dest为目录，将src拷贝到dest目录下
 	 * </pre>

File: hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
Patch:
@@ -445,7 +445,9 @@ public void getMimeTypeTest() {
 		Assert.assertEquals("text/css", mimeType);
 
 		mimeType = FileUtil.getMimeType("test.js");
-		Assert.assertEquals("application/x-javascript", mimeType);
+		// 在 jdk 11+ 会获取到 text/javascript,而非 自定义的 application/x-javascript
+		List<String> list = ListUtil.of("text/javascript", "application/x-javascript");
+		Assert.assertTrue(list.contains(mimeType));
 
 		// office03
 		mimeType = FileUtil.getMimeType("test.doc");

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1741,7 +1741,7 @@ public static boolean isEmpty(Map<?, ?> map) {
 	 * @return 是否为非空
 	 */
 	public static boolean isNotEmpty(Collection<?> collection) {
-		return false == isEmpty(collection);
+		return !isEmpty(collection);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -1487,7 +1487,6 @@ public static <K, V> V computeIfAbsent(Map<K, V> map, K key, Function<? super K,
 				value = map.get(key);
 
 				// 判空后调用依旧无法解决死循环问题
-				// 见：Issue2349Test
 				//value = map.computeIfAbsent(key, mappingFunction);
 			}
 			return value;

File: hutool-core/src/main/java/cn/hutool/core/map/SafeConcurrentHashMap.java
Patch:
@@ -78,7 +78,6 @@ public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction
 				value = get(key);
 
 				// 判空后调用依旧无法解决死循环问题
-				// 见：Issue2349Test
 				//value = map.computeIfAbsent(key, mappingFunction);
 			}
 			return value;

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -221,7 +221,9 @@ private void readFromStream(Consumer<ZipEntry> consumer) throws IORuntimeExcepti
 		try {
 			ZipEntry zipEntry;
 			while (null != (zipEntry = in.getNextEntry())) {
-				consumer.accept(checkZipBomb(zipEntry));
+				consumer.accept(zipEntry);
+				// 检查ZipBomb放在读取内容之后，以便entry中的信息正常读取
+				checkZipBomb(zipEntry);
 			}
 		} catch (IOException e) {
 			throw new IORuntimeException(e);

File: hutool-crypto/src/test/java/cn/hutool/crypto/asymmetric/SM2Test.java
Patch:
@@ -334,6 +334,6 @@ public void dLengthTest(){
 	@Test
 	public void issueI6ROLTTest(){
 		String publicKey = "04bf347dfa32b9bc4c378232898ea43a210887a9b9ed6cc188f91b653706b44fa8434518d54412606788f34be8097cc233608f780edaf695c7e2b1d1c1b7b0d7c3";
-		final SM2 sm2 = new SM2(null, publicKey);
+		new SM2(null, publicKey);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1189,7 +1189,7 @@ public static <T> List<List<T>> split(Collection<T> collection, int size) {
 			return result;
 		}
 
-		int initSize = Math.min(collection.size(), size);
+		final int initSize = Math.min(collection.size(), size);
 		List<T> subList = new ArrayList<>(initSize);
 		for (T t : collection) {
 			if (subList.size() >= size) {

File: hutool-core/src/test/java/cn/hutool/core/collection/CollUtilTest.java
Patch:
@@ -259,8 +259,8 @@ public void splitTest() {
 	public void splitTest2() {
 		final ArrayList<Integer> list = CollUtil.newArrayList(1, 2, 3, 4, 5, 6, 7, 8, 9);
 		final List<List<Integer>> split = CollUtil.split(list, Integer.MAX_VALUE);
-		Assert.assertEquals(3, split.size());
-		Assert.assertEquals(3, split.get(0).size());
+		Assert.assertEquals(1, split.size());
+		Assert.assertEquals(9, split.get(0).size());
 	}
 
 	@Test

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -45,7 +45,7 @@ public void parseNumberTest() {
 	 */
 	@Test
 	public void parseNumberTest2() {
-		final JSONObject json = JSONUtil.parseObj(123L);
+		final JSONObject json = JSONUtil.parseObj(123L, JSONConfig.create().setIgnoreError(true));
 		Assert.assertEquals(new JSONObject(), json);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/lang/ClassScanner.java
Patch:
@@ -295,6 +295,7 @@ public void setClassLoader(ClassLoader classLoader) {
 
 	/**
 	 * 忽略加载错误扫描后，可以获得之前扫描时加载错误的类名字集合
+	 * @return 加载错误的类名字集合
 	 */
 	public Set<String> getClassesOfLoadError() {
 		return Collections.unmodifiableSet(this.classesOfLoadError);

File: hutool-core/src/main/java/cn/hutool/core/comparator/FuncComparator.java
Patch:
@@ -53,7 +53,7 @@ protected int doCompare(T a, T b) {
 	 */
 	@SuppressWarnings({"rawtypes", "unchecked"})
 	private int compare(T o1, T o2, Comparable v1, Comparable v2) {
-		int result = ObjectUtil.compare(v1, v2);
+		int result = ObjectUtil.compare(v1, v2, this.nullGreater);
 		if (0 == result) {
 			//避免TreeSet / TreeMap 过滤掉排序字段相同但是对象不相同的情况
 			result = CompareUtil.compare(o1, o2, this.nullGreater);

File: hutool-core/src/main/java/cn/hutool/core/comparator/FuncComparator.java
Patch:
@@ -53,7 +53,7 @@ protected int doCompare(T a, T b) {
 	 */
 	@SuppressWarnings({"rawtypes", "unchecked"})
 	private int compare(T o1, T o2, Comparable v1, Comparable v2) {
-		int result = ObjectUtil.compare(v1, v2);
+		int result = ObjectUtil.compare(v1, v2, this.nullGreater);
 		if (0 == result) {
 			//避免TreeSet / TreeMap 过滤掉排序字段相同但是对象不相同的情况
 			result = CompareUtil.compare(o1, o2, this.nullGreater);

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -4594,7 +4594,7 @@ public static boolean hasLetter(CharSequence str) {
 	 * @return 字符串1和字符串2的公共前缀
 	 */
 	public static CharSequence commonPrefix(CharSequence str1, CharSequence str2) {
-		if (isBlank(str1) || isBlank(str2)) {
+		if (isEmpty(str1) || isEmpty(str2)) {
 			return EMPTY;
 		}
 		final int minLength = Math.min(str1.length(), str2.length());
@@ -4618,7 +4618,7 @@ public static CharSequence commonPrefix(CharSequence str1, CharSequence str2) {
 	 * @return 字符串1和字符串2的公共后缀
 	 */
 	public static CharSequence commonSuffix(CharSequence str1, CharSequence str2) {
-		if (isBlank(str1) || isBlank(str2)) {
+		if (isEmpty(str1) || isEmpty(str2)) {
 			return EMPTY;
 		}
 		int str1Index = str1.length() - 1;

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -4594,7 +4594,7 @@ public static boolean hasLetter(CharSequence str) {
 	 * @return 字符串1和字符串2的公共前缀
 	 */
 	public static CharSequence commonPrefix(CharSequence str1, CharSequence str2) {
-		if (isBlank(str1) || isBlank(str2)) {
+		if (isEmpty(str1) || isEmpty(str2)) {
 			return EMPTY;
 		}
 		final int minLength = Math.min(str1.length(), str2.length());
@@ -4618,7 +4618,7 @@ public static CharSequence commonPrefix(CharSequence str1, CharSequence str2) {
 	 * @return 字符串1和字符串2的公共后缀
 	 */
 	public static CharSequence commonSuffix(CharSequence str1, CharSequence str2) {
-		if (isBlank(str1) || isBlank(str2)) {
+		if (isEmpty(str1) || isEmpty(str2)) {
 			return EMPTY;
 		}
 		int str1Index = str1.length() - 1;

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -690,7 +690,6 @@ public ExcelWriter merge(int lastColumn, Object content, boolean isSetHeaderStyl
 
 	/**
 	 * 合并某行的单元格，并写入对象到单元格<br>
-	 * 如果写到单元格中的内容非null，行号自动+1，否则当前行号不变<br>
 	 * 样式为默认标题样式，可使用{@link #getHeadCellStyle()}方法调用后自定义默认样式
 	 *
 	 * @param firstRow         起始行，0开始

File: hutool-core/src/main/java/cn/hutool/core/util/PageUtil.java
Patch:
@@ -95,8 +95,8 @@ public static int getStart(int pageNo, int pageSize) {
 	 * <p>
 	 * 当{@link #setFirstPageNo(int)}设置为1时：
 	 * <pre>
-	 * 页码：1，每页10 =》 9
-	 * 页码：2，每页10 =》 19
+	 * 页码：1，每页10 =》 10
+	 * 页码：2，每页10 =》 20
 	 * ……
 	 * </pre>
 	 *

File: hutool-poi/src/main/java/cn/hutool/poi/PoiChecker.java
Patch:
@@ -5,7 +5,7 @@
 
 /**
  * POI引入检查器
- * 
+ *
  * @author looly
  * @since 4.0.10
  */
@@ -20,7 +20,7 @@ public class PoiChecker {
 	public static void checkPoiImport() {
 		try {
 			Class.forName("org.apache.poi.ss.usermodel.Workbook", false, ClassLoaderUtil.getClassLoader());
-		} catch (ClassNotFoundException | NoClassDefFoundError e) {
+		} catch (ClassNotFoundException | NoClassDefFoundError | NoSuchMethodError e) {
 			throw new DependencyException(e, NO_POI_ERROR_MSG);
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/text/finder/LengthFinder.java
Patch:
@@ -19,6 +19,7 @@ public class LengthFinder extends TextFinder {
 	 * @param length 长度
 	 */
 	public LengthFinder(int length) {
+		Assert.isTrue(length > 0, "Length must be great than 0");
 		this.length = length;
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -70,6 +70,9 @@ public void splitTest() {
 
 		final String[] strings = StrUtil.splitToArray("abc/", '/');
 		Assert.assertEquals(2, strings.length);
+
+		// issue:I6FKSI
+		Assert.assertThrows(IllegalArgumentException.class, () -> StrUtil.split("test length 0", 0));
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/text/finder/LengthFinder.java
Patch:
@@ -19,6 +19,7 @@ public class LengthFinder extends TextFinder {
 	 * @param length 长度
 	 */
 	public LengthFinder(int length) {
+		Assert.isTrue(length > 0, "Length must be great than 0");
 		this.length = length;
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -70,6 +70,9 @@ public void splitTest() {
 
 		final String[] strings = StrUtil.splitToArray("abc/", '/');
 		Assert.assertEquals(2, strings.length);
+
+		// issue:I6FKSI
+		Assert.assertThrows(IllegalArgumentException.class, () -> StrUtil.split("test length 0", 0));
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -7,7 +7,6 @@
 import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.lang.Assert;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.map.SafeConcurrentHashMap;
 import cn.hutool.core.map.TableMap;
@@ -1023,7 +1022,6 @@ public ExcelWriter writeRow(Object rowBean, boolean isWriteKeyAsHead) {
 		} else if (BeanUtil.isBean(rowBean.getClass())) {
 			if (MapUtil.isEmpty(this.headerAlias)) {
 				rowMap = BeanUtil.beanToMap(rowBean, new LinkedHashMap<>(), false, false);
-				Console.log(rowMap);
 			} else {
 				// 别名存在情况下按照别名的添加顺序排序Bean数据
 				rowMap = BeanUtil.beanToMap(rowBean, new TreeMap<>(getCachedAliasComparator()), false, false);

File: hutool-core/src/main/java/cn/hutool/core/io/file/PathUtil.java
Patch:
@@ -488,7 +488,8 @@ public static Path move(Path src, Path target, boolean isOverride) {
 		Assert.notNull(src, "Src path must be not null !");
 		Assert.notNull(target, "Target path must be not null !");
 
-		if(equals(src, target)){
+		// issue#2893 target 不存在导致NoSuchFileException
+		if (Files.exists(target) && equals(src, target)) {
 			// issue#2845，当用户传入目标路径与源路径一致时，直接返回，否则会导致删除风险。
 			return target;
 		}

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1795,7 +1795,7 @@ public static boolean isLeapYear(int year) {
 	}
 
 	/**
-	 * 计算相对于dateToCompare的年龄，长用于计算指定生日在某年的年龄
+	 * 计算相对于dateToCompare的年龄，常用于计算指定生日在某年的年龄
 	 *
 	 * @param birthday      生日
 	 * @param dateToCompare 需要对比的日期

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1795,7 +1795,7 @@ public static boolean isLeapYear(int year) {
 	}
 
 	/**
-	 * 计算相对于dateToCompare的年龄，长用于计算指定生日在某年的年龄
+	 * 计算相对于dateToCompare的年龄，常用于计算指定生日在某年的年龄
 	 *
 	 * @param birthday      生日
 	 * @param dateToCompare 需要对比的日期

File: hutool-core/src/main/java/cn/hutool/core/io/file/PathUtil.java
Patch:
@@ -488,7 +488,8 @@ public static Path move(Path src, Path target, boolean isOverride) {
 		Assert.notNull(src, "Src path must be not null !");
 		Assert.notNull(target, "Target path must be not null !");
 
-		if(equals(src, target)){
+		// issue#2893 target 不存在导致NoSuchFileException
+		if (Files.exists(target) && equals(src, target)) {
 			// issue#2845，当用户传入目标路径与源路径一致时，直接返回，否则会导致删除风险。
 			return target;
 		}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelPicUtil.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.lang.Assert;
-import cn.hutool.core.map.TableMap;
 import cn.hutool.core.util.StrUtil;
 import org.apache.poi.hssf.usermodel.HSSFClientAnchor;
 import org.apache.poi.hssf.usermodel.HSSFPicture;
@@ -21,6 +20,7 @@
 import org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTMarker;
 
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -87,7 +87,7 @@ private static Map<String, PictureData> getPicMapXls(HSSFWorkbook workbook, int
 	 * @return 图片映射，键格式：行_列，值：{@link PictureData}
 	 */
 	private static Map<String, PictureData> getPicMapXlsx(XSSFWorkbook workbook, int sheetIndex) {
-		final Map<String, PictureData> sheetIndexPicMap = new TableMap<>();
+		final Map<String, PictureData> sheetIndexPicMap = new LinkedHashMap<>();
 		final XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
 		XSSFDrawing drawing;
 		for (POIXMLDocumentPart dr : sheet.getRelations()) {

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelPicUtil.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.lang.Assert;
+import cn.hutool.core.map.TableMap;
 import cn.hutool.core.util.StrUtil;
 import org.apache.poi.hssf.usermodel.HSSFClientAnchor;
 import org.apache.poi.hssf.usermodel.HSSFPicture;
@@ -86,7 +87,7 @@ private static Map<String, PictureData> getPicMapXls(HSSFWorkbook workbook, int
 	 * @return 图片映射，键格式：行_列，值：{@link PictureData}
 	 */
 	private static Map<String, PictureData> getPicMapXlsx(XSSFWorkbook workbook, int sheetIndex) {
-		final Map<String, PictureData> sheetIndexPicMap = new HashMap<>();
+		final Map<String, PictureData> sheetIndexPicMap = new TableMap<>();
 		final XSSFSheet sheet = workbook.getSheetAt(sheetIndex);
 		XSSFDrawing drawing;
 		for (POIXMLDocumentPart dr : sheet.getRelations()) {

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -363,7 +363,7 @@ public static String read(InputStream in, String charsetName) throws IORuntimeEx
 	/**
 	 * 从流中读取内容，读取完毕后关闭流
 	 *
-	 * @param in      输入流，读取完毕后并不关闭流
+	 * @param in      输入流，读取完毕后关闭流
 	 * @param charset 字符集
 	 * @return 内容
 	 * @throws IORuntimeException IO异常

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -363,7 +363,7 @@ public static String read(InputStream in, String charsetName) throws IORuntimeEx
 	/**
 	 * 从流中读取内容，读取完毕后关闭流
 	 *
-	 * @param in      输入流，读取完毕后并不关闭流
+	 * @param in      输入流，读取完毕后关闭流
 	 * @param charset 字符集
 	 * @return 内容
 	 * @throws IORuntimeException IO异常

File: hutool-core/src/main/java/cn/hutool/core/getter/BasicTypeGetter.java
Patch:
@@ -9,6 +9,7 @@
  * 提供一个统一的接口定义返回不同类型的值（基本类型）<br>
  *
  * @author Looly
+ * @param <K> key类型
  */
 public interface BasicTypeGetter<K> {
 	/*-------------------------- 基本类型 start -------------------------------*/

File: hutool-core/src/test/java/cn/hutool/core/io/FileTypeUtilTest.java
Patch:
@@ -48,7 +48,7 @@ public void docTest() {
 	@Ignore
 	public void ofdTest() {
 		File file = FileUtil.file("e:/test.ofd");
-		String hex = IoUtil.readHex28Upper(FileUtil.getInputStream(file));
+		String hex = IoUtil.readHex64Upper(FileUtil.getInputStream(file));
 		Console.log(hex);
 		String type = FileTypeUtil.getType(file);
 		Console.log(type);

File: hutool-core/src/test/java/cn/hutool/core/io/FileTypeUtilTest.java
Patch:
@@ -48,7 +48,7 @@ public void docTest() {
 	@Ignore
 	public void ofdTest() {
 		File file = FileUtil.file("e:/test.ofd");
-		String hex = IoUtil.readHex28Upper(FileUtil.getInputStream(file));
+		String hex = IoUtil.readHex64Upper(FileUtil.getInputStream(file));
 		Console.log(hex);
 		String type = FileTypeUtil.getType(file);
 		Console.log(type);

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/DES.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * DES加密算法实现<br>
  * DES全称为Data Encryption Standard，即数据加密标准，是一种使用密钥加密的块算法<br>
- * Java中默认实现为：DES/CBC/PKCS5Padding
+ * Java中默认实现为：DES/ECB/PKCS5Padding
  * 
  * @author Looly
  * @since 3.0.8
@@ -21,14 +21,14 @@ public class DES extends SymmetricCrypto {
 
 	// ------------------------------------------------------------------------- Constrctor start
 	/**
-	 * 构造，默认DES/CBC/PKCS5Padding，使用随机密钥
+	 * 构造，默认DES/ECB/PKCS5Padding，使用随机密钥
 	 */
 	public DES() {
 		super(SymmetricAlgorithm.DES);
 	}
 
 	/**
-	 * 构造，使用默认的DES/CBC/PKCS5Padding
+	 * 构造，使用默认的DES/ECB/PKCS5Padding
 	 * 
 	 * @param key 密钥
 	 */

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/DES.java
Patch:
@@ -11,7 +11,7 @@
 /**
  * DES加密算法实现<br>
  * DES全称为Data Encryption Standard，即数据加密标准，是一种使用密钥加密的块算法<br>
- * Java中默认实现为：DES/CBC/PKCS5Padding
+ * Java中默认实现为：DES/ECB/PKCS5Padding
  * 
  * @author Looly
  * @since 3.0.8
@@ -21,14 +21,14 @@ public class DES extends SymmetricCrypto {
 
 	// ------------------------------------------------------------------------- Constrctor start
 	/**
-	 * 构造，默认DES/CBC/PKCS5Padding，使用随机密钥
+	 * 构造，默认DES/ECB/PKCS5Padding，使用随机密钥
 	 */
 	public DES() {
 		super(SymmetricAlgorithm.DES);
 	}
 
 	/**
-	 * 构造，使用默认的DES/CBC/PKCS5Padding
+	 * 构造，使用默认的DES/ECB/PKCS5Padding
 	 * 
 	 * @param key 密钥
 	 */

File: hutool-extra/src/test/java/cn/hutool/extra/ftp/FtpTest.java
Patch:
@@ -4,9 +4,11 @@
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.lang.Console;
 import cn.hutool.extra.ssh.Sftp;
+import org.apache.commons.net.ftp.FTPFile;
 import org.junit.Ignore;
 import org.junit.Test;
 
+import java.io.File;
 import java.io.IOException;
 import java.util.List;
 

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -991,6 +991,7 @@ public static <T> Collection<T> create(Class<?> collectionType) {
 	 *
 	 * @param <T>            集合元素类型
 	 * @param collectionType 集合类型，rawtype 如 ArrayList.class, EnumSet.class ...
+	 * @param elementType 集合元素类型
 	 * @return 集合类型对应的实例
 	 * @since v5
 	 */

File: hutool-crypto/src/main/java/cn/hutool/crypto/ECKeyUtil.java
Patch:
@@ -244,6 +244,9 @@ public static ECPrivateKeyParameters toSm2PrivateParams(BigInteger d) {
 	 * @return ECPrivateKeyParameters
 	 */
 	public static ECPrivateKeyParameters toPrivateParams(String d, ECDomainParameters domainParameters) {
+		if (null == d) {
+			return null;
+		}
 		return toPrivateParams(BigIntegers.fromUnsignedByteArray(SecureUtil.decode(d)), domainParameters);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -108,9 +108,7 @@ public static UrlBuilder ofHttp(String httpUrl) {
 	 */
 	public static UrlBuilder ofHttp(String httpUrl, Charset charset) {
 		Assert.notBlank(httpUrl, "Http url must be not blank!");
-
-		final int sepIndex = httpUrl.indexOf("://");
-		if (sepIndex < 0) {
+		if (!httpUrl.startsWith("http://")&&!httpUrl.startsWith("https://")) {
 			httpUrl = "http://" + httpUrl.trim();
 		}
 		return of(httpUrl, charset);

File: hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java
Patch:
@@ -164,6 +164,8 @@ public static String identifyDriver(String nameContainsProductInfo, ClassLoader
 		} else if (nameContainsProductInfo.contains("xugu")) {
 			// 虚谷数据库
 			driver = DRIVER_XUGO;
+		}else if (nameContainsProductInfo.contains("mariadb")) {
+			driver = DRIVER_MARIADB;
 		}
 
 		return driver;

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -108,9 +108,7 @@ public static UrlBuilder ofHttp(String httpUrl) {
 	 */
 	public static UrlBuilder ofHttp(String httpUrl, Charset charset) {
 		Assert.notBlank(httpUrl, "Http url must be not blank!");
-
-		final int sepIndex = httpUrl.indexOf("://");
-		if (sepIndex < 0) {
+		if (!httpUrl.startsWith("http://")&&!httpUrl.startsWith("https://")) {
 			httpUrl = "http://" + httpUrl.trim();
 		}
 		return of(httpUrl, charset);

File: hutool-crypto/src/main/java/cn/hutool/crypto/ECKeyUtil.java
Patch:
@@ -244,6 +244,9 @@ public static ECPrivateKeyParameters toSm2PrivateParams(BigInteger d) {
 	 * @return ECPrivateKeyParameters
 	 */
 	public static ECPrivateKeyParameters toPrivateParams(String d, ECDomainParameters domainParameters) {
+		if (null == d) {
+			return null;
+		}
 		return toPrivateParams(BigIntegers.fromUnsignedByteArray(SecureUtil.decode(d)), domainParameters);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -624,7 +624,7 @@ public static Method getMethodByName(Class<?> clazz, boolean ignoreCase, String
 	}
 
 	/**
-	 * 获得指定类中的Public方法名<br>
+	 * 获得指定类中的方法名<br>
 	 * 去重重载的方法
 	 *
 	 * @param clazz 类
@@ -641,7 +641,7 @@ public static Set<String> getMethodNames(Class<?> clazz) throws SecurityExceptio
 	}
 
 	/**
-	 * 获得指定类过滤后的Public方法列表
+	 * 获得指定类过滤后的方法列表
 	 *
 	 * @param clazz  查找方法的类
 	 * @param filter 过滤器

File: hutool-json/src/main/java/cn/hutool/json/ObjectMapper.java
Patch:
@@ -145,7 +145,8 @@ public void map(JSONArray jsonArray, Filter<Mutable<Object>> filter) throws JSON
 			mapFromTokener(new JSONTokener((InputStream) source, jsonArray.getConfig()), jsonArray, filter);
 		} else if (source instanceof byte[]) {
 			final byte[] bytesSource = (byte[]) source;
-			if('[' == bytesSource[0] && ']' == bytesSource[bytesSource.length - 1]){
+			// 如果是普通的的byte[], 要避免下标越界
+			if (bytesSource.length > 1 && '[' == bytesSource[0] && ']' == bytesSource[bytesSource.length - 1]) {
 				mapFromTokener(new JSONTokener(IoUtil.toStream(bytesSource), jsonArray.getConfig()), jsonArray, filter);
 			}else{
 				// https://github.com/dromara/hutool/issues/2369

File: hutool-json/src/main/java/cn/hutool/json/ObjectMapper.java
Patch:
@@ -145,7 +145,8 @@ public void map(JSONArray jsonArray, Filter<Mutable<Object>> filter) throws JSON
 			mapFromTokener(new JSONTokener((InputStream) source, jsonArray.getConfig()), jsonArray, filter);
 		} else if (source instanceof byte[]) {
 			final byte[] bytesSource = (byte[]) source;
-			if('[' == bytesSource[0] && ']' == bytesSource[bytesSource.length - 1]){
+			// 如果是普通的的byte[], 要避免下标越界
+			if (bytesSource.length > 1 && '[' == bytesSource[0] && ']' == bytesSource[bytesSource.length - 1]) {
 				mapFromTokener(new JSONTokener(IoUtil.toStream(bytesSource), jsonArray.getConfig()), jsonArray, filter);
 			}else{
 				// https://github.com/dromara/hutool/issues/2369

File: hutool-core/src/main/java/cn/hutool/core/util/ByteUtil.java
Patch:
@@ -336,7 +336,7 @@ public static byte[] floatToBytes(float floatValue, ByteOrder byteOrder) {
 	 * @return float值
 	 * @since 5.7.18
 	 */
-	public static double bytesToFloat(byte[] bytes) {
+	public static float bytesToFloat(byte[] bytes) {
 		return bytesToFloat(bytes, DEFAULT_ORDER);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/ByteUtil.java
Patch:
@@ -336,7 +336,7 @@ public static byte[] floatToBytes(float floatValue, ByteOrder byteOrder) {
 	 * @return float值
 	 * @since 5.7.18
 	 */
-	public static double bytesToFloat(byte[] bytes) {
+	public static float bytesToFloat(byte[] bytes) {
 		return bytesToFloat(bytes, DEFAULT_ORDER);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/CollectionConverter.java
Patch:
@@ -72,7 +72,7 @@ public Collection<?> convert(Object value, Collection<?> defaultValue) throws Il
 	 * @return 转换后的集合对象
 	 */
 	protected Collection<?> convertInternal(Object value) {
-		final Collection<Object> collection = CollUtil.create(TypeUtil.getClass(this.collectionType));
+		final Collection<?> collection = CollUtil.create(TypeUtil.getClass(this.collectionType), TypeUtil.getClass(this.elementType));
 		return CollUtil.addAll(collection, value, this.elementType);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/net/DefaultTrustManager.java
Patch:
@@ -22,7 +22,7 @@ public class DefaultTrustManager extends X509ExtendedTrustManager {
 
 	@Override
 	public X509Certificate[] getAcceptedIssuers() {
-		return null;
+		return new X509Certificate[0];
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/CollectionConverter.java
Patch:
@@ -72,7 +72,7 @@ public Collection<?> convert(Object value, Collection<?> defaultValue) throws Il
 	 * @return 转换后的集合对象
 	 */
 	protected Collection<?> convertInternal(Object value) {
-		final Collection<Object> collection = CollUtil.create(TypeUtil.getClass(this.collectionType));
+		final Collection<?> collection = CollUtil.create(TypeUtil.getClass(this.collectionType), TypeUtil.getClass(this.elementType));
 		return CollUtil.addAll(collection, value, this.elementType);
 	}
 }

File: hutool-http/src/main/java/cn/hutool/http/HttpResponse.java
Patch:
@@ -626,7 +626,7 @@ private static long copyBody(InputStream in, OutputStream out, long contentLengt
 	 *
 	 * @return 文件名，empty表示无
 	 */
-	private String getFileNameFromDisposition() {
+	public String getFileNameFromDisposition() {
 		return getFileNameFromDisposition("filename");
 	}
 
@@ -636,7 +636,7 @@ private String getFileNameFromDisposition() {
 	 *
 	 * @return 文件名，empty表示无
 	 */
-	private String getFileNameFromDisposition(String paramName) {
+	public String getFileNameFromDisposition(String paramName) {
 		String fileName = null;
 		final String disposition = header(Header.CONTENT_DISPOSITION);
 		if (StrUtil.isNotBlank(disposition)) {

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java
Patch:
@@ -8,7 +8,7 @@
 import cn.hutool.core.util.NumberUtil;
 
 /**
- * BlommFilter 实现 <br>
+ * BloomFilter 实现 <br>
  * 1.构建hash算法 <br>
  * 2.散列hash映射到数组的bit位置 <br>
  * 3.验证<br>
@@ -79,4 +79,4 @@ public boolean contains(String str) {
 		}
 		return true;
 	}
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/io/FileTypeUtil.java
Patch:
@@ -166,6 +166,8 @@ public static String getType(InputStream in, String filename) {
 				typeName = "doc";
 			} else if ("msi".equalsIgnoreCase(extName)) {
 				typeName = "msi";
+			} else if ("ppt".equalsIgnoreCase(extName)) {
+				typeName = "ppt";
 			}
 		} else if ("zip".equals(typeName)) {
 			// zip可能为docx、xlsx、pptx、jar、war、ofd等格式，扩展名辅助判断

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java
Patch:
@@ -8,7 +8,7 @@
 import cn.hutool.core.util.NumberUtil;
 
 /**
- * BlommFilter 实现 <br>
+ * BloomFilter 实现 <br>
  * 1.构建hash算法 <br>
  * 2.散列hash映射到数组的bit位置 <br>
  * 3.验证<br>
@@ -79,4 +79,4 @@ public boolean contains(String str) {
 		}
 		return true;
 	}
-}
\ No newline at end of file
+}

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java
Patch:
@@ -8,7 +8,7 @@
 import cn.hutool.core.util.NumberUtil;
 
 /**
- * BlommFilter 实现 <br>
+ * BloomFilter 实现 <br>
  * 1.构建hash算法 <br>
  * 2.散列hash映射到数组的bit位置 <br>
  * 3.验证<br>
@@ -79,4 +79,4 @@ public boolean contains(String str) {
 		}
 		return true;
 	}
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/io/FileTypeUtil.java
Patch:
@@ -166,6 +166,8 @@ public static String getType(InputStream in, String filename) {
 				typeName = "doc";
 			} else if ("msi".equalsIgnoreCase(extName)) {
 				typeName = "msi";
+			} else if ("ppt".equalsIgnoreCase(extName)) {
+				typeName = "ppt";
 			}
 		} else if ("zip".equals(typeName)) {
 			// zip可能为docx、xlsx、pptx、jar、war、ofd等格式，扩展名辅助判断

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/MapToMapCopier.java
Patch:
@@ -49,7 +49,7 @@ public Map copy() {
 				return;
 			}
 			// 忽略空值
-			if (false == copyOptions.ignoreNullValue && sValue == null) {
+			if (true == copyOptions.ignoreNullValue && sValue == null) {
 				return;
 			}
 

File: hutool-poi/src/main/java/cn/hutool/poi/excel/reader/MapSheetReader.java
Patch:
@@ -46,13 +46,14 @@ public List<Map<String, Object>> read(Sheet sheet) {
 		} else if (headerRowIndex > lastRowNum) {
 			throw new IndexOutOfBoundsException(StrUtil.format("Header row index {} is greater than last row index {}.", headerRowIndex, lastRowNum));
 		} else if (startRowIndex > lastRowNum) {
-			throw new IndexOutOfBoundsException(StrUtil.format("startRowIndex row index {} is greater than last row index {}.", startRowIndex, lastRowNum));
+			// issue#I5U1JA 只有标题行的Excel，起始行是1，标题行（最后的行号是0）
+			return ListUtil.empty();
 		}
 		final int startRowIndex = Math.max(this.startRowIndex, firstRowNum);// 读取起始行（包含）
 		final int endRowIndex = Math.min(this.endRowIndex, lastRowNum);// 读取结束行（包含）
 
 		// 读取header
-		List<String> headerList = aliasHeader(readRow(sheet, headerRowIndex));
+		final List<String> headerList = aliasHeader(readRow(sheet, headerRowIndex));
 
 		final List<Map<String, Object>> result = new ArrayList<>(endRowIndex - startRowIndex + 1);
 		List<Object> rowList;

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -1030,8 +1030,10 @@ public void then(Consumer<HttpResponse> consumer) {
 	 * 执行Request请求后，对响应内容后续处理<br>
 	 * 处理结束后关闭连接
 	 *
+	 * @param <T> 处理结果类型
 	 * @param function 响应内容处理函数
 	 * @since 5.8.5
+	 * @return 处理结果
 	 */
 	public <T> T thenFunction(Function<HttpResponse, T> function) {
 		try (final HttpResponse response = execute(true)) {

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -307,7 +307,6 @@ public static <T> T defaultIfNull(final T object, final T defaultValue) {
 	 * @throws NullPointerException {@code defaultValueSupplier == null} 时，抛出
 	 * @since 5.7.20
 	 */
-	@Deprecated
 	public static <T> T defaultIfNull(T source, Supplier<? extends T> defaultValueSupplier) {
 		if (isNull(source)) {
 			return defaultValueSupplier.get();
@@ -341,6 +340,7 @@ public static <T> T defaultIfNull(T source, Function<T , ? extends T> defaultVal
 	 * @param <T>          被检查对象为{@code null}返回默认值，否则返回自定义handle处理后的返回值
 	 * @return 处理后的返回值
 	 * @since 5.4.6
+	 * @deprecated 当str为{@code null}时，handle使用了str相关的方法引用会导致空指针问题
 	 */
 	@Deprecated
 	public static <T> T defaultIfNull(Object source, Supplier<? extends T> handle, final T defaultValue) {
@@ -376,6 +376,7 @@ public static <T,R> T defaultIfNull(R source, Function<R, ? extends T> handle, f
 	 * @param <T>          被检查对象为{@code null}或者 ""返回默认值，否则返回自定义handle处理后的返回值
 	 * @return 处理后的返回值
 	 * @since 5.4.6
+	 * @deprecated 当str为{@code null}时，handle使用了str相关的方法引用会导致空指针问题
 	 */
 	@Deprecated
 	public static <T> T defaultIfEmpty(String str, Supplier<? extends T> handle, final T defaultValue) {
@@ -433,7 +434,6 @@ public static <T extends CharSequence> T defaultIfEmpty(final T str, final T def
 	 * @throws NullPointerException {@code defaultValueSupplier == null} 时，抛出
 	 * @since 5.7.20
 	 */
-	@Deprecated
 	public static <T extends CharSequence> T defaultIfEmpty(T str, Supplier<? extends T> defaultValueSupplier) {
 		if (StrUtil.isEmpty(str)) {
 			return defaultValueSupplier.get();
@@ -489,7 +489,6 @@ public static <T extends CharSequence> T defaultIfBlank(final T str, final T def
 	 * @throws NullPointerException {@code defaultValueSupplier == null} 时，抛出
 	 * @since 5.7.20
 	 */
-	@Deprecated
 	public static <T extends CharSequence> T defaultIfBlank(T str, Supplier<? extends T> defaultValueSupplier) {
 		if (StrUtil.isBlank(str)) {
 			return defaultValueSupplier.get();

File: hutool-core/src/main/java/cn/hutool/core/img/ImgUtil.java
Patch:
@@ -2071,7 +2071,6 @@ public static Point getPointBaseCentre(Rectangle rectangle, int backgroundWidth,
 	 * @param image      {@link BufferedImage}
 	 * @param rgbFilters 过滤多种颜色
 	 * @return {@link String} #ffffff
-	 * @see ColorUtil#getMainColor(BufferedImage, int[]...)
 	 * @since 5.6.7
 	 */
 	public static String getMainColor(BufferedImage image, int[]... rgbFilters) {

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -1475,6 +1475,7 @@ public static <K, V> Map.Entry<K, V> entry(K key, V value, boolean isImmutable)
 	 * @param key             键
 	 * @param mappingFunction 值不存在时值的生成函数
 	 * @see <a href="https://bugs.openjdk.java.net/browse/JDK-8161372">https://bugs.openjdk.java.net/browse/JDK-8161372</a>
+	 * @return 值
 	 */
 	public static <K, V> V computeIfAbsent(Map<K, V> map, K key, Function<? super K, ? extends V> mappingFunction) {
 		V value = map.get(key);

File: hutool-core/src/main/java/cn/hutool/core/util/ModifierUtil.java
Patch:
@@ -269,7 +269,7 @@ public static boolean isAbstract(Method method) {
 	 * 设置final的field字段可以被修改
 	 * <p>
 	 *     只要不会被编译器内联优化的 final 属性就可以通过反射有效的进行修改 --  修改后代码中可使用到新的值;
-	 *     <h3>以下属性，编译器会内联优化，无法通过反射修改：</h3>
+	 *     <p>以下属性，编译器会内联优化，无法通过反射修改：</p>
 	 *     <ul>
 	 *         <li> 基本类型 byte, char, short, int, long, float, double, boolean</li>
 	 *         <li> Literal String 类型(直接双引号字符串)</li>
@@ -282,11 +282,13 @@ public static boolean isAbstract(Method method) {
 	 *     </ul>
 	 * </p>
 	 * <pre class="code">
+	 * {@code
 	 *      //示例，移除final修饰符
 	 *      class JdbcDialects {private static final List<Number> dialects = new ArrayList<>();}
 	 *      Field field = ReflectUtil.getField(JdbcDialects.class, fieldName);
 	 * 		ReflectUtil.removeFinalModify(field);
 	 * 		ReflectUtil.setFieldValue(JdbcDialects.class, fieldName, dialects);
+	 * 	}
 	 * </pre>
 	 * @param field 被修改的field，不可以为空
 	 * @throws UtilException IllegalAccessException等异常包装

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -1114,7 +1114,7 @@ public static <T extends AccessibleObject> T setAccessible(T accessibleObject) {
 	 * 设置final的field字段可以被修改
 	 * <p>
 	 *     只要不会被编译器内联优化的 final 属性就可以通过反射有效的进行修改 --  修改后代码中可使用到新的值;
-	 *     <h3>以下属性，编译器会内联优化，无法通过反射修改：</h3>
+	 *     <p>以下属性，编译器会内联优化，无法通过反射修改：</p>
 	 *     <ul>
 	 *         <li> 基本类型 byte, char, short, int, long, float, double, boolean</li>
 	 *         <li> Literal String 类型(直接双引号字符串)</li>
@@ -1127,11 +1127,13 @@ public static <T extends AccessibleObject> T setAccessible(T accessibleObject) {
 	 *     </ul>
 	 * </p>
 	 * <pre class="code">
+	 * {@code
 	 *      //示例，移除final修饰符
 	 *      class JdbcDialects {private static final List<Number> dialects = new ArrayList<>();}
 	 *      Field field = ReflectUtil.getField(JdbcDialects.class, fieldName);
 	 * 		ReflectUtil.removeFinalModify(field);
 	 * 		ReflectUtil.setFieldValue(JdbcDialects.class, fieldName, dialects);
+	 * 	}
 	 * </pre>
 	 * @param field 被修改的field，不可以为空
 	 * @throws UtilException IllegalAccessException等异常包装

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -618,6 +618,7 @@ public static boolean isIn(ChronoLocalDateTime<?> date, ChronoLocalDateTime<?> b
 	 * 通过includeBegin, includeEnd参数控制时间范围区间是否为开区间，例如：传入参数：includeBegin=true, includeEnd=false，
 	 * 则本方法会判断 date ∈ (beginDate, endDate] 是否成立
 	 *
+	 * @param date 被判定的日期
 	 * @param beginDate    起始时间（包含）
 	 * @param endDate      结束时间（包含）
 	 * @param includeBegin 时间范围是否包含起始时间

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/TreeBuilder.java
Patch:
@@ -164,8 +164,9 @@ public <T> TreeBuilder<E> append(List<T> list, NodeParser<T, E> nodeParser) {
 	/**
 	 * 增加节点列表，增加的节点是不带子节点的
 	 *
-	 * @param list       Bean列表
 	 * @param <T>        Bean类型
+	 * @param list       Bean列表
+	 * @param rootId     根ID
 	 * @param nodeParser 节点转换器，用于定义一个Bean如何转换为Tree节点
 	 * @return this
 	 * @since 5.8.6

File: hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java
Patch:
@@ -249,6 +249,8 @@ public static <E extends Enum<E>, C> E getBy(Func1<E, C> condition, C value) {
 	/**
 	 * 通过 某字段对应值 获取 枚举，获取不到时为 {@code defaultEnum}
 	 *
+	 * @param <E>         枚举类型
+	 * @param <C>         字段类型
 	 * @param condition   条件字段
 	 * @param value       条件字段值
 	 * @param defaultEnum 条件找不到则返回结果使用这个

File: hutool-core/src/main/java/cn/hutool/core/util/ModifierUtil.java
Patch:
@@ -269,7 +269,6 @@ public static boolean isAbstract(Method method) {
 	 * 设置final的field字段可以被修改
 	 * <p>
 	 *     只要不会被编译器内联优化的 final 属性就可以通过反射有效的进行修改 --  修改后代码中可使用到新的值;
-	 *     <br/>
 	 *     <h3>以下属性，编译器会内联优化，无法通过反射修改：</h3>
 	 *     <ul>
 	 *         <li> 基本类型 byte, char, short, int, long, float, double, boolean</li>
@@ -282,13 +281,13 @@ public static boolean isAbstract(Method method) {
 	 *         <li>自定义java类</li>
 	 *     </ul>
 	 * </p>
-	 * <code>
+	 * <pre class="code">
 	 *      //示例，移除final修饰符
 	 *      class JdbcDialects {private static final List<Number> dialects = new ArrayList<>();}
 	 *      Field field = ReflectUtil.getField(JdbcDialects.class, fieldName);
 	 * 		ReflectUtil.removeFinalModify(field);
 	 * 		ReflectUtil.setFieldValue(JdbcDialects.class, fieldName, dialects);
-	 * </code>
+	 * </pre>
 	 * @param field 被修改的field，不可以为空
 	 * @throws UtilException IllegalAccessException等异常包装
 	 * @since 5.8.8

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -1114,7 +1114,6 @@ public static <T extends AccessibleObject> T setAccessible(T accessibleObject) {
 	 * 设置final的field字段可以被修改
 	 * <p>
 	 *     只要不会被编译器内联优化的 final 属性就可以通过反射有效的进行修改 --  修改后代码中可使用到新的值;
-	 *     <br/>
 	 *     <h3>以下属性，编译器会内联优化，无法通过反射修改：</h3>
 	 *     <ul>
 	 *         <li> 基本类型 byte, char, short, int, long, float, double, boolean</li>
@@ -1127,13 +1126,13 @@ public static <T extends AccessibleObject> T setAccessible(T accessibleObject) {
 	 *         <li>自定义java类</li>
 	 *     </ul>
 	 * </p>
-	 * <code>
+	 * <pre class="code">
 	 *      //示例，移除final修饰符
 	 *      class JdbcDialects {private static final List<Number> dialects = new ArrayList<>();}
 	 *      Field field = ReflectUtil.getField(JdbcDialects.class, fieldName);
 	 * 		ReflectUtil.removeFinalModify(field);
 	 * 		ReflectUtil.setFieldValue(JdbcDialects.class, fieldName, dialects);
-	 * </code>
+	 * </pre>
 	 * @param field 被修改的field，不可以为空
 	 * @throws UtilException IllegalAccessException等异常包装
 	 * @since 5.8.8

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3463,6 +3463,8 @@ public static String getMimeType(String filePath) {
 				contentType = "application/x-rar-compressed";
 			} else if (StrUtil.endWithIgnoreCase(filePath, ".7z")) {
 				contentType = "application/x-7z-compressed";
+			} else if (StrUtil.endWithIgnoreCase(filePath, ".wgt")) {
+				contentType = "application/widget";
 			}
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3463,6 +3463,8 @@ public static String getMimeType(String filePath) {
 				contentType = "application/x-rar-compressed";
 			} else if (StrUtil.endWithIgnoreCase(filePath, ".7z")) {
 				contentType = "application/x-7z-compressed";
+			} else if (StrUtil.endWithIgnoreCase(filePath, ".wgt")) {
+				contentType = "application/widget";
 			}
 		}
 

File: hutool-core/src/test/java/cn/hutool/core/collection/CollUtilTest.java
Patch:
@@ -834,7 +834,7 @@ public void subtractToListTest() {
 
 		final List<Long> result = CollUtil.subtractToList(list1, list2);
 		Assert.assertEquals(1, result.size());
-		Assert.assertEquals(1L, result.get(0), 1);
+		Assert.assertEquals(1L, (long)result.get(0));
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertToNumberTest.java
Patch:
@@ -36,7 +36,7 @@ public void dateToAtomicLongTest(){
 	@Test
 	public void toBigDecimalTest(){
 		BigDecimal bigDecimal = Convert.toBigDecimal("1.1f");
-		Assert.assertEquals(1.1f, bigDecimal.floatValue(), 1);
+		Assert.assertEquals(1.1f, bigDecimal.floatValue(), 0);
 
 		bigDecimal = Convert.toBigDecimal("1L");
 		Assert.assertEquals(1L, bigDecimal.longValue());

File: hutool-core/src/test/java/cn/hutool/core/math/MoneyTest.java
Patch:
@@ -16,8 +16,8 @@ public void yuanToCentTest() {
 	@Test
 	public void centToYuanTest() {
 		final Money money = new Money(1234, 56);
-		Assert.assertEquals(1234.56D, money.getAmount().doubleValue(), 2);
+		Assert.assertEquals(1234.56D, money.getAmount().doubleValue(), 0);
 
-		Assert.assertEquals(1234.56D, MathUtil.centToYuan(123456), 2);
+		Assert.assertEquals(1234.56D, MathUtil.centToYuan(123456), 0);
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/text/TextSimilarityTest.java
Patch:
@@ -16,7 +16,7 @@ public void similarDegreeTest() {
 		String b = "一个文本，独一无二的文本";
 
 		double degree = TextSimilarity.similar(a, b);
-		Assert.assertEquals(0.8571428571428571D, degree, 16);
+		Assert.assertEquals(0.8461538462D, degree, 0.01);
 
 		String similarPercent = TextSimilarity.similar(a, b, 2);
 		Assert.assertEquals("84.62%", similarPercent);
@@ -28,7 +28,7 @@ public void similarDegreeTest2() {
 		String b = "一个文本，独一无二的文本,#,>>?#$%^%$&^&^%";
 
 		double degree = TextSimilarity.similar(a, b);
-		Assert.assertEquals(0.8571428571428571D, degree, 16);
+		Assert.assertEquals(0.8461538462D, degree, 0.01);
 
 		String similarPercent = TextSimilarity.similar(a, b, 2);
 		Assert.assertEquals("84.62%", similarPercent);
@@ -37,6 +37,6 @@ public void similarDegreeTest2() {
 	@Test
 	public void similarTest(){
 		final double abd = TextSimilarity.similar("abd", "1111");
-		Assert.assertEquals(0, abd, 1);
+		Assert.assertEquals(0, abd, 0);
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/util/ArrayUtilTest.java
Patch:
@@ -197,7 +197,7 @@ public void maxTest() {
 		Assert.assertEquals(13, maxLong);
 
 		double maxDouble = ArrayUtil.max(1D, 2.4D, 13.0D, 4.55D, 5D);
-		Assert.assertEquals(13.0, maxDouble, 2);
+		Assert.assertEquals(13.0, maxDouble, 0);
 
 		BigDecimal one = new BigDecimal("1.00");
 		BigDecimal two = new BigDecimal("2.0");
@@ -220,7 +220,7 @@ public void minTest() {
 		Assert.assertEquals(1, minLong);
 
 		double minDouble = ArrayUtil.min(1D, 2.4D, 13.0D, 4.55D, 5D);
-		Assert.assertEquals(1.0, minDouble, 2);
+		Assert.assertEquals(1.0, minDouble, 0);
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/util/ByteUtilTest.java
Patch:
@@ -97,7 +97,7 @@ public void floatAndBytesLittleEndianTest() {
 
 		byte[] bytesLong = ByteUtil.floatToBytes(f1, ByteOrder.LITTLE_ENDIAN);
 		float f2 = ByteUtil.bytesToFloat(bytesLong, ByteOrder.LITTLE_ENDIAN);
-		Assert.assertEquals(f1, f2, 2);
+		Assert.assertEquals(f1, f2, 0);
 	}
 
 	@Test
@@ -108,7 +108,7 @@ public void floatAndBytesBigEndianTest() {
 		byte[] bytesLong = ByteUtil.floatToBytes(f1, ByteOrder.BIG_ENDIAN);
 		float f2 = ByteUtil.bytesToFloat(bytesLong, ByteOrder.BIG_ENDIAN);
 
-		Assert.assertEquals(f1, f2, 2);
+		Assert.assertEquals(f1, f2, 0);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AbstractTypeAnnotationScanner.java
Patch:
@@ -164,7 +164,7 @@ protected T setIncludeInterfaces(boolean includeInterfaces) {
 	 */
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
+		filter = ObjectUtil.defaultIfNull(filter, a -> annotation -> true);
 		final Class<?> sourceClass = getClassFormAnnotatedElement(annotatedEle);
 		final Deque<List<Class<?>>> classDeque = CollUtil.newLinkedList(CollUtil.newArrayList(sourceClass));
 		final Set<Class<?>> accessedTypes = new LinkedHashSet<>();

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AnnotationScanner.java
Patch:
@@ -174,7 +174,7 @@ default List<Annotation> getAnnotationsIfSupport(AnnotatedElement annotatedEle)
 	 * @param filter       注解过滤器，无法通过过滤器的注解不会被处理。该参数允许为空。
 	 */
 	default void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
+		filter = ObjectUtil.defaultIfNull(filter, (a)->annotation -> true);
 		for (final Annotation annotation : annotatedEle.getAnnotations()) {
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 				consumer.accept(0, annotation);

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/ElementAnnotationScanner.java
Patch:
@@ -35,7 +35,7 @@ public boolean support(AnnotatedElement annotatedEle) {
 	 */
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, t -> true);
+		filter = ObjectUtil.defaultIfNull(filter,a-> t -> true);
 		Stream.of(annotatedEle.getAnnotations())
 			.filter(filter)
 			.forEach(annotation -> consumer.accept(0, annotation));

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/FieldAnnotationScanner.java
Patch:
@@ -36,7 +36,7 @@ public boolean support(AnnotatedElement annotatedEle) {
 	 */
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
+		filter = ObjectUtil.defaultIfNull(filter, a -> annotation -> true);
 		for (final Annotation annotation : annotatedEle.getAnnotations()) {
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 				consumer.accept(0, annotation);

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -160,7 +160,7 @@ public DateTime(Date date) {
 	 * @since 4.1.2
 	 */
 	public DateTime(Date date, TimeZone timeZone) {
-		this(ObjectUtil.defaultIfNull(date, Date::new).getTime(), timeZone);
+		this(ObjectUtil.defaultIfNull(date, new Date()).getTime(), timeZone);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -117,7 +117,7 @@ public String toString(String charsetName) {
 	 */
 	public String toString(Charset charset) {
 		return new String(toByteArray(),
-				ObjectUtil.defaultIfNull(charset, CharsetUtil::defaultCharset));
+				ObjectUtil.defaultIfNull(charset, CharsetUtil.defaultCharset()));
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/ResourceClassLoader.java
Patch:
@@ -31,7 +31,7 @@ public class ResourceClassLoader<T extends Resource> extends SecureClassLoader {
 	 */
 	public ResourceClassLoader(ClassLoader parentClassLoader, Map<String, T> resourceMap) {
 		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil::getClassLoader));
-		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, HashMap::new);
+		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, new HashMap<>());
 		this.cacheClassMap = new HashMap<>();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/map/LinkedForestMap.java
Patch:
@@ -442,7 +442,7 @@ public V setValue(V value) {
 		 */
 		TreeEntryNode<K, V> traverseParentNodes(
 				boolean includeCurrent, Consumer<TreeEntryNode<K, V>> consumer, Predicate<TreeEntryNode<K, V>> breakTraverse) {
-			breakTraverse = ObjectUtil.defaultIfNull(breakTraverse, n -> false);
+			breakTraverse = ObjectUtil.defaultIfNull(breakTraverse, a -> n -> false);
 			TreeEntryNode<K, V> curr = includeCurrent ? this : this.parent;
 			while (ObjectUtil.isNotNull(curr)) {
 				consumer.accept(curr);

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AbstractTypeAnnotationScanner.java
Patch:
@@ -164,7 +164,7 @@ protected T setIncludeInterfaces(boolean includeInterfaces) {
 	 */
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
+		filter = ObjectUtil.defaultIfNull(filter, a -> annotation -> true);
 		final Class<?> sourceClass = getClassFormAnnotatedElement(annotatedEle);
 		final Deque<List<Class<?>>> classDeque = CollUtil.newLinkedList(CollUtil.newArrayList(sourceClass));
 		final Set<Class<?>> accessedTypes = new LinkedHashSet<>();

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AnnotationScanner.java
Patch:
@@ -174,7 +174,7 @@ default List<Annotation> getAnnotationsIfSupport(AnnotatedElement annotatedEle)
 	 * @param filter       注解过滤器，无法通过过滤器的注解不会被处理。该参数允许为空。
 	 */
 	default void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
+		filter = ObjectUtil.defaultIfNull(filter, (a)->annotation -> true);
 		for (final Annotation annotation : annotatedEle.getAnnotations()) {
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 				consumer.accept(0, annotation);

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/ElementAnnotationScanner.java
Patch:
@@ -35,7 +35,7 @@ public boolean support(AnnotatedElement annotatedEle) {
 	 */
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, t -> true);
+		filter = ObjectUtil.defaultIfNull(filter,a-> t -> true);
 		Stream.of(annotatedEle.getAnnotations())
 			.filter(filter)
 			.forEach(annotation -> consumer.accept(0, annotation));

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/FieldAnnotationScanner.java
Patch:
@@ -36,7 +36,7 @@ public boolean support(AnnotatedElement annotatedEle) {
 	 */
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
-		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
+		filter = ObjectUtil.defaultIfNull(filter, a -> annotation -> true);
 		for (final Annotation annotation : annotatedEle.getAnnotations()) {
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 				consumer.accept(0, annotation);

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -160,7 +160,7 @@ public DateTime(Date date) {
 	 * @since 4.1.2
 	 */
 	public DateTime(Date date, TimeZone timeZone) {
-		this(ObjectUtil.defaultIfNull(date, Date::new).getTime(), timeZone);
+		this(ObjectUtil.defaultIfNull(date, new Date()).getTime(), timeZone);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -117,7 +117,7 @@ public String toString(String charsetName) {
 	 */
 	public String toString(Charset charset) {
 		return new String(toByteArray(),
-				ObjectUtil.defaultIfNull(charset, CharsetUtil::defaultCharset));
+				ObjectUtil.defaultIfNull(charset, CharsetUtil.defaultCharset()));
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/ResourceClassLoader.java
Patch:
@@ -31,7 +31,7 @@ public class ResourceClassLoader<T extends Resource> extends SecureClassLoader {
 	 */
 	public ResourceClassLoader(ClassLoader parentClassLoader, Map<String, T> resourceMap) {
 		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil::getClassLoader));
-		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, HashMap::new);
+		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, new HashMap<>());
 		this.cacheClassMap = new HashMap<>();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/map/LinkedForestMap.java
Patch:
@@ -442,7 +442,7 @@ public V setValue(V value) {
 		 */
 		TreeEntryNode<K, V> traverseParentNodes(
 				boolean includeCurrent, Consumer<TreeEntryNode<K, V>> consumer, Predicate<TreeEntryNode<K, V>> breakTraverse) {
-			breakTraverse = ObjectUtil.defaultIfNull(breakTraverse, n -> false);
+			breakTraverse = ObjectUtil.defaultIfNull(breakTraverse, a -> n -> false);
 			TreeEntryNode<K, V> curr = includeCurrent ? this : this.parent;
 			while (ObjectUtil.isNotNull(curr)) {
 				consumer.accept(curr);

File: hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java
Patch:
@@ -55,7 +55,7 @@ public T convert(Object value, T defaultValue) {
 				// 除Map外，已经是目标类型，不需要转换（Map类型涉及参数类型，需要单独转换）
 				return targetType.cast(value);
 			}
-			T result = convertInternal(value);
+			final T result = convertInternal(value);
 			return ((null == result) ? defaultValue : result);
 		} else {
 			throw new IllegalArgumentException(

File: hutool-json/src/main/java/cn/hutool/json/JSONConverter.java
Patch:
@@ -80,7 +80,7 @@ protected static <T> T jsonConvert(Type targetType, Object value, boolean ignore
 			final Class<?> clazz = (Class<?>) targetType;
 			if (JSONBeanParser.class.isAssignableFrom(clazz)){
 				@SuppressWarnings("rawtypes")
-				JSONBeanParser target = (JSONBeanParser) ReflectUtil.newInstanceIfPossible(clazz);
+				final JSONBeanParser target = (JSONBeanParser) ReflectUtil.newInstanceIfPossible(clazz);
 				if(null == target){
 					throw new ConvertException("Can not instance [{}]", targetType);
 				}

File: hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java
Patch:
@@ -199,7 +199,7 @@ static CopyOptions toCopyOptions(JSONConfig config) {
 	 * @return Map
 	 */
 	static Map<String, Object> createRawMap(int capacity, JSONConfig config) {
-		Map<String, Object> rawHashMap;
+		final Map<String, Object> rawHashMap;
 		if (null == config) {
 			config = JSONConfig.create();
 		}

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -285,8 +285,8 @@ public <T> T convert(Type type, Object value, T defaultValue, boolean isCustomFi
 				final Class<?> clazz = ClassLoaderUtil.loadClass("cn.hutool.json.BeanConverterForJSON");
 				return ((Converter<T>)ReflectUtil.newInstance(clazz, type)).convert(value, defaultValue);
 			}catch (final Throwable ignore){
-				return new BeanConverter<T>(type).convert(value, defaultValue);
 			}
+			return new BeanConverter<T>(type).convert(value, defaultValue);
 		}
 
 		// 无法转换

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/BeanConverter.java
Patch:
@@ -31,7 +31,7 @@ public class BeanConverter<T> extends AbstractConverter<T> {
 
 	private final Type beanType;
 	private final Class<T> beanClass;
-	protected CopyOptions copyOptions;
+	private final CopyOptions copyOptions;
 
 	/**
 	 * 构造，默认转换选项，注入失败的字段忽略

File: hutool-json/src/test/java/cn/hutool/json/Issue2447Test.java
Patch:
@@ -12,7 +12,7 @@ public void addInteger() {
 		Time time = new Time();
 		time.setTime(LocalDateTime.of(1970, 1, 2, 10, 0, 1, 0));
 		String timeStr = JSONUtil.toJsonStr(time);
-		Assert.assertEquals(timeStr, "{\"time\":93601000}");
+		Assert.assertEquals("{\"time\":93601000}", timeStr);
 		Assert.assertEquals(JSONUtil.toBean(timeStr, Time.class).getTime(), time.getTime());
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -1,5 +1,7 @@
 package cn.hutool.core.thread;
 
+import cn.hutool.core.util.RuntimeUtil;
+
 import java.lang.Thread.UncaughtExceptionHandler;
 import java.util.concurrent.Callable;
 import java.util.concurrent.CompletionService;
@@ -126,7 +128,7 @@ public static ThreadPoolExecutor newExecutorByBlockingCoefficient(float blocking
 		}
 
 		// 最佳的线程数 = CPU可用核心数 / (1 - 阻塞系数)
-		int poolSize = (int) (Runtime.getRuntime().availableProcessors() / (1 - blockingCoefficient));
+		int poolSize = (int) (RuntimeUtil.getProcessorCount() / (1 - blockingCoefficient));
 		return ExecutorBuilder.create().setCorePoolSize(poolSize).setMaxPoolSize(poolSize).setKeepAliveTime(0L).build();
 	}
 

File: hutool-socket/src/test/java/cn/hutool/socket/aio/AioClientTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.lang.Console;
 import cn.hutool.core.thread.ThreadFactoryBuilder;
+import cn.hutool.core.util.RuntimeUtil;
 import cn.hutool.core.util.StrUtil;
 
 import java.io.IOException;
@@ -12,7 +13,7 @@
 public class AioClientTest {
 	public static void main(String[] args) throws IOException {
 		final AsynchronousChannelGroup GROUP = AsynchronousChannelGroup.withFixedThreadPool(//
-				Runtime.getRuntime().availableProcessors(), // 默认线程池大小
+				RuntimeUtil.getProcessorCount(), // 默认线程池大小
 				ThreadFactoryBuilder.create().setNamePrefix("Huool-socket-").build()//
 		);
 

File: hutool-json/src/test/java/cn/hutool/json/Issue2572Test.java
Patch:
@@ -19,7 +19,7 @@ public void putDayOfWeekTest(){
 		weeks.add(DayOfWeek.MONDAY);
 		final JSONObject obj = new JSONObject();
 		obj.set("weeks", weeks);
-		Assert.assertEquals("{\"weeks\":[\"MONDAY\"]}", obj.toString());
+		Assert.assertEquals("{\"weeks\":[1]}", obj.toString());
 
 		final Map<String, Set<DayOfWeek>> monthDays1 = obj.toBean(new TypeReference<Map<String, Set<DayOfWeek>>>() {
 		});

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONWriter.java
Patch:
@@ -267,7 +267,7 @@ private JSONWriter writeObjValue(Object value, Filter<MutablePair<Object, Object
 		} else if (value instanceof Date || value instanceof Calendar || value instanceof TemporalAccessor) {
 			// issue#2572@Github
 			if(value instanceof TemporalAccessor){
-				if(value instanceof DayOfWeek || value instanceof java.time.Month || value instanceof Era || value instanceof MonthDay){
+				if(value instanceof DayOfWeek || value instanceof Era || value instanceof MonthDay){
 					writeStrValue(value.toString());
 					return this;
 				}

File: hutool-json/src/test/java/cn/hutool/json/Issue2572Test.java
Patch:
@@ -32,7 +32,7 @@ public void putMonthTest(){
 		months.add(Month.DECEMBER);
 		final JSONObject obj = new JSONObject();
 		obj.set("months", months);
-		Assert.assertEquals("{\"months\":[\"DECEMBER\"]}", obj.toString());
+		Assert.assertEquals("{\"months\":[12]}", obj.toString());
 
 		final Map<String, Set<Month>> monthDays1 = obj.toBean(new TypeReference<Map<String, Set<Month>>>() {
 		});

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -698,7 +698,7 @@ public void toUnderLineCaseTest() {
 				.set("d", true);
 
 		final String s = json1.toJSONString(0, (pair) -> {
-			pair.setKey(StrUtil.toUnderlineCase(pair.getKey()));
+			pair.setKey(StrUtil.toUnderlineCase(pair.getKey().toString()));
 			return true;
 		});
 		Assert.assertEquals("{\"a_key\":\"value1\",\"b_job\":\"value2\",\"c_good\":\"value3\",\"d\":true}", s);

File: hutool-core/src/main/java/cn/hutool/core/io/FileTypeUtil.java
Patch:
@@ -194,6 +194,8 @@ public static String getType(InputStream in, String filename) {
 			} else if ("pptx".equalsIgnoreCase(extName)) {
 				// issue#I5A0GO
 				typeName = "pptx";
+			} else if ("zip".equalsIgnoreCase(extName)) {
+				typeName = "zip";
 			}
 		}
 		return typeName;

File: hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java
Patch:
@@ -549,11 +549,11 @@ public static String randomString(String baseString, int length) {
 		if (StrUtil.isEmpty(baseString)) {
 			return StrUtil.EMPTY;
 		}
-		final StringBuilder sb = new StringBuilder(length);
-
 		if (length < 1) {
 			length = 1;
 		}
+
+		final StringBuilder sb = new StringBuilder(length);
 		int baseLength = baseString.length();
 		for (int i = 0; i < length; i++) {
 			int number = randomInt(baseLength);

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -836,6 +836,9 @@ public static <T> T newInstance(String clazz) throws UtilException {
 	public static <T> T newInstance(Class<T> clazz, Object... params) throws UtilException {
 		if (ArrayUtil.isEmpty(params)) {
 			final Constructor<T> constructor = getConstructor(clazz);
+			if(null == constructor){
+				throw new UtilException("No constructor for [{}]", clazz);
+			}
 			try {
 				return constructor.newInstance();
 			} catch (Exception e) {

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -3722,7 +3722,6 @@ public static String replace(CharSequence str, int startInclude, int endExclude,
 	/**
 	 * 替换所有正则匹配的文本，并使用自定义函数决定如何替换<br>
 	 * replaceFun可以通过{@link Matcher}提取出匹配到的内容的不同部分，然后经过重新处理、组装变成新的内容放回原位。
-	 *
 	 * <pre class="code">
 	 *     replace(this.content, "(\\d+)", parameters -&gt; "-" + parameters.group(1) + "-")
 	 *     // 结果为："ZZZaaabbbccc中文-1234-"

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertToBeanTest.java
Patch:
@@ -70,7 +70,6 @@ public void mapToMapTest() {
 	}
 	@Test
 	public void mapToMapWithSelfTypeTest() {
-
 		CaseInsensitiveMap<String, Integer> caseInsensitiveMap = new CaseInsensitiveMap<>();
 		caseInsensitiveMap.put("jerry", 1);
 		caseInsensitiveMap.put("Jerry", 2);

File: hutool-json/src/main/java/cn/hutool/json/JSONParser.java
Patch:
@@ -69,7 +69,7 @@ public void parseTo(JSONObject jsonObject, Filter<MutablePair<String, Object>> f
 				throw tokener.syntaxError("Expected a ':' after a key");
 			}
 
-			jsonObject.setOnce(key, tokener.nextValue(), filter);
+			jsonObject.set(key, tokener.nextValue(), filter, jsonObject.getConfig().isCheckDuplicate());
 
 			// Pairs are separated by ','.
 

File: hutool-json/src/main/java/cn/hutool/json/ObjectMapper.java
Patch:
@@ -88,11 +88,11 @@ public void map(JSONObject jsonObject, Filter<MutablePair<String, Object>> filte
 		if (source instanceof Map) {
 			// Map
 			for (final Map.Entry<?, ?> e : ((Map<?, ?>) source).entrySet()) {
-				jsonObject.set(Convert.toStr(e.getKey()), e.getValue(), filter, false);
+				jsonObject.set(Convert.toStr(e.getKey()), e.getValue(), filter, jsonObject.getConfig().isCheckDuplicate());
 			}
 		} else if (source instanceof Map.Entry) {
 			final Map.Entry entry = (Map.Entry) source;
-			jsonObject.set(Convert.toStr(entry.getKey()), entry.getValue(), filter, false);
+			jsonObject.set(Convert.toStr(entry.getKey()), entry.getValue(), filter, jsonObject.getConfig().isCheckDuplicate());
 		} else if (source instanceof CharSequence) {
 			// 可能为JSON字符串
 			mapFromStr((CharSequence) source, jsonObject, filter);

File: hutool-core/src/main/java/cn/hutool/core/lang/Console.java
Patch:
@@ -86,7 +86,7 @@ public static void log(Throwable t, String template, Object... values) {
 		out.println(StrUtil.format(template, values));
 		if (null != t) {
 			//noinspection CallToPrintStackTrace
-			t.printStackTrace();
+			t.printStackTrace(out);
 			out.flush();
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/annotation/AbstractLinkAnnotationPostProcessor.java
Patch:
@@ -107,7 +107,7 @@ protected SynthesizedAnnotation getLinkedAnnotation(Link annotation, AnnotationS
 	}
 
 	/**
-	 * 若{@link Link#annotation()}获取的类型{@link Annotation#getClass()}，则返回{@code defaultType}，
+	 * 若{@link Link#annotation()}获取的类型{@code Annotation#getClass()}，则返回{@code defaultType}，
 	 * 否则返回{@link Link#annotation()}指定的类型
 	 *
 	 * @param annotation  {@link Link}注解

File: hutool-core/src/main/java/cn/hutool/core/annotation/AnnotationAttribute.java
Patch:
@@ -84,6 +84,7 @@ default Class<?> getAttributeType() {
 	/**
 	 * 获取属性上的注解
 	 *
+	 * @param <T> 注解类型
 	 * @param annotationType 注解类型
 	 * @return 注解对象
 	 */

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AbstractTypeAnnotationScanner.java
Patch:
@@ -222,6 +222,7 @@ public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement anno
 	 *
 	 * @param accessedTypes 访问类型
 	 * @param targetClass   目标类型
+	 * @return 是否不需要处理
 	 */
 	protected boolean isNotNeedProcess(Set<Class<?>> accessedTypes, Class<?> targetClass) {
 		return ObjectUtil.isNull(targetClass)

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -442,7 +442,8 @@ public static <T> List<T> setOrPadding(List<T> list, int index, T element, T pad
 	 * @param end   结束位置（不包含）
 	 * @return 截取后的数组，当开始位置超过最大时，返回空的List
 	 */
-	public static <T> List<T> sub(List<T> list, int start, int end) {
+	public static <T> List<T>
+	sub(List<T> list, int start, int end) {
 		return sub(list, start, end, 1);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/collection/Partition.java
Patch:
@@ -24,7 +24,7 @@ public class Partition<T> extends AbstractList<List<T>> {
 	 * 列表分区
 	 *
 	 * @param list 被分区的列表，非空
-	 * @param size 每个分区的长度，必须>0
+	 * @param size 每个分区的长度，必须&gt;0
 	 */
 	public Partition(List<T> list, int size) {
 		this.list = Assert.notNull(list);

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/TemporalAccessorConverter.java
Patch:
@@ -94,6 +94,8 @@ public Class<TemporalAccessor> getTargetType() {
 	protected TemporalAccessor convertInternal(Object value) {
 		if (value instanceof Long) {
 			return parseFromLong((Long) value);
+		} else if (value instanceof Integer) {
+			return parseFromLong((long) (Integer) value);
 		} else if (value instanceof TemporalAccessor) {
 			return parseFromTemporalAccessor((TemporalAccessor) value);
 		} else if (value instanceof Date) {

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/TemporalAccessorConverter.java
Patch:
@@ -94,6 +94,8 @@ public Class<TemporalAccessor> getTargetType() {
 	protected TemporalAccessor convertInternal(Object value) {
 		if (value instanceof Long) {
 			return parseFromLong((Long) value);
+		} else if (value instanceof Integer) {
+			return parseFromLong((long) (Integer) value);
 		} else if (value instanceof TemporalAccessor) {
 			return parseFromTemporalAccessor((TemporalAccessor) value);
 		} else if (value instanceof Date) {

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/MethodAnnotationScanner.java
Patch:
@@ -96,7 +96,7 @@ protected Annotation[] getAnnotationsFromTargetClass(AnnotatedElement source, in
 	 */
 	public MethodAnnotationScanner setScanSameSignatureMethod(boolean scanSuperMethodIfOverride) {
 		setIncludeInterfaces(scanSuperMethodIfOverride);
-		setIncludeSupperClass(scanSuperMethodIfOverride);
+		setIncludeSuperClass(scanSuperMethodIfOverride);
 		return this;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/TypeAnnotationScanner.java
Patch:
@@ -73,12 +73,12 @@ protected Annotation[] getAnnotationsFromTargetClass(AnnotatedElement source, in
 	/**
 	 * 是否允许扫描父类
 	 *
-	 * @param includeSupperClass 是否允许扫描父类
+	 * @param includeSuperClass 是否允许扫描父类
 	 * @return 当前实例
 	 */
 	@Override
-	public TypeAnnotationScanner setIncludeSupperClass(boolean includeSupperClass) {
-		return super.setIncludeSupperClass(includeSupperClass);
+	public TypeAnnotationScanner setIncludeSuperClass(boolean includeSuperClass) {
+		return super.setIncludeSuperClass(includeSuperClass);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java
Patch:
@@ -140,7 +140,7 @@ public class PatternPool {
 	public final static Pattern PLATE_NUMBER = Pattern.compile(RegexPool.PLATE_NUMBER);
 
 	/**
-	 * 社会统一信用代码
+	 * 统一社会信用代码
 	 * <pre>
 	 * 第一部分：登记管理部门代码1位 (数字或大写英文字母)
 	 * 第二部分：机构类别代码1位 (数字或大写英文字母)

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -150,7 +150,7 @@ public interface RegexPool {
 					"([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]))$";
 
 	/**
-	 * 社会统一信用代码
+	 * 统一社会信用代码
 	 * <pre>
 	 * 第一部分：登记管理部门代码1位 (数字或大写英文字母)
 	 * 第二部分：机构类别代码1位 (数字或大写英文字母)

File: hutool-core/src/main/java/cn/hutool/core/map/LinkedForestMap.java
Patch:
@@ -219,8 +219,8 @@ public TreeEntryNode<K, V> putNode(K key, V value) {
 	 * </ul>
 	 * 该操作等同于：
 	 * <pre>
-	 *     TreeEntry<K, V>  parent = putNode(parentKey, parentValue);
-	 *     TreeEntry<K, V>  child = putNode(childKey, childValue);
+	 *     TreeEntry&lt;K, V&gt;  parent = putNode(parentKey, parentValue);
+	 *     TreeEntry&lt;K, V&gt;  child = putNode(childKey, childValue);
 	 *     linkNodes(parentKey, childKey);
 	 * </pre>
 	 *

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AbstractTypeAnnotationScanner.java
Patch:
@@ -264,6 +264,7 @@ protected void scanSuperClassIfNecessary(List<Class<?>> nextClassQueue, Class<?>
 	 * 若存在转换器，则使用转换器对目标类进行转换
 	 *
 	 * @param target 目标类
+	 * @return 转换后的类
 	 */
 	protected Class<?> convert(Class<?> target) {
 		if (hasConverters) {

File: hutool-core/src/main/java/cn/hutool/core/map/LinkedForestMap.java
Patch:
@@ -110,7 +110,7 @@ public TreeEntry<K, V> get(Object key) {
 	 *     <li>若存在父节点或子节点，则将其断开其与父节点或子节点的引用关系；</li>
 	 *     <li>
 	 *         若同时存在父节点或子节点，则会在删除后将让子节点直接成为父节点的子节点，比如：<br>
-	 *         现有引用关系 a -> b -> c，删除 b 后，将有 a -> c
+	 *         现有引用关系 a -&gt; b -&gt; c，删除 b 后，将有 a -&gt; c
 	 *     </li>
 	 * </ul>
 	 *

File: hutool-core/src/main/java/cn/hutool/core/annotation/SynthesizedAnnotationSelector.java
Patch:
@@ -32,6 +32,7 @@ public interface SynthesizedAnnotationSelector {
 	/**
 	 * 比较两个被合成的注解，选择其中的一个并返回
 	 *
+	 * @param <T>           复合注解类型
 	 * @param oldAnnotation 已存在的注解，该参数不允许为空
 	 * @param newAnnotation 新获取的注解，该参数不允许为空
 	 * @return 被合成的注解

File: hutool-core/src/main/java/cn/hutool/core/annotation/SynthesizedAnnotationAttributeProcessor.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.Collection;
 
 /**
- * 合成注解属性选择器。用于中合成注解中从指定类型的注解里获取到对应的属性值
+ * 合成注解属性选择器。用于在{@link SyntheticAnnotation}中从指定类型的合成注解里获取到对应的属性值
  *
  * @author huangchengxing
  */
@@ -13,8 +13,8 @@ public interface SynthesizedAnnotationAttributeProcessor {
 	/**
 	 * 从一批被合成注解中，获取指定名称与类型的属性值
 	 *
-	 * @param attributeName 属性名称
-	 * @param attributeType 属性类型
+	 * @param attributeName          属性名称
+	 * @param attributeType          属性类型
 	 * @param synthesizedAnnotations 被合成的注解
 	 * @param <R> 属性类型
 	 * @return 属性值

File: hutool-core/src/main/java/cn/hutool/core/annotation/SyntheticAnnotationProxy.java
Patch:
@@ -86,7 +86,7 @@ void loadMethods() {
 		methods.put("hasAttribute", (method, args) -> annotation.hasAttribute((String)args[0], (Class<?>)args[1]));
 		methods.put("getAttribute", (method, args) -> annotation.getAttribute((String)args[0]));
 		methods.put("annotationType", (method, args) -> annotation.annotationType());
-		for (Method declaredMethod : annotation.getAnnotation().annotationType().getDeclaredMethods()) {
+		for (final Method declaredMethod : annotation.getAnnotation().annotationType().getDeclaredMethods()) {
 			methods.put(declaredMethod.getName(), (method, args) -> proxyAttributeValue(method));
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/map/TreeEntry.java
Patch:
@@ -119,7 +119,7 @@ default boolean containsParent(K key) {
 	 * @return 是否
 	 */
 	default boolean hasChildren() {
-		return CollUtil.isEmpty(getDeclaredChildren());
+		return CollUtil.isNotEmpty(getDeclaredChildren());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AbstractTypeAnnotationScanner.java
Patch:
@@ -256,7 +256,7 @@ protected void scanSuperClassIfNecessary(List<Class<?>> nextClassQueue, Class<?>
 	 */
 	protected Class<?> convert(Class<?> target) {
 		if (hasConverters) {
-			for (UnaryOperator<Class<?>> converter : converters) {
+			for (final UnaryOperator<Class<?>> converter : converters) {
 				target = converter.apply(target);
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/AnnotationScanner.java
Patch:
@@ -70,7 +70,7 @@ default List<Annotation> getIfSupport(AnnotatedElement annotatedEle) {
 	 */
 	default void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
 		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
-		for (Annotation annotation : annotatedEle.getAnnotations()) {
+		for (final Annotation annotation : annotatedEle.getAnnotations()) {
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 				consumer.accept(0, annotation);
 			}

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/FieldAnnotationScanner.java
Patch:
@@ -37,7 +37,7 @@ public boolean support(AnnotatedElement annotatedEle) {
 	@Override
 	public void scan(BiConsumer<Integer, Annotation> consumer, AnnotatedElement annotatedEle, Predicate<Annotation> filter) {
 		filter = ObjectUtil.defaultIfNull(filter, annotation -> true);
-		for (Annotation annotation : annotatedEle.getAnnotations()) {
+		for (final Annotation annotation : annotatedEle.getAnnotations()) {
 			if (AnnotationUtil.isNotJdkMateAnnotation(annotation.annotationType()) && filter.test(annotation)) {
 				consumer.accept(0, annotation);
 			}

File: hutool-core/src/main/java/cn/hutool/core/annotation/scanner/MetaAnnotationScanner.java
Patch:
@@ -67,8 +67,8 @@ public boolean support(AnnotatedElement annotatedEle) {
 	public List<Annotation> getAnnotations(AnnotatedElement annotatedEle) {
 		final List<Annotation> annotations = new ArrayList<>();
 		scan(
-			(index, annotation) -> annotations.add(annotation), annotatedEle,
-			annotation -> ObjectUtil.notEqual(annotation, annotatedEle)
+				(index, annotation) -> annotations.add(annotation), annotatedEle,
+				annotation -> ObjectUtil.notEqual(annotation, annotatedEle)
 		);
 		return annotations;
 	}

File: hutool-core/src/main/java/cn/hutool/core/annotation/AnnotationUtil.java
Patch:
@@ -151,7 +151,7 @@ public static <T> T[] getAnnotations(AnnotatedElement annotationEle, boolean isT
 	 */
 	public static Annotation[] getAnnotations(AnnotatedElement annotationEle, boolean isToCombination, Predicate<Annotation> predicate) {
 		if (null == annotationEle) {
-			return null;
+			return new Annotation[0];
 		}
 
 		if (isToCombination) {
@@ -438,7 +438,7 @@ public static List<Annotation> scanMethod(Method method) {
 	}
 
 	/**
-	 * 方法是否为注解属性方法。 <br />
+	 * 方法是否为注解属性方法。 <br>
 	 * 方法无参数，且有返回值的方法认为是注解属性的方法。
 	 *
 	 * @param method 方法

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1281,11 +1281,10 @@ public static boolean isDouble(String s) {
 		}
 		try {
 			Double.parseDouble(s);
-			return s.contains(".");
 		} catch (NumberFormatException ignore) {
-			// ignore
+			return false;
 		}
-		return false;
+		return s.contains(".");
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1285,7 +1285,7 @@ public static boolean isDouble(String s) {
 		} catch (NumberFormatException ignore) {
 			// ignore
 		}
-		return true;
+		return false;
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -2671,6 +2671,9 @@ public static BigInteger fromUnsignedByteArray(byte[] buf, int off, int length)
 	 * @since 4.6.7
 	 */
 	public static boolean isValidNumber(Number number) {
+		if(null == number){
+			return false;
+		}
 		if (number instanceof Double) {
 			return (false == ((Double) number).isInfinite()) && (false == ((Double) number).isNaN());
 		} else if (number instanceof Float) {

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1285,7 +1285,7 @@ public static boolean isDouble(String s) {
 		} catch (NumberFormatException ignore) {
 			// ignore
 		}
-		return true;
+		return false;
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/date/chinese/LunarInfo.java
Patch:
@@ -20,7 +20,7 @@ public class LunarInfo {
 	public static final long BASE_DAY = LocalDate.of(BASE_YEAR, 1, 31).toEpochDay();
 
 	/**
-	 * 此表来自：https://github.com/jjonline/calendar.js/blob/master/calendar.js
+	 * 此表来自：<a href="https://github.com/jjonline/calendar.js/blob/master/calendar.js">https://github.com/jjonline/calendar.js/blob/master/calendar.js</a>
 	 * 农历表示：
 	 * 1.  表示当年有无闰年，有的话，为闰月的月份，没有的话，为0。
 	 * 2-4.为除了闰月外的正常月份是大月还是小月，1为30天，0为29天。

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -689,7 +689,7 @@ public static <T> List<T> edit(Iterable<T> iter, Editor<T> editor) {
 		for (T t : iter) {
 			modified = (null == editor) ? t : editor.edit(t);
 			if (null != modified) {
-				result.add(t);
+				result.add(modified);
 			}
 		}
 		return result;

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java
Patch:
@@ -68,7 +68,7 @@ protected Number convertInternal(Object value) {
 	@Override
 	protected String convertToStr(Object value) {
 		String result = StrUtil.trim(super.convertToStr(value));
-		if (StrUtil.isNotEmpty(result)) {
+		if (null != result && result.length() > 1) {
 			final char c = Character.toUpperCase(result.charAt(result.length() - 1));
 			if (c == 'D' || c == 'L' || c == 'F') {
 				// 类型标识形式（例如123.6D）

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvData.java
Patch:
@@ -42,6 +42,9 @@ public int getRowCount() {
 	 * @return the header row - might be {@code null} if no header exists
 	 */
 	public List<String> getHeader() {
+		if(null == this.header){
+			return null;
+		}
 		return Collections.unmodifiableList(this.header);
 	}
 

File: hutool-json/src/main/java/cn/hutool/json/JSONParser.java
Patch:
@@ -77,6 +77,8 @@ public void parseTo(JSONObject jsonObject, Filter<MutablePair<String, Object>> f
 				case ';':
 				case ',':
 					if (tokener.nextClean() == '}') {
+						// issue#2380
+						// 尾后逗号（Trailing Commas），JSON中虽然不支持，但是ECMAScript 2017支持，此处做兼容。
 						return;
 					}
 					tokener.back();

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -1648,6 +1648,7 @@ public static <T> T[] distinct(T[] array) {
 	 * @param <T>      数组元素类型
 	 * @param <K>      唯一键类型
 	 * @param array    数组
+	 * @param uniqueGenerator 唯一键生成器
 	 * @param override 是否覆盖模式，如果为{@code true}，加入的新值会覆盖相同key的旧值，否则会忽略新加值
 	 * @return 去重后的数组
 	 * @since 5.8.0

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -1017,8 +1017,8 @@ public static <T> T invoke(Object obj, Method method, Object... args) throws Inv
 	 * @param method 方法（对象方法或static方法都可）
 	 * @param args   参数对象
 	 * @return 结果
-	 * @throws InvocationTargetRuntimeException 目标方法执行异常
-	 * @throws UtilException                    {@link IllegalAccessException}异常的包装
+	 * @throws InvocationTargetException 目标方法执行异常
+	 * @throws IllegalAccessException    访问异常
 	 * @since 5.8.1
 	 */
 	@SuppressWarnings("unchecked")

File: hutool-json/src/test/java/cn/hutool/json/Issue2365Test.java
Patch:
@@ -1,3 +1,5 @@
+package cn.hutool.json;
+
 import cn.hutool.json.JSONUtil;
 import lombok.Data;
 import org.junit.Assert;

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanToMapCopier.java
Patch:
@@ -25,7 +25,7 @@ public class BeanToMapCopier extends AbsCopier<Object, Map> {
 	 * 构造
 	 *
 	 * @param source      来源Map
-	 * @param target      目标Bean对象
+	 * @param target      目标Map对象
 	 * @param targetType  目标泛型类型
 	 * @param copyOptions 拷贝选项
 	 */

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/MapToBeanCopier.java
Patch:
@@ -68,7 +68,7 @@ public T copy() {
 			}
 
 			// 检查目标字段可写性
-			PropDesc tDesc = findPropDesc(targetPropDescMap, sKeyStr);
+			final PropDesc tDesc = findPropDesc(targetPropDescMap, sKeyStr);
 			if (null == tDesc || false == tDesc.isWritable(this.copyOptions.transientSupport)) {
 				// 字段不可写，跳过之
 				return;

File: hutool-core/src/main/java/cn/hutool/core/lang/SimpleCache.java
Patch:
@@ -96,7 +96,7 @@ public V get(K key, Func0<V> supplier) {
 	 */
 	public V get(K key, Predicate<V> validPredicate, Func0<V> supplier) {
 		V v = get(key);
-		if((null != validPredicate && false == validPredicate.test(v))){
+		if((null != validPredicate && null != v && false == validPredicate.test(v))){
 			v = null;
 		}
 		if (null == v && null != supplier) {

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java
Patch:
@@ -42,7 +42,7 @@ public Session get(String key) {
 	 */
 	public Session getSession(String sshHost, int sshPort, String sshUser, String sshPass) {
 		final String key = StrUtil.format("{}@{}:{}", sshUser, sshHost, sshPort);
-		return this.cache.get(key, (conn)->null != conn && conn.isConnected(), ()-> JschUtil.openSession(sshHost, sshPort, sshUser, sshPass));
+		return this.cache.get(key, Session::isConnected, ()-> JschUtil.openSession(sshHost, sshPort, sshUser, sshPass));
 	}
 
 	/**
@@ -57,7 +57,7 @@ public Session getSession(String sshHost, int sshPort, String sshUser, String ss
 	 */
 	public Session getSession(String sshHost, int sshPort, String sshUser, String prvkey, byte[] passphrase) {
 		final String key = StrUtil.format("{}@{}:{}", sshUser, sshHost, sshPort);
-		return this.cache.get(key, (conn)->null != conn && conn.isConnected(), ()->JschUtil.openSession(sshHost, sshPort, sshUser, prvkey, passphrase));
+		return this.cache.get(key, Session::isConnected, ()->JschUtil.openSession(sshHost, sshPort, sshUser, prvkey, passphrase));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/img/ImgUtil.java
Patch:
@@ -1046,7 +1046,7 @@ public static void rotate(Image image, int degree, ImageOutputStream out) throws
 
 	/**
 	 * 旋转图片为指定角度<br>
-	 * 来自：http://blog.51cto.com/cping1982/130066
+	 * 来自：<a href="http://blog.51cto.com/cping1982/130066">http://blog.51cto.com/cping1982/130066</a>
 	 *
 	 * @param image  目标图像
 	 * @param degree 旋转角度

File: hutool-http/src/main/java/cn/hutool/http/HttpResponse.java
Patch:
@@ -249,6 +249,7 @@ public InputStream bodyStream() {
 	 *
 	 * @return byte[]
 	 */
+	@Override
 	public byte[] bodyBytes() {
 		sync();
 		return this.bodyBytes;

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -553,6 +553,9 @@ public static <E> Iterable<E> asIterable(final Iterator<E> iter) {
 	 * @since 5.8.0
 	 */
 	public static <E> E get(final Iterator<E> iterator, int index) throws IndexOutOfBoundsException {
+		if(null == iterator){
+			return null;
+		}
 		Assert.isTrue(index >= 0, "[index] must be >= 0");
 		while (iterator.hasNext()) {
 			index--;

File: hutool-http/src/main/java/cn/hutool/http/HttpResponse.java
Patch:
@@ -249,6 +249,7 @@ public InputStream bodyStream() {
 	 *
 	 * @return byte[]
 	 */
+	@Override
 	public byte[] bodyBytes() {
 		sync();
 		return this.bodyBytes;

File: hutool-core/src/main/java/cn/hutool/core/img/ImgUtil.java
Patch:
@@ -1046,7 +1046,7 @@ public static void rotate(Image image, int degree, ImageOutputStream out) throws
 
 	/**
 	 * 旋转图片为指定角度<br>
-	 * 来自：http://blog.51cto.com/cping1982/130066
+	 * 来自：<a href="http://blog.51cto.com/cping1982/130066">http://blog.51cto.com/cping1982/130066</a>
 	 *
 	 * @param image  目标图像
 	 * @param degree 旋转角度

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/DigestUtil.java
Patch:
@@ -332,7 +332,7 @@ public static byte[] sha256(String data, String charset) {
 	 * 计算sha256摘要值，使用UTF-8编码
 	 *
 	 * @param data 被摘要数据
-	 * @return MD5摘要
+	 * @return SHA-256摘要
 	 * @since 3.0.8
 	 */
 	public static byte[] sha256(String data) {

File: hutool-json/src/main/java/cn/hutool/json/ObjectMapper.java
Patch:
@@ -144,6 +144,7 @@ public void map(JSONArray jsonArray, Filter<Mutable<Object>> filter) throws JSON
 		} else if (source instanceof InputStream) {
 			mapFromTokener(new JSONTokener((InputStream) source, jsonArray.getConfig()), jsonArray, filter);
 		} else if (source instanceof byte[]) {
+			// bytes按照JSON的二进制流对待
 			mapFromTokener(new JSONTokener(IoUtil.toStream((byte[]) source), jsonArray.getConfig()), jsonArray, filter);
 		} else if (source instanceof JSONTokener) {
 			mapFromTokener((JSONTokener) source, jsonArray, filter);

File: hutool-db/src/main/java/cn/hutool/db/dialect/Dialect.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.db.dialect;
 
-import cn.hutool.core.collection.ListUtil;
 import cn.hutool.db.Entity;
 import cn.hutool.db.Page;
 import cn.hutool.db.sql.Order;
@@ -134,8 +133,7 @@ public interface Dialect extends Serializable {
 	 * @throws SQLException SQL执行异常
 	 */
 	default PreparedStatement psForCount(Connection conn, Query query) throws SQLException {
-		query.setFields(ListUtil.toList("count(1)"));
-		return psForFind(conn, query);
+		return psForCount(conn, SqlBuilder.create().query(query));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -168,7 +168,7 @@ public interface RegexPool {
 	 * 十七位码、车架号
 	 * 车辆的唯一标示
 	 */
-	String CAR_VIN = "^[A-HJ-NPR-Z0-9]{17}$";
+	String CAR_VIN = "^[A-HJ-NPR-Z0-9]{8}[0-9X][A-HJ-NPR-Z0-9]{2}\\d{6}$";
 	/**
 	 * 驾驶证  别名：驾驶证档案编号、行驶证编号
 	 * eg:430101758218

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -719,7 +719,7 @@ public static BigDecimal div(Number v1, Number v2, int scale, RoundingMode round
 		if (v1 instanceof BigDecimal && v2 instanceof BigDecimal) {
 			return div((BigDecimal) v1, (BigDecimal) v2, scale, roundingMode);
 		}
-		return div(v1.toString(), v2.toString(), scale, roundingMode);
+		return div(StrUtil.toStringOrNull(v1), StrUtil.toStringOrNull(v2), scale, roundingMode);
 	}
 
 	/**

File: hutool-db/src/main/java/cn/hutool/db/meta/Column.java
Patch:
@@ -37,7 +37,7 @@ public class Column implements Serializable, Cloneable {
 	/**
 	 * 大小或数据长度
 	 */
-	private int size;
+	private long size;
 	private Integer digit;
 	/**
 	 * 是否为可空
@@ -118,7 +118,7 @@ public void init(Table table, ResultSet columnMetaRs) throws SQLException {
 		typeName = ReUtil.delLast("\\(\\d+\\)", typeName);
 		this.typeName = typeName;
 
-		this.size = columnMetaRs.getInt("COLUMN_SIZE");
+		this.size = columnMetaRs.getLong("COLUMN_SIZE");
 		this.isNullable = columnMetaRs.getBoolean("NULLABLE");
 		this.comment = columnMetaRs.getString("REMARKS");
 		this.columnDef = columnMetaRs.getString("COLUMN_DEF");
@@ -238,7 +238,7 @@ public Column setTypeName(String typeName) {
 	 *
 	 * @return 大小或数据长度
 	 */
-	public int getSize() {
+	public long getSize() {
 		return size;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -1,5 +1,6 @@
 package cn.hutool.core.bean.copier;
 
+import cn.hutool.core.lang.Assert;
 import cn.hutool.core.lang.copier.Copier;
 
 import java.io.Serializable;
@@ -62,6 +63,8 @@ public static <T> BeanCopier<T> create(Object source, T target, Type destType, C
 	 * @param copyOptions 拷贝属性选项
 	 */
 	public BeanCopier(Object source, T target, Type targetType, CopyOptions copyOptions) {
+		Assert.notNull(source, "Source bean must be not null!");
+		Assert.notNull(target, "Target bean must be not null!");
 		Copier<T> copier;
 		if (source instanceof Map) {
 			if (target instanceof Map) {

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberWordFormatter.java
Patch:
@@ -63,7 +63,7 @@ public static String formatSimple(long value, boolean isTwo) {
 		int index = -1;
 		double res = value;
 		while (res > 10 && (false == isTwo || index < 1)) {
-			if (res > 1000) {
+			if (res >= 1000) {
 				res = res / 1000;
 				index++;
 			}

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/SshjSftp.java
Patch:
@@ -102,7 +102,7 @@ public void init() {
 		this.ssh = new SSHClient();
 		ssh.addHostKeyVerifier(new PromiscuousVerifier());
 		try {
-			ssh.connect(ftpConfig.getHost());
+			ssh.connect(ftpConfig.getHost(), ftpConfig.getPort());
 			ssh.authPassword(ftpConfig.getUser(), ftpConfig.getPassword());
 			ssh.setRemoteCharset(ftpConfig.getCharset());
 			this.sftp = ssh.newSFTPClient();

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -1097,7 +1097,7 @@ public static File copy(File src, File dest, boolean isOverride) throws IORuntim
 	 * 情况如下：
 	 *
 	 * <pre>
-	 * 1、src和dest都为目录，则讲src下所有文件目录拷贝到dest下
+	 * 1、src和dest都为目录，则将src下所有文件目录拷贝到dest下
 	 * 2、src和dest都为文件，直接复制，名字为dest
 	 * 3、src为文件，dest为目录，将src拷贝到dest目录下
 	 * </pre>
@@ -1117,7 +1117,7 @@ public static File copyContent(File src, File dest, boolean isOverride) throws I
 	 * 情况如下：
 	 *
 	 * <pre>
-	 * 1、src和dest都为目录，则讲src下所有文件（包括子目录）拷贝到dest下
+	 * 1、src和dest都为目录，则将src下所有文件（包括子目录）拷贝到dest下
 	 * 2、src和dest都为文件，直接复制，名字为dest
 	 * 3、src为文件，dest为目录，将src拷贝到dest目录下
 	 * </pre>

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -28,7 +28,6 @@
 import java.util.SortedMap;
 import java.util.TreeMap;
 import java.util.concurrent.ConcurrentHashMap;
-import java.util.stream.Collectors;
 import java.util.function.BiFunction;
 
 /**
@@ -1433,7 +1432,7 @@ public static <K, V> Map.Entry<K, V> entry(K key, V value) {
 	 */
 	public static <K, V> Map.Entry<K, V> entry(K key, V value, boolean isImmutable) {
 		return isImmutable ?
-				new AbstractMap.SimpleEntry<>(key, value) :
-				new AbstractMap.SimpleImmutableEntry<>(key, value);
+				new AbstractMap.SimpleImmutableEntry<>(key, value) :
+				new AbstractMap.SimpleEntry<>(key, value);
 	}
 }

File: hutool-db/src/main/java/cn/hutool/db/dialect/DialectName.java
Patch:
@@ -9,7 +9,7 @@
  * @author Looly
  */
 public enum DialectName {
-	ANSI, MYSQL, ORACLE, POSTGREESQL, SQLITE3, H2, SQLSERVER, SQLSERVER2012, PHOENIX;
+	ANSI, MYSQL, ORACLE, POSTGRESQL, SQLITE3, H2, SQLSERVER, SQLSERVER2012, PHOENIX;
 
 	/**
 	 * 是否为指定数据库方言，检查时不分区大小写

File: hutool-db/src/main/java/cn/hutool/db/dialect/impl/PostgresqlDialect.java
Patch:
@@ -28,7 +28,7 @@ public PostgresqlDialect() {
 
 	@Override
 	public String dialectName() {
-		return DialectName.POSTGREESQL.name();
+		return DialectName.POSTGRESQL.name();
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -616,14 +616,16 @@ public static <T> T fillBean(T bean, ValueProvider<String> valueProvider, CopyOp
 	 * @since 5.8.0
 	 */
 	public static Map<String, Object> beanToMap(Object bean, String... properties) {
+		int mapSize = 16;
 		Editor<String> keyEditor = null;
 		if(ArrayUtil.isNotEmpty(properties)){
+			mapSize = properties.length;
 			final Set<String> propertiesSet = CollUtil.set(false, properties);
 			keyEditor = property -> propertiesSet.contains(property) ? property : null;
 		}
 
 		// 指明了要复制的属性 所以不忽略null值
-		return beanToMap(bean, new LinkedHashMap<>(properties.length, 1), false, keyEditor);
+		return beanToMap(bean, new LinkedHashMap<>(mapSize, 1), false, keyEditor);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/map/MapUtilTest.java
Patch:
@@ -82,7 +82,8 @@ public void mapTest() {
 		// 如你所见，它是一个map，key由用户id，value由用户组成
 		Map<Long, User> idUserMap = Stream.iterate(0L, i -> ++i).limit(4).map(i -> User.builder().id(i).name(customers.poll()).build()).collect(Collectors.toMap(User::getId, Function.identity()));
 		// 如你所见，它是一个map，key由分组id，value由用户ids组成，典型的多对多关系
-		Map<Long, List<Long>> groupIdUserIdsMap = groups.stream().flatMap(group -> idUserMap.keySet().stream().map(userId -> UserGroup.builder().groupId(group.getId()).userId(userId).build())).collect(Collectors.groupingBy(UserGroup::getGroupId, Collectors.mapping(UserGroup::getUserId, Collectors.toList())));
+		Map<Long, List<Long>> groupIdUserIdsMap = groups.stream().flatMap(group -> idUserMap.keySet().stream().map(userId -> UserGroup.builder().groupId(group.getId()).userId(userId).build()))
+				.collect(Collectors.groupingBy(UserGroup::getGroupId, Collectors.mapping(UserGroup::getUserId, Collectors.toList())));
 
 		// 神奇的魔法发生了， 分组id和用户ids组成的map，竟然变成了订单编号和用户实体集合组成的map
 		Map<Long, List<User>> groupIdUserMap = MapUtil.map(groupIdUserIdsMap, (groupId, userIds) -> userIds.stream().map(idUserMap::get).collect(Collectors.toList()));

File: hutool-core/src/main/java/cn/hutool/core/lang/caller/CallerUtil.java
Patch:
@@ -35,13 +35,13 @@ public static Class<?> getCallerCaller() {
 	 * 调用者层级关系：
 	 *
 	 * <pre>
-	 * 0 {@link CallerUtil}
-	 * 1 调用{@link CallerUtil}中方法的类
+	 * 0 CallerUtil
+	 * 1 调用CallerUtil中方法的类
 	 * 2 调用者的调用者
 	 * ...
 	 * </pre>
 	 *
-	 * @param depth 层级。0表示{@link CallerUtil}本身，1表示调用{@link CallerUtil}的类，2表示调用者的调用者，依次类推
+	 * @param depth 层级。0表示CallerUtil本身，1表示调用CallerUtil的类，2表示调用者的调用者，依次类推
 	 * @return 第几级调用者
 	 */
 	public static Class<?> getCaller(int depth) {

File: hutool-core/src/test/java/cn/hutool/core/text/StrMatcherTest.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.core.text;
 
-import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -34,7 +33,7 @@ public void matcherTest3(){
 		// 当有无匹配项的时候，按照全不匹配对待
 		final StrMatcher strMatcher = new StrMatcher("${name}经过${year}年");
 		final Map<String, String> match = strMatcher.match("小明经过20年，成长为一个大人。");
-		Console.log(match);
+		//Console.log(match);
 		Assert.assertEquals("小明", match.get("name"));
 		Assert.assertEquals("20", match.get("year"));
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3246,7 +3246,7 @@ public static String readableFileSize(File file) {
 
 	/**
 	 * 可读的文件大小<br>
-	 * 参考 http://stackoverflow.com/questions/3263892/format-file-size-as-mb-gb-etc
+	 * 参考 <a href="http://stackoverflow.com/questions/3263892/format-file-size-as-mb-gb-etc">http://stackoverflow.com/questions/3263892/format-file-size-as-mb-gb-etc</a>
 	 *
 	 * @param size Long类型大小
 	 * @return 大小

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -308,7 +308,7 @@ public HttpRequest setUrl(UrlBuilder urlBuilder) {
 	 * 它会验证 SSL 服务器在数字证书中返回的主机名是否与用于连接 SSL 服务器的 URL 主机名相匹配。如果主机名不匹配，则删除此连接。<br>
 	 * 因此weblogic不支持https的sni协议的主机名验证，此时需要将此值设置为sun.net.www.protocol.https.Handler对象。
 	 * <p>
-	 * 相关issue见：https://gitee.com/dromara/hutool/issues/IMD1X
+	 * 相关issue见：<a href="https://gitee.com/dromara/hutool/issues/IMD1X">https://gitee.com/dromara/hutool/issues/IMD1X</a>
 	 *
 	 * @param urlHandler {@link URLStreamHandler}
 	 * @return this

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java
Patch:
@@ -340,7 +340,7 @@ public boolean isDir(String dir) {
 		} catch (SftpException e) {
 			final String msg = e.getMessage();
 			// issue#I4P9ED@Gitee
-			if (msg.contains("No such file") || msg.contains("does not exist")) {
+			if (StrUtil.containsAnyIgnoreCase(msg, "No such file", "does not exist")) {
 				// 文件不存在直接返回false
 				// pr#378@Gitee
 				return false;

File: hutool-json/src/main/java/cn/hutool/json/JSONTokener.java
Patch:
@@ -1,11 +1,11 @@
 package cn.hutool.json;
 
+import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.util.StrUtil;
 
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
-import java.io.InputStreamReader;
 import java.io.Reader;
 import java.io.StringReader;
 
@@ -67,13 +67,13 @@ public JSONTokener(Reader reader, JSONConfig config) {
 	}
 
 	/**
-	 * 从InputStream中构建
+	 * 从InputStream中构建，使用UTF-8编码
 	 *
 	 * @param inputStream InputStream
 	 * @param config      JSON配置
 	 */
 	public JSONTokener(InputStream inputStream, JSONConfig config) throws JSONException {
-		this(new InputStreamReader(inputStream), config);
+		this(IoUtil.getUtf8Reader(inputStream), config);
 	}
 
 	/**

File: hutool-cache/src/test/java/cn/hutool/cache/WeakCacheTest.java
Patch:
@@ -26,11 +26,13 @@ public void removeTest(){
 	@Ignore
 	public void removeByGcTest(){
 		// https://gitee.com/dromara/hutool/issues/I51O7M
-		// 经过GC，
 		WeakCache<String, String> cache = new WeakCache<>(-1);
 		cache.put("a", "1");
 		cache.put("b", "2");
+
+		// 监听
 		Assert.assertEquals(2, cache.size());
+		cache.setListener(Console::log);
 
 		// GC测试
 		int i=0;

File: hutool-cache/src/main/java/cn/hutool/cache/impl/WeakCache.java
Patch:
@@ -1,6 +1,6 @@
 package cn.hutool.cache.impl;
 
-import java.util.WeakHashMap;
+import cn.hutool.core.map.WeakConcurrentMap;
 
 /**
  * 弱引用缓存<br>
@@ -22,6 +22,6 @@ public class WeakCache<K, V> extends TimedCache<K, V>{
 	 * @param timeout 超时时常，单位毫秒，-1或0表示无限制
 	 */
 	public WeakCache(long timeout) {
-		super(timeout, new WeakHashMap<>());
+		super(timeout, new WeakConcurrentMap<>());
 	}
 }

File: hutool-json/src/main/java/cn/hutool/json/JSONParser.java
Patch:
@@ -92,7 +92,7 @@ public void parseTo(JSONObject jsonObject, Filter<MutablePair<String, Object>> f
 	/**
 	 * 解析JSON字符串到{@link JSONArray}中
 	 *
-	 * @param jsonArray {@link JSONArray
+	 * @param jsonArray {@link JSONArray}
 	 * @param filter    键值对过滤编辑器，可以通过实现此接口，完成解析前对值的过滤和修改操作，{@code null} 表示不过滤
 	 */
 	public void parseTo(JSONArray jsonArray, Filter<Mutable<Object>> filter) {

File: hutool-json/src/main/java/cn/hutool/json/JSONParser.java
Patch:
@@ -93,7 +93,7 @@ public void parseTo(JSONObject jsonObject, Filter<MutablePair<String, Object>> f
 	 * 解析JSON字符串到{@link JSONArray}中
 	 *
 	 * @param jsonArray {@link JSONArray
-	 * @param filter    键值对过滤编辑器，可以通过实现此接口，完成解析前对值的过滤和修改操作，{@code null}表示不过滤
+	 * @param filter    键值对过滤编辑器，可以通过实现此接口，完成解析前对值的过滤和修改操作，{@code null} 表示不过滤
 	 */
 	public void parseTo(JSONArray jsonArray, Filter<Mutable<Object>> filter) {
 		final JSONTokener x = this.tokener;

File: hutool-http/src/main/java/cn/hutool/http/GlobalInterceptor.java
Patch:
@@ -17,6 +17,7 @@ public enum GlobalInterceptor {
 	 * 设置拦截器，用于在请求前重新编辑请求
 	 *
 	 * @param interceptor 拦截器实现
+	 * @return this
 	 */
 	synchronized public GlobalInterceptor addRequestInterceptor(HttpInterceptor<HttpRequest> interceptor) {
 		this.requestInterceptors.addChain(interceptor);
@@ -27,6 +28,7 @@ synchronized public GlobalInterceptor addRequestInterceptor(HttpInterceptor<Http
 	 * 设置拦截器，用于在响应读取后完成编辑或读取
 	 *
 	 * @param interceptor 拦截器实现
+	 * @return this
 	 */
 	synchronized public GlobalInterceptor addResponseInterceptor(HttpInterceptor<HttpResponse> interceptor) {
 		this.responseInterceptors.addChain(interceptor);

File: hutool-http/src/main/java/cn/hutool/http/HttpConfig.java
Patch:
@@ -244,6 +244,7 @@ public HttpConfig setBlockSize(int blockSize) {
 	 * 如果服务端未遵循这个规范或响应没有正常结束，会报EOF异常，此选项用于是否忽略这个异常。
 	 *
 	 * @param ignoreEOFError 是否忽略响应读取时可能的EOF异常。
+	 * @return this
 	 * @since 5.7.20
 	 */
 	public HttpConfig setIgnoreEOFError(boolean ignoreEOFError) {
@@ -257,6 +258,7 @@ public HttpConfig setIgnoreEOFError(boolean ignoreEOFError) {
 	 * 按照RFC3986规范，在发送请求时，全部编码之。如果为{@code false}，则不会解码已经编码的内容，在请求时只编码需要编码的部分。
 	 *
 	 * @param decodeUrl 是否忽略解码URL
+	 * @return this
 	 */
 	public HttpConfig setDecodeUrl(boolean decodeUrl) {
 		this.decodeUrl = decodeUrl;
@@ -267,6 +269,7 @@ public HttpConfig setDecodeUrl(boolean decodeUrl) {
 	 * 设置拦截器，用于在请求前重新编辑请求
 	 *
 	 * @param interceptor 拦截器实现
+	 * @return this
 	 */
 	public HttpConfig addRequestInterceptor(HttpInterceptor<HttpRequest> interceptor) {
 		this.requestInterceptors.addChain(interceptor);

File: hutool-core/src/main/java/cn/hutool/core/date/Week.java
Patch:
@@ -74,7 +74,7 @@ public enum Week {
 	/**
 	 * 获得星期对应{@link Calendar} 中的Week值
 	 *
-	 * @return 星期对应{@link Calendar} 中的Week值
+	 * @return 星期对应 {@link Calendar} 中的Week值
 	 */
 	public int getValue() {
 		return this.value;

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -15,11 +15,11 @@
 
 /**
  * 身份证相关工具类<br>
- * see https://www.oschina.net/code/snippet_1611_2881
+ * see <a href="https://www.oschina.net/code/snippet_1611_2881">https://www.oschina.net/code/snippet_1611_2881</a>
  *
  * <p>
  * 本工具并没有对行政区划代码做校验，如有需求，请参阅（2018年10月）：
- * http://www.mca.gov.cn/article/sj/xzqh/2018/201804-12/20181011221630.html
+ * <a href="http://www.mca.gov.cn/article/sj/xzqh/2018/201804-12/20181011221630.html">http://www.mca.gov.cn/article/sj/xzqh/2018/201804-12/20181011221630.html</a>
  * </p>
  *
  * @author Looly

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.extra.mail;
 
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
@@ -579,7 +578,6 @@ public Properties getSmtpProps() {
 
 		// SSL
 		if (null != this.sslEnable && this.sslEnable) {
-			Console.log("{} {}", SOCKET_FACTORY, socketFactoryClass);
 			p.put(SSL_ENABLE, "true");
 			p.put(SOCKET_FACTORY, socketFactoryClass);
 			p.put(SOCKET_FACTORY_FALLBACK, String.valueOf(this.socketFactoryFallback));

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -972,7 +972,7 @@ public static void putDeserializer(Type type, JSONDeserializer<?> deserializer)
 
 	/**
 	 * 转义不可见字符<br>
-	 * 见：https://en.wikibooks.org/wiki/Unicode/Character_reference/0000-0FFF
+	 * 见：<a href="https://en.wikibooks.org/wiki/Unicode/Character_reference/0000-0FFF">https://en.wikibooks.org/wiki/Unicode/Character_reference/0000-0FFF</a>
 	 *
 	 * @param c 字符
 	 * @return 转义后的字符串

File: hutool-http/src/main/java/cn/hutool/http/HttpGlobalConfig.java
Patch:
@@ -184,7 +184,7 @@ synchronized public static void closeCookie() {
 	/**
 	 * 增加支持的METHOD方法<br>
 	 * 此方法通过注入方式修改{@link HttpURLConnection}中的methods静态属性，增加PATCH方法<br>
-	 * see: https://stackoverflow.com/questions/25163131/httpurlconnection-invalid-http-method-patch
+	 * see: <a href="https://stackoverflow.com/questions/25163131/httpurlconnection-invalid-http-method-patch">https://stackoverflow.com/questions/25163131/httpurlconnection-invalid-http-method-patch</a>
 	 *
 	 * @since 5.7.4
 	 */

File: hutool-cron/src/test/java/cn/hutool/cron/pattern/CronPatternNextMatchTest.java
Patch:
@@ -91,9 +91,10 @@ public void nextMatchAfterTest(){
 	@Test
 	public void nextMatchAfterByWeekTest(){
 		CronPattern pattern = new CronPattern("1 1 1 * * Sat *");
-		// 周五
-		final DateTime time = DateUtil.parse("2022-04-01");
+		// 周日，下个周六在4月9日
+		final DateTime time = DateUtil.parse("2022-04-03");
 		assert time != null;
 		final Calendar calendar = pattern.nextMatchAfter(time.toCalendar());
+		Assert.assertEquals("2022-04-09 01:01:01", DateUtil.date(calendar).toString());
 	}
 }

File: hutool-db/src/main/java/cn/hutool/db/ds/AbstractDSFactory.java
Patch:
@@ -153,6 +153,7 @@ public void close(String group) {
 		DataSourceWrapper ds = dsMap.get(group);
 		if (ds != null) {
 			ds.close();
+			//noinspection resource
 			dsMap.remove(group);
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanToBeanCopier.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.bean.PropDesc;
-import cn.hutool.core.convert.Convert;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.TypeUtil;
 
@@ -75,7 +74,8 @@ public T copy() {
 
 			// 获取目标字段真实类型并转换源值
 			final Type fieldType = TypeUtil.getActualType(this.targetType, tDesc.getFieldType());
-			sValue = Convert.convertWithCheck(fieldType, sValue, null, this.copyOptions.ignoreError);
+			//sValue = Convert.convertWithCheck(fieldType, sValue, null, this.copyOptions.ignoreError);
+			sValue = this.copyOptions.convertField(fieldType, sValue);
 			sValue = copyOptions.editFieldValue(sFieldName, sValue);
 
 			// 目标赋值

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanToMapCopier.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.bean.PropDesc;
-import cn.hutool.core.convert.Convert;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.TypeUtil;
 
@@ -67,7 +66,8 @@ public Map copy() {
 			// 获取目标值真实类型并转换源值
 			final Type[] typeArguments = TypeUtil.getTypeArguments(this.targetType);
 			if(null != typeArguments){
-				sValue = Convert.convertWithCheck(typeArguments[1], sValue, null, this.copyOptions.ignoreError);
+				//sValue = Convert.convertWithCheck(typeArguments[1], sValue, null, this.copyOptions.ignoreError);
+				sValue = this.copyOptions.convertField(typeArguments[1], sValue);
 				sValue = copyOptions.editFieldValue(sFieldName, sValue);
 			}
 

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/MapToBeanCopier.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.bean.PropDesc;
-import cn.hutool.core.convert.Convert;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.map.CaseInsensitiveMap;
 import cn.hutool.core.map.MapWrapper;
@@ -83,7 +82,8 @@ public T copy() {
 
 			// 获取目标字段真实类型并转换源值
 			final Type fieldType = TypeUtil.getActualType(this.targetType, tDesc.getFieldType());
-			Object newValue = Convert.convertWithCheck(fieldType, sValue, null, this.copyOptions.ignoreError);
+			//Object newValue = Convert.convertWithCheck(fieldType, sValue, null, this.copyOptions.ignoreError);
+			Object newValue = this.copyOptions.convertField(fieldType, sValue);
 			newValue = copyOptions.editFieldValue(sKeyStr, newValue);
 
 			// 目标赋值

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/MapToMapCopier.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.core.bean.copier;
 
-import cn.hutool.core.convert.Convert;
 import cn.hutool.core.util.TypeUtil;
 
 import java.lang.reflect.Type;
@@ -53,7 +52,8 @@ public Map copy() {
 			// 获取目标值真实类型并转换源值
 			final Type[] typeArguments = TypeUtil.getTypeArguments(this.targetType);
 			if(null != typeArguments){
-				sValue = Convert.convertWithCheck(typeArguments[1], sValue, null, this.copyOptions.ignoreError);
+				//sValue = Convert.convertWithCheck(typeArguments[1], sValue, null, this.copyOptions.ignoreError);
+				sValue = this.copyOptions.convertField(typeArguments[1], sValue);
 				sValue = copyOptions.editFieldValue(sKeyStr, sValue);
 			}
 

File: hutool-cron/src/test/java/cn/hutool/cron/pattern/CronPatternNextMatchTest.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.date.DateField;
 import cn.hutool.core.date.DateTime;
 import cn.hutool.core.date.DateUtil;
-import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -96,6 +95,5 @@ public void nextMatchAfterByWeekTest(){
 		final DateTime time = DateUtil.parse("2022-04-01");
 		assert time != null;
 		final Calendar calendar = pattern.nextMatchAfter(time.toCalendar());
-		Console.log(DateUtil.date(calendar));
 	}
 }

File: hutool-cache/src/main/java/cn/hutool/cache/impl/FIFOCache.java
Patch:
@@ -50,7 +50,7 @@ protected int pruneCache() {
 		CacheObj<K, V> first = null;
 
 		// 清理过期对象并找出链表头部元素（先入元素）
-		Iterator<CacheObj<K, V>> values = cacheMap.values().iterator();
+		final Iterator<CacheObj<K, V>> values = cacheObjIter();
 		if (isPruneExpiredActive()) {
 			// 清理过期对象并找出链表头部元素（先入元素）
 			while (values.hasNext()) {
@@ -71,7 +71,7 @@ protected int pruneCache() {
 
 		// 清理结束后依旧是满的，则删除第一个被缓存的对象
 		if (isFull() && null != first) {
-			cacheMap.remove(first.key);
+			removeWithoutLock(first.key, false);
 			onRemove(first.key, first.obj);
 			count++;
 		}

File: hutool-cache/src/main/java/cn/hutool/cache/impl/LFUCache.java
Patch:
@@ -57,7 +57,7 @@ protected int pruneCache() {
 		CacheObj<K, V> comin = null;
 
 		// 清理过期对象并找出访问最少的对象
-		Iterator<CacheObj<K, V>> values = cacheMap.values().iterator();
+		Iterator<CacheObj<K, V>> values = cacheObjIter();
 		CacheObj<K, V> co;
 		while (values.hasNext()) {
 			co = values.next();
@@ -78,7 +78,7 @@ protected int pruneCache() {
 		if (isFull() && comin != null) {
 			long minAccessCount = comin.accessCount.get();
 
-			values = cacheMap.values().iterator();
+			values = cacheObjIter();
 			CacheObj<K, V> co1;
 			while (values.hasNext()) {
 				co1 = values.next();

File: hutool-cache/src/main/java/cn/hutool/cache/impl/LRUCache.java
Patch:
@@ -56,7 +56,7 @@ protected int pruneCache() {
 			return 0;
 		}
 		int count = 0;
-		Iterator<CacheObj<K, V>> values = cacheMap.values().iterator();
+		Iterator<CacheObj<K, V>> values = cacheObjIter();
 		CacheObj<K, V> co;
 		while (values.hasNext()) {
 			co = values.next();

File: hutool-cache/src/main/java/cn/hutool/cache/impl/ReentrantCache.java
Patch:
@@ -36,7 +36,7 @@ public boolean containsKey(K key) {
 		lock.lock();
 		try {
 			// 不存在或已移除
-			final CacheObj<K, V> co = cacheMap.get(key);
+			final CacheObj<K, V> co = getWithoutLock(key);
 			if (co == null) {
 				return false;
 			}
@@ -59,7 +59,7 @@ public V get(K key, boolean isUpdateLastAccess) {
 		CacheObj<K, V> co;
 		lock.lock();
 		try {
-			co = cacheMap.get(key);
+			co = getWithoutLock(key);
 		} finally {
 			lock.unlock();
 		}
@@ -83,7 +83,7 @@ public Iterator<CacheObj<K, V>> cacheObjIterator() {
 		CopiedIter<CacheObj<K, V>> copiedIterator;
 		lock.lock();
 		try {
-			copiedIterator = CopiedIter.copyOf(this.cacheMap.values().iterator());
+			copiedIterator = CopiedIter.copyOf(cacheObjIter());
 		} finally {
 			lock.unlock();
 		}

File: hutool-cache/src/main/java/cn/hutool/cache/impl/TimedCache.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.cache.impl;
 
 import cn.hutool.cache.GlobalPruneTimer;
+import cn.hutool.core.lang.mutable.Mutable;
 
 import java.util.HashMap;
 import java.util.Iterator;
@@ -37,7 +38,7 @@ public TimedCache(long timeout) {
 	 * @param timeout 过期时长
 	 * @param map 存储缓存对象的map
 	 */
-	public TimedCache(long timeout, Map<K, CacheObj<K, V>> map) {
+	public TimedCache(long timeout, Map<Mutable<K>, CacheObj<K, V>> map) {
 		this.capacity = 0;
 		this.timeout = timeout;
 		this.cacheMap = map;
@@ -52,7 +53,7 @@ public TimedCache(long timeout, Map<K, CacheObj<K, V>> map) {
 	@Override
 	protected int pruneCache() {
 		int count = 0;
-		Iterator<CacheObj<K, V>> values = cacheMap.values().iterator();
+		final Iterator<CacheObj<K, V>> values = cacheObjIter();
 		CacheObj<K, V> co;
 		while (values.hasNext()) {
 			co = values.next();

File: hutool-http/src/test/java/cn/hutool/http/DownloadTest.java
Patch:
@@ -44,7 +44,7 @@ public void downloadTest1() {
 	@Ignore
 	public void downloadTest() {
 		// 带进度显示的文件下载
-		HttpUtil.downloadFile("http://mirrors.sohu.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso", FileUtil.file("d:/"), new StreamProgress() {
+		HttpUtil.downloadFile("http://mirrors.sohu.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso", FileUtil.file("d:/"), new StreamProgress() {
 
 			final long time = System.currentTimeMillis();
 

File: hutool-core/src/main/java/cn/hutool/core/lang/SimpleCache.java
Patch:
@@ -97,7 +97,7 @@ public V get(K key, Predicate<V> validPredicate, Func0<V> supplier) {
 			keyLock.lock();
 			try {
 				// 双重检查，防止在竞争锁的过程中已经有其它线程写入
-				v = cache.get(key);
+				v = get(key);
 				if (null == v || (null != validPredicate && false == validPredicate.test(v))) {
 					try {
 						v = supplier.call();

File: hutool-core/src/main/java/cn/hutool/core/util/ReferenceUtil.java
Patch:
@@ -44,9 +44,9 @@ public static <T> Reference<T> create(ReferenceType type, T referent) {
 	public static <T> Reference<T> create(ReferenceType type, T referent, ReferenceQueue<T> queue) {
 		switch (type) {
 		case SOFT:
-			return new SoftReference<>(referent);
+			return new SoftReference<>(referent, queue);
 		case WEAK:
-			return new WeakReference<>(referent);
+			return new WeakReference<>(referent, queue);
 		case PHANTOM:
 			return new PhantomReference<>(referent, queue);
 		default:

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -371,9 +371,10 @@ public UrlBuilder appendPath(CharSequence path) {
 	}
 
 	/**
-	 * 获取查询语句，例如a=1&amp;b=2
+	 * 获取查询语句，例如a=1&amp;b=2<br>
+	 * 可能为{@code null}
 	 *
-	 * @return 查询语句，例如a=1&amp;b=2
+	 * @return 查询语句，例如a=1&amp;b=2，可能为{@code null}
 	 */
 	public UrlQuery getQuery() {
 		return query;

File: hutool-core/src/main/java/cn/hutool/core/date/CalendarUtil.java
Patch:
@@ -97,7 +97,7 @@ public static boolean isPM(Calendar calendar) {
 	 * 修改日期为某个时间字段起始时间
 	 *
 	 * @param calendar  {@link Calendar}
-	 * @param dateField 时间字段
+	 * @param dateField 保留到的时间字段，如定义为 {@link DateField#SECOND}，表示这个字段不变，这个字段以下字段全部归0
 	 * @return 原{@link Calendar}
 	 */
 	public static Calendar truncate(Calendar calendar, DateField dateField) {
@@ -119,7 +119,7 @@ public static Calendar round(Calendar calendar, DateField dateField) {
 	 * 修改日期为某个时间字段结束时间
 	 *
 	 * @param calendar  {@link Calendar}
-	 * @param dateField 时间字段
+	 * @param dateField 保留到的时间字段，如定义为 {@link DateField#SECOND}，表示这个字段不变，这个字段以下字段全部取最大值
 	 * @return 原{@link Calendar}
 	 */
 	public static Calendar ceiling(Calendar calendar, DateField dateField) {

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -999,7 +999,7 @@ public static DateTime parse(CharSequence dateCharSequence) {
 	 * 修改日期为某个时间字段起始时间
 	 *
 	 * @param date      {@link Date}
-	 * @param dateField 时间字段
+	 * @param dateField 保留到的时间字段，如定义为 {@link DateField#SECOND}，表示这个字段不变，这个字段以下字段全部归0
 	 * @return {@link DateTime}
 	 * @since 4.5.7
 	 */
@@ -1023,7 +1023,7 @@ public static DateTime round(Date date, DateField dateField) {
 	 * 修改日期为某个时间字段结束时间
 	 *
 	 * @param date      {@link Date}
-	 * @param dateField 时间字段
+	 * @param dateField 保留到的时间字段，如定义为 {@link DateField#SECOND}，表示这个字段不变，这个字段以下字段全部取最大值
 	 * @return {@link DateTime}
 	 * @since 4.5.7
 	 */

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -169,9 +169,9 @@ private boolean match(int second, int minute, int hour, int dayOfMonth, int mont
 	/**
 	 * 获取下一个最近的匹配日期时间
 	 *
-	 * @param values 时间字段值
+	 * @param values 时间字段值，{second, minute, hour, dayOfMonth, month, dayOfWeek, year}
 	 * @param zone   时区
-	 * @return {@link Calendar}
+	 * @return {@link Calendar}，毫秒数为0
 	 */
 	private Calendar nextMatchAfter(int[] values, TimeZone zone) {
 		final List<Calendar> nextMatches = new ArrayList<>(matchers.size());

File: hutool-core/src/test/java/cn/hutool/core/lang/ConsoleTableTest.java
Patch:
@@ -1,11 +1,12 @@
 package cn.hutool.core.lang;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 public class ConsoleTableTest {
 
 	@Test
-//    @Ignore
+	@Ignore
 	public void printTest() {
 		ConsoleTable t = new ConsoleTable();
 		t.addHeader("姓名", "年龄");

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/CopyOptions.java
Patch:
@@ -164,6 +164,8 @@ public CopyOptions setIgnoreProperties(String... ignoreProperties) {
 	/**
 	 * 设置忽略的目标对象中属性列表，设置一个属性列表，不拷贝这些属性值，Lambda方式
 	 *
+	 * @param <P> 参数类型
+	 * @param <R> 返回值类型
 	 * @param funcs 忽略的目标对象中属性列表，设置一个属性列表，不拷贝这些属性值
 	 * @return CopyOptions
 	 * @since 5.8.0

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -373,7 +373,7 @@ public String getDisposition(String fileName, Charset charset) {
 		}
 
 		fileName = StrUtil.addSuffixIfNot(URLUtil.encodeAll(fileName, charset), isXlsx() ? ".xlsx" : ".xls");
-		return StrUtil.format("attachment; filename=\"{}\";", fileName);
+		return StrUtil.format("attachment; filename=\"{}\"", fileName);
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -373,7 +373,7 @@ public String getDisposition(String fileName, Charset charset) {
 		}
 
 		fileName = StrUtil.addSuffixIfNot(URLUtil.encodeAll(fileName, charset), isXlsx() ? ".xlsx" : ".xls");
-		return StrUtil.format("attachment; filename=\"{}\"; filename*={}''{}", fileName, charset.name(), fileName);
+		return StrUtil.format("attachment; filename=\"{}\";", fileName);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -7,6 +7,7 @@
 import cn.hutool.core.lang.TypeReference;
 import cn.hutool.core.text.UnicodeUtil;
 import cn.hutool.core.util.ByteUtil;
+import cn.hutool.core.util.CharUtil;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.ClassUtil;
 import cn.hutool.core.util.HexUtil;
@@ -777,7 +778,7 @@ public static String toSBC(String input, Set<Character> notConvertSet) {
 				continue;
 			}
 
-			if (c[i] == ' ') {
+			if (c[i] == CharUtil.SPACE) {
 				c[i] = '\u3000';
 			} else if (c[i] < '\177') {
 				c[i] = (char) (c[i] + 65248);

File: hutool-http/src/main/java/cn/hutool/http/useragent/OS.java
Patch:
@@ -36,7 +36,7 @@ public class OS extends UserAgentInfo {
 			new OS("Windows", "windows"), //
 			new OS("OSX", "os x (\\d+)[._](\\d+)", "os x (\\d+([._]\\d+)*)"), //
 			new OS("Android", "Android", "Android (\\d+([._]\\d+)*)"),//
-			new OS("Android", "\\(X\\d+; Linux", "\\(X(\\d+([._]\\d+)*)"),//
+			new OS("Android", "XiaoMi|MI\\s+", "\\(X(\\d+([._]\\d+)*)"),//
 			new OS("Linux", "linux"), //
 			new OS("Wii", "wii", "wii libnup/(\\d+([._]\\d+)*)"), //
 			new OS("PS3", "playstation 3", "playstation 3; (\\d+([._]\\d+)*)"), //

File: hutool-http/src/main/java/cn/hutool/http/useragent/Platform.java
Patch:
@@ -54,7 +54,7 @@ public class Platform extends UserAgentInfo {
 			IPAD, //
 			IPOD, //
 			IPHONE, //
-			new Platform("Android", "XiaoMi|MI "), //
+			new Platform("Android", "XiaoMi|MI\\s+"), //
 			ANDROID, //
 			GOOGLE_TV, //
 			new Platform("htcFlyer", "htc_flyer"), //

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -158,6 +158,7 @@ public static ExecutorService newFixedExecutor(int nThreads, String threadNamePr
 	 * </pre>
 	 *
 	 * @param nThreads         线程池大小
+	 * @param maximumQueueSize 队列大小
 	 * @param threadNamePrefix 线程名称前缀
 	 * @param isBlocked        是否使用{@link BlockPolicy}策略
 	 * @return ExecutorService

File: hutool-http/src/main/java/cn/hutool/http/HttpConfig.java
Patch:
@@ -277,6 +277,7 @@ public HttpConfig addRequestInterceptor(HttpInterceptor<HttpRequest> interceptor
 	 * 设置拦截器，用于在请求前重新编辑请求
 	 *
 	 * @param interceptor 拦截器实现
+	 * @return this
 	 */
 	public HttpConfig addResponseInterceptor(HttpInterceptor<HttpResponse> interceptor) {
 		this.responseInterceptors.addChain(interceptor);

File: hutool-poi/src/test/java/cn/hutool/poi/excel/ExcelReadTest.java
Patch:
@@ -245,9 +245,9 @@ public void readColumnTest(){
 		Assert.assertEquals("", objects.get(2));
 	}
 
-	@Test(expected = NullPointerException.class)
-	@Ignore
+	@Test
 	public void readColumnNPETest() {
+		// https://github.com/dromara/hutool/pull/2234
 		ExcelReader reader = ExcelUtil.getReader(ResourceUtil.getStream("read_row_npe.xlsx"));
 		reader.readColumn(0, 1);
 	}

File: hutool-core/src/main/java/cn/hutool/core/math/Calculator.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * 数学表达式计算工具类<br>
- * 见：https://github.com/looly/hutool/issues/1090#issuecomment-693750140
+ * 见：https://github.com/dromara/hutool/issues/1090#issuecomment-693750140
  *
  * @author trainliang, looly
  * @since 5.4.3

File: hutool-core/src/main/java/cn/hutool/core/net/NetUtil.java
Patch:
@@ -484,7 +484,7 @@ public static String getLocalhostStr() {
 	 * <p>
 	 * 此方法不会抛出异常，获取失败将返回{@code null}<br>
 	 * <p>
-	 * 见：https://github.com/looly/hutool/issues/428
+	 * 见：https://github.com/dromara/hutool/issues/428
 	 *
 	 * @return 本机网卡IP地址，获取失败返回{@code null}
 	 * @since 3.0.1

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -492,7 +492,7 @@ public Person2(String name, int age, String openid) {
 	}
 
 	/**
-	 * <a href="https://github.com/looly/hutool/issues/1173">#1173</a>
+	 * <a href="https://github.com/dromara/hutool/issues/1173">#1173</a>
 	 */
 	@Test
 	public void beanToBeanOverlayFieldTest() {

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -955,7 +955,7 @@ public void parseISO8601Test() {
 
 	@Test(expected = DateException.class)
 	public void parseNotFitTest() {
-		//https://github.com/looly/hutool/issues/1332
+		//https://github.com/dromara/hutool/issues/1332
 		// 在日期格式不匹配的时候，测试是否正常报错
 		DateUtil.parse("2020-12-23", DatePattern.PURE_DATE_PATTERN);
 	}

File: hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java
Patch:
@@ -150,7 +150,7 @@ public void zlibTest() {
 	@Test
 	@Ignore
 	public void zipStreamTest(){
-		//https://github.com/looly/hutool/issues/944
+		//https://github.com/dromara/hutool/issues/944
 		String dir = "d:/test";
 		String zip = "d:/test.zip";
 		try (OutputStream out = new FileOutputStream(zip)){

File: hutool-http/src/test/java/cn/hutool/http/useragent/UserAgentUtilTest.java
Patch:
@@ -204,7 +204,7 @@ public void parseEdgeTest() {
 	}
 
 	/**
-	 * https://github.com/looly/hutool/issues/1177
+	 * https://github.com/dromara/hutool/issues/1177
 	 */
 	@Test
 	public void parseMicroMessengerTest() {

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -213,7 +213,7 @@ public void parseObjTest() {
 
 	@Test
 	public void sqlExceptionTest(){
-		//https://github.com/looly/hutool/issues/1399
+		//https://github.com/dromara/hutool/issues/1399
 		// SQLException实现了Iterable接口，默认是遍历之，会栈溢出，修正后只返回string
 		final JSONObject set = JSONUtil.createObj().set("test", new SQLException("test"));
 		Assert.assertEquals("{\"test\":\"java.sql.SQLException: test\"}", set.toString());

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/PemUtilTest.java
Patch:
@@ -65,7 +65,7 @@ public void readECPrivateKeyTest() {
 	@Test
 	@Ignore
 	public void readECPrivateKeyTest2() {
-		// https://gitee.com/loolly/hutool/issues/I37Z75
+		// https://gitee.com/dromara/hutool/issues/I37Z75
 		byte[] d = PemUtil.readPem(FileUtil.getInputStream("d:/test/keys/priv.key"));
 		byte[] publicKey = PemUtil.readPem(FileUtil.getInputStream("d:/test/keys/pub.key"));
 

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -296,7 +296,7 @@ public HttpRequest setUrl(UrlBuilder urlBuilder) {
 	 * 它会验证 SSL 服务器在数字证书中返回的主机名是否与用于连接 SSL 服务器的 URL 主机名相匹配。如果主机名不匹配，则删除此连接。<br>
 	 * 因此weblogic不支持https的sni协议的主机名验证，此时需要将此值设置为sun.net.www.protocol.https.Handler对象。
 	 * <p>
-	 * 相关issue见：https://gitee.com/loolly/hutool/issues/IMD1X
+	 * 相关issue见：https://gitee.com/dromara/hutool/issues/IMD1X
 	 *
 	 * @param urlHandler {@link URLStreamHandler}
 	 * @return this

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelPicUtil.java
Patch:
@@ -101,7 +101,7 @@ private static Map<String, PictureData> getPicMapXlsx(XSSFWorkbook workbook, int
 						ctMarker = pic.getPreferredSize().getFrom();
 						sheetIndexPicMap.put(StrUtil.format("{}_{}", ctMarker.getRow(), ctMarker.getCol()), pic.getPictureData());
 					}
-					// 其他类似于图表等忽略，see: https://gitee.com/loolly/hutool/issues/I38857
+					// 其他类似于图表等忽略，see: https://gitee.com/dromara/hutool/issues/I38857
 				}
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -143,9 +143,9 @@ public interface RegexPool {
 	 * 中国车牌号码（兼容新能源车牌）
 	 */
 	String PLATE_NUMBER =
-			//https://gitee.com/loolly/hutool/issues/I1B77H?from=project-issue
+			//https://gitee.com/dromara/hutool/issues/I1B77H?from=project-issue
 			"^(([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z](([0-9]{5}[ABCDEFGHJK])|([ABCDEFGHJK]([A-HJ-NP-Z0-9])[0-9]{4})))|" +
-					//https://gitee.com/loolly/hutool/issues/I1BJHE?from=project-issue
+					//https://gitee.com/dromara/hutool/issues/I1BJHE?from=project-issue
 					"([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]\\d{3}\\d{1,3}[领])|" +
 					"([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]))$";
 

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -399,7 +399,7 @@ public UrlBuilder setQuery(UrlQuery query) {
 	 * @param value 值
 	 * @return this
 	 */
-	public UrlBuilder addQuery(String key, String value) {
+	public UrlBuilder addQuery(String key, Object value) {
 		if (StrUtil.isEmpty(key)) {
 			return this;
 		}

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -781,7 +781,6 @@ public static String toSBC(String input, Set<Character> notConvertSet) {
 				c[i] = '\u3000';
 			} else if (c[i] < '\177') {
 				c[i] = (char) (c[i] + 65248);
-
 			}
 		}
 		return new String(c);

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -154,11 +154,12 @@ public static ExecutorService newFixedExecutor(int nThreads, String threadNamePr
 	 * <pre>
 	 *     1. 核心线程数与最大线程数为nThreads指定的大小
 	 *     2. 默认使用LinkedBlockingQueue
-	 *     3. 当执行拒绝策略的时候会处于阻塞状态，直到能添加到队列中或者被{@link Thread#interrupt()}中断
+	 *     3. 如果isBlocked为{code true}，当执行拒绝策略的时候会处于阻塞状态，直到能添加到队列中或者被{@link Thread#interrupt()}中断
 	 * </pre>
 	 *
 	 * @param nThreads         线程池大小
 	 * @param threadNamePrefix 线程名称前缀
+	 * @param isBlocked        是否使用{@link BlockPolicy}策略
 	 * @return ExecutorService
 	 * @author luozongle
 	 * @since 5.8.0

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/digest/HmacTest.java
Patch:
@@ -73,8 +73,8 @@ public void zuc128MacTest(){
 
 	@Test
 	public void zuc256MacTest(){
-		byte[] iv = new byte[25];
 		final byte[] key = new byte[32];
+		byte[] iv = new byte[25];
 		HMac mac = new HMac("ZUC-256",
 				KeyUtil.generateKey(ZUC.ZUCAlgorithm.ZUC_128.getValue(), key),
 				new IvParameterSpec(iv));

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -11,7 +11,6 @@
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.ReflectUtil;
-import com.sun.xml.internal.ws.util.xml.NodeListIterator;
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 
@@ -1035,10 +1034,10 @@ public static Iterator<?> getIter(final Object obj) {
 		} else if (obj instanceof Map) {
 			return ((Map<?, ?>) obj).entrySet().iterator();
 		} else if (obj instanceof NodeList) {
-			return new NodeListIterator((NodeList) obj);
+			return new NodeListIter((NodeList) obj);
 		} else if (obj instanceof Node) {
 			// 遍历子节点
-			return new NodeListIterator(((Node) obj).getChildNodes());
+			return new NodeListIter(((Node) obj).getChildNodes());
 		} else if (obj instanceof Dictionary) {
 			return new EnumerationIter<>(((Dictionary<?, ?>) obj).elements());
 		}

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -288,7 +288,7 @@ public static <K, V> HashMap<K, V> of(K key, V value, boolean isOrder) {
 	 * @param pairs 键值对
 	 * @return Map
 	 * @since 5.4.1
-	 * @deprecated 方法容易歧义，请使用 {@link #ofEntries(Entry[])}
+	 * @deprecated 方法容易歧义，请使用 {@code #ofEntries(Entry[])}
 	 */
 	@SafeVarargs
 	@Deprecated

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -211,7 +211,6 @@ public ExcelWriter setSheet(String sheetName) {
 	 */
 	public ExcelWriter reset() {
 		resetRow();
-		this.headLocationCache = null;
 		return this;
 	}
 

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -137,7 +137,8 @@ public boolean match(Calendar calendar, boolean isMatchSecond) {
 	}
 
 	/**
-	 * 返回匹配到的下一个时间
+	 * 返回匹配到的下一个时间<br>
+	 * TODO 周定义后，结果错误，需改进
 	 *
 	 * @param calendar 时间
 	 * @return 匹配到的下一个时间

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityTemplate.java
Patch:
@@ -56,7 +56,7 @@ public void render(Map<?, ?> bindingMap, OutputStream out) {
 		if(null == charset) {
 			loadEncoding();
 		}
-		render(bindingMap, IoUtil.getWriter(out, this.charset));
+		render(bindingMap, IoUtil.getWriter(out, CharsetUtil.charset(this.charset)));
 	}
 
 	/**

File: hutool-json/src/test/java/cn/hutool/json/test/bean/PerfectEvaluationProductResVo.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.json.test.bean;
 
 import lombok.Data;
+import lombok.EqualsAndHashCode;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -10,6 +11,7 @@
  * @version 创建时间：2017年9月13日 下午5:16:32
  * 类说明
  */
+@EqualsAndHashCode(callSuper = true)
 @Data
 public class PerfectEvaluationProductResVo extends ProductResBase {
 	private static final long serialVersionUID = 1L;

File: hutool-json/src/test/java/cn/hutool/json/xml/XMLTest.java
Patch:
@@ -3,9 +3,10 @@
 import cn.hutool.json.JSONObject;
 import cn.hutool.json.JSONUtil;
 import cn.hutool.json.XML;
+import org.hamcrest.CoreMatchers;
+import org.hamcrest.MatcherAssert;
 import org.junit.Assert;
 import org.junit.Test;
-import org.hamcrest.CoreMatchers;
 
 public class XMLTest {
 
@@ -15,7 +16,7 @@ public void toXmlTest(){
 				.set("aaa", "你好")
 				.set("键2", "test");
 		final String s = JSONUtil.toXmlStr(put);
-		Assert.assertThat(s, CoreMatchers.anyOf(CoreMatchers.is("<aaa>你好</aaa><键2>test</键2>"), CoreMatchers.is("<键2>test</键2><aaa>你好</aaa>")));
+		MatcherAssert.assertThat(s, CoreMatchers.anyOf(CoreMatchers.is("<aaa>你好</aaa><键2>test</键2>"), CoreMatchers.is("<键2>test</键2><aaa>你好</aaa>")));
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/NullCell.java
Patch:
@@ -58,7 +58,6 @@ public Row getRow() {
 		return this.row;
 	}
 
-	@Override
 	public void setCellType(CellType cellType) {
 		throw new UnsupportedOperationException("Can not set any thing to null cell!");
 	}

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -680,7 +680,7 @@ public static <K, V> Map<K, V> filter(Map<K, V> map, Filter<Entry<K, V>> filter)
 	 * @param <K>        {@code key}的类型
 	 * @param <V>        {@code value}的类型
 	 * @param <R>        新的，修改后的{@code value}的类型
-	 * @return 值可以为不同类型的 {@link Map
+	 * @return 值可以为不同类型的 {@link Map}
 	 * @since 5.8.0
 	 */
 	public static <K, V, R> Map<K, R> map(Map<K, V> map, BiFunction<K, V, R> biFunction) {

File: hutool-core/src/test/java/cn/hutool/core/date/WeekTest.java
Patch:
@@ -37,6 +37,7 @@ public void ofTest(){
 		Assert.assertEquals(Week.SATURDAY, Week.of("SATURDAY"));
 	}
 
+	@Test
 	public void ofTest2(){
 		Assert.assertEquals(Week.SUNDAY, Week.of(DayOfWeek.SUNDAY));
 		Assert.assertEquals(Week.MONDAY, Week.of(DayOfWeek.MONDAY));

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -643,7 +643,7 @@ public static Class<?> getElementType(Iterable<?> iterable) {
 	 */
 	public static Class<?> getElementType(Iterator<?> iterator) {
 		final Iterator<?> iter2 = new CopiedIter<>(iterator);
-		if (iter2.hasNext()) {
+		while (iter2.hasNext()) {
 			final Object t = iter2.next();
 			if (null != t) {
 				return t.getClass();

File: hutool-cron/src/test/java/cn/hutool/cron/pattern/CronPatternNextMatchTest.java
Patch:
@@ -14,7 +14,7 @@ public void nextMatchAfterTest(){
 		CronPattern pattern = new CronPattern("23 12 * 12 * * *");
 		//noinspection ConstantConditions
 		final Calendar calendar = pattern.nextMatchAfter(
-				DateUtil.parse("2022-04-12 09:12:12").toCalendar());
+				DateUtil.parse("2022-04-12 09:12:24").toCalendar());
 
 		Console.log(DateUtil.date(calendar));
 		Assert.assertTrue(pattern.match(calendar, true));

File: hutool-cron/src/main/java/cn/hutool/cron/package-info.java
Patch:
@@ -7,6 +7,8 @@
  *     <li>{@link cn.hutool.cron.pattern.CronPattern} 定时任务表达式，用于定义任务触发时间</li>
  * </ul>
  *
+ * 同时，提供了{@link cn.hutool.cron.CronUtil}工具类，维护一个全局的{@link cn.hutool.cron.Scheduler}。
+ *
  * @author looly
  */
 package cn.hutool.cron;

File: hutool-cron/src/main/java/cn/hutool/cron/timingwheel/package-info.java
Patch:
@@ -7,6 +7,5 @@
  * 参考：https://github.com/eliasyaoyc/timingwheel
  *
  * @author looly
- *
  */
 package cn.hutool.cron.timingwheel;

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPatternBuilder.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.util.StrUtil;
 
 public class CronPatternBuilder implements Builder<String> {
+	private static final long serialVersionUID = 1L;
 
 	final String[] parts = new String[7];
 

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/PartMatcher.java
Patch:
@@ -9,8 +9,10 @@
  * @author Looly
  */
 public interface PartMatcher extends Matcher<Integer> {
+
 	/**
 	 * 获取指定值之后的匹配值，也可以是指定值本身
+	 *
 	 * @param value 指定的值
 	 * @return 匹配到的值或之后的值
 	 */

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/AlwaysTrueMatcher.java
Patch:
@@ -7,9 +7,9 @@
  *
  * @author Looly
  */
-public class AlwaysTrueValueMatcher implements ValueMatcher {
+public class AlwaysTrueMatcher implements PartMatcher {
 
-	public static AlwaysTrueValueMatcher INSTANCE = new AlwaysTrueValueMatcher();
+	public static AlwaysTrueMatcher INSTANCE = new AlwaysTrueMatcher();
 
 	@Override
 	public boolean match(Integer t) {

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/BoolArrayMatcher.java
Patch:
@@ -12,7 +12,7 @@
  *
  * @author Looly
  */
-public class BoolArrayValueMatcher implements ValueMatcher {
+public class BoolArrayMatcher implements PartMatcher {
 
 	/**
 	 * 用户定义此字段的最小值
@@ -25,7 +25,7 @@ public class BoolArrayValueMatcher implements ValueMatcher {
 	 *
 	 * @param intValueList 匹配值列表
 	 */
-	public BoolArrayValueMatcher(List<Integer> intValueList) {
+	public BoolArrayMatcher(List<Integer> intValueList) {
 		Assert.isTrue(CollUtil.isNotEmpty(intValueList), "Values must be not empty!");
 		bValues = new boolean[Collections.max(intValueList) + 1];
 		int min = Integer.MAX_VALUE;

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/DayOfMonthMatcher.java
Patch:
@@ -10,14 +10,14 @@
  *
  * @author Looly
  */
-public class DayOfMonthValueMatcher extends BoolArrayValueMatcher {
+public class DayOfMonthMatcher extends BoolArrayMatcher {
 
 	/**
 	 * 构造
 	 *
 	 * @param intValueList 匹配的日值
 	 */
-	public DayOfMonthValueMatcher(List<Integer> intValueList) {
+	public DayOfMonthMatcher(List<Integer> intValueList) {
 		super(intValueList);
 	}
 

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/PartMatcher.java
Patch:
@@ -3,12 +3,12 @@
 import cn.hutool.core.lang.Matcher;
 
 /**
- * 值匹配器<br>
+ * 表达式中的某个位置部分匹配器<br>
  * 用于匹配日期位中对应数字是否匹配
  *
  * @author Looly
  */
-public interface ValueMatcher extends Matcher<Integer> {
+public interface PartMatcher extends Matcher<Integer> {
 	/**
 	 * 获取指定值之后的匹配值，也可以是指定值本身
 	 * @param value 指定的值

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/YearValueMatcher.java
Patch:
@@ -9,7 +9,7 @@
  *
  * @author Looly
  */
-public class YearValueMatcher implements ValueMatcher {
+public class YearValueMatcher implements PartMatcher {
 
 	private final LinkedHashSet<Integer> valueList;
 

File: hutool-cron/src/main/java/cn/hutool/cron/CronConfig.java
Patch:
@@ -45,7 +45,7 @@ public TimeZone getTimeZone() {
 	/**
 	 * 是否支持秒匹配
 	 *
-	 * @return <code>true</code>使用，<code>false</code>不使用
+	 * @return {@code true}使用，{@code false}不使用
 	 */
 	public boolean isMatchSecond() {
 		return this.matchSecond;
@@ -54,7 +54,7 @@ public boolean isMatchSecond() {
 	/**
 	 * 设置是否支持秒匹配，默认不使用
 	 *
-	 * @param isMatchSecond <code>true</code>支持，<code>false</code>不支持
+	 * @param isMatchSecond {@code true}支持，{@code false}不支持
 	 * @return this
 	 */
 	public CronConfig setMatchSecond(boolean isMatchSecond) {

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/DateTimeMatcher.java
Patch:
@@ -63,8 +63,8 @@ public DateTimeMatcher(ValueMatcher secondMatcher,
 	 * @param minute     分钟
 	 * @param hour       小时
 	 * @param dayOfMonth 天
-	 * @param month      月
-	 * @param dayOfWeek  周几
+	 * @param month      月，从1开始
+	 * @param dayOfWeek  周，从0开始，0和7都表示周日
 	 * @param year       年
 	 * @return 如果匹配返回 {@code true}, 否则返回 {@code false}
 	 */

File: hutool-cron/src/test/java/cn/hutool/cron/pattern/CronPatternNextMatchTest.java
Patch:
@@ -11,6 +11,7 @@ public class CronPatternNextMatchTest {
 	@Test
 	public void nextMatchAfterTest(){
 		CronPattern pattern = new CronPattern("23 12 * 12 * * *");
+		//noinspection ConstantConditions
 		final Calendar calendar = pattern.nextMatchAfter(
 				DateUtil.parse("2022-04-12 09:12:23").toCalendar());
 		Console.log(DateUtil.date(calendar));

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -79,7 +79,6 @@ public CronPattern(String pattern) {
 	}
 
 	// --------------------------------------------------------------------------------------- match start
-
 	/**
 	 * 给定时间是否匹配定时任务表达式
 	 *

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -146,6 +146,7 @@ public File readTo(File outFile, Filter<ZipEntry> entryFilter) throws IORuntimeE
 				//gitee issue #I4ZDQI
 				String path = zipEntry.getName();
 				if (FileUtil.isWindows()) {
+					// Win系统下
 					path = StrUtil.replace(path, "*", "_");
 				}
 				// FileUtil.file会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -146,7 +146,7 @@ public File readTo(File outFile, Filter<ZipEntry> entryFilter) throws IORuntimeE
 				//gitee issue #I4ZDQI
 				String path = zipEntry.getName();
 				if (FileUtil.isWindows()) {
-					path = StrUtil.replace(zipEntry.getName(), "*", "_");
+					path = StrUtil.replace(path, "*", "_");
 				}
 				// FileUtil.file会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/
 				final File outItemFile = FileUtil.file(outFile, path);

File: hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java
Patch:
@@ -221,7 +221,7 @@ public static List<String> getFieldNames(Class<? extends Enum<?>> clazz) {
 	 * @return 对应枚举 ，获取不到时为 {@code null}
 	 */
 	public static <E extends Enum<E>, C> E getBy(Func1<E, C> condition, C value) {
-		return Arrays.stream(LambdaUtil.getInstantiatedClass(condition).getEnumConstants()).filter(e -> condition.callWithRuntimeException(e).equals(value)).findAny().orElse(null);
+		return Arrays.stream(LambdaUtil.getImplClass(condition).getEnumConstants()).filter(e -> condition.callWithRuntimeException(e).equals(value)).findAny().orElse(null);
 	}
 
 	/**
@@ -236,7 +236,7 @@ public static <E extends Enum<E>, C> E getBy(Func1<E, C> condition, C value) {
 	 * @return 对应枚举中另一字段值 ，获取不到时为 {@code null}
 	 */
 	public static <E extends Enum<E>, F, C> F getFieldBy(Function<E, F> field, Func1<E, C> condition, C value) {
-		return Arrays.stream(LambdaUtil.getInstantiatedClass(condition).getEnumConstants()).filter(e -> condition.callWithRuntimeException(e).equals(value)).findAny().map(field).orElse(null);
+		return Arrays.stream(LambdaUtil.getImplClass(condition).getEnumConstants()).filter(e -> condition.callWithRuntimeException(e).equals(value)).findAny().map(field).orElse(null);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/map/MapUtilTest.java
Patch:
@@ -56,15 +56,15 @@ public void filterTest() {
 	}
 
 	@Test
-	public void changeTest() {
+	public void mapTest() {
 		// Add test like a foreigner
 		Map<Integer, String> adjectivesMap = MapUtil.<Integer, String>builder()
 				.put(0, "lovely")
 				.put(1, "friendly")
 				.put(2, "happily")
 				.build();
 
-		Map<Integer, String> resultMap = MapUtil.change(adjectivesMap, (k, v) -> v + " " + PeopleEnum.values()[k].name().toLowerCase());
+		Map<Integer, String> resultMap = MapUtil.map(adjectivesMap, (k, v) -> v + " " + PeopleEnum.values()[k].name().toLowerCase());
 
 		Assert.assertEquals("lovely girl", resultMap.get(0));
 		Assert.assertEquals("friendly boy", resultMap.get(1));
@@ -80,7 +80,7 @@ public void changeTest() {
 		Map<Long, List<Long>> groupIdUserIdsMap = groups.stream().flatMap(group -> idUserMap.keySet().stream().map(userId -> UserGroup.builder().groupId(group.getId()).userId(userId).build())).collect(Collectors.groupingBy(UserGroup::getUserId, Collectors.mapping(UserGroup::getGroupId, Collectors.toList())));
 
 		// 神奇的魔法发生了， 分组id和用户ids组成的map，竟然变成了订单编号和用户实体集合组成的map
-		Map<Long, List<User>> groupIdUserMap = MapUtil.change(groupIdUserIdsMap, (groupId, userIds) -> userIds.stream().map(idUserMap::get).collect(Collectors.toList()));
+		Map<Long, List<User>> groupIdUserMap = MapUtil.map(groupIdUserIdsMap, (groupId, userIds) -> userIds.stream().map(idUserMap::get).collect(Collectors.toList()));
 
 		// 然后你就可以拿着这个map，去封装groups，使其能够在订单数据带出客户信息啦
 		groups.forEach(group -> Opt.ofNullable(group.getId()).map(groupIdUserMap::get).ifPresent(group::setUsers));

File: hutool-json/src/main/java/cn/hutool/json/JSONSupport.java
Patch:
@@ -20,9 +20,9 @@ public void parse(String jsonString) {
 	}
 
 	/**
-	 * JSON String转Bean
+	 * JSON转Bean
 	 *
-	 * @param json JSON String
+	 * @param json JSON
 	 */
 	@Override
 	public void parse(JSON json) {

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -188,10 +188,11 @@ public void toBeanNullStrTest() {
 		JSONObject json = JSONUtil.createObj()//
 				.set("strValue", "null")//
 				.set("intValue", 123)//
+				// 子对象对应"null"字符串，如果忽略错误，跳过，否则抛出转换异常
 				.set("beanValue", "null")//
 				.set("list", JSONUtil.createArray().set("a").set("b"));
 
-		TestBean bean = json.toBean(TestBean.class);
+		TestBean bean = json.toBean(TestBean.class, true);
 		// 当JSON中为字符串"null"时应被当作字符串处理
 		Assert.assertEquals("null", bean.getStrValue());
 		// 当JSON中为字符串"null"时Bean中的字段类型不匹配应在ignoreError模式下忽略注入

File: hutool-http/src/test/java/cn/hutool/http/HttpRequestTest.java
Patch:
@@ -151,7 +151,7 @@ public void getWithoutEncodeTest() {
 
 	@Test
 	@Ignore
-	public void followRedirectsTest(){
+	public void followRedirectsTest() {
 		// 从5.7.19开始关闭JDK的自动重定向功能，改为手动重定向
 		// 当有多层重定向时，JDK的重定向会失效，或者说只有最后一个重定向有效，因此改为手动更易控制次数
 		// 此链接有两次重定向，当设置次数为1时，表示最多执行一次重定向，即请求2次
@@ -167,5 +167,4 @@ public void followRedirectsTest(){
 		execute = HttpRequest.get(url).setMaxRedirectCount(1).execute();
 		Console.log(execute.getStatus(), execute.header(Header.LOCATION));
 	}
-
 }

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -145,7 +145,7 @@ public File readTo(File outFile, Filter<ZipEntry> entryFilter) throws IORuntimeE
 			if (null == entryFilter || entryFilter.accept(zipEntry)) {
 				//gitee issue #I4ZDQI
 				String path = zipEntry.getName();
-				if (System.getProperty("os.name").contains("Windows")) {
+				if (System.getProperty("os.name").toLowerCase().startsWith("win")) {
 					path = StrUtil.replace(zipEntry.getName(), "*", "_");
 				}
 				// FileUtil.file会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -144,12 +144,12 @@ public File readTo(File outFile, Filter<ZipEntry> entryFilter) throws IORuntimeE
 		read((zipEntry) -> {
 			if (null == entryFilter || entryFilter.accept(zipEntry)) {
 				//gitee issue #I4ZDQI
-				String replace = zipEntry.getName();
+				String path = zipEntry.getName();
 				if (System.getProperty("os.name").contains("Windows")) {
-					replace = StrUtil.replace(zipEntry.getName(), "*", "_");
+					path = StrUtil.replace(zipEntry.getName(), "*", "_");
 				}
 				// FileUtil.file会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/
-				final File outItemFile = FileUtil.file(outFile, replace);
+				final File outItemFile = FileUtil.file(outFile, path);
 				if (zipEntry.isDirectory()) {
 					// 目录
 					//noinspection ResultOfMethodCallIgnored

File: hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java
Patch:
@@ -127,10 +127,10 @@ public static String removeHtmlTag(String content, boolean withTagContent, Strin
 			// (?i)表示其后面的表达式忽略大小写
 			if (withTagContent) {
 				// 标签及其包含内容
-				regex = StrUtil.format("(?i)<{}(\\s+[^>]*)?/?>(.*?</{}>)?", tagName, tagName);
+				regex = StrUtil.format("(?i)<{}(\\s+[^>]*?)?/?>(.*?</{}>)?", tagName, tagName);
 			} else {
 				// 标签不包含内容
-				regex = StrUtil.format("(?i)<{}(\\s+[^>]*)?/?>|</?{}>", tagName, tagName);
+				regex = StrUtil.format("(?i)<{}(\\s+[^>]*?)?/?>|</?{}>", tagName, tagName);
 			}
 
 			content = ReUtil.delAll(regex, content); // 非自闭标签小写

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvParser.java
Patch:
@@ -397,7 +397,8 @@ public final boolean hasRemaining() {
 		}
 
 		/**
-		 * 读取到缓存
+		 * 读取到缓存<br>
+		 * 全量读取，会重置Buffer中所有数据
 		 *
 		 * @param reader {@link Reader}
 		 */

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -75,7 +75,7 @@ public class CronPattern {
 	 */
 	public CronPattern(String pattern) {
 		this.pattern = pattern;
-		this.matcherTable = CronPatternParser.create().parse(pattern);
+		this.matcherTable = CronPatternParser.parse(pattern);
 	}
 
 	// --------------------------------------------------------------------------------------- match start

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -2197,6 +2197,9 @@ public static String getShotName(TimeUnit unit) {
 	public static boolean isOverlap(Date realStartTime, Date realEndTime,
 									Date startTime, Date endTime) {
 
+		// x>b||a>y 无交集
+		// 则有交集的逻辑为 !(x>b||a>y)
+		// 根据德摩根公式，可化简为 x<=b && a<=y
 		return startTime.before(realEndTime) && endTime.after(realStartTime);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -2196,7 +2196,8 @@ public static String getShotName(TimeUnit unit) {
 	 */
 	public static boolean isOverlap(Date realStartTime, Date realEndTime,
 									Date startTime, Date endTime) {
-		return startTime.after(realEndTime) || endTime.before(realStartTime);
+
+		return startTime.before(realEndTime) && endTime.after(realStartTime);
 	}
 
 	// ------------------------------------------------------------------------ Private method start

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -564,7 +564,7 @@ public static Week dayOfWeek(LocalDate localDate) {
 	 */
 	public static boolean isOverlap(ChronoLocalDateTime<?> realStartTime, ChronoLocalDateTime<?> realEndTime,
 									ChronoLocalDateTime<?> startTime, ChronoLocalDateTime<?> endTime) {
-		return startTime.isAfter(realEndTime) || endTime.isBefore(realStartTime);
+		return startTime.isBefore(realEndTime) && endTime.isAfter(realStartTime);
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java
Patch:
@@ -345,7 +345,7 @@ public static ExcelWriter getWriter(File destFile, String sheetName) {
 	 * @return {@link BigExcelWriter}
 	 * @since 4.1.13
 	 */
-	public static ExcelWriter getBigWriter() {
+	public static BigExcelWriter getBigWriter() {
 		try {
 			return new BigExcelWriter();
 		} catch (NoClassDefFoundError e) {
@@ -362,7 +362,7 @@ public static ExcelWriter getBigWriter() {
 	 * @return {@link BigExcelWriter}
 	 * @since 4.1.13
 	 */
-	public static ExcelWriter getBigWriter(int rowAccessWindowSize) {
+	public static BigExcelWriter getBigWriter(int rowAccessWindowSize) {
 		try {
 			return new BigExcelWriter(rowAccessWindowSize);
 		} catch (NoClassDefFoundError e) {

File: hutool-core/src/main/java/cn/hutool/core/text/AntPathMatcher.java
Patch:
@@ -137,6 +137,7 @@ public AntPathMatcher setTrimTokens(boolean trimTokens) {
 	 *
 	 * @param cachePatterns 是否缓存表达式
 	 * @see #getStringMatcher(String)
+	 * @return this
 	 */
 	public AntPathMatcher setCachePatterns(boolean cachePatterns) {
 		this.cachePatterns = cachePatterns;

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -152,7 +152,6 @@ public boolean match(TimeZone timezone, long millis, boolean isMatchSecond) {
 	 * @return 如果匹配返回 {@code true}, 否则返回 {@code false}
 	 */
 	public boolean match(GregorianCalendar calendar, boolean isMatchSecond) {
-		final int second = calendar.get(Calendar.SECOND);
 		final int minute = calendar.get(Calendar.MINUTE);
 		final int hour = calendar.get(Calendar.HOUR_OF_DAY);
 		final int dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);
@@ -162,7 +161,7 @@ public boolean match(GregorianCalendar calendar, boolean isMatchSecond) {
 
 		boolean eval;
 		for (int i = 0; i < matcherSize; i++) {
-			eval = ((false == isMatchSecond) || secondMatchers.get(i).match(second)) // 匹配秒（非秒匹配模式下始终返回true）
+			eval = ((false == isMatchSecond) || secondMatchers.get(i).match(calendar.get(Calendar.SECOND))) // 匹配秒（非秒匹配模式下始终返回true）
 					&& minuteMatchers.get(i).match(minute)// 匹配分
 					&& hourMatchers.get(i).match(hour)// 匹配时
 					&& isMatchDayOfMonth(dayOfMonthMatchers.get(i), dayOfMonth, month, calendar.isLeapYear(year))// 匹配日

File: hutool-core/src/main/java/cn/hutool/core/codec/Base64.java
Patch:
@@ -217,7 +217,7 @@ public static String encodeUrlSafe(File file) {
 	 * @since 5.7.2
 	 */
 	public static String encodeStr(byte[] arr, boolean isMultiLine, boolean isUrlSafe) {
-		return Base64Encoder.encodeStr(arr, isMultiLine, isUrlSafe);
+		return StrUtil.str(encode(arr, isMultiLine, isUrlSafe), DEFAULT_CHARSET);
 	}
 
 	/**

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/HMac.java
Patch:
@@ -163,7 +163,8 @@ public String digestBase64(String data, boolean isUrlSafe) {
 	 * @return 摘要
 	 */
 	public String digestBase64(String data, Charset charset, boolean isUrlSafe) {
-		return Base64.encodeStr(digest(data, charset), false, isUrlSafe);
+		final byte[] digest = digest(data, charset);
+		return isUrlSafe ? Base64.encodeUrlSafe(digest) : Base64.encode(digest);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/mutable/MutableInt.java
Patch:
@@ -152,12 +152,12 @@ public double doubleValue() {
 	 * 相等需同时满足如下条件：
 	 * <ol>
 	 * 	<li>非空</li>
-	 * 	<li>类型为 {@link MutableInt}</li>
+	 * 	<li>类型为 MutableInt</li>
 	 * 	<li>值相等</li>
 	 * </ol>
 	 *
 	 * @param obj 比对的对象
-	 * @return 相同返回<code>true</code>，否则 <code>false</code>
+	 * @return 相同返回<code>true</code>，否则 {@code false}
 	 */
 	@Override
 	public boolean equals(final Object obj) {
@@ -176,7 +176,7 @@ public int hashCode() {
 	/**
 	 * 比较
 	 *
-	 * @param other 其它 {@link MutableInt} 对象
+	 * @param other 其它 MutableInt 对象
 	 * @return x==y返回0，x&lt;y返回-1，x&gt;y返回1
 	 */
 	@Override

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -1,5 +1,6 @@
 package cn.hutool.extra.mail;
 
+import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
@@ -578,6 +579,7 @@ public Properties getSmtpProps() {
 
 		// SSL
 		if (null != this.sslEnable && this.sslEnable) {
+			Console.log("{} {}", SOCKET_FACTORY, socketFactoryClass);
 			p.put(SSL_ENABLE, "true");
 			p.put(SOCKET_FACTORY, socketFactoryClass);
 			p.put(SOCKET_FACTORY_FALLBACK, String.valueOf(this.socketFactoryFallback));

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java
Patch:
@@ -4,10 +4,10 @@
 import cn.hutool.core.convert.Convert;
 import cn.hutool.core.lang.Editor;
 import cn.hutool.core.map.FuncKeyMap;
+import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 
 import java.lang.reflect.Type;
-import java.util.HashMap;
 import java.util.Map;
 
 /**
@@ -63,7 +63,7 @@ public MapValueProvider(Map<?, ?> map, boolean ignoreCase, boolean ignoreError)
 	public MapValueProvider(Map map, boolean ignoreCase, boolean ignoreError, Editor<String> keyEditor) {
 		// issue#2202@Github
 		// 如果用户定义了键编辑器，则提供的map中的数据必须全部转换key
-		this.map = new FuncKeyMap(new HashMap(map.size(), 1), (key)->{
+		this.map = new FuncKeyMap(ObjectUtil.clone(map), (key)->{
 			if(ignoreCase && key instanceof CharSequence){
 				key = key.toString().toLowerCase();
 			}
@@ -72,6 +72,7 @@ public MapValueProvider(Map map, boolean ignoreCase, boolean ignoreError, Editor
 			}
 			return key;
 		});
+		this.map.clear();
 		this.map.putAll(map);
 
 		this.ignoreError = ignoreError;

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -776,7 +776,7 @@ public static Object wrap(Object object, JSONConfig jsonConfig) {
 				return new JSONArray(object, jsonConfig);
 			}
 			// JSONObject
-			if (object instanceof Map) {
+			if (object instanceof Map || object instanceof Map.Entry) {
 				return new JSONObject(object, jsonConfig);
 			}
 

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONWriter.java
Patch:
@@ -223,7 +223,7 @@ private JSONWriter writeObjValue(Object value) {
 			writeRaw(JSONNull.NULL.toString());
 		} else if (value instanceof JSON) {
 			((JSON) value).write(writer, indentFactor, indent);
-		} else if (value instanceof Map) {
+		} else if (value instanceof Map || value instanceof Map.Entry) {
 			new JSONObject(value).write(writer, indentFactor, indent);
 		} else if (value instanceof Iterable || value instanceof Iterator || ArrayUtil.isArray(value)) {
 			new JSONArray(value).write(writer, indentFactor, indent);

File: hutool-json/src/test/java/cn/hutool/json/Issue1075Test.java
Patch:
@@ -20,6 +20,7 @@ public void testToBean() {
 	public void testToBeanIgnoreCase() {
 		// 在忽略大小写的情况下，f2、fac都匹配
 		ObjA o2 = JSONUtil.parseObj(jsonStr, JSONConfig.create().setIgnoreCase(true)).toBean(ObjA.class);
+
 		Assert.assertEquals("fac", o2.getFAC());
 		Assert.assertEquals("f2", o2.getF2());
 	}

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -713,7 +713,7 @@ public void beanToBeanCopyOptionsTest() {
 		CopyOptions copyOptions = CopyOptions.create().
 				//setIgnoreNullValue(true).
 				//setIgnoreCase(false).
-						setFieldNameEditor(StrUtil::toUnderlineCase);
+						setFieldNameEditor(StrUtil::toCamelCase);
 
 		ChildVo2 childVo2 = new ChildVo2();
 		BeanUtil.copyProperties(childVo1, childVo2, copyOptions);

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileAppender.java
Patch:
@@ -26,7 +26,8 @@ public class FileAppender implements Serializable{
 	private final int capacity;
 	/** 追加内容是否为新行 */
 	private final boolean isNewLineMode;
-	private final List<String> list = new ArrayList<>(100);
+	/** 数据行缓存 */
+	private final List<String> list;
 
 	/**
 	 * 构造
@@ -49,6 +50,7 @@ public FileAppender(File destFile, int capacity, boolean isNewLineMode) {
 	 */
 	public FileAppender(File destFile, Charset charset, int capacity, boolean isNewLineMode) {
 		this.capacity = capacity;
+		this.list = new ArrayList<>(capacity);
 		this.isNewLineMode = isNewLineMode;
 		this.writer = FileWriter.create(destFile, charset);
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -700,7 +700,7 @@ public static File mkParentDirs(File file) {
 		if (null == file) {
 			return null;
 		}
-		return mkdir(file.getParentFile());
+		return mkdir(getParent(file, 1));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java
Patch:
@@ -267,8 +267,7 @@ private void internalCopyFile(File src, File dest) throws IORuntimeException {
 			}
 		}else {
 			//路径不存在则创建父目录
-			//noinspection ResultOfMethodCallIgnored
-			dest.getAbsoluteFile().getParentFile().mkdirs();
+			FileUtil.mkParentDirs(dest);
 		}
 
 		final ArrayList<CopyOption> optionList = new ArrayList<>(2);

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java
Patch:
@@ -268,7 +268,7 @@ private void internalCopyFile(File src, File dest) throws IORuntimeException {
 		}else {
 			//路径不存在则创建父目录
 			//noinspection ResultOfMethodCallIgnored
-			dest.getParentFile().mkdirs();
+			dest.getAbsoluteFile().getParentFile().mkdirs();
 		}
 
 		final ArrayList<CopyOption> optionList = new ArrayList<>(2);

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberChineseFormatter.java
Patch:
@@ -68,6 +68,7 @@ public static String format(double amount, boolean isUseTraditional) {
 	 * @param unitName         单位名称 如：元、圆
 	 * @return java.lang.String
 	 * @author machuanpeng
+	 * @since 5.7.23
 	 */
 	public static String format(double amount, boolean isUseTraditional, boolean isMoneyMode, String negativeName, String unitName) {
 		if (0 == amount) {

File: hutool-core/src/main/java/cn/hutool/core/text/NamingCase.java
Patch:
@@ -157,7 +157,7 @@ public static String toCamelCase(CharSequence name) {
 	 * 将连接符方式命名的字符串转换为驼峰式。如果转换前的下划线大写方式命名的字符串为空，则返回空字符串。
 	 *
 	 * @param name   转换前的自定义方式命名的字符串
-	 * @param symbol 连接符
+	 * @param symbol 原字符串中的连接符连接符
 	 * @return 转换后的驼峰式命名的字符串
 	 * @since 5.7.17
 	 */

File: hutool-core/src/main/java/cn/hutool/core/text/NamingCase.java
Patch:
@@ -97,7 +97,7 @@ public static String toSymbolCase(CharSequence str, char symbol) {
 						// 后一个为大写，按照专有名词对待，如aBC -> a_BC
 					} else {
 						//前一个为大写
-						if (null == nextChar || Character.isLowerCase(nextChar)) {
+						if (null != nextChar && Character.isLowerCase(nextChar)) {
 							// 普通首字母大写，如ABcc -> A_bcc
 							sb.append(symbol);
 							c = Character.toLowerCase(c);

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -422,6 +422,7 @@ public void toUnderLineCaseTest() {
 				.set("H2", "H2")
 				.set("H#case", "H#case")
 				.set("PNLabel", "PN_label")
+				.set("DEPT_NAME","DEPT_NAME")
 				.forEach((key, value) -> Assert.assertEquals(value, StrUtil.toUnderlineCase(key)));
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/text/NamingCase.java
Patch:
@@ -97,7 +97,7 @@ public static String toSymbolCase(CharSequence str, char symbol) {
 						// 后一个为大写，按照专有名词对待，如aBC -> a_BC
 					} else {
 						//前一个为大写
-						if (null == nextChar || Character.isLowerCase(nextChar)) {
+						if (null != nextChar && Character.isLowerCase(nextChar)) {
 							// 普通首字母大写，如ABcc -> A_bcc
 							sb.append(symbol);
 							c = Character.toLowerCase(c);

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -422,6 +422,7 @@ public void toUnderLineCaseTest() {
 				.set("H2", "H2")
 				.set("H#case", "H#case")
 				.set("PNLabel", "PN_label")
+				.set("DEPT_NAME","DEPT_NAME")
 				.forEach((key, value) -> Assert.assertEquals(value, StrUtil.toUnderlineCase(key)));
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java
Patch:
@@ -268,7 +268,7 @@ private void internalCopyFile(File src, File dest) throws IORuntimeException {
 		}else {
 			//路径不存在则创建父目录
 			//noinspection ResultOfMethodCallIgnored
-			dest.getParentFile().mkdirs();
+			dest.getAbsoluteFile().getParentFile().mkdirs();
 		}
 
 		final ArrayList<CopyOption> optionList = new ArrayList<>(2);

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/XXTEA.java
Patch:
@@ -10,7 +10,7 @@
  * XXTEA（Corrected Block Tiny Encryption Algorithm）算法实现<br>
  * 来自：https://github.com/xxtea/xxtea-java
  *
- * @author Ma Bingyao <mabingyao@gmail.com>
+ * @author Ma Bingyao
  */
 public class XXTEA implements SymmetricEncryptor, SymmetricDecryptor, Serializable {
 	private static final long serialVersionUID = 1L;

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/NumberConverter.java
Patch:
@@ -186,15 +186,15 @@ protected static Number convert(Object value, Class<? extends Number> targetType
 			return StrUtil.isBlank(valueStr) ? null : NumberUtil.parseFloat(valueStr);
 		} else if (Double.class == targetType) {
 			if (value instanceof Number) {
-				return ((Number) value).doubleValue();
+				return NumberUtil.toDouble((Number) value);
 			} else if (value instanceof Boolean) {
 				return BooleanUtil.toDoubleObj((Boolean) value);
 			}
 			final String valueStr = toStrFunc.apply((value));
 			return StrUtil.isBlank(valueStr) ? null : NumberUtil.parseDouble(valueStr);
 		} else if (DoubleAdder.class == targetType) {
 			//jdk8 新增
-			final Number number = convert(value, Long.class, toStrFunc);
+			final Number number = convert(value, Double.class, toStrFunc);
 			if (null != number) {
 				final DoubleAdder doubleAdder = new DoubleAdder();
 				doubleAdder.add(number.doubleValue());

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberChineseFormatter.java
Patch:
@@ -188,7 +188,7 @@ public static String formatThousand(int amount, boolean isUseTraditional){
 		Assert.checkBetween(amount, -999, 999, "Number support only: (-999 ~ 999)！");
 
 		final String chinese = thousandToChinese(amount, isUseTraditional);
-		if(amount < 20 && amount > 10){
+		if(amount < 20 && amount >= 10){
 			// "十一"而非"一十一"
 			return chinese.substring(1);
 		}

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -8,7 +8,8 @@
 import java.util.Arrays;
 
 /**
- * 可复用的字符串生成器，非线程安全
+ * 可复用的字符串生成器，非线程安全<br>
+ *  TODO 6.x移除此类，java8的StringBuilder非常完善了，无需重写。
  *
  * @author Looly
  * @since 4.0.0

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -225,8 +225,8 @@ public static Map<String, PropertyDescriptor> getPropertyDescriptorMap(Class<?>
 	 */
 	private static Map<String, PropertyDescriptor> internalGetPropertyDescriptorMap(Class<?> clazz, boolean ignoreCase) throws BeanException {
 		final PropertyDescriptor[] propertyDescriptors = getPropertyDescriptors(clazz);
-		final Map<String, PropertyDescriptor> map = ignoreCase ? new CaseInsensitiveMap<>(propertyDescriptors.length, 1)
-				: new HashMap<>((int) (propertyDescriptors.length), 1);
+		final Map<String, PropertyDescriptor> map = ignoreCase ? new CaseInsensitiveMap<>(propertyDescriptors.length, 1f)
+				: new HashMap<>(propertyDescriptors.length, 1);
 
 		for (PropertyDescriptor propertyDescriptor : propertyDescriptors) {
 			map.put(propertyDescriptor.getName(), propertyDescriptor);

File: hutool-core/src/main/java/cn/hutool/core/map/CustomKeyMap.java
Patch:
@@ -18,11 +18,11 @@ public abstract class CustomKeyMap<K, V> extends MapWrapper<K, V> {
 	 * 构造<br>
 	 * 通过传入一个Map从而确定Map的类型，子类需创建一个空的Map，而非传入一个已有Map，否则值可能会被修改
 	 *
-	 * @param m Map 被包装的Map
+	 * @param emptyMap Map 被包装的Map，必须为空Map，否则自定义key会无效
 	 * @since 3.1.2
 	 */
-	public CustomKeyMap(Map<K, V> m) {
-		super(m);
+	public CustomKeyMap(Map<K, V> emptyMap) {
+		super(emptyMap);
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/map/FixedLinkedHashMap.java
Patch:
@@ -3,7 +3,8 @@
 import java.util.LinkedHashMap;
 
 /**
- * 固定大小的{@link LinkedHashMap} 实现
+ * 固定大小的{@link LinkedHashMap} 实现<br>
+ * 注意此类非线程安全，由于{@link #get(Object)}操作会修改链表的顺序结构，因此也不可以使用读写锁。
  *
  * @author looly
  *

File: hutool-core/src/main/java/cn/hutool/core/annotation/AnnotationProxy.java
Patch:
@@ -39,7 +39,7 @@ public AnnotationProxy(T annotation) {
 
 	@Override
 	public Class<? extends Annotation> annotationType() {
-		return null;
+		return type;
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/annotation/AnnotationProxy.java
Patch:
@@ -39,7 +39,7 @@ public AnnotationProxy(T annotation) {
 
 	@Override
 	public Class<? extends Annotation> annotationType() {
-		return null;
+		return type;
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileNameUtil.java
Patch:
@@ -45,7 +45,7 @@ public class FileNameUtil {
 	/**
 	 * 特殊后缀
 	 */
-	private static final CharSequence[] SPECIAL_SUFFIX = {"tar.bz2", "tar.Z", "tar.gz", ".tar.xz"};
+	private static final CharSequence[] SPECIAL_SUFFIX = {"tar.bz2", "tar.Z", "tar.gz", "tar.xz"};
 
 
 	// -------------------------------------------------------------------------------------------- name start

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileNameUtil.java
Patch:
@@ -45,7 +45,7 @@ public class FileNameUtil {
 	/**
 	 * 特殊后缀
 	 */
-	private static final CharSequence[] SPECIAL_SUFFIX = {"tar.bz2", "tar.Z", "tar.gz"};
+	private static final CharSequence[] SPECIAL_SUFFIX = {"tar.bz2", "tar.Z", "tar.gz", ".tar.xz"};
 
 
 	// -------------------------------------------------------------------------------------------- name start

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -848,7 +848,7 @@ public static <T> T newInstance(Class<T> clazz, Object... params) throws UtilExc
 	 *
 	 * @param <T>       对象类型
 	 * @param beanClass 被构造的类
-	 * @return 构造后的对象
+	 * @return 构造后的对象，构造失败返回{@code null}
 	 */
 	@SuppressWarnings("unchecked")
 	public static <T> T newInstanceIfPossible(Class<T> beanClass) {

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -122,7 +122,7 @@ public static <T> boolean hasNull(T... array) {
 				}
 			}
 		}
-		return false;
+		return array == null;
 	}
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -9,6 +9,7 @@
 import cn.hutool.core.io.resource.Resource;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.map.MapUtil;
+import cn.hutool.core.map.TableMap;
 import cn.hutool.core.net.SSLUtil;
 import cn.hutool.core.net.url.UrlBuilder;
 import cn.hutool.core.util.ArrayUtil;
@@ -32,7 +33,6 @@
 import java.net.URLStreamHandler;
 import java.nio.charset.Charset;
 import java.util.Collection;
-import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.function.Consumer;
 
@@ -1314,7 +1314,7 @@ private HttpRequest putToForm(String name, Object value) {
 			return this;
 		}
 		if (null == this.form) {
-			this.form = new LinkedHashMap<>();
+			this.form = new TableMap<>(16);
 		}
 		this.form.put(name, value);
 		return this;

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -122,7 +122,7 @@ public static <T> boolean hasNull(T... array) {
 				}
 			}
 		}
-		return false;
+		return array == null;
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -625,7 +625,7 @@ public static int emptyCount(Object... objs) {
 	 * @see ArrayUtil#hasNull(Object[])
 	 */
 	public static boolean hasNull(Object... objs) {
-		return objs == null || ArrayUtil.hasNull(objs);
+		return ArrayUtil.hasNull(objs);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -625,7 +625,7 @@ public static int emptyCount(Object... objs) {
 	 * @see ArrayUtil#hasNull(Object[])
 	 */
 	public static boolean hasNull(Object... objs) {
-		return ArrayUtil.hasNull(objs);
+		return objs == null || ArrayUtil.hasNull(objs);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/StrJoiner.java
Patch:
@@ -289,7 +289,7 @@ public <T> StrJoiner append(Iterator<T> iterator, Function<T, ? extends CharSequ
 
 	@Override
 	public StrJoiner append(CharSequence csq) {
-		return append(csq, 0, csq.length());
+		return append(csq, 0, StrUtil.length(csq));
 	}
 
 	@Override
@@ -303,6 +303,8 @@ public StrJoiner append(CharSequence csq, int startInclude, int endExclude) {
 					break;
 				case NULL_STRING:
 					csq = StrUtil.NULL;
+					endExclude = StrUtil.NULL.length();
+					break;
 			}
 		}
 		try {

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/DayOfMonthValueMatcher.java
Patch:
@@ -12,8 +12,6 @@
  */
 public class DayOfMonthValueMatcher extends BoolArrayValueMatcher {
 
-	private static final int[] LAST_DAYS = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
-
 	/**
 	 * 构造
 	 *

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/GanymedUtil.java
Patch:
@@ -79,7 +79,7 @@ public static String exec(Session session, String cmd, Charset charset, OutputSt
 			result = IoUtil.read(new StreamGobbler(session.getStdout()), charset);
 
 			// 错误输出
-			IoUtil.copy(new StreamGobbler(session.getStdout()), errStream);
+			IoUtil.copy(new StreamGobbler(session.getStderr()), errStream);
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		} finally {
@@ -91,7 +91,7 @@ public static String exec(Session session, String cmd, Charset charset, OutputSt
 	/**
 	 * 执行Shell命令
 	 * <p>
-	 * 此方法单次发送一个命令到服务端，自动读取环境变量，执行结束后自动关闭Session，不会产生阻塞。
+	 * 此方法单次发送一个命令到服务端，自动读取环境变量，执行结束后自动关闭Session，可能产生阻塞。
 	 * </p>
 	 *
 	 * @param session   Session会话
@@ -109,7 +109,7 @@ public static String execByShell(Session session, String cmd, Charset charset, O
 			result = IoUtil.read(new StreamGobbler(session.getStdout()), charset);
 			if(null != errStream){
 				// 错误输出
-				IoUtil.copy(new StreamGobbler(session.getStdout()), errStream);
+				IoUtil.copy(new StreamGobbler(session.getStderr()), errStream);
 			}
 		} catch (IOException e) {
 			throw new IORuntimeException(e);

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -719,6 +719,7 @@ private void init(CharSequence source) {
 		if (StrUtil.startWith(jsonStr, '<')) {
 			// 可能为XML
 			XML.toJSONObject(this, jsonStr, false);
+			return;
 		}
 		init(new JSONTokener(StrUtil.trim(source), this.config));
 	}

File: hutool-core/src/main/java/cn/hutool/core/util/CoordinateUtil.java
Patch:
@@ -167,7 +167,7 @@ private static Coordinate offset(double lng, double lat, boolean isPlus) {
 		dlng = (dlng * 180.0) / (RADIUS / sqrtMagic * Math.cos(lat / 180.0 * PI) * PI);
 		dlat = (dlat * 180.0) / ((RADIUS * (1 - CORRECTION_PARAM)) / (magic * sqrtMagic) * PI);
 
-		if(!isPlus){
+		if(false == isPlus){
 			dlng = - dlng;
 			dlat = - dlat;
 		}

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlQuery.java
Patch:
@@ -280,7 +280,7 @@ public String build(PercentCodec keyCoder, PercentCodec valueCoder, Charset char
 	}
 
 	/**
-	 * 生成查询字符串，类似于aaa=111&bbb=222<br>
+	 * 生成查询字符串，类似于aaa=111&amp;bbb=222<br>
 	 * 此方法不对任何特殊字符编码，仅用于输出显示
 	 *
 	 * @return 查询字符串

File: hutool-core/src/main/java/cn/hutool/core/date/TemporalAccessorUtil.java
Patch:
@@ -26,11 +26,12 @@
 public class TemporalAccessorUtil extends TemporalUtil{
 
 	/**
-	 * 安全获取时间的某个属性，属性不存在返回0
+	 * 安全获取时间的某个属性，属性不存在返回最小值，一般为0<br>
+	 * 注意请谨慎使用此方法，某些{@link TemporalAccessor#isSupported(TemporalField)}为{@code false}的方法返回最小值
 	 *
 	 * @param temporalAccessor 需要获取的时间对象
 	 * @param field            需要获取的属性
-	 * @return 时间的值，如果无法获取则默认为 0
+	 * @return 时间的值，如果无法获取则获取最小值，一般为0
 	 */
 	public static int get(TemporalAccessor temporalAccessor, TemporalField field) {
 		if (temporalAccessor.isSupported(field)) {

File: hutool-core/src/main/java/cn/hutool/core/date/chinese/LunarInfo.java
Patch:
@@ -1,5 +1,7 @@
 package cn.hutool.core.date.chinese;
 
+import java.time.LocalDate;
+
 /**
  * 阴历（农历）信息
  *
@@ -15,7 +17,7 @@ public class LunarInfo {
 	/**
 	 * 1900-01-31，农历正月初一
 	 */
-	public static final long BASE_DAY = -25537;
+	public static final long BASE_DAY = LocalDate.of(BASE_YEAR, 1, 31).toEpochDay();
 
 	/**
 	 * 此表来自：https://github.com/jjonline/calendar.js/blob/master/calendar.js

File: hutool-core/src/main/java/cn/hutool/core/date/chinese/GanZhi.java
Patch:
@@ -75,7 +75,7 @@ public static String getGanzhiOfMonth(int year, int month, int day) {
 	public static String getGanzhiOfDay(int year, int month, int day) {
 		// 与1970-01-01相差天数，不包括当天
 		final long days = LocalDate.of(year, month, day).toEpochDay() - 1;
-		//1899-12-21是农历1899年腊月甲子日  40：相差1900-01-31有40天
-		return cyclicalm((int) (days - LunarInfo.BASE_DAY + 40));
+		//1899-12-21是农历1899年腊月甲子日  41：相差1900-01-31有41天
+		return cyclicalm((int) (days - LunarInfo.BASE_DAY + 41));
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/date/chinese/LunarInfo.java
Patch:
@@ -13,9 +13,9 @@ public class LunarInfo {
 	 */
 	public static final int BASE_YEAR = 1900;
 	/**
-	 * 1900-01-31
+	 * 1900-01-31，农历正月初一
 	 */
-	public static final long BASE_DAY = -25538;
+	public static final long BASE_DAY = -25537;
 
 	/**
 	 * 此表来自：https://github.com/jjonline/calendar.js/blob/master/calendar.js

File: hutool-json/src/main/java/cn/hutool/json/JSONGetter.java
Patch:
@@ -66,7 +66,7 @@ default String getStrEscaped(K key, String defaultValue) {
 	 * 如果值为其它类型对象，尝试转换为{@link JSONArray}返回，否则抛出异常
 	 *
 	 * @param key KEY
-	 * @return JSONArray对象，如果值为null或者非JSONArray类型，返回null
+	 * @return JSONArray对象，如果值为{@code null}，返回{@code null}，非JSONArray类型，尝试转换，转换失败抛出异常
 	 */
 	default JSONArray getJSONArray(K key) {
 		final Object object = this.getObj(key);
@@ -85,7 +85,7 @@ default JSONArray getJSONArray(K key) {
 	 * 如果值为其它类型对象，尝试转换为{@link JSONObject}返回，否则抛出异常
 	 *
 	 * @param key KEY
-	 * @return JSONObject对象，如果值为null或者非JSONObject类型，返回null
+	 * @return JSONObject对象，如果值为{@code null}，返回{@code null}，非JSONObject类型，尝试转换，转换失败抛出异常
 	 */
 	default JSONObject getJSONObject(K key) {
 		final Object object = this.getObj(key);

File: hutool-core/src/main/java/cn/hutool/core/net/SSLContextBuilder.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.core.net;
 
 import cn.hutool.core.builder.Builder;
-import cn.hutool.core.exceptions.CheckedUtil;
 import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.StrUtil;
@@ -29,7 +28,8 @@
  * @since 5.5.2
  */
 public class SSLContextBuilder implements SSLProtocols, Builder<SSLContext> {
-
+	private static final long serialVersionUID = 1L;
+	
 	private String protocol = TLS;
 	private KeyManager[] keyManagers;
 	private TrustManager[] trustManagers = {DefaultTrustManager.INSTANCE};
@@ -104,7 +104,7 @@ public SSLContextBuilder setSecureRandom(SecureRandom secureRandom) {
 	 */
 	@Override
 	public SSLContext build() {
-		return CheckedUtil.uncheck(this::buildChecked, IORuntimeException::new).call();
+		return buildQuietly();
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/net/SSLUtil.java
Patch:
@@ -23,7 +23,7 @@ public class SSLUtil {
 	 * @since 5.7.8
 	 */
 	public static SSLContext createSSLContext(String protocol) throws IORuntimeException{
-		return SSLContextBuilder.create().setProtocol(protocol).buildQuietly();
+		return SSLContextBuilder.create().setProtocol(protocol).build();
 	}
 
 	/**
@@ -55,6 +55,6 @@ public static SSLContext createSSLContext(String protocol, KeyManager[] keyManag
 		return SSLContextBuilder.create()
 				.setProtocol(protocol)
 				.setKeyManagers(keyManagers)
-				.setTrustManagers(trustManagers).buildQuietly();
+				.setTrustManagers(trustManagers).build();
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/exceptions/CheckedUtilTest.java
Patch:
@@ -38,7 +38,6 @@ public void supplierTest() {
 		}
 	}
 
-	@SuppressWarnings("ConstantConditions")
 	@Test
 	public void functionTest() {
 		Func1<String, String> afunc = (funcParam) -> {

File: hutool-http/src/main/java/cn/hutool/http/ssl/SSLSocketFactoryBuilder.java
Patch:
@@ -90,6 +90,6 @@ public SSLSocketFactoryBuilder setSecureRandom(SecureRandom secureRandom) {
 	 * @throws KeyManagementException   Key管理异常
 	 */
 	public SSLSocketFactory build() throws NoSuchAlgorithmException, KeyManagementException {
-		return this.sslContextBuilder.build().getSocketFactory();
+		return this.sslContextBuilder.buildChecked().getSocketFactory();
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/util/SystemPropsUtil.java
Patch:
@@ -108,7 +108,7 @@ public static boolean getBoolean(String key, boolean defaultValue) {
 	 * @param defaultValue 默认值
 	 * @return 值
 	 */
-	public static long getInt(String key, int defaultValue) {
+	public static int getInt(String key, int defaultValue) {
 		return Convert.toInt(get(key), defaultValue);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/SystemPropsUtil.java
Patch:
@@ -108,7 +108,7 @@ public static boolean getBoolean(String key, boolean defaultValue) {
 	 * @param defaultValue 默认值
 	 * @return 值
 	 */
-	public static long getInt(String key, int defaultValue) {
+	public static int getInt(String key, int defaultValue) {
 		return Convert.toInt(get(key), defaultValue);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/builder/GenericBuilder.java
Patch:
@@ -55,7 +55,7 @@
  * 		.with(Map::put, "blue", "#0000FF")
  * 		.build();
  * }
- * 
+ *
  * <p>注意：本工具类支持调用的构造方法的参数数量不超过5个，一般方法的参数数量不超过2个，更多的参数不利于阅读和维护。</p>
  *
  * @author TomXin

File: hutool-core/src/main/java/cn/hutool/core/lang/Assert.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ArrayUtil;
-import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 
 import java.util.Map;
@@ -193,7 +192,7 @@ public static void isNull(Object object) throws IllegalArgumentException {
 	 * @since 5.4.5
 	 */
 	public static <T, X extends Throwable> T notNull(T object, Supplier<X> errorSupplier) throws X {
-		if (ObjectUtil.isNull(object)) {
+		if (null == object) {
 			throw errorSupplier.get();
 		}
 		return object;

File: hutool-core/src/main/java/cn/hutool/core/lang/func/Consumer3.java
Patch:
@@ -16,8 +16,8 @@ public interface Consumer3<P1, P2, P3> {
 	 * 接收参数方法
 	 *
 	 * @param p1 参数一
-	 * @param p1 参数二
-	 * @param p2 参数三
+	 * @param p2 参数二
+	 * @param p3 参数三
 	 */
 	void accept(P1 p1, P2 p2, P3 p3);
 }

File: hutool-core/src/main/java/cn/hutool/core/util/ByteUtil.java
Patch:
@@ -142,6 +142,7 @@ public static int bytesToInt(byte[] bytes, ByteOrder byteOrder) {
 	 * 自定义端序
 	 *
 	 * @param bytes     byte数组
+	 * @param start 开始位置（包含）
 	 * @param byteOrder 端序
 	 * @return int值
 	 * @since 5.7.21

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -608,7 +608,7 @@ public static <T> List<List<T>> splitAvg(List<T> list, int limit) {
 	public static <T> void swapTo(List<T> list, T element, Integer targetIndex) {
 		if (CollUtil.isNotEmpty(list)) {
 			final int index = list.indexOf(element);
-			if (index > 0) {
+			if (index >= 0) {
 				Collections.swap(list, index, targetIndex);
 			}
 		}
@@ -627,7 +627,7 @@ public static <T> void swapTo(List<T> list, T element, Integer targetIndex) {
 	public static <T> void swapElement(List<T> list, T element, T targetElement) {
 		if (CollUtil.isNotEmpty(list)) {
 			final int targetIndex = list.indexOf(targetElement);
-			if (targetIndex > 0) {
+			if (targetIndex >= 0) {
 				swapTo(list, element, targetIndex);
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -608,7 +608,7 @@ public static <T> List<List<T>> splitAvg(List<T> list, int limit) {
 	public static <T> void swapTo(List<T> list, T element, Integer targetIndex) {
 		if (CollUtil.isNotEmpty(list)) {
 			final int index = list.indexOf(element);
-			if (index > 0) {
+			if (index >= 0) {
 				Collections.swap(list, index, targetIndex);
 			}
 		}
@@ -627,7 +627,7 @@ public static <T> void swapTo(List<T> list, T element, Integer targetIndex) {
 	public static <T> void swapElement(List<T> list, T element, T targetElement) {
 		if (CollUtil.isNotEmpty(list)) {
 			final int targetIndex = list.indexOf(targetElement);
-			if (targetIndex > 0) {
+			if (targetIndex >= 0) {
 				swapTo(list, element, targetIndex);
 			}
 		}

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -123,16 +123,15 @@ public JSONObject(int capacity, JSONConfig config) {
 		if (null == config) {
 			config = JSONConfig.create();
 		}
+		final Comparator<String> keyComparator = config.getKeyComparator();
 		if (config.isIgnoreCase()) {
-			final Comparator<String> keyComparator = config.getKeyComparator();
 			if(null != keyComparator){
 				// 比较器存在情况下，isOrder无效
 				this.rawHashMap = new CaseInsensitiveTreeMap<>(keyComparator);
 			}else{
 				this.rawHashMap = config.isOrder() ? new CaseInsensitiveLinkedMap<>(capacity) : new CaseInsensitiveMap<>(capacity);
 			}
 		} else {
-			final Comparator<String> keyComparator = config.getKeyComparator();
 			if(null != keyComparator){
 				// 比较器存在情况下，isOrder无效
 				this.rawHashMap = new TreeMap<>(keyComparator);

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -23,8 +23,6 @@
 import java.util.ListIterator;
 import java.util.RandomAccess;
 
-import static cn.hutool.json.JSONConverter.jsonConvert;
-
 /**
  * JSON数组<br>
  * JSON数组是表示中括号括住的数据表现形式<br>
@@ -246,7 +244,7 @@ public Object getByPath(String expression) {
 
 	@Override
 	public <T> T getByPath(String expression, Class<T> resultType) {
-		return jsonConvert(resultType, getByPath(expression), true);
+		return JSONConverter.jsonConvert(resultType, getByPath(expression), true);
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/stream/CollectorUtil.java
Patch:
@@ -114,7 +114,8 @@ public class CollectorUtil {
 		if (downstream.characteristics().contains(Collector.Characteristics.IDENTITY_FINISH)) {
 			return new SimpleCollector<>(mangledFactory, accumulator, merger, CH_ID);
 		} else {
-			UnaryOperator<A> downstreamFinisher = (UnaryOperator<A>) downstream.finisher();
+			@SuppressWarnings("unchecked")
+			Function<A, A> downstreamFinisher = (Function<A, A>) downstream.finisher();
 			Function<Map<K, A>, M> finisher = intermediate -> {
 				intermediate.replaceAll((k, v) -> downstreamFinisher.apply(v));
 				@SuppressWarnings("unchecked")

File: hutool-core/src/test/java/cn/hutool/core/lang/hash/MetroHashTest.java
Patch:
@@ -31,8 +31,8 @@ public void metroHash64Test() {
 	public void metroHash128Test() {
 		byte[] str = "我是一段测试123".getBytes(CharsetUtil.CHARSET_UTF_8);
 		final long[] hash128 = MetroHash.hash128(str).getLongArray();
-		Assert.assertEquals(4629350038757384271L, hash128[0]);
-		Assert.assertEquals(-1607305036506152112L, hash128[1]);
+		Assert.assertEquals(4956592424592439349L, hash128[0]);
+		Assert.assertEquals(6301214698325086246L, hash128[1]);
 	}
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/server/handler/ActionHandler.java
Patch:
@@ -33,5 +33,6 @@ public void handle(HttpExchange httpExchange) throws IOException {
 				new HttpServerRequest(httpExchange),
 				new HttpServerResponse(httpExchange)
 		);
+		httpExchange.close();
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/builder/GenericBuilderTest.java
Patch:
@@ -32,6 +32,7 @@ public void test() {
 		Assert.assertEquals(8, box.getWidth().intValue());
 		Assert.assertEquals(7, box.getHeight().intValue());
 
+		// 对象修改
 		Box boxModified = GenericBuilder
 				.of(() -> box)
 				.with(Box::setTitle, "Hello Friend!")
@@ -46,6 +47,7 @@ public void test() {
 		Assert.assertEquals(4, boxModified.getWidth().intValue());
 		Assert.assertEquals(5, boxModified.getHeight().intValue());
 
+		// 多参数构造
 		Box box1 = GenericBuilder
 				.of(Box::new, 2048L, "Hello Partner!", 222, 333, 444)
 				.with(Box::alis)

File: hutool-core/src/test/java/cn/hutool/core/convert/DateConvertTest.java
Patch:
@@ -27,7 +27,7 @@ public void toDateFromIntTest() {
 		int dateLong = -1497600000;
 		Date value = Convert.toDate(dateLong);
 		Assert.assertNotNull(value);
-		Assert.assertTrue(value.toString().startsWith("Mon Dec 15 00:00:00 "));
+		Assert.assertEquals("Mon Dec 15 00:00:00 CST 1969", value.toString().replace("GMT+08:00", "CST"));
 
 		final java.sql.Date sqlDate = Convert.convert(java.sql.Date.class, dateLong);
 		Assert.assertNotNull(sqlDate);

File: hutool-json/src/test/java/cn/hutool/json/Issue677Test.java
Patch:
@@ -19,7 +19,7 @@ public void toBeanTest(){
 
 		final String jsonStr = JSONUtil.toJsonStr(dto);
 		final AuditResultDto auditResultDto = JSONUtil.toBean(jsonStr, AuditResultDto.class);
-		Assert.assertEquals("Mon Dec 15 00:00:00 CST 1969", auditResultDto.getDate().toString());
+		Assert.assertEquals("Mon Dec 15 00:00:00 CST 1969", auditResultDto.getDate().toString().replace("GMT+08:00", "CST"));
 	}
 
 	@Data

File: hutool-db/src/main/java/cn/hutool/db/sql/ConditionGroup.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 
 /**
- * 条件组<br/>
+ * 条件组<br>
  * 用于构建复杂where条件
  *
  * @author tjh

File: hutool-extra/src/main/java/cn/hutool/extra/emoji/EmojiUtil.java
Patch:
@@ -146,9 +146,10 @@ public static String toHtml(String str) {
 	 * <pre>
 	 * 如果为hex形式，<code>👦🏿</code> 转换为 <code>&amp;#x1f466;</code>
 	 * 否则，<code>👦🏿</code> 转换为 <code>&amp;#128102;</code>
-	 * <pre></pre>
+	 * </pre>
 	 *
-	 * @param str 包含Emoji Unicode字符的字符串
+	 * @param str   包含Emoji Unicode字符的字符串
+	 * @param isHex 是否hex形式
 	 * @return 替换后的字符串
 	 * @since 5.7.21
 	 */

File: hutool-core/src/test/java/cn/hutool/core/text/csv/CsvWriterTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.util.CharsetUtil;
-import org.junit.Ignore;
 import org.junit.Test;
 
 public class CsvWriterTest {
@@ -19,6 +18,8 @@ public void writeWithAliasTest(){
 				CharsetUtil.CHARSET_GBK, false, csvWriteConfig);
 
 		writer.writeHeaderLine("name", "gender", "address");
+		writer.writeLine("张三", "男", "XX市XX区");
+		writer.writeLine("李四", "男", "XX市XX区,01号");
 		writer.close();
 	}
 }

File: hutool-extra/src/test/java/cn/hutool/extra/qrcode/QrCodeUtilTest.java
Patch:
@@ -94,4 +94,6 @@ public void pdf417Test(){
 		final BufferedImage image = QrCodeUtil.generate("content111", BarcodeFormat.PDF_417, QrConfig.create());
 		Assert.assertNotNull(image);
 	}
+
+
 }

File: hutool-core/src/main/java/cn/hutool/core/map/MapWrapper.java
Patch:
@@ -16,7 +16,6 @@
  * @param <K> 键类型
  * @param <V> 值类型
  * @author looly
- * @author looly
  * @since 4.3.3
  */
 public class MapWrapper<K, V> implements Map<K, V>, Iterable<Map.Entry<K, V>>, Serializable, Cloneable {
@@ -179,6 +178,7 @@ public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction
 		return raw.computeIfAbsent(key, mappingFunction);
 	}
 
+	// 重写默认方法的意义在于，如果被包装的Map自定义了这些默认方法，包装类就可以保持这些行为的一致性
 	//---------------------------------------------------------------------------- Override default methods start
 	@Override
 	public V getOrDefault(Object key, V defaultValue) {

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -20,8 +20,8 @@ public interface RegexPool {
 	 */
 	String WORD = "[a-zA-Z]+";
 	/**
-	 * 单个中文汉字
-	 * <br/>参照维基百科汉字Unicode范围(https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97 页面右侧)
+	 * 单个中文汉字<br>
+	 * 参照维基百科汉字Unicode范围(https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97 页面右侧)
 	 */
 	String CHINESE = "[\u2E80-\u2EFF\u2F00-\u2FDF\u31C0-\u31EF\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF\uD840\uDC00-\uD869\uDEDF\uD869\uDF00-\uD86D\uDF3F\uD86D\uDF40-\uD86E\uDC1F\uD86E\uDC20-\uD873\uDEAF\uD87E\uDC00-\uD87E\uDE1F]";
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/reflect/MethodHandleUtil.java
Patch:
@@ -12,6 +12,7 @@
 
 /**
  * 方法句柄{@link MethodHandle}封装工具类<br>
+ * 方法句柄是一个有类型的，可以直接执行的指向底层方法、构造器、field等的引用，可以简单理解为函数指针，它是一种更加底层的查找、调整和调用方法的机制。
  * 参考：
  * <ul>
  *     <li>https://stackoverflow.com/questions/22614746/how-do-i-invoke-java-8-default-methods-reflectively</li>
@@ -113,7 +114,7 @@ public static MethodHandle findConstructor(Class<?> callerClass, MethodType type
 	}
 
 	/**
-	 * 执行接口或对象中的方法<br>
+	 * 执行接口或对象中的特殊方法（private、static等）<br>
 	 *
 	 * <pre class="code">
 	 *     interface Duck {
@@ -159,7 +160,7 @@ public static <T> T invoke(Object obj, Method method, Object... args) {
 	}
 
 	/**
-	 * 执行接口或对象中的方法<br>
+	 * 执行接口或对象中的特殊方法（private、static等）<br>
 	 *
 	 * <pre class="code">
 	 *     interface Duck {

File: hutool-core/src/main/java/cn/hutool/core/date/ChineseDate.java
Patch:
@@ -92,7 +92,7 @@ public ChineseDate(Date date) {
 			offset -= daysOfMonth;
 		}
 
-		this.isLeapMonth = month == (leapMonth + 1);
+		this.isLeapMonth = leapMonth > 0 && (month == (leapMonth + 1));
 		if (hasLeapMonth && false == this.isLeapMonth) {
 			// 当前月份前有闰月，则月份显示要-1，除非当前月份就是润月
 			month--;

File: hutool-core/src/test/java/cn/hutool/core/net/UrlBuilderTest.java
Patch:
@@ -265,8 +265,9 @@ public void gimg2Test(){
 		String url = "https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic.jj20.com%2Fup%2Fallimg%2F1114%2F0H320120Z3%2F200H3120Z3-6-1200.jpg&refer=http%3A%2F%2Fpic.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1621996490&t=8c384c2823ea453da15a1b9cd5183eea";
 		final UrlBuilder urlBuilder = UrlBuilder.of(url);
 
-
-		Assert.assertEquals(url, urlBuilder.toString());
+		// PATH除了第一个path外，:是允许的
+		String url2 = "https://gimg2.baidu.com/image_search/src=http:%2F%2Fpic.jj20.com%2Fup%2Fallimg%2F1114%2F0H320120Z3%2F200H3120Z3-6-1200.jpg&refer=http:%2F%2Fpic.jj20.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1621996490&t=8c384c2823ea453da15a1b9cd5183eea";
+		Assert.assertEquals(url2, urlBuilder.toString());
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -27,7 +27,6 @@ public class ThreadUtil {
 	 *    1. 初始线程数为corePoolSize指定的大小
 	 *    2. 没有最大线程数限制
 	 *    3. 默认使用LinkedBlockingQueue，默认队列大小为1024
-	 *    4. 当运行线程大于corePoolSize放入队列，队列满后抛出异常
 	 * </pre>
 	 *
 	 * @param corePoolSize 同时执行的线程数大小

File: hutool-core/src/test/java/cn/hutool/core/util/IdUtilTest.java
Patch:
@@ -137,7 +137,8 @@ public void snowflakeBenchTest2() {
 
 	@Test
 	public void getDataCenterIdTest(){
+		//按照mac地址算法拼接的算法，maxDatacenterId应该是0xffffffffL>>6-1此处暂时按照0x7fffffffffffffffL-1，防止最后取模溢出
 		final long dataCenterId = IdUtil.getDataCenterId(Long.MAX_VALUE);
-		Assert.assertTrue(dataCenterId > 1);
+		Assert.assertTrue(dataCenterId >= 0);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/date/CalendarUtil.java
Patch:
@@ -555,7 +555,7 @@ public static String formatChineseDate(Calendar calendar, boolean withTime) {
 		result.append(NumberChineseFormatter.formatThousand(day, false));
 		result.append('日');
 
-		// 时分秒中零不需要替换
+		// 只替换年月日，时分秒中零不需要替换
 		String temp = result.toString().replace('零', '〇');
 		result.delete(0, result.length());
 		result.append(temp);

File: hutool-core/src/main/java/cn/hutool/core/text/finder/PatternFinder.java
Patch:
@@ -66,7 +66,7 @@ public int end(int start) {
 		}else{
 			limit = Math.min(endIndex, text.length());
 		}
-		return end < limit ? end : INDEX_NOT_FOUND;
+		return end <= limit ? end : INDEX_NOT_FOUND;
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/text/split/SplitIter.java
Patch:
@@ -87,9 +87,8 @@ protected String computeNext() {
 		}
 
 		// 找到新的分隔符位置
-		final int end = finder.end(start);
 		final String result = text.substring(offset, start);
-		offset = end;
+		offset = finder.end(start);
 
 		if (ignoreEmpty && result.isEmpty()) {
 			// 发现空串且需要忽略时，跳过之

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -35,6 +35,7 @@ public class BeanCopier<T> implements Copier<T>, Serializable {
 	private static final long serialVersionUID = 1L;
 
 	/** 源对象 */
+	@SuppressWarnings("NonSerializableFieldInSerializableClass")
 	private final Object source;
 	/** 目标对象 */
 	private final T dest;

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -671,7 +671,6 @@ private void init(Object source) {
 			// 不支持对象类型转换为JSONObject
 			throw new JSONException("Unsupported type [{}] to JSONObject!", source.getClass());
 		}
-
 	}
 
 	/**

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -30,6 +30,7 @@
 
 import java.math.BigDecimal;
 import java.sql.Timestamp;
+import java.time.LocalDate;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.List;

File: hutool-db/src/main/java/cn/hutool/db/StatementUtil.java
Patch:
@@ -194,7 +194,7 @@ public static PreparedStatement prepareStatementForBatch(Connection conn, String
 	 * @throws SQLException SQL异常
 	 * @since 4.6.7
 	 */
-	public static PreparedStatement prepareStatementForBatch(Connection conn, String sql, List<String> fields, Entity... entities) throws SQLException {
+	public static PreparedStatement prepareStatementForBatch(Connection conn, String sql, Iterable<String> fields, Entity... entities) throws SQLException {
 		Assert.notBlank(sql, "Sql String must be not blank!");
 
 		sql = sql.trim();

File: hutool-db/src/test/java/cn/hutool/db/H2Test.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.db;
 
-import com.alibaba.druid.support.json.JSONUtils;
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -40,6 +39,7 @@ public void findTest() throws SQLException {
 		List<Entity> query = Db.use(DS_GROUP_NAME).find(Entity.create("test"));
 		Assert.assertEquals(4, query.size());
 	}
+
 	@Test
 	public void upsertTest() throws SQLException {
 		Db db=Db.use(DS_GROUP_NAME);

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -738,7 +738,7 @@ public static void copyProperties(Object source, Object target, boolean ignoreCa
 	 * @param copyOptions 拷贝选项，见 {@link CopyOptions}
 	 */
 	public static void copyProperties(Object source, Object target, CopyOptions copyOptions) {
-		BeanCopier.create(source, target, ObjectUtil.defaultIfNull(copyOptions, CopyOptions.create())).copy();
+		BeanCopier.create(source, target, ObjectUtil.defaultIfNull(copyOptions, CopyOptions::create)).copy();
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/compiler/JavaClassFileManager.java
Patch:
@@ -44,7 +44,7 @@ class JavaClassFileManager extends ForwardingJavaFileManager<JavaFileManager> {
 	 */
 	protected JavaClassFileManager(ClassLoader parent, JavaFileManager fileManager) {
 		super(fileManager);
-		this.parent = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil.getClassLoader());
+		this.parent = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil::getClassLoader);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/compiler/JavaSourceCompiler.java
Patch:
@@ -89,7 +89,7 @@ public static JavaSourceCompiler create(ClassLoader parent) {
 	 * @param parent 父类加载器，null则使用默认类加载器
 	 */
 	private JavaSourceCompiler(ClassLoader parent) {
-		this.parentClassLoader = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil.getClassLoader());
+		this.parentClassLoader = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil::getClassLoader);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/TemporalAccessorConverter.java
Patch:
@@ -227,7 +227,7 @@ private TemporalAccessor parseFromInstant(Instant instant, ZoneId zoneId) {
 			return instant;
 		}
 
-		zoneId = ObjectUtil.defaultIfNull(zoneId, ZoneId.systemDefault());
+		zoneId = ObjectUtil.defaultIfNull(zoneId, ZoneId::systemDefault);
 
 		TemporalAccessor result = null;
 		if (LocalDateTime.class.equals(this.targetType)) {

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -143,7 +143,7 @@ public DateTime(Date date) {
 	 * @since 4.1.2
 	 */
 	public DateTime(Date date, TimeZone timeZone) {
-		this(ObjectUtil.defaultIfNull(date, new Date()).getTime(), timeZone);
+		this(ObjectUtil.defaultIfNull(date, Date::new).getTime(), timeZone);
 	}
 
 	/**
@@ -216,7 +216,7 @@ public DateTime(long timeMillis) {
 	 */
 	public DateTime(long timeMillis, TimeZone timeZone) {
 		super(timeMillis);
-		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone.getDefault());
+		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone::getDefault);
 	}
 
 	/**
@@ -913,7 +913,7 @@ public ZoneId getZoneId() {
 	 * @since 4.1.2
 	 */
 	public DateTime setTimeZone(TimeZone timeZone) {
-		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone.getDefault());
+		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone::getDefault);
 		return this;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -88,7 +88,7 @@ public static LocalDateTime of(Instant instant, ZoneId zoneId) {
 			return null;
 		}
 
-		return LocalDateTime.ofInstant(instant, ObjectUtil.defaultIfNull(zoneId, ZoneId.systemDefault()));
+		return LocalDateTime.ofInstant(instant, ObjectUtil.defaultIfNull(zoneId, ZoneId::systemDefault));
 	}
 
 	/**
@@ -103,7 +103,7 @@ public static LocalDateTime of(Instant instant, TimeZone timeZone) {
 			return null;
 		}
 
-		return of(instant, ObjectUtil.defaultIfNull(timeZone, TimeZone.getDefault()).toZoneId());
+		return of(instant, ObjectUtil.defaultIfNull(timeZone, TimeZone::getDefault).toZoneId());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -117,7 +117,7 @@ public String toString(String charsetName) {
 	 */
 	public String toString(Charset charset) {
 		return new String(toByteArray(),
-				ObjectUtil.defaultIfNull(charset, CharsetUtil.defaultCharset()));
+				ObjectUtil.defaultIfNull(charset, CharsetUtil::defaultCharset));
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java
Patch:
@@ -69,7 +69,7 @@ public ClassPathResource(String pathBaseClassLoader, ClassLoader classLoader, Cl
 		this.path = path;
 		this.name = StrUtil.isBlank(path) ? null : FileUtil.getName(path);
 
-		this.classLoader = ObjectUtil.defaultIfNull(classLoader, ClassUtil.getClassLoader());
+		this.classLoader = ObjectUtil.defaultIfNull(classLoader, ClassUtil::getClassLoader);
 		this.clazz = clazz;
 		initUrl();
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/resource/FileResource.java
Patch:
@@ -60,7 +60,7 @@ public FileResource(File file) {
 	public FileResource(File file, String fileName) {
 		Assert.notNull(file, "File must be not null !");
 		this.file = file;
-		this.name = ObjectUtil.defaultIfNull(fileName, file.getName());
+		this.name = ObjectUtil.defaultIfNull(fileName, file::getName);
 	}
 
 	// ----------------------------------------------------------------------- Constructor end

File: hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java
Patch:
@@ -36,7 +36,7 @@ public UrlResource(URL url) {
 	 */
 	public UrlResource(URL url, String name) {
 		this.url = url;
-		this.name = ObjectUtil.defaultIfNull(name, (null != url) ? FileUtil.getName(url.getPath()) : null);
+		this.name = ObjectUtil.defaultIfNull(name, () -> (null != url ? FileUtil.getName(url.getPath()) : null));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/ResourceClassLoader.java
Patch:
@@ -30,8 +30,8 @@ public class ResourceClassLoader<T extends Resource> extends SecureClassLoader {
 	 * @param resourceMap       资源map
 	 */
 	public ResourceClassLoader(ClassLoader parentClassLoader, Map<String, T> resourceMap) {
-		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil.getClassLoader()));
-		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, new HashMap<>());
+		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil::getClassLoader));
+		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, HashMap::new);
 		this.cacheClassMap = new HashMap<>();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvBaseReader.java
Patch:
@@ -49,7 +49,7 @@ public CsvBaseReader() {
 	 * @param config 配置项
 	 */
 	public CsvBaseReader(CsvReadConfig config) {
-		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig.defaultConfig());
+		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig::defaultConfig);
 	}
 	//--------------------------------------------------------------------------------------------- Constructor end
 

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvParser.java
Patch:
@@ -80,7 +80,7 @@ public final class CsvParser extends ComputeIter<CsvRow> implements Closeable, S
 	 */
 	public CsvParser(final Reader reader, CsvReadConfig config) {
 		this.reader = Objects.requireNonNull(reader, "reader must not be null");
-		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig.defaultConfig());
+		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig::defaultConfig);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvWriter.java
Patch:
@@ -149,7 +149,7 @@ public CsvWriter(Writer writer) {
 	 */
 	public CsvWriter(Writer writer, CsvWriteConfig config) {
 		this.writer = (writer instanceof BufferedWriter) ? writer : new BufferedWriter(writer);
-		this.config = ObjectUtil.defaultIfNull(config, CsvWriteConfig.defaultConfig());
+		this.config = ObjectUtil.defaultIfNull(config, CsvWriteConfig::defaultConfig);
 	}
 	// --------------------------------------------------------------------------------------------------- Constructor end
 

File: hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java
Patch:
@@ -242,7 +242,7 @@ private static ThreadPoolExecutor build(ExecutorBuilder builder) {
 			workQueue = (corePoolSize <= 0) ? new SynchronousQueue<>() : new LinkedBlockingQueue<>(DEFAULT_QUEUE_CAPACITY);
 		}
 		final ThreadFactory threadFactory = (null != builder.threadFactory) ? builder.threadFactory : Executors.defaultThreadFactory();
-		RejectedExecutionHandler handler = ObjectUtil.defaultIfNull(builder.handler, new ThreadPoolExecutor.AbortPolicy());
+		RejectedExecutionHandler handler = ObjectUtil.defaultIfNull(builder.handler, ThreadPoolExecutor.AbortPolicy::new);
 
 		final ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(//
 				corePoolSize, //

File: hutool-core/src/main/java/cn/hutool/core/util/ServiceLoaderUtil.java
Patch:
@@ -76,7 +76,7 @@ public static <T> ServiceLoader<T> load(Class<T> clazz) {
 	 * @return 服务接口实现列表
 	 */
 	public static <T> ServiceLoader<T> load(Class<T> clazz, ClassLoader loader) {
-		return ServiceLoader.load(clazz, ObjectUtil.defaultIfNull(loader, ClassLoaderUtil.getClassLoader()));
+		return ServiceLoader.load(clazz, ObjectUtil.defaultIfNull(loader, ClassLoaderUtil::getClassLoader));
 	}
 
 	/**

File: hutool-http/src/test/java/cn/hutool/http/useragent/UserAgentUtilTest.java
Patch:
@@ -169,7 +169,7 @@ public void parseChromeOnWindowsServer2012R2Test() {
 		Assert.assertEquals("63.0.3239.132", ua.getVersion());
 		Assert.assertEquals("Webkit", ua.getEngine().toString());
 		Assert.assertEquals("537.36", ua.getEngineVersion());
-		Assert.assertEquals("Windows 8.1 or Winsows Server 2012R2", ua.getOs().toString());
+		Assert.assertEquals("Windows 8.1 or Windows Server 2012R2", ua.getOs().toString());
 		Assert.assertEquals("6.3", ua.getOsVersion());
 		Assert.assertEquals("Windows", ua.getPlatform().toString());
 		Assert.assertFalse(ua.isMobile());

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -95,7 +95,7 @@ public JSONArray(JSONConfig config) {
 	 */
 	public JSONArray(int initialCapacity, JSONConfig config) {
 		this.rawList = new ArrayList<>(initialCapacity);
-		this.config = ObjectUtil.defaultIfNull(config, JSONConfig.create());
+		this.config = ObjectUtil.defaultIfNull(config, JSONConfig::create);
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellUtil.java
Patch:
@@ -376,7 +376,7 @@ public static Cell getMergedRegionCell(Cell cell) {
 	public static Cell getMergedRegionCell(Sheet sheet, int x, int y) {
 		return ObjectUtil.defaultIfNull(
 				getCellIfMergedRegion(sheet, x, y),
-				SheetUtil.getCell(sheet, y, x));
+				() -> SheetUtil.getCell(sheet, y, x));
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/SheetDataSaxHandler.java
Patch:
@@ -294,7 +294,7 @@ private void setCellType(Attributes attributes) {
 				final int numFmtIndex = xssfCellStyle.getDataFormat();
 				this.numFmtString = ObjectUtil.defaultIfNull(
 						xssfCellStyle.getDataFormatString(),
-						BuiltinFormats.getBuiltinFormat(numFmtIndex));
+						() -> BuiltinFormats.getBuiltinFormat(numFmtIndex));
 				if (CellDataType.NUMBER == this.cellDataType && ExcelSaxUtil.isDateFormat(numFmtIndex, numFmtString)) {
 					cellDataType = CellDataType.DATE;
 				}

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -738,7 +738,7 @@ public static void copyProperties(Object source, Object target, boolean ignoreCa
 	 * @param copyOptions 拷贝选项，见 {@link CopyOptions}
 	 */
 	public static void copyProperties(Object source, Object target, CopyOptions copyOptions) {
-		BeanCopier.create(source, target, ObjectUtil.defaultIfNull(copyOptions, CopyOptions.create())).copy();
+		BeanCopier.create(source, target, ObjectUtil.defaultIfNull(copyOptions, CopyOptions::create)).copy();
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/compiler/JavaClassFileManager.java
Patch:
@@ -44,7 +44,7 @@ class JavaClassFileManager extends ForwardingJavaFileManager<JavaFileManager> {
 	 */
 	protected JavaClassFileManager(ClassLoader parent, JavaFileManager fileManager) {
 		super(fileManager);
-		this.parent = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil.getClassLoader());
+		this.parent = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil::getClassLoader);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/compiler/JavaSourceCompiler.java
Patch:
@@ -89,7 +89,7 @@ public static JavaSourceCompiler create(ClassLoader parent) {
 	 * @param parent 父类加载器，null则使用默认类加载器
 	 */
 	private JavaSourceCompiler(ClassLoader parent) {
-		this.parentClassLoader = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil.getClassLoader());
+		this.parentClassLoader = ObjectUtil.defaultIfNull(parent, ClassLoaderUtil::getClassLoader);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/TemporalAccessorConverter.java
Patch:
@@ -227,7 +227,7 @@ private TemporalAccessor parseFromInstant(Instant instant, ZoneId zoneId) {
 			return instant;
 		}
 
-		zoneId = ObjectUtil.defaultIfNull(zoneId, ZoneId.systemDefault());
+		zoneId = ObjectUtil.defaultIfNull(zoneId, ZoneId::systemDefault);
 
 		TemporalAccessor result = null;
 		if (LocalDateTime.class.equals(this.targetType)) {

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -143,7 +143,7 @@ public DateTime(Date date) {
 	 * @since 4.1.2
 	 */
 	public DateTime(Date date, TimeZone timeZone) {
-		this(ObjectUtil.defaultIfNull(date, new Date()).getTime(), timeZone);
+		this(ObjectUtil.defaultIfNull(date, Date::new).getTime(), timeZone);
 	}
 
 	/**
@@ -216,7 +216,7 @@ public DateTime(long timeMillis) {
 	 */
 	public DateTime(long timeMillis, TimeZone timeZone) {
 		super(timeMillis);
-		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone.getDefault());
+		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone::getDefault);
 	}
 
 	/**
@@ -913,7 +913,7 @@ public ZoneId getZoneId() {
 	 * @since 4.1.2
 	 */
 	public DateTime setTimeZone(TimeZone timeZone) {
-		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone.getDefault());
+		this.timeZone = ObjectUtil.defaultIfNull(timeZone, TimeZone::getDefault);
 		return this;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -88,7 +88,7 @@ public static LocalDateTime of(Instant instant, ZoneId zoneId) {
 			return null;
 		}
 
-		return LocalDateTime.ofInstant(instant, ObjectUtil.defaultIfNull(zoneId, ZoneId.systemDefault()));
+		return LocalDateTime.ofInstant(instant, ObjectUtil.defaultIfNull(zoneId, ZoneId::systemDefault));
 	}
 
 	/**
@@ -103,7 +103,7 @@ public static LocalDateTime of(Instant instant, TimeZone timeZone) {
 			return null;
 		}
 
-		return of(instant, ObjectUtil.defaultIfNull(timeZone, TimeZone.getDefault()).toZoneId());
+		return of(instant, ObjectUtil.defaultIfNull(timeZone, TimeZone::getDefault).toZoneId());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -117,7 +117,7 @@ public String toString(String charsetName) {
 	 */
 	public String toString(Charset charset) {
 		return new String(toByteArray(),
-				ObjectUtil.defaultIfNull(charset, CharsetUtil.defaultCharset()));
+				ObjectUtil.defaultIfNull(charset, CharsetUtil::defaultCharset));
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java
Patch:
@@ -69,7 +69,7 @@ public ClassPathResource(String pathBaseClassLoader, ClassLoader classLoader, Cl
 		this.path = path;
 		this.name = StrUtil.isBlank(path) ? null : FileUtil.getName(path);
 
-		this.classLoader = ObjectUtil.defaultIfNull(classLoader, ClassUtil.getClassLoader());
+		this.classLoader = ObjectUtil.defaultIfNull(classLoader, ClassUtil::getClassLoader);
 		this.clazz = clazz;
 		initUrl();
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/resource/FileResource.java
Patch:
@@ -60,7 +60,7 @@ public FileResource(File file) {
 	public FileResource(File file, String fileName) {
 		Assert.notNull(file, "File must be not null !");
 		this.file = file;
-		this.name = ObjectUtil.defaultIfNull(fileName, file.getName());
+		this.name = ObjectUtil.defaultIfNull(fileName, file::getName);
 	}
 
 	// ----------------------------------------------------------------------- Constructor end

File: hutool-core/src/main/java/cn/hutool/core/io/resource/UrlResource.java
Patch:
@@ -36,7 +36,7 @@ public UrlResource(URL url) {
 	 */
 	public UrlResource(URL url, String name) {
 		this.url = url;
-		this.name = ObjectUtil.defaultIfNull(name, (null != url) ? FileUtil.getName(url.getPath()) : null);
+		this.name = ObjectUtil.defaultIfNull(name, () -> (null != url) ? FileUtil.getName(url.getPath()) : null);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/ResourceClassLoader.java
Patch:
@@ -30,8 +30,8 @@ public class ResourceClassLoader<T extends Resource> extends SecureClassLoader {
 	 * @param resourceMap       资源map
 	 */
 	public ResourceClassLoader(ClassLoader parentClassLoader, Map<String, T> resourceMap) {
-		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil.getClassLoader()));
-		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, new HashMap<>());
+		super(ObjectUtil.defaultIfNull(parentClassLoader, ClassLoaderUtil::getClassLoader));
+		this.resourceMap = ObjectUtil.defaultIfNull(resourceMap, HashMap::new);
 		this.cacheClassMap = new HashMap<>();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvBaseReader.java
Patch:
@@ -49,7 +49,7 @@ public CsvBaseReader() {
 	 * @param config 配置项
 	 */
 	public CsvBaseReader(CsvReadConfig config) {
-		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig.defaultConfig());
+		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig::defaultConfig);
 	}
 	//--------------------------------------------------------------------------------------------- Constructor end
 

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvParser.java
Patch:
@@ -80,7 +80,7 @@ public final class CsvParser extends ComputeIter<CsvRow> implements Closeable, S
 	 */
 	public CsvParser(final Reader reader, CsvReadConfig config) {
 		this.reader = Objects.requireNonNull(reader, "reader must not be null");
-		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig.defaultConfig());
+		this.config = ObjectUtil.defaultIfNull(config, CsvReadConfig::defaultConfig);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvWriter.java
Patch:
@@ -149,7 +149,7 @@ public CsvWriter(Writer writer) {
 	 */
 	public CsvWriter(Writer writer, CsvWriteConfig config) {
 		this.writer = (writer instanceof BufferedWriter) ? writer : new BufferedWriter(writer);
-		this.config = ObjectUtil.defaultIfNull(config, CsvWriteConfig.defaultConfig());
+		this.config = ObjectUtil.defaultIfNull(config, CsvWriteConfig::defaultConfig);
 	}
 	// --------------------------------------------------------------------------------------------------- Constructor end
 

File: hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java
Patch:
@@ -242,7 +242,7 @@ private static ThreadPoolExecutor build(ExecutorBuilder builder) {
 			workQueue = (corePoolSize <= 0) ? new SynchronousQueue<>() : new LinkedBlockingQueue<>(DEFAULT_QUEUE_CAPACITY);
 		}
 		final ThreadFactory threadFactory = (null != builder.threadFactory) ? builder.threadFactory : Executors.defaultThreadFactory();
-		RejectedExecutionHandler handler = ObjectUtil.defaultIfNull(builder.handler, new ThreadPoolExecutor.AbortPolicy());
+		RejectedExecutionHandler handler = ObjectUtil.defaultIfNull(builder.handler, ThreadPoolExecutor.AbortPolicy::new);
 
 		final ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(//
 				corePoolSize, //

File: hutool-core/src/main/java/cn/hutool/core/util/ServiceLoaderUtil.java
Patch:
@@ -76,7 +76,7 @@ public static <T> ServiceLoader<T> load(Class<T> clazz) {
 	 * @return 服务接口实现列表
 	 */
 	public static <T> ServiceLoader<T> load(Class<T> clazz, ClassLoader loader) {
-		return ServiceLoader.load(clazz, ObjectUtil.defaultIfNull(loader, ClassLoaderUtil.getClassLoader()));
+		return ServiceLoader.load(clazz, ObjectUtil.defaultIfNull(loader, ClassLoaderUtil::getClassLoader));
 	}
 
 	/**

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -95,7 +95,7 @@ public JSONArray(JSONConfig config) {
 	 */
 	public JSONArray(int initialCapacity, JSONConfig config) {
 		this.rawList = new ArrayList<>(initialCapacity);
-		this.config = ObjectUtil.defaultIfNull(config, JSONConfig.create());
+		this.config = ObjectUtil.defaultIfNull(config, JSONConfig::create);
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellUtil.java
Patch:
@@ -376,7 +376,7 @@ public static Cell getMergedRegionCell(Cell cell) {
 	public static Cell getMergedRegionCell(Sheet sheet, int x, int y) {
 		return ObjectUtil.defaultIfNull(
 				getCellIfMergedRegion(sheet, x, y),
-				SheetUtil.getCell(sheet, y, x));
+				() -> SheetUtil.getCell(sheet, y, x));
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/SheetDataSaxHandler.java
Patch:
@@ -294,7 +294,7 @@ private void setCellType(Attributes attributes) {
 				final int numFmtIndex = xssfCellStyle.getDataFormat();
 				this.numFmtString = ObjectUtil.defaultIfNull(
 						xssfCellStyle.getDataFormatString(),
-						BuiltinFormats.getBuiltinFormat(numFmtIndex));
+						() -> BuiltinFormats.getBuiltinFormat(numFmtIndex));
 				if (CellDataType.NUMBER == this.cellDataType && ExcelSaxUtil.isDateFormat(numFmtIndex, numFmtString)) {
 					cellDataType = CellDataType.DATE;
 				}

File: hutool-core/src/main/java/cn/hutool/core/map/MapWrapper.java
Patch:
@@ -16,7 +16,6 @@
  * @param <K> 键类型
  * @param <V> 值类型
  * @author looly
- * @author looly
  * @since 4.3.3
  */
 public class MapWrapper<K, V> implements Map<K, V>, Iterable<Map.Entry<K, V>>, Serializable, Cloneable {
@@ -179,6 +178,7 @@ public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction
 		return raw.computeIfAbsent(key, mappingFunction);
 	}
 
+	// 重写默认方法的意义在于，如果被包装的Map自定义了这些默认方法，包装类就可以保持这些行为的一致性
 	//---------------------------------------------------------------------------- Override default methods start
 	@Override
 	public V getOrDefault(Object key, V defaultValue) {

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -20,8 +20,8 @@ public interface RegexPool {
 	 */
 	String WORD = "[a-zA-Z]+";
 	/**
-	 * 单个中文汉字
-	 * <br/>参照维基百科汉字Unicode范围(https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97 页面右侧)
+	 * 单个中文汉字<br>
+	 * 参照维基百科汉字Unicode范围(https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97 页面右侧)
 	 */
 	String CHINESE = "[\u2E80-\u2EFF\u2F00-\u2FDF\u31C0-\u31EF\u3400-\u4DBF\u4E00-\u9FFF\uF900-\uFAFF\uD840\uDC00-\uD869\uDEDF\uD869\uDF00-\uD86D\uDF3F\uD86D\uDF40-\uD86E\uDC1F\uD86E\uDC20-\uD873\uDEAF\uD87E\uDC00-\uD87E\uDE1F]";
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/reflect/MethodHandleUtil.java
Patch:
@@ -12,6 +12,7 @@
 
 /**
  * 方法句柄{@link MethodHandle}封装工具类<br>
+ * 方法句柄是一个有类型的，可以直接执行的指向底层方法、构造器、field等的引用，可以简单理解为函数指针，它是一种更加底层的查找、调整和调用方法的机制。
  * 参考：
  * <ul>
  *     <li>https://stackoverflow.com/questions/22614746/how-do-i-invoke-java-8-default-methods-reflectively</li>
@@ -113,7 +114,7 @@ public static MethodHandle findConstructor(Class<?> callerClass, MethodType type
 	}
 
 	/**
-	 * 执行接口或对象中的方法<br>
+	 * 执行接口或对象中的特殊方法（private、static等）<br>
 	 *
 	 * <pre class="code">
 	 *     interface Duck {
@@ -159,7 +160,7 @@ public static <T> T invoke(Object obj, Method method, Object... args) {
 	}
 
 	/**
-	 * 执行接口或对象中的方法<br>
+	 * 执行接口或对象中的特殊方法（private、static等）<br>
 	 *
 	 * <pre class="code">
 	 *     interface Duck {

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -2336,7 +2336,9 @@ public static String[] subBetweenAll(CharSequence str, CharSequence prefix, Char
 			}
 		} else {
 			int suffixIndex;
-			for (String fragment : split) {
+			String fragment;
+			for (int i = 1; i < split.length; i++) {
+				fragment = split[i];
 				suffixIndex = fragment.indexOf(suffix.toString());
 				if (suffixIndex > 0) {
 					result.add(fragment.substring(0, suffixIndex));

File: hutool-core/src/main/java/cn/hutool/core/math/Calculator.java
Patch:
@@ -191,7 +191,7 @@ private static String transform(String expression) {
 				}
 			}
 		}
-		if (arr[0] == '~' || (arr.length > 1 && arr[1] == '(')) {
+		if (arr[0] == '~' && (arr.length > 1 && arr[1] == '(')) {
 			arr[0] = '-';
 			return "0" + new String(arr);
 		} else {

File: hutool-core/src/main/java/cn/hutool/core/math/Calculator.java
Patch:
@@ -191,7 +191,7 @@ private static String transform(String expression) {
 				}
 			}
 		}
-		if (arr[0] == '~' || (arr.length > 1 && arr[1] == '(')) {
+		if (arr[0] == '~' && (arr.length > 1 && arr[1] == '(')) {
 			arr[0] = '-';
 			return "0" + new String(arr);
 		} else {

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SM2.java
Patch:
@@ -531,7 +531,7 @@ public byte[] getD() {
 	 * @since 5.7.17
 	 */
 	public String getDHex() {
-		return getDBigInteger().toString(16);
+		return String.format("%064x", new BigInteger(1, getD()));
 	}
 
 	/**

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SM2.java
Patch:
@@ -531,7 +531,7 @@ public byte[] getD() {
 	 * @since 5.7.17
 	 */
 	public String getDHex() {
-		return getDBigInteger().toString(16);
+		return String.format("%064x", new BigInteger(1, getD()));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/split/SplitIter.java
Patch:
@@ -38,7 +38,7 @@ public class SplitIter extends ComputeIter<String> implements Serializable {
 	/**
 	 * 构造
 	 *
-	 * @param text            文本
+	 * @param text            文本，不能为{@code null}
 	 * @param separatorFinder 分隔符匹配器
 	 * @param limit           限制数量，小于等于0表示无限制
 	 * @param ignoreEmpty     是否忽略""

File: hutool-core/src/main/java/cn/hutool/core/text/NamingCase.java
Patch:
@@ -90,7 +90,7 @@ public static String toSymbolCase(CharSequence str, char symbol) {
 					} else if (Character.isLowerCase(preChar)) {
 						// 前一个为小写
 						sb.append(symbol);
-						if (null == nextChar || Character.isLowerCase(nextChar)) {
+						if (null == nextChar || Character.isLowerCase(nextChar) || CharUtil.isNumber(nextChar)) {
 							//普通首字母大写，如aBcc -> a_bcc
 							c = Character.toLowerCase(c);
 						}

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -148,7 +148,7 @@ public static HttpRequest of(String url) {
 	 * @since 5.7.18
 	 */
 	public static HttpRequest of(String url, Charset charset) {
-		return new HttpRequest(UrlBuilder.of(url, charset));
+		return new HttpRequest(UrlBuilder.ofHttp(url, charset));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/exceptions/CheckedUtil.java
Patch:
@@ -9,7 +9,8 @@
  * <p>
  * 该工具通过函数式的方式将那些需要抛出受检查异常的表达式或者代码段转化成一个 cn.hutool.core.lang.func.Func* 对象
  * </p>
- *
+ * <p>
+ * {@code
  * <pre>
  *      //代码中如果遇到一个方法调用声明了受检查异常那么我们的代码就必须这样写
  *         Map<String, String> describedObject = null;
@@ -36,6 +37,7 @@
  *
  *
  * </pre>
+ * }
  *
  * @author conder
  * @since 5.7.19

File: hutool-core/src/test/java/cn/hutool/core/text/csv/CsvReaderTest.java
Patch:
@@ -133,7 +133,7 @@ public void lineNoTest(){
 		Assert.assertEquals("a,b,c,d", CollUtil.join(data.getRow(0), ","));
 
 		Assert.assertEquals(4, data.getRow(2).getOriginalLineNumber());
-		Assert.assertEquals("q,w,e,r,我是一段\n带换行的内容", CollUtil.join(data.getRow(2), ","));
+		Assert.assertEquals("q,w,e,r,我是一段\n带换行的内容", CollUtil.join(data.getRow(2), ",").replace("\r", ""));
 
 		// 文件中第3行数据，对应原始行号是6（从0开始）
 		Assert.assertEquals(6, data.getRow(3).getOriginalLineNumber());
@@ -150,7 +150,7 @@ public void lineLimitTest(){
 		Assert.assertEquals("1,2,3,4", CollUtil.join(data.getRow(0), ","));
 
 		Assert.assertEquals(4, data.getRow(1).getOriginalLineNumber());
-		Assert.assertEquals("q,w,e,r,我是一段\n带换行的内容", CollUtil.join(data.getRow(1), ","));
+		Assert.assertEquals("q,w,e,r,我是一段\n带换行的内容", CollUtil.join(data.getRow(1), ",").replace("\r", ""));
 
 		// 文件中第3行数据，对应原始行号是6（从0开始）
 		Assert.assertEquals(6, data.getRow(2).getOriginalLineNumber());
@@ -164,7 +164,7 @@ public void lineLimitWithHeaderTest(){
 		CsvData data = reader.read(ResourceUtil.getReader("test_lines.csv", CharsetUtil.CHARSET_UTF_8));
 
 		Assert.assertEquals(4, data.getRow(0).getOriginalLineNumber());
-		Assert.assertEquals("q,w,e,r,我是一段\n带换行的内容", CollUtil.join(data.getRow(0), ","));
+		Assert.assertEquals("q,w,e,r,我是一段\n带换行的内容", CollUtil.join(data.getRow(0), ",").replace("\r", ""));
 
 		// 文件中第3行数据，对应原始行号是6（从0开始）
 		Assert.assertEquals(6, data.getRow(1).getOriginalLineNumber());

File: hutool-http/src/main/java/cn/hutool/http/HttpUtil.java
Patch:
@@ -130,7 +130,7 @@ public static String get(String urlString, Charset customCharset) {
 	 * @return 返回内容，如果只检查状态码，正常只返回 ""，不正常返回 null
 	 */
 	public static String get(String urlString) {
-		return get(urlString, HttpGlobalConfig.timeout);
+		return get(urlString, HttpGlobalConfig.getTimeout());
 	}
 
 	/**
@@ -177,7 +177,7 @@ public static String get(String urlString, Map<String, Object> paramMap, int tim
 	 * @return 返回数据
 	 */
 	public static String post(String urlString, Map<String, Object> paramMap) {
-		return post(urlString, paramMap, HttpGlobalConfig.timeout);
+		return post(urlString, paramMap, HttpGlobalConfig.getTimeout());
 	}
 
 	/**
@@ -207,7 +207,7 @@ public static String post(String urlString, Map<String, Object> paramMap, int ti
 	 * @return 返回数据
 	 */
 	public static String post(String urlString, String body) {
-		return post(urlString, body, HttpGlobalConfig.timeout);
+		return post(urlString, body, HttpGlobalConfig.getTimeout());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1302,6 +1302,8 @@ public static <T extends Collection<E>, E extends CharSequence> T removeBlank(T
 	 * @param resultCollection 存放移除结果的集合
 	 * @param targetCollection 被操作移除元素的集合
 	 * @param predicate        用于是否移除判断的过滤器
+	 * @return 移除结果的集合
+	 * @since 5.7.17
 	 */
 	public static <T extends Collection<E>, E> T removeWithAddIf(T targetCollection, T resultCollection, Predicate<? super E> predicate) {
 		Objects.requireNonNull(predicate);

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -272,7 +272,7 @@ private void valueProviderToBean(ValueProvider<String> valueProvider, Object bea
 				return;
 			}
 			// 检查属性名
-			String fieldName = prop.getFieldName();
+			final String fieldName = prop.getFieldName();
 			if (CollUtil.contains(ignoreSet, fieldName)) {
 				// 目标属性值被忽略或值提供者无此key时跳过
 				return;

File: hutool-core/src/test/java/cn/hutool/core/img/ImgUtilTest.java
Patch:
@@ -67,9 +67,9 @@ public void flipTest() {
 	@Ignore
 	public void pressImgTest() {
 		ImgUtil.pressImage(
-				FileUtil.file("d:/test/617180969474805871.jpg"),
-				FileUtil.file("d:/test/dest.png"),
-				ImgUtil.read(FileUtil.file("d:/test/vbbb.png")), 0, 0, 0.9f);
+				FileUtil.file("d:/test/1435859438434136064.jpg"),
+				FileUtil.file("d:/test/dest.jpg"),
+				ImgUtil.read(FileUtil.file("d:/test/qrcodeCustom.png")), 0, 0, 0.9f);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/date/chinese/ChineseMonth.java
Patch:
@@ -29,7 +29,7 @@ public static boolean isLeapMonth(int year, int month) {
 	 * 当为非传统表示时，二月，十二月，或者润一月等
 	 *
 	 * @param isLeapMonth   是否闰月
-	 * @param month         月份，从1开始
+	 * @param month         月份，从1开始，如果是闰月，应传入需要显示的月份
 	 * @param isTraditional 是否传统表示，例如一月传统表示为正月
 	 * @return 返回农历月份称呼
 	 */

File: hutool-core/src/main/java/cn/hutool/core/text/TextSimilarity.java
Patch:
@@ -13,7 +13,7 @@
 public class TextSimilarity {
 
 	/**
-	 * 计算相似度，两个都是空串相似度为1，被认为是相同的串<br>
+	 * 利用莱文斯坦距离(Levenshtein distance)算法计算相似度，两个都是空串相似度为1，被认为是相同的串<br>
 	 * 比较方法为：
 	 * <ul>
 	 *     <li>只比较两个字符串字母、数字、汉字部分，其他符号去除</li>
@@ -46,7 +46,7 @@ public static double similar(String strA, String strB) {
 	}
 
 	/**
-	 * 计算相似度百分比
+	 * 利用莱文斯坦距离(Levenshtein distance)算法计算相似度百分比
 	 *
 	 * @param strA 字符串1
 	 * @param strB 字符串2

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -48,7 +48,7 @@ public class Browser extends UserAgentInfo {
 			// 夸克浏览器
 			new Browser("Quark", "Quark", Other_Version),
 
-			new Browser("MSEdge", "Edge|Edg", "(?:edge|Edg)\\/([\\d\\w\\.\\-]+)"),
+			new Browser("MSEdge", "Edge|Edg", "(?:edge|Edg|EdgA)\\/([\\d\\w\\.\\-]+)"),
 			new Browser("Chrome", "chrome", Other_Version),
 			new Browser("Firefox", "firefox", Other_Version),
 			new Browser("IEMobile", "iemobile", Other_Version),

File: hutool-core/src/main/java/cn/hutool/core/util/JAXBUtil.java
Patch:
@@ -38,9 +38,9 @@ public class JAXBUtil {
 	 *
 	 * @param bean Bean对象
 	 * @return 输出的XML字符串
-	 * @see XmlRootElement <code>@XmlRootElement(name = "school")</code>
-	 * @see XmlElement <code>@XmlElement(name = "school_name", required = true)</code>
-	 * @see XmlElementWrapper <code>@XmlElementWrapper(name="schools")</code>
+	 * @see XmlRootElement {@code @XmlRootElement(name = "school")}
+	 * @see XmlElement {@code @XmlElement(name = "school_name", required = true)}
+	 * @see XmlElementWrapper {@code @XmlElementWrapper(name="schools")}
 	 * @see XmlTransient JAXB "有两个名为 "**" 的属性,类的两个属性具有相同名称 "**""解决方案
 	 */
 	public static String beanToXml(Object bean) {

File: hutool-core/src/main/java/cn/hutool/core/text/PasswdStrength.java
Patch:
@@ -159,7 +159,7 @@ && countLetter(passwd, CHAR_TYPE.CAPITAL_LETTER) >= 2 && countLetter(passwd, CHA
 			}
 		}
 
-		if (StrUtil.isNumeric(passwd) && len >= 6) { // 19881010 or 881010
+		if (StrUtil.isNumeric(passwd) && len >= 6 && len <= 8) { // 19881010 or 881010
 			int year = 0;
 			if (len == 8 || len == 6) {
 				year = Integer.parseInt(passwd.substring(0, len - 4));

File: hutool-poi/src/main/java/cn/hutool/poi/excel/style/StyleUtil.java
Patch:
@@ -207,7 +207,7 @@ public static boolean isNullOrDefaultStyle(Workbook workbook, CellStyle style) {
 	 * 创建数据格式并获取格式
 	 *
 	 * @param workbook {@link Workbook}
-	 * @param format 数据格式
+	 * @param format   数据格式
 	 * @return 数据格式
 	 * @since 5.5.5
 	 */

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -706,7 +706,7 @@ public static boolean startWith(CharSequence str, CharSequence prefix, boolean i
 	 */
 	public static boolean startWith(CharSequence str, CharSequence prefix, boolean ignoreCase, boolean ignoreEquals) {
 		if (null == str || null == prefix) {
-			if (false == ignoreEquals) {
+			if (ignoreEquals) {
 				return false;
 			}
 			return null == str && null == prefix;

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -123,7 +123,7 @@ public JSONObject(int capacity, JSONConfig config) {
 		if (config.isIgnoreCase()) {
 			this.rawHashMap = config.isOrder() ? new CaseInsensitiveLinkedMap<>(capacity) : new CaseInsensitiveMap<>(capacity);
 		} else {
-			this.rawHashMap = MapUtil.newHashMap(config.isOrder());
+			this.rawHashMap = MapUtil.newHashMap(capacity, config.isOrder());
 		}
 		this.config = config;
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/file/LineReadWatcher.java
Patch:
@@ -50,11 +50,11 @@ public void onModify(WatchEvent<?> event, Path currentPath) {
 		try {
 			final long currentLength = randomAccessFile.length();
 			final long position = randomAccessFile.getFilePointer();
-			if (0 == currentLength || position == currentLength) {
+			if (position == currentLength) {
 				// 内容长度不变时忽略此次事件
 				return;
 			} else if (currentLength < position) {
-				// 如果内容变短，说明文件做了删改，回到内容末尾
+				// 如果内容变短或变0，说明文件做了删改或清空，回到内容末尾或0
 				randomAccessFile.seek(currentLength);
 				return;
 			}

File: hutool-core/src/test/java/cn/hutool/core/io/file/TailerTest.java
Patch:
@@ -7,13 +7,13 @@
 import cn.hutool.core.util.CharsetUtil;
 
 public class TailerTest {
-	
+
 	@Test
 	@Ignore
 	public void tailTest() {
-		FileUtil.tail(FileUtil.file("e:/tail.txt"), CharsetUtil.CHARSET_GBK);
+		FileUtil.tail(FileUtil.file("d:/test/tail.txt"), CharsetUtil.CHARSET_GBK);
 	}
-	
+
 	@Test
 	@Ignore
 	public void tailWithLinesTest() {

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlQuery.java
Patch:
@@ -20,6 +20,8 @@
  * <pre>
  *   key1=v1&amp;key2=&amp;key3=v3
  * </pre>
+ * 查询封装分为解析查询字符串和构建查询字符串，解析可通过charset为null来自定义是否decode编码后的内容，<br>
+ * 构建则通过charset是否为null是否encode参数键值对
  *
  * @author looly
  * @since 5.3.1

File: hutool-core/src/test/java/cn/hutool/core/math/CalculatorTest.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.core.math;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 
 public class CalculatorTest {
@@ -30,7 +31,7 @@ public void conversationTest4(){
 	}
 
 	@Test
-//	@Ignore
+	@Ignore
 	public void conversationTest5(){
 		// https://github.com/dromara/hutool/issues/1984
 		final double conversion = Calculator.conversion("((1/1) / (1/1) -1) * 100");

File: hutool-core/src/test/java/cn/hutool/core/math/CalculatorTest.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.core.math;
 
 import org.junit.Assert;
-import org.junit.Ignore;
 import org.junit.Test;
 
 public class CalculatorTest {
@@ -31,7 +30,7 @@ public void conversationTest4(){
 	}
 
 	@Test
-	@Ignore
+//	@Ignore
 	public void conversationTest5(){
 		// https://github.com/dromara/hutool/issues/1984
 		final double conversion = Calculator.conversion("((1/1) / (1/1) -1) * 100");

File: hutool-poi/src/main/java/cn/hutool/poi/excel/style/StyleUtil.java
Patch:
@@ -211,7 +211,7 @@ public static boolean isNullOrDefaultStyle(Workbook workbook, CellStyle style) {
 	 * @return 数据格式
 	 * @since 5.5.5
 	 */
-	public Short getFormat(Workbook workbook, String format) {
+	public static Short getFormat(Workbook workbook, String format) {
 		final DataFormat dataFormat = workbook.createDataFormat();
 		return dataFormat.getFormat(format);
 	}

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -743,7 +743,7 @@ public long between(Date date, DateUnit unit) {
 	 * @return 相差时长
 	 */
 	public String between(Date date, DateUnit unit, BetweenFormatter.Level formatLevel) {
-		return new DateBetween(this, date).toString(formatLevel);
+		return new DateBetween(this, date).toString(unit, formatLevel);
 	}
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/MultipartOutputStream.java
Patch:
@@ -77,6 +77,7 @@ public MultipartOutputStream(OutputStream out, Charset charset, String boundary)
 	 *
 	 * @param formFieldName 表单名
 	 * @param value         值，可以是普通值、资源（如文件等）
+	 * @return this
 	 * @throws IORuntimeException IO异常
 	 */
 	public MultipartOutputStream write(String formFieldName, Object value) throws IORuntimeException {

File: hutool-core/src/test/java/cn/hutool/core/lang/tree/TreeTest.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.core.lang.tree;
 
 import cn.hutool.core.collection.CollUtil;
-import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -95,12 +94,12 @@ public void filterTest(){
 		final Tree<String> tree = TreeUtil.buildSingle(nodeList, "0");
 		tree.filter((t)->{
 			final CharSequence name = t.getName();
-			return null != name && name.toString().contains("管理");
+			return null != name && name.toString().contains("店铺");
 		});
 
 		List<String> ids = new ArrayList<>();
 		tree.walk((tr)-> ids.add(tr.getId()));
-		Assert .assertEquals(6, ids.size());
+		Assert .assertEquals(4, ids.size());
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellUtil.java
Patch:
@@ -162,9 +162,9 @@ public static void setCellValue(Cell cell, Object value, StyleSet styleSet, bool
 	 */
 	public static void setCellValue(Cell cell, Object value, CellStyle style) {
 		setCellValue(cell, (CellSetter) cell1 -> {
+			setCellValue(cell, value);
 			if (null != style) {
 				cell1.setCellStyle(style);
-				setCellValue(cell, value);
 			}
 		});
 	}
@@ -175,7 +175,7 @@ public static void setCellValue(Cell cell, Object value, CellStyle style) {
 	 * 当为头部样式时默认赋值头部样式，但是头部中如果有数字、日期等类型，将按照数字、日期样式设置
 	 *
 	 * @param cell  单元格
-	 * @param value 值
+	 * @param value 值或{@link CellSetter}
 	 * @since 5.6.4
 	 */
 	public static void setCellValue(Cell cell, Object value) {
@@ -402,7 +402,7 @@ public static void setComment(Cell cell, String commentText, String commentAutho
 		}
 		Comment comment = drawing.createCellComment(anchor);
 		comment.setString(factory.createRichTextString(commentText));
-		comment.setAuthor(StrUtil.nullToEmpty(commentText));
+		comment.setAuthor(StrUtil.nullToEmpty(commentAuthor));
 		cell.setCellComment(comment);
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/lang/tree/TreeTest.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.core.lang.tree;
 
 import cn.hutool.core.collection.CollUtil;
+import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -109,12 +110,12 @@ public void filterNewTest(){
 		// 经过过滤，生成新的树
 		Tree<String> newTree = tree.filterNew((t)->{
 			final CharSequence name = t.getName();
-			return null != name && name.toString().contains("管理");
+			return null != name && name.toString().contains("店铺");
 		});
 
 		List<String> ids = new ArrayList<>();
 		newTree.walk((tr)-> ids.add(tr.getId()));
-		Assert .assertEquals(6, ids.size());
+		Assert .assertEquals(4, ids.size());
 
 		List<String> ids2 = new ArrayList<>();
 		tree.walk((tr)-> ids2.add(tr.getId()));

File: hutool-core/src/test/java/cn/hutool/core/date/CalendarUtilTest.java
Patch:
@@ -14,7 +14,7 @@ public void formatChineseDate(){
 		final String chineseDate = CalendarUtil.formatChineseDate(calendar, false);
 		Assert.assertEquals("二〇一八年二月二十四日", chineseDate);
 		final String chineseDateTime = CalendarUtil.formatChineseDate(calendar, true);
-		Assert.assertEquals("二〇一八年二月二十四日一十二时一十三分一十四秒", chineseDateTime);
+		Assert.assertEquals("二〇一八年二月二十四日十二时十三分十四秒", chineseDateTime);
 	}
 
 	@Test(expected = IllegalArgumentException.class)

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -470,7 +470,6 @@ public String toStringAndReset() {
 	/**
 	 * 生成字符串
 	 */
-	@SuppressWarnings("NullableProblems")
 	@Override
 	public String toString() {
 		return toString(false);

File: hutool-core/src/main/java/cn/hutool/core/util/HashUtil.java
Patch:
@@ -543,6 +543,6 @@ public static long[] cityHash128(byte[] data) {
 	 * @since 5.2.5
 	 */
 	public static long[] cityHash128(byte[] data, Number128 seed) {
-		return CityHash.hash128(data).getLongArray();
+		return CityHash.hash128(data, seed).getLongArray();
 	}
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/collection/RingIndexUtil.java
Patch:
@@ -56,7 +56,8 @@ public static int ringNextInt(int modulo, AtomicInteger atomicInteger) {
 	}
 
 	/**
-	 * 通过cas操作 实现对指定值内的回环累加
+	 * 通过cas操作 实现对指定值内的回环累加<br>
+	 * 此方法一般用于大量数据完成回环累加（如数据库中的值大于int最大值）
 	 *
 	 * @param modulo     回环周期值
 	 * @param atomicLong 原子操作类

File: hutool-http/src/main/java/cn/hutool/http/webservice/SoapClient.java
Patch:
@@ -338,7 +338,7 @@ public SoapClient setMethod(Name name, Map<String, Object> params, boolean useMe
 	 */
 	public SoapClient setMethod(QName name, Map<String, Object> params, boolean useMethodPrefix) {
 		setMethod(name);
-		final String prefix = name.getPrefix();
+		final String prefix = useMethodPrefix ? name.getPrefix() : null;
 		final SOAPBodyElement methodEle = this.methodEle;
 		for (Entry<String, Object> entry : MapUtil.wrap(params)) {
 			setParam(methodEle, entry.getKey(), entry.getValue(), prefix);
@@ -618,7 +618,7 @@ private String getXmlContentType() {
 	 * @param ele    方法节点
 	 * @param name   参数名
 	 * @param value  参数值
-	 * @param prefix 命名空间前缀
+	 * @param prefix 命名空间前缀， {@code null}表示不使用前缀
 	 * @return {@link SOAPElement}子节点
 	 */
 	@SuppressWarnings("rawtypes")

File: hutool-core/src/test/java/cn/hutool/core/collection/CollUtilTest.java
Patch:
@@ -45,7 +45,7 @@ public void testRemoveWithAddIf() {
 		ArrayList<Integer> exceptRemovedList = CollUtil.newArrayList(2, 3);
 		ArrayList<Integer> exceptResultList = CollUtil.newArrayList(1);
 
-		ArrayList<Integer> resultList = CollUtil.removeWithAddIf(list, ele -> 1 == ele);
+		List<Integer> resultList = CollUtil.removeWithAddIf(list, ele -> 1 == ele);
 		Assert.assertEquals(list, exceptRemovedList);
 		Assert.assertEquals(resultList, exceptResultList);
 

File: hutool-core/src/main/java/cn/hutool/core/lang/Opt.java
Patch:
@@ -253,8 +253,10 @@ public Opt<T> ifPresentOrElse(Consumer<? super T> action, VoidFunc0 emptyAction)
 	 * String hutool = Opt.ofBlankAble("hutool").mapOrElse(String::toUpperCase, () -> Console.log("yes")).mapOrElse(String::intern, () -> Console.log("Value is not present~")).get();
 	 * }</pre>
 	 *
+	 * @param <U> map后新的类型
 	 * @param mapper      包裹里的值存在时的操作
 	 * @param emptyAction 包裹里的值不存在时的操作
+	 * @return 新的类型的Opt
 	 * @throws NullPointerException 如果包裹里的值存在时，执行的操作为 {@code null}, 或者包裹里的值不存在时的操作为 {@code null}，则抛出{@code NPE}
 	 */
 	public <U> Opt<U> mapOrElse(Function<? super T, ? extends U> mapper, VoidFunc0 emptyAction) {

File: hutool-core/src/main/java/cn/hutool/core/collection/CollectionUtil.java
Patch:
@@ -1,7 +1,7 @@
 package cn.hutool.core.collection;
 
 /**
- * 集合相关工具类，包括数组，是{@link CollUtil} 的别名工具类类
+ * 集合相关工具类，包括数组，是 {@link CollUtil} 的别名工具类
  *
  * @author xiaoleilu
  * @see CollUtil

File: hutool-core/src/main/java/cn/hutool/core/collection/CollectionUtil.java
Patch:
@@ -1,7 +1,7 @@
 package cn.hutool.core.collection;
 
 /**
- * 集合相关工具类，包括数组，是{@link CollUtil} 的别名工具类类
+ * 集合相关工具类，包括数组，是 {@link CollUtil} 的别名工具类
  *
  * @author xiaoleilu
  * @see CollUtil

File: hutool-core/src/main/java/cn/hutool/core/lang/func/LambdaUtil.java
Patch:
@@ -73,7 +73,7 @@ public static <T> String getFieldName(Func1<T, ?> func) throws IllegalArgumentEx
 	 * @param func 需要解析的 lambda 对象
 	 * @return 返回解析后的结果
 	 */
-	private static <T> SerializedLambda _resolve(Serializable func) {
+	private static SerializedLambda _resolve(Serializable func) {
 		return cache.get(func.getClass().getName(), () -> ReflectUtil.invoke(func, "writeReplace"));
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1624,7 +1624,9 @@ public static long spendMs(long preTime) {
 	 *
 	 * @param date 日期
 	 * @return int
+	 * @deprecated 2022年后结果溢出，此方法废弃
 	 */
+	@Deprecated
 	public static int toIntSecond(Date date) {
 		return Integer.parseInt(DateUtil.format(date, "yyMMddHHmm"));
 	}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel07SaxReader.java
Patch:
@@ -56,7 +56,7 @@ public Excel07SaxReader read(File file, int rid) throws POIException {
 
 	@Override
 	public Excel07SaxReader read(File file, String idOrRidOrSheetName) throws POIException {
-		try (OPCPackage open = OPCPackage.open(file, PackageAccess.READ);){
+		try (OPCPackage open = OPCPackage.open(file, PackageAccess.READ)){
 			return read(open, idOrRidOrSheetName);
 		} catch (InvalidFormatException | IOException e) {
 			throw new POIException(e);

File: hutool-core/src/main/java/cn/hutool/core/io/FastStringWriter.java
Patch:
@@ -87,4 +87,4 @@ public String toString() {
 		return this.builder.toString();
 	}
 
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/text/StrJoiner.java
Patch:
@@ -191,11 +191,10 @@ public StrJoiner setEmptyResult(String emptyResult) {
 	/**
 	 * 追加对象到拼接器中
 	 *
-	 * @param <T> 元素类型
 	 * @param obj 对象，支持数组、集合等
 	 * @return this
 	 */
-	public <T> StrJoiner append(Object obj) {
+	public StrJoiner append(Object obj) {
 		if (null == obj) {
 			append((CharSequence) null);
 		} else if (ArrayUtil.isArray(obj)) {

File: hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java
Patch:
@@ -25,7 +25,7 @@ public static String toString(String unicode) {
 		}
 
 		final int len = unicode.length();
-		StrBuilder sb = StrBuilder.create(len);
+		StringBuilder sb = new StringBuilder(len);
 		int i;
 		int pos = 0;
 		while ((i = StrUtil.indexOfIgnoreCase(unicode, "\\u", pos)) != -1) {
@@ -101,7 +101,7 @@ public static String toUnicode(String str, boolean isSkipAscii) {
 		}
 
 		final int len = str.length();
-		final StrBuilder unicode = StrBuilder.create(str.length() * 6);
+		final StringBuilder unicode = new StringBuilder(str.length() * 6);
 		char c;
 		for (int i = 0; i < len; i++) {
 			c = str.charAt(i);

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -177,7 +177,7 @@ public static String str(Object obj, Charset charset) {
 	 * @return 字符串
 	 */
 	public static String str(byte[] bytes, String charset) {
-		return str(bytes, isBlank(charset) ? Charset.defaultCharset() : Charset.forName(charset));
+		return str(bytes, CharsetUtil.charset(charset));
 	}
 
 	/**
@@ -206,7 +206,7 @@ public static String str(byte[] data, Charset charset) {
 	 * @return 字符串
 	 */
 	public static String str(Byte[] bytes, String charset) {
-		return str(bytes, isBlank(charset) ? Charset.defaultCharset() : Charset.forName(charset));
+		return str(bytes, CharsetUtil.charset(charset));
 	}
 
 	/**
@@ -243,7 +243,7 @@ public static String str(ByteBuffer data, String charset) {
 			return null;
 		}
 
-		return str(data, Charset.forName(charset));
+		return str(data, CharsetUtil.charset(charset));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -716,6 +716,9 @@ public static double div(Double v1, Double v2, int scale, RoundingMode roundingM
 	 * @since 3.1.0
 	 */
 	public static BigDecimal div(Number v1, Number v2, int scale, RoundingMode roundingMode) {
+		if(v1 instanceof BigDecimal && v2 instanceof BigDecimal){
+			return div((BigDecimal)v1, (BigDecimal)v2, scale, roundingMode);
+		}
 		return div(v1.toString(), v2.toString(), scale, roundingMode);
 	}
 

File: hutool-cache/src/main/java/cn/hutool/cache/impl/CacheObj.java
Patch:
@@ -17,11 +17,11 @@ public class CacheObj<K, V> implements Serializable{
 	protected final V obj;
 
 	/** 上次访问时间 */
-	private volatile long lastAccess;
+	protected volatile long lastAccess;
 	/** 访问次数 */
 	protected AtomicLong accessCount = new AtomicLong();
 	/** 对象存活时长，0表示永久存活*/
-	private final long ttl;
+	protected final long ttl;
 
 	/**
 	 * 构造

File: hutool-core/src/test/java/cn/hutool/core/lang/OptTest.java
Patch:
@@ -149,7 +149,7 @@ public void flattedMapTest() {
 
 	@Test
 	public void ofEmptyAbleTest() {
-		// 以前，输入一个CollectionUtil感觉要命，类似前缀的类一大堆，代码补全形同虚设(在项目中起码要输入完CollectionU才能在第一个调出这个函数)
+		// 以前，输入一个CollectionUtil感觉要命，类似前缀的类一大堆，代码补全形同虚设(在项目中起码要输入完CollectionUtil才能在第一个调出这个函数)
 		// 关键它还很常用，判空和判空集合真的太常用了...
 		List<String> past = Opt.ofNullable(Collections.<String>emptyList()).filter(CollectionUtil::isNotEmpty).orElseGet(() -> Collections.singletonList("hutool"));
 		// 现在，一个ofEmptyAble搞定
@@ -165,6 +165,7 @@ public void mapOrElseTest() {
 		Assert.assertEquals("HUTOOL", hutool);
 	}
 
+	@SuppressWarnings({"MismatchedQueryAndUpdateOfCollection", "ConstantConditions"})
 	@Test
 	public void execTest() {
 		// 有一些资深的程序员跟我说你这个lambda，双冒号语法糖看不懂...

File: hutool-core/src/main/java/cn/hutool/core/text/StrSplitter.java
Patch:
@@ -169,10 +169,9 @@ public static List<String> splitIgnoreCase(CharSequence text, char separator, in
 	 * @param ignoreEmpty 是否忽略空串
 	 * @param ignoreCase  是否忽略大小写
 	 * @return 切分后的集合
-	 * @since 3.2.1
 	 */
 	public static List<String> split(CharSequence text, char separator, int limit, boolean isTrim, boolean ignoreEmpty, boolean ignoreCase) {
-		return split(text, separator, limit, ignoreEmpty, trimFunc(isTrim));
+		return split(text, separator, limit, ignoreEmpty, ignoreCase, trimFunc(isTrim));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/finder/Finder.java
Patch:
@@ -8,10 +8,12 @@
  */
 public interface Finder {
 
+	int INDEX_NOT_FOUND = -1;
+
 	/**
 	 * 返回开始位置，即起始字符位置（包含），未找到返回-1
 	 *
-	 * @param from 查找的开始位置（包含
+	 * @param from 查找的开始位置（包含）
 	 * @return 起始字符位置，未找到返回-1
 	 */
 	int start(int from);

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -177,7 +177,7 @@ public void indexOfIgnoreCaseTest() {
 		Assert.assertEquals(5, StrUtil.indexOfIgnoreCase("aabaabaa", "B", 3));
 		Assert.assertEquals(-1, StrUtil.indexOfIgnoreCase("aabaabaa", "B", 9));
 		Assert.assertEquals(2, StrUtil.indexOfIgnoreCase("aabaabaa", "B", -1));
-		Assert.assertEquals(2, StrUtil.indexOfIgnoreCase("aabaabaa", "", 2));
+		Assert.assertEquals(-1, StrUtil.indexOfIgnoreCase("aabaabaa", "", 2));
 		Assert.assertEquals(-1, StrUtil.indexOfIgnoreCase("abc", "", 9));
 	}
 
@@ -199,8 +199,8 @@ public void lastIndexOfIgnoreCaseTest() {
 		Assert.assertEquals(2, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "B", 3));
 		Assert.assertEquals(5, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "B", 9));
 		Assert.assertEquals(-1, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "B", -1));
-		Assert.assertEquals(2, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "", 2));
-		Assert.assertEquals(3, StrUtil.lastIndexOfIgnoreCase("abc", "", 9));
+		Assert.assertEquals(-1, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "", 2));
+		Assert.assertEquals(-1, StrUtil.lastIndexOfIgnoreCase("abc", "", 9));
 		Assert.assertEquals(0, StrUtil.lastIndexOfIgnoreCase("AAAcsd", "aaa"));
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/net/RFC3986.java
Patch:
@@ -14,7 +14,7 @@ public class RFC3986 {
 	/**
 	 * gen-delims = ":" / "/" / "?" / "#" / "[" / "]" / "@"
 	 */
-	public static final PercentCodec GEN_DELIMS = PercentCodec.of(":/?#[]&");
+	public static final PercentCodec GEN_DELIMS = PercentCodec.of(":/?#[]@");
 
 	/**
 	 * sub-delims = "!" / "$" / "{@code &}" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "="

File: hutool-core/src/main/java/cn/hutool/core/text/StrFormatter.java
Patch:
@@ -35,7 +35,7 @@ public static String format(String strPattern, Object... argArray) {
 	 * 如果想输出占位符使用 \\转义即可，如果想输出占位符之前的 \ 使用双转义符 \\\\ 即可<br>
 	 * 例：<br>
 	 * 通常使用：format("this is {} for {}", "{}", "a", "b") =》 this is a for b<br>
-	 * 转义{}： format("this is \\{} for {}", "{}", "a", "b") =》 this is \{} for a<br>
+	 * 转义{}： format("this is \\{} for {}", "{}", "a", "b") =》 this is {} for a<br>
 	 * 转义\： format("this is \\\\{} for {}", "{}", "a", "b") =》 this is \a for b<br>
 	 *
 	 * @param strPattern  字符串模板

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -147,7 +147,8 @@ public static String convert15To18(String idCard) {
 	}
 
 	/**
-	 * 是否有效身份证号，忽略X的大小写
+	 * 是否有效身份证号，忽略X的大小写<br>
+	 * 如果身份证号码中含有空格始终返回{@code false}
 	 *
 	 * @param idCard 身份证号，支持18位、15位和港澳台的10位
 	 * @return 是否有效
@@ -157,7 +158,7 @@ public static boolean isValidCard(String idCard) {
 			return false;
 		}
 
-		idCard = idCard.trim();
+		//idCard = idCard.trim();
 		int length = idCard.length();
 		switch (length) {
 			case 18:// 18位身份证

File: hutool-core/src/main/java/cn/hutool/core/thread/AsyncUtil.java
Patch:
@@ -8,7 +8,7 @@
  * {@link CompletableFuture}异步工具类<br>
  * {@link CompletableFuture} 是 Future 的改进，可以通过传入回调对象，在任务完成后调用之
  *
- * @author <achao1441470436@gmail.com>
+ * @author achao1441470436@gmail.com
  * @since 5.7.17
  */
 public class AsyncUtil {

File: hutool-core/src/test/java/cn/hutool/core/date/ZodiacTest.java
Patch:
@@ -4,14 +4,14 @@
 import org.junit.Test;
 
 public class ZodiacTest {
-	
+
 	@Test
 	public void getZodiacTest() {
 		Assert.assertEquals("摩羯座", Zodiac.getZodiac(Month.JANUARY, 19));
 		Assert.assertEquals("水瓶座", Zodiac.getZodiac(Month.JANUARY, 20));
 		Assert.assertEquals("巨蟹座", Zodiac.getZodiac(6, 17));
 	}
-	
+
 	@Test
 	public void getChineseZodiacTest() {
 		Assert.assertEquals("狗", Zodiac.getChineseZodiac(1994));

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/AbstractRowHandler.java
Patch:
@@ -40,12 +40,12 @@ public AbstractRowHandler(int startRowIndex, int endRowIndex) {
 	}
 
 	@Override
-	public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
+	public void handle(int sheetIndex, long rowIndex, List<Object> rowCells) {
 		Assert.notNull(convertFunc);
 		if (rowIndex < this.startRowIndex || rowIndex > this.endRowIndex) {
 			return;
 		}
-		handleData(sheetIndex, rowIndex, convertFunc.callWithRuntimeException(rowList));
+		handleData(sheetIndex, rowIndex, convertFunc.callWithRuntimeException(rowCells));
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/BeanRowHandler.java
Patch:
@@ -42,11 +42,11 @@ public BeanRowHandler(int headerRowIndex, int startRowIndex, int endRowIndex, Cl
 	}
 
 	@Override
-	public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
+	public void handle(int sheetIndex, long rowIndex, List<Object> rowCells) {
 		if (rowIndex == this.headerRowIndex) {
-			this.headerList = ListUtil.unmodifiable(Convert.toList(String.class, rowList));
+			this.headerList = ListUtil.unmodifiable(Convert.toList(String.class, rowCells));
 			return;
 		}
-		super.handle(sheetIndex, rowIndex, rowList);
+		super.handle(sheetIndex, rowIndex, rowCells);
 	}
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/MapRowHandler.java
Patch:
@@ -39,11 +39,11 @@ public MapRowHandler(int headerRowIndex, int startRowIndex, int endRowIndex){
 	}
 
 	@Override
-	public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
+	public void handle(int sheetIndex, long rowIndex, List<Object> rowCells) {
 		if (rowIndex == this.headerRowIndex) {
-			this.headerList = ListUtil.unmodifiable(Convert.toList(String.class, rowList));
+			this.headerList = ListUtil.unmodifiable(Convert.toList(String.class, rowCells));
 			return;
 		}
-		super.handle(sheetIndex, rowIndex, rowList);
+		super.handle(sheetIndex, rowIndex, rowCells);
 	}
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/handler/RowHandler.java
Patch:
@@ -17,9 +17,9 @@ public interface RowHandler {
 	 *
 	 * @param sheetIndex 当前Sheet序号
 	 * @param rowIndex   当前行号，从0开始计数
-	 * @param rowList    行数据列表
+	 * @param rowCells   行数据，每个Object表示一个单元格的值
 	 */
-	void handle(int sheetIndex, long rowIndex, List<Object> rowList);
+	void handle(int sheetIndex, long rowIndex, List<Object> rowCells);
 
 	/**
 	 * 处理一个单元格的数据

File: hutool-poi/src/test/java/cn/hutool/poi/excel/ExcelSaxReadTest.java
Patch:
@@ -125,7 +125,7 @@ public void handleCell(int sheetIndex, long rowIndex, int cellIndex, Object valu
 					}
 
 					@Override
-					public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
+					public void handle(int sheetIndex, long rowIndex, List<Object> rowCells) {
 
 					}
 				}
@@ -143,7 +143,7 @@ public void handleCell(int sheetIndex, long rowIndex, int cellIndex, Object valu
 					}
 
 					@Override
-					public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
+					public void handle(int sheetIndex, long rowIndex, List<Object> rowCells) {
 					}
 				}
 		);

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -693,7 +693,7 @@ public static DateTime parse(CharSequence dateStr, DateParser parser) {
 	 * @since 5.7.14
 	 */
 	public static DateTime parse(CharSequence dateStr, DateParser parser, boolean lenient) {
-		return new DateTime(dateStr, parser);
+		return new DateTime(dateStr, parser, lenient);
 	}
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -10,7 +10,6 @@
 import cn.hutool.core.io.resource.Resource;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.map.MapUtil;
-import cn.hutool.core.net.FormUrlencoded;
 import cn.hutool.core.net.SSLUtil;
 import cn.hutool.core.net.url.UrlBuilder;
 import cn.hutool.core.net.url.UrlQuery;
@@ -1229,8 +1228,7 @@ private void sendFormUrlEncoded() throws IOException {
 	 * @since 5.3.2
 	 */
 	private String getFormUrlEncoded() {
-		return UrlQuery.of(this.form)
-				.build(FormUrlencoded.ALL, FormUrlencoded.ALL, this.charset);
+		return UrlQuery.of(this.form, true).build(this.charset);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/codec/PercentCodec.java
Patch:
@@ -179,6 +179,7 @@ public String encode(CharSequence path, Charset charset) {
 					continue;
 				}
 
+				// 兼容双字节的Unicode符处理（如部分emoji）
 				byte[] ba = buf.toByteArray();
 				for (byte toEncode : ba) {
 					// Converting each byte in the buffer

File: hutool-core/src/main/java/cn/hutool/core/net/RFC3986.java
Patch:
@@ -73,7 +73,7 @@ public class RFC3986 {
 	 * query中的key<br>
 	 * key不能包含"{@code &}" 和 "="
 	 */
-	public static final PercentCodec QUERY_PARAM_NAME = QUERY_PARAM_VALUE.removeSafe('=');
+	public static final PercentCodec QUERY_PARAM_NAME = PercentCodec.of(QUERY_PARAM_VALUE).removeSafe('=');
 
 	/**
 	 * unreserved  = ALPHA / DIGIT / "-" / "." / "_" / "~"

File: hutool-core/src/main/java/cn/hutool/core/net/URLEncoder.java
Patch:
@@ -13,6 +13,7 @@
 
 /**
  * URL编码，数据内容的类型是 application/x-www-form-urlencoded。
+ * TODO 6.x移除此类，使用PercentCodec代替（无法很好区分URL编码和www-form编码）
  *
  * <pre>
  * 1.字符"a"-"z"，"A"-"Z"，"0"-"9"，"."，"-"，"*"，和"_" 都不会被编码;
@@ -21,6 +22,7 @@
  * </pre>
  *
  * @author looly
+ * @see cn.hutool.core.codec.PercentCodec
  */
 public class URLEncoder implements Serializable {
 	private static final long serialVersionUID = 1L;

File: hutool-http/src/test/java/cn/hutool/http/HttpRequestTest.java
Patch:
@@ -148,4 +148,5 @@ public void getWithoutEncodeTest() {
 		HttpResponse execute = get.execute();
 		Console.log(execute.body());
 	}
+
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -107,7 +107,7 @@ public interface RegexPool {
 	/**
 	 * Http URL
 	 */
-	String URL_HTTP = "(https://|http://)?([\\w-]+\\.)+[\\w-]+(:\\d+)*(/[\\w- ./?%&=]*)?";
+	String URL_HTTP = "(https://|http://)?([\\w-]+\\.)+[\\w-]+(:\\d+)*(/[\\w- ./?%&=:]*)?";
 	/**
 	 * 中文字、英文字母、数字和下划线
 	 */

File: hutool-setting/src/test/java/cn/hutool/setting/yaml/YamlUtilTest.java
Patch:
@@ -13,7 +13,7 @@ public class YamlUtilTest {
 
 	@Test
 	public void loadByPathTest() {
-		final Dict result = YamlUtil.loadByPath("test.yaml", Dict.class);
+		final Dict result = YamlUtil.loadByPath("test.yaml");
 
 		Assert.assertEquals("John", result.getStr("firstName"));
 

File: hutool-extra/src/test/java/cn/hutool/extra/mail/MailTest.java
Patch:
@@ -39,7 +39,7 @@ public void sendWithImageTest() {
 	}
 
 	@Test
-//	@Ignore
+	@Ignore
 	public void sendHtmlTest() {
 		MailUtil.send("hutool@foxmail.com", "测试", "<h1>邮件来自Hutool测试</h1>", true);
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -608,8 +608,9 @@ public MailAccount defaultIfEmpty() {
 			this.host = StrUtil.format("smtp.{}", StrUtil.subSuf(fromAddress, fromAddress.indexOf('@') + 1));
 		}
 		if (StrUtil.isBlank(user)) {
-			// 如果用户名为空，默认为发件人邮箱前缀
-			this.user = StrUtil.subPre(fromAddress, fromAddress.indexOf('@'));
+			// 如果用户名为空，默认为发件人（issue#I4FYVY@Gitee）
+			//this.user = StrUtil.subPre(fromAddress, fromAddress.indexOf('@'));
+			this.user = fromAddress;
 		}
 		if (null == this.auth) {
 			// 如果密码非空白，则使用认证模式

File: hutool-extra/src/test/java/cn/hutool/extra/mail/MailTest.java
Patch:
@@ -39,7 +39,7 @@ public void sendWithImageTest() {
 	}
 
 	@Test
-	@Ignore
+//	@Ignore
 	public void sendHtmlTest() {
 		MailUtil.send("hutool@foxmail.com", "测试", "<h1>邮件来自Hutool测试</h1>", true);
 	}

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -22,7 +22,6 @@
 import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
 import java.util.Random;
 import java.util.Set;
 import java.util.function.Function;
@@ -118,7 +117,7 @@ public static boolean isNotEmpty(Object array) {
 	public static <T> boolean hasNull(T... array) {
 		if (isNotEmpty(array)) {
 			for (T element : array) {
-				if (null == element) {
+				if (ObjectUtil.isNull(element)) {
 					return true;
 				}
 			}
@@ -150,7 +149,7 @@ public static <T> boolean isAllNull(T... array) {
 	 */
 	@SuppressWarnings("unchecked")
 	public static <T> T firstNonNull(T... array) {
-		return firstMatch(Objects::nonNull, array);
+		return firstMatch(ObjectUtil::isNotNull, array);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -292,22 +292,22 @@ public static boolean isNotEmpty(Object obj) {
 	 * @since 3.0.7
 	 */
 	public static <T> T defaultIfNull(final T object, final T defaultValue) {
-		return (null != object) ? object : defaultValue;
+		return isNull(object) ? defaultValue : object;
 	}
 
 
 	/**
 	 * 如果给定对象为{@code null} 返回默认值, 如果不为null 返回自定义handle处理后的返回值
 	 *
 	 * @param source       Object 类型对象
-	 * @param handle       自定义的处理方法
+	 * @param handle       非空时自定义的处理方法
 	 * @param defaultValue 默认为空的返回值
 	 * @param <T>          被检查对象为{@code null}返回默认值，否则返回自定义handle处理后的返回值
 	 * @return 处理后的返回值
 	 * @since 5.4.6
 	 */
 	public static <T> T defaultIfNull(Object source, Supplier<? extends T> handle, final T defaultValue) {
-		if (Objects.nonNull(source)) {
+		if (isNotNull(source)) {
 			return handle.get();
 		}
 		return defaultValue;

File: hutool-core/src/main/java/cn/hutool/core/date/StopWatch.java
Patch:
@@ -335,6 +335,7 @@ public String shortSummary() {
 	 *     StopWatch '[id]': running time = [total] [unit]
 	 * </pre>
 	 *
+	 * @param unit 时间单位，{@code null}则默认为{@link TimeUnit#NANOSECONDS}
 	 * @return 任务信息
 	 */
 	public String shortSummary(TimeUnit unit) {

File: hutool-core/src/main/java/cn/hutool/core/compiler/CompilerUtil.java
Patch:
@@ -36,7 +36,7 @@ public static boolean compile(String... sourceFiles) {
 	 * @return {@link StandardJavaFileManager}
 	 */
 	public static StandardJavaFileManager getFileManager() {
-		return SYSTEM_COMPILER.getStandardFileManager(null, null, null);
+		return getFileManager(null);
 	}
 
 	/**
@@ -47,7 +47,7 @@ public static StandardJavaFileManager getFileManager() {
 	 * @since 5.5.8
 	 */
 	public static StandardJavaFileManager getFileManager(DiagnosticListener<? super JavaFileObject> diagnosticListener) {
-		return SYSTEM_COMPILER.getStandardFileManager(null, null, null);
+		return SYSTEM_COMPILER.getStandardFileManager(diagnosticListener, null, null);
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -736,7 +736,7 @@ public ExcelWriter merge(int firstRow, int lastRow, int firstColumn, int lastCol
 
 		CellStyle style = null;
 		if (null != this.styleSet) {
-			style = (isSetHeaderStyle && null != this.styleSet.headCellStyle) ? this.styleSet.headCellStyle : this.styleSet.cellStyle;
+			style = styleSet.getStyleByValueType(content, isSetHeaderStyle);
 		}
 
 		return merge(firstRow, lastRow, firstColumn, lastColumn, content, style);

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -579,7 +579,7 @@ private void expandCapacity(int minimumCapacity) {
 	private static int totalLength(CharSequence... strs) {
 		int totalLength = 0;
 		for (CharSequence str : strs) {
-			totalLength += (null == str ? 4 : str.length());
+			totalLength += (null == str ? 0 : str.length());
 		}
 		return totalLength;
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrCodeUtil.java
Patch:
@@ -313,9 +313,10 @@ public static BitMatrix encode(String content, BarcodeFormat format, QrConfig co
 			// 默认配置
 			config = new QrConfig();
 		}
+
 		BitMatrix bitMatrix;
 		try {
-			bitMatrix = multiFormatWriter.encode(content, format, config.width, config.height, config.toHints());
+			bitMatrix = multiFormatWriter.encode(content, format, config.width, config.height, config.toHints(format));
 		} catch (WriterException e) {
 			throw new QrCodeException(e);
 		}

File: hutool-http/src/main/java/cn/hutool/http/HttpResponse.java
Patch:
@@ -148,9 +148,9 @@ public boolean isGzip() {
 	}
 
 	/**
-	 * 是否为zlib(Defalte)压缩过的内容
+	 * 是否为zlib(Deflate)压缩过的内容
 	 *
-	 * @return 是否为zlib(Defalte)压缩过的内容
+	 * @return 是否为zlib(Deflate)压缩过的内容
 	 * @since 4.5.7
 	 */
 	public boolean isDeflate() {

File: hutool-core/src/main/java/cn/hutool/core/net/RFC3986.java
Patch:
@@ -16,7 +16,7 @@ public class RFC3986 {
 	public static final PercentCodec GEN_DELIMS = PercentCodec.of(":/?#[]&");
 
 	/**
-	 * sub-delims = "!" / "$" / "&" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "="
+	 * sub-delims = "!" / "$" / "{@code &}" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "="
 	 */
 	public static final PercentCodec SUB_DELIMS = PercentCodec.of("!$&'()*+,;=");
 

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlPath.java
Patch:
@@ -29,7 +29,7 @@ public class UrlPath {
 	 * @param charset decode用的编码，null表示不做decode
 	 * @return UrlPath
 	 */
-	public static UrlPath of(String pathStr, Charset charset) {
+	public static UrlPath of(CharSequence pathStr, Charset charset) {
 		final UrlPath urlPath = new UrlPath();
 		urlPath.parse(pathStr, charset);
 		return urlPath;
@@ -97,7 +97,7 @@ public UrlPath addBefore(CharSequence segment) {
 	 * @param charset decode编码，null表示不解码
 	 * @return this
 	 */
-	public UrlPath parse(String path, Charset charset) {
+	public UrlPath parse(CharSequence path, Charset charset) {
 		if (StrUtil.isNotEmpty(path)) {
 			// 原URL中以/结尾，则这个规则需保留，issue#I1G44J@Gitee
 			if(StrUtil.endWith(path, CharUtil.SLASH)){

File: hutool-core/src/test/java/cn/hutool/core/net/UrlBuilderTest.java
Patch:
@@ -192,9 +192,9 @@ public void weixinUrlTest(){
 				"&amp;sn=1044c0d19723f74f04f4c1da34eefa35" +
 				"&amp;chksm=6cbda3a25bca2ab4516410db6ce6e125badaac2f8c5548ea6e18eab6dc3c5422cb8cbe1095f7";
 		final UrlBuilder builder = UrlBuilder.ofHttp(urlStr, CharsetUtil.CHARSET_UTF_8);
-		// 原URL中的&amp;替换为&，value中的=被编码为%3D
+		// 原URL中的&amp;替换为&
 		Assert.assertEquals("https://mp.weixin.qq.com/s?" +
-				"__biz=MzI5NjkyNTIxMg%3D%3D" +
+				"__biz=MzI5NjkyNTIxMg==" +
 				"&mid=100000465&idx=1" +
 				"&sn=1044c0d19723f74f04f4c1da34eefa35" +
 				"&chksm=6cbda3a25bca2ab4516410db6ce6e125badaac2f8c5548ea6e18eab6dc3c5422cb8cbe1095f7",
@@ -240,7 +240,7 @@ public void toURITest() throws URISyntaxException {
 	public void testEncodeInQuery() {
 		String webUrl = "http://exmple.com/patha/pathb?a=123&b=4?6&c=789"; // b=4?6  参数中有未编码的？
 		final UrlBuilder urlBuilder = UrlBuilder.of(webUrl, StandardCharsets.UTF_8);
-		Assert.assertEquals("a=123&b=4%3F6&c=789", urlBuilder.getQueryStr());
+		Assert.assertEquals("a=123&b=4?6&c=789", urlBuilder.getQueryStr());
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -129,7 +129,7 @@ public static UrlBuilder of(String url) {
 	 */
 	public static UrlBuilder of(String url, Charset charset) {
 		Assert.notBlank(url, "Url must be not blank!");
-		return of(URLUtil.url(url.trim()), charset);
+		return of(URLUtil.url(StrUtil.trim(url)), charset);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlQuery.java
Patch:
@@ -312,7 +312,7 @@ private void addParam(String key, String value, Charset charset) {
 	private static String toStr(CharSequence str, Charset charset, boolean isEncode) {
 		String result = StrUtil.str(str);
 		if (isEncode) {
-			result = URLUtil.encodeAll(result, charset);
+			result = URLUtil.encodeFragment(result, charset);
 		}
 		return result;
 	}

File: hutool-core/src/main/java/cn/hutool/core/codec/Base64.java
Patch:
@@ -299,7 +299,7 @@ public static void decodeToStream(CharSequence base64, OutputStream out, boolean
 	 * base64解码
 	 *
 	 * @param base64 被解码的base64字符串
-	 * @return 被加密后的字符串
+	 * @return 解码后的bytes
 	 */
 	public static byte[] decode(CharSequence base64) {
 		return Base64Decoder.decode(base64);

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/SmTest.java
Patch:
@@ -81,4 +81,6 @@ public void hmacSm3Test() {
 		String digest = hMac.digestHex(content);
 		Assert.assertEquals("493e3f9a1896b43075fbe54658076727960d69632ac6b6ed932195857a6840c6", digest);
 	}
+
+
 }

File: hutool-core/src/main/java/cn/hutool/core/text/split/SplitIter.java
Patch:
@@ -53,7 +53,6 @@ public SplitIter(CharSequence text, TextFinder separatorFinder, int limit, boole
 
 	@Override
 	protected String computeNext() {
-		Assert.notNull(this.text, "Text to find must be not null!");
 		// 达到数量上限或末尾，结束
 		if (count >= limit || offset > text.length()) {
 			return null;

File: hutool-crypto/src/main/java/cn/hutool/crypto/KeyUtil.java
Patch:
@@ -180,7 +180,7 @@ public static SecretKey generateKey(String algorithm, byte[] key) {
 	 */
 	public static SecretKey generateDESKey(String algorithm, byte[] key) {
 		if (StrUtil.isBlank(algorithm) || false == algorithm.startsWith("DES")) {
-			throw new CryptoException("Algorithm [{}] is not a DES algorithm!");
+			throw new CryptoException("Algorithm [{}] is not a DES algorithm!", algorithm);
 		}
 
 		SecretKey secretKey;
@@ -212,7 +212,7 @@ public static SecretKey generateDESKey(String algorithm, byte[] key) {
 	 */
 	public static SecretKey generatePBEKey(String algorithm, char[] key) {
 		if (StrUtil.isBlank(algorithm) || false == algorithm.startsWith("PBE")) {
-			throw new CryptoException("Algorithm [{}] is not a PBE algorithm!");
+			throw new CryptoException("Algorithm [{}] is not a PBE algorithm!", algorithm);
 		}
 
 		if (null == key) {

File: hutool-cache/src/main/java/cn/hutool/cache/impl/FIFOCache.java
Patch:
@@ -16,7 +16,7 @@
  * @param <V> 值类型
  * @author Looly
  */
-public class FIFOCache<K, V> extends AbstractCache<K, V> {
+public class FIFOCache<K, V> extends StampedCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/**

File: hutool-cache/src/main/java/cn/hutool/cache/impl/LFUCache.java
Patch:
@@ -15,7 +15,7 @@
  * @param <K> 键类型
  * @param <V> 值类型
  */
-public class LFUCache<K, V> extends AbstractCache<K, V> {
+public class LFUCache<K, V> extends StampedCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/**

File: hutool-cache/src/main/java/cn/hutool/cache/impl/LRUCache.java
Patch:
@@ -16,7 +16,7 @@
  * @param <K> 键类型
  * @param <V> 值类型
  */
-public class LRUCache<K, V> extends AbstractCache<K, V> {
+public class LRUCache<K, V> extends ReentrantCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/**

File: hutool-cache/src/main/java/cn/hutool/cache/impl/TimedCache.java
Patch:
@@ -16,7 +16,7 @@
  * @param <K> 键类型
  * @param <V> 值类型
  */
-public class TimedCache<K, V> extends AbstractCache<K, V> {
+public class TimedCache<K, V> extends StampedCache<K, V> {
 	private static final long serialVersionUID = 1L;
 
 	/** 正在执行的定时任务 */

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -167,7 +167,7 @@ public DateTime(Instant instant) {
 	 * @since 5.0.5
 	 */
 	public DateTime(Instant instant, ZoneId zoneId) {
-		this(instant.toEpochMilli(), TimeZone.getTimeZone(ObjectUtil.defaultIfNull(zoneId, ZoneId.systemDefault())));
+		this(instant.toEpochMilli(), ZoneUtil.toTimeZone(zoneId));
 	}
 
 	/**
@@ -177,7 +177,7 @@ public DateTime(Instant instant, ZoneId zoneId) {
 	 * @since 5.0.0
 	 */
 	public DateTime(TemporalAccessor temporalAccessor) {
-		this(DateUtil.toInstant(temporalAccessor));
+		this(TemporalAccessorUtil.toInstant(temporalAccessor));
 	}
 
 	/**
@@ -276,7 +276,7 @@ public DateTime(CharSequence dateStr, DateFormat dateFormat) {
 	 * @since 5.0.0
 	 */
 	public DateTime(CharSequence dateStr, DateTimeFormatter formatter) {
-		this(Instant.from(formatter.parse(dateStr)), formatter.getZone());
+		this(TemporalAccessorUtil.toInstant(formatter.parse(dateStr)), formatter.getZone());
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -7,7 +7,6 @@
 import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.lang.Assert;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.IdUtil;
@@ -765,7 +764,6 @@ public ExcelWriter merge(int firstRow, int lastRow, int firstColumn, int lastCol
 		if (null != content) {
 			final Cell cell = getOrCreateCell(firstColumn, firstRow);
 			CellUtil.setCellValue(cell, content, cellStyle);
-			Console.log("{} {} {}", firstColumn, firstRow, cell.getStringCellValue());
 		}
 		return this;
 	}

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2948,6 +2948,9 @@ public static int size(final Object object) {
 	 * @since 5.6.0
 	 */
 	public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2) {
+		if (list1 == list2){
+			return  true;
+		}
 		if (list1 == null || list2 == null || list1.size() != list2.size()) {
 			return false;
 		}

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -819,7 +819,7 @@ public static <F, T> Iterator<T> trans(Iterator<F> iterator, Function<? super F,
 	 * @return Iterable对象的元素数量
 	 * @since 5.5.0
 	 */
-	public static int size(final Iterable<?> iterable) {
+	public static int size(Iterable<?> iterable) {
 		if (null == iterable) {
 			return 0;
 		}
@@ -838,7 +838,7 @@ public static int size(final Iterable<?> iterable) {
 	 * @return Iterator对象的元素数量
 	 * @since 5.5.0
 	 */
-	public static int size(final Iterator<?> iterator) {
+	public static int size(Iterator<?> iterator) {
 		int size = 0;
 		if (iterator != null) {
 			while (iterator.hasNext()) {
@@ -862,7 +862,7 @@ public static int size(final Iterator<?> iterator) {
 	 * @return 是否相同
 	 * @since 5.6.0
 	 */
-	public static boolean isEqualList(final Iterable<?> list1, final Iterable<?> list2) {
+	public static boolean isEqualList(Iterable<?> list1, Iterable<?> list2) {
 		if (list1 == list2) {
 			return true;
 		}

File: hutool-core/src/test/java/cn/hutool/core/text/StrJoinerTest.java
Patch:
@@ -4,7 +4,6 @@
 import cn.hutool.core.collection.ListUtil;
 import org.junit.Assert;
 import org.junit.Test;
-import org.hamcrest.CoreMatchers;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -35,9 +34,9 @@ public void noJoinTest(){
 	public void joinMultiArrayTest(){
 		final StrJoiner append = StrJoiner.of(",");
 		append.append(new Object[]{ListUtil.of("1", "2"),
-				CollUtil.newHashSet("3", "4")
+				CollUtil.newLinkedHashSet("3", "4")
 		});
-		Assert.assertThat(append.toString(), CoreMatchers.anyOf(CoreMatchers.is("1,2,3,4"), CoreMatchers.is("1,2,4,3")));
+		Assert.assertEquals("1,2,3,4", append.toString());
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/text/StrJoinerTest.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.collection.ListUtil;
 import org.junit.Assert;
 import org.junit.Test;
+import org.hamcrest.CoreMatchers;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -36,7 +37,7 @@ public void joinMultiArrayTest(){
 		append.append(new Object[]{ListUtil.of("1", "2"),
 				CollUtil.newHashSet("3", "4")
 		});
-		Assert.assertEquals("1,2,3,4", append.toString());
+		Assert.assertThat(append.toString(), CoreMatchers.anyOf(CoreMatchers.is("1,2,3,4"), CoreMatchers.is("1,2,4,3")));
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/text/StrJoinerTest.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.collection.ListUtil;
 import org.junit.Assert;
 import org.junit.Test;
+import org.hamcrest.CoreMatchers;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -36,7 +37,7 @@ public void joinMultiArrayTest(){
 		append.append(new Object[]{ListUtil.of("1", "2"),
 				CollUtil.newHashSet("3", "4")
 		});
-		Assert.assertEquals("1,2,3,4", append.toString());
+		Assert.assertThat(append.toString(), CoreMatchers.anyOf(CoreMatchers.is("1,2,3,4"), CoreMatchers.is("1,2,4,3")));
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/TreeBuilder.java
Patch:
@@ -112,6 +112,7 @@ public TreeBuilder<E> setWeight(Comparable<?> weight) {
 	 *
 	 * @param key   键
 	 * @param value 扩展值
+	 * @return this
 	 * @since 5.7.14
 	 */
 	public TreeBuilder<E> putExtra(String key, Object value) {

File: hutool-core/src/main/java/cn/hutool/core/text/split/SplitIter.java
Patch:
@@ -133,14 +133,15 @@ public List<String> toList(boolean trim) {
 	/**
 	 * 获取切分后的对象列表
 	 *
-	 * @param <T> 元素类型
+	 * @param <T>     元素类型
+	 * @param mapping 字符串映射函数
 	 * @return 切分后的列表
 	 */
 	public <T> List<T> toList(Function<String, T> mapping) {
 		final List<T> result = new ArrayList<>();
 		while (this.hasNext()) {
 			final T apply = mapping.apply(this.next());
-			if(ignoreEmpty && StrUtil.isEmptyIfStr(apply)){
+			if (ignoreEmpty && StrUtil.isEmptyIfStr(apply)) {
 				// 对于mapping之后依旧是String的情况，ignoreEmpty依旧有效
 				continue;
 			}

File: hutool-json/src/test/java/cn/hutool/json/xml/XMLTest.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.json.XML;
 import org.junit.Assert;
 import org.junit.Test;
+import org.hamcrest.CoreMatchers;
 
 public class XMLTest {
 
@@ -14,7 +15,7 @@ public void toXmlTest(){
 				.set("aaa", "你好")
 				.set("键2", "test");
 		final String s = JSONUtil.toXmlStr(put);
-		Assert.assertEquals("<aaa>你好</aaa><键2>test</键2>", s);
+		Assert.assertThat(s, CoreMatchers.anyOf(CoreMatchers.is("<aaa>你好</aaa><键2>test</键2>"), CoreMatchers.is("<键2>test</键2><aaa>你好</aaa>")));
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/reader/BeanSheetReader.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.poi.excel.reader;
 
 import cn.hutool.core.bean.BeanUtil;
+import cn.hutool.core.bean.copier.CopyOptions;
 import cn.hutool.poi.excel.cell.CellEditor;
 import org.apache.poi.ss.usermodel.Sheet;
 
@@ -41,8 +42,9 @@ public List<T> read(Sheet sheet) {
 		}
 
 		final List<T> beanList = new ArrayList<>(mapList.size());
+		final CopyOptions copyOptions = CopyOptions.create().setIgnoreError(true);
 		for (Map<String, Object> map : mapList) {
-			beanList.add(BeanUtil.toBeanIgnoreError(map, this.beanClass));
+			beanList.add(BeanUtil.toBean(map, this.beanClass, copyOptions));
 		}
 		return beanList;
 	}

File: hutool-json/src/test/java/cn/hutool/json/xml/XMLTest.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.json.XML;
 import org.junit.Assert;
 import org.junit.Test;
+import org.hamcrest.CoreMatchers;
 
 public class XMLTest {
 
@@ -14,7 +15,7 @@ public void toXmlTest(){
 				.set("aaa", "你好")
 				.set("键2", "test");
 		final String s = JSONUtil.toXmlStr(put);
-		Assert.assertEquals("<aaa>你好</aaa><键2>test</键2>", s);
+		Assert.assertThat(s, CoreMatchers.anyOf(CoreMatchers.is("<aaa>你好</aaa><键2>test</键2>"), CoreMatchers.is("<键2>test</键2><aaa>你好</aaa>")));
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/getter/ListTypeGetter.java
Patch:
@@ -52,7 +52,7 @@ public interface ListTypeGetter {
 	List<Boolean> getBoolList(String key);
 
 	/**
-	 * 获取BigDecimal型属性值列表
+	 * 获取Long型属性值列表
 	 *
 	 * @param key 属性名
 	 * @return 属性值列表

File: hutool-core/src/main/java/cn/hutool/core/lang/Dict.java
Patch:
@@ -15,6 +15,7 @@
 import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * 字典对象，扩充了HashMap中的方法
@@ -74,7 +75,7 @@ public static Dict of(Pair<String, Object>... pairs) {
 	 * 根据给定的键值对数组创建Dict对象，传入参数必须为key,value,key,value...
 	 *
 	 * <p>奇数参数必须为key，key最后会转换为String类型。</p>
-	 * <p>奇数参数必须为value，可以为任意类型。</p>
+	 * <p>偶数参数必须为value，可以为任意类型。</p>
 	 *
 	 * <pre>
 	 * Dict dict = Dict.of(
@@ -291,7 +292,7 @@ public <T extends Dict> void removeEqual(T dict, String... withoutNames) {
 			}
 
 			final Object value = this.get(entry.getKey());
-			if (null != value && value.equals(entry.getValue())) {
+			if (Objects.equals(value, entry.getValue())) {
 				this.remove(entry.getKey());
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/lang/Dict.java
Patch:
@@ -15,6 +15,7 @@
 import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * 字典对象，扩充了HashMap中的方法
@@ -74,7 +75,7 @@ public static Dict of(Pair<String, Object>... pairs) {
 	 * 根据给定的键值对数组创建Dict对象，传入参数必须为key,value,key,value...
 	 *
 	 * <p>奇数参数必须为key，key最后会转换为String类型。</p>
-	 * <p>奇数参数必须为value，可以为任意类型。</p>
+	 * <p>偶数参数必须为value，可以为任意类型。</p>
 	 *
 	 * <pre>
 	 * Dict dict = Dict.of(
@@ -291,7 +292,7 @@ public <T extends Dict> void removeEqual(T dict, String... withoutNames) {
 			}
 
 			final Object value = this.get(entry.getKey());
-			if (null != value && value.equals(entry.getValue())) {
+			if (Objects.equals(value, entry.getValue())) {
 				this.remove(entry.getKey());
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/getter/ListTypeGetter.java
Patch:
@@ -52,7 +52,7 @@ public interface ListTypeGetter {
 	List<Boolean> getBoolList(String key);
 
 	/**
-	 * 获取BigDecimal型属性值列表
+	 * 获取Long型属性值列表
 	 *
 	 * @param key 属性名
 	 * @return 属性值列表

File: hutool-core/src/main/java/cn/hutool/core/date/StopWatch.java
Patch:
@@ -27,7 +27,7 @@
  * stopWatch.stop();
  *
  * // 任务2
- * stopWatch.start("任务一");
+ * stopWatch.start("任务二");
  * Thread.sleep(2000);
  * stopWatch.stop();
  *
@@ -114,7 +114,7 @@ public StopWatch(String id, boolean keepTaskList) {
 	/**
 	 * 获取StopWatch 的ID，用于多个秒表对象的区分
 	 *
-	 * @return the ID 空字符串为
+	 * @return the ID 默认为空字符串
 	 * @see #StopWatch(String)
 	 */
 	public String getId() {

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1448,7 +1448,7 @@ public static long betweenDay(Date beginDate, Date endDate, boolean isReset) {
 	}
 
 	/**
-	 * 计算指定指定时间区间内的周数
+	 * 计算指定时间区间内的周数
 	 *
 	 * @param beginDate 开始时间
 	 * @param endDate   结束时间
@@ -1666,7 +1666,7 @@ public static TimeInterval timer(boolean isNano) {
 	 * stopWatch.stop();
 	 *
 	 * // 任务2
-	 * stopWatch.start("任务一");
+	 * stopWatch.start("任务二");
 	 * Thread.sleep(2000);
 	 * stopWatch.stop();
 	 *
@@ -1696,7 +1696,7 @@ public static StopWatch createStopWatch() {
 	 * stopWatch.stop();
 	 *
 	 * // 任务2
-	 * stopWatch.start("任务一");
+	 * stopWatch.start("任务二");
 	 * Thread.sleep(2000);
 	 * stopWatch.stop();
 	 *

File: hutool-core/src/test/java/cn/hutool/core/collection/CollStreamUtilTest.java
Patch:
@@ -18,6 +18,7 @@
  * CollectionStream测试方法
  */
 public class CollStreamUtilTest {
+
 	@Test
 	public void testToIdentityMap() {
 		Map<Long, Student> map = CollStreamUtil.toIdentityMap(null, Student::getStudentId);

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -449,7 +449,7 @@ public void clear() {
 	 */
 	@Override
 	public Object set(int index, Object element) {
-		if(index > size()){
+		if(index >= size()){
 			add(index, element);
 		}
 		return this.rawList.set(index, JSONUtil.wrap(element, this.config));

File: hutool-db/src/test/java/cn/hutool/db/sql/ConditionTest.java
Patch:
@@ -44,7 +44,7 @@ public void toStringNoPlaceHolderTest() {
 
 		Condition conditionLike = new Condition("user", "like %aaa");
 		conditionLike.setPlaceHolder(false);
-		Assert.assertEquals("user LIKE %aaa", conditionLike.toString());
+		Assert.assertEquals("user LIKE '%aaa'", conditionLike.toString());
 
 		Condition conditionIn = new Condition("user", "in 1,2,3");
 		conditionIn.setPlaceHolder(false);

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -599,6 +599,7 @@ public static <T> List<List<T>> splitAvg(List<T> list, int limit) {
 	 * 交换会修改原List<br>
 	 * 如果集合中有多个相同元素，只交换第一个找到的元素
 	 *
+	 * @param <T>         元素类型
 	 * @param list        列表
 	 * @param element     需交换元素
 	 * @param targetIndex 目标索引
@@ -618,6 +619,7 @@ public static <T> void swapTo(List<T> list, T element, Integer targetIndex) {
 	 * 交换会修改原List<br>
 	 * 如果集合中有多个相同元素，只交换第一个找到的元素
 	 *
+	 * @param <T>           元素类型
 	 * @param list          列表
 	 * @param element       需交换元素
 	 * @param targetElement 目标元素

File: hutool-core/src/main/java/cn/hutool/core/lang/Dict.java
Patch:
@@ -522,6 +522,7 @@ public Number getNumber(String attr) {
 	 * person.friends[5].name
 	 * </pre>
 	 *
+	 * @param <T> 目标类型
 	 * @param expression 表达式
 	 * @return 对象
 	 * @see BeanPath#get(Object)

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -1835,6 +1835,7 @@ public static List<String> split(CharSequence str, char separator, int limit, bo
 	/**
 	 * 切分字符串
 	 *
+	 * @param <R>         切分后元素类型
 	 * @param str         被切分的字符串
 	 * @param separator   分隔符字符
 	 * @param limit       限制分片数，-1不限制

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -1040,6 +1040,9 @@ private static Calendar parse(CharSequence dateStr, DateParser parser, boolean l
 		if (null == calendar) {
 			throw new DateException("Parse [{}] with format [{}] error!", dateStr, parser.getPattern());
 		}
+
+		//noinspection MagicConstant
+		calendar.setFirstDayOfWeek(Week.MONDAY.getValue());
 		return calendar;
 	}
 

File: hutool-db/src/main/java/cn/hutool/db/sql/ConditionBuilder.java
Patch:
@@ -24,7 +24,7 @@ public class ConditionBuilder implements Builder<String> {
 	 * 创建构建器
 	 *
 	 * @param conditions 条件列表
-	 * @return {@link ConditionBuilder}
+	 * @return ConditionBuilder
 	 */
 	public static ConditionBuilder of(Condition... conditions) {
 		return new ConditionBuilder(conditions);

File: hutool-core/src/test/java/cn/hutool/core/util/JAXBUtilTest.java
Patch:
@@ -50,7 +50,7 @@ public void xmlToBeanTest() {
 
 	@XmlRootElement(name = "school")
 	@XmlAccessorType(XmlAccessType.FIELD)
-	@XmlType(propOrder={"schoolName", "school_address", "room"})
+	@XmlType(propOrder={"schoolName", "schoolAddress", "room"})
 	public static class SchoolVo {
 		@XmlElement(name = "school_name", required = true)
 		private String schoolName;
@@ -87,7 +87,7 @@ public void setRoom(RoomVo room) {
 		}
 
 		@XmlAccessorType(XmlAccessType.FIELD)
-		@XmlType(propOrder={"room_no", "room_name"})
+		@XmlType(propOrder={"roomNo", "roomName"})
 		public static final class RoomVo {
 			@XmlElement(name = "room_no", required = true)
 			private String roomNo;

File: hutool-core/src/test/java/cn/hutool/core/util/JAXBUtilTest.java
Patch:
@@ -50,6 +50,7 @@ public void xmlToBeanTest() {
 
 	@XmlRootElement(name = "school")
 	@XmlAccessorType(XmlAccessType.FIELD)
+	@XmlType(propOrder={"schoolName", "school_address", "room"})
 	public static class SchoolVo {
 		@XmlElement(name = "school_name", required = true)
 		private String schoolName;
@@ -86,6 +87,7 @@ public void setRoom(RoomVo room) {
 		}
 
 		@XmlAccessorType(XmlAccessType.FIELD)
+		@XmlType(propOrder={"room_no", "room_name"})
 		public static final class RoomVo {
 			@XmlElement(name = "room_no", required = true)
 			private String roomNo;

File: hutool-core/src/test/java/cn/hutool/core/util/JAXBUtilTest.java
Patch:
@@ -50,6 +50,7 @@ public void xmlToBeanTest() {
 
 	@XmlRootElement(name = "school")
 	@XmlAccessorType(XmlAccessType.FIELD)
+	@XmlType(propOrder={"schoolName", "school_address", "room"})
 	public static class SchoolVo {
 		@XmlElement(name = "school_name", required = true)
 		private String schoolName;
@@ -86,6 +87,7 @@ public void setRoom(RoomVo room) {
 		}
 
 		@XmlAccessorType(XmlAccessType.FIELD)
+		@XmlType(propOrder={"room_no", "room_name"})
 		public static final class RoomVo {
 			@XmlElement(name = "room_no", required = true)
 			private String roomNo;

File: hutool-core/src/main/java/cn/hutool/core/codec/BCD.java
Patch:
@@ -3,7 +3,7 @@
 import cn.hutool.core.lang.Assert;
 
 /**
- * BCD码（Binary-Coded Decimal‎）亦称二进码十进数或二-十进制代码<br>
+ * BCD码（Binary-Coded Decimal）亦称二进码十进数或二-十进制代码<br>
  * BCD码这种编码形式利用了四个位元来储存一个十进制的数码，使二进制和十进制之间的转换得以快捷的进行<br>
  * see http://cuisuqiang.iteye.com/blog/1429956
  * @author Looly

File: hutool-core/src/main/java/cn/hutool/core/lang/Matcher.java
Patch:
@@ -2,14 +2,15 @@
 
 /**
  * 匹配接口
- * @author Looly
  *
  * @param <T> 匹配的对象类型
+ * @author Looly
  */
 @FunctionalInterface
-public interface Matcher<T>{
+public interface Matcher<T> {
 	/**
 	 * 给定对象是否匹配
+	 *
 	 * @param t 对象
 	 * @return 是否匹配
 	 */

File: hutool-jwt/src/main/java/cn/hutool/jwt/JWT.java
Patch:
@@ -50,7 +50,7 @@ public class JWT implements RegisteredPayload<JWT> {
 	/**
 	 * 创建空的JWT对象
 	 *
-	 * @return {@link JWT}
+	 * @return JWT
 	 */
 	public static JWT create() {
 		return new JWT();
@@ -60,7 +60,7 @@ public static JWT create() {
 	 * 创建并解析JWT对象
 	 *
 	 * @param token JWT Token字符串，格式为xxxx.yyyy.zzzz
-	 * @return {@link JWT}
+	 * @return JWT
 	 */
 	public static JWT of(String token) {
 		return new JWT(token);

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -427,6 +427,8 @@ public HttpRequest cookie(HttpCookie... cookies) {
 		if (ArrayUtil.isEmpty(cookies)) {
 			return disableCookie();
 		}
+		// 名称/值对之间用分号和空格 ('; ')
+		// https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cookie
 		return cookie(ArrayUtil.join(cookies, "; "));
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3057,7 +3057,7 @@ public static File writeFromStream(InputStream in, String fullFilePath) throws I
 	}
 
 	/**
-	 * 将文件写入流中，此方法不会概念比输出流
+	 * 将文件写入流中，此方法不会关闭输出流
 	 *
 	 * @param file 文件
 	 * @param out  流
@@ -3069,7 +3069,7 @@ public static long writeToStream(File file, OutputStream out) throws IORuntimeEx
 	}
 
 	/**
-	 * 将流的内容写入文件<br>
+	 * 将路径对应文件写入流中，此方法不会关闭输出流
 	 *
 	 * @param fullFilePath 文件绝对路径
 	 * @param out          输出流

File: hutool-db/src/main/java/cn/hutool/db/StatementUtil.java
Patch:
@@ -358,7 +358,7 @@ private static void setParam(PreparedStatement ps, int paramIndex, Object param,
 				return;
 			}
 			if (param instanceof BigInteger) {
-				// BigInteger转为Long
+				// BigInteger转为BigDecimal
 				ps.setBigDecimal(paramIndex, new BigDecimal((BigInteger) param));
 				return;
 			}

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -326,6 +326,7 @@ public static String[] isValidCard10(String idcard) {
 		} else if (idcard.matches("^[157][0-9]{6}\\(?[0-9A-Z]\\)?$")) { // 澳门
 			info[0] = "澳门";
 			info[1] = "N";
+			info[2] = "true";
 		} else if (idcard.matches("^[A-Z]{1,2}[0-9]{6}\\(?[0-9A]\\)?$")) { // 香港
 			info[0] = "香港";
 			info[1] = "N";

File: hutool-db/src/main/java/cn/hutool/db/ds/simple/SimpleDataSource.java
Patch:
@@ -38,7 +38,7 @@ public class SimpleDataSource extends AbstractDataSource {
 	 * 获得一个数据源
 	 *
 	 * @param group 数据源分组
-	 * @return {@link SimpleDataSource}
+	 * @return SimpleDataSource
 	 */
 	synchronized public static SimpleDataSource getDataSource(String group) {
 		return new SimpleDataSource(group);
@@ -47,7 +47,7 @@ synchronized public static SimpleDataSource getDataSource(String group) {
 	/**
 	 * 获得一个数据源，无分组
 	 *
-	 * @return {@link SimpleDataSource}
+	 * @return SimpleDataSource
 	 */
 	synchronized public static SimpleDataSource getDataSource() {
 		return new SimpleDataSource();

File: hutool-http/src/main/java/cn/hutool/http/HttpDownloader.java
Patch:
@@ -63,6 +63,7 @@ public static long downloadFile(String url, File targetFileOrDir, int timeout, S
 	 * @param tempFileSuffix  临时文件后缀，默认".temp"
 	 * @param timeout         超时，单位毫秒，-1表示默认超时
 	 * @param streamProgress  进度条
+	 * @return 下载大小
 	 * @since 5.7.12
 	 */
 	public long downloadFile(String url, File targetFileOrDir, String tempFileSuffix, int timeout, StreamProgress streamProgress) {

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -419,7 +419,7 @@ public String getFragment() {
 	 * @return 标识符，例如#后边的部分
 	 */
 	public String getFragmentEncoded() {
-		return URLUtil.encodeAll(this.fragment, this.charset);
+		return URLUtil.encodeFragment(this.fragment, this.charset);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -156,7 +156,9 @@ public static UrlBuilder of(URL url, Charset charset) {
 	 * @return UrlBuilder
 	 */
 	public static UrlBuilder of(String scheme, String host, int port, String path, String query, String fragment, Charset charset) {
-		return of(scheme, host, port, UrlPath.of(path, charset), UrlQuery.of(query, charset, false), fragment, charset);
+		return of(scheme, host, port,
+				UrlPath.of(path, charset),
+				UrlQuery.of(query, charset, false), fragment, charset);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/StrSplitter.java
Patch:
@@ -16,7 +16,7 @@
  * @author Looly
  * @since 5.7.0
  */
-public class StrSplitter{
+public class StrSplitter {
 
 	//---------------------------------------------------------------------------------------------- Split by char
 

File: hutool-core/src/main/java/cn/hutool/core/text/StrSplitter.java
Patch:
@@ -16,7 +16,7 @@
  * @author Looly
  * @since 5.7.0
  */
-public class StrSplitter {
+public class StrSplitter{
 
 	//---------------------------------------------------------------------------------------------- Split by char
 

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -289,7 +289,7 @@ public Img scale(int width, int height) {
 	 *
 	 * @param width      缩放后的宽度
 	 * @param height     缩放后的高度
-	 * @param fixedColor 比例不对时补充的颜色，不补充为<code>null</code>
+	 * @param fixedColor 比例不对时补充的颜色，不补充为{@code null}
 	 * @return this
 	 */
 	public Img scale(int width, int height, Color fixedColor) {

File: hutool-core/src/main/java/cn/hutool/core/map/FuncKeyMap.java
Patch:
@@ -14,7 +14,7 @@
 public class FuncKeyMap<K, V> extends CustomKeyMap<K, V> {
 	private static final long serialVersionUID = 1L;
 
-	private Function<Object, K> keyFunc;
+	private final Function<Object, K> keyFunc;
 
 	// ------------------------------------------------------------------------- Constructor start
 
@@ -26,11 +26,12 @@ public class FuncKeyMap<K, V> extends CustomKeyMap<K, V> {
 	 */
 	public FuncKeyMap(Map<K, V> m, Function<Object, K> keyFunc) {
 		super(m);
+		this.keyFunc = keyFunc;
 	}
 	// ------------------------------------------------------------------------- Constructor end
 
 	/**
-	 * 将Key转为驼峰风格，如果key为字符串的话
+	 * 根据函数自定义键
 	 *
 	 * @param key KEY
 	 * @return 驼峰Key

File: hutool-core/src/main/java/cn/hutool/core/net/multipart/UploadFile.java
Patch:
@@ -231,9 +231,6 @@ protected boolean processStream(MultipartRequestInputStream input) throws IOExce
 		} finally {
 			IoUtil.close(out);
 		}
-		// if (getFileName().length() == 0 && size == 0) {
-		// size = -1;
-		// }
 		return true;
 	}
 

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -358,6 +358,7 @@ public static String toJsonStr(Object obj) {
 	 * 转换为JSON字符串
 	 *
 	 * @param obj 被转为JSON的对象
+	 * @param jsonConfig JSON配置
 	 * @return JSON字符串
 	 * @since 5.7.12
 	 */

File: hutool-db/src/test/java/cn/hutool/db/sql/ConditionTest.java
Patch:
@@ -3,6 +3,8 @@
 import org.junit.Assert;
 import org.junit.Test;
 
+import java.math.BigDecimal;
+
 public class ConditionTest {
 
 	@Test
@@ -58,7 +60,7 @@ public void parseTest(){
 		final Condition age = Condition.parse("age", "< 10");
 		Assert.assertEquals("age < ?", age.toString());
 		// issue I38LTM
-		Assert.assertSame(Long.class, age.getValue().getClass());
+		Assert.assertSame(BigDecimal.class, age.getValue().getClass());
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertTest.java
Patch:
@@ -147,7 +147,7 @@ public void toCharTest() {
 	public void toNumberTest() {
 		Object a = "12.45";
 		Number number = Convert.toNumber(a);
-		Assert.assertEquals(12.45D, number);
+		Assert.assertEquals(12.45D, number.doubleValue(), 2);
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -283,7 +283,7 @@ public void parseNumberTest() {
 		Assert.assertEquals(1482, v1);
 
 		Number v2 = NumberUtil.parseNumber("1,482.00D");
-		Assert.assertEquals(1482L, v2);
+		Assert.assertEquals(1482L, v2.longValue());
 	}
 
 	@Test

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/SymmetricTest.java
Patch:
@@ -168,7 +168,7 @@ public void aesZeroPaddingTest2() {
 	public void aesPkcs7PaddingTest() {
 		String content = RandomUtil.randomString(RandomUtil.randomInt(200));
 		AES aes = new AES("CBC", "PKCS7Padding",
-				"0123456789ABHAEQ".getBytes(),
+				RandomUtil.randomBytes(32),
 				"DYgjCEIMVrj2W9xN".getBytes());
 
 		// 加密为16进制表示

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileWriter.java
Patch:
@@ -200,7 +200,7 @@ public <T> File writeLines(Collection<T> list, LineSeparator lineSeparator, bool
 		try (PrintWriter writer = getPrintWriter(isAppend)){
 			for (T t : list) {
 				if (null != t) {
-					writer.print(t.toString());
+					writer.print(t);
 					printNewLine(writer, lineSeparator);
 					writer.flush();
 				}

File: hutool-extra/src/main/java/cn/hutool/extra/mail/GlobalMailAccount.java
Patch:
@@ -11,8 +11,6 @@
 public enum GlobalMailAccount {
 	INSTANCE;
 
-	private static final String[] MAIL_SETTING_PATHS = new String[]{"config/mail.setting", "config/mailAccount.setting", "mail.setting"};
-
 	private final MailAccount mailAccount;
 
 	/**
@@ -37,7 +35,7 @@ public MailAccount getAccount() {
 	 * @return MailAccount
 	 */
 	private MailAccount createDefaultAccount() {
-		for (String mailSettingPath : MAIL_SETTING_PATHS) {
+		for (String mailSettingPath : MailAccount.MAIL_SETTING_PATHS) {
 			try {
 				return new MailAccount(mailSettingPath);
 			} catch (IORuntimeException ignore) {

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.text.StrJoiner;
 import cn.hutool.core.util.ArrayUtil;
+import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.core.util.TypeUtil;
 import cn.hutool.json.serialize.GlobalSerializeMapping;
@@ -91,7 +92,7 @@ public JSONArray(JSONConfig config) {
 	 */
 	public JSONArray(int initialCapacity, JSONConfig config) {
 		this.rawList = new ArrayList<>(initialCapacity);
-		this.config = config;
+		this.config = ObjectUtil.defaultIfNull(config, JSONConfig.create());
 	}
 
 	/**

File: hutool-json/src/main/java/cn/hutool/json/JSONConfig.java
Patch:
@@ -12,7 +12,7 @@ public class JSONConfig implements Serializable {
 	private static final long serialVersionUID = 119730355204738278L;
 
 	/**
-	 * 是否有序，顺序按照加入顺序排序
+	 * 是否有序，顺序按照加入顺序排序，只针对JSONObject有效
 	 */
 	private boolean order;
 	/**
@@ -51,7 +51,7 @@ public static JSONConfig create() {
 	}
 
 	/**
-	 * 是否有序，顺序按照加入顺序排序
+	 * 是否有序，顺序按照加入顺序排序，只针对JSONObject有效
 	 *
 	 * @return 是否有序
 	 */
@@ -60,7 +60,7 @@ public boolean isOrder() {
 	}
 
 	/**
-	 * 设置是否有序，顺序按照加入顺序排序
+	 * 设置是否有序，顺序按照加入顺序排序，只针对JSONObject有效
 	 *
 	 * @param order 是否有序
 	 * @return this

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -110,7 +110,7 @@ public JSONObject(JSONConfig config) {
 	 * 构造
 	 *
 	 * @param capacity 初始大小
-	 * @param config   JSON配置项，null表示默认配置
+	 * @param config   JSON配置项，{@code null}则使用默认配置
 	 * @since 4.1.19
 	 */
 	public JSONObject(int capacity, JSONConfig config) {
@@ -192,7 +192,7 @@ public JSONObject(Object source, boolean ignoreNullValue, boolean isOrder) {
 	 * 例如：如果JavaBean对象中有个方法getName()，值为"张三"，获得的键值对为：name: "张三"
 	 *
 	 * @param source JavaBean或者Map对象或者String
-	 * @param config JSON配置文件
+	 * @param config JSON配置文件，{@code null}则使用默认配置
 	 * @since 4.2.2
 	 */
 	public JSONObject(Object source, JSONConfig config) {

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/SymmetricTest.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.RandomUtil;
 import cn.hutool.core.util.StrUtil;
+import cn.hutool.crypto.CipherMode;
 import cn.hutool.crypto.KeyUtil;
 import cn.hutool.crypto.Mode;
 import cn.hutool.crypto.Padding;
@@ -128,7 +129,9 @@ public void aesUpdateTest() {
 		AES aes = new AES(Mode.CBC, Padding.PKCS5Padding, "0123456789ABHAEQ".getBytes(), "DYgjCEIMVrj2W9xN".getBytes());
 
 		// 加密为16进制表示
+		aes.setMode(CipherMode.encrypt);
 		String randomData = aes.updateHex(content.getBytes(StandardCharsets.UTF_8));
+		aes.setMode(CipherMode.encrypt);
 		String randomData2 = aes.updateHex(content.getBytes(StandardCharsets.UTF_8));
 		Assert.assertEquals(randomData2, randomData);
 		Assert.assertEquals(randomData, "cd0e3a249eaf0ed80c330338508898c4");

File: hutool-core/src/main/java/cn/hutool/core/date/DatePattern.java
Patch:
@@ -145,7 +145,7 @@ public class DatePattern {
 	/**
 	 * 标准日期格式 {@link FastDateFormat}：yyyy年MM月dd日
 	 */
-	public static final DateTimeFormatter CHINESE_DATE_FORMATTER = createFormatter(ISO8601_PATTERN);
+	public static final DateTimeFormatter CHINESE_DATE_FORMATTER = createFormatter(CHINESE_DATE_PATTERN);
 
 	/**
 	 * 标准日期格式：yyyy年MM月dd日 HH时mm分ss秒

File: hutool-core/src/main/java/cn/hutool/core/collection/Partition.java
Patch:
@@ -26,7 +26,7 @@ public class Partition<T> extends AbstractList<List<T>> {
 	 */
 	public Partition(List<T> list, int size) {
 		this.list = list;
-		this.size = size;
+		this.size = Math.min(size, list.size());
 	}
 
 	@Override

File: hutool-setting/src/main/java/cn/hutool/setting/dialect/package-info.java
Patch:
@@ -1,7 +1,7 @@
 /**
- * 配置文件实现分装，例如Properties封装Props
- * 
+ * 配置文件实现封装，例如Properties封装Props
+ *
  * @author looly
  *
  */
-package cn.hutool.setting.dialect;
\ No newline at end of file
+package cn.hutool.setting.dialect;

File: hutool-setting/src/main/java/cn/hutool/setting/profile/package-info.java
Patch:
@@ -1,7 +1,7 @@
 /**
- * 配置文件实现分装，例如Properties封装Props
- * 
+ * 配置环境封装，例如Profile可以自定义不同环境下的配置文件位置
+ *
  * @author looly
  *
  */
-package cn.hutool.setting.profile;
\ No newline at end of file
+package cn.hutool.setting.profile;

File: hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java
Patch:
@@ -397,7 +397,7 @@ public Scheduler start() {
 		try {
 			checkStarted();
 
-			if(null != this.threadExecutor){
+			if(null == this.threadExecutor){
 				// 无界线程池，确保每一个需要执行的线程都可以及时运行，同时复用已有线程避免线程重复创建
 				this.threadExecutor = ExecutorBuilder.create().useSynchronousQueue().setThreadFactory(//
 						ThreadFactoryBuilder.create().setNamePrefix("hutool-cron-").setDaemon(this.daemon).build()//

File: hutool-cron/src/test/java/cn/hutool/cron/demo/CronTest.java
Patch:
@@ -38,7 +38,7 @@ public void cronTest() {
 		ThreadUtil.waitForDie();
 		CronUtil.stop();
 	}
-	
+
 	@Test
 	@Ignore
 	public void cronWithListenerTest() {

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/AESTest.java
Patch:
@@ -16,7 +16,7 @@
 public class AESTest {
 
 	@Test
-	public void encryptTest() {
+	public void encryptCBCTest() {
 		// 构建
 		AES aes = new AES(Mode.CBC, Padding.PKCS5Padding,
 				"1234567890123456".getBytes(), "1234567890123456".getBytes());
@@ -25,7 +25,7 @@ public void encryptTest() {
 	}
 
 	@Test
-	public void encryptTest2() {
+	public void encryptCTSTest() {
 		String content = "test中文";
 		AES aes = new AES(Mode.CTS, Padding.PKCS5Padding,
 				"0CoJUm6Qyw8W8jue".getBytes(), "0102030405060708".getBytes());

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -107,8 +107,8 @@ public Excel03SaxReader(RowHandler rowHandler) {
 	// ------------------------------------------------------------------------------ Read start
 	@Override
 	public Excel03SaxReader read(File file, String idOrRidOrSheetName) throws POIException {
-		try {
-			return read(new POIFSFileSystem(file), idOrRidOrSheetName);
+		try (POIFSFileSystem poifsFileSystem = new POIFSFileSystem(file, true)) {
+			return read(poifsFileSystem, idOrRidOrSheetName);
 		} catch (IOException e) {
 			throw new POIException(e);
 		}

File: hutool-json/src/main/java/cn/hutool/json/JSONConfig.java
Patch:
@@ -175,6 +175,7 @@ public JSONConfig setTransientSupport(boolean transientSupport) {
 
 	/**
 	 * 是否去除末尾多余0，例如如果为true,5.0返回5
+	 *
 	 * @return 是否去除末尾多余0，例如如果为true,5.0返回5
 	 * @since 5.6.2
 	 */
@@ -184,6 +185,7 @@ public boolean isStripTrailingZeros() {
 
 	/**
 	 * 设置是否去除末尾多余0，例如如果为true,5.0返回5
+	 *
 	 * @param stripTrailingZeros 是否去除末尾多余0，例如如果为true,5.0返回5
 	 * @return this
 	 * @since 5.6.2

File: hutool-json/src/main/java/cn/hutool/json/JSONConverter.java
Patch:
@@ -56,7 +56,8 @@ protected static <T> List<T> toList(JSONArray jsonArray, Class<T> elementType) {
 
 	/**
 	 * JSON递归转换<br>
-	 * 首先尝试JDK类型转换，如果失败尝试JSON转Bean
+	 * 首先尝试JDK类型转换，如果失败尝试JSON转Bean<br>
+	 * 如果遇到{@link JSONBeanParser}，则调用其{@link JSONBeanParser#parse(Object)}方法转换。
 	 *
 	 * @param <T> 转换后的对象类型
 	 * @param targetType 目标类型
@@ -98,6 +99,7 @@ protected static <T> T jsonConvert(Type targetType, Object value, boolean ignore
 	 * @param ignoreError 是否忽略转换错误
 	 * @return 目标类型的值
 	 * @throws ConvertException 转换失败
+	 * @since 5.7.10
 	 */
 	protected static <T> T jsonToBean(Type targetType, Object value, boolean ignoreError) throws ConvertException {
 		if (JSONUtil.isNull(value)) {

File: hutool-json/src/main/java/cn/hutool/json/JSONSupport.java
Patch:
@@ -26,7 +26,7 @@ public void parse(String jsonString) {
 	 */
 	@Override
 	public void parse(JSON json) {
-		final JSONSupport support = json.toBean(this.getClass());
+		final JSONSupport support = JSONConverter.jsonToBean(getClass(), json, false);
 		BeanUtil.copyProperties(support, this);
 	}
 

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java
Patch:
@@ -23,7 +23,7 @@
 public class ExcelUtil {
 
 	/**
-	 * xlx的ContentType
+	 * xls的ContentType
 	 */
 	public static final String XLS_CONTENT_TYPE = "application/vnd.ms-excel";
 

File: hutool-core/src/main/java/cn/hutool/core/io/file/PathUtil.java
Patch:
@@ -644,7 +644,7 @@ public static Path mkParentDirs(Path path) {
 	}
 
 	/**
-	 * 删除文件，不追踪软链
+	 * 删除文件或空目录，不追踪软链
 	 *
 	 * @param path 文件对象
 	 * @throws IOException IO异常

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -216,7 +216,6 @@ public static boolean isNull(Object obj) {
 	 * @return 是否为null
 	 */
 	public static boolean isNotNull(Object obj) {
-		//noinspection ConstantConditions
 		return false == isNull(obj);
 	}
 

File: hutool-jwt/src/main/java/cn/hutool/jwt/signers/AlgorithmUtil.java
Patch:
@@ -71,6 +71,6 @@ private static String getAlgorithmById(String id) {
 	 * @return JWT算法ID
 	 */
 	private static String getIdByAlgorithm(String algorithm) {
-		return map.getInverse().get(algorithm);
+		return map.getKey(algorithm);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvReadConfig.java
Patch:
@@ -8,7 +8,7 @@
  * @author looly
  *
  */
-public class CsvReadConfig extends CsvConfig implements Serializable {
+public class CsvReadConfig extends CsvConfig<CsvReadConfig> implements Serializable {
 	private static final long serialVersionUID = 5396453565371560052L;
 
 	/** 是否首行做为标题行，默认false */

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvWriteConfig.java
Patch:
@@ -9,7 +9,7 @@
  *
  * @author looly
  */
-public class CsvWriteConfig extends CsvConfig implements Serializable {
+public class CsvWriteConfig extends CsvConfig<CsvWriteConfig> implements Serializable {
 	private static final long serialVersionUID = 5396453565371560052L;
 
 	/**

File: hutool-cron/src/main/java/cn/hutool/cron/listener/TaskListenerManager.java
Patch:
@@ -79,8 +79,8 @@ public void notifyTaskFailed(TaskExecutor executor, Throwable exception) {
 		synchronized (listeners) {
 			int size = listeners.size();
 			if(size > 0){
-				for (TaskListener listenerl : listeners) {
-					listenerl.onFailed(executor, exception);
+				for (TaskListener listener : listeners) {
+					listener.onFailed(executor, exception);
 				}
 			}else{
 				StaticLog.error(exception, exception.getMessage());

File: hutool-cron/src/main/java/cn/hutool/cron/listener/TaskListenerManager.java
Patch:
@@ -79,8 +79,8 @@ public void notifyTaskFailed(TaskExecutor executor, Throwable exception) {
 		synchronized (listeners) {
 			int size = listeners.size();
 			if(size > 0){
-				for (TaskListener listenerl : listeners) {
-					listenerl.onFailed(executor, exception);
+				for (TaskListener listener : listeners) {
+					listener.onFailed(executor, exception);
 				}
 			}else{
 				StaticLog.error(exception, exception.getMessage());

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -22,6 +22,9 @@ public class FastByteArrayOutputStream extends OutputStream {
 
 	private final FastByteBuffer buffer;
 
+	/**
+	 * 构造
+	 */
 	public FastByteArrayOutputStream() {
 		this(1024);
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -102,7 +102,7 @@ public static long copy(Reader reader, Writer writer, int bufferSize, StreamProg
 	 * @return 传输的byte数
 	 * @throws IORuntimeException IO异常
 	 */
-	public static long copy(Reader reader, Writer writer, int bufferSize, int count, StreamProgress streamProgress) throws IORuntimeException {
+	public static long copy(Reader reader, Writer writer, int bufferSize, long count, StreamProgress streamProgress) throws IORuntimeException {
 		return new ReaderWriterCopier(bufferSize, count, streamProgress).copy(reader, writer);
 	}
 
@@ -157,7 +157,7 @@ public static long copy(InputStream in, OutputStream out, int bufferSize, Stream
 	 * @throws IORuntimeException IO异常
 	 * @since 5.7.8
 	 */
-	public static long copy(InputStream in, OutputStream out, int bufferSize, int count, StreamProgress streamProgress) throws IORuntimeException {
+	public static long copy(InputStream in, OutputStream out, int bufferSize, long count, StreamProgress streamProgress) throws IORuntimeException {
 		return new StreamCopier(bufferSize, count, streamProgress).copy(in, out);
 	}
 

File: hutool-extra/src/main/java/cn/hutool/extra/pinyin/engine/tinypinyin/TinyPinyinEngine.java
Patch:
@@ -30,6 +30,7 @@ public class TinyPinyinEngine implements PinyinEngine {
 	 * 构造
 	 */
 	public TinyPinyinEngine(){
+		this(null);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -97,6 +97,7 @@ public static long copy(Reader reader, Writer writer, int bufferSize, StreamProg
 	 * @param reader         Reader
 	 * @param writer         Writer
 	 * @param bufferSize     缓存大小
+	 * @param count          最大长度
 	 * @param streamProgress 进度处理器
 	 * @return 传输的byte数
 	 * @throws IORuntimeException IO异常

File: hutool-core/src/main/java/cn/hutool/core/io/NioUtil.java
Patch:
@@ -63,6 +63,7 @@ public static long copyByNIO(InputStream in, OutputStream out, int bufferSize, S
 	 * @param in             输入流
 	 * @param out            输出流
 	 * @param bufferSize     缓存大小
+	 * @param count          最大长度
 	 * @param streamProgress 进度条
 	 * @return 传输的byte数
 	 * @throws IORuntimeException IO异常

File: hutool-core/src/main/java/cn/hutool/core/io/copy/StreamCopier.java
Patch:
@@ -74,6 +74,7 @@ public long copy(InputStream source, OutputStream target) {
 		if (null != progress) {
 			progress.finish();
 		}
+
 		return size;
 	}
 

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -17,7 +17,6 @@
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.http.body.MultipartBody;
 import cn.hutool.http.cookie.GlobalCookieManager;
-import cn.hutool.http.ssl.SSLSocketFactoryBuilder;
 
 import javax.net.ssl.HostnameVerifier;
 import javax.net.ssl.SSLSocketFactory;
@@ -883,7 +882,7 @@ public HttpRequest setSSLSocketFactory(SSLSocketFactory ssf) {
 	 *
 	 * @param protocol 协议
 	 * @return this
-	 * @see SSLSocketFactoryBuilder
+	 * @see SSLUtil#createSSLContext(String)
 	 * @see #setSSLSocketFactory(SSLSocketFactory)
 	 */
 	public HttpRequest setSSLProtocol(String protocol) {

File: hutool-http/src/main/java/cn/hutool/http/HttpResponse.java
Patch:
@@ -467,7 +467,7 @@ private void readBody(InputStream in) throws IORuntimeException {
 		final FastByteArrayOutputStream out = contentLength > 0 ?
 				new FastByteArrayOutputStream(contentLength) : new FastByteArrayOutputStream();
 		try {
-			IoUtil.copy(in, out, -1, -1, null);
+			IoUtil.copy(in, out, -1, contentLength, null);
 		} catch (IORuntimeException e) {
 			//noinspection StatementWithEmptyBody
 			if (e.getCause() instanceof EOFException || StrUtil.containsIgnoreCase(e.getMessage(), "Premature EOF")) {

File: hutool-core/src/main/java/cn/hutool/core/io/copy/IoCopier.java
Patch:
@@ -52,6 +52,6 @@ public IoCopier(int bufferSize, long count, StreamProgress progress) {
 	 * @return 缓存大小
 	 */
 	protected int bufferSize(long count) {
-		return Math.min(this.bufferSize, (int)count);
+		return (int)Math.min(this.bufferSize, count);
 	}
 }

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/otp/HOTP.java
Patch:
@@ -6,9 +6,11 @@
 import cn.hutool.crypto.digest.HmacAlgorithm;
 
 /**
- * <p>HMAC-based one-time passwords (HOTP) 一次性密码生成器，
+ * <p>HMAC-based one-time passwords (HOTP) 基于HMAC算法一次性密码生成器，
  * 规范见：<a href="https://tools.ietf.org/html/rfc4226">RFC&nbsp;4226</a>.</p>
  *
+ * <p>基于事件同步，通过某一特定的事件次序及相同的种子值作为输入，通过HASH算法运算出一致的密码。</p>
+ *
  * <p>参考：https://github.com/jchambers/java-otp</p>
  *
  * @author Looly

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -3608,7 +3608,7 @@ public static String replace(CharSequence str, int startInclude, int endExclude,
 	 * replaceFun可以通过{@link Matcher}提取出匹配到的内容的不同部分，然后经过重新处理、组装变成新的内容放回原位。
 	 *
 	 * <pre class="code">
-	 *     replaceAll(this.content, "(\\d+)", parameters -&gt; "-" + parameters.group(1) + "-")
+	 *     replace(this.content, "(\\d+)", parameters -&gt; "-" + parameters.group(1) + "-")
 	 *     // 结果为："ZZZaaabbbccc中文-1234-"
 	 * </pre>
 	 *

File: hutool-core/src/test/java/cn/hutool/core/util/IdUtilTest.java
Patch:
@@ -68,8 +68,8 @@ public void objectIdTest() {
 	}
 
 	@Test
-	public void createSnowflakeTest() {
-		Snowflake snowflake = IdUtil.createSnowflake(1, 1);
+	public void getSnowflakeTest() {
+		Snowflake snowflake = IdUtil.getSnowflake(1, 1);
 		long id = snowflake.nextId();
 		Assert.assertTrue(id > 0);
 	}
@@ -78,7 +78,7 @@ public void createSnowflakeTest() {
 	@Ignore
 	public void snowflakeBenchTest() {
 		final Set<Long> set = new ConcurrentHashSet<>();
-		final Snowflake snowflake = IdUtil.createSnowflake(1, 1);
+		final Snowflake snowflake = IdUtil.getSnowflake(1, 1);
 
 		//线程数
 		int threadCount = 100;

File: hutool-core/src/main/java/cn/hutool/core/img/gif/GifDecoder.java
Patch:
@@ -38,7 +38,6 @@
  * 来自：https://github.com/rtyley/animated-gif-lib-for-java
  *
  * @author Kevin Weiner, FM Software; LZW decoder adapted from John Cristy's ImageMagick.
- * @version 1.03 November 2003
  */
 public class GifDecoder {
 

File: hutool-core/src/main/java/cn/hutool/core/compress/ZipReader.java
Patch:
@@ -53,6 +53,7 @@ public static ZipReader of(InputStream in, Charset charset) {
 	 * 构造
 	 *
 	 * @param zipFile 读取的的Zip文件
+	 * @param charset 编码
 	 */
 	public ZipReader(File zipFile, Charset charset) {
 		this.zipFile = ZipUtil.toZipFile(zipFile, charset);
@@ -71,6 +72,7 @@ public ZipReader(ZipFile zipFile) {
 	 * 构造
 	 *
 	 * @param in 读取的的Zip文件流
+	 * @param charset 编码
 	 */
 	public ZipReader(InputStream in, Charset charset) {
 		this.in = new ZipInputStream(in, charset);
@@ -139,6 +141,7 @@ public File readTo(File outFile) throws IORuntimeException {
 	 *
 	 * @param consumer {@link ZipEntry}处理器
 	 * @throws IORuntimeException IO异常
+	 * @return this
 	 */
 	public ZipReader read(Consumer<ZipEntry> consumer) throws IORuntimeException {
 		if (null != this.zipFile) {

File: hutool-core/src/main/java/cn/hutool/core/map/MapProxy.java
Patch:
@@ -155,6 +155,7 @@ public Object invoke(Object proxy, Method method, Object[] args) {
 				final String fieldName = StrUtil.removePreAndLowerFirst(methodName, 3);
 				if (StrUtil.isNotBlank(fieldName)) {
 					this.put(fieldName, args[0]);
+					return proxy;
 				}
 			} else if ("equals".equals(methodName)) {
 				return this.equals(args[0]);

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -357,7 +357,7 @@ public static String read(InputStream in, String charsetName) throws IORuntimeEx
 	}
 
 	/**
-	 * 从流中读取内容，读取完毕后并不关闭流
+	 * 从流中读取内容，读取完毕后关闭流
 	 *
 	 * @param in      输入流，读取完毕后并不关闭流
 	 * @param charset 字符集
@@ -369,7 +369,7 @@ public static String read(InputStream in, Charset charset) throws IORuntimeExcep
 	}
 
 	/**
-	 * 从流中读取内容，读到输出流中，读取完毕后并不关闭流
+	 * 从流中读取内容，读到输出流中，读取完毕后关闭流
 	 *
 	 * @param in 输入流
 	 * @return 输出流
@@ -380,7 +380,7 @@ public static FastByteArrayOutputStream read(InputStream in) throws IORuntimeExc
 	}
 
 	/**
-	 * 从流中读取内容，读到输出流中，读取完毕后并不关闭流
+	 * 从流中读取内容，读到输出流中，读取完毕后可选是否关闭流
 	 *
 	 * @param in      输入流
 	 * @param isClose 读取完毕后是否关闭流

File: hutool-core/src/main/java/cn/hutool/core/map/MapProxy.java
Patch:
@@ -155,6 +155,7 @@ public Object invoke(Object proxy, Method method, Object[] args) {
 				final String fieldName = StrUtil.removePreAndLowerFirst(methodName, 3);
 				if (StrUtil.isNotBlank(fieldName)) {
 					this.put(fieldName, args[0]);
+					return proxy;
 				}
 			} else if ("equals".equals(methodName)) {
 				return this.equals(args[0]);

File: hutool-core/src/main/java/cn/hutool/core/io/file/visitor/MoveVisitor.java
Patch:
@@ -30,6 +30,7 @@ public class MoveVisitor extends SimpleFileVisitor<Path> {
 	 *
 	 * @param source 源Path
 	 * @param target 目标Path
+	 * @param copyOptions 拷贝（移动）选项
 	 */
 	public MoveVisitor(Path source, Path target, CopyOption... copyOptions) {
 		if(PathUtil.exists(target, false) && false == PathUtil.isDirectory(target)){

File: hutool-core/src/main/java/cn/hutool/core/map/multi/AbsCollValueMap.java
Patch:
@@ -22,7 +22,7 @@ public abstract class AbsCollValueMap<K, V, C extends Collection<V>> extends Map
 	/**
 	 * 默认集合初始大小
 	 */
-	protected static final int DEFAULT_COLLCTION_INITIAL_CAPACITY = 3;
+	protected static final int DEFAULT_COLLECTION_INITIAL_CAPACITY = 3;
 
 	// ------------------------------------------------------------------------- Constructor start
 

File: hutool-core/src/main/java/cn/hutool/core/map/multi/ListValueMap.java
Patch:
@@ -68,6 +68,6 @@ public ListValueMap(int initialCapacity, float loadFactor) {
 
 	@Override
 	protected List<V> createCollection() {
-		return new ArrayList<>(DEFAULT_COLLCTION_INITIAL_CAPACITY);
+		return new ArrayList<>(DEFAULT_COLLECTION_INITIAL_CAPACITY);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/map/multi/SetValueMap.java
Patch:
@@ -68,6 +68,6 @@ public SetValueMap(int initialCapacity, float loadFactor) {
 
 	@Override
 	protected Set<V> createCollection() {
-		return new LinkedHashSet<>(DEFAULT_COLLCTION_INITIAL_CAPACITY);
+		return new LinkedHashSet<>(DEFAULT_COLLECTION_INITIAL_CAPACITY);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/stream/SimpleCollector.java
Patch:
@@ -39,7 +39,7 @@ public class SimpleCollector<T, A, R> implements Collector<T, A, R> {
 	 *     只有在并行流且收集器不具备此特性的情况下，combiner()返回的lambda表达式才会执行（中间结果容器只有一个就无需合并）。
 	 *     设置此特性时意味着多个线程可以对同一个结果容器调用，因此结果容器必须是线程安全的。</li>
 	 *     <li>UNORDERED：      表示流中的元素无序</li>
-	 *     <li>IDENTITY_FINISH：表示中间结果容器类型与最终结果类型一致。设置此特性时finiser()方法不会被调用</li>
+	 *     <li>IDENTITY_FINISH：表示中间结果容器类型与最终结果类型一致。设置此特性时finisher()方法不会被调用</li>
 	 * </ul>
 	 */
 	private final Set<Characteristics> characteristics;

File: hutool-core/src/main/java/cn/hutool/core/map/multi/AbsCollValueMap.java
Patch:
@@ -22,7 +22,7 @@ public abstract class AbsCollValueMap<K, V, C extends Collection<V>> extends Map
 	/**
 	 * 默认集合初始大小
 	 */
-	protected static final int DEFAULT_COLLCTION_INITIAL_CAPACITY = 3;
+	protected static final int DEFAULT_COLLECTION_INITIAL_CAPACITY = 3;
 
 	// ------------------------------------------------------------------------- Constructor start
 

File: hutool-core/src/main/java/cn/hutool/core/map/multi/ListValueMap.java
Patch:
@@ -68,6 +68,6 @@ public ListValueMap(int initialCapacity, float loadFactor) {
 
 	@Override
 	protected List<V> createCollection() {
-		return new ArrayList<>(DEFAULT_COLLCTION_INITIAL_CAPACITY);
+		return new ArrayList<>(DEFAULT_COLLECTION_INITIAL_CAPACITY);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/map/multi/SetValueMap.java
Patch:
@@ -68,6 +68,6 @@ public SetValueMap(int initialCapacity, float loadFactor) {
 
 	@Override
 	protected Set<V> createCollection() {
-		return new LinkedHashSet<>(DEFAULT_COLLCTION_INITIAL_CAPACITY);
+		return new LinkedHashSet<>(DEFAULT_COLLECTION_INITIAL_CAPACITY);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/stream/SimpleCollector.java
Patch:
@@ -39,7 +39,7 @@ public class SimpleCollector<T, A, R> implements Collector<T, A, R> {
 	 *     只有在并行流且收集器不具备此特性的情况下，combiner()返回的lambda表达式才会执行（中间结果容器只有一个就无需合并）。
 	 *     设置此特性时意味着多个线程可以对同一个结果容器调用，因此结果容器必须是线程安全的。</li>
 	 *     <li>UNORDERED：      表示流中的元素无序</li>
-	 *     <li>IDENTITY_FINISH：表示中间结果容器类型与最终结果类型一致。设置此特性时finiser()方法不会被调用</li>
+	 *     <li>IDENTITY_FINISH：表示中间结果容器类型与最终结果类型一致。设置此特性时finisher()方法不会被调用</li>
 	 * </ul>
 	 */
 	private final Set<Characteristics> characteristics;

File: hutool-core/src/main/java/cn/hutool/core/lang/RegexPool.java
Patch:
@@ -76,7 +76,8 @@ public interface RegexPool {
 	 */
 	String MOBILE_MO = "(?:0|853|\\+853)?(?:|-)6\\d{7}";
 	/**
-	 * 座机号码
+	 * 座机号码<br>
+	 * pr#387@Gitee
 	 */
 	String TEL = "(010|02\\d|0[3-9]\\d{2})-?(\\d{6,8})";
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/PhoneUtil.java
Patch:
@@ -167,7 +167,7 @@ public static CharSequence subAfter(CharSequence phone) {
 	 *
 	 * @param value 完整的固话号码
 	 * @return 固话号码的区号部分
-	 * @since 5.7.6
+	 * @since 5.7.7
 	 */
 	public static CharSequence subTelBefore(CharSequence value)
 	{
@@ -179,7 +179,7 @@ public static CharSequence subTelBefore(CharSequence value)
 	 *
 	 * @param value 完整的固话号码
 	 * @return 固话号码的号码部分
-	 * @since 5.7.6
+	 * @since 5.7.7
 	 */
 	public static CharSequence subTelAfter(CharSequence value)
 	{

File: hutool-jwt/src/main/java/cn/hutool/jwt/JWTUtil.java
Patch:
@@ -69,7 +69,7 @@ public static String createToken(Map<String, Object> headers, Map<String, Object
 	 * @param token token
 	 * @return {@link JWT}
 	 */
-	public JWT parseToken(String token) {
+	public static JWT parseToken(String token) {
 		return JWT.of(token);
 	}
 
@@ -80,7 +80,7 @@ public JWT parseToken(String token) {
 	 * @param key   HS256(HmacSHA256)密钥
 	 * @return 是否有效
 	 */
-	public boolean verify(String token, byte[] key) {
+	public static boolean verify(String token, byte[] key) {
 		return JWT.of(token).setKey(key).verify();
 	}
 
@@ -91,7 +91,7 @@ public boolean verify(String token, byte[] key) {
 	 * @param signer 签名器
 	 * @return 是否有效
 	 */
-	public boolean verify(String token, JWTSigner signer) {
+	public static boolean verify(String token, JWTSigner signer) {
 		return JWT.of(token).verify(signer);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/net/SSLUtil.java
Patch:
@@ -45,5 +45,4 @@ public static SSLContext createSSLContext(String protocol, KeyManager[] keyManag
 				.setKeyManagers(keyManagers)
 				.setTrustManagers(trustManagers).buildQuietly();
 	}
-
 }

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/asymmetric/RSATest.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.crypto.test.asymmetric;
 
 import cn.hutool.core.codec.Base64;
+import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.HexUtil;
@@ -11,6 +12,8 @@
 import cn.hutool.crypto.asymmetric.AsymmetricAlgorithm;
 import cn.hutool.crypto.asymmetric.KeyType;
 import cn.hutool.crypto.asymmetric.RSA;
+import cn.hutool.crypto.asymmetric.Sign;
+import cn.hutool.crypto.asymmetric.SignAlgorithm;
 import org.junit.Assert;
 import org.junit.Test;
 

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SM2.java
Patch:
@@ -35,7 +35,6 @@
  *     <li>摘要签名算法：SM3</li>
  *     <li>对称加密：SM4</li>
  * </ol>
- * </p>
  *
  * @author looly
  * @since 4.3.2

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/SM3.java
Patch:
@@ -10,7 +10,6 @@
  *     <li>摘要签名算法：SM3</li>
  *     <li>对称加密：SM4</li>
  * </ol>
- * </p>
  *
  * @author looly
  * @since 4.6.8

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SM4.java
Patch:
@@ -19,7 +19,6 @@
  *     <li>摘要签名算法：SM3</li>
  *     <li>对称加密：SM4</li>
  * </ol>
- * </p>
  *
  * @author Looly
  * @since 4.6.8

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java
Patch:
@@ -62,8 +62,7 @@ public Object value(String key, Type valueType) {
 			return null;
 		}
 
-		final Object value = map.get(key1);
-		return Convert.convertWithCheck(valueType, value, null, this.ignoreError);
+		return Convert.convertWithCheck(valueType, map.get(key1), null, this.ignoreError);
 	}
 
 	@Override

File: hutool-poi/src/main/java/cn/hutool/poi/excel/reader/BeanSheetReader.java
Patch:
@@ -42,7 +42,7 @@ public List<T> read(Sheet sheet) {
 
 		final List<T> beanList = new ArrayList<>(mapList.size());
 		for (Map<String, Object> map : mapList) {
-			beanList.add(BeanUtil.toBean(map, this.beanClass));
+			beanList.add(BeanUtil.toBeanIgnoreError(map, this.beanClass));
 		}
 		return beanList;
 	}

File: hutool-core/src/main/java/cn/hutool/core/swing/RobotUtil.java
Patch:
@@ -53,8 +53,9 @@ public static void setDelay(int delayMillis) {
 	}
 
 	/**
-	 * 获取默认的延迟时间
+	 * 获取全局默认的延迟时间
 	 *
+	 * @return 全局默认的延迟时间
 	 * @since 5.7.6
 	 */
 	public static int getDelay() {

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -3608,7 +3608,7 @@ public static String replace(CharSequence str, int startInclude, int endExclude,
 	 * replaceFun可以通过{@link Matcher}提取出匹配到的内容的不同部分，然后经过重新处理、组装变成新的内容放回原位。
 	 *
 	 * <pre class="code">
-	 *     replaceAll(this.content, "(\\d+)", parameters -> "-" + parameters.group(1) + "-")
+	 *     replaceAll(this.content, "(\\d+)", parameters -&gt; "-" + parameters.group(1) + "-")
 	 *     // 结果为："ZZZaaabbbccc中文-1234-"
 	 * </pre>
 	 *

File: hutool-core/src/main/java/cn/hutool/core/util/ReUtil.java
Patch:
@@ -775,7 +775,7 @@ public static String replaceAll(CharSequence content, Pattern pattern, String re
 	 * replaceFun可以通过{@link Matcher}提取出匹配到的内容的不同部分，然后经过重新处理、组装变成新的内容放回原位。
 	 *
 	 * <pre class="code">
-	 *     replaceAll(this.content, "(\\d+)", parameters -> "-" + parameters.group(1) + "-")
+	 *     replaceAll(this.content, "(\\d+)", parameters -&gt; "-" + parameters.group(1) + "-")
 	 *     // 结果为："ZZZaaabbbccc中文-1234-"
 	 * </pre>
 	 *
@@ -794,7 +794,7 @@ public static String replaceAll(CharSequence str, String regex, Func1<Matcher, S
 	 * replaceFun可以通过{@link Matcher}提取出匹配到的内容的不同部分，然后经过重新处理、组装变成新的内容放回原位。
 	 *
 	 * <pre class="code">
-	 *     replaceAll(this.content, "(\\d+)", parameters -> "-" + parameters.group(1) + "-")
+	 *     replaceAll(this.content, "(\\d+)", parameters -&gt; "-" + parameters.group(1) + "-")
 	 *     // 结果为："ZZZaaabbbccc中文-1234-"
 	 * </pre>
 	 *

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -3608,8 +3608,8 @@ public static String replace(CharSequence str, int startInclude, int endExclude,
 	 * replaceFun可以通过{@link Matcher}提取出匹配到的内容的不同部分，然后经过重新处理、组装变成新的内容放回原位。
 	 *
 	 * <pre class="code">
-	 *     replaceAll(this.content, "(\\d+)", parameters -> "->" + parameters.group(1) + "<-")
-	 *     // 结果为："ZZZaaabbbccc中文->1234<-"
+	 *     replaceAll(this.content, "(\\d+)", parameters -> "-" + parameters.group(1) + "-")
+	 *     // 结果为："ZZZaaabbbccc中文-1234-"
 	 * </pre>
 	 *
 	 * @param str        要替换的字符串

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -44,7 +44,9 @@ public class Browser extends UserAgentInfo {
 			// 淘宝内置浏览器
 			new Browser("Taobao", "taobao", "AliApp\\(TB\\/([\\d\\w\\.\\-]+)\\)"),
 			// UC浏览器
-			new Browser("UCBrowser", "UCBrowser", "UCBrowser\\/([\\d\\w\\.\\-]+)"),
+			new Browser("UCBrowser", "UC?Browser", "UC?Browser\\/([\\d\\w\\.\\-]+)"),
+			// 夸克浏览器
+			new Browser("Quark", "Quark", "Quark\\/([\\d\\w\\.\\-]+)"),
 
 			new Browser("MSEdge", "Edge|Edg", "(?:edge|Edg)\\/([\\d\\w\\.\\-]+)"),
 			new Browser("Chrome", "chrome", "chrome\\/([\\d\\w\\.\\-]+)"),

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -493,9 +493,9 @@ public HttpRequest form(String name, Object value) {
 
 		// 普通值
 		String strValue;
-		if (value instanceof List) {
+		if (value instanceof Iterable) {
 			// 列表对象
-			strValue = CollUtil.join((List<?>) value, ",");
+			strValue = CollUtil.join((Iterable<?>) value, ",");
 		} else if (ArrayUtil.isArray(value)) {
 			if (File.class == ArrayUtil.getComponentType(value)) {
 				// 多文件

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONWriter.java
Patch:
@@ -68,6 +68,7 @@ public class JSONWriter extends Writer {
 	 * @param indentFactor 缩进因子，定义每一级别增加的缩进量
 	 * @param indent       本级别缩进量
 	 * @param config       JSON选项
+	 * @return {@link JSONWriter}
 	 */
 	public static JSONWriter of(Writer writer, int indentFactor, int indent, JSONConfig config) {
 		return new JSONWriter(writer, indentFactor, indent, config);

File: hutool-core/src/test/java/cn/hutool/core/compiler/JavaSourceCompilerTest.java
Patch:
@@ -38,7 +38,6 @@ public void testCompile() throws ClassNotFoundException {
 		final Class<?> clazz = classLoader.loadClass("c.C");
 		Object obj = ReflectUtil.newInstance(clazz);
 		Assert.assertTrue(String.valueOf(obj).startsWith("c.C@"));
-		FileUtil.del(libFile);
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/codec/Base64Decoder.java
Patch:
@@ -32,7 +32,7 @@ public class Base64Decoder {
 			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 00-0f
 			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 10-1f
 			-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, // 20-2f + - /
-			52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, // 30-3f 0-9
+			52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1, // 30-3f 0-9，-2的位置是'='
 			-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, // 40-4f A-O
 			15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, // 50-5f P-Z _
 			-1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, // 60-6f a-o

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -18,7 +18,6 @@
 import java.time.Instant;
 import java.time.LocalDateTime;
 import java.time.Year;
-import java.time.ZoneId;
 import java.time.format.DateTimeFormatter;
 import java.time.temporal.TemporalAccessor;
 import java.util.Calendar;
@@ -542,8 +541,8 @@ public static String format(Date date, DateTimeFormatter format) {
 		if (null == format || null == date) {
 			return null;
 		}
-		/// java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: YearOfEra
-		/// return format.format(date.toInstant());
+		// java.time.temporal.UnsupportedTemporalTypeException: Unsupported field: YearOfEra
+		// 出现以上报错时，表示Instant时间戳没有时区信息，赋予默认时区
 		return TemporalAccessorUtil.format(date.toInstant(), format);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/img/ImgUtil.java
Patch:
@@ -1544,6 +1544,7 @@ public static boolean write(Image image, String imageType, ImageOutputStream des
 	 * @since 3.1.0
 	 */
 	public static void write(Image image, File targetFile) throws IORuntimeException {
+		FileUtil.touch(targetFile);
 		ImageOutputStream out = null;
 		try {
 			out = getImageOutputStream(targetFile);

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -883,7 +883,7 @@ public static DateTime parseCST(CharSequence cstString) {
 	 * <li>yyyy-MM-dd'T'HH:mm:ss.SSSZ</li>
 	 * </ol>
 	 *
-	 * @param dateCharSequence 日期字符串; 常量如 {@link DatePattern#NORM_DATE_PATTERN}, {@link DatePattern#NORM_DATETIME_PATTERN}
+	 * @param dateCharSequence 日期字符串
 	 * @return 日期
 	 */
 	public static DateTime parse(CharSequence dateCharSequence) {

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -1479,7 +1479,8 @@ public static String normalize(String path) {
 		}
 
 		// issue#1703@Github
-		if(tops > 0){
+		if(tops > 0 && StrUtil.isEmpty(prefix)){
+			// 只有相对路径补充开头的..，绝对路径直接忽略之
 			while (tops-- > 0){
 				//遍历完节点发现还有上级标注（即开头有一个或多个..），补充之
 				// Normal path element found.

File: hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
Patch:
@@ -147,15 +147,15 @@ public void normalizeTest() {
 		Assert.assertEquals("/bar", FileUtil.normalize("/foo/../bar"));
 		Assert.assertEquals("/bar/", FileUtil.normalize("/foo/../bar/"));
 		Assert.assertEquals("/baz", FileUtil.normalize("/foo/../bar/../baz"));
-		Assert.assertEquals("/../", FileUtil.normalize("/../"));
+		Assert.assertEquals("/", FileUtil.normalize("/../"));
 		Assert.assertEquals("foo", FileUtil.normalize("foo/bar/.."));
 		Assert.assertEquals("../bar", FileUtil.normalize("foo/../../bar"));
 		Assert.assertEquals("bar", FileUtil.normalize("foo/../bar"));
 		Assert.assertEquals("/server/bar", FileUtil.normalize("//server/foo/../bar"));
 		Assert.assertEquals("/bar", FileUtil.normalize("//server/../bar"));
 		Assert.assertEquals("C:/bar", FileUtil.normalize("C:\\foo\\..\\bar"));
 		//
-		Assert.assertEquals("C:/../bar", FileUtil.normalize("C:\\..\\bar"));
+		Assert.assertEquals("C:/bar", FileUtil.normalize("C:\\..\\bar"));
 		Assert.assertEquals("../../bar", FileUtil.normalize("../../bar"));
 		Assert.assertEquals("C:/bar", FileUtil.normalize("/C:/bar"));
 		Assert.assertEquals("C:", FileUtil.normalize("C:"));

File: hutool-jwt/src/main/java/cn/hutool/jwt/JWT.java
Patch:
@@ -352,7 +352,7 @@ public boolean validate(long leeway) {
 
 		// 校验时间字段
 		try {
-			JWTValidator.of(tokens.get(2)).validateDate(DateUtil.date(), leeway);
+			JWTValidator.of(this).validateDate(DateUtil.date(), leeway);
 		} catch (ValidateException e) {
 			return false;
 		}

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -541,7 +541,7 @@ public static String format(Date date, DateTimeFormatter format) {
 		if (null == format || null == date) {
 			return null;
 		}
-		return format.format(date.toInstant());
+		return TemporalAccessorUtil.format(date.toInstant(), format);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/date/TemporalAccessorUtil.java
Patch:
@@ -56,7 +56,6 @@ public static String format(TemporalAccessor time, DateTimeFormatter formatter)
 			formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
 		}
 
-
 		try {
 			return formatter.format(time);
 		} catch (UnsupportedTemporalTypeException e){
@@ -66,6 +65,9 @@ public static String format(TemporalAccessor time, DateTimeFormatter formatter)
 			}else if(time instanceof LocalTime && e.getMessage().contains("YearOfEra")){
 				// 用户传入LocalTime，但是要求格式化带有日期部分，转换为LocalDateTime重试
 				return formatter.format(((LocalTime) time).atDate(LocalDate.now()));
+			} else if(time instanceof Instant){
+				// 时间戳没有时区信息，赋予默认时区
+				return formatter.format(((Instant) time).atZone(ZoneId.systemDefault()));
 			}
 			throw e;
 		}

File: hutool-core/src/main/java/cn/hutool/core/date/format/FastDatePrinter.java
Patch:
@@ -299,7 +299,7 @@ String format(final Object obj) {
 		} else if (obj instanceof Calendar) {
 			return format((Calendar) obj);
 		} else if (obj instanceof Long) {
-			return format(((Long) obj));
+			return format(((Long) obj).longValue());
 		} else {
 			throw new IllegalArgumentException("Unknown class: " + (obj == null ? "<null>" : obj.getClass().getName()));
 		}

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -343,7 +343,7 @@ public static String[] isValidCard10(String idcard) {
 	 * @return 验证码是否符合
 	 */
 	public static boolean isValidTWCard(String idcard) {
-		if (StrUtil.isEmpty(idcard)) {
+		if (StrUtil.isEmpty(idcard) || idcard.length() != 10) {
 			return false;
 		}
 		String start = idcard.substring(0, 1);

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -343,7 +343,7 @@ public static String[] isValidCard10(String idcard) {
 	 * @return 验证码是否符合
 	 */
 	public static boolean isValidTWCard(String idcard) {
-		if (StrUtil.isEmpty(idcard)) {
+		if (StrUtil.isEmpty(idcard) || idcard.length() != 10) {
 			return false;
 		}
 		String start = idcard.substring(0, 1);

File: hutool-http/src/test/java/cn/hutool/http/HttpUtilTest.java
Patch:
@@ -248,6 +248,7 @@ public void decodeParamTest() {
 	@Test
 	@Ignore
 	public void patchTest() {
+		// 验证patch请求是否可用
 		String body = HttpRequest.patch("https://www.baidu.com").execute().body();
 		Console.log(body);
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/spring/SpringUtil.java
Patch:
@@ -39,11 +39,13 @@ public class SpringUtil implements BeanFactoryPostProcessor, ApplicationContextA
 	 */
 	private static ApplicationContext applicationContext;
 
+	@SuppressWarnings("NullableProblems")
 	@Override
 	public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {
 		SpringUtil.beanFactory = beanFactory;
 	}
 
+	@SuppressWarnings("NullableProblems")
 	@Override
 	public void setApplicationContext(ApplicationContext applicationContext) {
 		SpringUtil.applicationContext = applicationContext;

File: hutool-core/src/test/java/cn/hutool/core/img/ImgTest.java
Patch:
@@ -9,13 +9,13 @@
 import java.awt.Rectangle;
 
 public class ImgTest {
-	
+
 	@Test
 	@Ignore
 	public void cutTest1() {
 		Img.from(FileUtil.file("e:/pic/face.jpg")).cut(0, 0, 200).write(FileUtil.file("e:/pic/face_radis.png"));
 	}
-	
+
 	@Test
 	@Ignore
 	public void compressTest() {
@@ -28,7 +28,7 @@ public void writeTest() {
 		final Img from = Img.from(FileUtil.file("d:/test/81898311-001d6100-95eb-11ea-83c2-a14d7b1010bd.png"));
 		ImgUtil.write(from.getImg(), FileUtil.file("d:/test/dest.jpg"));
 	}
-	
+
 	@Test
 	@Ignore
 	public void roundTest() {

File: hutool-core/src/main/java/cn/hutool/core/util/PageUtil.java
Patch:
@@ -31,7 +31,7 @@ public static int getFirstPageNo() {
 	 *
 	 * @param customFirstPageNo 自定义的首页页码，为0或者1
 	 */
-	public static void setFirstPageNo(int customFirstPageNo) {
+	synchronized public static void setFirstPageNo(int customFirstPageNo) {
 		firstPageNo = customFirstPageNo;
 	}
 

File: hutool-db/src/main/java/cn/hutool/db/PageResult.java
Patch:
@@ -16,7 +16,7 @@ public class PageResult<T> extends ArrayList<T> {
 	public static final int DEFAULT_PAGE_SIZE = Page.DEFAULT_PAGE_SIZE;
 
 	/**
-	 * 页码，0表示第一页
+	 * 页码，{@link PageUtil#getFirstPageNo()}表示第一页
 	 */
 	private int page;
 	/**
@@ -142,7 +142,7 @@ public void setTotal(int total) {
 	 * @return 是否第一页
 	 */
 	public boolean isFirst() {
-		return this.page == 0;
+		return this.page == PageUtil.getFirstPageNo();
 	}
 
 	/**

File: hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java
Patch:
@@ -67,9 +67,10 @@ public static Props create() {
 	private URL propertiesFileUrl;
 	private WatchMonitor watchMonitor;
 	/**
-	 * properties文件编码
+	 * properties文件编码<br>
+	 * issue#1701，此属性不能被序列化，故忽略序列化
 	 */
-	private Charset charset = CharsetUtil.CHARSET_ISO_8859_1;
+	private transient Charset charset = CharsetUtil.CHARSET_ISO_8859_1;
 	// ----------------------------------------------------------------------- 私有属性 end
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/builder/EqualsBuilder.java
Patch:
@@ -381,7 +381,8 @@ public EqualsBuilder append(final Object lhs, final Object rhs) {
 		final Class<?> lhsClass = lhs.getClass();
 		if (false == lhsClass.isArray()) {
 			// The simple case, not an array, just test the element
-			isEquals = lhs.equals(rhs);
+			this.setEquals(lhs.equals(rhs));
+			return this;
 		}
 
 		// 判断数组的equals

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/Tree.java
Patch:
@@ -20,7 +20,7 @@
  * @author liangbaikai
  * @since 5.2.1
  */
-public class Tree<T> extends LinkedHashMap<String, Object> implements Node<T> {
+	public class Tree<T> extends LinkedHashMap<String, Object> implements Node<T> {
 	private static final long serialVersionUID = 1L;
 
 	private final TreeNodeConfig treeNodeConfig;

File: hutool-http/src/main/java/cn/hutool/http/useragent/UserAgentUtil.java
Patch:
@@ -2,15 +2,15 @@
 
 /**
  * User-Agent工具类
- * 
+ *
  * @author looly
  *
  */
 public class UserAgentUtil {
 
 	/**
 	 * 解析User-Agent
-	 * 
+	 *
 	 * @param userAgentString User-Agent字符串
 	 * @return {@link UserAgent}
 	 */

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvWriter.java
Patch:
@@ -212,6 +212,7 @@ public CsvWriter write(Collection<?> lines) throws IORuntimeException {
 	 *
 	 * @param csvData CsvData
 	 * @return this
+	 * @since 5.7.4
 	 */
 	public CsvWriter write(CsvData csvData) {
 		if (csvData != null) {

File: hutool-core/src/main/java/cn/hutool/core/builder/EqualsBuilder.java
Patch:
@@ -381,7 +381,8 @@ public EqualsBuilder append(final Object lhs, final Object rhs) {
 		final Class<?> lhsClass = lhs.getClass();
 		if (false == lhsClass.isArray()) {
 			// The simple case, not an array, just test the element
-			isEquals = lhs.equals(rhs);
+			this.setEquals(lhs.equals(rhs));
+			return this;
 		}
 
 		// 判断数组的equals

File: hutool-crypto/src/main/java/cn/hutool/crypto/SmUtil.java
Patch:
@@ -188,9 +188,9 @@ public static SM4 sm4() {
 	 * </pre>
 	 *
 	 * @param key 密钥
-	 * @return {@link SymmetricCrypto}
+	 * @return {@link SM4}
 	 */
-	public static SymmetricCrypto sm4(byte[] key) {
+	public static SM4 sm4(byte[] key) {
 		return new SM4(key);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/RadixUtil.java
Patch:
@@ -100,7 +100,7 @@ private static String encode(final String radixs, long num, int maxLength) {
 	 * @param encodeStr 需要转换成十进制的字符串
 	 * @return int
 	 */
-	public int decodeToInt(final String radixs, final String encodeStr) {
+	public static int decodeToInt(final String radixs, final String encodeStr) {
 		//还原负数
 		return (int) decode(radixs, encodeStr);
 	}
@@ -112,7 +112,7 @@ public int decodeToInt(final String radixs, final String encodeStr) {
 	 * @param encodeStr 需要转换成十进制的字符串
 	 * @return long
 	 */
-	public long decode(final String radixs, final String encodeStr) {
+	public static long decode(final String radixs, final String encodeStr) {
 		//目标是多少进制
 		int rl = radixs.length();
 		long res = 0L;

File: hutool-core/src/main/java/cn/hutool/core/util/JAXBUtil.java
Patch:
@@ -21,10 +21,8 @@
  *   <li>https://my.oschina.net/u/4266515/blog/3330113</li>
  * </ul>
  *
- * @see XmlUtil
- * //@see JSONUtil
- *
  * @author dazer
+ * @see XmlUtil
  * @since 5.7.3
  */
 public class JAXBUtil {

File: hutool-core/src/main/java/cn/hutool/core/date/DateRange.java
Patch:
@@ -52,7 +52,6 @@ public DateRange(Date start, Date end, final DateField unit, final int step, boo
 			if (dt.isAfter(end1)) {
 				return null;
 			}
-
 			return dt;
 		}, isIncludeStart, isIncludeEnd);
 	}

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -239,7 +239,7 @@ private void valueProviderToBean(ValueProvider<String> valueProvider, Object bea
 
 			// 对key做映射，映射后为null的忽略之
 			// 这里 copyOptions.editFieldName() 不能少，否则导致 CopyOptions setFieldNameEditor 失效
-			final String providerKey = copyOptions.editFieldName(copyOptions.getMappedFieldName(fieldName, false));
+			final String providerKey = copyOptions.editFieldName(copyOptions.getMappedFieldName(fieldName, true));
 			if(null == providerKey){
 				return;
 			}

File: hutool-core/src/test/java/cn/hutool/core/lang/tree/TreeBuilderTest.java
Patch:
@@ -12,5 +12,4 @@ public void checkIsBuiltTest(){
 		of.build();
 		of.append(new ArrayList<>());
 	}
-
 }

File: hutool-core/src/test/java/cn/hutool/core/lang/tree/TreeTest.java
Patch:
@@ -28,7 +28,7 @@ public class TreeTest {
 
 
 	@Test
-	public void sampleTree() {
+	public void sampleTreeTest() {
 		List<Tree<String>> treeList = TreeUtil.build(nodeList, "0");
 		for (Tree<String> tree : treeList) {
 			Assert.assertNotNull(tree);
@@ -43,7 +43,7 @@ public void sampleTree() {
 	}
 
 	@Test
-	public void tree() {
+	public void treeTest() {
 
 		//配置
 		TreeNodeConfig treeNodeConfig = new TreeNodeConfig();
@@ -66,5 +66,4 @@ public void tree() {
 
 		Assert.assertEquals(treeNodes.size(), 2);
 	}
-
 }

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -239,7 +239,7 @@ private void valueProviderToBean(ValueProvider<String> valueProvider, Object bea
 
 			// 对key做映射，映射后为null的忽略之
 			// 这里 copyOptions.editFieldName() 不能少，否则导致 CopyOptions setFieldNameEditor 失效
-			String providerKey = copyOptions.editFieldName(copyOptions.getMappedFieldName(fieldName, false));
+			final String providerKey = copyOptions.editFieldName(copyOptions.getMappedFieldName(fieldName, false));
 			if(null == providerKey){
 				return;
 			}

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -329,8 +329,7 @@ public DateTime offsetNew(DateField datePart, int offset) {
 		//noinspection MagicConstant
 		cal.add(datePart.getValue(), offset);
 
-		DateTime dt = ObjectUtil.clone(this);
-		return dt.setTimeInternal(cal.getTimeInMillis());
+		return ObjectUtil.clone(this).setTimeInternal(cal.getTimeInMillis());
 	}
 	// -------------------------------------------------------------------- offset end
 

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1788,7 +1788,7 @@ public static String secondToTime(int seconds) {
 	/**
 	 * 创建日期范围生成器
 	 *
-	 * @param start 起始日期时间
+	 * @param start 起始日期时间（包括）
 	 * @param end   结束日期时间
 	 * @param unit  步进单位
 	 * @return {@link DateRange}

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -554,8 +554,8 @@ public String toString() {
 
 	@Override
 	public Writer write(Writer writer, int indentFactor, int indent) throws JSONException {
-		final JSONWriter jsonWriter = new JSONWriter(writer, indentFactor, indent, this.config);
-		jsonWriter.beginObj();
+		final JSONWriter jsonWriter = JSONWriter.of(writer, indentFactor, indent, config)
+				.beginObj();
 		this.forEach((key, value)-> jsonWriter.writeKey(key).writeValue(value));
 		jsonWriter.end();
 

File: hutool-jwt/src/test/java/cn/hutool/jwt/JWTTest.java
Patch:
@@ -19,11 +19,11 @@ public void createHs256Test(){
 				.setKey(key);
 
 		String rightToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9." +
-				"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Imxvb2x5IiwiYWRtaW4iOnRydWUsImV4cCI6IjE2NDA5NjY0MDAifQ." +
-				"c9qo9Z9vdN2gulvOEReU9iEi0bqgyVqjaNKbP1DmTL4";
+				"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Imxvb2x5IiwiYWRtaW4iOnRydWUsImV4cCI6MTY0MDk2NjQwMH0." +
+				"bXlSnqVeJXWqUIt7HyEhgKNVlIPjkumHlAwFY-5YCtk";
 
 		String token = jwt.sign();
-		Assert.assertEquals(token, rightToken);
+		Assert.assertEquals(rightToken, token);
 
 		Assert.assertTrue(JWT.of(rightToken).setKey(key).verify());
 	}

File: hutool-core/src/main/java/cn/hutool/core/text/escape/XmlEscape.java
Patch:
@@ -12,7 +12,7 @@
  * 	 &lt; (less than) 替换为 &amp;lt;
  * 	 &gt; (greater than) 替换为 &amp;gt;
  * 	 &quot; (double quote) 替换为 &amp;quot;
- * 	 &apos; (single quote / apostrophe) 替换为 &amp;apos;
+ * 	 ' (single quote / apostrophe) 替换为 &amp;apos;
  * </pre>
  *
  * @author looly

File: hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java
Patch:
@@ -33,7 +33,7 @@ public class EscapeUtil {
 	 * 	 &lt; (less than) 替换为 &amp;lt;
 	 * 	 &gt; (greater than) 替换为 &amp;gt;
 	 * 	 &quot; (double quote) 替换为 &amp;quot;
-	 * 	 &apos; (single quote / apostrophe) 替换为 &amp;apos;
+	 * 	 ' (single quote / apostrophe) 替换为 &amp;apos;
 	 * </pre>
 	 *
 	 * @param xml XML文本

File: hutool-core/src/main/java/cn/hutool/core/date/format/FormatCache.java
Patch:
@@ -113,7 +113,7 @@ private F getDateTimeInstance(final Integer dateStyle, final Integer timeStyle,
 	 */
 	// package protected, for access from FastDateFormat; do not make public or protected
 	F getDateTimeInstance(final int dateStyle, final int timeStyle, final TimeZone timeZone, final Locale locale) {
-		return getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);
+		return getDateTimeInstance(Integer.valueOf(dateStyle), Integer.valueOf(timeStyle), timeZone, locale);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java
Patch:
@@ -986,7 +986,7 @@ public static Object getByXPath(String expression, Object source, QName returnTy
 	 * @since 4.0.8
 	 */
 	public static String escape(String string) {
-		return EscapeUtil.escape(string);
+		return EscapeUtil.escapeHtml4(string);
 	}
 
 	/**
@@ -998,7 +998,7 @@ public static String escape(String string) {
 	 * @since 5.0.6
 	 */
 	public static String unescape(String string) {
-		return EscapeUtil.unescape(string);
+		return EscapeUtil.unescapeHtml4(string);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/date/format/FormatCache.java
Patch:
@@ -113,7 +113,7 @@ private F getDateTimeInstance(final Integer dateStyle, final Integer timeStyle,
 	 */
 	// package protected, for access from FastDateFormat; do not make public or protected
 	F getDateTimeInstance(final int dateStyle, final int timeStyle, final TimeZone timeZone, final Locale locale) {
-		return getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);
+		return getDateTimeInstance(Integer.valueOf(dateStyle), Integer.valueOf(timeStyle), timeZone, locale);
 	}
 
 	/**

File: hutool-extra/src/main/java/cn/hutool/extra/pinyin/package-info.java
Patch:
@@ -1,7 +1,7 @@
 /**
- * 拼音工具封装，基于TinyPinyin
- * 
+ * 拼音工具封装，入口为PinyinUtil
+ *
  * @author looly
  *
  */
-package cn.hutool.extra.pinyin;
\ No newline at end of file
+package cn.hutool.extra.pinyin;

File: hutool-json/src/test/java/cn/hutool/json/XMLTest.java
Patch:
@@ -13,4 +13,5 @@ public void toXmlTest(){
 		final String s = JSONUtil.toXmlStr(put);
 		Assert.assertEquals("<aaa>你好</aaa><键2>test</键2>", s);
 	}
+
 }

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/HMac.java
Patch:
@@ -133,7 +133,8 @@ public byte[] digest(String data) {
 	/**
 	 * 生成文件摘要，并转为Base64
 	 *
-	 * @param data 被摘要数据
+	 * @param data      被摘要数据
+	 * @param isUrlSafe 是否使用URL安全字符
 	 * @return 摘要
 	 */
 	public String digestBase64(String data, boolean isUrlSafe) {

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -587,6 +587,7 @@ public static <T> T clone(final T obj) {
 	 * @param <T>    数组元素类型
 	 * @param array  数组
 	 * @param editor 编辑器接口，{@code null}返回原集合
+	 * @return 编辑后的数组
 	 * @since 5.3.3
 	 */
 	public static <T> T[] edit(T[] array, Editor<T> editor) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/HMac.java
Patch:
@@ -143,8 +143,9 @@ public String digestBase64(String data, boolean isUrlSafe) {
 	/**
 	 * 生成文件摘要，并转为Base64
 	 *
-	 * @param data    被摘要数据
-	 * @param charset 编码
+	 * @param data      被摘要数据
+	 * @param charset   编码
+	 * @param isUrlSafe 是否使用URL安全字符
 	 * @return 摘要
 	 */
 	public String digestBase64(String data, Charset charset, boolean isUrlSafe) {

File: hutool-jwt/src/main/java/cn/hutool/jwt/signers/HMacJWTSigner.java
Patch:
@@ -51,7 +51,7 @@ public HMacJWTSigner setCharset(Charset charset) {
 
 	@Override
 	public String sign(String headerBase64, String payloadBase64) {
-		return hMac.digestHex(StrUtil.format("{}.{}", headerBase64, payloadBase64), charset);
+		return hMac.digestBase64(StrUtil.format("{}.{}", headerBase64, payloadBase64), charset, true);
 	}
 
 	@Override

File: hutool-jwt/src/main/java/cn/hutool/jwt/signers/JWTSigner.java
Patch:
@@ -12,7 +12,7 @@ public interface JWTSigner {
 	 *
 	 * @param headerBase64  JWT头的JSON字符串的Base64表示
 	 * @param payloadBase64 JWT载荷的JSON字符串Base64表示
-	 * @return 签名结果，即JWT的第三部分
+	 * @return 签名结果Base64，即JWT的第三部分
 	 */
 	String sign(String headerBase64, String payloadBase64);
 

File: hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java
Patch:
@@ -1,14 +1,14 @@
 package cn.hutool.core.io.resource;
 
-import java.net.URL;
-
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.ClassUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.core.util.URLUtil;
 
+import java.net.URL;
+
 /**
  * ClassPath单一资源访问类<br>
  * 传入路径path必须为相对路径，如果传入绝对路径，Linux路径会去掉开头的“/”，而Windows路径会直接报错。<br>

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -6,7 +6,6 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.convert.Convert;
 import cn.hutool.core.lang.Editor;
-import cn.hutool.core.lang.Filter;
 import cn.hutool.core.map.CaseInsensitiveMap;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ArrayUtil;
@@ -198,7 +197,7 @@ public static PropertyDescriptor[] getPropertyDescriptors(Class<?> clazz) throws
 		} catch (IntrospectionException e) {
 			throw new BeanException(e);
 		}
-		return ArrayUtil.filter(beanInfo.getPropertyDescriptors(), (Filter<PropertyDescriptor>) t -> {
+		return ArrayUtil.filter(beanInfo.getPropertyDescriptors(), t -> {
 			// 过滤掉getClass方法
 			return false == "class".equals(t.getName());
 		});

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -255,7 +255,7 @@ public static <T> Collection<T> intersection(Collection<T> coll1, Collection<T>
 	 * @param coll1      集合1
 	 * @param coll2      集合2
 	 * @param otherColls 其它集合
-	 * @return 并集的集合，返回 {@link ArrayList}
+	 * @return 交集的集合，返回 {@link ArrayList}
 	 */
 	@SafeVarargs
 	public static <T> Collection<T> intersection(Collection<T> coll1, Collection<T> coll2, Collection<T>... otherColls) {
@@ -282,7 +282,7 @@ public static <T> Collection<T> intersection(Collection<T> coll1, Collection<T>
 	 * @param coll1      集合1
 	 * @param coll2      集合2
 	 * @param otherColls 其它集合
-	 * @return 并集的集合，返回 {@link LinkedHashSet}
+	 * @return 交集的集合，返回 {@link LinkedHashSet}
 	 * @since 5.3.9
 	 */
 	@SafeVarargs

File: hutool-core/src/main/java/cn/hutool/core/thread/SyncFinisher.java
Patch:
@@ -197,6 +197,9 @@ public void run() {
 			}
 		}
 
+		/**
+		 * 任务内容
+		 */
 		public abstract void work();
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1132,7 +1132,7 @@ public static <T> List<List<T>> split(Collection<T> collection, int size) {
 	 *
 	 * @param <T>        集合元素类型
 	 * @param collection 集合
-	 * @param editor     编辑器接口
+	 * @param editor     编辑器接口，{@code null}返回原集合
 	 * @return 过滤后的集合
 	 */
 	public static <T> Collection<T> edit(Collection<T> collection, Editor<T> editor) {
@@ -1171,7 +1171,7 @@ public static <T> Collection<T> edit(Collection<T> collection, Editor<T> editor)
 	 *
 	 * @param <T>        集合元素类型
 	 * @param collection 集合
-	 * @param filter     过滤器，{@link null}返回原集合
+	 * @param filter     过滤器，{@code null}返回原集合
 	 * @return 过滤后的数组
 	 * @since 3.1.0
 	 */

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -660,7 +660,7 @@ public static <K, V> Map<K, V> edit(Map<K, V> map, Editor<Entry<K, V>> editor) {
 	 * @param <K>    Key类型
 	 * @param <V>    Value类型
 	 * @param map    Map
-	 * @param filter 编辑器接口，{@link null}返回原Map
+	 * @param filter 过滤器接口，{@code null}返回原Map
 	 * @return 过滤后的Map
 	 * @since 3.1.0
 	 */
@@ -677,7 +677,7 @@ public static <K, V> Map<K, V> filter(Map<K, V> map, Filter<Entry<K, V>> filter)
 	 * @param <K>  Key类型
 	 * @param <V>  Value类型
 	 * @param map  原始Map
-	 * @param keys 键列表，{@link null}返回原Map
+	 * @param keys 键列表，{@code null}返回原Map
 	 * @return Map 结果，结果的Map类型与原Map保持一致
 	 * @since 4.0.10
 	 */

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -586,7 +586,7 @@ public static <T> T clone(final T obj) {
 	 *
 	 * @param <T>    数组元素类型
 	 * @param array  数组
-	 * @param editor 编辑器接口
+	 * @param editor 编辑器接口，{@code null}返回原集合
 	 * @since 5.3.3
 	 */
 	public static <T> T[] edit(T[] array, Editor<T> editor) {
@@ -616,7 +616,7 @@ public static <T> T[] edit(T[] array, Editor<T> editor) {
 	 *
 	 * @param <T>    数组元素类型
 	 * @param array  数组
-	 * @param filter 过滤器接口，用于定义过滤规则，null表示不过滤，返回原数组
+	 * @param filter 过滤器接口，用于定义过滤规则，{@code null}返回原集合
 	 * @return 过滤后的数组
 	 * @since 3.2.1
 	 */

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -621,6 +621,9 @@ public static <T> T[] edit(T[] array, Editor<T> editor) {
 	 * @since 3.2.1
 	 */
 	public static <T> T[] filter(T[] array, Filter<T> filter) {
+		if(null == array || null == filter){
+			return array;
+		}
 		return edit(array, t -> filter.accept(t) ? t : null);
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/collection/ListUtilTest.java
Patch:
@@ -40,7 +40,7 @@ public void split() {
 	@Test
 	public void editTest(){
 		List<String> a = ListUtil.toLinkedList("1", "2", "3");
-		final List<String> filter = ListUtil.edit(a, str -> "edit" + str);
+		final List<String> filter = (List<String>) CollUtil.edit(a, str -> "edit" + str);
 		Assert.assertEquals("edit1", filter.get(0));
 		Assert.assertEquals("edit2", filter.get(1));
 		Assert.assertEquals("edit3", filter.get(2));

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -386,7 +386,6 @@ public static boolean isValidHKCard(String idcard) {
 		}
 
 		// 首字母A-Z，A表示1，以此类推
-		char start = idcard.charAt(0);
 		String mid = card.substring(1, 7);
 		String end = card.substring(7, 8);
 		char[] chars = mid.toCharArray();

File: hutool-core/src/test/java/cn/hutool/core/collection/ListUtilTest.java
Patch:
@@ -38,9 +38,9 @@ public void split() {
 	}
 
 	@Test
-	public void filterTest(){
+	public void editTest(){
 		List<String> a = ListUtil.toLinkedList("1", "2", "3");
-		final List<String> filter = ListUtil.filter(a, str -> "edit" + str);
+		final List<String> filter = ListUtil.edit(a, str -> "edit" + str);
 		Assert.assertEquals("edit1", filter.get(0));
 		Assert.assertEquals("edit2", filter.get(1));
 		Assert.assertEquals("edit3", filter.get(2));

File: hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java
Patch:
@@ -1,6 +1,6 @@
 package cn.hutool.cron;
 
-import cn.hutool.core.collection.CollUtil;
+import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.thread.ExecutorBuilder;
 import cn.hutool.core.thread.ThreadFactoryBuilder;
 import cn.hutool.core.util.CharUtil;
@@ -180,7 +180,7 @@ public Scheduler removeListener(TaskListener listener) {
 	 * @return this
 	 */
 	public Scheduler schedule(Setting cronSetting) {
-		if (CollUtil.isNotEmpty(cronSetting)) {
+		if (MapUtil.isNotEmpty(cronSetting)) {
 			String group;
 			for (Entry<String, LinkedHashMap<String, String>> groupedEntry : cronSetting.getGroupedMap().entrySet()) {
 				group = groupedEntry.getKey();

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java
Patch:
@@ -570,7 +570,8 @@ public static void write(HttpServletResponse response, File file) {
 	 */
 	public static void write(HttpServletResponse response, InputStream in, String contentType, String fileName) {
 		final String charset = ObjectUtil.defaultIfNull(response.getCharacterEncoding(), CharsetUtil.UTF_8);
-		response.setHeader("Content-Disposition", StrUtil.format("attachment;filename={}", URLUtil.encode(fileName, charset)));
+		response.setHeader("Content-Disposition", StrUtil.format("attachment;filename={}",
+				URLUtil.encode(fileName, CharsetUtil.charset(charset))));
 		response.setContentType(contentType);
 		write(response, in);
 	}

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -59,7 +59,7 @@ public void toJsonStrTest() {
 		a2.setName("AAAA222Name");
 
 		ArrayList<UserA> list = CollectionUtil.newArrayList(a1, a2);
-		HashMap<String, Object> map = CollectionUtil.newHashMap();
+		HashMap<String, Object> map = MapUtil.newHashMap();
 		map.put("total", 13);
 		map.put("rows", list);
 

File: hutool-json/src/test/java/cn/hutool/json/TransientTest.java
Patch:
@@ -19,7 +19,7 @@ public void beanWithTransientTest(){
 		detailBill.setBizNo("bizNo");
 
 		final JSONObject jsonObject = new JSONObject(detailBill,
-				JSONConfig.create().setIgnoreTransient(true));
+				JSONConfig.create().setTransientSupport(false));
 		Assert.assertEquals("{\"bizNo\":\"bizNo\"}", jsonObject.toString());
 	}
 }

File: hutool-setting/src/test/java/cn/hutool/setting/test/SettingTest.java
Patch:
@@ -47,9 +47,9 @@ public void settingTestForAbsPath() {
 	public void settingTestForCustom() {
 		Setting setting = new Setting();
 
-		setting.put("group1", "user", "root");
-		setting.put("group2", "user", "root2");
-		setting.put("group3", "user", "root3");
+		setting.setByGroup("user", "group1", "root");
+		setting.setByGroup("user", "group2", "root2");
+		setting.setByGroup("user", "group3", "root3");
 		setting.set("user", "root4");
 
 		Assert.assertEquals("root", setting.getByGroup("user", "group1"));

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -9,6 +9,7 @@
 import cn.hutool.core.lang.Editor;
 import cn.hutool.core.lang.Filter;
 import cn.hutool.core.lang.Matcher;
+import cn.hutool.core.map.MapUtil;
 
 import java.lang.reflect.Array;
 import java.nio.ByteBuffer;
@@ -721,7 +722,7 @@ public static <K, V> Map<K, V> zip(K[] keys, V[] values, boolean isOrder) {
 		}
 
 		final int size = Math.min(keys.length, values.length);
-		final Map<K, V> map = CollUtil.newHashMap(size, isOrder);
+		final Map<K, V> map = MapUtil.newHashMap(size, isOrder);
 		for (int i = 0; i < size; i++) {
 			map.put(keys[i], values[i]);
 		}

File: hutool-core/src/main/java/cn/hutool/core/collection/IterChain.java
Patch:
@@ -26,7 +26,8 @@ public IterChain() {
 	}
 
 	/**
-	 * Creates new composite iterator with provided iterators.
+	 * 构造
+	 * @param iterators 多个{@link Iterator}
 	 */
 	@SafeVarargs
 	public IterChain(Iterator<T>... iterators) {

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/ArrayConverter.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.core.convert.Convert;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ByteUtil;
+import cn.hutool.core.util.CharUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 
@@ -124,7 +125,7 @@ private Object convertObjectToArray(Object value) {
 			}
 
 			// 单纯字符串情况下按照逗号分隔后劈开
-			final String[] strings = StrUtil.split(value.toString(), StrUtil.COMMA);
+			final String[] strings = StrUtil.splitToArray(value.toString(), CharUtil.COMMA);
 			return convertArrayToArray(strings);
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/exceptions/ExceptionUtil.java
Patch:
@@ -1,7 +1,7 @@
 package cn.hutool.core.exceptions;
 
-import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.io.FastByteArrayOutputStream;
+import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ReflectUtil;
 import cn.hutool.core.util.StrUtil;
@@ -246,7 +246,7 @@ public static String stacktraceToString(Throwable throwable, int limit, Map<Char
 			length = limit;
 		}
 
-		if (CollUtil.isNotEmpty(replaceCharToStrMap)) {
+		if (MapUtil.isNotEmpty(replaceCharToStrMap)) {
 			final StringBuilder sb = StrUtil.builder();
 			char c;
 			String value;

File: hutool-core/src/test/java/cn/hutool/core/compiler/JavaSourceCompilerTest.java
Patch:
@@ -29,7 +29,7 @@ public void testCompile() throws ClassNotFoundException {
 						FileUtil.getInputStream("test-compile/a/A$1.class"),
 						FileUtil.getInputStream("test-compile/a/A$InnerClass.class")
 				});
-		final ClassLoader classLoader = JavaSourceCompiler.create(null)
+		final ClassLoader classLoader = CompilerUtil.getCompiler(null)
 				.addSource(FileUtil.file("test-compile/b/B.java"))
 				.addSource("c.C", FileUtil.readUtf8String("test-compile/c/C.java"))
 				.addLibrary(libFile)

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -457,6 +457,9 @@ public void clear() {
 	 */
 	@Override
 	public Object set(int index, Object element) {
+		if(index > size()){
+			add(index, element);
+		}
 		return this.rawList.set(index, JSONUtil.wrap(element, this.config));
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/bean/OptionalBean.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  * optional对象判空，参考：https://mp.weixin.qq.com/s/0c8iC0OTtx5LqPkhvkK0tw<br>
- * from：https://github.com/looly/hutool/pull/1182
+ * from：https://github.com/dromara/hutool/pull/1182
  *
  * @param <T> Bean类型
  * @author totalo
@@ -149,4 +149,4 @@ public void ifPresent(Consumer<? super T> consumer) {
 	public int hashCode() {
 		return Objects.hashCode(value);
 	}
-}
\ No newline at end of file
+}

File: hutool-core/src/test/java/cn/hutool/core/bean/OptionalBeanTest.java
Patch:
@@ -13,7 +13,7 @@ public void optionalBeanTest() {
 		String value1 = OptionalBean.ofNullable(user)
 				.getBean(User::getSchool)
 				.getBean(User.School::getAddress).get();
-        Assert.assertNull(value1);
+		Assert.assertNull(value1);
 
 		boolean present = OptionalBean.ofNullable(user)
 				.getBean(User::getSchool)

File: hutool-cache/src/test/java/cn/hutool/cache/CacheConcurrentTest.java
Patch:
@@ -1,6 +1,5 @@
-package cn.hutool.cache.test;
+package cn.hutool.cache;
 
-import cn.hutool.cache.Cache;
 import cn.hutool.cache.impl.FIFOCache;
 import cn.hutool.cache.impl.LRUCache;
 import cn.hutool.cache.impl.WeakCache;

File: hutool-cache/src/test/java/cn/hutool/cache/FileCacheTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.cache.test;
+package cn.hutool.cache;
 
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-jwt/src/test/java/cn/hutool/jwt/JWTSignerTest.java
Patch:
@@ -116,6 +116,6 @@ private static void signAndVerify(JWTSigner signer){
 				.setSigner(signer);
 
 		String token = jwt.sign();
-		Assert.assertTrue(JWT.of(token).setSigner(signer).verify());
+		Assert.assertTrue(JWT.of(token).verify(signer));
 	}
 }

File: hutool-db/src/main/java/cn/hutool/db/AbstractDb.java
Patch:
@@ -682,7 +682,7 @@ public long count(SqlBuilder sql) throws SQLException {
 		Connection conn = null;
 		try {
 			conn = this.getConnection();
-			return runner.count(conn, sql.build(), sql.getParamValueArray());
+			return runner.count(conn, sql);
 		} finally {
 			this.closeConnection(conn);
 		}

File: hutool-core/src/main/java/cn/hutool/core/stream/StreamUtil.java
Patch:
@@ -59,7 +59,7 @@ public static <T> Stream<T> of(Iterable<T> iterable, boolean parallel) {
 	/**
 	 * 按行读取文件为{@link Stream}
 	 *
-	 * @param file 路径
+	 * @param file 文件
 	 * @return {@link Stream}
 	 */
 	public static Stream<String> of(File file) {
@@ -79,6 +79,7 @@ public static Stream<String> of(Path path) {
 	/**
 	 * 按行读取文件为{@link Stream}
 	 *
+	 * @param file    文件
 	 * @param charset 编码
 	 * @return {@link Stream}
 	 */

File: hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.io.IoUtil;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.text.StrBuilder;
 
 import java.io.File;
@@ -297,7 +296,6 @@ private static String[] handleCmds(String... cmds){
 				throw new NullPointerException("Command is blank !");
 			}
 			cmds = cmdSplit(cmd);
-			Console.log(cmds);
 		}
 		return cmds;
 	}

File: hutool-core/src/main/java/cn/hutool/core/text/StrSpliter.java
Patch:
@@ -12,7 +12,7 @@
 
 /**
  * 字符串切分器
- *
+ *x
  * @author Looly
  */
 public class StrSpliter {

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -27,7 +27,6 @@
 import java.util.Locale;
 import java.util.TimeZone;
 import java.util.concurrent.TimeUnit;
-import java.util.regex.Matcher;
 
 /**
  * 时间工具类
@@ -931,7 +930,6 @@ public static DateTime parse(CharSequence dateCharSequence) {
 
 		//标准日期格式（包括单个数字的日期时间）
 		dateStr = normalize(dateStr);
-		final Matcher matcher = DatePattern.REGEX_NORM.matcher(dateStr);
 		if (ReUtil.isMatch(DatePattern.REGEX_NORM, dateStr)) {
 			final int colonCount = StrUtil.count(dateStr, CharUtil.COLON);
 			switch (colonCount) {

File: hutool-core/src/main/java/cn/hutool/core/img/gif/GifDecoder.java
Patch:
@@ -778,9 +778,6 @@ protected void resetFrame() {
 		lastRect = new Rectangle(ix, iy, iw, ih);
 		lastImage = image;
 		lastBgColor = bgColor;
-		int dispose = 0;
-		boolean transparency = false;
-		int delay = 0;
 		lct = null;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -387,7 +387,6 @@ public static boolean isValidHKCard(String idcard) {
 
 		// 首字母A-Z，A表示1，以此类推
 		char start = idcard.charAt(0);
-		int iStart = start - 'A' + 1;
 		String mid = card.substring(1, 7);
 		String end = card.substring(7, 8);
 		char[] chars = mid.toCharArray();

File: hutool-core/src/main/java/cn/hutool/core/util/RadixUtil.java
Patch:
@@ -54,8 +54,7 @@ public class RadixUtil {
 	public static String encode(final String radixs, final int num) {
 		//考虑到负数问题
 		long tmpNum = (num >= 0 ? num : (0x100000000L - (~num + 1)));
-
-		return encode(radixs, num, 32);
+		return encode(radixs, tmpNum, 32);
 	}
 
 	/**
@@ -73,7 +72,7 @@ public static String encode(final String radixs, final long num) {
 		return encode(radixs, num, 64);
 	}
 
-	private static String encode(final String radixs, final long num, int maxLength) {
+	private static String encode(final String radixs, long num, int maxLength) {
 		if (radixs.length() < 2) {
 			throw new RuntimeException("自定义进制最少两个字符哦！");
 		}

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -660,7 +660,6 @@ public static File unzip(ZipInputStream zipStream, File outFile) throws UtilExce
 	public static void read(ZipInputStream zipStream, Consumer<ZipEntry> consumer) {
 		try {
 			ZipEntry zipEntry;
-			File outItemFile;
 			while (null != (zipEntry = zipStream.getNextEntry())) {
 				consumer.accept(zipEntry);
 			}

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -164,7 +164,7 @@ public void mapToBeanTest2() {
 	public void mapToBeanWinErrorTest() {
 		Map<String, String> map = new HashMap<>();
 		map.put("age", "哈哈");
-		Person user = BeanUtil.toBean(map, Person.class);
+		BeanUtil.toBean(map, Person.class);
 	}
 
 	@Test
@@ -559,7 +559,6 @@ public static class Entity<T> {
 	@Test
 	public void toMapTest() {
 		// 测试转map的时候返回key
-		String name = null;
 		PrivilegeIClassification a = new PrivilegeIClassification();
 		a.setId("1");
 		a.setName("2");

File: hutool-extra/src/main/java/cn/hutool/extra/cglib/BeanCopierCache.java
Patch:
@@ -42,9 +42,10 @@ public BeanCopier get(Class<?> srcClass, Class<?> targetClass, Converter convert
 	 * @return 属性名和Map映射的key
 	 */
 	private String genKey(Class<?> srcClass, Class<?> targetClass, Converter converter) {
-		StringBuilder key = new StringBuilder().append(StrUtil.format("{}#{}", srcClass.getName(), targetClass.getName()));
+		final StringBuilder key = StrUtil.builder()
+				.append(srcClass.getName()).append('#').append(targetClass.getName());
 		if(null != converter){
-			key.append("#").append(converter.getClass().getName());
+			key.append('#').append(converter.getClass().getName());
 		}
 		return key.toString();
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/cglib/BeanCopierCache.java
Patch:
@@ -42,10 +42,10 @@ public BeanCopier get(Class<?> srcClass, Class<?> targetClass, Converter convert
 	 * @return 属性名和Map映射的key
 	 */
 	private String genKey(Class<?> srcClass, Class<?> targetClass, Converter converter) {
-		String key = StrUtil.format("{}#{}", srcClass.getName(), targetClass.getName());
+		StringBuilder key = new StringBuilder().append(StrUtil.format("{}#{}", srcClass.getName(), targetClass.getName()));
 		if(null != converter){
-			key += "#" + converter.getClass().getName();
+			key.append("#").append(converter.getClass().getName());
 		}
-		return key;
+		return key.toString();
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/util/RuntimeUtilTest.java
Patch:
@@ -29,7 +29,7 @@ public void execCmdTest() {
 	@Test
 	@Ignore
 	public void execCmdTest2() {
-		String str = RuntimeUtil.execForStr("cmd /c cd C:\\Program Files (x86)");
+		String str = RuntimeUtil.execForStr("cmd /c", "cd \"C:\\Program Files (x86)\"", "chdir");
 		Console.log(str);
 	}
 

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricCrypto.java
Patch:
@@ -219,7 +219,7 @@ public byte[] encrypt(byte[] data) {
 	}
 
 	/**
-	 * 加密，针对大数据量，结束后不关闭流
+	 * 加密，针对大数据量，可选结束后是否关闭流
 	 *
 	 * @param data 被加密的字符串
 	 * @param out 输出流，可以是文件或网络位置

File: hutool-http/src/test/java/cn/hutool/http/server/SimpleServerTest.java
Patch:
@@ -50,7 +50,7 @@ public static void main(String[] args) {
 						}
 				)
 				// 测试输出响应内容是否能正常返回Content-Length头信息
-				.addAction("test/zeroStr", (req, res) -> {
+				.addAction("test/zeroStr", (req, res)-> {
 					res.write("0");
 					Console.log("Write 0 OK");
 				})

File: hutool-http/src/test/java/cn/hutool/http/server/SimpleServerTest.java
Patch:
@@ -50,7 +50,7 @@ public static void main(String[] args) {
 						}
 				)
 				// 测试输出响应内容是否能正常返回Content-Length头信息
-				.addAction("test/zeroStr", (req, res)-> {
+				.addAction("test/zeroStr", (req, res) -> {
 					res.write("0");
 					Console.log("Write 0 OK");
 				})

File: hutool-cron/src/main/java/cn/hutool/cron/timingwheel/SystemTimer.java
Patch:
@@ -75,6 +75,8 @@ public void stop(){
 
 	/**
 	 * 添加任务
+	 *
+	 * @param timerTask 任务
 	 */
 	public void addTask(TimerTask timerTask) {
 		//添加失败任务直接执行

File: hutool-db/src/main/java/cn/hutool/db/AbstractDb.java
Patch:
@@ -839,6 +839,7 @@ public <T> T page(CharSequence sql, Page page, RsHandler<T> rsh, Object... param
 	/**
 	 * 分页查询
 	 *
+	 * @param <T> 处理结果类型，可以将ResultSet转换为给定类型
 	 * @param sql  SQL构建器
 	 * @param page 分页对象
 	 * @param rsh  结果集处理对象
@@ -879,6 +880,7 @@ public PageResult<Entity> page(CharSequence sql, Page page) throws SQLException
 	 *
 	 * @param sql  SQL语句字符串
 	 * @param page 分页对象
+	 * @param params 参数列表
 	 * @return 结果对象
 	 * @throws SQLException SQL执行异常
 	 * @since 5.5.3

File: hutool-core/src/main/java/cn/hutool/core/io/FileTypeUtil.java
Patch:
@@ -50,6 +50,7 @@ public class FileTypeUtil {
 		FILE_TYPE_MAP.put("255044462d312e", "pdf"); // Adobe Acrobat (pdf)
 		FILE_TYPE_MAP.put("2e524d46000000120001", "rmvb"); // rmvb/rm相同
 		FILE_TYPE_MAP.put("464c5601050000000900", "flv"); // flv与f4v相同
+		FILE_TYPE_MAP.put("0000001C66747970", "mp4");
 		FILE_TYPE_MAP.put("00000020667479706", "mp4");
 		FILE_TYPE_MAP.put("00000018667479706D70", "mp4");
 		FILE_TYPE_MAP.put("49443303000000002176", "mp3");

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1082,7 +1082,7 @@ public static String decimalFormat(String pattern, Object value, RoundingMode ro
 		if(null != roundingMode){
 			decimalFormat.setRoundingMode(roundingMode);
 		}
-		return decimalFormat.format(roundingMode);
+		return decimalFormat.format(value);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java
Patch:
@@ -1185,7 +1185,7 @@ public static String mapToXmlStr(Map<?, ?> data, String rootName, String namespa
 	 * @since 5.1.2
 	 */
 	public static String mapToXmlStr(Map<?, ?> data, String rootName, String namespace, boolean isPretty, boolean omitXmlDeclaration) {
-		return toStr(mapToXml(data, rootName, namespace), CharsetUtil.UTF_8, isPretty);
+		return toStr(mapToXml(data, rootName, namespace), CharsetUtil.UTF_8, isPretty, omitXmlDeclaration);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlPath.java
Patch:
@@ -127,7 +127,7 @@ public String build(Charset charset) {
 
 		final StringBuilder builder = new StringBuilder();
 		for (String segment : segments) {
-			builder.append(CharUtil.SLASH).append(URLUtil.encode(segment, charset));
+			builder.append(CharUtil.SLASH).append(URLUtil.encodePathSegment(segment, charset));
 		}
 		if (withEngTag || StrUtil.isEmpty(builder)) {
 			builder.append(CharUtil.SLASH);

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/BCrypt.java
Patch:
@@ -424,7 +424,9 @@ public static String hashpw(String password, String salt) {
 			off = 3;
 		else {
 			minor = salt.charAt(2);
-			if (minor != 'a' || salt.charAt(3) != '$')
+			// pr#1560@Github
+			// 修正一个在Blowfish实现上的安全风险
+			if ((minor != 'a' && minor != 'x' && minor != 'y' && minor != 'b') || salt.charAt(3) != '$')
 				throw new IllegalArgumentException("Invalid salt revision");
 			off = 4;
 		}

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -15,7 +15,6 @@
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.time.Instant;
-import java.time.LocalDate;
 import java.time.LocalDateTime;
 import java.time.Year;
 import java.time.format.DateTimeFormatter;
@@ -117,7 +116,7 @@ public static DateTime date(Calendar calendar) {
 	 * {@link TemporalAccessor}类型时间转为{@link DateTime}<br>
 	 * 始终根据已有{@link TemporalAccessor} 产生新的{@link DateTime}对象
 	 *
-	 * @param temporalAccessor {@link TemporalAccessor},常用子类： {@link LocalDateTime}、 {@link LocalDate}
+	 * @param temporalAccessor {@link TemporalAccessor},常用子类： {@link LocalDateTime}、 LocalDate
 	 * @return 时间对象
 	 * @since 5.0.0
 	 */

File: hutool-core/src/main/java/cn/hutool/core/date/format/FastDateFormat.java
Patch:
@@ -382,7 +382,7 @@ public int getMaxLengthEstimate() {
 	 * 便捷获取 DateTimeFormatter
 	 * 由于 {@link DatePattern} 很大一部分的格式没有提供 {@link DateTimeFormatter},因此这里提供快捷获取方式
 	 * @return DateTimeFormatter
-	 * @author dazer & neusoft
+	 * @author dazer neusoft
 	 * @since 5.6.4
 	 */
 	public DateTimeFormatter getDateTimeFormatter() {

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -334,7 +334,8 @@ public static boolean isBlankChar(int c) {
 		return Character.isWhitespace(c)
 				|| Character.isSpaceChar(c)
 				|| c == '\ufeff'
-				|| c == '\u202a';
+				|| c == '\u202a'
+				|| c == '\u0000';
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/util/CharUtilTest.java
Patch:
@@ -37,6 +37,9 @@ public void isBlankCharTest(){
 
 		char a3 = '\u3000';
 		Assert.assertTrue(CharUtil.isBlankChar(a3));
+
+		char a4 = '\u0000';
+		Assert.assertTrue(CharUtil.isBlankChar(a4));
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -334,7 +334,8 @@ public static boolean isBlankChar(int c) {
 		return Character.isWhitespace(c)
 				|| Character.isSpaceChar(c)
 				|| c == '\ufeff'
-				|| c == '\u202a';
+				|| c == '\u202a'
+				|| c == '\u0000';
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/util/CharUtilTest.java
Patch:
@@ -37,6 +37,9 @@ public void isBlankCharTest(){
 
 		char a3 = '\u3000';
 		Assert.assertTrue(CharUtil.isBlankChar(a3));
+
+		char a4 = '\u0000';
+		Assert.assertTrue(CharUtil.isBlankChar(a4));
 	}
 
 	@Test

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -1126,7 +1126,7 @@ private HttpResponse sendRedirectIfPossible() {
 			}
 
 			if (responseCode != HttpURLConnection.HTTP_OK) {
-				if (responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_SEE_OTHER) {
+				if (HttpStatus.isRedirected(responseCode)) {
 					setUrl(httpConnection.header(Header.LOCATION));
 					if (redirectCount < this.maxRedirectCount) {
 						redirectCount++;

File: hutool-http/src/main/java/cn/hutool/http/ContentType.java
Patch:
@@ -77,7 +77,7 @@ public String toString(Charset charset) {
 	}
 
 	/**
-	 * 是否为默认Content-Type，默认包括<code>null</code>和application/x-www-form-urlencoded
+	 * 是否为默认Content-Type，默认包括{@code null}和application/x-www-form-urlencoded
 	 *
 	 * @param contentType 内容类型
 	 * @return 是否为默认Content-Type

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -12,7 +12,6 @@
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.net.url.UrlBuilder;
 import cn.hutool.core.util.ArrayUtil;
-import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.http.body.MultipartBody;
@@ -157,7 +156,7 @@ public static void closeCookie() {
 	 * @param url URL
 	 */
 	public HttpRequest(String url) {
-		this(UrlBuilder.ofHttp(url, CharsetUtil.CHARSET_UTF_8));
+		this(UrlBuilder.ofHttp(url));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -419,7 +419,6 @@ public static int digit16(int b) {
 	 * @return 转换后的字符
 	 * @see <a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters#Unicode_symbols">Unicode_symbols</a>
 	 * @see <a href="https://en.wikipedia.org/wiki/Enclosed_Alphanumerics">Alphanumerics</a>
-	 * 有其他特殊的需求，可以到 维基百科 查找说明
 	 * @since 5.6.2
 	 */
 	public static char toCloseChar(char c) {

File: hutool-http/src/main/java/cn/hutool/http/server/HttpServerResponse.java
Patch:
@@ -421,6 +421,7 @@ public void write(InputStream in, String contentType, String fileName) {
 	 * @param length 长度
 	 * @param contentType 返回的类型
 	 * @param fileName    文件名
+	 * @return this
 	 * @since 5.2.7
 	 */
 	public HttpServerResponse write(InputStream in, int length, String contentType, String fileName) {

File: hutool-json/src/main/java/cn/hutool/json/JSONConfig.java
Patch:
@@ -210,6 +210,7 @@ public boolean isStripTrailingZeros() {
 	/**
 	 * 设置是否去除末尾多余0，例如如果为true,5.0返回5
 	 * @param stripTrailingZeros 是否去除末尾多余0，例如如果为true,5.0返回5
+	 * @return this
 	 * @since 5.6.2
 	 */
 	public JSONConfig setStripTrailingZeros(boolean stripTrailingZeros) {

File: hutool-core/src/main/java/cn/hutool/core/lang/Validator.java
Patch:
@@ -951,6 +951,9 @@ public static <T extends CharSequence> T validatePlateNumber(T value, String err
 	 * @return 是否为URL
 	 */
 	public static boolean isUrl(CharSequence value) {
+		if(StrUtil.isBlank(value)){
+			return false;
+		}
 		try {
 			new java.net.URL(StrUtil.str(value));
 		} catch (MalformedURLException e) {

File: hutool-system/src/test/java/cn/hutool/system/OshiTest.java
Patch:
@@ -6,9 +6,9 @@
 import org.junit.Test;
 
 public class OshiTest {
-	
+
 	@Test
-	public void getMemeryTest() {
+	public void getMemoryTest() {
 		long total = OshiUtil.getMemory().getTotal();
 		Assert.assertTrue(total > 0);
 	}

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -1365,7 +1365,8 @@ public static <T> T[] removeEle(T[] array, T element) throws IllegalArgumentExce
 	 * @return 变更后的原数组
 	 * @since 3.0.9
 	 */
-	public static <T> T[] reverse(T[] array, final int startIndexInclusive, final int endIndexExclusive) {
+	public static <T> T[]
+	reverse(T[] array, final int startIndexInclusive, final int endIndexExclusive) {
 		if (isEmpty(array)) {
 			return array;
 		}

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlPath.java
Patch:
@@ -128,7 +128,7 @@ public String build(Charset charset) {
 
 		final StringBuilder builder = new StringBuilder();
 		for (String segment : segments) {
-			builder.append(CharUtil.SLASH).append(URLUtil.encodeQuery(segment, charset));
+			builder.append(CharUtil.SLASH).append(URLUtil.encode(segment, charset));
 		}
 		if (withEngTag || StrUtil.isEmpty(builder)) {
 			builder.append(CharUtil.SLASH);

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlPath.java
Patch:
@@ -128,7 +128,7 @@ public String build(Charset charset) {
 
 		final StringBuilder builder = new StringBuilder();
 		for (String segment : segments) {
-			builder.append(CharUtil.SLASH).append(URLUtil.encodeAll(segment, charset));
+			builder.append(CharUtil.SLASH).append(URLUtil.encodeQuery(segment, charset));
 		}
 		if (withEngTag || StrUtil.isEmpty(builder)) {
 			builder.append(CharUtil.SLASH);

File: hutool-core/src/main/java/cn/hutool/core/text/SpecialSymbolUtil.java
Patch:
@@ -2,7 +2,7 @@
 
 /**
  * 符号工具类
- * @author 段大志
+ * @author dazer & neusoft
  * @date 2021/3/26 12:21
  * 别名：Symbol or special signal or Special symbols
  * 说明：获取常见的特殊符号，如：带圈数字、

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -836,6 +836,9 @@ public static DateTime parseUTC(String utcString) {
 			} else if (length == DatePattern.UTC_SIMPLE_PATTERN.length() - 2) {
 				// 格式类似：2018-09-13T05:34:31
 				return parse(utcString, DatePattern.UTC_SIMPLE_FORMAT);
+			} else if (StrUtil.contains(utcString, CharUtil.DOT)){
+				// 可能为：  2021-03-17T06:31:33.99
+				return parse(utcString, DatePattern.UTC_SIMPLE_MS_FORMAT);
 			}
 		}
 		// 没有更多匹配的时间格式

File: hutool-core/src/main/java/cn/hutool/core/io/unit/DataUnit.java
Patch:
@@ -44,7 +44,7 @@ public enum DataUnit {
 	 */
 	TERABYTES("TB", DataSize.ofTerabytes(1));
 
-	public static final String[] UNIT_NAMES = new String[]{"B", "kB", "MB", "GB", "TB", "PB", "EB"};
+	public static final String[] UNIT_NAMES = new String[]{"B", "KB", "MB", "GB", "TB", "PB", "EB"};
 
 	private final String suffix;
 
@@ -61,7 +61,7 @@ DataSize size() {
 	}
 
 	/**
-	 * 通过后缀返回对应的 {@link DataUnit}
+	 * 通过后缀返回对应的 DataUnit
 	 *
 	 * @param suffix 单位后缀
 	 * @return 匹配到的{@link DataUnit}

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java
Patch:
@@ -285,7 +285,7 @@ private boolean isMatchGetter(String methodName, String fieldName, boolean isBoo
 		}
 
 		// 包括boolean的任何类型只有一种匹配情况：name -》 getName
-		return methodName.equals("get" + fieldName);
+		return methodName.equals("get" + handledFieldName);
 	}
 
 	/**
@@ -322,10 +322,10 @@ private boolean isMatchSetter(String methodName, String fieldName, boolean isBoo
 		}
 
 		// 针对Boolean类型特殊检查
-		if (isBooleanField && handledFieldName.startsWith("is")) {
+		if (isBooleanField && fieldName.startsWith("is")) {
 			// 字段是is开头
 			if (methodName.equals("set" + StrUtil.removePrefix(fieldName, "is"))// isName -》 setName
-					|| methodName.equals("set" + fieldName)// isName -》 setIsName
+					|| methodName.equals("set" + handledFieldName)// isName -》 setIsName
 			) {
 				return true;
 			}

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -216,7 +216,6 @@ public void toBeanTest2() {
 	@Test
 	public void toBeanWithNullTest() {
 		String jsonStr = "{'data':{'userName':'ak','password': null}}";
-		Console.log(JSONUtil.parseObj(jsonStr));
 		UserWithMap user = JSONUtil.toBean(JSONUtil.parseObj(jsonStr), UserWithMap.class);
 		Assert.assertTrue(user.getData().containsKey("password"));
 	}
@@ -518,7 +517,7 @@ public void setEntryTest(){
 		final Map.Entry<String, String> next = entries.iterator().next();
 
 		final JSONObject jsonObject = JSONUtil.parseObj(next);
-		Console.log(jsonObject);
+		Assert.assertEquals("{\"test\":\"testValue\"}", jsonObject.toString());
 	}
 
 	@Test(expected = JSONException.class)
@@ -533,7 +532,7 @@ public void floatTest(){
 		map.put("c", 2.0F);
 
 		final String s = JSONUtil.toJsonStr(map);
-		Console.log(s);
+		Assert.assertEquals("{\"c\":2}", s);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3311,7 +3311,7 @@ public static void tail(File file, Charset charset) {
 	private static File buildFile(File outFile, String fileName) {
 		// 替换Windows路径分隔符为Linux路径分隔符，便于统一处理
 		fileName = fileName.replace('\\', '/');
-		if (false == FileUtil.isWindows()
+		if (false == isWindows()
 				// 检查文件名中是否包含"/"，不考虑以"/"结尾的情况
 				&& fileName.lastIndexOf(CharUtil.SLASH, fileName.length() - 2) > 0) {
 			// 在Linux下多层目录创建存在问题，/会被当成文件名的一部分，此处做处理

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16Checksum.java
Patch:
@@ -47,7 +47,7 @@ public String getHexValue(){
 	public String getHexValue(boolean isPadding){
 		String hex = HexUtil.toHex(getValue());
 		if(isPadding){
-			hex = StrUtil.padAfter(hex, 4, '0');
+			hex = StrUtil.padPre(hex, 4, '0');
 		}
 
 		return hex;

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlQuery.java
Patch:
@@ -222,7 +222,7 @@ public String build(Charset charset) {
 				sb.append("&");
 			}
 			key = entry.getKey();
-			if (StrUtil.isNotEmpty(key)) {
+			if (null != key) {
 				sb.append(URLUtil.encodeAll(StrUtil.str(key), charset));
 				value = entry.getValue();
 				if (null != value) {

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1294,8 +1294,8 @@ public static int[] generateRandomNumber(int begin, int end, int size, int[] see
 			end = temp;
 		}
 		// 加入逻辑判断，确保begin<end并且size不能大于该表示范围
-		Assert.isTrue((end - begin) > size, "Size is larger than range between begin and end!");
-		Assert.isTrue(seed.length > size, "Size is larger than seed size!");
+		Assert.isTrue((end - begin) >= size, "Size is larger than range between begin and end!");
+		Assert.isTrue(seed.length >= size, "Size is larger than seed size!");
 
 		final int[] ranArr = new int[size];
 		// 数量你可以自己定义。

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -361,6 +361,7 @@ public void toStrTest(){
 
 	@Test
 	public void generateRandomNumberTest2(){
+		// 检查边界
 		final int[] ints = NumberUtil.generateRandomNumber(1, 8, 7);
 		Assert.assertEquals(7, ints.length);
 		final Set<?> set = Convert.convert(Set.class, ints);

File: hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java
Patch:
@@ -200,7 +200,7 @@ public ExecutorBuilder setAllowCoreThreadTimeOut(boolean allowCoreThreadTimeOut)
 	/**
 	 * 创建ExecutorBuilder，开始构建
 	 *
-	 * @return {@link ExecutorBuilder}
+	 * @return this
 	 */
 	public static ExecutorBuilder create() {
 		return new ExecutorBuilder();
@@ -227,7 +227,7 @@ public ExecutorService buildFinalizable() {
 	/**
 	 * 构建ThreadPoolExecutor
 	 *
-	 * @param builder {@link ExecutorBuilder}
+	 * @param builder this
 	 * @return {@link ThreadPoolExecutor}
 	 */
 	private static ThreadPoolExecutor build(ExecutorBuilder builder) {

File: hutool-core/src/main/java/cn/hutool/core/io/unit/DataUnit.java
Patch:
@@ -44,7 +44,7 @@ public enum DataUnit {
 	 */
 	TERABYTES("TB", DataSize.ofTerabytes(1));
 
-	public static final String[] UNIT_NAMES = new String[]{"B", "kB", "MB", "GB", "TB", "EB"};
+	public static final String[] UNIT_NAMES = new String[]{"B", "kB", "MB", "GB", "TB", "PB", "EB"};
 
 	private final String suffix;
 
@@ -77,4 +77,4 @@ public static DataUnit fromSuffix(String suffix) {
 		throw new IllegalArgumentException("Unknown data unit suffix '" + suffix + "'");
 	}
 
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/io/FileTypeUtil.java
Patch:
@@ -60,7 +60,7 @@ public class FileTypeUtil {
 		FILE_TYPE_MAP.put("4d546864000000060001", "mid"); // MIDI (mid)
 		FILE_TYPE_MAP.put("526172211a0700cf9073", "rar"); // WinRAR
 		FILE_TYPE_MAP.put("235468697320636f6e66", "ini");
-		FILE_TYPE_MAP.put("504B0304140000000800", "odf"); // ofd文件 国标版式文件
+		FILE_TYPE_MAP.put("504B0304140000000800", "ofd"); // ofd文件 国标版式文件
 		FILE_TYPE_MAP.put("504B03040a0000000000", "jar");
 		FILE_TYPE_MAP.put("504B0304140008000800", "jar");
 		// MS Excel 注意：word、msi 和 excel的文件头一样

File: hutool-core/src/test/java/cn/hutool/core/io/FileTypeUtilTest.java
Patch:
@@ -53,7 +53,7 @@ public void ofdTest() {
 		Console.log(hex);
 		String type = FileTypeUtil.getType(file);
 		Console.log(type);
-		Assert.assertEquals("odf", type);
+		Assert.assertEquals("ofd", type);
 	}
 
 }

File: hutool-json/src/main/java/cn/hutool/json/XML.java
Patch:
@@ -62,7 +62,7 @@ public class XML {
 	/**
 	 * 转换XML为JSONObject
 	 * 转换过程中一些信息可能会丢失，JSON中无法区分节点和属性，相同的节点将被处理为JSONArray。
-	 * Content text may be placed in a "content" member. Comments, prologs, DTDs, and <code>&lt;[ [ ]]&gt;</code> are ignored.
+	 * Content text may be placed in a "content" member. Comments, prologs, DTDs, and {@code <[ [ ]]>} are ignored.
 	 *
 	 * @param string The source string.
 	 * @return A JSONObject containing the structured data from the XML string.
@@ -75,7 +75,7 @@ public static JSONObject toJSONObject(String string) throws JSONException {
 	/**
 	 * 转换XML为JSONObject
 	 * 转换过程中一些信息可能会丢失，JSON中无法区分节点和属性，相同的节点将被处理为JSONArray。
-	 * Content text may be placed in a "content" member. Comments, prologs, DTDs, and <code>&lt;[ [ ]]&gt;</code> are ignored.
+	 * Content text may be placed in a "content" member. Comments, prologs, DTDs, and {@code <[ [ ]]>} are ignored.
 	 * All values are converted as strings, for 1, 01, 29.0 will not be coerced to numbers but will instead be the exact value as seen in the XML document.
 	 *
 	 * @param string      The source string.

File: hutool-poi/src/main/java/cn/hutool/poi/word/Word07Writer.java
Patch:
@@ -21,7 +21,7 @@
 import java.io.OutputStream;
 
 /**
- * Word生成器
+ * Word docx生成器
  *
  * @author looly
  * @since 4.4.1

File: hutool-socket/src/main/java/cn/hutool/socket/nio/NioClient.java
Patch:
@@ -66,6 +66,7 @@ public NioClient init(InetSocketAddress address) {
 			//noinspection StatementWithEmptyBody
 			while (false == channel.finishConnect()){}
 		} catch (IOException e) {
+			close();
 			throw new IORuntimeException(e);
 		}
 		return this;

File: hutool-core/src/test/java/cn/hutool/core/lang/ClassScanerTest.java
Patch:
@@ -1,12 +1,12 @@
 package cn.hutool.core.lang;
 
-import java.util.Set;
-
 import org.junit.Ignore;
 import org.junit.Test;
 
+import java.util.Set;
+
 public class ClassScanerTest {
-	
+
 	@Test
 	@Ignore
 	public void scanTest() {

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/PemUtilTest.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.crypto.asymmetric.KeyType;
 import cn.hutool.crypto.asymmetric.RSA;
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.security.PrivateKey;
@@ -44,6 +45,7 @@ public void validateKey() {
 	}
 
 	@Test
+	@Ignore
 	public void readECPrivateKeyTest() {
 		PrivateKey privateKey = PemUtil.readPemPrivateKey(ResourceUtil.getStream("test_ec_private_key.pem"));
 		Assert.assertNotNull(privateKey);

File: hutool-http/src/main/java/cn/hutool/http/server/HttpServerResponse.java
Patch:
@@ -378,6 +378,7 @@ public HttpServerResponse write(File file) {
 	 * 返回文件给客户端（文件下载）
 	 *
 	 * @param file 写出的文件对象
+	 * @param fileName 文件名
 	 * @return this
 	 * @since 5.5.8
 	 */
@@ -417,6 +418,7 @@ public void write(InputStream in, String contentType, String fileName) {
 	 * 返回文件数据给客户端（文件下载）
 	 *
 	 * @param in          需要返回客户端的内容
+	 * @param length 长度
 	 * @param contentType 返回的类型
 	 * @param fileName    文件名
 	 * @since 5.2.7

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelBase.java
Patch:
@@ -324,7 +324,7 @@ public CellStyle createRowStyle(int y) {
 	}
 
 	/**
-	 * 获取或创建某一行的样式，返回样式后可以设置样式内容<br>
+	 * 获取或创建某一列的样式，返回样式后可以设置样式内容<br>
 	 * 需要注意，此方法返回行样式，设置背景色在单元格设置值后会被覆盖，需要单独设置其单元格的样式。
 	 *
 	 * @param x X坐标，从0计数，即列号
@@ -337,7 +337,7 @@ public CellStyle getOrCreateColumnStyle(int x) {
 	}
 
 	/**
-	 * 创建某一行的样式，返回样式后可以设置样式内容
+	 * 创建某一列的样式，返回样式后可以设置样式内容
 	 *
 	 * @param x X坐标，从0计数，即列号
 	 * @return {@link CellStyle}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/style/StyleUtil.java
Patch:
@@ -206,6 +206,7 @@ public static boolean isNullOrDefaultStyle(Workbook workbook, CellStyle style) {
 	/**
 	 * 创建数据格式并获取格式
 	 *
+	 * @param workbook {@link Workbook}
 	 * @param format 数据格式
 	 * @return 数据格式
 	 * @since 5.5.5

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -967,7 +967,7 @@ public static String numberToWord(Number number) {
 	 * 将阿拉伯数字转为精简表示形式，例如:
 	 *
 	 * <pre>
-	 *     1200 -> 1.2k
+	 *     1200 -》 1.2k
 	 * </pre>
 	 *
 	 * @param number {@link Number}对象

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberWordFormatter.java
Patch:
@@ -37,7 +37,7 @@ public static String format(Object x) {
 	}
 
 	/**
-	 * 将阿拉伯数字转化为简洁计数单位，例如 2100 => 2.1k
+	 * 将阿拉伯数字转化为简洁计数单位，例如 2100 =》 2.1k
 	 * 范围默认只到w
 	 *
 	 * @param value 被格式化的数字
@@ -49,7 +49,7 @@ public static String formatSimple(long value) {
 	}
 
 	/**
-	 * 将阿拉伯数字转化为简介计数单位，例如 2100 => 2.1k
+	 * 将阿拉伯数字转化为简介计数单位，例如 2100 =》 2.1k
 	 *
 	 * @param value 对应数字的值
 	 * @param isTwo 控制是否为只为k、w，例如当为{@code false}时返回4.38m，{@code true}返回438.43w

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2780,11 +2780,11 @@ public static <T extends Comparable<? super T>> T max(Collection<T> coll) {
 	}
 
 	/**
-	 * 取最大值
+	 * 取最小值
 	 *
 	 * @param <T>  元素类型
 	 * @param coll 集合
-	 * @return 最大值
+	 * @return 最小值
 	 * @see Collections#min(Collection)
 	 * @since 4.6.5
 	 */

File: hutool-crypto/src/main/java/cn/hutool/crypto/SmUtil.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  * SM国密算法工具类<br>
- * 此工具类依赖org.bouncycastle:bcpkix-jdk15on
+ * 此工具类依赖org.bouncycastle:bcprov-jdk15to18
  *
  * @author looly
  * @since 4.3.2

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -652,7 +652,7 @@ private void init(Object source) {
 			return;
 		}
 
-		if(ArrayUtil.isArray(source)){
+		if(ArrayUtil.isArray(source) || source instanceof JSONArray){
 			// 不支持集合类型转换为JSONObject
 			throw new JSONException("Unsupported type [{}] to JSONObject!", source.getClass());
 		}

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -736,7 +736,7 @@ public static Object wrap(Object object, JSONConfig jsonConfig) {
 		}
 
 		try {
-			// fix issue#1401@Github
+			// fix issue#1399@Github
 			if(object instanceof SQLException){
 				return object.toString();
 			}

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -183,7 +183,7 @@ public void parseObjTest() {
 
 	@Test
 	public void sqlExceptionTest(){
-		//https://github.com/looly/hutool/issues/1401
+		//https://github.com/looly/hutool/issues/1399
 		// SQLException实现了Iterable接口，默认是遍历之，会栈溢出，修正后只返回string
 		final JSONObject set = JSONUtil.createObj().set("test", new SQLException("test"));
 		Assert.assertEquals("{\"test\":\"java.sql.SQLException: test\"}", set.toString());

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -24,7 +24,6 @@
 import java.math.BigInteger;
 import java.util.Collection;
 import java.util.Enumeration;
-import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.ResourceBundle;
@@ -653,7 +652,7 @@ private void init(Object source) {
 			return;
 		}
 
-		if(ArrayUtil.isArray(source) || source instanceof Iterable || source instanceof Iterator){
+		if(ArrayUtil.isArray(source)){
 			// 不支持集合类型转换为JSONObject
 			throw new JSONException("Unsupported type [{}] to JSONObject!", source.getClass());
 		}

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -801,7 +801,7 @@ public static boolean isJsonObj(String str) {
 		if (StrUtil.isBlank(str)) {
 			return false;
 		}
-		return StrUtil.isWrap(str.trim(), '{', '}');
+		return StrUtil.isWrap(StrUtil.trim(str), '{', '}');
 	}
 
 	/**
@@ -815,7 +815,7 @@ public static boolean isJsonArray(String str) {
 		if (StrUtil.isBlank(str)) {
 			return false;
 		}
-		return StrUtil.isWrap(str.trim(), '[', ']');
+		return StrUtil.isWrap(StrUtil.trim(str), '[', ']');
 	}
 
 	/**

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -179,4 +179,4 @@ public void parseObjTest() {
 				"    \"test\": \"\\\\地库地库\",\n" +
 				"}");
 	}
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -803,7 +803,7 @@ public static <K, V> TreeMap<K, V> sort(Map<K, V> map, Comparator<? super K> com
 	 * @param <K> 键类型
 	 * @param <V> 值类型
 	 * @param isDesc 是否倒序
-	 * @return Map<k, V> 排序后新的Map
+	 * @return 排序后新的Map
 	 * @since 5.5.8
 	 */
 	public static <K, V extends Comparable<? super V>> Map<K, V> sortByValue(Map<K, V> map, boolean isDesc) {

File: hutool-core/src/test/java/cn/hutool/core/text/csv/CsvUtilTest.java
Patch:
@@ -44,9 +44,10 @@ public void readTest2() {
 	}
 
 	@Test
+	@Ignore
 	public void readTest3() {
 		CsvReader reader = CsvUtil.getReader();
-		reader.read(FileUtil.getUtf8Reader("test.csv"), Console::log);
+		reader.read(FileUtil.getUtf8Reader("d:/test/test.csv"), Console::log);
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -683,7 +683,7 @@ public ExcelWriter merge(int lastColumn, Object content) {
 	 *
 	 * @param lastColumn       合并到的最后一个列号
 	 * @param content          合并单元格后的内容
-	 * @param isSetHeaderStyle 是否为合并后的单元格设置默认标题样式
+	 * @param isSetHeaderStyle 是否为合并后的单元格设置默认标题样式，只提取边框样式
 	 * @return this
 	 * @since 4.0.10
 	 */
@@ -710,7 +710,7 @@ public ExcelWriter merge(int lastColumn, Object content, boolean isSetHeaderStyl
 	 * @param firstColumn      起始列，0开始
 	 * @param lastColumn       结束列，0开始
 	 * @param content          合并单元格后的内容
-	 * @param isSetHeaderStyle 是否为合并后的单元格设置默认标题样式
+	 * @param isSetHeaderStyle 是否为合并后的单元格设置默认标题样式，只提取边框样式
 	 * @return this
 	 * @since 4.0.10
 	 */

File: hutool-core/src/main/java/cn/hutool/core/compiler/JavaSourceCompiler.java
Patch:
@@ -1,5 +1,6 @@
 package cn.hutool.core.compiler;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.io.resource.FileResource;
@@ -182,9 +183,9 @@ public ClassLoader compile() {
 		// classpath
 		final List<String> options = new ArrayList<>();
 		if (false == classPath.isEmpty()) {
-			final List<String> cp = classPath.stream().map(File::getAbsolutePath).collect(Collectors.toList());
+			final List<String> cp = CollUtil.map(classPath, File::getAbsolutePath, true);
 			options.add("-cp");
-			options.addAll(cp);
+			options.add(CollUtil.join(cp, FileUtil.isWindows() ? ";" : ":"));
 		}
 
 		// 编译文件

File: hutool-core/src/test/java/cn/hutool/core/compiler/JavaSourceCompilerTest.java
Patch:
@@ -33,11 +33,12 @@ public void testCompile() throws ClassNotFoundException {
 				.addSource(FileUtil.file("test-compile/b/B.java"))
 				.addSource("c.C", FileUtil.readUtf8String("test-compile/c/C.java"))
 				.addLibrary(libFile)
+//				.addLibrary(FileUtil.file("D:\\m2_repo\\cn\\hutool\\hutool-all\\5.5.7\\hutool-all-5.5.7.jar"))
 				.compile();
 		final Class<?> clazz = classLoader.loadClass("c.C");
 		Object obj = ReflectUtil.newInstance(clazz);
 		Assert.assertTrue(String.valueOf(obj).startsWith("c.C@"));
 		FileUtil.del(libFile);
 	}
 
-}
\ No newline at end of file
+}

File: hutool-extra/src/test/java/cn/hutool/extra/compress/ExtractorTest.java
Patch:
@@ -9,11 +9,11 @@
 public class ExtractorTest {
 
 	@Test
-	@Ignore
+//	@Ignore
 	public void zipTest(){
 		Extractor extractor = CompressUtil.createExtractor(
 				CharsetUtil.defaultCharset(),
-				FileUtil.file("d:/test/compress/test.zip"));
+				FileUtil.file("d:/test/c_1344112734760931330_20201230104703032.zip"));
 
 		extractor.extract(FileUtil.file("d:/test/compress/test2/"));
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/ftp/AbstractFtp.java
Patch:
@@ -41,7 +41,7 @@ protected AbstractFtp(FtpConfig config) {
 	public abstract AbstractFtp reconnectIfTimeout();
 
 	/**
-	 * 打开指定目录
+	 * 打开指定目录，具体逻辑取决于实现，例如在FTP中，进入失败返回{@code false}， SFTP中则抛出异常
 	 *
 	 * @param directory directory
 	 * @return 是否打开目录

File: hutool-cache/src/main/java/cn/hutool/cache/Cache.java
Patch:
@@ -83,7 +83,7 @@ default V get(K key, Func0<V> supplier) {
 	 * <p>
 	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回{@code null}，否则返回值。
 	 * <p>
-	 * 每次调用此方法会刷新最后访问时间，也就是说会重新计算超时时间。
+	 * 每次调用此方法会可选是否刷新最后访问时间，{@code true}表示会重新计算超时时间。
 	 *
 	 * @param key                键
 	 * @param isUpdateLastAccess 是否更新最后访问时间，即重新计算超时时间。
@@ -96,6 +96,8 @@ default V get(K key, Func0<V> supplier) {
 	 * 从缓存中获得对象，当对象不在缓存中或已经过期返回{@code null}
 	 * <p>
 	 * 调用此方法时，会检查上次调用时间，如果与当前时间差值大于超时时间返回{@code null}，否则返回值。
+	 * <p>
+	 * 每次调用此方法会可选是否刷新最后访问时间，{@code true}表示会重新计算超时时间。
 	 *
 	 * @param key                键
 	 * @param isUpdateLastAccess 是否更新最后访问时间，即重新计算超时时间。

File: hutool-cache/src/main/java/cn/hutool/cache/impl/LRUCache.java
Patch:
@@ -40,7 +40,7 @@ public LRUCache(int capacity, long timeout) {
 
 		this.capacity = capacity;
 		this.timeout = timeout;
-		
+
 		//链表key按照访问顺序排序，调用get方法后，会将这次访问的元素移至头部
 		cacheMap = new FixedLinkedHashMap<>(capacity);
 	}

File: hutool-cache/src/main/java/cn/hutool/cache/impl/WeakCache.java
Patch:
@@ -6,7 +6,7 @@
  * 弱引用缓存<br>
  * 对于一个给定的键，其映射的存在并不阻止垃圾回收器对该键的丢弃，这就使该键成为可终止的，被终止，然后被回收。<br>
  * 丢弃某个键时，其条目从映射中有效地移除。<br>
- * 
+ *
  * @author Looly
  *
  * @param <K> 键
@@ -18,7 +18,7 @@ public class WeakCache<K, V> extends TimedCache<K, V>{
 	private static final long serialVersionUID = 1L;
 
 	public WeakCache(long timeout) {
-		super(timeout, new WeakHashMap<K, CacheObj<K, V>>());
+		super(timeout, new WeakHashMap<>());
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -399,7 +399,7 @@ public static String format(LocalDate date, String format) {
 	 *
 	 * @param time   {@link LocalDateTime}
 	 * @param number 偏移量，正数为向后偏移，负数为向前偏移
-	 * @param field  偏移单位，见{@link ChronoField}，不能为null
+	 * @param field  偏移单位，见{@link ChronoUnit}，不能为null
 	 * @return 偏移后的日期时间
 	 */
 	public static LocalDateTime offset(LocalDateTime time, long number, TemporalUnit field) {

File: hutool-cache/src/test/java/cn/hutool/cache/test/CacheConcurrentTest.java
Patch:
@@ -102,7 +102,7 @@ public void effectiveTest() {
 			});
 		});
 		long interval = concurrencyTester.getInterval();
-		// 总耗时应与单词操作耗时在同一个数量级
+		// 总耗时应与单次操作耗时在同一个数量级
 		Assert.assertTrue(interval < delay * 2);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -135,7 +135,7 @@ public static UrlBuilder of(URL url, Charset charset) {
 	 * @return UrlBuilder
 	 */
 	public static UrlBuilder of(String scheme, String host, int port, String path, String query, String fragment, Charset charset) {
-		return of(scheme, host, port, UrlPath.of(path, charset), UrlQuery.of(query, charset), fragment, charset);
+		return of(scheme, host, port, UrlPath.of(path, charset), UrlQuery.of(query, charset, false), fragment, charset);
 	}
 
 	/**
@@ -504,4 +504,4 @@ public String toString() {
 		return build();
 	}
 
-}
\ No newline at end of file
+}

File: hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java
Patch:
@@ -332,7 +332,7 @@ public static String encodeAll(String url) {
 	 * @throws UtilException UnsupportedEncodingException
 	 */
 	public static String encodeAll(String url, Charset charset) throws UtilException {
-		if (null == charset) {
+		if (null == charset || StrUtil.isEmpty(url)) {
 			return url;
 		}
 
@@ -870,4 +870,4 @@ public static String getDataUri(String mimeType, Charset charset, String encodin
 
 		return builder.toString();
 	}
-}
\ No newline at end of file
+}

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/AESTest.java
Patch:
@@ -60,7 +60,6 @@ public void encryptPKCS7Test() {
 	 * <p>
 	 * AES在线解密 AES在线加密 Aes online hex 十六进制密钥 - The X 在线工具
 	 * https://the-x.cn/cryptography/Aes.aspx
-	 * <p>
 	 */
 	@Test
 	public void encryptPKCS7Test2() {

File: hutool-core/src/main/java/cn/hutool/core/lang/Console.java
Patch:
@@ -85,6 +85,7 @@ public static void log(String template, Object... values) {
 	public static void log(Throwable t, String template, Object... values) {
 		out.println(StrUtil.format(template, values));
 		if (null != t) {
+			//noinspection CallToPrintStackTrace
 			t.printStackTrace();
 			out.flush();
 		}

File: hutool-core/src/main/java/cn/hutool/core/lang/Console.java
Patch:
@@ -286,7 +286,7 @@ public static Scanner scanner() {
 	 * @since 3.3.1
 	 */
 	public static String input() {
-		return scanner().next();
+		return scanner().nextLine();
 	}
 
 	// --------------------------------------------------------------------------------- console lineNumber

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/asymmetric/SM2Test.java
Patch:
@@ -31,6 +31,7 @@ public class SM2Test {
 	@Test
 	public void generateKeyPairTest() {
 		KeyPair pair = SecureUtil.generateKeyPair("SM2");
+		Console.log(HexUtil.encodeHexStr(pair.getPublic().getEncoded()));
 		Assert.assertNotNull(pair.getPrivate());
 		Assert.assertNotNull(pair.getPublic());
 	}
@@ -242,5 +243,4 @@ public void encryptAndSignTest(){
 		byte[] dec =  sm2.decrypt(data, KeyType.PrivateKey);
 		Assert.assertArrayEquals(dec, src.getBytes());
 	}
-
 }

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -2922,6 +2922,7 @@ public static File writeFromStream(InputStream in, File dest) throws IORuntimeEx
 	 *
 	 * @param dest 目标文件
 	 * @param in   输入流
+	 * @param isCloseIn 是否关闭输入流
 	 * @return dest
 	 * @throws IORuntimeException IO异常
 	 * @since 5.5.6

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvWriter.java
Patch:
@@ -224,6 +224,7 @@ public CsvWriter writeLine(String... fields) throws IORuntimeException {
 	/**
 	 * 追加新行（换行）
 	 *
+	 * @return this
 	 * @throws IORuntimeException IO异常
 	 */
 	public CsvWriter writeLine() throws IORuntimeException {

File: hutool-core/src/main/java/cn/hutool/core/net/DefaultTrustManager.java
Patch:
@@ -1,12 +1,13 @@
-package cn.hutool.http.ssl;
+package cn.hutool.core.net;
 
 import javax.net.ssl.X509TrustManager;
 import java.security.cert.X509Certificate;
 
 /**
- * 证书管理
+ * 默认信任管理器，默认信任所有客户端和服务端证书
  *
  * @author Looly
+ * @since 5.5.7
  */
 public class DefaultTrustManager implements X509TrustManager {
 

File: hutool-core/src/main/java/cn/hutool/core/net/SSLContextBuilder.java
Patch:
@@ -52,7 +52,7 @@ public class SSLContextBuilder {
 
 	private String protocol = TLS;
 	private KeyManager[] keyManagers;
-	private TrustManager[] trustManagers;
+	private TrustManager[] trustManagers = {new DefaultTrustManager()};
 	private SecureRandom secureRandom = new SecureRandom();
 
 

File: hutool-http/src/test/java/cn/hutool/http/HttpUtilTest.java
Patch:
@@ -4,9 +4,6 @@
 import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.ReUtil;
-import cn.hutool.http.Header;
-import cn.hutool.http.HttpRequest;
-import cn.hutool.http.HttpUtil;
 import org.junit.Assert;
 import org.junit.Ignore;
 import org.junit.Test;

File: hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java
Patch:
@@ -253,7 +253,7 @@ private static String formatDate(Object dateObj, String format) {
 		//默认使用时间戳
 		long timeMillis;
 		if (dateObj instanceof TemporalAccessor) {
-			timeMillis = DateUtil.toInstant((TemporalAccessor) dateObj).toEpochMilli();
+			timeMillis = TemporalAccessorUtil.toEpochMilli((TemporalAccessor) dateObj);
 		} else if (dateObj instanceof Date) {
 			timeMillis = ((Date) dateObj).getTime();
 		} else if (dateObj instanceof Calendar) {

File: hutool-json/src/main/java/cn/hutool/json/JSONString.java
Patch:
@@ -1,8 +1,8 @@
 package cn.hutool.json;
 
 /**
- * <code>JSONString</code>接口定义了一个<code>toJSONString()</code><br>
- * 实现此接口的类可以通过实现<code>toJSONString()</code>方法来改变转JSON字符串的方式。
+ * {@code JSONString}接口定义了一个{@code toJSONString()}<br>
+ * 实现此接口的类可以通过实现{@code toJSONString()}方法来改变转JSON字符串的方式。
  * 
  * @author Looly
  *

File: hutool-json/src/main/java/cn/hutool/json/JSONSupport.java
Patch:
@@ -35,7 +35,7 @@ public String toJSONString() {
 	 * @return 美化的JSON
 	 */
 	public String toPrettyString() {
-		return toJSON().toJSONString(4);
+		return toJSON().toStringPretty();
 	}
 
 	@Override

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -218,7 +218,7 @@ public static JSON parse(Object obj, JSONConfig config) {
 			json = (JSON) obj;
 		} else if (obj instanceof CharSequence) {
 			final String jsonStr = StrUtil.trim((CharSequence) obj);
-			json = StrUtil.startWith(jsonStr, '[') ? parseArray(jsonStr) : parseObj(jsonStr);
+			json = isJsonArray(jsonStr) ? parseArray(jsonStr, config) : parseObj(jsonStr, config);
 		} else if (obj instanceof Iterable || obj instanceof Iterator || ArrayUtil.isArray(obj)) {// 列表
 			json = new JSONArray(obj, config);
 		} else {// 对象

File: hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
Patch:
@@ -377,6 +377,9 @@ public void getMimeTypeTest() {
 		String mimeType = FileUtil.getMimeType("test2Write.jpg");
 		Assert.assertEquals("image/jpeg", mimeType);
 
+		mimeType = FileUtil.getMimeType("test2Write.html");
+		Assert.assertEquals("text/html", mimeType);
+
 		mimeType = FileUtil.getMimeType("main.css");
 		Assert.assertEquals("text/css", mimeType);
 

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricAlgorithm.java
Patch:
@@ -8,7 +8,7 @@
  *
  */
 public enum SymmetricAlgorithm {
-	/** 默认的AES加密方式：AES/CBC/PKCS5Padding */
+	/** 默认的AES加密方式：AES/ECB/PKCS5Padding */
 	AES("AES"), 
 	ARCFOUR("ARCFOUR"), 
 	Blowfish("Blowfish"), 

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -1064,10 +1064,10 @@ private void initConnection() {
 
 		this.httpConnection = HttpConnection
 				.create(this.url.toURL(this.urlHandler), this.proxy)//
-				.setMethod(this.method)//
-				.setHttpsInfo(this.hostnameVerifier, this.ssf)//
 				.setConnectTimeout(this.connectionTimeout)//
 				.setReadTimeout(this.readTimeout)//
+				.setMethod(this.method)//
+				.setHttpsInfo(this.hostnameVerifier, this.ssf)//
 				// 定义转发
 				.setInstanceFollowRedirects(this.maxRedirectCount > 0)
 				// 流方式上传数据

File: hutool-http/src/test/java/cn/hutool/http/HttpRequestTest.java
Patch:
@@ -25,7 +25,7 @@ public class HttpRequestTest {
 	@Test
 	@Ignore
 	public void getHttpsTest() {
-		String body = HttpRequest.get("https://www.gjifa.com/pc/").execute().body();
+		String body = HttpRequest.get("https://www.hutool.cn/").timeout(10).execute().body();
 		Console.log(body);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -47,7 +47,7 @@ public class CharUtil {
 	public static final char AMP = '&';
 	/** 字符常量：冒号 {@code ':'} */
 	public static final char COLON = ':';
-	/** 字符常量：艾特 <code>'@'</code> */
+	/** 字符常量：艾特 {@code '@'} */
 	public static final char AT = '@';
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/server/action/RootAction.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.io.FileUtil;
-import cn.hutool.core.lang.Console;
 import cn.hutool.http.server.HttpServerRequest;
 import cn.hutool.http.server.HttpServerResponse;
 
@@ -80,7 +79,6 @@ public void doAction(HttpServerRequest request, HttpServerResponse response) {
 			}
 		}
 
-		Console.log(file.getAbsolutePath());
 		response.send404("404 Not Found !");
 	}
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/SheetRidReader.java
Patch:
@@ -113,7 +113,7 @@ public Integer getRidByNameBase0(String sheetName) {
 	@Override
 	public void startElement(String uri, String localName, String qName, Attributes attributes) {
 		if (TAG_NAME.equalsIgnoreCase(localName)) {
-			final String ridStr = attributes.getValue(SHEET_ID_ATTR);
+			final String ridStr = attributes.getValue(RID_ATTR);
 			if(StrUtil.isEmpty(ridStr)){
 				return;
 			}

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -644,7 +644,7 @@ public static File unzip(ZipInputStream zipStream, File outFile) throws UtilExce
 				outItemFile.mkdirs();
 			} else {
 				// 文件
-				FileUtil.writeFromStream(zipStream, outItemFile);
+				FileUtil.writeFromStream(zipStream, outItemFile, false);
 			}
 		});
 		return outFile;

File: hutool-extra/src/main/java/cn/hutool/extra/compress/extractor/StreamExtractor.java
Patch:
@@ -119,7 +119,7 @@ private void extractInternal(File targetDir, Filter<ArchiveEntry> filter) throws
 				//noinspection ResultOfMethodCallIgnored
 				outItemFile.mkdirs();
 			} else {
-				FileUtil.writeFromStream(in, outItemFile);
+				FileUtil.writeFromStream(in, outItemFile, false);
 			}
 		}
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/mail/Mail.java
Patch:
@@ -81,7 +81,7 @@ public class Mail {
 	 * 创建邮件客户端
 	 *
 	 * @param mailAccount 邮件帐号
-	 * @return {@link Mail}
+	 * @return Mail
 	 */
 	public static Mail create(MailAccount mailAccount) {
 		return new Mail(mailAccount);
@@ -90,7 +90,7 @@ public static Mail create(MailAccount mailAccount) {
 	/**
 	 * 创建邮件客户端，使用全局邮件帐户
 	 *
-	 * @return {@link Mail}
+	 * @return Mail
 	 */
 	public static Mail create() {
 		return new Mail();

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -116,7 +116,7 @@ public Excel03SaxReader read(InputStream excelStream, String idOrRid) throws POI
 	 * 读取
 	 *
 	 * @param fs  {@link POIFSFileSystem}
-	 * @param id sheet序号
+	 * @param id sheet序号，从0开始
 	 * @return this
 	 * @throws POIException IO异常包装
 	 */

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/SheetDataSaxHandler.java
Patch:
@@ -29,7 +29,7 @@ public class SheetDataSaxHandler extends DefaultHandler {
 	protected StylesTable stylesTable;
 	// excel 2007 的共享字符串表,对应sharedString.xml
 	protected SharedStringsTable sharedStringsTable;
-	// sheet的索引
+	// sheet的索引，从0开始
 	protected int sheetIndex;
 
 	// 当前非空行

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -170,5 +170,4 @@ public void parseObjTest() {
 				"    \"test\": \"\\\\地库地库\",\n" +
 				"}");
 	}
-}
-
+}
\ No newline at end of file

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/SheetRidReader.java
Patch:
@@ -88,7 +88,8 @@ public void startElement(String uri, String localName, String qName, Attributes
 			String rid = null;
 			String name = null;
 			for (int i = 0; i < length; i++) {
-				switch (attributes.getLocalName(i)) {
+				final String attrName = attributes.getQName(i);
+				switch (attrName) {
 					case SHEET_ID_ATTR:
 						sheetId = attributes.getValue(i);
 						break;

File: hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java
Patch:
@@ -298,7 +298,7 @@ public static long getMaxMemory() {
 	 *
 	 * @return 最大可用内存
 	 */
-	public final long getUsableMemory() {
+	public static long getUsableMemory() {
 		return getMaxMemory() - getTotalMemory() + getFreeMemory();
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/TreeUtil.java
Patch:
@@ -74,7 +74,7 @@ public static <T, E> List<Tree<E>> build(List<T> list, E parentId, TreeNodeConfi
 
 		List<Tree<E>> finalTreeList = CollUtil.newArrayList();
 		for (Tree<E> node : treeList) {
-			if (parentId.equals(node.getParentId())) {
+			if (ObjectUtil.equals(parentId,node.getParentId())) {
 				finalTreeList.add(node);
 				innerBuild(treeList, node, 0, treeNodeConfig.getDeep());
 			}

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3194,7 +3194,7 @@ public static boolean isSymlink(File file) {
 	public static boolean isSub(File parent, File sub) {
 		Assert.notNull(parent);
 		Assert.notNull(sub);
-		return sub.toPath().toAbsolutePath().normalize().startsWith(parent.toPath().toAbsolutePath().normalize());
+		return isSub(parent.toPath(), sub.toPath());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -563,6 +563,7 @@ public static File unzip(ZipFile zipFile, File outFile) throws IORuntimeExceptio
 	 * 获取压缩包中的指定文件流
 	 *
 	 * @param zipFile 压缩文件
+	 * @param charset 编码
 	 * @param path    需要提取文件的文件名或路径
 	 * @return 压缩文件流，如果未找到返回{@code null}
 	 * @since 5.5.2

File: hutool-core/src/main/java/cn/hutool/core/text/CharSequenceUtil.java
Patch:
@@ -4146,7 +4146,7 @@ public static String brief(CharSequence str, int maxLength) {
 		if (null == str) {
 			return null;
 		}
-		if (str.length() <= maxLength) {
+		if (maxLength <= 0 || str.length() <= maxLength) {
 			return str.toString();
 		}
 		int w = maxLength / 2;

File: hutool-dfa/src/main/java/cn/hutool/dfa/WordTree.java
Patch:
@@ -98,6 +98,7 @@ public WordTree addWords(String... words) {
 	 * 添加单词，使用默认类型
 	 *
 	 * @param word 单词
+	 * @return this
 	 */
 	public WordTree addWord(String word) {
 		final Filter<Character> charFilter = this.charFilter;

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/GanymedUtil.java
Patch:
@@ -70,6 +70,7 @@ public static Session openSession(String sshHost, int sshPort, String sshUser, S
 	 * @param cmd       命令
 	 * @param charset   发送和读取内容的编码
 	 * @param errStream 错误信息输出到的位置
+	 * @return 执行返回结果
 	 */
 	public static String exec(Session session, String cmd, Charset charset, OutputStream errStream) {
 		final String result;
@@ -97,6 +98,7 @@ public static String exec(Session session, String cmd, Charset charset, OutputSt
 	 * @param cmd       命令
 	 * @param charset   发送和读取内容的编码
 	 * @param errStream 错误信息输出到的位置
+	 * @return 执行返回结果
 	 */
 	public static String execByShell(Session session, String cmd, Charset charset, OutputStream errStream) {
 		final String result;

File: hutool-poi/src/main/java/cn/hutool/poi/ofd/OfdWriter.java
Patch:
@@ -113,7 +113,7 @@ public OfdWriter addPicture(Path picFile, int width, int height) {
 	}
 
 	/**
-	 * 增加节点，
+	 * 增加节点
 	 *
 	 * @param div 节点，可以是段落、Canvas、Img或者填充
 	 * @return this
@@ -124,8 +124,9 @@ public OfdWriter add(Div div) {
 	}
 
 	/**
-	 * 增加节点，
+	 * 增加注释，比如水印等
 	 *
+	 * @param page 页码
 	 * @param annotation 节点，可以是段落、Canvas、Img或者填充
 	 * @return this
 	 */

File: hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java
Patch:
@@ -74,7 +74,7 @@ protected static Writer writeValue(Writer writer, Object value, int indentFactor
 	 * 缩进，使用空格符
 	 *
 	 * @param writer writer
-	 * @param indent 随进空格数
+	 * @param indent 缩进空格数
 	 * @throws IOException IO异常
 	 */
 	protected static void indent(Writer writer, int indent) throws IOException {

File: hutool-core/src/main/java/cn/hutool/core/date/DateBetween.java
Patch:
@@ -95,7 +95,7 @@ public long between(DateUnit unit) {
 
 	/**
 	 * 计算两个日期相差月数<br>
-	 * 在非重置情况下，如果起始日期的天小于结束日期的天，月数要少算1（不足1个月）
+	 * 在非重置情况下，如果起始日期的天大于结束日期的天，月数要少算1（不足1个月）
 	 * 
 	 * @param isReset 是否重置时间为起始时间（重置天时分秒）
 	 * @return 相差月数
@@ -122,7 +122,7 @@ public long betweenMonth(boolean isReset) {
 
 	/**
 	 * 计算两个日期相差年数<br>
-	 * 在非重置情况下，如果起始日期的月小于结束日期的月，年数要少算1（不足1年）
+	 * 在非重置情况下，如果起始日期的月大于结束日期的月，年数要少算1（不足1年）
 	 * 
 	 * @param isReset 是否重置时间为起始时间（重置月天时分秒）
 	 * @return 相差年数

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1375,7 +1375,7 @@ public static long betweenWeek(Date beginDate, Date endDate, boolean isReset) {
 
 	/**
 	 * 计算两个日期相差月数<br>
-	 * 在非重置情况下，如果起始日期的天小于结束日期的天，月数要少算1（不足1个月）
+	 * 在非重置情况下，如果起始日期的天大于结束日期的天，月数要少算1（不足1个月）
 	 *
 	 * @param beginDate 起始日期
 	 * @param endDate   结束日期
@@ -1389,7 +1389,7 @@ public static long betweenMonth(Date beginDate, Date endDate, boolean isReset) {
 
 	/**
 	 * 计算两个日期相差年数<br>
-	 * 在非重置情况下，如果起始日期的月小于结束日期的月，年数要少算1（不足1年）
+	 * 在非重置情况下，如果起始日期的月大于结束日期的月，年数要少算1（不足1年）
 	 *
 	 * @param beginDate 起始日期
 	 * @param endDate   结束日期

File: hutool-core/src/main/java/cn/hutool/core/util/IdcardUtil.java
Patch:
@@ -510,7 +510,7 @@ public static String getProvinceByIdCard(String idcard) {
 	}
 
 	/**
-	 * 根据身份编号获取户籍省份，只支持15或18位身份证号码
+	 * 根据身份编号获取市级编码，只支持15或18位身份证号码
 	 *
 	 * @param idcard 身份编码
 	 * @return 市级编码。
@@ -658,9 +658,9 @@ public String getProvince() {
 		}
 
 		/**
-		 * 获取省份代码
+		 * 获取市级编码
 		 *
-		 * @return 省份代码
+		 * @return 市级编码
 		 */
 		public String getCityCode() {
 			return this.cityCode;

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel07SaxReader.java
Patch:
@@ -120,11 +120,11 @@ public Excel07SaxReader read(OPCPackage opcPackage, String idOrRid) throws POIEx
 	 * @since 5.4.4
 	 */
 	public Excel07SaxReader read(XSSFReader xssfReader, String idOrRid) throws POIException {
-		// 获取共享样式表
+		// 获取共享样式表，样式非必须
 		try {
 			this.handler.stylesTable = xssfReader.getStylesTable();
-		} catch (Exception e) {
-			//ignore
+		} catch (IOException | InvalidFormatException ignore) {
+			// ignore
 		}
 
 		// 获取共享字符串表

File: hutool-db/src/main/java/cn/hutool/db/sql/Wrapper.java
Patch:
@@ -1,5 +1,6 @@
 package cn.hutool.db.sql;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.lang.Editor;
 import cn.hutool.core.util.ArrayUtil;
@@ -98,7 +99,7 @@ public String wrap(String field){
 		
 		//对于Oracle这类数据库，表名中包含用户名需要单独拆分包装
 		if(field.contains(StrUtil.DOT)){
-			final Collection<String> target = CollectionUtil.filter(StrUtil.split(field, StrUtil.C_DOT), (Editor<String>) t -> StrUtil.format("{}{}{}", preWrapQuote, t, sufWrapQuote));
+			final Collection<String> target = CollUtil.filter(StrUtil.split(field, StrUtil.C_DOT, 2), (Editor<String>) t -> StrUtil.format("{}{}{}", preWrapQuote, t, sufWrapQuote));
 			return CollectionUtil.join(target, StrUtil.DOT);
 		}
 		

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -239,7 +239,7 @@ public StrBuilder insert(int index, char[] src, int srcPos, int length) {
 	 */
 	public StrBuilder insert(int index, CharSequence csq) {
 		if (null == csq) {
-			csq = "null";
+			csq = StrUtil.EMPTY;
 		}
 		int len = csq.length();
 		moveDataAfterIndex(index, csq.length());
@@ -524,7 +524,7 @@ private void moveDataAfterIndex(int index, int length) {
 	 */
 	private void ensureCapacity(int minimumCapacity) {
 		// overflow-conscious code
-		if (minimumCapacity - value.length < 0) {
+		if (minimumCapacity - value.length > 0) {
 			expandCapacity(minimumCapacity);
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1339,8 +1339,8 @@ public static long betweenMs(Date beginDate, Date endDate) {
 	 * <pre>
 	 * 有时候我们计算相差天数的时候需要忽略时分秒。
 	 * 比如：2016-02-01 23:59:59和2016-02-02 00:00:00相差一秒
-	 * 如果isReset为<code>false</code>相差天数为0。
-	 * 如果isReset为<code>true</code>相差天数将被计算为1
+	 * 如果isReset为{@code false}相差天数为0。
+	 * 如果isReset为{@code true}相差天数将被计算为1
 	 * </pre>
 	 *
 	 * @param beginDate 起始日期

File: hutool-json/src/main/java/cn/hutool/json/JSONGetter.java
Patch:
@@ -20,10 +20,10 @@ public interface JSONGetter<K> extends OptNullBasicTypeFromObjectGetter<K> {
 	JSONConfig getConfig();
 
 	/**
-	 * key对应值是否为<code>null</code>或无此key
+	 * key对应值是否为{@code null}或无此key
 	 *
 	 * @param key 键
-	 * @return true 无此key或值为<code>null</code>或{@link JSONNull#NULL}返回<code>false</code>，其它返回<code>true</code>
+	 * @return true 无此key或值为{@code null}或{@link JSONNull#NULL}返回{@code false}，其它返回{@code true}
 	 */
 	default boolean isNull(K key) {
 		return JSONNull.NULL.equals(this.getObj(key));

File: hutool-cache/src/main/java/cn/hutool/cache/impl/AbstractCache.java
Patch:
@@ -174,7 +174,7 @@ public V get(K key, boolean isUpdateLastAccess) {
 				return co.get(isUpdateLastAccess);
 			}
 		} finally {
-			lock.unlock(stamp);
+			lock.unlockRead(stamp);
 		}
 
 		// 过期

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1870,7 +1870,7 @@ public static <T> TreeSet<T> toTreeSet(Collection<T> collection, Comparator<T> c
 	/**
 	 * Iterator转换为Enumeration
 	 * <p>
-	 * Adapt the specified <code>Iterator</code> to the <code>Enumeration</code> interface.
+	 * Adapt the specified {@link Iterator} to the {@link Enumeration} interface.
 	 *
 	 * @param <E>  集合元素类型
 	 * @param iter {@link Iterator}
@@ -1883,7 +1883,7 @@ public static <E> Enumeration<E> asEnumeration(Iterator<E> iter) {
 	/**
 	 * Enumeration转换为Iterator
 	 * <p>
-	 * Adapt the specified <code>Enumeration</code> to the <code>Iterator</code> interface
+	 * Adapt the specified {@code Enumeration} to the {@code Iterator} interface
 	 *
 	 * @param <E> 集合元素类型
 	 * @param e   {@link Enumeration}
@@ -2186,7 +2186,7 @@ public static <T> T get(Collection<T> collection, int index) {
 		}
 
 		// 检查越界
-		if (index >= size) {
+		if (index >= size || index < 0) {
 			return null;
 		}
 

File: hutool-all/src/main/java/cn/hutool/Hutool.java
Patch:
@@ -45,6 +45,7 @@ private Hutool() {
 	/**
 	 * 显示Hutool所有的工具类
 	 *
+	 * @return 工具类名集合
 	 * @since 5.5.2
 	 */
 	public static Set<Class<?>> getAllUtils() {

File: hutool-db/src/main/java/cn/hutool/db/DialectRunner.java
Patch:
@@ -85,6 +85,7 @@ public int[] insert(Connection conn, Entity... records) throws SQLException {
 	 *
 	 * @param conn   数据库连接
 	 * @param record 记录
+	 * @param generatedKeysHandler 自增主键处理器，用于定义返回自增主键的范围和类型
 	 * @return 主键列表
 	 * @throws SQLException SQL执行异常
 	 */

File: hutool-db/src/main/java/cn/hutool/db/SqlConnRunner.java
Patch:
@@ -383,6 +383,7 @@ public PageResult<Entity> page(Connection conn, Collection<String> fields, Entit
 	 * @param fields 返回的字段列表，null则返回所有字段
 	 * @param where  条件实体类（包含表名）
 	 * @param page   分页对象
+	 * @param handler 结果集处理器
 	 * @return 结果对象
 	 * @throws SQLException SQL执行异常
 	 */

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -268,7 +268,7 @@ private void processCellValue(Record record) {
 				break;
 			case FormulaRecord.sid:
 				// 公式类型
-				FormulaRecord formulaRec = (FormulaRecord) record;
+				final FormulaRecord formulaRec = (FormulaRecord) record;
 				if (isOutputFormulaValues) {
 					if (Double.isNaN(formulaRec.getValue())) {
 						// Formula result is a string

File: hutool-poi/src/test/java/cn/hutool/poi/excel/CellUtilTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.poi.excel.test;
+package cn.hutool.poi.excel;
 
 import org.apache.poi.ss.usermodel.BuiltinFormats;
 import org.junit.Ignore;

File: hutool-poi/src/test/java/cn/hutool/poi/excel/ExcelReadTest.java
Patch:
@@ -1,11 +1,9 @@
-package cn.hutool.poi.excel.test;
+package cn.hutool.poi.excel;
 
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ObjectUtil;
-import cn.hutool.poi.excel.ExcelReader;
-import cn.hutool.poi.excel.ExcelUtil;
 import lombok.Data;
 import org.junit.Assert;
 import org.junit.Ignore;

File: hutool-poi/src/test/java/cn/hutool/poi/excel/ExcelUtilTest.java
Patch:
@@ -1,6 +1,5 @@
-package cn.hutool.poi.excel.test;
+package cn.hutool.poi.excel;
 
-import cn.hutool.poi.excel.ExcelUtil;
 import cn.hutool.poi.excel.cell.CellLocation;
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-poi/src/test/java/cn/hutool/poi/excel/OrderExcel.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.poi.excel.test;
+package cn.hutool.poi.excel;
 
 import lombok.Data;
 

File: hutool-poi/src/test/java/cn/hutool/poi/excel/TestBean.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.poi.excel.test;
+package cn.hutool.poi.excel;
 
 import lombok.Data;
 

File: hutool-poi/src/test/java/cn/hutool/poi/word/WordWriterTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.poi.word.test;
+package cn.hutool.poi.word;
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.io.FileUtil;

File: hutool-db/src/main/java/cn/hutool/db/handler/RsHandler.java
Patch:
@@ -19,6 +19,7 @@
  * @author Luxiaolei
  *
  */
+@FunctionalInterface
 public interface RsHandler<T> extends Serializable{
 	
 	/**

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -261,6 +261,9 @@ public static <T> List<T> page(int pageNo, int pageSize, List<T> list) {
 		final int[] startEnd = PageUtil.transToStartEnd(pageNo, pageSize);
 		if (startEnd[1] > resultSize) {
 			startEnd[1] = resultSize;
+			if (startEnd[0] > startEnd[1]) {
+			    return new ArrayList<>(0);
+			}
 		}
 
 		return list.subList(startEnd[0], startEnd[1]);

File: hutool-captcha/src/main/java/cn/hutool/captcha/GifCaptcha.java
Patch:
@@ -38,7 +38,7 @@ public class GifCaptcha extends AbstractCaptcha {
 	 * @param height 验证码高度
 	 */
 	public GifCaptcha(int width, int height) {
-		this(width, height, 100);
+		this(width, height, 5);
 	}
 
 	/**

File: hutool-aop/src/main/java/cn/hutool/aop/proxy/JdkProxyFactory.java
Patch:
@@ -13,9 +13,8 @@ public class JdkProxyFactory extends ProxyFactory {
 	private static final long serialVersionUID = 1L;
 
 	@Override
-	@SuppressWarnings("unchecked")
 	public <T> T proxy(T target, Aspect aspect) {
-		return (T) ProxyUtil.newProxyInstance(//
+		return ProxyUtil.newProxyInstance(//
 				target.getClass().getClassLoader(), //
 				new JdkInterceptor(target, aspect), //
 				target.getClass().getInterfaces());

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/IntMap.java
Patch:
@@ -33,14 +33,14 @@ public IntMap(int size) {
 	public void add(long i) {
 		int r = (int) (i / BitMap.MACHINE32);
 		int c = (int) (i % BitMap.MACHINE32);
-		ints[r] = (int) (ints[r] | (1 << c));
+		ints[r] = ints[r] | (1 << c);
 	}
 
 	@Override
 	public boolean contains(long i) {
 		int r = (int) (i / BitMap.MACHINE32);
 		int c = (int) (i % BitMap.MACHINE32);
-		return ((int) ((ints[r] >>> c)) & 1) == 1;
+		return ((ints[r] >>> c) & 1) == 1;
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanPath.java
Patch:
@@ -66,7 +66,7 @@ public class BeanPath implements Serializable{
 	 * </pre>
 	 * 
 	 * @param expression 表达式
-	 * @return {@link BeanPath}
+	 * @return BeanPath
 	 */
 	public static BeanPath create(String expression) {
 		return new BeanPath(expression);

File: hutool-core/src/main/java/cn/hutool/core/date/BetweenFormater.java
Patch:
@@ -9,6 +9,7 @@
  */
 @Deprecated
 public class BetweenFormater extends BetweenFormatter {
+	private static final long serialVersionUID = 1L;
 
 	public BetweenFormater(long betweenMs, Level level) {
 		super(betweenMs, level);

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/CRC16.java
Patch:
@@ -3,6 +3,7 @@
 import cn.hutool.core.io.checksum.crc16.CRC16Checksum;
 import cn.hutool.core.io.checksum.crc16.CRC16IBM;
 
+import java.io.Serializable;
 import java.util.zip.Checksum;
 
 /**
@@ -11,7 +12,7 @@
  * @author looly
  * @since 4.4.1
  */
-public class CRC16 implements Checksum {
+public class CRC16 implements Checksum, Serializable {
 	private static final long serialVersionUID = 1L;
 
 	private final CRC16Checksum crc16;

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16Ansi.java
Patch:
@@ -7,6 +7,7 @@
  * @since 5.3.10
  */
 public class CRC16Ansi extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0xa001;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16CCITT.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16CCITT extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0x8408;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16CCITTFalse.java
Patch:
@@ -7,6 +7,7 @@
  * @since 5.3.10
  */
 public class CRC16CCITTFalse extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0x1021;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16DNP.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16DNP extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0xA6BC;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16IBM.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16IBM extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0xa001;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16Maxim.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16Maxim extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0xa001;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16Modbus.java
Patch:
@@ -9,6 +9,7 @@
  * @since 5.3.10
  */
 public class CRC16Modbus extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0xa001;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16USB.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16USB extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0xa001;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16X25.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16X25 extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	private static final int WC_POLY = 0x8408;
 

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/crc16/CRC16XModem.java
Patch:
@@ -8,6 +8,7 @@
  * @since 5.3.10
  */
 public class CRC16XModem extends CRC16Checksum{
+	private static final long serialVersionUID = 1L;
 
 	// 0001 0000 0010 0001 (0, 5, 12)
 	private static final int WC_POLY = 0x1021;

File: hutool-core/src/main/java/cn/hutool/core/map/BiMap.java
Patch:
@@ -13,6 +13,7 @@
  * @since 5.2.6
  */
 public class BiMap<K, V> extends MapWrapper<K, V> {
+	private static final long serialVersionUID = 1L;
 
 	private Map<V, K> inverse;
 

File: hutool-core/src/test/java/cn/hutool/core/comparator/VersionComparatorTest.java
Patch:
@@ -51,6 +51,6 @@ public void versionComparatorTes6() {
 	public void equalsTest(){
 		VersionComparator first = new VersionComparator();
 		VersionComparator other = new VersionComparator();
-		Assert.assertFalse(first.equals(other));
+		Assert.assertNotEquals(first, other);
 	}
 }

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SM4.java
Patch:
@@ -90,7 +90,7 @@ public SM4(Mode mode, Padding padding, SecretKey key) {
 	 * @param iv      偏移向量，加盐
 	 */
 	public SM4(Mode mode, Padding padding, SecretKey key, byte[] iv) {
-		this(mode, padding, key, ArrayUtil.isEmpty(iv) ? ((IvParameterSpec) null) : new IvParameterSpec(iv));
+		this(mode, padding, key, ArrayUtil.isEmpty(iv) ? null : new IvParameterSpec(iv));
 	}
 
 	/**
@@ -137,7 +137,7 @@ public SM4(String mode, String padding, byte[] key) {
 	public SM4(String mode, String padding, byte[] key, byte[] iv) {
 		this(mode, padding,//
 				SecureUtil.generateKey(ALGORITHM_NAME, key),//
-				ArrayUtil.isEmpty(iv) ? ((IvParameterSpec) null) : new IvParameterSpec(iv));
+				ArrayUtil.isEmpty(iv) ? null : new IvParameterSpec(iv));
 	}
 
 	/**

File: hutool-db/src/main/java/cn/hutool/db/meta/Column.java
Patch:
@@ -65,6 +65,7 @@ public class Column implements Serializable, Cloneable {
 	 * @return 列对象
 	 * @deprecated 请使用 {@link #create(Table, ResultSet)}
 	 */
+	@Deprecated
 	public static Column create(String tableName, ResultSet columnMetaRs) {
 		return new Column(tableName, columnMetaRs);
 	}

File: hutool-db/src/test/java/cn/hutool/db/UpdateTest.java
Patch:
@@ -29,6 +29,6 @@ public void updateTest() throws SQLException {
 		int update = db.update(Entity.create("user").set("age", 88), Entity.create().set("name", "unitTestUser"));
 		Assert.assertTrue(update > 0);
 		Entity result2 = db.get("user", "name", "unitTestUser");
-		Assert.assertSame(88, (int) result2.getInt("age"));
+		Assert.assertSame(88, result2.getInt("age"));
 	}
 }

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlTemplate.java
Patch:
@@ -1,12 +1,12 @@
 package cn.hutool.extra.template.engine.beetl;
 
+import cn.hutool.extra.template.AbstractTemplate;
+
 import java.io.OutputStream;
 import java.io.Serializable;
 import java.io.Writer;
 import java.util.Map;
 
-import cn.hutool.extra.template.AbstractTemplate;
-
 /**
  * Beetl模板实现
  * 
@@ -21,7 +21,7 @@ public class BeetlTemplate extends AbstractTemplate implements Serializable{
 	 * 包装Beetl模板
 	 * 
 	 * @param beetlTemplate Beetl的模板对象 {@link org.beetl.core.Template}
-	 * @return {@link BeetlTemplate}
+	 * @return BeetlTemplate
 	 */
 	public static BeetlTemplate wrap(org.beetl.core.Template beetlTemplate) {
 		return (null == beetlTemplate) ? null : new BeetlTemplate(beetlTemplate);

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlUtil.java
Patch:
@@ -260,7 +260,7 @@ public static class ResourceLoaderBuilder {
 		/**
 		 * 创建
 		 * 
-		 * @return {@link ResourceLoaderBuilder}
+		 * @return ResourceLoaderBuilder
 		 */
 		public static ResourceLoaderBuilder create() {
 			return new ResourceLoaderBuilder();
@@ -271,7 +271,7 @@ public static ResourceLoaderBuilder create() {
 		 * 
 		 * @param matcher {@link Matcher} 匹配器
 		 * @param resourceLoader {@link ResourceLoader} 匹配时对应的资源加载器
-		 * @return {@link ResourceLoaderBuilder}
+		 * @return ResourceLoaderBuilder
 		 */
 		public ResourceLoaderBuilder add(Matcher matcher, ResourceLoader<?> resourceLoader) {
 			compositeResourceLoader.addResourceLoader(matcher, resourceLoader);

File: hutool-extra/src/test/java/cn/hutool/extra/emoji/EmojiUtilTest.java
Patch:
@@ -20,9 +20,9 @@ public void toAliasTest() {
 	@Test
 	public void containsEmojiTest() {
 		boolean containsEmoji = EmojiUtil.containsEmoji("测试一下是否包含EMOJ:😄");
-		Assert.assertEquals(containsEmoji, true);
+		Assert.assertTrue(containsEmoji);
 		boolean notContainsEmoji = EmojiUtil.containsEmoji("不包含EMOJ:^_^");
-		Assert.assertEquals(notContainsEmoji, false);
+		Assert.assertFalse(notContainsEmoji);
 
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java
Patch:
@@ -63,9 +63,9 @@ public class PatternPool {
 	public final static Pattern CITIZEN_ID = Pattern.compile("[1-9]\\d{5}[1-2]\\d{3}((0\\d)|(1[0-2]))(([012]\\d)|3[0-1])\\d{3}(\\d|X|x)");
 
 	/**
-	 * 邮编
+	 * 邮编，兼容港澳台
 	 */
-	public final static Pattern ZIP_CODE = Pattern.compile("[1-9]\\d{5}(?!\\d)");
+	public final static Pattern ZIP_CODE = Pattern.compile("^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[0-7]|6[0-7]|7[0-5]|8[0-9]|9[0-8])\\d{4}|99907[78]$");
 	/**
 	 * 生日
 	 */

File: hutool-extra/src/test/java/cn/hutool/extra/expression/AviatorTest.java
Patch:
@@ -1,5 +1,6 @@
 package cn.hutool.extra.expression;
 
+import cn.hutool.core.date.DateUtil;
 import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.Dict;
 import cn.hutool.extra.expression.engine.aviator.AviatorEngine;
@@ -16,7 +17,7 @@ public class AviatorTest {
 
 	@Test
 	public void simpleTest(){
-		Foo foo = new Foo(100, 3.14f, new Date());
+		Foo foo = new Foo(100, 3.14f, DateUtil.parseDate("2020-11-12"));
 		ExpressionEngine engine = new AviatorEngine();
 		String exp =
 				"\"[foo i=\"+ foo.i + \", f=\" + foo.f + \", date.year=\" + (foo.date.year+1900) + \", date.month=\" + foo.date.month + \", bars[0].name=\" + #foo.bars[0].name + \"]\"";

File: hutool-core/src/test/java/cn/hutool/core/util/EnumUtilTest.java
Patch:
@@ -30,7 +30,8 @@ public void getFieldValuesTest() {
 	@Test
 	public void getFieldNamesTest() {
 		List<String> names = EnumUtil.getFieldNames(TestEnum.class);
-		Assert.assertEquals(CollUtil.newArrayList("type", "name"), names);
+		Assert.assertTrue(names.contains("type"));
+		Assert.assertTrue(names.contains("name"));
 	}
 	
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/util/EnumUtilTest.java
Patch:
@@ -30,7 +30,8 @@ public void getFieldValuesTest() {
 	@Test
 	public void getFieldNamesTest() {
 		List<String> names = EnumUtil.getFieldNames(TestEnum.class);
-		Assert.assertEquals(CollUtil.newArrayList("type", "name"), names);
+		Assert.assertTrue(names.contains("type"));
+		Assert.assertTrue(names.contains("name"));
 	}
 	
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/compiler/JavaClassFileManager.java
Patch:
@@ -70,7 +70,7 @@ public ClassLoader getClassLoader(final Location location) {
 	 */
 	@Override
 	public JavaFileObject getJavaFileForOutput(final Location location, final String className, final Kind kind, final FileObject sibling) {
-		final JavaFileObject javaFileObject = new JavaClassFileObject(className, kind);
+		final JavaFileObject javaFileObject = new JavaClassFileObject(className);
 		this.classFileObjectMap.put(className, new FileObjectResource(javaFileObject));
 		return javaFileObject;
 	}

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -420,7 +420,7 @@ public void putAll(Map<? extends String, ?> m) {
 	}
 
 	/**
-	 * 积累值。类似于put，当key对应value已经存在时，与value组成新的JSONArray. <br>
+	 * 积累值。类似于set，当key对应value已经存在时，与value组成新的JSONArray. <br>
 	 * 如果只有一个值，此值就是value，如果多个值，则是添加到新的JSONArray中
 	 *
 	 * @param key   键
@@ -432,11 +432,11 @@ public JSONObject accumulate(String key, Object value) throws JSONException {
 		InternalJSONUtil.testValidity(value);
 		Object object = this.getObj(key);
 		if (object == null) {
-			this.set(key, (value instanceof JSONArray) ? value : new JSONArray(this.config).set(value));
+			this.set(key, value);
 		} else if (object instanceof JSONArray) {
 			((JSONArray) object).set(value);
 		} else {
-			this.set(key, new JSONArray(this.config).set(object).set(value));
+			this.set(key, JSONUtil.createArray(this.config).set(object).set(value));
 		}
 		return this;
 	}

File: hutool-cache/src/main/java/cn/hutool/cache/impl/AbstractCache.java
Patch:
@@ -45,11 +45,11 @@ public abstract class AbstractCache<K, V> implements Cache<K, V> {
 	/**
 	 * 命中数
 	 */
-	protected AtomicLong hitCount;
+	protected AtomicLong hitCount = new AtomicLong();
 	/**
 	 * 丢失数
 	 */
-	protected AtomicLong missCount;
+	protected AtomicLong missCount = new AtomicLong();
 
 	// ---------------------------------------------------------------- put start
 	@Override

File: hutool-cache/src/main/java/cn/hutool/cache/impl/CacheObj.java
Patch:
@@ -19,7 +19,7 @@ public class CacheObj<K, V> implements Serializable{
 	/** 上次访问时间 */
 	private volatile long lastAccess;
 	/** 访问次数 */
-	protected AtomicLong accessCount;
+	protected AtomicLong accessCount = new AtomicLong();
 	/** 对象存活时长，0表示永久存活*/
 	private final long ttl;
 	

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -165,6 +165,7 @@ public void doubleTest() {
 
 	@Test
 	public void parseObjTest() {
+		// 测试转义
 		final JSONObject jsonObject = JSONUtil.parseObj("{\n" +
 				"    \"test\": \"\\\\地库地库\",\n" +
 				"}");

File: hutool-core/src/main/java/cn/hutool/core/date/StopWatch.java
Patch:
@@ -101,7 +101,7 @@ public StopWatch(String id, boolean keepTaskList) {
 	// ------------------------------------------------------------------------------------------- Constructor end
 
 	/**
-	 * 获取{@link StopWatch} 的ID，用于多个秒表对象的区分
+	 * 获取StopWatch 的ID，用于多个秒表对象的区分
 	 *
 	 * @return the ID 空字符串为
 	 * @see #StopWatch(String)

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java
Patch:
@@ -446,8 +446,7 @@ public static String exec(Session session, String cmd, Charset charset, OutputSt
 	/**
 	 * 执行Shell命令
 	 * <p>
-	 * 此方法单次发送一个命令到服务端，自动读取环境变量，执行结束后自动关闭channel，不会产生阻塞。<br>
-	 * 此方法返回数据中可能
+	 * 此方法单次发送一个命令到服务端，自动读取环境变量，执行结束后自动关闭channel，不会产生阻塞。
 	 * </p>
 	 *
 	 * @param session Session会话

File: hutool-core/src/main/java/cn/hutool/core/util/HexUtil.java
Patch:
@@ -368,7 +368,7 @@ public static String format(String hexStr) {
 		final int length = hexStr.length();
 		final StringBuilder builder = StrUtil.builder(length + length / 2);
 		builder.append(hexStr.charAt(0)).append(hexStr.charAt(1));
-		for (int i = 1; i < length - 1; i += 2) {
+		for (int i = 2; i < length - 1; i += 2) {
 			builder.append(CharUtil.SPACE).append(hexStr.charAt(i)).append(hexStr.charAt(i + 1));
 		}
 		return builder.toString();

File: hutool-core/src/test/java/cn/hutool/core/util/HexUtilTest.java
Patch:
@@ -47,6 +47,6 @@ public void decodeTest(){
 	public void formatHexTest(){
 		String hex = "e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885d";
 		String formatHex = HexUtil.format(hex);
-		Assert.assertEquals("e8 8c 67 03 80 cb 22 00 95 26 8f 40 22 1f c7 48 fa 6a c3 9d 6e 93 0e 63 c3 0d a6 8b ad 97 f8 85", formatHex);
+		Assert.assertEquals("e8 c6 70 38 0c b2 20 09 52 68 f4 02 21 fc 74 8f a6 ac 39 d6 e9 30 e6 3c 30 da 68 ba d9 7f 88 5d", formatHex);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java
Patch:
@@ -587,6 +587,7 @@ public static void transform(Source source, Result result, String charset, int i
 			final Transformer xformer = factory.newTransformer();
 			if (indent > 0) {
 				xformer.setOutputProperty(OutputKeys.INDENT, "yes");
+				//fix issue#1232@Github
 				xformer.setOutputProperty(OutputKeys.DOCTYPE_PUBLIC, "yes");
 				xformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", String.valueOf(indent));
 			}

File: hutool-core/src/test/java/cn/hutool/core/codec/Base64Test.java
Patch:
@@ -1,10 +1,9 @@
 package cn.hutool.core.codec;
 
-import org.junit.Assert;
-import org.junit.Test;
-
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.StrUtil;
+import org.junit.Assert;
+import org.junit.Test;
 
 /**
  * Base64单元测试

File: hutool-core/src/main/java/cn/hutool/core/collection/CollStreamUtil.java
Patch:
@@ -93,8 +93,7 @@ public static <E, K, U> Map<K, Map<U, List<E>>> groupBy2Key(Collection<E> collec
 	}
 
 	/**
-	 * 将collection按照两个规则(比如有相同的年级id,班级id)分类成双层map
-	 * <br></br>
+	 * 将collection按照两个规则(比如有相同的年级id,班级id)分类成双层map<br>
 	 * <B>{@code Collection<E>  --->  Map<T,Map<U,E>> } </B>
 	 *
 	 * @param collection 需要分类的集合

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.exceptions.DependencyException;
 import cn.hutool.core.io.FileUtil;
+import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.ReUtil;
 import cn.hutool.core.util.StrUtil;
@@ -84,6 +85,7 @@ public static void readBySax(File file, String idOrRid, RowHandler rowHandler) {
 	 * @since 3.2.0
 	 */
 	public static void readBySax(InputStream in, int rid, RowHandler rowHandler) {
+		in = IoUtil.toMarkSupportStream(in);
 		final ExcelSaxReader<?> reader = ExcelSaxUtil.createSaxReader(ExcelFileUtil.isXlsx(in), rowHandler);
 		reader.read(in, rid);
 	}
@@ -97,6 +99,7 @@ public static void readBySax(InputStream in, int rid, RowHandler rowHandler) {
 	 * @since 5.4.4
 	 */
 	public static void readBySax(InputStream in, String idOrRid, RowHandler rowHandler) {
+		in = IoUtil.toMarkSupportStream(in);
 		final ExcelSaxReader<?> reader = ExcelSaxUtil.createSaxReader(ExcelFileUtil.isXlsx(in), rowHandler);
 		reader.read(in, idOrRid);
 	}

File: hutool-core/src/main/java/cn/hutool/core/math/Calculator.java
Patch:
@@ -53,7 +53,7 @@ private static String transform(String expression) {
 				}
 			}
 		}
-		if (arr[0] == '~' || arr[1] == '(') {
+		if (arr[0] == '~' || (arr.length > 1 && arr[1] == '(')) {
 			arr[0] = '-';
 			return "0" + new String(arr);
 		} else {

File: hutool-extra/src/test/java/cn/hutool/extra/compress/ExtractorTest.java
Patch:
@@ -9,7 +9,7 @@
 public class ExtractorTest {
 
 	@Test
-//	@Ignore
+	@Ignore
 	public void zipTest(){
 		Extractor extractor = CompressUtil.createExtractor(
 				CharsetUtil.defaultCharset(),

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1972,7 +1972,7 @@ public static String toStr(Number number, String defaultValue) {
 	 * @param number A Number
 	 * @return A String.
 	 */
-	public static String toStr(Number number) {
+		public static String toStr(Number number) {
 		Assert.notNull(number, "Number is null !");
 
 		// BigDecimal单独处理，使用非科学计数法

File: hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java
Patch:
@@ -707,7 +707,9 @@ public static String normalize(String url, boolean isEncodePath) {
 			//noinspection ConstantConditions
 			body = body.replaceAll("^[\\\\/]+", StrUtil.EMPTY);
 			// 替换多个\或/为单个/
-			body = body.replace("\\", "/").replaceAll("//+", "/");
+			body = body.replace("\\", "/");
+			//issue#I25MZL，双斜杠在URL中是允许存在的，不做替换
+			//.replaceAll("//+", "/");
 		}
 
 		final int pathSepIndex = StrUtil.indexOf(body, '/');

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelReadTest.java
Patch:
@@ -187,6 +187,7 @@ public void mergeReadTest() {
 	}
 
 	@Test
+	@Ignore
 	public void readCellsTest() {
 		final ExcelReader reader = ExcelUtil.getReader("merge_test.xlsx");
 		reader.read((cell, value)-> Console.log("{}, {} {}", cell.getRowIndex(), cell.getColumnIndex(), value));

File: hutool-extra/src/main/java/cn/hutool/extra/validation/ValidationUtil.java
Patch:
@@ -76,6 +76,7 @@ public static <T> BeanValidationResult warpValidate(T bean, Class<?>... groups)
 	/**
 	 * 校验bean的某一个属性
 	 *
+	 * @param <T>  bean类型
 	 * @param bean         bean
 	 * @param propertyName 属性名称
 	 * @param groups       验证分组

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -553,6 +553,7 @@ public Img flip() {
 		Graphics2D graphics2d = targetImg.createGraphics();
 		graphics2d.drawImage(image, 0, 0, width, height, width, 0, 0, height, null);
 		graphics2d.dispose();
+
 		this.targetImage = targetImg;
 		return this;
 	}

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -4019,7 +4019,7 @@ public static int lastIndexOf(final CharSequence str, final CharSequence searchS
 			return str.toString().lastIndexOf(searchStr.toString(), fromIndex);
 		}
 
-		for (int i = fromIndex; i > 0; i--) {
+		for (int i = fromIndex; i >= 0; i--) {
 			if (isSubEquals(str, i, searchStr, 0, searchStr.length(), true)) {
 				return i;
 			}

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.bean.copier.CopyOptions;
 import cn.hutool.core.bean.copier.ValueProvider;
 import cn.hutool.core.collection.CollUtil;
+import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import lombok.Data;
 import lombok.Getter;

File: hutool-core/src/test/java/cn/hutool/core/util/StrUtilTest.java
Patch:
@@ -164,6 +164,7 @@ public void lastIndexOfIgnoreCaseTest() {
 		Assert.assertEquals(-1, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "B", -1));
 		Assert.assertEquals(2, StrUtil.lastIndexOfIgnoreCase("aabaabaa", "", 2));
 		Assert.assertEquals(3, StrUtil.lastIndexOfIgnoreCase("abc", "", 9));
+		Assert.assertEquals(0, StrUtil.lastIndexOfIgnoreCase("AAAcsd", "aaa"));
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -26,6 +26,7 @@
 import org.apache.poi.ss.usermodel.Sheet;
 import org.apache.poi.ss.usermodel.Workbook;
 import org.apache.poi.ss.util.CellRangeAddressList;
+import org.apache.poi.xssf.streaming.SXSSFSheet;
 import org.apache.poi.xssf.usermodel.XSSFDataValidation;
 
 import java.io.File;
@@ -268,6 +269,8 @@ public ExcelWriter autoSizeColumnAll() {
 	 * @since 4.0.12
 	 */
 	public ExcelWriter autoSizeColumn(int columnIndex) {
+		SXSSFSheet sheet = (SXSSFSheet) this.sheet;
+		sheet.trackAllColumnsForAutoSizing();
 		this.sheet.autoSizeColumn(columnIndex);
 		return this;
 	}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -26,6 +26,7 @@
 import org.apache.poi.ss.usermodel.Sheet;
 import org.apache.poi.ss.usermodel.Workbook;
 import org.apache.poi.ss.util.CellRangeAddressList;
+import org.apache.poi.xssf.streaming.SXSSFSheet;
 import org.apache.poi.xssf.usermodel.XSSFDataValidation;
 
 import java.io.File;
@@ -268,6 +269,8 @@ public ExcelWriter autoSizeColumnAll() {
 	 * @since 4.0.12
 	 */
 	public ExcelWriter autoSizeColumn(int columnIndex) {
+		SXSSFSheet sheet = (SXSSFSheet) this.sheet;
+		sheet.trackAllColumnsForAutoSizing();
 		this.sheet.autoSizeColumn(columnIndex);
 		return this;
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/validation/ValidationUtil.java
Patch:
@@ -54,6 +54,7 @@ public static <T> Set<ConstraintViolation<T>> validate(T bean, Class<?>... group
 	 * @param <T>          Bean类型
 	 * @param bean         bean
 	 * @param propertyName 属性名称
+	 * @param groups       验证分组
 	 * @return {@link Set}
 	 */
 	public static <T> Set<ConstraintViolation<T>> validateProperty(T bean, String propertyName, Class<?>... groups) {
@@ -77,6 +78,7 @@ public static <T> BeanValidationResult warpValidate(T bean, Class<?>... groups)
 	 *
 	 * @param bean         bean
 	 * @param propertyName 属性名称
+	 * @param groups       验证分组
 	 * @return {@link BeanValidationResult}
 	 */
 	public static <T> BeanValidationResult warpValidateProperty(T bean, String propertyName, Class<?>... groups) {

File: hutool-log/src/main/java/cn/hutool/log/package-info.java
Patch:
@@ -1,5 +1,6 @@
 /**
- * Hutool-log只是一个日志的通用门面，功能类似于Slf4j。根据加入ClassPath中的jar包动态检测日志实现的方式，使日志使用个更加便利灵活。
+ * Hutool-log只是一个日志的通用门面，功能类似于Slf4j。<br>
+ * 根据加入ClassPath中的jar包动态检测日志实现的方式，使日志使用个更加便利灵活。
  * 
  * @author looly
  *

File: hutool-http/src/main/java/cn/hutool/http/HttpUtil.java
Patch:
@@ -51,7 +51,7 @@ public class HttpUtil {
 	 * @return 是否https
 	 */
 	public static boolean isHttps(String url) {
-		return url.toLowerCase().startsWith("https");
+		return url.toLowerCase().startsWith("https:");
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -33,7 +33,7 @@ public class StrBuilder implements CharSequence, Appendable, Serializable {
 	/**
 	 * 创建字符串构建器
 	 *
-	 * @return {@link StrBuilder}
+	 * @return this
 	 */
 	public static StrBuilder create() {
 		return new StrBuilder();
@@ -43,7 +43,7 @@ public static StrBuilder create() {
 	 * 创建字符串构建器
 	 *
 	 * @param initialCapacity 初始容量
-	 * @return {@link StrBuilder}
+	 * @return this
 	 */
 	public static StrBuilder create(int initialCapacity) {
 		return new StrBuilder(initialCapacity);
@@ -53,7 +53,7 @@ public static StrBuilder create(int initialCapacity) {
 	 * 创建字符串构建器
 	 *
 	 * @param strs 初始字符串
-	 * @return {@link StrBuilder}
+	 * @return this
 	 * @since 4.0.1
 	 */
 	public static StrBuilder create(CharSequence... strs) {

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/CellDataType.java
Patch:
@@ -11,15 +11,15 @@ public enum CellDataType {
 	BOOL("b"),
 	/** 类型错误 */
 	ERROR("e"),
-	/** 计算结果类型 */
-	FORMULA("str"),
+	/** 计算结果类型，此类型使用f标签辅助判断，而非属性 */
+	FORMULA("formula"),
 	/** 富文本类型 */
 	INLINESTR("inlineStr"),
 	/** 共享字符串索引类型 */
 	SSTINDEX("s"),
 	/** 数字类型 */
 	NUMBER(""),
-	/** 日期类型 */
+	/** 日期类型，此类型使用值判断，而非属性 */
 	DATE("m/d/yy"),
 	/** 空类型 */
 	NULL("");

File: hutool-core/src/main/java/cn/hutool/core/util/URLUtil.java
Patch:
@@ -782,7 +782,7 @@ public static long getContentLength(URL url) throws IORuntimeException {
 	 * @since 5.3.11
 	 */
 	public static String getDataUriBase64(String mimeType, String data) {
-		return getDataUri(mimeType, null, "BASE64", data);
+		return getDataUri(mimeType, null, "base64", data);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/text/csv/CsvReaderTest.java
Patch:
@@ -16,7 +16,9 @@ public class CsvReaderTest {
 	public void readTest() {
 		CsvReader reader = new CsvReader();
 		CsvData data = reader.read(ResourceUtil.getReader("test.csv", CharsetUtil.CHARSET_UTF_8));
-		Assert.assertEquals("关注\"对象\"", data.getRow(0).get(2));
+		Assert.assertEquals("sss,sss", data.getRow(0).get(0));
+		Assert.assertEquals("性别", data.getRow(0).get(2));
+		Assert.assertEquals("关注\"对象\"", data.getRow(0).get(3));
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -144,7 +144,7 @@ public static void execute(Runnable runnable) {
 	 * @param isDaemon 是否守护线程。守护线程会在主线程结束后自动结束
 	 * @return 执行的方法体
 	 */
-	public static Runnable execAsync(final Runnable runnable, boolean isDaemon) {
+	public static Runnable execAsync(Runnable runnable, boolean isDaemon) {
 		Thread thread = new Thread(runnable);
 		thread.setDaemon(isDaemon);
 		thread.start();

File: hutool-core/src/main/java/cn/hutool/core/lang/Assert.java
Patch:
@@ -486,6 +486,7 @@ public static <T> T[] notEmpty(T[] array) throws IllegalArgumentException {
 	 * </pre>
 	 *
 	 * @param <T>           数组元素类型
+	 * @param <X>           异常类型
 	 * @param array         被检查的数组
 	 * @param errorSupplier 错误抛出异常附带的消息生产接口
 	 * @return 被检查的数组

File: hutool-json/src/main/java/cn/hutool/json/JSONConverter.java
Patch:
@@ -77,9 +77,7 @@ protected static <T> T jsonConvert(Type targetType, Object value, boolean ignore
 			}
 		}
 
-		final T targetValue = ignoreError ?
-				Convert.convertQuietly(targetType, value):
-				Convert.convert(targetType, value);
+		final T targetValue = Convert.convertWithCheck(targetType, value, null, ignoreError);
 
 		if (null == targetValue && false == ignoreError) {
 			if (StrUtil.isBlankIfStr(value)) {

File: hutool-core/src/main/java/cn/hutool/core/date/Month.java
Patch:
@@ -165,7 +165,7 @@ public static Month of(int calendarMonthIntValue) {
 
 	/**
 	 * 获得指定月的最后一天
-	 * @param month 月份
+	 * @param month 月份，从0开始
 	 * @param isLeapYear 是否为闰年，闰年只对二月有影响
 	 * @return 最后一天，可能为28,29,30,31
 	 * @since 5.4.7

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -618,7 +618,7 @@ public static Map<String, Object> beanToMap(Object bean, Map<String, Object> tar
 	 * @param bean            bean对象
 	 * @param targetMap       目标的Map
 	 * @param ignoreNullValue 是否忽略值为空的字段
-	 * @param keyEditor       属性字段（Map的key）编辑器，用于筛选、编辑key
+	 * @param keyEditor       属性字段（Map的key）编辑器，用于筛选、编辑key，如果这个Editor返回null则忽略这个字段
 	 * @return Map
 	 * @since 4.0.5
 	 */

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/CopyOptions.java
Patch:
@@ -194,7 +194,8 @@ public CopyOptions setFieldMapping(Map<String, String> fieldMapping) {
 
 	/**
 	 * 设置字段属性编辑器，用于自定义属性转换规则，例如驼峰转下划线等<br>
-	 * 此转换器只针对源端的字段做转换，请确认转换后与目标端字段一致
+	 * 此转换器只针对源端的字段做转换，请确认转换后与目标端字段一致<br>
+	 * 当转换后的字段名为null时忽略这个字段
 	 *
 	 * @param fieldNameEditor 字段属性编辑器，用于自定义属性转换规则，例如驼峰转下划线等
 	 * @return CopyOptions

File: hutool-cron/src/main/java/cn/hutool/cron/CronTimer.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  * 定时任务计时器<br>
- * 计时器线程每隔一分钟检查一次任务列表，一旦匹配到执行对应的Task
+ * 计时器线程每隔一分钟（一秒钟）检查一次任务列表，一旦匹配到执行对应的Task
  * @author Looly
  *
  */
@@ -57,7 +57,7 @@ public void run() {
 				spawnLauncher(thisTime);
 			}
 		}
-		log.debug("Hutool-cron timer stoped.");
+		log.debug("Hutool-cron timer stopped.");
 	}
 	
 	/**

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -111,8 +111,6 @@ public class CronPattern {
 	/**
 	 * 构造
 	 * 
-	 * @see CronPattern
-	 * 
 	 * @param pattern 表达式
 	 */
 	public CronPattern(String pattern) {

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/BoolArrayValueMatcher.java
Patch:
@@ -1,10 +1,10 @@
 package cn.hutool.cron.pattern.matcher;
 
+import cn.hutool.core.util.StrUtil;
+
 import java.util.Collections;
 import java.util.List;
 
-import cn.hutool.core.util.StrUtil;
-
 /**
  * 将表达式中的数字值列表转换为Boolean数组，匹配时匹配相应数组位
  * @author Looly
@@ -31,6 +31,6 @@ public boolean match(Integer value) {
 	
 	@Override
 	public String toString() {
-		return StrUtil.format("Matcher:{}", (Object)this.bValues);
+		return StrUtil.format("Matcher:{}", new Object[]{this.bValues});
 	}
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -965,7 +965,7 @@ public ExcelWriter writeCellValue(int x, int y, Object value) {
 	 * @param y Y坐标，从0计数，即行号
 	 * @return {@link CellStyle}
 	 * @since 4.0.9
-	 * @deprecated 请使用{@link #createCellStyle(int, int)}
+	 * @deprecated 请使用 {@link #createCellStyle(int, int)}
 	 */
 	@Deprecated
 	public CellStyle createStyleForCell(int x, int y) {

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/ExcelSaxReader.java
Patch:
@@ -114,5 +114,5 @@ default T read(File file, int rid) throws POIException{
 	 */
 	default T read(InputStream in, int rid) throws POIException{
 		return read(in, String.valueOf(rid));
-	};
+	}
 }

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelSaxReadTest.java
Patch:
@@ -106,7 +106,7 @@ public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
 	@Test
 	@Ignore
 	public void dateReadTest() {
-		ExcelUtil.readBySax("d:/test/sax_date_test.xlsx", 0, (i, i1, list) ->
+		ExcelUtil.readBySax("d:/test/date_test.xls", 0, (i, i1, list) ->
 				Console.log(StrUtil.join(", ", list)));
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/util/PageUtilTest.java
Patch:
@@ -12,6 +12,7 @@ public class PageUtilTest {
 	
 	@Test
 	public void transToStartEndTest(){
+		PageUtil.setFirstPageNo(0);
 		int[] startEnd1 = PageUtil.transToStartEnd(0, 10);
 		Assert.assertEquals(0, startEnd1[0]);
 		Assert.assertEquals(10, startEnd1[1]);

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -45,7 +45,8 @@ public class Browser extends UserAgentInfo {
 			new Browser("Yammer Desktop", "AdobeAir", "([\\d\\w\\.\\-]+)\\/Yammer"), //
 			new Browser("Yammer Mobile", "Yammer[\\s]+([\\d\\w\\.\\-]+)", "Yammer[\\s]+([\\d\\w\\.\\-]+)"), //
 			new Browser("Apache HTTP Client", "Apache\\\\-HttpClient", "Apache\\-HttpClient\\/([\\d\\w\\.\\-]+)"), //
-			new Browser("BlackBerry", "BlackBerry", "BlackBerry[\\d]+\\/([\\d\\w\\.\\-]+)")//
+			new Browser("BlackBerry", "BlackBerry", "BlackBerry[\\d]+\\/([\\d\\w\\.\\-]+)"),//
+			new Browser("MicroMessenger", "MicroMessenger", "MicroMessenger\\/([\\d\\w\\.\\-]+)")//
 	);
 
 	private Pattern versionPattern;

File: hutool-core/src/main/java/cn/hutool/core/collection/ListUtil.java
Patch:
@@ -231,7 +231,7 @@ public static <T> ArrayList<T> toList(Enumeration<T> enumeration) {
 	 * 对指定List分页取值
 	 *
 	 * @param <T>      集合元素类型
-	 * @param pageNo   页码，从0开始计数，0表示第一页
+	 * @param pageNo   页码，第一页的页码取决于{@link PageUtil#getFirstPageNo()}，默认0
 	 * @param pageSize 每页的条目数
 	 * @param list     列表
 	 * @return 分页后的段落内容

File: hutool-core/src/test/java/cn/hutool/core/collection/ListUtilTest.java
Patch:
@@ -57,8 +57,6 @@ public void indexOfAll() {
 
 	@Test
 	public void pageTest(){
-
-
 		List<Integer> a = ListUtil.toLinkedList(1, 2, 3,4,5);
 
 		PageUtil.setFirstPageNo(1);

File: hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java
Patch:
@@ -229,7 +229,7 @@ public String schedule(String pattern, Task task) {
 	}
 
 	/**
-	 * 新增Task
+	 * 新增Task，如果任务ID已经存在，抛出异常
 	 * 
 	 * @param id ID，为每一个Task定义一个ID
 	 * @param pattern {@link CronPattern}对应的String表达式
@@ -241,7 +241,7 @@ public Scheduler schedule(String id, String pattern, Runnable task) {
 	}
 
 	/**
-	 * 新增Task
+	 * 新增Task，如果任务ID已经存在，抛出异常
 	 * 
 	 * @param id ID，为每一个Task定义一个ID
 	 * @param pattern {@link CronPattern}对应的String表达式
@@ -253,7 +253,7 @@ public Scheduler schedule(String id, String pattern, Task task) {
 	}
 
 	/**
-	 * 新增Task
+	 * 新增Task，如果任务ID已经存在，抛出异常
 	 * 
 	 * @param id ID，为每一个Task定义一个ID
 	 * @param pattern {@link CronPattern}

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -92,7 +92,7 @@ public static <T> Constructor<T>[] getConstructors(Class<T> beanClass) throws Se
 	}
 
 	/**
-	 * 获得一个类中所有字段列表，直接反射获取，无缓存
+	 * 获得一个类中所有构造列表，直接反射获取，无缓存
 	 *
 	 * @param beanClass 类
 	 * @return 字段列表

File: hutool-http/src/test/java/cn/hutool/http/useragent/UserAgentUtilTest.java
Patch:
@@ -202,6 +202,6 @@ public void parseMicroMessengerTest() {
 		Assert.assertEquals("604.1.38", ua.getEngineVersion());
 		Assert.assertEquals("iPhone", ua.getOs().toString());
 		Assert.assertEquals("iPhone", ua.getPlatform().toString());
-		Assert.assertFalse(ua.isMobile());
+		Assert.assertTrue(ua.isMobile());
 	}
 }

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -45,7 +45,8 @@ public class Browser extends UserAgentInfo {
 			new Browser("Yammer Desktop", "AdobeAir", "([\\d\\w\\.\\-]+)\\/Yammer"), //
 			new Browser("Yammer Mobile", "Yammer[\\s]+([\\d\\w\\.\\-]+)", "Yammer[\\s]+([\\d\\w\\.\\-]+)"), //
 			new Browser("Apache HTTP Client", "Apache\\\\-HttpClient", "Apache\\-HttpClient\\/([\\d\\w\\.\\-]+)"), //
-			new Browser("BlackBerry", "BlackBerry", "BlackBerry[\\d]+\\/([\\d\\w\\.\\-]+)")//
+			new Browser("BlackBerry", "BlackBerry", "BlackBerry[\\d]+\\/([\\d\\w\\.\\-]+)"),//
+			new Browser("MicroMessenger", "MicroMessenger", "MicroMessenger\\/([\\d\\w\\.\\-]+)")//
 	);
 
 	private Pattern versionPattern;

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java
Patch:
@@ -146,9 +146,8 @@ private BeanDesc init() {
 			if (false == ModifierUtil.isStatic(field)) {
 				//只针对非static属性
 				prop = createProp(field, methods);
-				PropDesc finalProp = prop;
 				// 只有不存在时才放入，防止父类属性覆盖子类属性
-				this.propMap.putIfAbsent(prop.getFieldName(), finalProp);
+				this.propMap.putIfAbsent(prop.getFieldName(), prop);
 			}
 		}
 		return this;

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -465,6 +465,8 @@ public static class Food {
 
 	@Data
 	public static class HllFoodEntity implements Serializable {
+		private static final long serialVersionUID = 1L;
+
 		private String bookId;
 		@Alias("code")
 		private String code2;

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java
Patch:
@@ -146,7 +146,9 @@ private BeanDesc init() {
 			if (false == ModifierUtil.isStatic(field)) {
 				//只针对非static属性
 				prop = createProp(field, methods);
-				this.propMap.put(prop.getFieldName(), prop);
+				PropDesc finalProp = prop;
+				// 只有不存在时才放入，防止父类属性覆盖子类属性
+				this.propMap.putIfAbsent(prop.getFieldName(), finalProp);
 			}
 		}
 		return this;

File: hutool-core/src/main/java/cn/hutool/core/date/ChineseDate.java
Patch:
@@ -48,7 +48,7 @@ public class ChineseDate {
 	 */
 	public ChineseDate(Date date) {
 		// 求出和1900年1月31日相差的天数
-		int offset = (int) ((date.getTime() / DateUnit.DAY.getMillis()) - BASE_DAY);
+		int offset = (int) ((DateUtil.beginOfDay(date).getTime() / DateUnit.DAY.getMillis()) - BASE_DAY);
 		// 计算农历年份
 		// 用offset减去每农历年的天数，计算当天是农历第几天，offset是当年的第几天
 		int daysOfYear;

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -862,7 +862,7 @@ public static File createTempFile(String prefix, String suffix, File dir, boolea
 	 */
 	public static File copyFile(String src, String dest, StandardCopyOption... options) throws IORuntimeException {
 		Assert.notBlank(src, "Source File path is blank !");
-		Assert.notNull(src, "Destination File path is null !");
+		Assert.notBlank(dest, "Destination File path is blank !");
 		return copyFile(Paths.get(src), Paths.get(dest), options).toFile();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java
Patch:
@@ -146,7 +146,9 @@ private BeanDesc init() {
 			if (false == ModifierUtil.isStatic(field)) {
 				//只针对非static属性
 				prop = createProp(field, methods);
-				this.propMap.put(prop.getFieldName(), prop);
+				PropDesc finalProp = prop;
+				// 只有不存在时才放入，防止父类属性覆盖子类属性
+				this.propMap.putIfAbsent(prop.getFieldName(), finalProp);
 			}
 		}
 		return this;

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelReadTest.java
Patch:
@@ -217,8 +217,9 @@ public void readCellsTest() {
 	@Test
 	@Ignore
 	public void readTest() {
+		// 测试合并单元格是否可以正常读到第一个单元格的值
 		final ExcelReader reader = ExcelUtil.getReader("d:/test/人员体检信息表.xlsx");
-		final List<List<Object>> read = reader.read(2);
+		final List<List<Object>> read = reader.read();
 		for (List<Object> list : read) {
 			Console.log(list);
 		}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellUtil.java
Patch:
@@ -103,7 +103,7 @@ public static Object getCellValue(Cell cell, CellType cellType, CellEditor cellE
 			cellType = cell.getCellTypeEnum();
 		}
 
-		if(CellType.BLANK == cellType){
+		if(CellType.BLANK == cellType || CellUtil.isMergedRegion(cell)){
 			// 空白单元格可能为合并单元格
 			cell = getMergedRegionCell(cell);
 			cellType = cell.getCellTypeEnum();

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -159,6 +159,7 @@ public void parseFromXmlTest() {
 	public void doubleTest(){
 		String json = "{\"test\": 12.00}";
 		final JSONObject jsonObject = JSONUtil.parseObj(json);
+		//noinspection BigDecimalMethodWithoutRoundingCalled
 		Assert.assertEquals("12.00", jsonObject.getBigDecimal("test").setScale(2).toString());
 	}
 }

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelReadTest.java
Patch:
@@ -213,4 +213,5 @@ public void readCellsTest() {
 		final ExcelReader reader = ExcelUtil.getReader("merge_test.xlsx");
 		reader.read((cell, value)-> Console.log("{}, {} {}", cell.getRowIndex(), cell.getColumnIndex(), value));
 	}
+
 }

File: hutool-core/src/main/java/cn/hutool/core/date/chinese/LunarFestival.java
Patch:
@@ -85,6 +85,7 @@ public class LunarFestival {
 	/**
 	 * 获得节日列表
 	 *
+	 * @param year 年
 	 * @param month 月
 	 * @param day   日
 	 * @return 获得农历节日

File: hutool-json/src/main/java/cn/hutool/json/JSONTokener.java
Patch:
@@ -349,7 +349,7 @@ public Object nextValue() throws JSONException {
 		this.back();
 
 		string = sb.toString().trim();
-		if ("".equals(string)) {
+		if (0 == string.length()) {
 			throw this.syntaxError("Missing value");
 		}
 		return InternalJSONUtil.stringToValue(string);

File: hutool-core/src/main/java/cn/hutool/core/date/ChineseDate.java
Patch:
@@ -167,7 +167,7 @@ public int getMonth() {
 	 * @return 是否为闰月
 	 * @since 5.4.2
 	 */
-	public boolean isLeapMonth(){
+	public boolean isLeapMonth() {
 		return ChineseMonth.isLeapMonth(this.year, this.month);
 	}
 
@@ -230,7 +230,7 @@ public String getChineseDay() {
 	 * @return 获得农历节日
 	 */
 	public String getFestivals() {
-		return StrUtil.join(",", LunarFestival.getFestivals(this.month, this.day));
+		return StrUtil.join(",", LunarFestival.getFestivals(this.year, this.month, day));
 	}
 
 	/**
@@ -258,7 +258,7 @@ public String getCyclical() {
 	 * @return 获得天干地支的年月日信息
 	 */
 	public String getCyclicalYMD() {
-		if (gyear >= LunarInfo.BASE_YEAR && gmonth > 0 && gday > 0){
+		if (gyear >= LunarInfo.BASE_YEAR && gmonth > 0 && gday > 0) {
 			return (cyclicalm(gyear, gmonth, gday));
 		}
 		return null;

File: hutool-core/src/test/java/cn/hutool/core/img/ImgUtilTest.java
Patch:
@@ -25,7 +25,9 @@ public void scaleTest() {
 	@Test
 	@Ignore
 	public void scaleTest2() {
-		ImgUtil.scale(FileUtil.file("e:/pic/test.jpg"), FileUtil.file("e:/pic/test_result.jpg"), 0.8f);
+		ImgUtil.scale(
+				FileUtil.file("d:/test/2.png"),
+				FileUtil.file("d:/test/2_result.jpg"), 600, 337, null);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java
Patch:
@@ -524,9 +524,9 @@ public static char randomChar(String baseString) {
 	 * @since 4.1.5
 	 * @deprecated 使用{@link ImagUtil#randomColor()}
 	 */
-	public static Color randomColor() {
+		public static Color randomColor() {
 		final Random random = getRandom();
-		return new Color(random.nextInt(256), random.nextInt(2565), random.nextInt(256));
+		return new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -245,6 +245,8 @@ public void factorialTest(){
 		Assert.assertEquals(120, factorial);
 		factorial = NumberUtil.factorial(5, 1);
 		Assert.assertEquals(120, factorial);
+
+		Assert.assertEquals(5, NumberUtil.factorial(5, 4));
 	}
 
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelExtractorUtil.java
Patch:
@@ -16,6 +16,7 @@ public class ExcelExtractorUtil {
 	/**
 	 * 获取 {@link ExcelExtractor} 对象
 	 *
+	 * @param wb {@link Workbook}
 	 * @return {@link ExcelExtractor}
 	 */
 	public static ExcelExtractor getExtractor(Workbook wb) {
@@ -32,7 +33,7 @@ public static ExcelExtractor getExtractor(Workbook wb) {
 	 * 读取为文本格式<br>
 	 * 使用{@link ExcelExtractor} 提取Excel内容
 	 *
-	 * @param wb {@link Workbook}
+	 * @param wb            {@link Workbook}
 	 * @param withSheetName 是否附带sheet名
 	 * @return Excel文本
 	 * @since 4.1.0

File: hutool-poi/src/main/java/cn/hutool/poi/excel/reader/AbstractSheetReader.java
Patch:
@@ -130,9 +130,9 @@ protected String aliasHeader(Object headerObj, int index) {
 	/**
 	 * 读取某一行数据
 	 *
+	 * @param sheet {@link Sheet}
 	 * @param rowIndex 行号，从0开始
 	 * @return 一行数据
-	 * @since 4.0.3
 	 */
 	protected List<Object> readRow(Sheet sheet, int rowIndex) {
 		return RowUtil.readRow(sheet.getRow(rowIndex), this.cellEditor);

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -43,9 +43,9 @@ public class CharUtil {
 	public static final char DOUBLE_QUOTES = '"';
 	/** 字符常量：单引号 ' */
 	public static final char SINGLE_QUOTE = '\'';
-	/** 字符常量：冒号 : */
+	/** 字符常量：与 &amp; */
 	public static final char AMP = '&';
-	/** 字符常量：与 & */
+	/** 字符常量：冒号 : */
 	public static final char COLON = ':';
 	/** 字符常量：艾特 @ */
 	public static final char AT = '@';

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -120,15 +120,15 @@ public class StrUtil {
 
 	/** 字符串常量：HTML 空格转义 */
 	public static final String HTML_NBSP = "&nbsp;";
-	/** 字符串常量：HTML And 符转义 & */
+	/** 字符串常量：HTML And 符转义 &amp; */
 	public static final String HTML_AMP = "&amp;";
 	/** 字符串常量：HTML 双引号转义 " */
 	public static final String HTML_QUOTE = "&quot;";
 	/** 字符串常量：HTML 单引号转义 ' */
 	public static final String HTML_APOS = "&apos;";
-	/** 字符串常量：HTML 小于号转义 < */
+	/** 字符串常量：HTML 小于号转义 &lt; */
 	public static final String HTML_LT = "&lt;";
-	/** 字符串常量：HTML 大于号转义 > */
+	/** 字符串常量：HTML 大于号转义 &gt; */
 	public static final String HTML_GT = "&gt;";
 	/** 字符串常量：空 JSON "{}" */
 	public static final String EMPTY_JSON = "{}";

File: hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java
Patch:
@@ -18,6 +18,7 @@ public class Html4Escape extends ReplacerChain {
 			{ "&", "&amp;" }, // & - ampersand
 			{ "<", "&lt;" }, // < - less-than
 			{ ">", "&gt;" }, // > - greater-than
+			{"\'", "&apos;"} // ' - quote
 	};
 
 	protected static final String[][] ISO8859_1_ESCAPE = { //

File: hutool-http/src/test/java/cn/hutool/http/test/HtmlUtilTest.java
Patch:
@@ -119,6 +119,7 @@ public void escapeTest() {
 		Assert.assertEquals("&lt;html&gt;&lt;body&gt;123&#039;123&#039;&lt;/body&gt;&lt;/html&gt;", escape);
 		String restoreEscaped = HtmlUtil.unescape(escape);
 		Assert.assertEquals(html, restoreEscaped);
+		Assert.assertEquals("\'", HtmlUtil.unescape("&apos;"));
 	}
 	
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java
Patch:
@@ -5,6 +5,8 @@
 
 /**
  * HTML4的ESCAPE
+ * 参考：Commons Lang3
+ *
  * @author looly
  *
  */

File: hutool-extra/src/main/java/cn/hutool/extra/mail/GlobalMailAccount.java
Patch:
@@ -38,7 +38,7 @@ private MailAccount createDefaultAccount() {
 		for (String mailSettingPath : MailAccount.MAIL_SETTING_PATHS) {
 			try {
 				return new MailAccount(mailSettingPath);
-			} catch (IORuntimeException e) {
+			} catch (IORuntimeException ignore) {
 				//ignore
 			}
 		}

File: hutool-http/src/main/java/cn/hutool/http/webservice/SoapClient.java
Patch:
@@ -93,7 +93,7 @@ public class SoapClient extends HttpBase<SoapClient> {
 	 * 创建SOAP客户端，默认使用soap1.1版本协议
 	 *
 	 * @param url WS的URL地址
-	 * @return {@link SoapClient}
+	 * @return this
 	 */
 	public static SoapClient create(String url) {
 		return new SoapClient(url);
@@ -104,7 +104,7 @@ public static SoapClient create(String url) {
 	 *
 	 * @param url      WS的URL地址
 	 * @param protocol 协议，见{@link SoapProtocol}
-	 * @return {@link SoapClient}
+	 * @return this
 	 */
 	public static SoapClient create(String url, SoapProtocol protocol) {
 		return new SoapClient(url, protocol);
@@ -116,7 +116,7 @@ public static SoapClient create(String url, SoapProtocol protocol) {
 	 * @param url          WS的URL地址
 	 * @param protocol     协议，见{@link SoapProtocol}
 	 * @param namespaceURI 方法上的命名空间URI
-	 * @return {@link SoapClient}
+	 * @return this
 	 * @since 4.5.6
 	 */
 	public static SoapClient create(String url, SoapProtocol protocol, String namespaceURI) {

File: hutool-core/src/main/java/cn/hutool/core/text/escape/Html4Escape.java
Patch:
@@ -16,6 +16,7 @@ public class Html4Escape extends ReplacerChain {
 			{ "&", "&amp;" }, // & - ampersand
 			{ "<", "&lt;" }, // < - less-than
 			{ ">", "&gt;" }, // > - greater-than
+			{"\'", "&apos;"} // ' - quote
 	};
 
 	protected static final String[][] ISO8859_1_ESCAPE = { //

File: hutool-http/src/test/java/cn/hutool/http/test/HtmlUtilTest.java
Patch:
@@ -119,6 +119,7 @@ public void escapeTest() {
 		Assert.assertEquals("&lt;html&gt;&lt;body&gt;123&#039;123&#039;&lt;/body&gt;&lt;/html&gt;", escape);
 		String restoreEscaped = HtmlUtil.unescape(escape);
 		Assert.assertEquals(html, restoreEscaped);
+		Assert.assertEquals("\'", HtmlUtil.unescape("&apos;"));
 	}
 	
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -29,6 +29,7 @@ public class CharUtil {
 	public static final char DOUBLE_QUOTES = '"';
 	public static final char SINGLE_QUOTE = '\'';
 	public static final char AMP = '&';
+	public static final char AT = '@';
 
 	/**
 	 * 是否为ASCII字符，ASCII字符位于0~127之间

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -48,6 +48,7 @@ public class StrUtil {
 	public static final char C_BRACKET_START = CharUtil.BRACKET_START;
 	public static final char C_BRACKET_END = CharUtil.BRACKET_END;
 	public static final char C_COLON = CharUtil.COLON;
+	public static final char C_AT = CharUtil.AT;
 
 	public static final String SPACE = " ";
 	public static final String TAB = "	";
@@ -68,6 +69,7 @@ public class StrUtil {
 	public static final String BRACKET_START = "[";
 	public static final String BRACKET_END = "]";
 	public static final String COLON = ":";
+	public static final String AT = "@";
 
 	public static final String HTML_NBSP = "&nbsp;";
 	public static final String HTML_AMP = "&amp;";

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -1116,6 +1116,8 @@ private static void deflater(InputStream in, OutputStream out, int level, boolea
 	 * @since 5.0.5
 	 */
 	private static File buildFile(File outFile, String fileName) {
+		// 替换Windows路径分隔符为Linux路径分隔符，便于统一处理
+		fileName = fileName.replace('\\', '/');
 		if (false == FileUtil.isWindows()
 				// 检查文件名中是否包含"/"，不考虑以"/"结尾的情况
 				&& fileName.lastIndexOf(CharUtil.SLASH, fileName.length() - 2) > 0) {

File: hutool-poi/src/main/java/cn/hutool/poi/word/TableUtil.java
Patch:
@@ -71,14 +71,15 @@ public static void writeRow(XWPFTableRow row, Object rowBean, boolean isWriteKey
 			return;
 		}
 		
-		Map rowMap = null;
+		Map rowMap;
 		if(rowBean instanceof Map) {
 			rowMap = (Map) rowBean;
 		} else if (BeanUtil.isBean(rowBean.getClass())) {
 			rowMap = BeanUtil.beanToMap(rowBean, new LinkedHashMap<>(), false, false);
 		} else {
 			// 其它转为字符串默认输出
 			writeRow(row, CollUtil.newArrayList(rowBean), isWriteKeyAsHead);
+			return;
 		}
 		
 		writeRow(row, rowMap, isWriteKeyAsHead);
@@ -98,6 +99,7 @@ public static void writeRow(XWPFTableRow row, Map<?, ?> rowMap, boolean isWriteK
 
 		if (isWriteKeyAsHead) {
 			writeRow(row, rowMap.keySet());
+			row = row.getTable().createRow();
 		}
 		writeRow(row, rowMap.values());
 	}

File: hutool-core/src/main/java/cn/hutool/core/util/CharUtil.java
Patch:
@@ -29,6 +29,7 @@ public class CharUtil {
 	public static final char DOUBLE_QUOTES = '"';
 	public static final char SINGLE_QUOTE = '\'';
 	public static final char AMP = '&';
+	public static final char AT = '@';
 
 	/**
 	 * 是否为ASCII字符，ASCII字符位于0~127之间

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -48,6 +48,7 @@ public class StrUtil {
 	public static final char C_BRACKET_START = CharUtil.BRACKET_START;
 	public static final char C_BRACKET_END = CharUtil.BRACKET_END;
 	public static final char C_COLON = CharUtil.COLON;
+	public static final char C_AT = CharUtil.AT;
 
 	public static final String SPACE = " ";
 	public static final String TAB = "	";
@@ -68,6 +69,7 @@ public class StrUtil {
 	public static final String BRACKET_START = "[";
 	public static final String BRACKET_END = "]";
 	public static final String COLON = ":";
+	public static final String AT = "@";
 
 	public static final String HTML_NBSP = "&nbsp;";
 	public static final String HTML_AMP = "&amp;";

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -109,6 +109,7 @@ public T copy() {
 				}
 			}
 		}
+
 		return this.dest;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/LocalDateTimeUtil.java
Patch:
@@ -428,7 +428,7 @@ public static Duration between(LocalDateTime startTime, LocalDateTime endTime) {
 	 * @return 一天的开始时间
 	 */
 	public static LocalDateTime beginOfDay(LocalDateTime time) {
-		return time.with(LocalTime.of(0, 0, 0, 0));
+		return time.with(LocalTime.MIN);
 	}
 
 	/**
@@ -438,7 +438,7 @@ public static LocalDateTime beginOfDay(LocalDateTime time) {
 	 * @return 一天的结束时间
 	 */
 	public static LocalDateTime endOfDay(LocalDateTime time) {
-		return time.with(LocalTime.of(23, 59, 59, 999_999_999));
+		return time.with(LocalTime.MAX);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ServiceLoaderUtil.java
Patch:
@@ -1,12 +1,12 @@
 package cn.hutool.core.util;
 
-import cn.hutool.core.collection.ListUtil;
-
 import java.util.Iterator;
 import java.util.List;
 import java.util.ServiceConfigurationError;
 import java.util.ServiceLoader;
 
+import cn.hutool.core.collection.ListUtil;
+
 /**
  * SPI机制中的服务加载工具类，流程如下
  *
@@ -64,7 +64,7 @@ public static <T> T loadFirst(Class<T> clazz) {
 	 * @return 服务接口实现列表
 	 */
 	public static <T> ServiceLoader<T> load(Class<T> clazz) {
-		return load(clazz, null);
+		return load(clazz, Thread.currentThread().getContextClassLoader());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2842,6 +2842,8 @@ public static <T> void padRight(Collection<T> list, int minLen, T padObj) {
 	 *
 	 * @param <F> 源元素类型
 	 * @param <T> 目标元素类型
+	 * @param collection 集合
+	 * @param function 转换函数
 	 * @return 新类型的集合
 	 * @since 5.4.3
 	 */

File: hutool-core/src/main/java/cn/hutool/core/collection/SpliteratorUtil.java
Patch:
@@ -16,6 +16,8 @@ public class SpliteratorUtil {
 	 *
 	 * @param <F> 源元素类型
 	 * @param <T> 目标元素类型
+	 * @param fromSpliterator 源{@link Spliterator}
+	 * @param function 转换函数
 	 * @return 新类型的{@link Spliterator}
 	 */
 	public static <F, T> Spliterator<T> trans(Spliterator<F> fromSpliterator, Function<? super F, ? extends T> function) {

File: hutool-http/src/main/java/cn/hutool/http/cookie/GlobalCookieManager.java
Patch:
@@ -69,7 +69,7 @@ public static void add(HttpConnection conn) {
 
 		Map<String, List<String>> cookieHeader;
 		try {
-			cookieHeader = cookieManager.get(getURI(conn), new HashMap<String, List<String>>(0));
+			cookieHeader = cookieManager.get(getURI(conn), new HashMap<>(0));
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		}

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java
Patch:
@@ -27,6 +27,7 @@
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import java.io.BufferedInputStream;
+import java.io.BufferedReader;
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
@@ -91,8 +92,8 @@ public static Map<String, String> getParamMap(ServletRequest request) {
 	 * @since 4.0.2
 	 */
 	public static String getBody(ServletRequest request) {
-		try {
-			return IoUtil.read(request.getReader());
+		try(final BufferedReader reader = request.getReader()) {
+			return IoUtil.read(reader);
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		}

File: hutool-log/src/main/java/cn/hutool/log/dialect/console/ConsoleLog.java
Patch:
@@ -120,6 +120,7 @@ public void log(String fqcn, Level level, Throwable t, String format, Object...
 			return;
 		}
 
+
 		final Dict dict = Dict.create()
 				.set("date", DateUtil.now())
 				.set("level", level.toString())

File: hutool-log/src/main/java/cn/hutool/log/dialect/tinylog/TinyLog.java
Patch:
@@ -116,7 +116,7 @@ private void logIfEnabled(String fqcn, Level level, Throwable t, String format,
 		if(null == t){
 			t = getLastArgumentIfThrowable(arguments);
 		}
-		LogEntryForwarder.forward(DEPTH, level, t, format, arguments);
+		LogEntryForwarder.forward(DEPTH, level, t, StrUtil.toString(format), arguments);
 	}
 	
 	/**

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -3,6 +3,7 @@
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.date.BetweenFormater.Level;
 import cn.hutool.core.date.format.FastDateFormat;
+import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 

File: hutool-http/src/test/java/cn/hutool/http/test/HttpUtilTest.java
Patch:
@@ -236,7 +236,8 @@ public void decodeParamTest() {
 		map = HttpUtil.decodeParams(a, CharsetUtil.UTF_8);
 		Assert.assertEquals("b", map.get("a").get(0));
 		Assert.assertEquals("d", map.get("c").get(0));
-		Assert.assertEquals("", map.get("e").get(0));
+		Assert.assertNull(map.get("e").get(0));
+		Assert.assertNull(map.get("").get(0));
 
 		// 被编码的键和值被还原
 		a = "a=bbb&c=%E4%BD%A0%E5%A5%BD&%E5%93%88%E5%96%BD=";

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -462,6 +462,9 @@ public int length() {
 
 	@Override
 	public char charAt(int index) {
+		if(index < 0){
+			index = this.position + index;
+		}
 		if ((index < 0) || (index > this.position)) {
 			throw new StringIndexOutOfBoundsException(index);
 		}

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java
Patch:
@@ -196,6 +196,6 @@ protected Key getKeyByType(KeyType type) {
 				}
 				return this.publicKey;
 		}
-		throw new CryptoException("Uknown key type: " + type);
+		throw new CryptoException("Unsupported key type: " + type);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/Dict.java
Patch:
@@ -93,9 +93,9 @@ public static Dict of(Object... keysAndValues) {
 		String key = null;
 		for(int i = 0; i < keysAndValues.length; i++){
 			if(i % 2 == 0){
-				dict.put(key, keysAndValues[i]);
-			} else{
 				key = Convert.toStr(keysAndValues[i]);
+			} else{
+				dict.put(key, keysAndValues[i]);
 			}
 		}
 

File: hutool-db/src/main/java/cn/hutool/db/StatementUtil.java
Patch:
@@ -163,8 +163,9 @@ public static PreparedStatement prepareStatementForBatch(Connection conn, String
 		sql = sql.trim();
 		SqlLog.INSTANCE.log(sql, paramsBatch);
 		PreparedStatement ps = conn.prepareStatement(sql);
+		Map<Integer, Integer> nullTypeMap = new HashMap<>();
 		for (Object[] params : paramsBatch) {
-			StatementUtil.fillParams(ps, params);
+			StatementUtil.fillParams(ps, params, nullTypeMap);
 			ps.addBatch();
 		}
 		return ps;

File: hutool-db/src/main/java/cn/hutool/db/StatementUtil.java
Patch:
@@ -163,8 +163,9 @@ public static PreparedStatement prepareStatementForBatch(Connection conn, String
 		sql = sql.trim();
 		SqlLog.INSTANCE.log(sql, paramsBatch);
 		PreparedStatement ps = conn.prepareStatement(sql);
+		Map<Integer, Integer> nullTypeMap = new HashMap<>();
 		for (Object[] params : paramsBatch) {
-			StatementUtil.fillParams(ps, params);
+			StatementUtil.fillParams(ps, params, nullTypeMap);
 			ps.addBatch();
 		}
 		return ps;

File: hutool-core/src/test/java/cn/hutool/core/img/ImgUtilTest.java
Patch:
@@ -84,7 +84,7 @@ public void pressTextTest() {
 	@Test
 	@Ignore
 	public void sliceByRowsAndColsTest() {
-		ImgUtil.sliceByRowsAndCols(FileUtil.file("e:/pic/1.png"), FileUtil.file("e:/pic/dest"), 10, 10);
+		ImgUtil.sliceByRowsAndCols(FileUtil.file("d:/test/logo.jpg"), FileUtil.file("d:/test/dest"), 1, 5);
 	}
 	
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -216,12 +216,12 @@ private void valueProviderToBean(ValueProvider<String> valueProvider, Object bea
 		}
 		final HashSet<String> ignoreSet = (null != copyOptions.ignoreProperties) ? CollUtil.newHashSet(copyOptions.ignoreProperties) : null;
 
+		// 遍历目标bean的所有属性
 		BeanUtil.descForEach(actualEditable, (prop)->{
 			if(false == prop.isWritable(this.copyOptions.isTransientSupport())){
 				// 字段不可写，跳过之
 				return;
 			}
-
 			// 检查属性名
 			String fieldName = prop.getFieldName();
 			if (CollUtil.contains(ignoreSet, fieldName)) {

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/BeanValueProvider.java
Patch:
@@ -48,7 +48,7 @@ public boolean containsKey(String key) {
 		final PropDesc sourcePd = getPropDesc(key, null);
 
 		// 字段描述不存在或忽略读的情况下，表示不存在
-		return null != sourcePd && false == sourcePd.isReadable(false);
+		return null != sourcePd && sourcePd.isReadable(false);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -4,7 +4,6 @@
 import cn.hutool.core.bean.copier.CopyOptions;
 import cn.hutool.core.bean.copier.ValueProvider;
 import cn.hutool.core.collection.CollUtil;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import lombok.Data;
 import lombok.Getter;
@@ -444,7 +443,7 @@ public static class HllFoodEntity implements Serializable {
 	public void setPropertiesTest(){
 		Map<String, Object> resultMap = MapUtil.newHashMap();
 		BeanUtil.setProperty(resultMap, "codeList[0].name", "张三");
-		Console.log(resultMap);
+		Assert.assertEquals("{codeList={0={name=张三}}}", resultMap.toString());
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertToBeanTest.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.core.convert;
 
 import cn.hutool.core.bean.BeanUtilTest.SubPerson;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.lang.TypeReference;
 import org.junit.Assert;
 import org.junit.Test;
@@ -62,7 +61,6 @@ public void mapToMapTest() {
 		map1.put("key4", 4);
 
 		Map<String, String> map2 = Convert.toMap(String.class, String.class, map1);
-		Console.log(map2);
 
 		Assert.assertEquals("1", map2.get("key1"));
 		Assert.assertEquals("2", map2.get("key2"));

File: hutool-core/src/main/java/cn/hutool/core/bean/DynaBean.java
Patch:
@@ -82,7 +82,7 @@ public <T> T get(String fieldName) throws BeanException {
 		if (Map.class.isAssignableFrom(beanClass)) {
 			return (T) ((Map<?, ?>) bean).get(fieldName);
 		} else {
-			final BeanDesc.PropDesc prop = BeanUtil.getBeanDesc(beanClass).getProp(fieldName);
+			final PropDesc prop = BeanUtil.getBeanDesc(beanClass).getProp(fieldName);
 			if(null == prop){
 				throw new BeanException("No public field or get method for {}", fieldName);
 			}
@@ -129,7 +129,7 @@ public void set(String fieldName, Object value) throws BeanException {
 		if (Map.class.isAssignableFrom(beanClass)) {
 			((Map) bean).put(fieldName, value);
 		} else {
-			final BeanDesc.PropDesc prop = BeanUtil.getBeanDesc(beanClass).getProp(fieldName);
+			final PropDesc prop = BeanUtil.getBeanDesc(beanClass).getProp(fieldName);
 			if(null == prop){
 				throw new BeanException("No public field or set method for {}", fieldName);
 			}

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/BeanValueProvider.java
Patch:
@@ -1,7 +1,7 @@
 package cn.hutool.core.bean.copier.provider;
 
-import cn.hutool.core.bean.BeanDesc.PropDesc;
 import cn.hutool.core.bean.BeanUtil;
+import cn.hutool.core.bean.PropDesc;
 import cn.hutool.core.bean.copier.ValueProvider;
 import cn.hutool.core.util.StrUtil;
 
@@ -38,7 +38,7 @@ public Object value(String key, Type valueType) {
 
 		Object result = null;
 		if (null != sourcePd) {
-			result = sourcePd.getValueWithConvert(this.source, valueType, this.ignoreError);
+			result = sourcePd.getValue(this.source, valueType, this.ignoreError);
 		}
 		return result;
 	}
@@ -48,7 +48,7 @@ public boolean containsKey(String key) {
 		final PropDesc sourcePd = getPropDesc(key, null);
 
 		// 字段描述不存在或忽略读的情况下，表示不存在
-		return null != sourcePd && false == sourcePd.isIgnoreGet();
+		return null != sourcePd && false == sourcePd.isReadable(false);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanDescTest.java
Patch:
@@ -3,8 +3,6 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-import cn.hutool.core.bean.BeanDesc.PropDesc;
-
 /**
  * {@link BeanDesc} 单元测试类
  * 

File: hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java
Patch:
@@ -1,7 +1,7 @@
 package cn.hutool.db.handler;
 
-import cn.hutool.core.bean.BeanDesc.PropDesc;
 import cn.hutool.core.bean.BeanUtil;
+import cn.hutool.core.bean.PropDesc;
 import cn.hutool.core.convert.Convert;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.core.util.ArrayUtil;

File: hutool-core/src/main/java/cn/hutool/core/io/unit/DataSizeUtil.java
Patch:
@@ -31,7 +31,7 @@ public static String format(long size) {
 		if (size <= 0) {
 			return "0";
 		}
-		int digitGroups = (int) (Math.log10(size) / Math.log10(1024));
+		int digitGroups = Math.min(DataUnit.UNIT_NAMES.length-1, (int) (Math.log10(size) / Math.log10(1024)));
 		return new DecimalFormat("#,##0.##")
 				.format(size / Math.pow(1024, digitGroups)) + " " + DataUnit.UNIT_NAMES[digitGroups];
 	}

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2023,7 +2023,7 @@ public static <T> Collection<T> addAll(Collection<T> collection, Object value, T
 		if (null == collection || null == value) {
 			return collection;
 		}
-		if (TypeUtil.isUnknow(elementType)) {
+		if (TypeUtil.isUnknown(elementType)) {
 			// 元素类型为空时，使用Object类型来接纳所有类型
 			elementType = Object.class;
 		}

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -226,14 +226,14 @@ public <T> Converter<T> getCustomConverter(Type type) {
 	 */
 	@SuppressWarnings("unchecked")
 	public <T> T convert(Type type, Object value, T defaultValue, boolean isCustomFirst) throws ConvertException {
-		if (TypeUtil.isUnknow(type) && null == defaultValue) {
+		if (TypeUtil.isUnknown(type) && null == defaultValue) {
 			// 对于用户不指定目标类型的情况，返回原值
 			return (T) value;
 		}
 		if (ObjectUtil.isNull(value)) {
 			return defaultValue;
 		}
-		if (TypeUtil.isUnknow(type)) {
+		if (TypeUtil.isUnknown(type)) {
 			type = defaultValue.getClass();
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicReferenceConverter.java
Patch:
@@ -23,7 +23,7 @@ protected AtomicReference<?> convertInternal(Object value) {
 		//尝试将值转换为Reference泛型的类型
 		Object targetValue = null;
 		final Type paramType = TypeUtil.getTypeArgument(AtomicReference.class);
-		if(false == TypeUtil.isUnknow(paramType)){
+		if(false == TypeUtil.isUnknown(paramType)){
 			targetValue = ConverterRegistry.getInstance().convert(paramType, value);
 		}
 		if(null == targetValue){

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java
Patch:
@@ -86,8 +86,8 @@ private void convertMapToMap(Map<?, ?> srcMap, Map<Object, Object> targetMap) {
 		Object key;
 		Object value;
 		for (Entry<?, ?> entry : srcMap.entrySet()) {
-			key = TypeUtil.isUnknow(this.keyType) ? entry.getKey() : convert.convert(this.keyType, entry.getKey());
-			value = TypeUtil.isUnknow(this.valueType) ? entry.getValue() : convert.convert(this.valueType, entry.getValue());
+			key = TypeUtil.isUnknown(this.keyType) ? entry.getKey() : convert.convert(this.keyType, entry.getKey());
+			value = TypeUtil.isUnknown(this.valueType) ? entry.getValue() : convert.convert(this.valueType, entry.getValue());
 			targetMap.put(key, value);
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/ReferenceConverter.java
Patch:
@@ -37,7 +37,7 @@ protected Reference<?> convertInternal(Object value) {
 		//尝试将值转换为Reference泛型的类型
 		Object targetValue = null;
 		final Type paramType = TypeUtil.getTypeArgument(targetType);
-		if(false == TypeUtil.isUnknow(paramType)){
+		if(false == TypeUtil.isUnknown(paramType)){
 			targetValue = ConverterRegistry.getInstance().convert(paramType, value);
 		}
 		if(null == targetValue){

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1350,7 +1350,7 @@ public static List<Object> extract(Iterable<?> collection, Editor<Object> editor
 	 * @return 抽取后的新列表
 	 * @since 5.3.5
 	 */
-	public static <T, R> List<R> map(Iterable<T> collection, Function<T, R> func, boolean ignoreNull) {
+	public static <T, R> List<R> map(Iterable<T> collection, Function<? super T, ? extends R> func, boolean ignoreNull) {
 		final List<R> fieldValueList = new ArrayList<>();
 		if (null == collection) {
 			return fieldValueList;

File: hutool-extra/src/main/java/cn/hutool/extra/cglib/CglibUtil.java
Patch:
@@ -134,7 +134,7 @@ public static <S, T> List<T> copyList(Collection<S> source, Supplier<T> target,
 	public static <S, T> List<T> copyList(Collection<S> source, Supplier<T> target, Converter converter, BiConsumer<S, T> callback) {
 		return source.stream().map(s -> {
 			T t = target.get();
-			copy(source, t, converter);
+			copy(s, t, converter);
 			if (callback != null) {
 				callback.accept(s, t);
 			}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelFileUtil.java
Patch:
@@ -23,8 +23,7 @@ public class ExcelFileUtil {
 	 * @return 是否为XLS格式的Excel文件（HSSF）
 	 */
 	public static boolean isXls(InputStream in) {
-
-		/**
+		/*
 		 * {@link java.io.PushbackInputStream}
 		 * PushbackInputStream的markSupported()为false，并不支持mark和reset
 		 * 如果强转成PushbackInputStream在调用FileMagic.valueOf(inputStream)时会报错

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvRow.java
Patch:
@@ -107,7 +107,7 @@ public Map<String, String> getFieldMap() {
 	 * @since 5.3.6
 	 */
 	public <T> T toBean(Class<T> clazz){
-		return BeanUtil.mapToBean(getFieldMap(), clazz, true);
+		return BeanUtil.toBeanIgnoreError(getFieldMap(), clazz);
 	}
 
 	/**

File: hutool-json/src/test/java/cn/hutool/json/XMLTest.java
Patch:
@@ -5,10 +5,11 @@
 
 public class XMLTest {
 
-	@SuppressWarnings("ConstantConditions")
 	@Test
 	public void toXmlTest(){
-		final JSONObject put = JSONUtil.createObj().put("aaa", "你好").put("键2", "test");
+		final JSONObject put = JSONUtil.createObj()
+				.set("aaa", "你好")
+				.set("键2", "test");
 		final String s = JSONUtil.toXmlStr(put);
 		Assert.assertEquals("<aaa>你好</aaa><键2>test</键2>", s);
 	}

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -31,7 +31,7 @@ public class ThreadUtil {
 	 * @param corePoolSize 同时执行的线程数大小
 	 * @return ExecutorService
 	 */
-	public static ExecutorService newExecutor(int corePoolSize) {
+		public static ExecutorService newExecutor(int corePoolSize) {
 		ExecutorBuilder builder = ExecutorBuilder.create();
 		if (corePoolSize > 0) {
 			builder.setCorePoolSize(corePoolSize);

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/asymmetric/ECIESTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.asymmetric;
 
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.crypto.asymmetric.ECIES;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/asymmetric/RSATest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.asymmetric;
 
 import cn.hutool.core.codec.Base64;
 import cn.hutool.core.util.ArrayUtil;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/asymmetric/SignTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.asymmetric;
 
 import cn.hutool.core.map.MapUtil;
 import org.junit.Assert;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/digest/HmacTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.digest;
 
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/AESTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.symmetric;
 
 import cn.hutool.crypto.Mode;
 import cn.hutool.crypto.Padding;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/DesTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.symmetric;
 
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.crypto.Mode;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/RC4Test.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.symmetric;
 
 import org.junit.Assert;
 import org.junit.Test;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/symmetric/SymmetricTest.java
Patch:
@@ -1,4 +1,4 @@
-package cn.hutool.crypto.test;
+package cn.hutool.crypto.test.symmetric;
 
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.RandomUtil;

File: hutool-http/src/test/java/cn/hutool/http/test/HttpsTest.java
Patch:
@@ -25,4 +25,5 @@ public void getTest() {
 		}
 		ThreadUtil.sync(this);
 	}
+
 }

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java
Patch:
@@ -333,7 +333,7 @@ private boolean isMatchSetter(String methodName, String fieldName, boolean isBoo
 	// ------------------------------------------------------------------------------------------------------ Private method end
 
 	/**
-	 * 属性描述
+	 * 属性描述，包括了字段、getter、setter和相应的方法执行
 	 *
 	 * @author looly
 	 */

File: hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java
Patch:
@@ -61,7 +61,7 @@ public static String toString(Enum<?> e) {
 	 */
 	public static <E extends Enum<E>> E getEnumAt(Class<E> enumClass, int index) {
 		final E[] enumConstants = enumClass.getEnumConstants();
-		return index < enumConstants.length ? enumConstants[index] : null;
+		return index >= 0 && index < enumConstants.length ? enumConstants[index] : null;
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/EnumUtil.java
Patch:
@@ -61,7 +61,7 @@ public static String toString(Enum<?> e) {
 	 */
 	public static <E extends Enum<E>> E getEnumAt(Class<E> enumClass, int index) {
 		final E[] enumConstants = enumClass.getEnumConstants();
-		return index < enumConstants.length ? enumConstants[index] : null;
+		return index >= 0 && index < enumConstants.length ? enumConstants[index] : null;
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -282,6 +282,8 @@ public static <K, V> HashMap<K, V> of(K key, V value, boolean isOrder) {
 	/**
 	 * 根据给定的Pair数组创建Map对象
 	 *
+	 * @param <K>     键类型
+	 * @param <V>     值类型
 	 * @param pairs 键值对
 	 * @return Map
 	 * @since 5.4.1

File: hutool-extra/src/main/java/cn/hutool/extra/cglib/CglibUtil.java
Patch:
@@ -21,6 +21,7 @@ public class CglibUtil {
 	 * @param <T>         目标对象类型
 	 * @param source      源bean对象
 	 * @param targetClass 目标bean类，自动实例化此对象
+	 * @return 目标对象
 	 */
 	public static <T> T copy(Object source, Class<T> targetClass) {
 		return copy(source, targetClass, null);
@@ -34,6 +35,7 @@ public static <T> T copy(Object source, Class<T> targetClass) {
 	 * @param source      源bean对象
 	 * @param targetClass 目标bean类，自动实例化此对象
 	 * @param converter   转换器，无需可传{@code null}
+	 * @return 目标对象
 	 */
 	public static <T> T copy(Object source, Class<T> targetClass, Converter converter) {
 		final T target = ReflectUtil.newInstanceIfPossible(targetClass);
@@ -77,7 +79,7 @@ public static void copy(Object source, Object target, Converter converter) {
 	 * @param bean Bean对象
 	 * @return {@link BeanMap}
 	 */
-	public static BeanMap toMap(Object bean){
+	public static BeanMap toMap(Object bean) {
 		return BeanMap.create(bean);
 	}
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelBase.java
Patch:
@@ -10,6 +10,7 @@
 import org.apache.poi.ss.usermodel.Row;
 import org.apache.poi.ss.usermodel.Sheet;
 import org.apache.poi.ss.usermodel.Workbook;
+import org.apache.poi.xssf.streaming.SXSSFSheet;
 import org.apache.poi.xssf.usermodel.XSSFSheet;
 
 import java.io.Closeable;
@@ -415,7 +416,7 @@ public int getColumnCount(int rowNum) {
 	 * @since 4.6.2
 	 */
 	public boolean isXlsx() {
-		return this.sheet instanceof XSSFSheet;
+		return this.sheet instanceof XSSFSheet || this.sheet instanceof SXSSFSheet;
 	}
 
 	/**

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -294,10 +294,10 @@ private void processCellValue(Record record) {
 			case NumberRecord.sid: // 数字类型
 				final NumberRecord numrec = (NumberRecord) record;
 				final String formatString = formatListener.getFormatString(numrec);
-				if (formatString.contains(StrUtil.DOT)) {
+				if (StrUtil.contains(formatString, StrUtil.DOT)) {
 					//浮点数
 					value = numrec.getValue();
-				} else if (formatString.contains(StrUtil.SLASH) || formatString.contains(StrUtil.COLON)) {
+				} else if (StrUtil.containsAny(formatString, StrUtil.SLASH, StrUtil.COLON, "年", "月", "日", "时", "分", "秒")) {
 					//日期
 					value = ExcelSaxUtil.getDateValue(numrec.getValue());
 				} else {

File: hutool-core/src/test/java/cn/hutool/core/lang/AssertTest.java
Patch:
@@ -21,7 +21,7 @@ public void isTrueTest() {
 		cn.hutool.core.lang.Assert.isTrue(i > 0, IllegalArgumentException::new);
 	}
 
-	@Test()
+	@Test(expected = IndexOutOfBoundsException.class)
 	public void isTrueTest2() {
 		int i = -1;
 		cn.hutool.core.lang.Assert.isTrue(i >= 0, IndexOutOfBoundsException::new);

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -507,7 +507,7 @@ public Img pressImage(Image pressImg, int x, int y, float alpha) {
 	public Img pressImage(Image pressImg, Rectangle rectangle, float alpha) {
 		final Image targetImg = getValidSrcImg();
 
-		this.targetImage = draw(ImgUtil.toBufferedImage(targetImg), pressImg, rectangle, alpha);
+		this.targetImage = draw(ImgUtil.toBufferedImage(targetImg, this.targetImageType), pressImg, rectangle, alpha);
 		return this;
 	}
 

File: hutool-extra/src/main/java/cn/hutool/extra/spring/SpringUtil.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.extra.spring;
 
-import cn.hutool.core.lang.ParameterizedTypeImpl;
 import cn.hutool.core.lang.TypeReference;
 import cn.hutool.core.util.ArrayUtil;
 import org.springframework.context.ApplicationContext;
@@ -9,7 +8,6 @@
 import org.springframework.stereotype.Component;
 
 import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
 import java.util.Arrays;
 import java.util.Map;
 
@@ -92,7 +90,7 @@ public static <T> T getBean(TypeReference<T> reference) {
 		Class<T> rawType = (Class<T>) parameterizedType.getRawType();
 		Class<?>[] genericTypes = Arrays.stream(parameterizedType.getActualTypeArguments()).map(type -> (Class<?>) type).toArray(Class[]::new);
 		String[] beanNames = applicationContext.getBeanNamesForType(ResolvableType.forClassWithGenerics(rawType, genericTypes));
-		return applicationContext.getBean(beanNames[0], rawType);
+		return getBean(beanNames[0], rawType);
 	}
 
 	/**

File: hutool-extra/src/test/java/cn/hutool/extra/spring/SpringUtilTest.java
Patch:
@@ -10,9 +10,7 @@
 import org.springframework.context.annotation.Bean;
 import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
 
-import java.lang.reflect.Type;
 import java.util.HashMap;
-import java.util.LinkedHashMap;
 import java.util.Map;
 
 @RunWith(SpringJUnit4ClassRunner.class)

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertToBeanTest.java
Patch:
@@ -90,7 +90,7 @@ public void mapToBeanTest() {
 	@Test
 	public void nullStrToBeanTest(){
 		String nullStr = "null";
-		final SubPerson subPerson = Convert.convert(SubPerson.class, nullStr);
+		final SubPerson subPerson = Convert.convertQuietly(SubPerson.class, nullStr);
 		Assert.assertNull(subPerson);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/WeightRandom.java
Patch:
@@ -32,7 +32,7 @@ public class WeightRandom<T> implements Serializable {
 	private static final long serialVersionUID = -8244697995702786499L;
 
 	private final TreeMap<Double, T> weightMap;
-	private final Random random;
+
 
 	/**
 	 * 创建权重随机获取器
@@ -50,7 +50,7 @@ public static <T> WeightRandom<T> create() {
 	 */
 	public WeightRandom() {
 		weightMap = new TreeMap<>();
-		random = RandomUtil.getRandom();
+
 	}
 
 	/**
@@ -141,6 +141,7 @@ public T next() {
 		if(MapUtil.isEmpty(this.weightMap)) {
 			return null;
 		}
+		final Random random = RandomUtil.getRandom();
 		final double randomWeight = this.weightMap.lastKey() * random.nextDouble();
 		final SortedMap<Double, T> tailMap = this.weightMap.tailMap(randomWeight, false);
 		return this.weightMap.get(tailMap.firstKey());

File: hutool-core/src/main/java/cn/hutool/core/lang/WeightRandom.java
Patch:
@@ -32,7 +32,7 @@ public class WeightRandom<T> implements Serializable {
 	private static final long serialVersionUID = -8244697995702786499L;
 
 	private final TreeMap<Double, T> weightMap;
-	private final Random random;
+
 
 	/**
 	 * 创建权重随机获取器
@@ -50,7 +50,7 @@ public static <T> WeightRandom<T> create() {
 	 */
 	public WeightRandom() {
 		weightMap = new TreeMap<>();
-		random = RandomUtil.getRandom();
+
 	}
 
 	/**
@@ -141,6 +141,7 @@ public T next() {
 		if(MapUtil.isEmpty(this.weightMap)) {
 			return null;
 		}
+		final Random random = RandomUtil.getRandom();
 		final double randomWeight = this.weightMap.lastKey() * random.nextDouble();
 		final SortedMap<Double, T> tailMap = this.weightMap.tailMap(randomWeight, false);
 		return this.weightMap.get(tailMap.firstKey());

File: hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java
Patch:
@@ -83,11 +83,11 @@ public class PatternPool {
 	/**
 	 * UUID
 	 */
-	public final static Pattern UUID = Pattern.compile("^[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}$");
+	public final static Pattern UUID = Pattern.compile("^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", Pattern.CASE_INSENSITIVE);
 	/**
 	 * 不带横线的UUID
 	 */
-	public final static Pattern UUID_SIMPLE = Pattern.compile("^[0-9a-z]{32}$");
+	public final static Pattern UUID_SIMPLE = Pattern.compile("^[0-9a-f]{32}$", Pattern.CASE_INSENSITIVE);
 	/**
 	 * MAC地址正则
 	 */

File: hutool-core/src/main/java/cn/hutool/core/util/HexUtil.java
Patch:
@@ -92,9 +92,9 @@ public static String encodeHexStr(byte[] data) {
 	}
 
 	/**
-	 * 将字节数组转换为十六进制字符串，结果为小写
+	 * 将字符串转换为十六进制字符串，结果为小写
 	 *
-	 * @param data    被编码的字符串
+	 * @param data    需要被编码的字符串
 	 * @param charset 编码
 	 * @return 十六进制String
 	 */
@@ -103,7 +103,7 @@ public static String encodeHexStr(String data, Charset charset) {
 	}
 
 	/**
-	 * 将字节数组转换为十六进制字符串，结果为小写，默认编码是UTF-8
+	 * 将字符串转换为十六进制字符串，结果为小写，默认编码是UTF-8
 	 *
 	 * @param data 被编码的字符串
 	 * @return 十六进制String

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -609,9 +609,8 @@ public static <K, V> Map<K, V> toMap(Class<K> keyType, Class<V> valueType, Objec
 	 * @since 4.0.7
 	 * @throws ConvertException 转换器不存在
 	 */
-	@SuppressWarnings("unchecked")
 	public static <T> T convertByClassName(String className, Object value) throws ConvertException{
-		return (T) convert(ClassUtil.loadClass(className), value);
+		return convert(ClassUtil.loadClass(className), value);
 	}
 	
 	/**

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/BeanConverter.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.core.bean.copier.CopyOptions;
 import cn.hutool.core.bean.copier.ValueProvider;
 import cn.hutool.core.convert.AbstractConverter;
+import cn.hutool.core.convert.ConvertException;
 import cn.hutool.core.map.MapProxy;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.ReflectUtil;
@@ -79,7 +80,8 @@ protected T convertInternal(Object value) {
 			// 尝试反序列化
 			return ObjectUtil.deserialize((byte[])value);
 		}
-		return null;
+
+		throw new ConvertException("Unsupported source type: {}", value.getClass());
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/lang/Dict.java
Patch:
@@ -178,7 +178,7 @@ public <T> T toBeanWithCamelCase(T bean) {
 	 * @return vo
 	 */
 	public <T> T toBean(Class<T> clazz) {
-		return BeanUtil.mapToBean(this, clazz, false);
+		return BeanUtil.toBean(this, clazz);
 	}
 
 	/**
@@ -189,7 +189,7 @@ public <T> T toBean(Class<T> clazz) {
 	 * @return vo
 	 */
 	public <T> T toBeanIgnoreCase(Class<T> clazz) {
-		return BeanUtil.mapToBeanIgnoreCase(this, clazz, false);
+		return BeanUtil.toBeanIgnoreCase(this, clazz, false);
 	}
 
 	/**

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -45,7 +45,6 @@
  * 
  * <pre>
  * 当isMatchSecond为<code>true</code>时才会匹配秒部分
- * 当isMatchYear为<code>true</code>时才会匹配年部分
  * 默认都是关闭的
  * </pre>
  * 

File: hutool-socket/src/main/java/cn/hutool/socket/nio/ChannelHandler.java
Patch:
@@ -6,12 +6,14 @@
  * NIO数据处理接口，通过实现此接口，可以从{@link SocketChannel}中读写数据
  *
  */
+@FunctionalInterface
 public interface ChannelHandler {
 
 	/**
 	 * 处理NIO数据
 	 *
 	 * @param socketChannel {@link SocketChannel}
+	 * @throws Exception 可能的处理异常
 	 */
-	void handle(SocketChannel socketChannel);
+	void handle(SocketChannel socketChannel) throws Exception;
 }

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -978,7 +978,7 @@ public static String removeAny(CharSequence str, CharSequence... strsToRemove) {
 		String result = str(str);
 		if (isNotEmpty(str)) {
 			for (CharSequence strToRemove : strsToRemove) {
-				result = removeAll(str, strToRemove);
+				result = removeAll(result, strToRemove);
 			}
 		}
 		return result;

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java
Patch:
@@ -3,7 +3,7 @@
 import cn.hutool.core.codec.Base64;
 import cn.hutool.core.lang.Assert;
 import cn.hutool.crypto.CryptoException;
-import cn.hutool.crypto.SecureUtil;
+import cn.hutool.crypto.KeyUtil;
 
 import java.security.Key;
 import java.security.KeyPair;
@@ -89,7 +89,7 @@ protected T init(String algorithm, PrivateKey privateKey, PublicKey publicKey) {
 	 */
 	@SuppressWarnings("unchecked")
 	public T initKeys() {
-		KeyPair keyPair = SecureUtil.generateKeyPair(this.algorithm);
+		KeyPair keyPair = KeyUtil.generateKeyPair(this.algorithm);
 		this.publicKey = keyPair.getPublic();
 		this.privateKey = keyPair.getPrivate();
 		return (T) this;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/RSATest.java
Patch:
@@ -196,5 +196,4 @@ public void exponentTest(){
 		final String encryptBase64 = rsa.encryptBase64("测试内容", KeyType.PublicKey);
 		Assert.assertNotNull(encryptBase64);
 	}
-
 }

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -27,6 +27,7 @@ public class Browser extends UserAgentInfo {
 			new Browser("Chrome", "chrome", "chrome\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Firefox", "firefox", Other_Version), //
 			new Browser("IEMobile", "iemobile", Other_Version), //
+			new Browser("Android Browser", "android", "version\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Safari", "safari", "version\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Opera", "opera", Other_Version), //
 			new Browser("Konqueror", "konqueror", Other_Version), //

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -27,6 +27,7 @@ public class Browser extends UserAgentInfo {
 			new Browser("Chrome", "chrome", "chrome\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Firefox", "firefox", Other_Version), //
 			new Browser("IEMobile", "iemobile", Other_Version), //
+			new Browser("Android Browser", "android", "version\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Safari", "safari", "version\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Opera", "opera", Other_Version), //
 			new Browser("Konqueror", "konqueror", Other_Version), //

File: hutool-core/src/main/java/cn/hutool/core/io/unit/DataSizeUtil.java
Patch:
@@ -16,7 +16,7 @@ public class DataSizeUtil {
 	 * @param text 数据大小字符串，类似于：12KB, 5MB等
 	 * @return bytes大小
 	 */
-	public long parse(String text) {
+	public static long parse(String text) {
 		return DataSize.parse(text).toBytes();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -228,8 +228,8 @@ public static void zip(ZipOutputStream zipOutputStream, boolean withSrcDir, File
 				// 调用递归压缩方法进行目录或文件压缩
 				zip(srcFile, srcRootDir, zipOutputStream, filter);
 				zipOutputStream.flush();
-				zipOutputStream.finish();
 			}
+			zipOutputStream.finish();
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		}

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -481,7 +481,7 @@ public static String trimToEmpty(CharSequence str) {
 	}
 
 	/**
-	 * 除去字符串头尾部的空白，如果字符串是{@code null}，返回<code>""</code>。
+	 * 除去字符串头尾部的空白，如果字符串是{@code null}或者""，返回{@code null}。
 	 *
 	 * <pre>
 	 * StrUtil.trimToNull(null)          = null

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -632,6 +632,7 @@ public static String formatHttpDate(Date date) {
 	 *
 	 * @param date        被格式化的日期
 	 * @param isUppercase 是否采用大写形式
+	 * @param withTime    是否包含时间部分
 	 * @return 中文日期字符串
 	 * @since 5.3.9
 	 */

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -326,6 +326,9 @@ public CellStyle getHeadCellStyle() {
 	 * @return 单元格样式
 	 */
 	public CellStyle getCellStyle() {
+		if(null == this.styleSet){
+			return null;
+		}
 		return this.styleSet.cellStyle;
 	}
 

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelReadTest.java
Patch:
@@ -213,5 +213,4 @@ public void readCellsTest() {
 		final ExcelReader reader = ExcelUtil.getReader("merge_test.xlsx");
 		reader.read((cell, value)-> Console.log("{}, {} {}", cell.getRowIndex(), cell.getColumnIndex(), value));
 	}
-
 }

File: hutool-core/src/main/java/cn/hutool/core/map/CustomKeyMap.java
Patch:
@@ -38,9 +38,7 @@ public V put(K key, V value) {
 
 	@Override
 	public void putAll(Map<? extends K, ? extends V> m) {
-		for (Map.Entry<? extends K, ? extends V> entry : m.entrySet()) {
-			this.put(entry.getKey(), entry.getValue());
-		}
+		m.forEach(this::put);
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/date/DateBetween.java
Patch:
@@ -165,6 +165,6 @@ public String toString(BetweenFormater.Level level) {
 
 	@Override
 	public String toString() {
-		return toString(BetweenFormater.Level.MILLSECOND);
+		return toString(BetweenFormater.Level.MILLISECOND);
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/date/BetweenFormaterTest.java
Patch:
@@ -10,7 +10,7 @@ public class BetweenFormaterTest {
 	@Test
 	public void formatTest(){
 		long betweenMs = DateUtil.betweenMs(DateUtil.parse("2017-01-01 22:59:59"), DateUtil.parse("2017-01-02 23:59:58"));
-		BetweenFormater formater = new BetweenFormater(betweenMs, Level.MILLSECOND, 1);
+		BetweenFormater formater = new BetweenFormater(betweenMs, Level.MILLISECOND, 1);
 		Assert.assertEquals(formater.toString(), "1天");
 	}
 	

File: hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java
Patch:
@@ -298,7 +298,7 @@ public List<FTPFile> lsFiles(String path, Filter<FTPFile> filter) {
 		String fileName;
 		for (FTPFile ftpFile : ftpFiles) {
 			fileName = ftpFile.getName();
-			if (!StrUtil.equals(".", fileName) && !StrUtil.equals("..", fileName)) {
+			if (false == StrUtil.equals(".", fileName) && false == StrUtil.equals("..", fileName)) {
 				if (null == filter || filter.accept(ftpFile)) {
 					result.add(ftpFile);
 				}

File: hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java
Patch:
@@ -294,11 +294,11 @@ public List<FTPFile> lsFiles(String path, Filter<FTPFile> filter) {
 			return ListUtil.empty();
 		}
 
-		final List<FTPFile> result = new ArrayList<>(ftpFiles.length - 2);
+		final List<FTPFile> result = new ArrayList<>(ftpFiles.length - 2 <= 0 ? ftpFiles.length : ftpFiles.length - 2);
 		String fileName;
 		for (FTPFile ftpFile : ftpFiles) {
 			fileName = ftpFile.getName();
-			if (false == StrUtil.equals(".", fileName) && false == StrUtil.equals("..", fileName)) {
+			if (!StrUtil.equals(".", fileName) && !StrUtil.equals("..", fileName)) {
 				if (null == filter || filter.accept(ftpFile)) {
 					result.add(ftpFile);
 				}

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -228,6 +228,7 @@ public static void zip(ZipOutputStream zipOutputStream, boolean withSrcDir, File
 				// 调用递归压缩方法进行目录或文件压缩
 				zip(srcFile, srcRootDir, zipOutputStream, filter);
 				zipOutputStream.flush();
+				zipOutputStream.finish();
 			}
 		} catch (IOException e) {
 			throw new IORuntimeException(e);

File: hutool-setting/src/main/java/cn/hutool/setting/GroupedSet.java
Patch:
@@ -1,6 +1,7 @@
 package cn.hutool.setting;
 
 import cn.hutool.core.collection.CollectionUtil;
+import cn.hutool.core.collection.ListUtil;
 import cn.hutool.core.io.IoUtil;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.CharsetUtil;
@@ -13,7 +14,6 @@
 import java.io.InputStream;
 import java.net.URL;
 import java.nio.charset.Charset;
-import java.util.Arrays;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.LinkedHashSet;
@@ -279,7 +279,7 @@ public LinkedHashSet<String> getValues(String group) {
 	public boolean contains(String group, String value, String... otherValues) {
 		if (ArrayUtil.isNotEmpty(otherValues)) {
 			// 需要测试多个值的情况		
-			final List<String> valueList = new ArrayList<>(Arrays.asList(otherValues));
+			final List<String> valueList = ListUtil.toList(otherValues);
 			valueList.add(value);
 			return contains(group, valueList);
 		} else {

File: hutool-setting/src/main/java/cn/hutool/setting/GroupedSet.java
Patch:
@@ -278,8 +278,8 @@ public LinkedHashSet<String> getValues(String group) {
 	 */
 	public boolean contains(String group, String value, String... otherValues) {
 		if (ArrayUtil.isNotEmpty(otherValues)) {
-			// 需要测试多个值的情况
-			final List<String> valueList = Arrays.asList(otherValues);
+			// 需要测试多个值的情况		
+			final List<String> valueList = new ArrayList<>(Arrays.asList(otherValues));
 			valueList.add(value);
 			return contains(group, valueList);
 		} else {

File: hutool-core/src/test/java/cn/hutool/core/collection/CollUtilTest.java
Patch:
@@ -81,7 +81,7 @@ public void intersectionTest() {
 	}
 	
 	@Test
-	public void intersectionTest2() {
+	public void intersectionDistinctTest() {
 		ArrayList<String> list1 = CollUtil.newArrayList("a", "b", "b", "c", "d", "x");
 		ArrayList<String> list2 = CollUtil.newArrayList("a", "b", "b", "b", "c", "d");
 		ArrayList<String> list3 = CollUtil.newArrayList();

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioSession.java
Patch:
@@ -45,6 +45,8 @@ public AioSession(AsynchronousSocketChannel channel, IoAction<ByteBuffer> ioActi
 		this.channel = channel;
 		this.readBuffer = ByteBuffer.allocate(config.getReadBufferSize());
 		this.writeBuffer = ByteBuffer.allocate(config.getWriteBufferSize());
+		this.readTimeout = config.getReadTimeout();
+		this.writeTimeout = config.getWriteTimeout();
 		this.ioAction = ioAction;
 	}
 

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioSession.java
Patch:
@@ -45,6 +45,8 @@ public AioSession(AsynchronousSocketChannel channel, IoAction<ByteBuffer> ioActi
 		this.channel = channel;
 		this.readBuffer = ByteBuffer.allocate(config.getReadBufferSize());
 		this.writeBuffer = ByteBuffer.allocate(config.getWriteBufferSize());
+		this.readTimeout = config.getReadTimeout();
+		this.writeTimeout = config.getWriteTimeout();
 		this.ioAction = ioAction;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -3312,11 +3312,11 @@ public static String brief(CharSequence str, int maxLength) {
 		if (null == str) {
 			return null;
 		}
-		if ((str.length() + 3) <= maxLength) {
+		if (str.length() <= maxLength) {
 			return str.toString();
 		}
 		int w = maxLength / 2;
-		int l = str.length();
+		int l = str.length() + 3;
 
 		final String str2 = str.toString();
 		return format("{}...{}", str2.substring(0, maxLength - w), str2.substring(l - w));

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -2114,7 +2114,7 @@ public static int partValue(int total, int partCount) {
 	 */
 	public static int partValue(int total, int partCount, boolean isPlusOneWhenHasRem) {
 		int partValue = total / partCount;
-		if (isPlusOneWhenHasRem && total % partCount == 0) {
+		if (isPlusOneWhenHasRem && total % partCount > 0) {
 			partValue++;
 		}
 		return partValue;

File: hutool-extra/src/main/java/cn/hutool/extra/pinyin/PinyinEngine.java
Patch:
@@ -48,6 +48,6 @@ default char getFirstLetter(char c) {
 	default String getFirstLetter(String str, String separator) {
 		final String splitSeparator = StrUtil.isEmpty(separator) ? "#" : separator;
 		final String[] split = StrUtil.split(getPinyin(str, splitSeparator), splitSeparator);
-		return ArrayUtil.join(split, separator, (s)->String.valueOf(s.charAt(0)));
+		return ArrayUtil.join(split, separator, (s)->String.valueOf(s.length() > 0 ? s.charAt(0) : ""));
 	}
 }

File: hutool-extra/src/test/java/cn/hutool/extra/pinyin/PinyinUtilTest.java
Patch:
@@ -13,10 +13,10 @@ public void getPinyinTest(){
 	}
 
 	@Test
-	public void getPinyinByPinyin4jTest(){
+	public void getPinyinByPinyin4jTest() {
 		final Pinyin4jEngine engine = new Pinyin4jEngine();
-		final String pinyin = engine.getPinyin("你好", " ");
-		Assert.assertEquals("ni hao", pinyin);
+		final String pinyin = engine.getPinyin("你好h", " ");
+		Assert.assertEquals("ni hao h", pinyin);
 	}
 
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/date/DatePattern.java
Patch:
@@ -17,13 +17,14 @@ public class DatePattern {
 	/**
 	 * 标准日期时间正则，每个字段支持单个数字或2个数字，包括：
 	 * <pre>
+	 *     yyyy-MM-dd HH:mm:ss.SSS
 	 *     yyyy-MM-dd HH:mm:ss
 	 *     yyyy-MM-dd HH:mm
 	 *     yyyy-MM-dd
 	 * </pre>
 	 * @since 5.3.6
 	 */
-	public static final Pattern REGEX_NORM = Pattern.compile("\\d{4}-\\d{1,2}-\\d{1,2}( \\d{1,2}:\\d{1,2}(:\\d{1,2})?)?");
+	public static final Pattern REGEX_NORM = Pattern.compile("\\d{4}-\\d{1,2}-\\d{1,2}(\\s\\d{1,2}:\\d{1,2}(:\\d{1,2})?)?(.\\d{1,3})?");
 
 	//-------------------------------------------------------------------------------------------------------------------------------- Normal
 	/** 标准日期格式：yyyy-MM-dd */

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -779,6 +779,9 @@ public void parseSingleNumberTest(){
 		Assert.assertEquals("2020-05-08 03:02:03", dateTime.toString());
 		dateTime = DateUtil.parse("2020-5-8 3:12:13");
 		Assert.assertEquals("2020-05-08 03:12:13", dateTime.toString());
+
+		dateTime = DateUtil.parse("2020-5-8 4:12:26.223");
+		Assert.assertEquals("2020-05-08 04:12:26", dateTime.toString());
 	}
 
 	@SuppressWarnings("ConstantConditions")

File: hutool-core/src/main/java/cn/hutool/core/io/IoUtil.java
Patch:
@@ -601,7 +601,7 @@ public static byte[] readBytes(InputStream in, int length) throws IORuntimeExcep
 			throw new IORuntimeException(e);
 		}
 		if (readLength > 0 && readLength < length) {
-			byte[] b2 = new byte[length];
+			byte[] b2 = new byte[readLength];
 			System.arraycopy(b, 0, b2, 0, readLength);
 			return b2;
 		} else {

File: hutool-core/src/main/java/cn/hutool/core/lang/Validator.java
Patch:
@@ -675,7 +675,7 @@ public static <T extends CharSequence> T validateZipCode(T value, String errorMs
 	 * 验证是否为可用邮箱地址
 	 *
 	 * @param value 值
-	 * @return 否为可用邮箱地址
+	 * @return true为可用邮箱地址
 	 */
 	public static boolean isEmail(CharSequence value) {
 		return isMatchRegex(EMAIL, value);

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/TreeUtil.java
Patch:
@@ -121,7 +121,7 @@ private static <T> void innerBuild(List<Tree<T>> treeNodes, Tree<T> parentNode,
 
 	/**
 	 * 获取ID对应的节点，如果有多个ID相同的节点，只返回第一个。<br>
-	 * 此方法只查找此节点及子节点，采用广度优先遍历。
+	 * 此方法只查找此节点及子节点，采用递归深度优先遍历。
 	 *
 	 * @param <T> ID类型
 	 * @param node 节点

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -345,7 +345,7 @@ public static <T> List<T> subtractToList(Collection<T> coll1, Collection<T> coll
 			return ListUtil.empty();
 		}
 		if (isEmpty(coll2)) {
-			return ListUtil.list(true, coll2);
+			return ListUtil.list(true, coll1);
 		}
 
 		//将被交数用链表储存，防止因为频繁扩容影响性能

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -345,7 +345,7 @@ public static <T> List<T> subtractToList(Collection<T> coll1, Collection<T> coll
 			return ListUtil.empty();
 		}
 		if (isEmpty(coll2)) {
-			return ListUtil.list(true, coll2);
+			return ListUtil.list(true, coll1);
 		}
 
 		//将被交数用链表储存，防止因为频繁扩容影响性能

File: hutool-system/src/main/java/cn/hutool/system/oshi/CpuInfo.java
Patch:
@@ -3,8 +3,7 @@
 import java.text.DecimalFormat;
 
 /**
- * <p></p>
- * <p>2020-05-21 14:19</p>
+ * <p>CPU相关信息</p>
  *
  * @author Dai Yuanchuan
  **/

File: hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
Patch:
@@ -273,7 +273,7 @@ public void loopFilesTest() {
 			Console.log(file.getPath());
 		}
 	}
-	
+
 	@Test
 	@Ignore
 	public void loopFilesWithDepthTest() {

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -633,7 +633,8 @@ private BufferedImage draw(BufferedImage backgroundImg, Image img, Rectangle rec
 		} else {
 			point = new Point(rectangle.x, rectangle.y);
 		}
-		GraphicsUtil.drawImg(g, img, point);
+		rectangle.setLocation(point.x, point.y);
+		GraphicsUtil.drawImg(g, img, rectangle);
 
 		g.dispose();
 		return backgroundImg;

File: hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java
Patch:
@@ -415,7 +415,7 @@ public Scheduler stop() {
 	 * 停止定时任务<br>
 	 * 此方法调用后会将定时器进程立即结束，如果为守护线程模式，则正在执行的作业也会自动结束，否则作业线程将在执行完成后结束。
 	 *
-	 * @param clearTasks 是否清除说有任务
+	 * @param clearTasks 是否清除所有任务
 	 * @return this
 	 * @since 4.1.17
 	 */

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -777,5 +777,7 @@ public void parseSingleNumberTest(){
 		Assert.assertEquals("2020-05-08 03:12:03", dateTime.toString());
 		dateTime = DateUtil.parse("2020-5-8 3:2:3");
 		Assert.assertEquals("2020-05-08 03:02:03", dateTime.toString());
+		dateTime = DateUtil.parse("2020-5-8 3:12:13");
+		Assert.assertEquals("2020-05-08 03:12:13", dateTime.toString());
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/map/CamelCaseLinkedMap.java
Patch:
@@ -1,6 +1,6 @@
 package cn.hutool.core.map;
 
-import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.Map;
 
 /**
@@ -60,7 +60,7 @@ public CamelCaseLinkedMap(float loadFactor, Map<? extends K, ? extends V> m) {
 	 * @param loadFactor 加载因子
 	 */
 	public CamelCaseLinkedMap(int initialCapacity, float loadFactor) {
-		super(new HashMap<>(initialCapacity, loadFactor));
+		super(new LinkedHashMap<>(initialCapacity, loadFactor));
 	}
 	// ------------------------------------------------------------------------- Constructor end
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -308,7 +308,7 @@ private void processCellValue(Record record) {
 					value = numrec.getValue();
 				} else if (formatString.contains(StrUtil.SLASH) || formatString.contains(StrUtil.COLON)) {
 					//日期
-					value = formatListener.formatNumberDateCell(numrec);
+					value = ExcelSaxUtil.getDateValue(numrec.getValue());
 				} else {
 					final double doubleValue = numrec.getValue();
 					final long longPart = (long) doubleValue;

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelSaxReadTest.java
Patch:
@@ -103,8 +103,9 @@ public void handle(int sheetIndex, long rowIndex, List<Object> rowList) {
 	}
 
 	@Test
+	@Ignore
 	public void dateReadTest(){
-		ExcelUtil.readBySax("d:/test/sax_test.xls", 0, (RowHandler) (i, i1, list) ->
+		ExcelUtil.readBySax("d:/test/sax_date_test.xlsx", 0, (i, i1, list) ->
 				Console.log(StrUtil.join(", ", list)));
-	};
+	}
 }

File: hutool-cache/src/main/java/cn/hutool/cache/GlobalPruneTimer.java
Patch:
@@ -56,7 +56,7 @@ public void create() {
 		if (null != pruneTimer) {
 			shutdownNow();
 		}
-		this.pruneTimer = new ScheduledThreadPoolExecutor(16, r -> ThreadUtil.newThread(r, StrUtil.format("Pure-Timer-{}", cacheTaskNumber.getAndIncrement())));
+		this.pruneTimer = new ScheduledThreadPoolExecutor(1, r -> ThreadUtil.newThread(r, StrUtil.format("Pure-Timer-{}", cacheTaskNumber.getAndIncrement())));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -554,7 +554,7 @@ public Img flip() {
 	 * @return 处理过的图片
 	 */
 	public Image getImg() {
-		return this.targetImage;
+		return null == this.targetImage ? this.srcImage : this.targetImage;
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/img/ImgUtilTest.java
Patch:
@@ -102,7 +102,8 @@ public void writeTest() {
 	@Test
 	@Ignore
 	public void compressTest() {
-		ImgUtil.compress(FileUtil.file("e:/pic/1111.png"), FileUtil.file("e:/pic/1111_target.jpg"), 0.8f);
+		ImgUtil.compress(FileUtil.file("d:/test/dest.png"),
+				FileUtil.file("d:/test/1111_target.jpg"), 0.1f);
 	}
 	
 	@Test

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/CellDataType.java
Patch:
@@ -15,7 +15,7 @@ public enum CellDataType {
 	FORMULA("str"),
 	/** 富文本类型 */
 	INLINESTR("inlineStr"),
-	/** 字符串类型 */
+	/** 共享字符串索引类型 */
 	SSTINDEX("s"),
 	/** 数字类型 */
 	NUMBER(""),

File: hutool-core/src/test/java/cn/hutool/core/thread/ThreadUtilTest.java
Patch:
@@ -10,6 +10,5 @@ public void executeTest() {
 		final boolean isValid = true;
 		
 		ThreadUtil.execute(() -> Assert.assertTrue(isValid));
-		
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -614,7 +614,7 @@ public static Map<String, Object> beanToMap(Object bean, Map<String, Object> tar
 	 * @return 目标对象
 	 */
 	public static <T> T copyProperties(Object source, Class<T> tClass) {
-		T target = ReflectUtil.newInstance(tClass);
+		T target = ReflectUtil.newInstanceIfPossible(tClass);
 		copyProperties(source, target, CopyOptions.create());
 		return target;
 	}

File: hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java
Patch:
@@ -58,7 +58,8 @@ public T convert(Object value, T defaultValue) {
 			T result = convertInternal(value);
 			return ((null == result) ? defaultValue : result);
 		} else {
-			throw new IllegalArgumentException(StrUtil.format("Default value [{}] is not the instance of [{}]", defaultValue, targetType));
+			throw new IllegalArgumentException(
+					StrUtil.format("Default value [{}]({}) is not the instance of [{}]", defaultValue, defaultValue.getClass(), targetType));
 		}
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -237,6 +237,7 @@ public void copyPropertiesTest() {
 		person.setOpenid("11213232");
 		person.setName("测试A11");
 		person.setSubName("sub名字");
+
 		SubPerson person1 = BeanUtil.copyProperties(person, SubPerson.class);
 		Assert.assertEquals(14, person1.getAge());
 		Assert.assertEquals("11213232", person1.getOpenid());

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -482,7 +482,6 @@ public Img pressText(String pressText, Color color, Font font, int x, int y, flo
 	public Img pressImage(Image pressImg, int x, int y, float alpha) {
 		final int pressImgWidth = pressImg.getWidth(null);
 		final int pressImgHeight = pressImg.getHeight(null);
-
 		return pressImage(pressImg, new Rectangle(x, y, pressImgWidth, pressImgHeight), alpha);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -2953,7 +2953,7 @@ public static String padPre(CharSequence str, int minLength, char padChar) {
 	 * StrUtil.padAfter("123", 2, '0');//"23"
 	 * </pre>
 	 *
-	 * @param str       字符串，如果为<code>null</code>，按照空串处理
+	 * @param str       字符串，如果为<code>null</code>，直接返回null
 	 * @param minLength 最小长度
 	 * @param padChar   补充的字符
 	 * @return 补充后的字符串
@@ -2981,7 +2981,7 @@ public static String padAfter(CharSequence str, int minLength, char padChar) {
 	 * StrUtil.padAfter("123", 2, "ABC");//"23"
 	 * </pre>
 	 *
-	 * @param str       字符串，如果为<code>null</code>，按照空串处理
+	 * @param str       字符串，如果为<code>null</code>，直接返回null
 	 * @param minLength 最小长度
 	 * @param padStr    补充的字符
 	 * @return 补充后的字符串

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricCrypto.java
Patch:
@@ -436,7 +436,7 @@ public String decryptStr(String data, Charset charset) {
 	}
 
 	/**
-	 * 解密Hex表示的字符串，默认UTF-8编码
+	 * 解密Hex（16进制）或Base64表示的字符串，默认UTF-8编码
 	 *
 	 * @param data 被解密的String
 	 * @return 解密后的String

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -2953,7 +2953,7 @@ public static String padPre(CharSequence str, int minLength, char padChar) {
 	 * StrUtil.padAfter("123", 2, '0');//"23"
 	 * </pre>
 	 *
-	 * @param str       字符串，如果为<code>null</code>，按照空串处理
+	 * @param str       字符串，如果为<code>null</code>，直接返回null
 	 * @param minLength 最小长度
 	 * @param padChar   补充的字符
 	 * @return 补充后的字符串
@@ -2981,7 +2981,7 @@ public static String padAfter(CharSequence str, int minLength, char padChar) {
 	 * StrUtil.padAfter("123", 2, "ABC");//"23"
 	 * </pre>
 	 *
-	 * @param str       字符串，如果为<code>null</code>，按照空串处理
+	 * @param str       字符串，如果为<code>null</code>，直接返回null
 	 * @param minLength 最小长度
 	 * @param padStr    补充的字符
 	 * @return 补充后的字符串

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricCrypto.java
Patch:
@@ -436,7 +436,7 @@ public String decryptStr(String data, Charset charset) {
 	}
 
 	/**
-	 * 解密Hex表示的字符串，默认UTF-8编码
+	 * 解密Hex（16进制）或Base64表示的字符串，默认UTF-8编码
 	 *
 	 * @param data 被解密的String
 	 * @return 解密后的String

File: hutool-http/src/main/java/cn/hutool/http/server/action/RootAction.java
Patch:
@@ -54,6 +54,8 @@ public void doAction(HttpServerRequest request, HttpServerResponse response) {
 						response.write(file);
 					}
 				}
+			} else{
+				response.write(file);
 			}
 		}
 

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java
Patch:
@@ -5,6 +5,7 @@
 import cn.hutool.core.collection.IterUtil;
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.lang.Assert;
+import cn.hutool.core.lang.Console;
 import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
@@ -239,6 +240,7 @@ public List<List<Object>> read(int startRowIndex, int endRowIndex) {
 		List rowList;
 		for (int i = startRowIndex; i <= endRowIndex; i++) {
 			rowList = readRow(i);
+			Console.log("### {}: {}", i, rowList);
 			if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {
 				if (null == rowList) {
 					rowList = new ArrayList<>(0);

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDesc.java
Patch:
@@ -141,7 +141,7 @@ private BeanDesc init() {
 		for (Field field : ReflectUtil.getFields(this.beanClass)) {
 			if(false == ModifierUtil.isStatic(field)) {
 				//只针对非static属性
-				this.propMap.put(field.getName(), createProp(field));
+				this.propMap.put(ReflectUtil.getFieldName(field), createProp(field));
 			}
 		}
 		return this;

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -149,7 +149,7 @@ public static Field getField(Class<?> beanClass, String name) throws SecurityExc
 		final Field[] fields = getFields(beanClass);
 		if (ArrayUtil.isNotEmpty(fields)) {
 			for (Field field : fields) {
-				if ((name.equals(field.getName()))) {
+				if ((name.equals(getFieldName(field)))) {
 					return field;
 				}
 			}

File: hutool-cache/src/main/java/cn/hutool/cache/impl/TimedCache.java
Patch:
@@ -28,7 +28,7 @@ public class TimedCache<K, V> extends AbstractCache<K, V> {
 	 * @param timeout 超时（过期）时长，单位毫秒
 	 */
 	public TimedCache(long timeout) {
-		this(timeout, new HashMap<K, CacheObj<K, V>>());
+		this(timeout, new HashMap<>());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/TreeUtil.java
Patch:
@@ -134,14 +134,14 @@ public static <T> Tree<T> getNode(Tree<T> node, T id) {
 			return node;
 		}
 
-		//fix NPE
-		if(null == node.getChildren()) {
+		final List<Tree<T>> children = node.getChildren();
+		if(null == children) {
 			return null;
 		}
 		
 		// 查找子节点
 		Tree<T> childNode;
-		for (Tree<T> child : node.getChildren()) {
+		for (Tree<T> child : children) {
 			childNode = child.getNode(id);
 			if (null != childNode) {
 				return childNode;

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -878,7 +878,7 @@ public HttpRequest setSSLSocketFactory(SSLSocketFactory ssf) {
 	public HttpRequest setSSLProtocol(String protocol) {
 		Assert.notBlank(protocol, "protocol must be not blank!");
 		try {
-			this.ssf = SSLSocketFactoryBuilder.create().setProtocol(protocol).build();
+			setSSLSocketFactory(SSLSocketFactoryBuilder.create().setProtocol(protocol).build());
 		} catch (Exception e) {
 			throw new HttpException(e);
 		}

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/opt/HOTP.java
Patch:
@@ -35,6 +35,8 @@ public class HOTP {
 
 	/**
 	 * 构造，使用默认密码长度和默认HMAC算法(HmacSHA1)
+	 *
+	 * @param key 共享密码，RFC 4226要求最少128位
 	 */
 	public HOTP(byte[] key) {
 		this(DEFAULT_PASSWORD_LENGTH, key);

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -335,6 +335,7 @@ public static String toJsonStr(JSON json) {
 	 * 转为JSON字符串，并写出到write
 	 *
 	 * @param json JSON
+	 * @param writer Writer
 	 * @since 5.3.3
 	 */
 	public static void toJsonStr(JSON json, Writer writer) {

File: hutool-extra/src/main/java/cn/hutool/extra/spring/SpringUtil.java
Patch:
@@ -99,6 +99,7 @@ public static String[] getBeanNamesForType(Class<?> type){
 	 * 获取配置文件配置项的值
 	 *
 	 * @param key 配置项key
+	 * @return 属性值
 	 * @since 5.3.3
 	 */
 	public static String getProperty(String key) {

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -3578,6 +3578,6 @@ public static void tail(File file, Charset charset, LineHandler handler) {
 	 * @param charset 编码
 	 */
 	public static void tail(File file, Charset charset) {
-		FileUtil.tail(file, charset, Tailer.CONSOLE_HANDLER);
+		tail(file, charset, Tailer.CONSOLE_HANDLER);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/io/checksum/CRC16.java
Patch:
@@ -66,7 +66,7 @@ public void reset() {
 	@Override
 	public void update(byte[] b, int off, int len) {
 		for (int i = off; i < off + len; i++)
-			update((int) b[i]);
+			update(b[i]);
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/io/resource/MultiResource.java
Patch:
@@ -94,7 +94,7 @@ public boolean hasNext() {
 	}
 
 	@Override
-	public Resource next() {
+	public synchronized Resource next() {
 		if (cursor >= resources.size()) {
 			throw new ConcurrentModificationException();
 		}
@@ -110,7 +110,7 @@ public void remove() {
 	/**
 	 * 重置游标
 	 */
-	public void reset() {
+	public synchronized void reset() {
 		this.cursor = 0;
 	}
 	

File: hutool-core/src/main/java/cn/hutool/core/io/resource/ResourceUtil.java
Patch:
@@ -4,7 +4,6 @@
 import cn.hutool.core.collection.EnumerationIter;
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.io.IORuntimeException;
-import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.ClassLoaderUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.core.util.URLUtil;
@@ -18,7 +17,7 @@
 import java.util.List;
 
 /**
- * ClassPath资源工具类
+ * Resource资源工具类
  * 
  * @author Looly
  *
@@ -33,7 +32,7 @@ public class ResourceUtil {
 	 * @since 3.1.1
 	 */
 	public static String readUtf8Str(String resource) {
-		return readStr(resource, CharsetUtil.CHARSET_UTF_8);
+		return getResourceObj(resource).readUtf8Str();
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlBuilder.java
Patch:
@@ -71,7 +71,7 @@ public static UrlBuilder of(URI uri, Charset charset) {
 	}
 
 	/**
-	 * 使用URL字符串构建UrlBuilder
+	 * 使用URL字符串构建UrlBuilder，当传入的URL没有协议时，按照http协议对待。
 	 *
 	 * @param httpUrl URL字符串
 	 * @param charset 编码，用于URLEncode和URLDecode

File: hutool-core/src/main/java/cn/hutool/core/net/url/UrlQuery.java
Patch:
@@ -135,7 +135,7 @@ public UrlQuery parse(String queryStr, Charset charset) {
 				case '&'://键值对之间的分界符
 					addParam(name, queryStr.substring(pos, i), charset);
 					name = null;
-					if ("amp;".equals(queryStr.substring(i + 1, i + 5))) {
+					if (i+4 < len && "amp;".equals(queryStr.substring(i + 1, i + 5))) {
 						// issue#850@Github，"&amp;"转义为"&"
 						i+=4;
 					}

File: hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java
Patch:
@@ -11,7 +11,7 @@
 public class BooleanUtil {
 
 	/** 表示为真的字符串 */
-	private static final String[] TRUE_ARRAY = { "true", "yes", "y", "t", "ok", "1", "on", "是", "对", "真", };
+	private static final String[] TRUE_ARRAY = { "true", "yes", "y", "t", "ok", "1", "on", "是", "对", "真", "對", "√"};
 
 	/**
 	 * 取相反值

File: hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java
Patch:
@@ -31,7 +31,7 @@ private InternalJSONUtil() {
 	 *
 	 * @param writer       Writer
 	 * @param value        值
-	 * @param indentFactor 每一级别的缩进量
+	 * @param indentFactor 缩进因子，定义每一级别增加的缩进量
 	 * @param indent       缩进空格数
 	 * @param config       配置项
 	 * @return Writer

File: hutool-json/src/test/java/cn/hutool/json/JSONUtilTest.java
Patch:
@@ -93,11 +93,11 @@ public void toJsonStrTest3() {
 		map.put("user", object.toString());
 
 		JSONObject json = JSONUtil.parseObj(map);
-		Assert.assertEquals("{\"name\":\"123123\",\"value\":\"\\\\\",\"value2\":\"<\\/\"}", json.get("user"));
-		Assert.assertEquals("{\"user\":\"{\\\"name\\\":\\\"123123\\\",\\\"value\\\":\\\"\\\\\\\\\\\",\\\"value2\\\":\\\"<\\\\/\\\"}\"}", json.toString());
+		Assert.assertEquals("{\"name\":\"123123\",\"value\":\"\\\\\",\"value2\":\"</\"}", json.get("user"));
+		Assert.assertEquals("{\"user\":\"{\\\"name\\\":\\\"123123\\\",\\\"value\\\":\\\"\\\\\\\\\\\",\\\"value2\\\":\\\"</\\\"}\"}", json.toString());
 
 		JSONObject json2 = JSONUtil.parseObj(json.toString());
-		Assert.assertEquals("{\"name\":\"123123\",\"value\":\"\\\\\",\"value2\":\"<\\/\"}", json2.get("user"));
+		Assert.assertEquals("{\"name\":\"123123\",\"value\":\"\\\\\",\"value2\":\"</\"}", json2.get("user"));
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java
Patch:
@@ -34,6 +34,7 @@ public MapValueProvider(Map<?, ?> map, boolean ignoreCase) {
 	 * 
 	 * @param map Map
 	 * @param ignoreCase 是否忽略key的大小写
+	 * @param ignoreError 是否忽略错误
 	 * @since 5.3.2
 	 */
 	public MapValueProvider(Map<?, ?> map, boolean ignoreCase, boolean ignoreError) {

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/ValueProvider.java
Patch:
@@ -18,7 +18,7 @@ public interface ValueProvider<T>{
 	 * 返回值一般需要匹配被注入类型，如果不匹配会调用默认转换 Convert#convert(Type, Object)实现转换
 	 * 
 	 * @param key Bean对象中参数名
-	 * @param valueType 被注入的值得类型
+	 * @param valueType 被注入的值的类型
 	 * @return 对应参数名的值
 	 */
 	Object value(T key, Type valueType);

File: hutool-cron/src/test/java/cn/hutool/cron/demo/CronTest.java
Patch:
@@ -36,7 +36,7 @@ public void cronTest() {
 	}
 	
 	@Test
-//	@Ignore
+	@Ignore
 	public void cronTest2() {
 		// 支持秒级别定时任务
 		CronUtil.setMatchSecond(true);

File: hutool-core/src/main/java/cn/hutool/core/date/CalendarUtil.java
Patch:
@@ -280,7 +280,7 @@ public static boolean isSameDay(Calendar cal1, Calendar cal2) {
 	}
 
 	/**
-	 * 获得指定日期区间内的年份和季节<br>
+	 * 获得指定日期区间内的年份和季度<br>
 	 *
 	 * @param startDate 起始日期（包含）
 	 * @param endDate   结束日期（包含）
@@ -302,10 +302,11 @@ public static LinkedHashSet<String> yearAndQuarter(long startDate, long endDate)
 	}
 
 	/**
-	 * 获得指定日期年份和季节<br>
+	 * 获得指定日期年份和季度<br>
 	 * 格式：[20131]表示2013年第一季度
 	 *
 	 * @param cal 日期
+	 * @return 年和季度，格式类似于20131
 	 */
 	public static String yearAndQuarter(Calendar cal) {
 		return StrUtil.builder().append(cal.get(Calendar.YEAR)).append(cal.get(Calendar.MONTH) / 3 + 1).toString();

File: hutool-core/src/test/java/cn/hutool/core/util/HexUtilTest.java
Patch:
@@ -3,9 +3,6 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-import cn.hutool.core.util.CharsetUtil;
-import cn.hutool.core.util.HexUtil;
-
 /**
  * HexUtil单元测试
  * @author Looly

File: hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java
Patch:
@@ -188,8 +188,7 @@ protected static Object stringToValue(String string) {
 	 * @return JSONObject
 	 */
 	protected static JSONObject propertyPut(JSONObject jsonObject, Object key, Object value) {
-		String keyStr = Convert.toStr(key);
-		String[] path = StrUtil.split(keyStr, StrUtil.DOT);
+		final String[] path = StrUtil.split(Convert.toStr(key), StrUtil.DOT);
 		int last = path.length - 1;
 		JSONObject target = jsonObject;
 		for (int i = 0; i < last; i += 1) {

File: hutool-json/src/main/java/cn/hutool/json/JSON.java
Patch:
@@ -1,13 +1,13 @@
 package cn.hutool.json;
 
+import cn.hutool.core.bean.BeanPath;
+import cn.hutool.core.lang.TypeReference;
+
 import java.io.Serializable;
 import java.io.StringWriter;
 import java.io.Writer;
 import java.lang.reflect.Type;
 
-import cn.hutool.core.bean.BeanPath;
-import cn.hutool.core.lang.TypeReference;
-
 /**
  * JSON接口
  *

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/SM2Test.java
Patch:
@@ -171,9 +171,7 @@ public void sm2WithPointTest(){
 		String id = "31323334353637383132333435363738";
 
 		final SM2 sm2 = new SM2(d, x, y);
-
 		final String sign = sm2.signHex(data, id);
-
 		Assert.assertTrue(sm2.verifyHex(data, sign));
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/net/NetUtil.java
Patch:
@@ -28,6 +28,7 @@
 import java.nio.channels.SocketChannel;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.LinkedHashSet;
 import java.util.List;
@@ -715,7 +716,7 @@ public static boolean ping(String ip, int timeout) {
 	 */
 	public static List<HttpCookie> parseCookies(String cookieStr){
 		if(StrUtil.isBlank(cookieStr)){
-			return CollUtil.newArrayList();
+			return Collections.emptyList();
 		}
 		return HttpCookie.parse(cookieStr);
 	}

File: hutool-db/src/test/java/cn/hutool/db/CRUDTest.java
Patch:
@@ -87,7 +87,8 @@ public void findInTest() throws SQLException {
 
 	@Test
 	public void findInTest2() throws SQLException {
-		List<Entity> results = db.findAll(Entity.create("user").set("id", new Condition("id", new long[]{1, 2, 3})));
+		List<Entity> results = db.findAll(Entity.create("user")
+				.set("id", new Condition("id", new long[]{1, 2, 3})));
 		Assert.assertEquals(2, results.size());
 	}
 

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -20,7 +20,7 @@
 import java.util.ListIterator;
 import java.util.RandomAccess;
 
-import static cn.hutool.json.JSONConverter.*;
+import static cn.hutool.json.JSONConverter.jsonConvert;
 
 /**
  * JSON数组<br>

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -124,7 +124,8 @@ public JSONObject(int capacity, JSONConfig config) {
 	 * <li>value为Map，将键值对加入JSON对象</li>
 	 * <li>value为JSON字符串（CharSequence），使用JSONTokener解析</li>
 	 * <li>value为JSONTokener，直接解析</li>
-	 * <li>value为普通JavaBean，如果为普通的JavaBean，调用其getters方法（getXXX或者isXXX）获得值，加入到JSON对象。例如：如果JavaBean对象中有个方法getName()，值为"张三"，获得的键值对为：name: "张三"</li>
+	 * <li>value为普通JavaBean，如果为普通的JavaBean，调用其getters方法（getXXX或者isXXX）获得值，加入到JSON对象。
+	 * 例如：如果JavaBean对象中有个方法getName()，值为"张三"，获得的键值对为：name: "张三"</li>
 	 * </ol>
 	 * 
 	 * @param source JavaBean或者Map对象或者String

File: hutool-json/src/main/java/cn/hutool/json/JSONTokener.java
Patch:
@@ -45,7 +45,7 @@ public class JSONTokener {
 	/**
 	 * JSON配置
 	 */
-	private JSONConfig config;
+	private final JSONConfig config;
 
 	// ------------------------------------------------------------------------------------ Constructor start
 
@@ -63,6 +63,7 @@ public JSONTokener(Reader reader, JSONConfig config) {
 		this.index = 0;
 		this.character = 1;
 		this.line = 1;
+		this.config = config;
 	}
 
 	/**

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -186,11 +186,11 @@ public void toBeanTest2() {
 	}
 
 	@Test
-	public void toBeanTest3() {
+	public void toBeanWithNullTest() {
 		String jsonStr = "{'data':{'userName':'ak','password': null}}";
+		Console.log(JSONUtil.parseObj(jsonStr));
 		UserWithMap user = JSONUtil.toBean(JSONUtil.parseObj(jsonStr), UserWithMap.class);
-		// Bean默认忽略null
-		Assert.assertFalse(user.getData().containsKey("password"));
+		Assert.assertTrue(user.getData().containsKey("password"));
 	}
 
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -700,8 +700,7 @@ public void ageTest(){
 	public void ageTest2(){
 		String d1 = "2019-02-29";
 		String d2 = "2018-02-28";
-		final int age = DateUtil.age(DateUtil.parseDate(d1), DateUtil.parseDate(d2));
-		Assert.assertEquals(18, age);
+		DateUtil.age(DateUtil.parseDate(d1), DateUtil.parseDate(d2));
 	}
 
 	@Test

File: hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java
Patch:
@@ -13,7 +13,7 @@
 public class TimeIntervalAspect extends SimpleAspect {
 	private static final long serialVersionUID = 1L;
 
-	private TimeInterval interval = new TimeInterval();
+	private final TimeInterval interval = new TimeInterval();
 
 	@Override
 	public boolean before(Object target, Method method, Object[] args) {

File: hutool-aop/src/main/java/cn/hutool/aop/interceptor/JdkInterceptor.java
Patch:
@@ -18,8 +18,8 @@
 public class JdkInterceptor implements InvocationHandler, Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private Object target;
-	private Aspect aspect;
+	private final Object target;
+	private final Aspect aspect;
 
 	/**
 	 * 构造

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java
Patch:
@@ -55,7 +55,7 @@ public BitMapBloomFilter(int m, BloomFilter... filters) {
 	 */
 	@Override
 	public boolean add(String str) {
-		boolean flag = true;
+		boolean flag = false;
 		for (BloomFilter filter : filters) {
 			flag |= filter.add(str);
 		}

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/IntMap.java
Patch:
@@ -11,7 +11,7 @@
 public class IntMap implements BitMap, Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private int[] ints;
+	private final int[] ints;
 
 	/**
 	 * 构造

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/LongMap.java
Patch:
@@ -11,7 +11,7 @@
 public class LongMap implements BitMap, Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private long[] longs;
+	private final long[] longs;
 
 	/**
 	 * 构造

File: hutool-cache/src/main/java/cn/hutool/cache/GlobalPruneTimer.java
Patch:
@@ -24,7 +24,7 @@ public enum GlobalPruneTimer {
 	/**
 	 * 缓存任务计数
 	 */
-	private AtomicInteger cacheTaskNumber = new AtomicInteger(1);
+	private final AtomicInteger cacheTaskNumber = new AtomicInteger(1);
 
 	/**
 	 * 定时器

File: hutool-captcha/src/main/java/cn/hutool/captcha/generator/MathGenerator.java
Patch:
@@ -16,7 +16,7 @@ public class MathGenerator implements CodeGenerator {
 	private static final String operators = "+-*";
 
 	/** 参与计算数字最大长度 */
-	private int numberLength;
+	private final int numberLength;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -694,7 +694,7 @@ public static boolean isMatchName(Object bean, String beanClassName, boolean isS
 	 */
 	public static <T> T trimStrFields(T bean, String... ignoreFields) {
 		if (bean == null) {
-			return bean;
+			return null;
 		}
 
 		final Field[] fields = ReflectUtil.getFields(bean.getClass());

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/MapValueProvider.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class MapValueProvider implements ValueProvider<String> {
 
-	private Map<?, ?> map;
+	private final Map<?, ?> map;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/collection/BoundedPriorityQueue.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.Comparator;
 import java.util.Iterator;
 import java.util.PriorityQueue;
@@ -80,7 +79,7 @@ public boolean addAll(E[] c) {
 	 */
 	public ArrayList<E> toList() {
 		final ArrayList<E> list = new ArrayList<>(this);
-		Collections.sort(list, comparator);
+		list.sort(comparator);
 		return list;
 	}
 	

File: hutool-core/src/main/java/cn/hutool/core/collection/CopiedIter.java
Patch:
@@ -24,7 +24,7 @@
 public class CopiedIter<E> implements Iterator<E>, Iterable<E>, Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private Iterator<E> listIterator;
+	private final Iterator<E> listIterator;
 	
 	public static <V> CopiedIter<V> copyOf(Iterator<V> iterator){
 		return new CopiedIter<>(iterator);

File: hutool-core/src/main/java/cn/hutool/core/comparator/IndexedComparator.java
Patch:
@@ -1,9 +1,9 @@
 package cn.hutool.core.comparator;
 
-import java.util.Comparator;
-
 import cn.hutool.core.util.ArrayUtil;
 
+import java.util.Comparator;
+
 /**
  * 按照数组的顺序正序排列，数组的元素位置决定了对象的排序先后<br>
  * 如果参与排序的元素并不在数组中，则排序在前
@@ -15,7 +15,7 @@
  */
 public class IndexedComparator<T> implements Comparator<T> {
 
-	private T[] array;
+	private final T[] array;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -93,7 +93,7 @@ public class ConverterRegistry implements Serializable{
 	/** 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例 没有绑定关系，而且只有被调用到才会装载，从而实现了延迟加载 */
 	private static class SingletonHolder {
 		/** 静态初始化器，由JVM来保证线程安全 */
-		private static ConverterRegistry instance = new ConverterRegistry();
+		private static final ConverterRegistry INSTANCE = new ConverterRegistry();
 	}
 
 	/**
@@ -102,7 +102,7 @@ private static class SingletonHolder {
 	 * @return {@link ConverterRegistry}
 	 */
 	public static ConverterRegistry getInstance() {
-		return SingletonHolder.instance;
+		return SingletonHolder.INSTANCE;
 	}
 
 	public ConverterRegistry() {

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/DateConverter.java
Patch:
@@ -18,7 +18,7 @@
 public class DateConverter extends AbstractConverter<java.util.Date> {
 	private static final long serialVersionUID = 1L;
 
-	private Class<? extends java.util.Date> targetType;
+	private final Class<? extends java.util.Date> targetType;
 	/** 日期格式化 */
 	private String format;
 

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/EnumConverter.java
Patch:
@@ -25,7 +25,7 @@ public class EnumConverter extends AbstractConverter<Object> {
 
 	private static final Map<Class<?>, Map<Class<?>, Method>> VALUE_OF_METHOD_CACHE = new ConcurrentHashMap<>();
 
-	private Class enumClass;
+	private final Class enumClass;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/GenericEnumConverter.java
Patch:
@@ -14,7 +14,7 @@
 public class GenericEnumConverter<E extends Enum<E>> extends AbstractConverter<E> {
 	private static final long serialVersionUID = 1L;
 
-	private Class<E> enumClass;
+	private final Class<E> enumClass;
 	
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java
Patch:
@@ -29,7 +29,7 @@
 public class PrimitiveConverter extends AbstractConverter<Object> {
 	private static final long serialVersionUID = 1L;
 
-	private Class<?> targetType;
+	private final Class<?> targetType;
 
 	/**
 	 * 构造<br>

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/TemporalAccessorConverter.java
Patch:
@@ -39,7 +39,7 @@
 public class TemporalAccessorConverter extends AbstractConverter<TemporalAccessor> {
 	private static final long serialVersionUID = 1L;
 
-	private Class<?> targetType;
+	private final Class<?> targetType;
 	/**
 	 * 日期格式化
 	 */

File: hutool-core/src/main/java/cn/hutool/core/date/DateBetween.java
Patch:
@@ -16,9 +16,9 @@ public class DateBetween implements Serializable{
 	private static final long serialVersionUID = 1L;
 
 	/** 开始日期 */
-	private Date begin;
+	private final Date begin;
 	/** 结束日期 */
-	private Date end;
+	private final Date end;
 
 	/**
 	 * 创建<br>

File: hutool-core/src/main/java/cn/hutool/core/date/DateField.java
Patch:
@@ -103,7 +103,7 @@ public enum DateField {
 	MILLISECOND(Calendar.MILLISECOND);
 
 	// ---------------------------------------------------------------
-	private int value;
+	private final int value;
 
 	DateField(int value) {
 		this.value = value;

File: hutool-core/src/main/java/cn/hutool/core/date/DateUnit.java
Patch:
@@ -19,7 +19,7 @@ public enum DateUnit {
 	/**一周的毫秒数 */
 	WEEK(DAY.getMillis() * 7);
 	
-	private long millis;
+	private final long millis;
 	DateUnit(long millis){
 		this.millis = millis;
 	}

File: hutool-core/src/main/java/cn/hutool/core/date/Month.java
Patch:
@@ -53,7 +53,7 @@ public enum Month {
 	UNDECIMBER(Calendar.UNDECIMBER);
 
 	// ---------------------------------------------------------------
-	private int value;
+	private final int value;
 
 	Month(int value) {
 		this.value = value;

File: hutool-core/src/main/java/cn/hutool/core/date/Quarter.java
Patch:
@@ -23,7 +23,7 @@ public enum Quarter {
 	Q4(4);
 	
 	// ---------------------------------------------------------------
-	private int value;
+	private final int value;
 
 	Quarter(int value) {
 		this.value = value;

File: hutool-core/src/main/java/cn/hutool/core/date/SystemClock.java
Patch:
@@ -26,7 +26,7 @@ public class SystemClock {
 	 * 构造
 	 * @param period 时钟更新间隔，单位毫秒
 	 */
-	private SystemClock(long period) {
+	public SystemClock(long period) {
 		this.period = period;
 		this.now = System.currentTimeMillis();
 		scheduleClockUpdating();

File: hutool-core/src/main/java/cn/hutool/core/date/TimeInterval.java
Patch:
@@ -12,7 +12,7 @@ public class TimeInterval implements Serializable {
 	private static final long serialVersionUID = 1L;
 
 	private long time;
-	private boolean isNano;
+	private final boolean isNano;
 
 	/**
 	 * 构造，默认使用毫秒计数

File: hutool-core/src/main/java/cn/hutool/core/date/Week.java
Patch:
@@ -36,7 +36,7 @@ public enum Week {
 
 	// ---------------------------------------------------------------
 	/** 星期对应{@link Calendar} 中的Week值 */
-	private int value;
+	private final int value;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/date/format/FastDatePrinter.java
Patch:
@@ -1,5 +1,7 @@
 package cn.hutool.core.date.format;
 
+import cn.hutool.core.date.DateException;
+
 import java.io.IOException;
 import java.io.ObjectInputStream;
 import java.text.DateFormatSymbols;
@@ -12,8 +14,6 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
-import cn.hutool.core.date.DateException;
-
 /**
  * {@link java.text.SimpleDateFormat} 的线程安全版本，用于将 {@link Date} 格式化输出<br>
  * Thanks to Apache Commons Lang 3.5
@@ -48,7 +48,7 @@ protected FastDatePrinter(final String pattern, final TimeZone timeZone, final L
 	 */
 	private void init() {
 		final List<Rule> rulesList = parsePattern();
-		rules = rulesList.toArray(new Rule[rulesList.size()]);
+		rules = rulesList.toArray(new Rule[0]);
 
 		int len = 0;
 		for (int i = rules.length; --i >= 0;) {

File: hutool-core/src/main/java/cn/hutool/core/img/Img.java
Patch:
@@ -47,7 +47,7 @@
 public class Img implements Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private BufferedImage srcImage;
+	private final BufferedImage srcImage;
 	private Image targetImage;
 	/**
 	 * 目标图片文件格式，用于写出

File: hutool-core/src/main/java/cn/hutool/core/img/ScaleType.java
Patch:
@@ -35,7 +35,7 @@ public enum ScaleType {
 		this.value = value;
 	}
 
-	private int value;
+	private final int value;
 
 	public int getValue() {
 		return this.value;

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -82,7 +82,7 @@ public class FileUtil {
 	/**
 	 * Windows下文件名中的无效字符
 	 */
-	private static Pattern FILE_NAME_INVALID_PATTERN_WIN = Pattern.compile("[\\\\/:*?\"<>|]");
+	private static final Pattern FILE_NAME_INVALID_PATTERN_WIN = Pattern.compile("[\\\\/:*?\"<>|]");
 
 	/**
 	 * Class文件扩展名

File: hutool-core/src/main/java/cn/hutool/core/io/file/LineSeparator.java
Patch:
@@ -23,7 +23,7 @@ public enum LineSeparator {
 	/** Windows系统换行符："\r\n" */
 	WINDOWS("\r\n");
 
-	private String value;
+	private final String value;
 
 	LineSeparator(String lineSeparator) {
 		this.value = lineSeparator;

File: hutool-core/src/main/java/cn/hutool/core/io/watch/WatchKind.java
Patch:
@@ -45,7 +45,7 @@ public enum WatchKind {
 			DELETE.getValue()   //删除
 	};
 
-	private WatchEvent.Kind<?> value;
+	private final WatchEvent.Kind<?> value;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/io/watch/WatchServer.java
Patch:
@@ -51,7 +51,7 @@ public class WatchServer extends Thread implements Closeable, Serializable {
 	/**
 	 * WatchKey 和 Path的对应表
 	 */
-	private Map<WatchKey, Path> watchKeyPathMap = new HashMap<>();
+	private final Map<WatchKey, Path> watchKeyPathMap = new HashMap<>();
 
 	/**
 	 * 初始化<br>

File: hutool-core/src/main/java/cn/hutool/core/lang/ClassScanner.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.collection.EnumerationIter;
-import cn.hutool.core.convert.Convert;
 import cn.hutool.core.io.FileUtil;
 import cn.hutool.core.io.IORuntimeException;
 import cn.hutool.core.io.resource.ResourceUtil;

File: hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java
Patch:
@@ -183,8 +183,8 @@ public static void clear() {
 	 * @author Looly
 	 */
 	private static class RegexWithFlag {
-		private String regex;
-		private int flag;
+		private final String regex;
+		private final int flag;
 
 		/**
 		 * 构造

File: hutool-core/src/main/java/cn/hutool/core/lang/Snowflake.java
Patch:
@@ -51,11 +51,11 @@ public class Snowflake implements Serializable {
 	@SuppressWarnings({"PointlessBitwiseExpression", "FieldCanBeLocal"})
 	private final long sequenceMask = -1L ^ (-1L << sequenceBits);// 4095
 
-	private long workerId;
-	private long dataCenterId;
+	private final long workerId;
+	private final long dataCenterId;
+	private final boolean useSystemClock;
 	private long sequence = 0L;
 	private long lastTimestamp = -1L;
-	private boolean useSystemClock;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/Tree.java
Patch:
@@ -16,7 +16,7 @@
 public class Tree<T> extends LinkedHashMap<String, Object> implements Node<T> {
 	private static final long serialVersionUID = 1L;
 
-	private TreeNodeConfig treeNodeConfig;
+	private final TreeNodeConfig treeNodeConfig;
 	private Tree<T> parent;
 
 	public Tree() {

File: hutool-core/src/main/java/cn/hutool/core/map/MapBuilder.java
Patch:
@@ -13,7 +13,7 @@
 public class MapBuilder<K, V> implements Serializable{
 	private static final long serialVersionUID = 1L;
 	
-	private Map<K, V> map;
+	private final Map<K, V> map;
 
 	/**
 	 * 创建Builder，默认HashMap实现

File: hutool-core/src/main/java/cn/hutool/core/math/Money.java
Patch:
@@ -77,7 +77,7 @@ public class Money implements Serializable, Comparable<Money> {
 	/**
 	 * 币种。
 	 */
-	private Currency currency;
+	private final Currency currency;
 
 	// 构造器 ====================================================
 

File: hutool-core/src/main/java/cn/hutool/core/swing/clipboard/ImageSelection.java
Patch:
@@ -4,7 +4,6 @@
 import java.awt.datatransfer.DataFlavor;
 import java.awt.datatransfer.Transferable;
 import java.awt.datatransfer.UnsupportedFlavorException;
-import java.io.IOException;
 import java.io.Serializable;
 
 /**
@@ -17,7 +16,7 @@
 public class ImageSelection implements Transferable, Serializable {
 	private static final long serialVersionUID = 1L;
 	
-	private Image image;
+	private final Image image;
 
 	/**
 	 * 构造
@@ -56,7 +55,7 @@ public boolean isDataFlavorSupported(DataFlavor flavor) {
 	 * @return 转换后的对象
 	 */
 	@Override
-	public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
+	public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {
 		if (false == DataFlavor.imageFlavor.equals(flavor)) {
 			throw new UnsupportedFlavorException(flavor);
 		}

File: hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java
Patch:
@@ -43,7 +43,7 @@ public static String toString(String unicode) {
 					pos = i + 2;
 				}
 			} else {
-				pos = i;//非Unicode符，结束
+				//非Unicode符，结束
 				break;
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/text/escape/NumericEntityUnescaper.java
Patch:
@@ -48,7 +48,7 @@ protected int replace(CharSequence str, int pos, StrBuilder out) {
 					return 0;
 				}
 				out.append((char)entityValue);
-				return 2 + end - start + (isHex ? 1 : 0) + (isSemiNext ? 1 : 0);
+				return 2 + end - start + (isHex ? 1 : 0) + 1;
 			}
 		}
 		return 0;

File: hutool-core/src/main/java/cn/hutool/core/thread/ConcurrencyTester.java
Patch:
@@ -17,8 +17,8 @@
  * @author kwer
  */
 public class ConcurrencyTester {
-	private SyncFinisher sf;
-	private TimeInterval timeInterval;
+	private final SyncFinisher sf;
+	private final TimeInterval timeInterval;
 	private long interval;
 
 	public ConcurrencyTester(int threadSize) {

File: hutool-core/src/main/java/cn/hutool/core/thread/RejectPolicy.java
Patch:
@@ -23,7 +23,7 @@ public enum RejectPolicy {
 	/** 由主线程来直接执行 */
 	CALLER_RUNS(new ThreadPoolExecutor.CallerRunsPolicy());
 
-	private RejectedExecutionHandler value;
+	private final RejectedExecutionHandler value;
 
 	RejectPolicy(RejectedExecutionHandler handler) {
 		this.value = handler;

File: hutool-core/src/main/java/cn/hutool/core/thread/SemaphoreRunnable.java
Patch:
@@ -16,9 +16,9 @@
 public class SemaphoreRunnable implements Runnable {
 
 	/** 实际执行的逻辑 */
-	private Runnable runnable;
+	private final Runnable runnable;
 	/** 信号量 */
-	private Semaphore semaphore;
+	private final Semaphore semaphore;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/thread/lock/LockUtil.java
Patch:
@@ -11,7 +11,7 @@
  */
 public class LockUtil {
 
-	private static NoLock NO_LOCK = new NoLock();
+	private static final NoLock NO_LOCK = new NoLock();
 
 	/**
 	 * 创建{@link StampedLock}锁

File: hutool-core/src/main/java/cn/hutool/core/thread/lock/NoLock.java
Patch:
@@ -38,7 +38,7 @@ public void unlock() {
 	@SuppressWarnings("NullableProblems")
 	@Override
 	public Condition newCondition() {
-		return null;
+		throw new UnsupportedOperationException("NoLock`s newCondition method is unsupported");
 	}
 
 }

File: hutool-core/src/main/java/cn/hutool/core/util/ModifierUtil.java
Patch:
@@ -45,7 +45,7 @@ public enum ModifierType {
 		STRICT(Modifier.STRICT);
 
 		/** 修饰符枚举对应的int修饰符值 */
-		private int value;
+		private final int value;
 
 		/**
 		 * 构造

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -569,7 +569,7 @@ public static boolean hasEmpty(Object... objs) {
 	}
 
 	/**
-	 * 是否存都为{@code null}或空对象，通过{@link ObjectUtil#isEmpty(Object)} 判断元素
+	 * 是否全都为{@code null}或空对象，通过{@link ObjectUtil#isEmpty(Object)} 判断元素
 	 *
 	 * @param objs 被检查的对象,一个或者多个
 	 * @return 是否都为空
@@ -579,7 +579,7 @@ public static boolean isAllEmpty(Object... objs) {
 	}
 
 	/**
-	 * 是否存都不为{@code null}或空对象，通过{@link ObjectUtil#isEmpty(Object)} 判断元素
+	 * 是否全都不为{@code null}或空对象，通过{@link ObjectUtil#isEmpty(Object)} 判断元素
 	 *
 	 * @param objs 被检查的对象,一个或者多个
 	 * @return 是否都不为空

File: hutool-core/src/test/java/cn/hutool/core/math/CombinationTest.java
Patch:
@@ -1,10 +1,10 @@
 package cn.hutool.core.math;
 
-import java.util.List;
-
 import org.junit.Assert;
 import org.junit.Test;
 
+import java.util.List;
+
 /**
  * 组合单元测试
  * 
@@ -49,6 +49,6 @@ public void selectTest() {
 		Assert.assertEquals(Combination.countAll(5), selectAll.size());
 		
 		List<String[]> list2 = combination.select(0);
-		Assert.assertTrue(1 == list2.size());
+		Assert.assertEquals(1, list2.size());
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/text/csv/CsvUtilTest.java
Patch:
@@ -24,9 +24,7 @@ public void readTest() {
 	@Test
 	public void readTest2() {
 		CsvReader reader = CsvUtil.getReader();
-		reader.read(FileUtil.getUtf8Reader("test.csv"), (csvRow)->{
-			Assert.notEmpty(csvRow.getRawList());
-		});
+		reader.read(FileUtil.getUtf8Reader("test.csv"), (csvRow)-> Assert.notEmpty(csvRow.getRawList()));
 	}
 	
 	@Test

File: hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java
Patch:
@@ -55,7 +55,7 @@
 public class Scheduler implements Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private Lock lock = new ReentrantLock();
+	private final Lock lock = new ReentrantLock();
 
 	/** 时区 */
 	private TimeZone timezone;

File: hutool-cron/src/main/java/cn/hutool/cron/TaskExecutor.java
Patch:
@@ -11,8 +11,8 @@
  */
 public class TaskExecutor implements Runnable {
 
-	private Scheduler scheduler;
-	private Task task;
+	private final Scheduler scheduler;
+	private final Task task;
 
 	/**
 	 * 获得任务对象

File: hutool-cron/src/main/java/cn/hutool/cron/TaskLauncher.java
Patch:
@@ -10,8 +10,8 @@
  */
 public class TaskLauncher implements Runnable{
 	
-	private Scheduler scheduler;
-	private long millis;
+	private final Scheduler scheduler;
+	private final long millis;
 	
 	public TaskLauncher(Scheduler scheduler, long millis) {
 		this.scheduler = scheduler;

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/YearValueMatcher.java
Patch:
@@ -10,7 +10,7 @@
  */
 public class YearValueMatcher implements ValueMatcher{
 	
-	private List<Integer> valueList;
+	private final List<Integer> valueList;
 	
 	public YearValueMatcher(List<Integer> intValueList) {
 		this.valueList = intValueList;

File: hutool-cron/src/main/java/cn/hutool/cron/task/RunnableTask.java
Patch:
@@ -6,7 +6,7 @@
  *
  */
 public class RunnableTask implements Task{
-	private Runnable runnable;
+	private final Runnable runnable;
 	
 	public RunnableTask(Runnable runnable) {
 		this.runnable = runnable;

File: hutool-cron/src/test/java/cn/hutool/cron/demo/TestJob.java
Patch:
@@ -13,7 +13,7 @@
  */
 public class TestJob {
 	
-	private String jobId = IdUtil.simpleUUID();
+	private final String jobId = IdUtil.simpleUUID();
 
 	/**
 	 * 执行定时任务内容

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SignAlgorithm.java
Patch:
@@ -33,7 +33,7 @@ public enum SignAlgorithm {
 	SHA384withECDSA("SHA384withECDSA"), //
 	SHA512withECDSA("SHA512withECDSA");//
 
-	private String value;
+	private final String value;
 
 	/**
 	 * 构造

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/DigestAlgorithm.java
Patch:
@@ -14,7 +14,7 @@ public enum DigestAlgorithm {
 	SHA384("SHA-384"), 
 	SHA512("SHA-512");
 
-	private String value;
+	private final String value;
 
 	/**
 	 * 构造

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/HmacAlgorithm.java
Patch:
@@ -15,7 +15,7 @@ public enum HmacAlgorithm {
 	/** HmacSM3算法实现，需要BouncyCastle库支持 */
 	HmacSM3("HmacSM3");
 
-	private String value;
+	private final String value;
 
 	HmacAlgorithm(String value) {
 		this.value = value;

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricAlgorithm.java
Patch:
@@ -22,7 +22,7 @@ public enum SymmetricAlgorithm {
 	PBEWithSHA1AndDESede("PBEWithSHA1AndDESede"), 
 	PBEWithSHA1AndRC2_40("PBEWithSHA1AndRC2_40");
 
-	private String value;
+	private final String value;
 
 	/**
 	 * 构造

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricCrypto.java
Patch:
@@ -48,7 +48,7 @@ public class SymmetricCrypto implements Serializable {
 	 * 是否0填充
 	 */
 	private boolean isZeroPadding;
-	private Lock lock = new ReentrantLock();
+	private final Lock lock = new ReentrantLock();
 
 	// ------------------------------------------------------------------ Constructor start
 

File: hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java
Patch:
@@ -1,12 +1,11 @@
 package cn.hutool.db;
 
+import javax.sql.DataSource;
 import java.sql.Connection;
 import java.sql.SQLException;
 import java.util.HashMap;
 import java.util.Map;
 
-import javax.sql.DataSource;
-
 /**
  * 线程相关的数据库连接持有器<br>
  * 此对象为单例类，用于存储线程相关的Connection对象。<br>
@@ -61,7 +60,7 @@ public void close(DataSource ds) {
 	public static class GroupedConnection {
 
 		/** 连接的Map，考虑到大部分情况是单数据库，故此处初始大小1 */
-		private Map<DataSource, Connection> connMap = new HashMap<>(1, 1);
+		private final Map<DataSource, Connection> connMap = new HashMap<>(1, 1);
 
 		/**
 		 * 获取连接，如果获取的连接为空或者已被关闭，重新创建连接

File: hutool-db/src/main/java/cn/hutool/db/ds/pooled/DbSetting.java
Patch:
@@ -17,7 +17,7 @@ public class DbSetting {
 	/** 默认的数据库连接配置文件路径 */
 	public final static String DEFAULT_DB_CONFIG_PATH = "config/db.setting";
 
-	private Setting setting;
+	private final Setting setting;
 
 	/**
 	 * 构造

File: hutool-db/src/main/java/cn/hutool/db/ds/pooled/PooledConnection.java
Patch:
@@ -1,19 +1,19 @@
 package cn.hutool.db.ds.pooled;
 
+import cn.hutool.db.DbUtil;
+
 import java.sql.Connection;
 import java.sql.DriverManager;
 import java.sql.SQLException;
 
-import cn.hutool.db.DbUtil;
-
 /**
  * 池化
  * @author Looly
  *
  */
 public class PooledConnection extends ConnectionWraper{
 	
-	private PooledDataSource ds;
+	private final PooledDataSource ds;
 	private boolean isClosed;
 	
 	public PooledConnection(PooledDataSource ds) throws SQLException {

File: hutool-db/src/main/java/cn/hutool/db/handler/EntityHandler.java
Patch:
@@ -1,11 +1,11 @@
 package cn.hutool.db.handler;
 
+import cn.hutool.db.Entity;
+
 import java.sql.ResultSet;
 import java.sql.ResultSetMetaData;
 import java.sql.SQLException;
 
-import cn.hutool.db.Entity;
-
 /**
  * Entity对象处理器，只处理第一条数据
  * 
@@ -16,7 +16,7 @@ public class EntityHandler implements RsHandler<Entity>{
 	private static final long serialVersionUID = -8742432871908355992L;
 
 	/** 是否大小写不敏感 */
-	private boolean caseInsensitive;
+	private final boolean caseInsensitive;
 
 	/**
 	 * 创建一个 EntityHandler对象

File: hutool-db/src/main/java/cn/hutool/db/handler/EntityListHandler.java
Patch:
@@ -1,12 +1,12 @@
 package cn.hutool.db.handler;
 
+import cn.hutool.db.Entity;
+
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.List;
 
-import cn.hutool.db.Entity;
-
 /**
  * 结果集处理类 ，处理出的结果为Entity列表
  * @author loolly
@@ -16,7 +16,7 @@ public class EntityListHandler implements RsHandler<List<Entity>>{
 	private static final long serialVersionUID = -2846240126316979895L;
 	
 	/** 是否大小写不敏感 */
-	private boolean caseInsensitive;
+	private final boolean caseInsensitive;
 	
 	/**
 	 * 创建一个 EntityListHandler对象

File: hutool-db/src/main/java/cn/hutool/db/handler/EntitySetHandler.java
Patch:
@@ -1,11 +1,11 @@
 package cn.hutool.db.handler;
 
+import cn.hutool.db.Entity;
+
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.util.LinkedHashSet;
 
-import cn.hutool.db.Entity;
-
 /**
  * 结果集处理类 ，处理出的结果为Entity列表，结果不能重复（按照Entity对象去重）
  * @author loolly
@@ -15,7 +15,7 @@ public class EntitySetHandler implements RsHandler<LinkedHashSet<Entity>>{
 	private static final long serialVersionUID = 8191723216703506736L;
 
 	/** 是否大小写不敏感 */
-	private boolean caseInsensitive;
+	private final boolean caseInsensitive;
 
 	/**
 	 * 创建一个 EntityHandler对象

File: hutool-db/src/main/java/cn/hutool/db/meta/Table.java
Patch:
@@ -21,8 +21,8 @@ public class Table implements Serializable, Cloneable {
 	/** 注释 */
 	private String comment;
 	/** 主键字段名列表 */
-	private Set<String> pkNames = new LinkedHashSet<String>();
-	private Map<String, Column> columns = new LinkedHashMap<>();
+	private Set<String> pkNames = new LinkedHashSet<>();
+	private final Map<String, Column> columns = new LinkedHashMap<>();
 
 	public static Table create(String tableName) {
 		return new Table(tableName);

File: hutool-db/src/main/java/cn/hutool/db/meta/TableType.java
Patch:
@@ -14,7 +14,7 @@ public enum TableType {
 	ALIAS("ALIAS"),
 	SYNONYM("SYNONYM");
 	
-	private String value;
+	private final String value;
 	
 	/**
 	 * 构造

File: hutool-db/src/main/java/cn/hutool/db/transaction/TransactionLevel.java
Patch:
@@ -58,7 +58,7 @@ public enum TransactionLevel {
 	SERIALIZABLE(Connection.TRANSACTION_SERIALIZABLE);
 
 	/** 事务级别，对应Connection中的常量值 */
-	private int level;
+	private final int level;
 
 	TransactionLevel(int level) {
 		this.level = level;

File: hutool-db/src/test/java/cn/hutool/db/CRUDTest.java
Patch:
@@ -22,7 +22,7 @@
  */
 public class CRUDTest {
 
-	private static Db db = Db.use("test");
+	private static final Db db = Db.use("test");
 
 	@Test
 	public void findIsNullTest() throws SQLException {

File: hutool-dfa/src/main/java/cn/hutool/dfa/SensitiveUtil.java
Patch:
@@ -16,7 +16,7 @@ public final class SensitiveUtil {
 //	private static final Log log = LogFactory.get();
 	
 	public static final char DEFAULT_SEPARATOR = StrUtil.C_COMMA;
-	private static WordTree sensitiveTree = new WordTree();
+	private static final WordTree sensitiveTree = new WordTree();
 	
 	/**
 	 * @return 是否已经被初始化

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -467,7 +467,7 @@ public Properties getSmtpProps() {
 
 		if (this.starttlsEnable) {
 			//STARTTLS是对纯文本通信协议的扩展。它将纯文本连接升级为加密连接（TLS或SSL）， 而不是使用一个单独的加密通信端口。
-			p.put(STARTTLS_ENABLE, String.valueOf(this.starttlsEnable));
+			p.put(STARTTLS_ENABLE, "true");
 
 			if (null == this.sslEnable) {
 				//为了兼容旧版本，当用户没有此项配置时，按照starttlsEnable开启状态时对待

File: hutool-extra/src/main/java/cn/hutool/extra/mail/UserPassAuthenticator.java
Patch:
@@ -11,8 +11,8 @@
  */
 public class UserPassAuthenticator extends Authenticator {
 
-	private String user;
-	private String pass;
+	private final String user;
+	private final String pass;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/qrcode/BufferedImageLuminanceSource.java
Patch:
@@ -99,6 +99,7 @@ public boolean isRotateSupported() {
 		return true;
 	}
 
+	@SuppressWarnings("SuspiciousNameCombination")
 	@Override
 	public LuminanceSource rotateCounterClockwise() {
 

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschSessionPool.java
Patch:
@@ -20,7 +20,7 @@ public enum JschSessionPool {
 	/**
 	 * SSH会话池，key：host，value：Session对象
 	 */
-	private Map<String, Session> sessionPool = new ConcurrentHashMap<>();
+	private final Map<String, Session> sessionPool = new ConcurrentHashMap<>();
 	/**
 	 * 锁
 	 */

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyTemplate.java
Patch:
@@ -1,12 +1,12 @@
 package cn.hutool.extra.template.engine.enjoy;
 
+import cn.hutool.extra.template.AbstractTemplate;
+
 import java.io.OutputStream;
 import java.io.Serializable;
 import java.io.Writer;
 import java.util.Map;
 
-import cn.hutool.extra.template.AbstractTemplate;
-
 /**
  * Engoy模板实现
  *
@@ -16,7 +16,7 @@
 public class EnjoyTemplate extends AbstractTemplate implements Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private com.jfinal.template.Template rawTemplate;
+	private final com.jfinal.template.Template rawTemplate;
 
 	/**
 	 * 包装Enjoy模板

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmTemplate.java
Patch:
@@ -18,7 +18,7 @@
 public class RythmTemplate extends AbstractTemplate implements Serializable {
 	private static final long serialVersionUID = -132774960373894911L;
 
-	private org.rythmengine.template.ITemplate rawTemplate;
+	private final org.rythmengine.template.ITemplate rawTemplate;
 	
 	/**
 	 * 包装Rythm模板

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java
Patch:
@@ -37,7 +37,7 @@ public class VelocityUtil {
 	/**
 	 * 全局上下文，当设定值时，对于每个模板都有效
 	 */
-	private static Map<String, Object> globalContext = new HashMap<>();
+	private static final Map<String, Object> globalContext = new HashMap<>();
 
 	/**
 	 * 设置Velocity全局上下文<br>

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/hanlp/HanLPEngine.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class HanLPEngine implements TokenizerEngine {
 
-	private Segment seg;
+	private final Segment seg;
 	
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/hanlp/HanLPWord.java
Patch:
@@ -13,7 +13,7 @@
 public class HanLPWord implements Word {
 	private static final long serialVersionUID = 1L;
 	
-	private Term term;
+	private final Term term;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ikanalyzer/IKAnalyzerEngine.java
Patch:
@@ -15,7 +15,7 @@
  */
 public class IKAnalyzerEngine implements TokenizerEngine {
 
-	private IKSegmenter seg;
+	private final IKSegmenter seg;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ikanalyzer/IKAnalyzerWord.java
Patch:
@@ -13,7 +13,7 @@
 public class IKAnalyzerWord implements Word {
 	private static final long serialVersionUID = 1L;
 	
-	private Lexeme word;
+	private final Lexeme word;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jcseg/JcsegResult.java
Patch:
@@ -19,7 +19,7 @@
  */
 public class JcsegResult implements Result{
 	
-	private ISegment result;
+	private final ISegment result;
 	private Word cachedWord;
 	
 	/**

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jieba/JiebaEngine.java
Patch:
@@ -16,8 +16,8 @@
  */
 public class JiebaEngine implements TokenizerEngine {
 
-	private JiebaSegmenter jiebaSegmenter;
-	private SegMode mode;
+	private final JiebaSegmenter jiebaSegmenter;
+	private final SegMode mode;
 	
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/mynlp/MynlpEngine.java
Patch:
@@ -17,7 +17,7 @@
  */
 public class MynlpEngine implements TokenizerEngine {
 
-	private Lexer lexer;
+	private final Lexer lexer;
 	
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/word/WordEngine.java
Patch:
@@ -17,7 +17,7 @@
  */
 public class WordEngine implements TokenizerEngine {
 	
-	private Segmentation segmentation;
+	private final Segmentation segmentation;
 
 	/**
 	 * 构造

File: hutool-http/src/main/java/cn/hutool/http/ContentType.java
Patch:
@@ -41,7 +41,7 @@ public enum ContentType {
 	 */
 	TEXT_HTML("text/html");
 
-	private String value;
+	private final String value;
 
 	ContentType(String value) {
 		this.value = value;

File: hutool-http/src/main/java/cn/hutool/http/Header.java
Patch:
@@ -121,7 +121,7 @@ public enum Header {
 	 */
 	LOCATION("Location");
 
-	private String value;
+	private final String value;
 
 	Header(String value) {
 		this.value = value;

File: hutool-http/src/main/java/cn/hutool/http/HttpConnection.java
Patch:
@@ -33,8 +33,8 @@
  */
 public class HttpConnection {
 
-	private URL url;
-	private Proxy proxy;
+	private final URL url;
+	private final Proxy proxy;
 	private HttpURLConnection conn;
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/HttpResponse.java
Patch:
@@ -43,7 +43,7 @@ public class HttpResponse extends HttpBase<HttpResponse> implements Closeable {
 	/** 响应状态码 */
 	protected int status;
 	/** 是否忽略读取Http响应体 */
-	private boolean ignoreBody;
+	private final boolean ignoreBody;
 	/** 从响应中获取的编码 */
 	private Charset charsetFromResponse;
 

File: hutool-http/src/main/java/cn/hutool/http/server/action/RootAction.java
Patch:
@@ -19,7 +19,7 @@ public class RootAction implements Action {
 	public static final String DEFAULT_INDEX_FILE_NAME = "index.html";
 
 	private final String rootDir;
-	private List<String> indexFileNames;
+	private final List<String> indexFileNames;
 
 	/**
 	 * 构造

File: hutool-http/src/main/java/cn/hutool/http/webservice/SoapProtocol.java
Patch:
@@ -23,7 +23,7 @@ public enum SoapProtocol {
 		this.value = value;
 	}
 
-	private String value;
+	private final String value;
 
 	/**
 	 * 获取版本值信息

File: hutool-http/src/test/java/cn/hutool/http/test/DownloadTest.java
Patch:
@@ -44,7 +44,7 @@ public void downloadTest() {
 		// 带进度显示的文件下载
 		HttpUtil.downloadFile("http://mirrors.sohu.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso", FileUtil.file("d:/"), new StreamProgress() {
 
-			long time = System.currentTimeMillis();
+			final long time = System.currentTimeMillis();
 
 			@Override
 			public void start() {

File: hutool-json/src/main/java/cn/hutool/json/JSONTokener.java
Patch:
@@ -40,7 +40,7 @@ public class JSONTokener {
 	/**
 	 * 源
 	 */
-	private Reader reader;
+	private final Reader reader;
 
 	/**
 	 * JSON配置

File: hutool-json/src/test/java/cn/hutool/json/test/bean/ResultDto.java
Patch:
@@ -74,7 +74,7 @@ public ResultDto(int code, String message) {
 	 * @param message the message
 	 * @param result the result
 	 */
-	ResultDto(int code, String message, T result) {
+	public ResultDto(int code, String message, T result) {
 		super();
 		this.code(code).message(message).result(result);
 	}

File: hutool-log/src/main/java/cn/hutool/log/LogFactory.java
Patch:
@@ -24,7 +24,7 @@ public abstract class LogFactory {
 	/**
 	 * 日志对象缓存
 	 */
-	private Map<Object, Log> logCache;
+	private final Map<Object, Log> logCache;
 
 	/**
 	 * 构造

File: hutool-log/src/main/java/cn/hutool/log/dialect/console/ConsoleLog.java
Patch:
@@ -19,7 +19,7 @@ public class ConsoleLog extends AbstractLog {
 	private static final String logFormat = "[{date}] [{level}] {name}: {msg}";
 	private static Level currentLevel = Level.DEBUG;
 
-	private String name;
+	private final String name;
 
 	//------------------------------------------------------------------------- Constructor
 

File: hutool-log/src/main/java/cn/hutool/log/dialect/slf4j/Slf4jLog.java
Patch:
@@ -161,7 +161,6 @@ public void log(String fqcn, Level level, Throwable t, String format, Object...
 	 * @param t 异常
 	 * @param msgTemplate 消息模板
 	 * @param arguments 参数
-	 * @return 是否支持 LocationAwareLogger对象，如果不支持需要日志方法调用被包装类的相应方法
 	 */
 	private void locationAwareLog(LocationAwareLogger logger, String fqcn, int level_int, Throwable t, String msgTemplate, Object[] arguments) {
 		// ((LocationAwareLogger)this.logger).log(null, fqcn, level_int, msgTemplate, arguments, t);

File: hutool-log/src/main/java/cn/hutool/log/dialect/tinylog/TinyLog.java
Patch:
@@ -20,8 +20,8 @@ public class TinyLog extends AbstractLog {
 	/** 堆栈增加层数，因为封装因此多了两层，此值用于正确获取当前类名 */
 	private static final int DEPTH = 4;
 
-	private int level;
-	private String name;
+	private final int level;
+	private final String name;
 
 	// ------------------------------------------------------------------------- Constructor
 	public TinyLog(Class<?> clazz) {

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -45,7 +45,7 @@ public class Excel03SaxReader extends AbstractExcelSaxReader<Excel03SaxReader> i
 	/**
 	 * 如果为公式，true表示输出公式计算后的结果值，false表示输出公式本身
 	 */
-	private boolean isOutputFormulaValues = true;
+	private final boolean isOutputFormulaValues = true;
 
 	/**
 	 * 用于解析公式
@@ -66,7 +66,7 @@ public class Excel03SaxReader extends AbstractExcelSaxReader<Excel03SaxReader> i
 	/**
 	 * Sheet边界记录，此Record中可以获得Sheet名
 	 */
-	private List<BoundSheetRecord> boundSheetRecords = new ArrayList<>();
+	private final List<BoundSheetRecord> boundSheetRecords = new ArrayList<>();
 
 	private boolean isOutputNextStringRecord;
 
@@ -80,7 +80,7 @@ public class Excel03SaxReader extends AbstractExcelSaxReader<Excel03SaxReader> i
 	// 当前表索引
 	private int curRid = -1;
 
-	private RowHandler rowHandler;
+	private final RowHandler rowHandler;
 
 	/**
 	 * 构造

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel07SaxReader.java
Patch:
@@ -57,7 +57,7 @@ public class Excel07SaxReader extends AbstractExcelSaxReader<Excel07SaxReader> i
 	// 当前列
 	private int curCell;
 	// 上一次的内容
-	private StringBuilder lastContent = new StringBuilder(64);
+	private final StringBuilder lastContent = new StringBuilder(64);
 	// 单元数据类型
 	private CellDataType cellDataType;
 	// 当前列坐标， 如A1，B5

File: hutool-poi/src/main/java/cn/hutool/poi/word/PicType.java
Patch:
@@ -28,7 +28,7 @@ public enum PicType {
 		this.value = value;
 	}
 
-	private int value;
+	private final int value;
 
 	/**
 	 * 获取图片类型对应值

File: hutool-poi/src/main/java/cn/hutool/poi/word/Word07Writer.java
Patch:
@@ -28,7 +28,7 @@
  */
 public class Word07Writer implements Closeable {
 
-	private XWPFDocument doc;
+	private final XWPFDocument doc;
 	/**
 	 * 目标文件
 	 */

File: hutool-setting/src/main/java/cn/hutool/setting/dialect/PropsUtil.java
Patch:
@@ -19,7 +19,7 @@ public class PropsUtil {
 	/**
 	 * 配置文件缓存
 	 */
-	private static Map<String, Props> propsMap = new ConcurrentHashMap<>();
+	private static final Map<String, Props> propsMap = new ConcurrentHashMap<>();
 	private static final Object lock = new Object();
 
 	/**

File: hutool-setting/src/test/java/cn/hutool/setting/test/SettingUtilTest.java
Patch:
@@ -21,7 +21,9 @@ public void getTest2() {
 
 	@Test
 	public void getFirstFoundTest() {
-		String driver = SettingUtil.getFirstFound("test2", "test").get("demo", "driver");
+		//noinspection ConstantConditions
+		String driver = SettingUtil.getFirstFound("test2", "test")
+				.get("demo", "driver");
 		Assert.assertEquals("com.mysql.jdbc.Driver", driver);
 	}
 }

File: hutool-socket/src/main/java/cn/hutool/socket/nio/Operation.java
Patch:
@@ -18,7 +18,7 @@ public enum Operation {
 	/** 接受连接操作 */
 	ACCEPT(SelectionKey.OP_ACCEPT);
 
-	private int value;
+	private final int value;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -302,7 +302,9 @@ public static <T> String join(Iterable<T> iterable, CharSequence conjunction) {
 	 * @param suffix      每个元素添加的后缀，null表示不添加
 	 * @return 连接后的字符串
 	 * @since 4.0.10
+	 * @deprecated 如果对象同时实现Iterable和Iterator接口会产生歧义，请使用CollUtil.join
 	 */
+	@Deprecated
 	public static <T> String join(Iterable<T> iterable, CharSequence conjunction, String prefix, String suffix) {
 		if (null == iterable) {
 			return null;

File: hutool-core/src/main/java/cn/hutool/core/io/FastByteArrayOutputStream.java
Patch:
@@ -1,11 +1,11 @@
 package cn.hutool.core.io;
 
+import cn.hutool.core.util.CharsetUtil;
+
 import java.io.IOException;
 import java.io.OutputStream;
 import java.nio.charset.Charset;
 
-import cn.hutool.core.util.CharsetUtil;
-
 /**
  * 基于快速缓冲FastByteBuffer的OutputStream，随着数据的增长自动扩充缓冲区
  * <p>
@@ -34,7 +34,6 @@ public FastByteArrayOutputStream(int size) {
 		buffer = new FastByteBuffer(size);
 	}
 
-	@SuppressWarnings("NullableProblems")
 	@Override
 	public void write(byte[] b, int off, int len) {
 		buffer.append(b, off, len);

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -2402,7 +2402,7 @@ public static <T> String join(T[] array, CharSequence conjunction, String prefix
 			if (ArrayUtil.isArray(item)) {
 				sb.append(join(ArrayUtil.wrap(item), conjunction, prefix, suffix));
 			} else if (item instanceof Iterable<?>) {
-				sb.append(IterUtil.join((Iterable<?>) item, conjunction, prefix, suffix));
+				sb.append(CollUtil.join((Iterable<?>) item, conjunction, prefix, suffix));
 			} else if (item instanceof Iterator<?>) {
 				sb.append(IterUtil.join((Iterator<?>) item, conjunction, prefix, suffix));
 			} else {

File: hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
Patch:
@@ -938,7 +938,6 @@ private static void zip(File file, String srcRootDir, ZipOutputStream out, FileF
 				addDir(subPath, out);
 			}
 			// 压缩目录下的子文件或目录
-			//noinspection ConstantConditions
 			for (File childFile : files) {
 				zip(childFile, srcRootDir, out, filter);
 			}

File: hutool-core/src/test/java/cn/hutool/core/collection/CollUtilTest.java
Patch:
@@ -179,6 +179,7 @@ public void foreachTest() {
 		map.put("c", "3");
 
 		final String[] result = new String[1];
+		//noinspection deprecation
 		CollUtil.forEach(map, (key, value, index) -> {
 			if (key.equals("a")) {
 				result[0] = value;

File: hutool-db/src/main/java/cn/hutool/db/meta/MetaUtil.java
Patch:
@@ -144,7 +144,7 @@ public static String[] getColumnNames(DataSource ds, String tableName) {
 					}
 				}
 			}
-			return columnNames.toArray(new String[columnNames.size()]);
+			return columnNames.toArray(new String[0]);
 		} catch (Exception e) {
 			throw new DbRuntimeException("Get columns error!", e);
 		} finally {
@@ -172,7 +172,6 @@ public static Entity createLimitedEntity(DataSource ds, String tableName) {
 	 * @param tableName 表名
 	 * @return Table对象
 	 */
-	@SuppressWarnings("resource")
 	public static Table getTableMeta(DataSource ds, String tableName) {
 		final Table table = Table.create(tableName);
 		Connection conn = null;

File: hutool-json/src/test/java/cn/hutool/json/CustomSerializeTest.java
Patch:
@@ -11,7 +11,7 @@ public class CustomSerializeTest {
 
 	@Test
 	public void serializeTest() {
-		JSONUtil.putSerializer(CustomBean.class, (JSONObjectSerializer<CustomBean>) (json, bean) -> json.put("customName", bean.name));
+		JSONUtil.putSerializer(CustomBean.class, (JSONObjectSerializer<CustomBean>) (json, bean) -> json.set("customName", bean.name));
 		
 		CustomBean customBean = new CustomBean();
 		customBean.name = "testName";

File: hutool-http/src/main/java/cn/hutool/http/server/action/Action.java
Patch:
@@ -3,6 +3,8 @@
 import cn.hutool.http.server.HttpServerRequest;
 import cn.hutool.http.server.HttpServerResponse;
 
+import java.io.IOException;
+
 /**
  * 请求处理接口<br>
  * 当用户请求某个Path，则调用相应Action的doAction方法
@@ -18,5 +20,5 @@ public interface Action {
 	 * @param request  请求对象
 	 * @param response 响应对象
 	 */
-	void doAction(HttpServerRequest request, HttpServerResponse response);
+	void doAction(HttpServerRequest request, HttpServerResponse response) throws IOException;
 }

File: hutool-http/src/main/java/cn/hutool/http/server/handler/ActionHandler.java
Patch:
@@ -6,6 +6,8 @@
 import com.sun.net.httpserver.HttpExchange;
 import com.sun.net.httpserver.HttpHandler;
 
+import java.io.IOException;
+
 /**
  * Action处理器，用于将HttpHandler转换为Action形式
  *
@@ -26,7 +28,7 @@ public ActionHandler(Action action) {
 	}
 
 	@Override
-	public void handle(HttpExchange httpExchange) {
+	public void handle(HttpExchange httpExchange) throws IOException {
 		action.doAction(
 				new HttpServerRequest(httpExchange),
 				new HttpServerResponse(httpExchange)

File: hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java
Patch:
@@ -513,7 +513,7 @@ public static Document createXml(String rootElementName) {
 	 */
 	public static Document createXml(String rootElementName, String namespace) {
 		final Document doc = createXml();
-		doc.appendChild(null == namespace ? doc.createElement(rootElementName) : doc.createElementNS(rootElementName, namespace));
+		doc.appendChild(null == namespace ? doc.createElement(rootElementName) : doc.createElementNS(namespace, rootElementName));
 		return doc;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -2390,7 +2390,7 @@ public static String utf8Str(Object obj) {
 	 * <pre>
 	 * 1、Byte数组和ByteBuffer会被转换为对应字符串的数组
 	 * 2、对象数组会调用Arrays.toString方法
-	 * <pre/>
+	 * </pre>
 	 *
 	 * @param obj         对象
 	 * @param charsetName 字符集
@@ -2405,7 +2405,7 @@ public static String str(Object obj, String charsetName) {
 	 * <pre>
 	 * 	 1、Byte数组和ByteBuffer会被转换为对应字符串的数组
 	 * 	 2、对象数组会调用Arrays.toString方法
-	 * <pre/>
+	 * </pre>
 	 *
 	 * @param obj     对象
 	 * @param charset 字符集

File: hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java
Patch:
@@ -196,7 +196,7 @@ protected static JSONObject propertyPut(JSONObject jsonObject, Object key, Objec
 			String segment = path[i];
 			JSONObject nextTarget = target.getJSONObject(segment);
 			if (nextTarget == null) {
-				nextTarget = new JSONObject();
+				nextTarget = new JSONObject(target.getConfig());
 				target.set(segment, nextTarget);
 			}
 			target = nextTarget;

File: hutool-json/src/main/java/cn/hutool/json/XML.java
Patch:
@@ -229,7 +229,7 @@ public static JSONObject toJSONObject(String string) throws JSONException {
 	 */
 	public static JSONObject toJSONObject(String string, boolean keepStrings) throws JSONException {
 		JSONObject jo = new JSONObject();
-		XMLTokener x = new XMLTokener(string);
+		XMLTokener x = new XMLTokener(string, jo.getConfig());
 		while (x.more() && x.skipPast("<")) {
 			parse(x, jo, null, keepStrings);
 		}

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -189,9 +189,8 @@ public void toBeanTest2() {
 	public void toBeanTest3() {
 		String jsonStr = "{'data':{'userName':'ak','password': null}}";
 		UserWithMap user = JSONUtil.toBean(JSONUtil.parseObj(jsonStr), UserWithMap.class);
-		String password = user.getData().get("password");
-		Assert.assertTrue(user.getData().containsKey("password"));
-		Assert.assertNull(password);
+		// Bean默认忽略null
+		Assert.assertFalse(user.getData().containsKey("password"));
 	}
 
 	@Test

File: hutool-cache/src/main/java/cn/hutool/cache/impl/AbstractCache.java
Patch:
@@ -184,7 +184,6 @@ public V get(K key, boolean isUpdateLastAccess) {
 
 	// ---------------------------------------------------------------- get end
 
-	@SuppressWarnings("NullableProblems")
 	@Override
 	public Iterator<V> iterator() {
 		CacheObjIterator<K, V> copiedIterator = (CacheObjIterator<K, V>) this.cacheObjIterator();

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/ValueProvider.java
Patch:
@@ -2,8 +2,6 @@
 
 import java.lang.reflect.Type;
 
-import cn.hutool.core.convert.Convert;
-
 /**
  * 值提供者，用于提供Bean注入时参数对应值得抽象接口<br>
  * 继承或匿名实例化此接口<br>
@@ -17,7 +15,7 @@ public interface ValueProvider<T>{
 	
 	/**
 	 * 获取值<br>
-	 * 返回值一般需要匹配被注入类型，如果不匹配会调用默认转换 {@link Convert#convert(Type, Object)}实现转换
+	 * 返回值一般需要匹配被注入类型，如果不匹配会调用默认转换 Convert#convert(Type, Object)实现转换
 	 * 
 	 * @param key Bean对象中参数名
 	 * @param valueType 被注入的值得类型

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/GenericEnumConverter.java
Patch:
@@ -25,9 +25,9 @@ public GenericEnumConverter(Class<E> enumClass) {
 		this.enumClass = enumClass;
 	}
 
+	@SuppressWarnings("unchecked")
 	@Override
 	protected E convertInternal(Object value) {
-		//noinspection unchecked
 		E enumValue = (E) EnumConverter.tryConvertEnum(value, this.enumClass);
 		if(null == enumValue && false == value instanceof String){
 			// 最后尝试valueOf转换

File: hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java
Patch:
@@ -148,7 +148,6 @@ public static Entity handleRow(int columnCount, ResultSetMetaData meta, ResultSe
 	 * @since 3.3.1
 	 */
 	public static <T extends Entity> T handleRow(T row, int columnCount, ResultSetMetaData meta, ResultSet rs, boolean withMetaInfo) throws SQLException {
-		String columnLabel;
 		int type;
 		for (int i = 1; i <= columnCount; i++) {
 			type = meta.getColumnType(i);

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java
Patch:
@@ -265,7 +265,7 @@ public static MultipartFormData getMultipart(ServletRequest request) throws IORu
 	public static MultipartFormData getMultipart(ServletRequest request, UploadSetting uploadSetting) throws IORuntimeException {
 		final MultipartFormData formData = new MultipartFormData(uploadSetting);
 		try {
-			formData.parseRequestStream(request.getInputStream(), request.getCharacterEncoding());
+			formData.parseRequestStream(request.getInputStream(), CharsetUtil.charset(request.getCharacterEncoding()));
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		}

File: hutool-extra/src/main/java/cn/hutool/extra/spring/SpringUtil.java
Patch:
@@ -19,7 +19,6 @@ public class SpringUtil implements ApplicationContextAware {
 
 	private static ApplicationContext applicationContext;
 
-	@SuppressWarnings("NullableProblems")
 	@Override
 	public void setApplicationContext(ApplicationContext applicationContext) {
 		SpringUtil.applicationContext = applicationContext;
@@ -43,8 +42,8 @@ public static ApplicationContext getApplicationContext() {
 	 * @param name Bean名称
 	 * @return Bean
 	 */
+	@SuppressWarnings("unchecked")
 	public static <T> T getBean(String name) {
-		//noinspection unchecked
 		return (T) applicationContext.getBean(name);
 	}
 

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/enjoy/EnjoyEngine.java
Patch:
@@ -8,7 +8,6 @@
 import cn.hutool.extra.template.TemplateConfig.ResourceMode;
 import cn.hutool.extra.template.TemplateEngine;
 import com.jfinal.template.source.FileSourceFactory;
-import org.beetl.core.GroupTemplate;
 
 /**
  * Enjoy库的引擎包装
@@ -80,7 +79,7 @@ public Template getTemplate(String resource) {
 	 * 创建引擎
 	 *
 	 * @param config 模板配置
-	 * @return {@link GroupTemplate}
+	 * @return {@link com.jfinal.template.Engine}
 	 */
 	private static com.jfinal.template.Engine createEngine(TemplateConfig config) {
 		final com.jfinal.template.Engine engine = com.jfinal.template.Engine.create("Hutool-Enjoy-Engine-" + IdUtil.fastSimpleUUID());

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/AbstractResult.java
Patch:
@@ -49,7 +49,6 @@ public void remove() {
 		throw new UnsupportedOperationException("Jcseg result not allow to remove !");
 	}
 
-	@SuppressWarnings("NullableProblems")
 	@Override
 	public Iterator<Word> iterator() {
 		return this;

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jcseg/JcsegResult.java
Patch:
@@ -63,7 +63,6 @@ public void remove() {
 		throw new UnsupportedOperationException("Jcseg result not allow to remove !");
 	}
 
-	@SuppressWarnings("NullableProblems")
 	@Override
 	public Iterator<Word> iterator() {
 		return this;

File: hutool-http/src/main/java/cn/hutool/http/ssl/DefaultTrustManager.java
Patch:
@@ -1,9 +1,7 @@
 package cn.hutool.http.ssl;
 
-import java.security.cert.CertificateException;
-import java.security.cert.X509Certificate;
-
 import javax.net.ssl.X509TrustManager;
+import java.security.cert.X509Certificate;
 
 /**
  * 证书管理

File: hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java
Patch:
@@ -56,7 +56,6 @@ public static Setting get(String name) {
 	 * @since 5.1.3
 	 */
 	public static Setting getFirstFound(String... names) {
-		Setting setting;
 		for (String name : names) {
 			try {
 				return get(name);

File: hutool-setting/src/main/java/cn/hutool/setting/dialect/PropsUtil.java
Patch:
@@ -57,7 +57,6 @@ public static Props get(String name) {
 	 * @return 当前环境下配置文件
 	 */
 	public static Props getFirstFound(String... names) {
-		Props props;
 		for (String name : names) {
 			try {
 				return get(name);

File: hutool-setting/src/test/java/cn/hutool/setting/test/PropsTest.java
Patch:
@@ -72,7 +72,6 @@ public void toBeanTest() {
 	@Test
 	public void toBeanWithNullPrefixTest(){
 		Props configProp = new Props();
-		Boolean isInit = configProp.getBool("isInit");
 
 		configProp.setProperty("createTime", Objects.requireNonNull(DateUtil.parse("2020-01-01")));
 		configProp.setProperty("isInit", true);

File: hutool-extra/src/main/java/cn/hutool/extra/spring/SpringUtil.java
Patch:
@@ -22,9 +22,7 @@ public class SpringUtil implements ApplicationContextAware {
 	@SuppressWarnings("NullableProblems")
 	@Override
 	public void setApplicationContext(ApplicationContext applicationContext) {
-		if (SpringUtil.applicationContext == null) {
-			SpringUtil.applicationContext = applicationContext;
-		}
+		SpringUtil.applicationContext = applicationContext;
 	}
 
 	/**

File: hutool-cache/src/test/java/cn/hutool/cache/test/CacheTest.java
Patch:
@@ -58,7 +58,7 @@ public void lruCacheTest(){
 		//使用时间推近
 		lruCache.get("key1");
 		lruCache.put("key4", "value4", DateUnit.SECOND.getMillis() * 3);
-		
+
 		String value1 = lruCache.get("key1");
 		Assert.assertNotNull(value1);
 		//由于缓存容量只有3，当加入第四个元素的时候，根据LRU规则，最少使用的将被移除（2被移除）

File: hutool-script/src/main/java/cn/hutool/script/ScriptRuntimeException.java
Patch:
@@ -1,10 +1,10 @@
 package cn.hutool.script;
 
-import javax.script.ScriptException;
-
 import cn.hutool.core.exceptions.ExceptionUtil;
 import cn.hutool.core.util.StrUtil;
 
+import javax.script.ScriptException;
+
 /**
  * 脚本运行时异常
  * 
@@ -50,7 +50,6 @@ public ScriptRuntimeException(String message, String fileName, int lineNumber) {
 		super(message);
 		this.fileName = fileName;
 		this.lineNumber = lineNumber;
-		this.columnNumber = -1;
 	}
 
 	/**

File: hutool-aop/src/main/java/cn/hutool/aop/interceptor/CglibInterceptor.java
Patch:
@@ -36,12 +36,13 @@ public Object getTarget() {
 
 	@Override
 	public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {
+		final Object target = this.target;
 		Object result = null;
-
 		// 开始前回调
 		if (aspect.before(target, method, args)) {
 			try {
-				result = proxy.invokeSuper(obj, args);
+//				result = proxy.invokeSuper(obj, args);
+				result = proxy.invoke(target, args);
 			} catch (InvocationTargetException e) {
 				// 异常回调（只捕获业务代码导致的异常，而非反射导致的异常）
 				if (aspect.afterException(target, method, args, e.getTargetException())) {

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelWriteTest.java
Patch:
@@ -419,9 +419,9 @@ public void addSelectTest() {
 	}
 
 	@Test
-	@Ignore
+//	@Ignore
 	public void addSelectTest2() {
-		ExcelWriter writer = ExcelUtil.getWriter(true);
+		ExcelWriter writer = ExcelUtil.getWriter("d:/test/select.xls");
 		writer.writeCellValue(0, 0, "请选择科目");
 		int firstRow = 0;
 		int lastRow = 0;
@@ -433,7 +433,6 @@ public void addSelectTest2() {
 		List<?> rows = new ArrayList<>();
 		writer.write(rows, true);
 
-		writer.flush(FileUtil.file("d:/test/select.xlsx"));
 		writer.close();
 	}
 

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -23,7 +23,7 @@ public class Browser extends UserAgentInfo {
 	 * 支持的浏览器类型
 	 */
 	public static final List<Browser> browers = CollUtil.newArrayList(//
-			new Browser("MSEdge", "Edge|Edg", "edge|Edg\\/([\\d\\w\\.\\-]+)"), //
+			new Browser("MSEdge", "Edge|Edg", "(?:edge|Edg)\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Chrome", "chrome", "chrome\\/([\\d\\w\\.\\-]+)"), //
 			new Browser("Firefox", "firefox", Other_Version), //
 			new Browser("IEMobile", "iemobile", Other_Version), //

File: hutool-cache/src/main/java/cn/hutool/cache/CacheUtil.java
Patch:
@@ -125,5 +125,4 @@ public static <K, V> WeakCache<K, V> newWeakCache(long timeout){
 	public static <K, V> NoCache<K, V> newNoCache(){
 		return new NoCache<>();
 	}
-	
 }

File: hutool-cache/src/main/java/cn/hutool/cache/impl/LFUCache.java
Patch:
@@ -40,7 +40,7 @@ public LFUCache(int capacity, long timeout) {
 		
 		this.capacity = capacity;
 		this.timeout = timeout;
-		cacheMap = new HashMap<K, CacheObj<K, V>>(capacity + 1, 1.0f);
+		cacheMap = new HashMap<>(capacity + 1, 1.0f);
 	}
 
 	// ---------------------------------------------------------------- prune

File: hutool-core/src/main/java/cn/hutool/core/convert/NumberWordFormatter.java
Patch:
@@ -13,7 +13,7 @@ public class NumberWordFormatter {
 
 	private static final String[] NUMBER = new String[]{"", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN",
 			"EIGHT", "NINE"};
-	private static final String[] NUMBER_TEEN = new String[]{"TEN", "ELEVEN", "TWELEVE", "THIRTEEN", "FOURTEEN",
+	private static final String[] NUMBER_TEEN = new String[]{"TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN",
 			"FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN"};
 	private static final String[] NUMBER_TEN = new String[]{"TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY",
 			"SEVENTY", "EIGHTY", "NINETY"};

File: hutool-core/src/main/java/cn/hutool/core/annotation/AnnotationUtil.java
Patch:
@@ -11,7 +11,6 @@
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
-import java.lang.reflect.AccessibleObject;
 import java.lang.reflect.AnnotatedElement;
 import java.lang.reflect.Method;
 import java.util.HashMap;
@@ -67,7 +66,7 @@ public static <A extends Annotation> A getAnnotation(AnnotatedElement annotation
 	 * 如果无指定的属性方法返回null
 	 *
 	 * @param <T>            注解值类型
-	 * @param annotationEle  {@link AccessibleObject}，可以是Class、Method、Field、Constructor、ReflectPermission
+	 * @param annotationEle  {@link AnnotatedElement}，可以是Class、Method、Field、Constructor、ReflectPermission
 	 * @param annotationType 注解类型
 	 * @return 注解对象
 	 * @throws UtilException 调用注解中的方法时执行异常
@@ -81,7 +80,7 @@ public static <T> T getAnnotationValue(AnnotatedElement annotationEle, Class<? e
 	 * 如果无指定的属性方法返回null
 	 *
 	 * @param <T>            注解值类型
-	 * @param annotationEle  {@link AccessibleObject}，可以是Class、Method、Field、Constructor、ReflectPermission
+	 * @param annotationEle  {@link AnnotatedElement}，可以是Class、Method、Field、Constructor、ReflectPermission
 	 * @param annotationType 注解类型
 	 * @param propertyName   属性名，例如注解中定义了name()方法，则 此处传入name
 	 * @return 注解对象

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/BeanCopier.java
Patch:
@@ -283,7 +283,7 @@ private void valueProviderToBean(ValueProvider<String> valueProvider, Object bea
 					ReflectUtil.setFieldValue(bean, field, value);
 				} else{
 					// 执行set方法注入值
-					setterMethod.invoke(bean, value);
+					ReflectUtil.invoke(bean, setterMethod, value);
 				}
 			} catch (Exception e) {
 				if (false ==copyOptions.ignoreError) {

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java
Patch:
@@ -321,9 +321,9 @@ public static class Person2 {
 
 	@Test
 	public void beanToBeanTest(){
-		// 复现对象无getter方法导致报错的问题
+		// 修复对象无getter方法导致报错的问题
 		Page page1=new Page();
-		BeanUtil.toBean(page1, Page.class, CopyOptions.create().setIgnoreNullValue(true));
+		BeanUtil.toBean(page1, Page.class);
 	}
 
 	public static class Page {

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -576,8 +576,10 @@ public static Map<String, Object> beanToMap(Object bean, Map<String, Object> tar
 	/**
 	 * 创建对应的Class对象并复制Bean对象属性
 	 *
+	 * @param <T>    对象类型
 	 * @param source 源Bean对象
 	 * @param tClass 目标Class
+	 * @return 目标对象
 	 */
 	public static <T> T copyProperties(Object source, Class<T> tClass) {
 		T target = ReflectUtil.newInstance(tClass);

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/Tree.java
Patch:
@@ -63,7 +63,7 @@ public Tree<T> getNode(T id) {
 	 * 比如有个人在研发1部，他上面有研发部，接着上面有技术中心<br>
 	 * 返回结果就是：[研发一部, 研发中心, 技术中心]
 	 *
-	 * @param id 节点ID
+	 * @param id                 节点ID
 	 * @param includeCurrentNode 是否包含当前节点的名称
 	 * @return 所有父节点名称列表
 	 * @since 5.2.4
@@ -91,6 +91,7 @@ public List<CharSequence> getParentsName(boolean includeCurrentNode) {
 	 * 设置父节点
 	 *
 	 * @param parent 父节点
+	 * @return this
 	 * @since 5.2.4
 	 */
 	public Tree<T> setParent(Tree<T> parent) {

File: hutool-core/src/main/java/cn/hutool/core/lang/tree/TreeUtil.java
Patch:
@@ -123,6 +123,8 @@ private static <T> void innerBuild(List<Tree<T>> treeNodes, Tree<T> parentNode,
 	 * 获取ID对应的节点，如果有多个ID相同的节点，只返回第一个。<br>
 	 * 此方法只查找此节点及子节点，采用广度优先遍历。
 	 *
+	 * @param <T> ID类型
+	 * @param node 节点
 	 * @param id ID
 	 * @return 节点
 	 * @since 5.2.4

File: hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java
Patch:
@@ -1060,6 +1060,7 @@ public static boolean isJdkClass(Class<?> clazz) {
 	 * class在jar包中返回jar所在文件夹,class不在jar中返回文件夹目录<br>
 	 * jdk中的类不能使用此方法
 	 *
+	 * @param clazz 类
 	 * @return URL
 	 * @since 5.2.4
 	 */
@@ -1075,6 +1076,7 @@ public static URL getLocation(Class<?> clazz) {
 	 * class在jar包中返回jar所在文件夹,class不在jar中返回文件夹目录<br>
 	 * jdk中的类不能使用此方法
 	 *
+	 * @param clazz 类
 	 * @return class路径
 	 * @since 5.2.4
 	 */

File: hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java
Patch:
@@ -46,7 +46,7 @@ public String getStr(String key, String defaultValue) {
 	 */
 	public String getStr(String key, String group, String defaultValue) {
 		final String value = getByGroup(key, group);
-		if (StrUtil.isBlank(value)) {
+		if (value == null) {
 			return defaultValue;
 		}
 		return value;

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanPath.java
Patch:
@@ -199,10 +199,10 @@ private static Object getFieldValue(Object bean, String expression) {
 				}
 				if (bean instanceof Map) {
 					// 只支持String为key的Map
-					MapUtil.getAny((Map<String, ?>) bean, unwrapedKeys);
+					return MapUtil.getAny((Map<String, ?>) bean, unwrapedKeys);
 				} else {
 					final Map<String, Object> map = BeanUtil.beanToMap(bean);
-					MapUtil.getAny(map, unwrapedKeys);
+					return MapUtil.getAny(map, unwrapedKeys);
 				}
 			}
 		} else {

File: hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java
Patch:
@@ -46,7 +46,7 @@ public String getStr(String key, String defaultValue) {
 	 */
 	public String getStr(String key, String group, String defaultValue) {
 		final String value = getByGroup(key, group);
-		if (StrUtil.isBlank(value)) {
+		if (value == null) {
 			return defaultValue;
 		}
 		return value;

File: hutool-db/src/main/java/cn/hutool/db/handler/HandleHelper.java
Patch:
@@ -265,15 +265,14 @@ public static <E, T extends Collection<E>> T handleRsToBeanList(ResultSet rs, T
 	 * @throws SQLException SQL异常
 	 */
 	private static <T> Object getColumnValue(ResultSet rs, int columnIndex, int type, Type targetColumnType) throws SQLException {
-		Object rawValue;
+		Object rawValue = null;
 		switch (type) {
 		case Types.TIMESTAMP:
 			try{
 				rawValue = rs.getTimestamp(columnIndex);
 			} catch (SQLException ignore){
 				// issue#776@Github
-				// 当数据库中日期为0000-00-00 00:00:00报错，按照普通日期获取
-				rawValue = rs.getDate(columnIndex);
+				// 当数据库中日期为0000-00-00 00:00:00报错，转为null
 			}
 			break;
 		case Types.TIME:

File: hutool-core/src/main/java/cn/hutool/core/util/ServiceLoaderUtil.java
Patch:
@@ -28,7 +28,8 @@ public class ServiceLoaderUtil {
 	 */
 	public static <T> T loadFirstAvailable(Class<T> clazz) {
 		final Iterator<T> iterator = load(clazz).iterator();
-		if(iterator.hasNext()){
+		//noinspection WhileLoopReplaceableByForEach
+		while(iterator.hasNext()){
 			try {
 				return iterator.next();
 			} catch (ServiceConfigurationError e) {

File: hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java
Patch:
@@ -61,6 +61,8 @@ public class PatternPool {
 	public final static Pattern PLATE_NUMBER = Pattern.compile(
 			//https://gitee.com/loolly/hutool/issues/I1B77H?from=project-issue
 			"^(([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z](([0-9]{5}[ABCDEFGHJK])|([ABCDEFGHJK]([A-HJ-NP-Z0-9])[0-9]{4})))|" +
+			//https://gitee.com/loolly/hutool/issues/I1BJHE?from=project-issue
+			"([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]\\d{3}\\d{1,3}[领])|" +
 			"([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]))$");
 
 	// -------------------------------------------------------------------------------------------------------------------------------------------------------------------

File: hutool-core/src/test/java/cn/hutool/core/lang/ValidatorTest.java
Patch:
@@ -134,5 +134,6 @@ public void isGeneralTest() {
 	@Test
 	public void isPlateNumberTest(){
 		Assert.assertTrue(Validator.isPlateNumber("粤BA03205"));
+		Assert.assertTrue(Validator.isPlateNumber("闽20401领"));
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/util/PageUtilTest.java
Patch:
@@ -12,11 +12,11 @@ public class PageUtilTest {
 	
 	@Test
 	public void transToStartEndTest(){
-		int[] startEnd1 = PageUtil.transToStartEnd(1, 10);
+		int[] startEnd1 = PageUtil.transToStartEnd(0, 10);
 		Assert.assertEquals(0, startEnd1[0]);
 		Assert.assertEquals(10, startEnd1[1]);
 		
-		int[] startEnd2 = PageUtil.transToStartEnd(2, 10);
+		int[] startEnd2 = PageUtil.transToStartEnd(1, 10);
 		Assert.assertEquals(10, startEnd2[0]);
 		Assert.assertEquals(20, startEnd2[1]);
 	}

File: hutool-http/src/main/java/cn/hutool/http/useragent/Platform.java
Patch:
@@ -49,11 +49,11 @@ public class Platform extends UserAgentInfo {
 	 * 支持的移动平台类型
 	 */
 	public static final List<Platform> mobilePlatforms = CollUtil.newArrayList(//
+			WINDOWS_PHONE, //
 			IPAD, //
 			IPOD, //
 			IPHONE, //
 			ANDROID, //
-			WINDOWS_PHONE, //
 			GOOGLE_TV, //
 			new Platform("htcFlyer", "htc_flyer"), //
 			new Platform("Symbian", "symbian(os)?"), //

File: hutool-core/src/test/java/cn/hutool/core/util/CharUtilTest.java
Patch:
@@ -23,7 +23,7 @@ public void isEmojiTest() {
 
 	@Test
 	public void isCharTest(){
-		char[] a = new char[]{'a'};
+		char a = 'a';
 		Assert.assertTrue(CharUtil.isChar(a));
 	}
 }

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/TemplateFactory.java
Patch:
@@ -7,7 +7,6 @@
 import cn.hutool.extra.template.TemplateEngine;
 import cn.hutool.extra.template.TemplateException;
 import cn.hutool.log.StaticLog;
-import com.jfinal.template.Engine;
 
 /**
  * 简单模板工厂，用于根据用户引入的模板引擎jar，自动创建对应的模板引擎对象
@@ -20,7 +19,7 @@ public class TemplateFactory {
 	 * 推荐创建的引擎单例使用，此方法每次调用会返回新的引擎
 	 *
 	 * @param config 模板配置，包括编码、模板文件path等信息
-	 * @return {@link Engine}
+	 * @return {@link TemplateEngine}
 	 */
 	public static TemplateEngine create(TemplateConfig config) {
 		final TemplateEngine engine = doCreate(config);
@@ -33,7 +32,7 @@ public static TemplateEngine create(TemplateConfig config) {
 	 * 推荐创建的引擎单例使用，此方法每次调用会返回新的引擎
 	 *
 	 * @param config 模板配置，包括编码、模板文件path等信息
-	 * @return {@link Engine}
+	 * @return {@link TemplateEngine}
 	 */
 	private static TemplateEngine doCreate(TemplateConfig config) {
 		final Class<? extends TemplateEngine> customEngineClass = config.getCustomEngine();

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2091,7 +2091,7 @@ public static <K, V> ArrayList<V> valuesOfKeys(Map<K, V> map, Iterator<K> keys)
 	 * 采用{@link BoundedPriorityQueue}实现分页取局部
 	 *
 	 * @param <T>        集合元素类型
-	 * @param pageNo     页码，从1开始计数，0和1效果相同
+	 * @param pageNo     页码，从0开始计数，0表示第一页
 	 * @param pageSize   每页的条目数
 	 * @param comparator 比较器
 	 * @param colls      集合数组
@@ -2114,7 +2114,7 @@ public static <T> List<T> sortPageAll(int pageNo, int pageSize, Comparator<T> co
 	 * 对指定List分页取值
 	 *
 	 * @param <T>      集合元素类型
-	 * @param pageNo   页码，从1开始计数，0和1效果相同
+	 * @param pageNo   页码，从0开始计数，0表示第一页
 	 * @param pageSize 每页的条目数
 	 * @param list     列表
 	 * @return 分页后的段落内容

File: hutool-db/src/main/java/cn/hutool/db/sql/NamedSql.java
Patch:
@@ -50,7 +50,7 @@ public String getSql() {
 	 * @return 参数数组
 	 */
 	public Object[] getParams() {
-		return this.params.toArray(new Object[this.params.size()]);
+		return this.params.toArray(new Object[0]);
 	}
 
 	/**

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/LongMap.java
Patch:
@@ -33,7 +33,7 @@ public LongMap(int size) {
 	public void add(long i) {
 		int r = (int) (i / BitMap.MACHINE64);
 		long c = i % BitMap.MACHINE64;
-		longs[r] = longs[r] | (1 << c);
+		longs[r] = longs[r] | (1L << c);
 	}
 
 	@Override
@@ -47,7 +47,7 @@ public boolean contains(long i) {
 	public void remove(long i) {
 		int r = (int) (i / BitMap.MACHINE64);
 		long c = i % BitMap.MACHINE64;
-		longs[r] &= ~(1 << c);
+		longs[r] &= ~(1L << c);
 	}
 
 }
\ No newline at end of file

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/LongMap.java
Patch:
@@ -33,7 +33,7 @@ public LongMap(int size) {
 	public void add(long i) {
 		int r = (int) (i / BitMap.MACHINE64);
 		long c = i % BitMap.MACHINE64;
-		longs[r] = longs[r] | (1 << c);
+		longs[r] = longs[r] | (1L << c);
 	}
 
 	@Override
@@ -47,7 +47,7 @@ public boolean contains(long i) {
 	public void remove(long i) {
 		int r = (int) (i / BitMap.MACHINE64);
 		long c = i % BitMap.MACHINE64;
-		longs[r] &= ~(1 << c);
+		longs[r] &= ~(1L << c);
 	}
 
 }
\ No newline at end of file

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.poi.excel.sax;
 
 import cn.hutool.core.io.IoUtil;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 import cn.hutool.poi.excel.sax.handler.RowHandler;

File: hutool-core/src/main/java/cn/hutool/core/lang/loader/AtomicLoader.java
Patch:
@@ -21,7 +21,7 @@ public abstract class AtomicLoader<T> implements Loader<T>, Serializable {
 	private static final long serialVersionUID = 1L;
 
 	/** 被加载对象的引用 */
-	private final AtomicReference<T> reference = new AtomicReference<T>();
+	private final AtomicReference<T> reference = new AtomicReference<>();
 
 	/**
 	 * 获取一个对象，第一次调用此方法时初始化对象然后返回，之后调用此方法直接返回原对象

File: hutool-core/src/test/java/cn/hutool/core/lang/TreeTest.java
Patch:
@@ -43,8 +43,8 @@ public void tree() {
 		TreeNodeConfig treeNodeConfig = new TreeNodeConfig();
 		// 自定义属性名 都要默认值的
 		treeNodeConfig.setWeightKey("order");
-		treeNodeConfig.setDeep(3);
 		treeNodeConfig.setIdKey("rid");
+		treeNodeConfig.setDeep(3);
 
 		//转换器
 		List<Tree<String>> treeNodes = TreeUtil.build(nodeList, "0", treeNodeConfig,

File: hutool-core/src/main/java/cn/hutool/core/date/format/DateBasic.java
Patch:
@@ -10,6 +10,7 @@
  * @since 2.16.2
  */
 public interface DateBasic {
+
 	/**
 	 * 获得日期格式化或者转换的格式
 	 * 

File: hutool-core/src/main/java/cn/hutool/core/date/format/FastDateParser.java
Patch:
@@ -740,7 +740,9 @@ void setCalendar(final FastDateParser parser, final Calendar cal, final String v
 			} else {
 				final TzInfo tzInfo = tzNames.get(value.toLowerCase(locale));
 				cal.set(Calendar.DST_OFFSET, tzInfo.dstOffset);
-				cal.set(Calendar.ZONE_OFFSET, tzInfo.zone.getRawOffset());
+				//issue#I1AXIN@Gitee
+//				cal.set(Calendar.ZONE_OFFSET, tzInfo.zone.getRawOffset());
+				cal.set(Calendar.ZONE_OFFSET, parser.getTimeZone().getRawOffset());
 			}
 		}
 	}

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/TemporalAccessorConverter.java
Patch:
@@ -17,6 +17,7 @@
 import java.time.temporal.TemporalAccessor;
 import java.util.Calendar;
 import java.util.Date;
+import java.util.Objects;
 
 /**
  * JDK8中新加入的java.time包对象解析转换器<br>
@@ -114,7 +115,7 @@ private TemporalAccessor parseFromCharSequence(CharSequence value) {
 			zoneId = formatter.getZone();
 		} else {
 			final DateTime dateTime = DateUtil.parse(value);
-			instant = dateTime.toInstant();
+			instant = Objects.requireNonNull(dateTime).toInstant();
 			zoneId = dateTime.getZoneId();
 		}
 		return parseFromInstant(instant, zoneId);

File: hutool-poi/src/main/java/cn/hutool/poi/PoiChecker.java
Patch:
@@ -12,7 +12,7 @@
 public class PoiChecker {
 
 	/** 没有引入POI的错误消息 */
-	public static final String NO_POI_ERROR_MSG = "You need to add dependency of 'poi-ooxml' to your project, and version >= 3.17";
+	public static final String NO_POI_ERROR_MSG = "You need to add dependency of 'poi-ooxml' to your project, and version >= 4.1.2";
 
 	/**
 	 * 检查POI包的引入情况

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellUtil.java
Patch:
@@ -106,7 +106,7 @@ public static Object getCellValue(Cell cell, CellType cellType, CellEditor cellE
 		if(CellType.BLANK == cellType){
 			// 空白单元格可能为合并单元格
 			cell = getMergedRegionCell(cell);
-			cellType = cell.getCellType();
+			cellType = cell.getCellTypeEnum();
 		}
 
 		Object value;

File: hutool-crypto/src/main/java/cn/hutool/crypto/PemUtil.java
Patch:
@@ -17,7 +17,7 @@
 import java.security.PublicKey;
 
 /**
- * PEM(Privacy Enhanced Mail)格式相关工具类。
+ * PEM(Privacy Enhanced Mail)格式相关工具类。（基于Bouncy Castle）
  *
  * <p>
  * PEM一般为文本格式，以 -----BEGIN... 开头，以 -----END... 结尾，中间的内容是 BASE64 编码。

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SM2.java
Patch:
@@ -35,8 +35,8 @@ public class SM2 extends AbstractAsymmetricCrypto<SM2> {
 	protected SM2Signer signer;
 
 	private SM2Engine.Mode mode = SM2Engine.Mode.C1C3C2;
-	private ECPublicKeyParameters publicKeyParams;
 	private ECPrivateKeyParameters privateKeyParams;
+	private ECPublicKeyParameters publicKeyParams;
 
 	// ------------------------------------------------------------------ Constructor start
 
@@ -85,6 +85,7 @@ public SM2(byte[] privateKey, byte[] publicKey) {
 	public SM2(PrivateKey privateKey, PublicKey publicKey) {
 		super(ALGORITHM_SM2, privateKey, publicKey);
 	}
+
 	// ------------------------------------------------------------------ Constructor end
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -120,6 +120,7 @@ public static boolean hasField(Class<?> beanClass, String name) throws SecurityE
 	/**
 	 * 获取字段名，如果存在{@link Alias}注解，读取注解的值作为名称
 	 *
+	 * @param field 字段
 	 * @return 字段名
 	 * @since 5.1.6
 	 */

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/SM2Test.java
Patch:
@@ -4,6 +4,7 @@
 import java.security.PrivateKey;
 import java.security.PublicKey;
 
+import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -47,6 +48,7 @@ public void sm2CustomKeyTest() {
 		KeyPair pair = SecureUtil.generateKeyPair("SM2");
 		byte[] privateKey = pair.getPrivate().getEncoded();
 		byte[] publicKey = pair.getPublic().getEncoded();
+		Console.log(HexUtil.encodeHexStr(publicKey));
 
 		SM2 sm2 = SmUtil.sm2(privateKey, publicKey);
 		sm2.setMode(SM2Mode.C1C3C2);

File: hutool-core/src/main/java/cn/hutool/core/text/replacer/ReplacerChain.java
Patch:
@@ -29,6 +29,7 @@ public ReplacerChain(StrReplacer... strReplacers) {
 		}
 	}
 
+	@SuppressWarnings("NullableProblems")
 	@Override
 	public Iterator<StrReplacer> iterator() {
 		return replacers.iterator();

File: hutool-core/src/main/java/cn/hutool/core/io/FileTypeUtil.java
Patch:
@@ -42,7 +42,8 @@ public class FileTypeUtil {
 		fileTypeMap.put("255044462d312e", "pdf"); // Adobe Acrobat (pdf)
 		fileTypeMap.put("2e524d46000000120001", "rmvb"); // rmvb/rm相同
 		fileTypeMap.put("464c5601050000000900", "flv"); // flv与f4v相同
-		fileTypeMap.put("00000020667479706d70", "mp4");
+		fileTypeMap.put("00000020667479706", "mp4");
+		fileTypeMap.put("00000018667479706D70", "mp4");
 		fileTypeMap.put("49443303000000002176", "mp3");
 		fileTypeMap.put("000001ba210001000180", "mpg"); //
 		fileTypeMap.put("3026b2758e66cf11a6d9", "wmv"); // wmv与asf相同

File: hutool-extra/src/test/java/cn/hutool/extra/ftp/FtpTest.java
Patch:
@@ -10,7 +10,7 @@
 import cn.hutool.core.lang.Console;
 
 public class FtpTest {
-	
+
 	@Test
 	@Ignore
 	public void cdTest() {

File: hutool-log/src/test/java/cn/hutool/log/test/CustomLogTest.java
Patch:
@@ -57,7 +57,9 @@ public void log4j2LogTest(){
 		LogFactory factory = new Log4j2LogFactory();
 		LogFactory.setCurrentLogFactory(factory);
 		Log log = LogFactory.get();
-		
+
+		log.debug(null);
+		log.debug("This is custom '{}' log\n{}", factory.getName(), LINE);
 		log.info(null);
 		log.info("This is custom '{}' log\n{}", factory.getName(), LINE);
 	}

File: hutool-core/src/main/java/cn/hutool/core/thread/ExecutorBuilder.java
Patch:
@@ -118,7 +118,7 @@ public ExecutorBuilder useSynchronousQueue() {
 	 * @since 4.5.0
 	 */
 	public ExecutorBuilder useSynchronousQueue(boolean fair) {
-		return setWorkQueue(new SynchronousQueue<Runnable>(fair));
+		return setWorkQueue(new SynchronousQueue<>(fair));
 	}
 
 	/**
@@ -190,7 +190,7 @@ private static ThreadPoolExecutor build(ExecutorBuilder builder) {
 			workQueue = builder.workQueue;
 		} else {
 			// corePoolSize为0则要使用SynchronousQueue避免无限阻塞
-			workQueue = (corePoolSize <= 0) ? new SynchronousQueue<Runnable>() : new LinkedBlockingQueue<Runnable>();
+			workQueue = (corePoolSize <= 0) ? new SynchronousQueue<>() : new LinkedBlockingQueue<>();
 		}
 		final ThreadFactory threadFactory = (null != builder.threadFactory) ? builder.threadFactory : Executors.defaultThreadFactory();
 		RejectedExecutionHandler handler = ObjectUtil.defaultIfNull(builder.handler, new ThreadPoolExecutor.AbortPolicy());

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -2700,8 +2700,7 @@ public static <T> T[] toArray(Iterable<T> iterable, Class<T> componentType) {
 	 * @since 3.0.9
 	 */
 	public static <T> T[] toArray(Collection<T> collection, Class<T> componentType) {
-		final T[] array = newArray(componentType, collection.size());
-		return collection.toArray(array);
+		return collection.toArray(newArray(componentType, 0));
 	}
 
 	// ---------------------------------------------------------------------- remove

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -1474,7 +1474,7 @@ public static boolean isNotEmpty(Enumeration<?> enumeration) {
 	/**
 	 * 是否包含{@code null}元素
 	 *
-	 * @param iterable 被检查的Iterable对象，如果为{@code null} 返回false
+	 * @param iterable 被检查的Iterable对象，如果为{@code null} 返回true
 	 * @return 是否包含{@code null}元素
 	 * @see IterUtil#hasNull(Iterable)
 	 * @since 3.0.7

File: hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
Patch:
@@ -60,7 +60,7 @@ public static boolean isNotEmpty(Iterator<?> Iterator) {
 	/**
 	 * 是否包含{@code null}元素
 	 * 
-	 * @param iter 被检查的{@link Iterable}对象，如果为{@code null} 返回false
+	 * @param iter 被检查的{@link Iterable}对象，如果为{@code null} 返回true
 	 * @return 是否包含{@code null}元素
 	 */
 	public static boolean hasNull(Iterable<?> iter) {
@@ -70,7 +70,7 @@ public static boolean hasNull(Iterable<?> iter) {
 	/**
 	 * 是否包含{@code null}元素
 	 * 
-	 * @param iter 被检查的{@link Iterator}对象，如果为{@code null} 返回false
+	 * @param iter 被检查的{@link Iterator}对象，如果为{@code null} 返回true
 	 * @return 是否包含{@code null}元素
 	 */
 	public static boolean hasNull(Iterator<?> iter) {

File: hutool-core/src/main/java/cn/hutool/core/text/TextSimilarity.java
Patch:
@@ -75,7 +75,7 @@ private static String removeSign(String str) {
 	}
 
 	/**
-	 * 判断字符是否为非汉字，数字和字母， 因为对符号进行相似度比较没有实际意义，故符号不加入考虑范围。
+	 * 判断字符是否为汉字，数字和字母， 因为对符号进行相似度比较没有实际意义，故符号不加入考虑范围。
 	 * 
 	 * @param charValue 字符
 	 * @return true表示为非汉字，数字和字母，false反之

File: hutool-core/src/test/java/cn/hutool/core/img/ImgUtilTest.java
Patch:
@@ -9,6 +9,7 @@
 
 import javax.imageio.ImageIO;
 
+import cn.hutool.core.lang.Console;
 import org.junit.Ignore;
 import org.junit.Test;
 
@@ -27,7 +28,7 @@ public void scaleTest() {
 	public void scaleTest2() {
 		ImgUtil.scale(FileUtil.file("e:/pic/test.jpg"), FileUtil.file("e:/pic/test_result.jpg"), 0.8f);
 	}
-	
+
 	@Test
 	@Ignore
 	public void scalePngTest() {

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -645,6 +645,7 @@ public void isExpiredTest(){
 		DateTime startDate = DateUtil.parse("2019-12-01 17:02:30");
 		DateTime endDate = DateUtil.parse("2019-12-02 17:02:30");
 		int length = 3;
+		//noinspection deprecation
 		boolean expired = DateUtil.isExpired(startDate, DateField.DAY_OF_YEAR, length, endDate);
 		Assert.assertTrue(expired);
 	}

File: hutool-http/src/main/java/cn/hutool/http/ssl/DefaultTrustManager.java
Patch:
@@ -7,8 +7,8 @@
 
 /**
  * 证书管理
- * @author Looly
  *
+ * @author Looly
  */
 public class DefaultTrustManager implements X509TrustManager {
 
@@ -18,10 +18,10 @@ public X509Certificate[] getAcceptedIssuers() {
 	}
 
 	@Override
-	public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+	public void checkClientTrusted(X509Certificate[] chain, String authType) {
 	}
 
 	@Override
-	public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+	public void checkServerTrusted(X509Certificate[] chain, String authType) {
 	}
 }

File: hutool-extra/src/test/java/cn/hutool/extra/spring/SpringUtilTest.java
Patch:
@@ -10,6 +10,7 @@
 
 @RunWith(SpringJUnit4ClassRunner.class)
 @SpringBootTest(classes = {SpringUtil.class, SpringUtilTest.Demo2.class})
+//@Import(cn.hutool.extra.spring.SpringUtil.class)
 public class SpringUtilTest {
 
 	@Test

File: hutool-extra/src/main/java/cn/hutool/extra/spring/SpringUtil.java
Patch:
@@ -40,6 +40,8 @@ public static ApplicationContext getApplicationContext() {
 
 	/**
 	 * 通过name获取 Bean
+	 *
+	 * @param <T> Bean类型
 	 * @param name Bean名称
 	 * @return Bean
 	 */

File: hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java
Patch:
@@ -31,7 +31,7 @@ public void unzipTest() {
 	}
 	
 	@Test
-//	@Ignore
+	@Ignore
 	public void unzipTest2() {
 		File unzip = ZipUtil.unzip("f:/test/各种资源.zip", "f:/test/各种资源", CharsetUtil.CHARSET_GBK);
 		Console.log(unzip);

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -342,7 +342,8 @@ public static List<String> listFileNames(String path) throws IORuntimeException
 		JarFile jarFile = null;
 		try {
 			jarFile = new JarFile(path.substring(0, index));
-			return ZipUtil.listFileNames(jarFile, path.substring(index + 1));
+			// 防止出现jar!/cn/hutool/这类路径导致文件找不到
+			return ZipUtil.listFileNames(jarFile, StrUtil.removePrefix(path.substring(index + 1), "/"));
 		} catch (IOException e) {
 			throw new IORuntimeException(StrUtil.format("Can not read file path of [{}]", path), e);
 		} finally {

File: hutool-core/src/test/java/cn/hutool/core/bean/BeanPathTest.java
Patch:
@@ -40,7 +40,7 @@ public void init() {
 		examInfoDict2.setExamType(1);
 		examInfoDict2.setAnswerIs(0);
 
-		List<ExamInfoDict> examInfoDicts = new ArrayList<ExamInfoDict>();
+		List<ExamInfoDict> examInfoDicts = new ArrayList<>();
 		examInfoDicts.add(examInfoDict);
 		examInfoDicts.add(examInfoDict1);
 		examInfoDicts.add(examInfoDict2);
@@ -52,7 +52,7 @@ public void init() {
 		userInfoDict.setRealName("张三");
 		userInfoDict.setExamInfoDict(examInfoDicts);
 
-		tempMap = new HashMap<String, Object>();
+		tempMap = new HashMap<>();
 		tempMap.put("userInfo", userInfoDict);
 		tempMap.put("flag", 1);
 	}
@@ -64,6 +64,7 @@ public void beanPathTest1() {
 		Assert.assertEquals("examInfoDict", pattern.patternParts.get(1));
 		Assert.assertEquals("0", pattern.patternParts.get(2));
 		Assert.assertEquals("id", pattern.patternParts.get(3));
+
 	}
 	
 	@Test

File: hutool-db/src/main/java/cn/hutool/db/handler/EntityListHandler.java
Patch:
@@ -44,6 +44,6 @@ public EntityListHandler(boolean caseInsensitive) {
 
 	@Override
 	public List<Entity> handle(ResultSet rs) throws SQLException {
-		return HandleHelper.handleRs(rs, new ArrayList<Entity>(), this.caseInsensitive);
+		return HandleHelper.handleRs(rs, new ArrayList<>(), this.caseInsensitive);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -410,9 +410,7 @@ public static BigDecimal mul(Number... values) {
 		BigDecimal result = new BigDecimal(null == value ? "0" : value.toString());
 		for (int i = 1; i < values.length; i++) {
 			value = values[i];
-			if (null != value) {
-				result = result.multiply(new BigDecimal(value.toString()));
-			}
+			result = result.multiply(new BigDecimal(null == value ? "0" : value.toString()));
 		}
 		return result;
 	}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java
Patch:
@@ -300,9 +300,6 @@ public List<Map<String, Object>> read(int headerRowIndex, int startRowIndex, int
 				// 跳过标题行
 				rowList = readRow(sheet.getRow(i));
 				if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {
-					if (null == rowList) {
-						rowList = new ArrayList<>(0);
-					}
 					result.add(IterUtil.toMap(aliasHeader(headerList), rowList, true));
 				}
 			}

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -922,7 +922,7 @@ public static Class<?> unWrap(Class<?> clazz) {
 	 * @since 3.0.9
 	 */
 	public static String numberToWord(Number number) {
-		return NumberWordFormater.format(number);
+		return NumberWordFormatter.format(number);
 	}
 	
 	/**
@@ -934,7 +934,7 @@ public static String numberToWord(Number number) {
 	 * @since 3.2.3
 	 */
 	public static String numberToChinese(double number, boolean isUseTraditonal) {
-		return NumberChineseFormater.format(number, isUseTraditonal);
+		return NumberChineseFormatter.format(number, isUseTraditonal);
 	}
 	
 	/**
@@ -948,7 +948,7 @@ public static String digitToChinese(Number n) {
 		if(null == n) {
 			return "零";
 		}
-		return NumberChineseFormater.format(n.doubleValue(), true, true);
+		return NumberChineseFormatter.format(n.doubleValue(), true, true);
 	}
 	
 	// -------------------------------------------------------------------------- 数字转换

File: hutool-core/src/main/java/cn/hutool/core/util/ReferenceUtil.java
Patch:
@@ -48,7 +48,7 @@ public static <T> Reference<T> create(ReferenceType type, T referent, ReferenceQ
 		case WEAK:
 			return new WeakReference<>(referent);
 		case PHANTOM:
-			return new PhantomReference<T>(referent, queue);
+			return new PhantomReference<>(referent, queue);
 		default:
 			return null;
 		}

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/DayOfMonthValueParser.java
Patch:
@@ -2,8 +2,6 @@
 
 import cn.hutool.cron.CronException;
 
-import java.util.Objects;
-
 /**
  * 每月的几号值处理<br>
  * 每月最多31天，32和“L”都表示最后一天
@@ -19,7 +17,7 @@ public DayOfMonthValueParser() {
 
 	@Override
 	public int parse(String value) throws CronException {
-		if ("L".equalsIgnoreCase(value) || Objects.equals("32",value)) {// 每月最后一天
+		if ("L".equalsIgnoreCase(value) || "32".equals(value)) {// 每月最后一天
 			return 32;
 		} else {
 			return super.parse(value);

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/DayOfWeekValueParser.java
Patch:
@@ -9,7 +9,7 @@
  * @author Looly
  *
  */
-public class DayOfWeekValueParser extends SimpleValueParser {
+public class    DayOfWeekValueParser extends SimpleValueParser {
 	
 	/** Weeks aliases. */
 	private static final String[] ALIASES = { "sun", "mon", "tue", "wed", "thu", "fri", "sat" };

File: hutool-db/src/main/java/cn/hutool/db/Db.java
Patch:
@@ -176,6 +176,7 @@ public Db tx(TransactionLevel transactionLevel, VoidFunc1<Db> func) throws SQLEx
 			final int level = transactionLevel.getLevel();
 			if (conn.getTransactionIsolation() < level) {
 				// 用户定义的事务级别如果比默认级别更严格，则按照严格的级别进行
+				//noinspection MagicConstant
 				conn.setTransactionIsolation(level);
 			}
 		}

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java
Patch:
@@ -15,7 +15,6 @@
 import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Objects;
 import java.util.Vector;
 
 /**
@@ -312,7 +311,7 @@ public boolean delDir(String dirPath) {
 		String fileName;
 		for (LsEntry entry : list) {
 			fileName = entry.getFilename();
-			if (false == Objects.equals(fileName,".") && false == Objects.equals(fileName,"..")) {
+			if (false == ".".equals(fileName) && false == "..".equals(fileName)) {
 				if (entry.getAttrs().isDir()) {
 					delDir(fileName);
 				} else {

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -381,7 +381,7 @@ public boolean isKeepAlive() {
 			return !httpVersion.equalsIgnoreCase(HTTP_1_0);
 		}
 
-		return !"close".equalsIgnoreCase(connection);
+		return false == "close".equalsIgnoreCase(connection);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -216,7 +216,7 @@ public <T> T convert(Type type, Object value, T defaultValue, boolean isCustomFi
 		if(type instanceof TypeReference) {
 			type = ((TypeReference<?>)type).getType();
 		}
-		
+
 		// 标准转换器
 		final Converter<T> converter = getConverter(type, isCustomFirst);
 		if (null != converter) {

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -269,6 +269,7 @@ public DateTime(CharSequence dateStr, DateParser dateParser) {
 	 */
 	public DateTime offset(DateField datePart, int offset) {
 		final Calendar cal = toCalendar();
+		//noinspection MagicConstant
 		cal.add(datePart.getValue(), offset);
 
 		DateTime dt = mutable ? this : ObjectUtil.clone(this);
@@ -286,6 +287,7 @@ public DateTime offset(DateField datePart, int offset) {
 	 */
 	public DateTime offsetNew(DateField datePart, int offset) {
 		final Calendar cal = toCalendar();
+		//noinspection MagicConstant
 		cal.add(datePart.getValue(), offset);
 
 		DateTime dt = ObjectUtil.clone(this);
@@ -594,6 +596,7 @@ public Calendar toCalendar(TimeZone zone, Locale locale) {
 			locale = Locale.getDefault(Locale.Category.FORMAT);
 		}
 		final Calendar cal = (null != zone) ? Calendar.getInstance(zone, locale) : Calendar.getInstance(locale);
+		//noinspection MagicConstant
 		cal.setFirstDayOfWeek(firstDayOfWeek.getValue());
 		cal.setTime(this);
 		return cal;

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertToSBCAndDBCTest.java
Patch:
@@ -3,8 +3,6 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-import cn.hutool.core.convert.Convert;
-
 /**
  * 类型转换工具单元测试
  * 全角半角转换

File: hutool-json/src/test/java/cn/hutool/json/Issue644Test.java
Patch:
@@ -9,7 +9,7 @@
 /**
  * 问题反馈对象中有JDK8日期对象时转换失败，5.0.7修复
  */
-public class Isse644Test {
+public class Issue644Test {
 
 	@Test
 	public void toBeanTest(){

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1762,7 +1762,7 @@ public static float min(float... numberArray) {
 	 *
 	 * @param numberArray 数字数组
 	 * @return 最小值
-	 * @see ArrayUtil#min(BigDecimal...)
+	 * @see ArrayUtil#min(Comparable[]) 
 	 * @since 5.0.8
 	 */
 	public static BigDecimal min(BigDecimal... numberArray) {
@@ -1847,7 +1847,7 @@ public static float max(float... numberArray) {
 	 *
 	 * @param numberArray 数字数组
 	 * @return 最大值
-	 * @see ArrayUtil#max(BigDecimal...)
+	 * @see ArrayUtil#max(Comparable[])
 	 * @since 5.0.8
 	 */
 	public static BigDecimal max(BigDecimal... numberArray) {

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jcseg/JcsegWord.java
Patch:
@@ -1,8 +1,7 @@
 package cn.hutool.extra.tokenizer.engine.jcseg;
 
-import org.lionsoul.jcseg.tokenizer.core.IWord;
-
 import cn.hutool.extra.tokenizer.Word;
+import org.lionsoul.jcseg.IWord;
 
 /**
  * Jcseg分词中的一个单词包装

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -1600,8 +1600,8 @@ public static String subByCodePoint(CharSequence str, int fromIndex, int toIndex
 			return EMPTY;
 		}
 
-		StringBuilder sb = new StringBuilder();
-		int subLen = toIndex - fromIndex;
+		final StringBuilder sb = new StringBuilder();
+		final int subLen = toIndex - fromIndex;
 		str.toString().codePoints().skip(fromIndex).limit(subLen).forEach(v -> sb.append(Character.toChars(v)));
 		return sb.toString();
 	}

File: hutool-core/src/main/java/cn/hutool/core/io/watch/WatchServer.java
Patch:
@@ -39,15 +39,15 @@ public class WatchServer extends Thread implements Closeable, Serializable {
 	/**
 	 * 监听事件列表
 	 */
-	private WatchEvent.Kind<?>[] events;
+	protected WatchEvent.Kind<?>[] events;
 	/**
 	 * 监听选项，例如监听频率等
 	 */
 	private WatchEvent.Modifier[] modifiers;
 	/**
 	 * 监听是否已经关闭
 	 */
-	private boolean isClosed;
+	protected boolean isClosed;
 	/**
 	 * WatchKey 和 Path的对应表
 	 */

File: hutool-core/src/test/java/cn/hutool/core/io/WatchMonitorTest.java
Patch:
@@ -44,7 +44,7 @@ public void onOverflow(WatchEvent<?> event, Path currentPath) {
 			}
 		};
 		
-		WatchMonitor monitor = WatchMonitor.createAll("d:/aaa/aaa.txt", new DelayWatcher(watcher, 500));
+		WatchMonitor monitor = WatchMonitor.createAll("d:/test/aaa.txt", new DelayWatcher(watcher, 500));
 		
 		monitor.setMaxDepth(0);
 		monitor.start();

File: hutool-core/src/test/java/cn/hutool/core/util/URLUtilTest.java
Patch:
@@ -55,7 +55,7 @@ public void normalizeTest3() {
 	@Test
 	public void normalizeIpv6Test() {
 		String url = "http://[fe80::8f8:2022:a603:d180]:9439";
-		String normalize = URLUtil.normalize("http://[fe80::8f8:2022:a603:d180]:9439", false);
+		String normalize = URLUtil.normalize("http://[fe80::8f8:2022:a603:d180]:9439", true);
 		Assert.assertEquals(url, normalize);
 	}
 	

File: hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java
Patch:
@@ -1214,6 +1214,7 @@ public static DateTime endOfQuarter(Date date) {
 	 * @since 4.1.0
 	 */
 	public static Calendar beginOfQuarter(Calendar calendar) {
+		//noinspection MagicConstant
 		calendar.set(Calendar.MONTH, calendar.get(DateField.MONTH.getValue()) / 3 * 3);
 		calendar.set(Calendar.DAY_OF_MONTH, 1);
 		return beginOfDay(calendar);
@@ -1227,6 +1228,7 @@ public static Calendar beginOfQuarter(Calendar calendar) {
 	 * @since 4.1.0
 	 */
 	public static Calendar endOfQuarter(Calendar calendar) {
+		//noinspection MagicConstant
 		calendar.set(Calendar.MONTH, calendar.get(DateField.MONTH.getValue()) / 3 * 3 + 2);
 		calendar.set(Calendar.DAY_OF_MONTH, calendar.getActualMaximum(Calendar.DAY_OF_MONTH));
 		return endOfDay(calendar);

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -71,7 +71,7 @@
  * <ul>
  * <li><strong>5 * * * *</strong>：每个点钟的5分执行，00:05,01:05……</li>
  * <li><strong>* * * * *</strong>：每分钟执行</li>
- * <li><strong>*&#47;2 * * * *</strong>：每两小时执行</li>
+ * <li><strong>*&#47;2 * * * *</strong>：每两分钟执行</li>
  * <li><strong>* 12 * * *</strong>：12点的每分钟执行</li>
  * <li><strong>59 11 * * 1,2</strong>：每周一和周二的11:59执行</li>
  * <li><strong>3-18&#47;5 * * * *</strong>：3~18分，每5分钟执行一次，即0:03, 0:08, 0:13, 0:18, 1:03, 1:08……</li>

File: hutool-core/src/main/java/cn/hutool/core/thread/ThreadUtil.java
Patch:
@@ -101,7 +101,7 @@ public static void execute(Runnable runnable) {
 	 * @param isDaemon 是否守护线程。守护线程会在主线程结束后自动结束
 	 * @return 执行的方法体
 	 */
-	public static Runnable excAsync(final Runnable runnable, boolean isDaemon) {
+	public static Runnable execAsync(final Runnable runnable, boolean isDaemon) {
 		Thread thread = new Thread(runnable);
 		thread.setDaemon(isDaemon);
 		thread.start();
@@ -432,6 +432,7 @@ public static ThreadFactory newNamedThreadFactory(String prefix, ThreadGroup thr
 	 * @param obj 对象所在线程
 	 * @since 4.5.6
 	 */
+	@SuppressWarnings("SynchronizationOnLocalVariableOrMethodParameter")
 	public static void sync(Object obj) {
 		synchronized (obj) {
 			try {

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java
Patch:
@@ -356,13 +356,13 @@ public static String exec(Session session, String cmd, Charset charset, OutputSt
 		if (null == charset) {
 			charset = CharsetUtil.CHARSET_UTF_8;
 		}
-		final ChannelExec channel = (ChannelExec) openChannel(session, ChannelType.EXEC);
+		final ChannelExec channel = (ChannelExec) createChannel(session, ChannelType.EXEC);
 		channel.setCommand(StrUtil.bytes(cmd, charset));
 		channel.setInputStream(null);
 		channel.setErrStream(errStream);
 		InputStream in = null;
 		try {
-			channel.start();
+			channel.connect();
 			in = channel.getInputStream();
 			return IoUtil.read(in, CharsetUtil.CHARSET_UTF_8);
 		} catch (IOException e) {

File: hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java
Patch:
@@ -268,6 +268,7 @@ public Double getDouble(String key, String group, Double defaultValue) {
 	 * 将setting中的键值关系映射到对象中，原理是调用对象对应的set方法<br>
 	 * 只支持基本类型的转换
 	 *
+	 * @param <T> Bean类型
 	 * @param group 分组
 	 * @param bean  Bean对象
 	 * @return Bean
@@ -291,6 +292,7 @@ public boolean containsKey(String key) {
 	 * 将setting中的键值关系映射到对象中，原理是调用对象对应的set方法<br>
 	 * 只支持基本类型的转换
 	 *
+	 * @param <T> Bean类型
 	 * @param group 分组
 	 * @param beanClass  Bean类型
 	 * @return Bean

File: hutool-core/src/main/java/cn/hutool/core/map/CamelCaseLinkedMap.java
Patch:
@@ -60,7 +60,7 @@ public CamelCaseLinkedMap(float loadFactor, Map<? extends K, ? extends V> m) {
 	 * @param loadFactor 加载因子
 	 */
 	public CamelCaseLinkedMap(int initialCapacity, float loadFactor) {
-		super(new HashMap<K, V>(initialCapacity, loadFactor));
+		super(new HashMap<>(initialCapacity, loadFactor));
 	}
 	// ------------------------------------------------------------------------- Constructor end
 }

File: hutool-core/src/main/java/cn/hutool/core/map/CamelCaseMap.java
Patch:
@@ -62,7 +62,7 @@ public CamelCaseMap(float loadFactor, Map<? extends K, ? extends V> m) {
 	 * @param loadFactor 加载因子
 	 */
 	public CamelCaseMap(int initialCapacity, float loadFactor) {
-		super(new HashMap<K, V>(initialCapacity, loadFactor));
+		super(new HashMap<>(initialCapacity, loadFactor));
 	}
 	// ------------------------------------------------------------------------- Constructor end
 
@@ -74,7 +74,7 @@ public CamelCaseMap(int initialCapacity, float loadFactor) {
 	 */
 	@Override
 	protected Object customKey(Object key) {
-		if (null != key && key instanceof CharSequence) {
+		if (key instanceof CharSequence) {
 			key = StrUtil.toCamelCase(key.toString());
 		}
 		return key;

File: hutool-core/src/main/java/cn/hutool/core/map/CaseInsensitiveLinkedMap.java
Patch:
@@ -61,7 +61,7 @@ public CaseInsensitiveLinkedMap(float loadFactor, Map<? extends K, ? extends V>
 	 * @param loadFactor 加载因子
 	 */
 	public CaseInsensitiveLinkedMap(int initialCapacity, float loadFactor) {
-		super(new LinkedHashMap<K, V>(initialCapacity, loadFactor));
+		super(new LinkedHashMap<>(initialCapacity, loadFactor));
 	}
 	// ------------------------------------------------------------------------- Constructor end
 }

File: hutool-setting/src/main/java/cn/hutool/setting/AbsSetting.java
Patch:
@@ -18,7 +18,7 @@
  *
  * @author Looly
  */
-public abstract class AbsSetting extends OptNullBasicTypeFromStringGetter<String> implements Serializable {
+public abstract class AbsSetting implements OptNullBasicTypeFromStringGetter<String>, Serializable {
 	private static final long serialVersionUID = 6200156302595905863L;
 	private final static Log log = LogFactory.get();
 

File: hutool-extra/src/test/java/cn/hutool/extra/mail/MailTest.java
Patch:
@@ -40,7 +40,7 @@ public void sendWithImageTest() {
 	}
 	
 	@Test
-	@Ignore
+//	@Ignore
 	public void sendHtmlTest() {
 		MailUtil.send("hutool@foxmail.com", "测试", "<h1>邮件来自Hutool测试</h1>", true);
 	}

File: hutool-captcha/src/test/java/cn/hutool/captcha/CaptchaTest.java
Patch:
@@ -93,7 +93,6 @@ public void ShearCaptchaTest() {
 	@Test
 	@Ignore
 	public void ShearCaptchaWithMathTest() {
-		
 		// 定义图形验证码的长和宽
 		ShearCaptcha captcha = CaptchaUtil.createShearCaptcha(200, 45, 4, 4);
 		captcha.setGenerator(new MathGenerator());

File: hutool-db/src/main/java/cn/hutool/db/sql/SqlUtil.java
Patch:
@@ -111,10 +111,10 @@ public static String buildLikeValue(String value, LikeType likeType, boolean wit
 		StringBuilder likeValue = StrUtil.builder(withLikeKeyword ? "LIKE " : "");
 		switch (likeType) {
 			case StartWith:
-				likeValue.append('%').append(value);
+				likeValue.append(value).append('%');
 				break;
 			case EndWith:
-				likeValue.append(value).append('%');
+				likeValue.append('%').append(value);
 				break;
 			case Contains:
 				likeValue.append('%').append(value).append('%');

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -184,6 +184,7 @@ public static boolean contains(Object obj, Object element) {
 	 * @return 是否为null
 	 */
 	public static boolean isNull(Object obj) {
+		//noinspection ConstantConditions
 		return null == obj || obj.equals(null);
 	}
 
@@ -194,6 +195,7 @@ public static boolean isNull(Object obj) {
 	 * @return 是否为null
 	 */
 	public static boolean isNotNull(Object obj) {
+		//noinspection ConstantConditions
 		return null != obj && false == obj.equals(null);
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/util/NumberUtilTest.java
Patch:
@@ -191,13 +191,13 @@ public void toBigDecimalTest() {
 
 	@Test
 	public void maxTest() {
-		int max = NumberUtil.max(new int[]{5,4,3,6,1});
+		int max = NumberUtil.max(5,4,3,6,1);
 		Assert.assertEquals(6, max);
 	}
 
 	@Test
 	public void minTest() {
-		int min = NumberUtil.min(new int[]{5,4,3,6,1});
+		int min = NumberUtil.min(5,4,3,6,1);
 		Assert.assertEquals(1, min);
 	}
 	

File: hutool-extra/src/main/java/cn/hutool/extra/ftp/Ftp.java
Patch:
@@ -364,14 +364,14 @@ public boolean delDir(String dirPath) {
 	 * 3. path为绝对路径则上传到此路径
 	 * </pre>
 	 * 
-	 * @param path 服务端路径，可以为{@code null} 或者相对路径或绝对路径
+	 * @param destPath 服务端路径，可以为{@code null} 或者相对路径或绝对路径
 	 * @param file 文件
 	 * @return 是否上传成功
 	 */
 	@Override
-	public boolean upload(String path, File file) {
+	public boolean upload(String destPath, File file) {
 		Assert.notNull(file, "file to upload is null !");
-		return upload(path, file.getName(), file);
+		return upload(destPath, file.getName(), file);
 	}
 
 	/**

File: hutool-system/src/main/java/cn/hutool/system/RuntimeInfo.java
Patch:
@@ -23,8 +23,8 @@ public final Runtime getRuntime(){
 	}
 	
 	/**
-	 * 获得JVM最大可用内存
-	 * @return 最大可用内存
+	 * 获得JVM最大内存
+	 * @return 最大内存
 	 */
 	public final long getMaxMemory(){
 		return currentRuntime.maxMemory();

File: hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java
Patch:
@@ -26,10 +26,8 @@ public void zipDirTest() {
 	@Test
 	@Ignore
 	public void unzipTest() {
-		File unzip = ZipUtil.unzip("E:\\aaa\\RongGenetor V1.0.0.zip", "e:\\aaa");
+		File unzip = ZipUtil.unzip("f:/test/apache-maven-3.6.2.zip", "f:\\test");
 		Console.log(unzip);
-		File unzip2 = ZipUtil.unzip("E:\\aaa\\RongGenetor V1.0.0.zip", "e:\\aaa");
-		Console.log(unzip2);
 	}
 	
 	@Test

File: hutool-core/src/main/java/cn/hutool/core/map/CaseInsensitiveMap.java
Patch:
@@ -61,7 +61,7 @@ public CaseInsensitiveMap(float loadFactor, Map<? extends K, ? extends V> m) {
 	 * @param loadFactor 加载因子
 	 */
 	public CaseInsensitiveMap(int initialCapacity, float loadFactor) {
-		super(new HashMap<K, V>(initialCapacity, loadFactor));
+		super(new HashMap<>(initialCapacity, loadFactor));
 	}
 	//------------------------------------------------------------------------- Constructor end
 
@@ -73,7 +73,7 @@ public CaseInsensitiveMap(int initialCapacity, float loadFactor) {
 	 */
 	@Override
 	protected Object customKey(Object key) {
-		if (null != key && key instanceof CharSequence) {
+		if (key instanceof CharSequence) {
 			key = key.toString().toLowerCase();
 		}
 		return key;

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java
Patch:
@@ -416,7 +416,7 @@ public static Map<String, Cookie> readCookieMap(HttpServletRequest httpServletRe
 			return null;
 		}
 		for (Cookie cookie : cookies) {
-			cookieMap.put(cookie.getName().toLowerCase(), cookie);
+			cookieMap.put(cookie.getName(), cookie);
 		}
 		return cookieMap;
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/ServletUtil.java
Patch:
@@ -416,7 +416,7 @@ public static Map<String, Cookie> readCookieMap(HttpServletRequest httpServletRe
 			return null;
 		}
 		for (Cookie cookie : cookies) {
-			cookieMap.put(cookie.getName().toLowerCase(), cookie);
+			cookieMap.put(cookie.getName(), cookie);
 		}
 		return cookieMap;
 	}

File: hutool-db/src/main/java/cn/hutool/db/sql/SqlExecutor.java
Patch:
@@ -162,7 +162,7 @@ public static Long executeForGeneratedKey(Connection conn, String sql, Object...
 	 * @throws SQLException SQL执行异常
 	 */
 	public static int[] executeBatch(Connection conn, String sql, Object[]... paramsBatch) throws SQLException {
-		return executeBatch(conn, sql, new ArrayIter<Object[]>(paramsBatch));
+		return executeBatch(conn, sql, new ArrayIter<>(paramsBatch));
 	}
 	
 	/**
@@ -198,7 +198,7 @@ public static int[] executeBatch(Connection conn, String sql, Iterable<Object[]>
 	 * @since 4.5.6
 	 */
 	public static int[] executeBatch(Connection conn, String... sqls) throws SQLException {
-		return executeBatch(conn, new ArrayIter<String>(sqls));
+		return executeBatch(conn, new ArrayIter<>(sqls));
 	}
 	
 	/**

File: hutool-cache/src/main/java/cn/hutool/cache/file/LFUFileCache.java
Patch:
@@ -46,7 +46,7 @@ public LFUFileCache(int capacity, int maxFileSize, long timeout) {
 	@Override
 	protected Cache<File, byte[]> initCache() {
 		return new LFUCache<File, byte[]>(LFUFileCache.this.capacity, LFUFileCache.this.timeout) {
-			private static final long serialVersionUID1 = 1L;
+			private static final long serialVersionUID = 1L;
 
 			@Override
 			public boolean isFull() {

File: hutool-cache/src/main/java/cn/hutool/cache/file/LRUFileCache.java
Patch:
@@ -46,7 +46,7 @@ public LRUFileCache(int capacity, int maxFileSize, long timeout) {
 	@Override
 	protected Cache<File, byte[]> initCache() {
 		return new LRUCache<File, byte[]>(LRUFileCache.this.capacity, super.timeout) {
-			private static final long serialVersionUID1 = 1L;
+			private static final long serialVersionUID = 1L;
 
 			@Override
 			public boolean isFull() {

File: hutool-core/src/main/java/cn/hutool/core/builder/HashCodeBuilder.java
Patch:
@@ -512,7 +512,7 @@ static void unregister(final Object value) {
     /**
      * Running total of the hashCode.
      */
-    private int iTotal = 0;
+    private int iTotal;
 
     /**
      * <p>

File: hutool-core/src/main/java/cn/hutool/core/comparator/VersionComparator.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.List;
 
 import cn.hutool.core.util.CharUtil;
+import cn.hutool.core.util.ObjectUtil;
 import cn.hutool.core.util.StrUtil;
 
 /**
@@ -49,7 +50,7 @@ public VersionComparator() {
 	 */
 	@Override
 	public int compare(String version1, String version2) {
-		if(version1 == version2) {
+		if(ObjectUtil.equal(version1, version2)) {
 			return 0;
 		}
 		if (version1 == null && version2 == null) {

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/ArrayConverter.java
Patch:
@@ -97,7 +97,7 @@ private Object convertObjectToArray(Object value) {
 		}
 
 		final ConverterRegistry converter = ConverterRegistry.getInstance();
-		Object result = null;
+		Object result;
 		if (value instanceof List) {
 			// List转数组
 			final List<?> list = (List<?>) value;

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/CollectionConverter.java
Patch:
@@ -61,7 +61,7 @@ public CollectionConverter(Type collectionType, Type elementType) {
 
 	@Override
 	public Collection<?> convert(Object value, Collection<?> defaultValue) throws IllegalArgumentException {
-		Collection<?> result = null;
+		Collection<?> result;
 		try {
 			result = convertInternal(value);
 		} catch (RuntimeException e) {

File: hutool-core/src/main/java/cn/hutool/core/date/format/FastDatePrinter.java
Patch:
@@ -104,7 +104,7 @@ protected List<Rule> parsePattern() {
 					if (tokenLen == 2) {
 						rule = TwoDigitYearField.INSTANCE;
 					} else {
-						rule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);
+						rule = selectNumberRule(Calendar.YEAR, Math.max(tokenLen, 4));
 					}
 					if (c == 'Y') {
 						rule = new WeekYear((NumberRule) rule);

File: hutool-core/src/main/java/cn/hutool/core/io/file/Tailer.java
Patch:
@@ -137,7 +137,7 @@ public void start(boolean async) {
 	/**
 	 * 预读取行
 	 * 
-	 * @throws IOException
+	 * @throws IOException IO异常
 	 */
 	private void readTail() throws IOException {
 		final long len = this.randomAccessFile.length();

File: hutool-core/src/main/java/cn/hutool/core/lang/PatternPool.java
Patch:
@@ -27,7 +27,7 @@ public class PatternPool {
 	/** IP v4 */
 	public final static Pattern IPV4 = Pattern.compile("\\b((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\b");
 	/** IP v6 */
-	public final static Pattern IPV6 = Pattern.compile("(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1?[0-9])?[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3}(25[0-5]|(2[0-4]|1?[0-9])?[0-9]))");
+	public final static Pattern IPV6 = Pattern.compile("(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+|::(ffff(:0{1,4})?:)?((25[0-5]|(2[0-4]|1?[0-9])?[0-9])\\.){3}(25[0-5]|(2[0-4]|1?[0-9])?[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1?[0-9])?[0-9])\\.){3}(25[0-5]|(2[0-4]|1?[0-9])?[0-9]))");
 	/** 货币 */
 	public final static Pattern MONEY = Pattern.compile("^(\\d+(?:\\.\\d+)?)$");
 	/** 邮件，符合RFC 5322规范，正则来自：http://emailregex.com/ */
@@ -52,7 +52,7 @@ public class PatternPool {
 	/** 不带横线的UUID */
 	public final static Pattern UUID_SIMPLE = Pattern.compile("^[0-9a-z]{32}$");
 	/** 中国车牌号码 */
-	public final static Pattern PLATE_NUMBER = Pattern.compile("^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$");
+	public final static Pattern PLATE_NUMBER = Pattern.compile("^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z][A-Z][A-Z0-9]{4}[A-Z0-9挂学警港澳]$");
 	/** MAC地址正则 */
 	public static final Pattern MAC_ADDRESS = Pattern.compile("((?:[A-F0-9]{1,2}[:-]){5}[A-F0-9]{1,2})|(?:0x)(\\d{12})(?:.+ETHER)", Pattern.CASE_INSENSITIVE);
 	/** 16进制字符串 */

File: hutool-core/src/main/java/cn/hutool/core/lang/Range.java
Patch:
@@ -39,9 +39,9 @@ public class Range<T> implements Iterable<T>, Iterator<T>, Serializable {
 	/** 索引 */
 	private int index = 0;
 	/** 是否包含第一个元素 */
-	private boolean includeStart = true;
+	private boolean includeStart;
 	/** 是否包含最后一个元素 */
-	private boolean includeEnd = true;
+	private boolean includeEnd;
 
 	/**
 	 * 构造
@@ -80,6 +80,7 @@ public Range(T start, T end, Steper<T> steper, boolean isIncludeStart, boolean i
 		this.steper = steper;
 		this.next = safeStep(this.current);
 		this.includeStart = isIncludeStart;
+		includeEnd = true;
 		this.includeEnd = isIncludeEnd;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/lang/caller/CallerUtil.java
Patch:
@@ -64,7 +64,7 @@ public static boolean isCalledBy(Class<?> clazz) {
 	 * @return {@link Caller}实现
 	 */
 	private static Caller tryCreateCaller() {
-		Caller caller = null;
+		Caller caller;
 		try {
 			caller = new SecurityManagerCaller();
 			if(null != caller.getCaller() && null != caller.getCallerCaller()) {

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvRow.java
Patch:
@@ -132,6 +132,7 @@ public Object[] toArray() {
 
 	@Override
 	public <T> T[] toArray(T[] a) {
+		//noinspection SuspiciousToArrayCall
 		return this.fields.toArray(a);
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/EscapeUtil.java
Patch:
@@ -85,7 +85,8 @@ public static String unescape(String content) {
 		}
 
 		StringBuilder tmp = new StringBuilder(content.length());
-		int lastPos = 0, pos = 0;
+		int lastPos = 0;
+		int pos;
 		char ch;
 		while (lastPos < content.length()) {
 			pos = content.indexOf("%", lastPos);
@@ -104,7 +105,7 @@ public static String unescape(String content) {
 					tmp.append(content.substring(lastPos));
 					lastPos = content.length();
 				} else {
-					tmp.append(content.substring(lastPos, pos));
+					tmp.append(content, lastPos, pos);
 					lastPos = pos;
 				}
 			}

File: hutool-core/src/main/java/cn/hutool/core/util/PageUtil.java
Patch:
@@ -85,8 +85,7 @@ public static int totalPage(int totalCount, int pageSize) {
 	 * @return 分页条
 	 */
 	public static int[] rainbow(int currentPage, int pageCount, int displayCount) {
-		boolean isEven = true;
-		isEven = displayCount % 2 == 0;
+		boolean isEven = displayCount % 2 == 0;
 		int left = displayCount / 2;
 		int right = displayCount / 2;
 

File: hutool-core/src/main/java/cn/hutool/core/util/TypeUtil.java
Patch:
@@ -300,6 +300,7 @@ public static Type[] getActualTypes(Type actualType, Class<?> typeDefineClass, T
 		// 查找方法定义所在类或接口中此泛型参数的位置
 		final Type[] result = new Type[size];
 		for(int i = 0; i < typeVariables.length; i++) {
+			//noinspection SuspiciousMethodCalls
 			result[i] = (typeVariables[i] instanceof TypeVariable) ? tableMap.get(typeVariables[i]) : typeVariables[i];
 		}
 		return result;

File: hutool-core/src/test/java/cn/hutool/core/annotation/AnnotationForTest.java
Patch:
@@ -21,7 +21,7 @@
 	/**
 	 * 注解的默认属性值
 	 * 
-	 * @return
+	 * @return 属性值
 	 */
 	String value();
 }

File: hutool-core/src/test/java/cn/hutool/core/annotation/AnnotationUtilTest.java
Patch:
@@ -12,7 +12,7 @@ public void getAnnotationValueTest() {
 	}
 	
 	@AnnotationForTest("测试")
-	class ClassWithAnnotation{
+	static class ClassWithAnnotation{
 		
 	}
 }

File: hutool-core/src/test/java/cn/hutool/core/util/ClassUtilTest.java
Patch:
@@ -24,7 +24,7 @@ public void getClassNameTest() {
 	}
 
 	@SuppressWarnings("unused")
-	class TestClass {
+	static class TestClass {
 		private String privateField;
 		protected String field;
 

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/DayOfWeekValueParser.java
Patch:
@@ -35,7 +35,7 @@ public int parse(String value) throws CronException {
 	 * 解析别名
 	 * @param value 别名值
 	 * @return 月份int值
-	 * @throws CronException
+	 * @throws CronException 无效别名抛出此异常
 	 */
 	private int parseAlias(String value) throws CronException {
 		if(value.equalsIgnoreCase("L")){

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/MonthValueParser.java
Patch:
@@ -30,7 +30,7 @@ public int parse(String value) throws CronException {
 	 * 解析别名
 	 * @param value 别名值
 	 * @return 月份int值
-	 * @throws CronException
+	 * @throws CronException 无效月别名抛出此异常
 	 */
 	private int parseAlias(String value) throws CronException {
 		for (int i = 0; i < ALIASES.length; i++) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/mac/DefaultHMacEngine.java
Patch:
@@ -81,7 +81,7 @@ public byte[] digest(InputStream data, int bufferLength) {
 		}
 		byte[] buffer = new byte[bufferLength];
 
-		byte[] result = null;
+		byte[] result;
 		try {
 			int read = data.read(buffer, 0, bufferLength);
 

File: hutool-db/src/main/java/cn/hutool/db/dialect/DialectFactory.java
Patch:
@@ -55,7 +55,7 @@ public class DialectFactory {
 	public final static String DRIVER_DM7 = "dm.jdbc.driver.DmDriver";
 	
 	private static Map<DataSource, Dialect> dialectPool = new ConcurrentHashMap<>();
-	private static Object lock = new Object();
+	private static final Object lock = new Object();
 
 	private DialectFactory() {
 	}

File: hutool-db/src/main/java/cn/hutool/db/dialect/DriverUtil.java
Patch:
@@ -44,7 +44,7 @@ public static String identifyDriver(DataSource ds) {
 		}
 		
 		Connection conn = null;
-		String driver = null;
+		String driver;
 		try {
 			try {
 				conn = ds.getConnection();
@@ -69,7 +69,7 @@ public static String identifyDriver(DataSource ds) {
 	 * @throws DbRuntimeException SQL异常包装，获取元数据信息失败
 	 */
 	public static String identifyDriver(Connection conn) throws DbRuntimeException {
-		String driver = null;
+		String driver;
 		DatabaseMetaData meta;
 		try {
 			meta = conn.getMetaData();

File: hutool-db/src/main/java/cn/hutool/db/ds/GlobalDSFactory.java
Patch:
@@ -12,7 +12,7 @@
 public class GlobalDSFactory {
 
 	private static volatile DSFactory factory;
-	private static Object lock = new Object();
+	private static final Object lock = new Object();
 
 	/*
 	 * 设置在JVM关闭时关闭所有数据库连接

File: hutool-db/src/test/java/cn/hutool/db/ConcurentTest.java
Patch:
@@ -37,7 +37,7 @@ public void findTest() {
 			ThreadUtil.execute(new Runnable() {
 				@Override
 				public void run() {
-					List<Entity> find = null;
+					List<Entity> find;
 					try {
 						find = db.find(CollectionUtil.newArrayList("name AS name2"), Entity.create("user"), new EntityListHandler());
 					} catch (SQLException e) {

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/velocity/VelocityUtil.java
Patch:
@@ -33,7 +33,7 @@ public class VelocityUtil {
 	/** 是否初始化了默认引擎 */
 	private static boolean isInited;
 	/** 全局上下文，当设定值时，对于每个模板都有效 */
-	private static Map<String, Object> globalContext = new HashMap<String, Object>();
+	private static Map<String, Object> globalContext = new HashMap<>();
 
 	/**
 	 * 设置Velocity全局上下文<br>
@@ -278,7 +278,7 @@ public static void merge(Template template, VelocityContext context, Writer writ
 	public static VelocityContext parseRequest(VelocityContext context, javax.servlet.http.HttpServletRequest request) {
 		final Enumeration<String> attrs = request.getAttributeNames();
 		if (attrs != null) {
-			String attrName = null;
+			String attrName;
 			while (attrs.hasMoreElements()) {
 				attrName = attrs.nextElement();
 				context.put(attrName, request.getAttribute(attrName));
@@ -298,7 +298,7 @@ public static VelocityContext parseSession(VelocityContext context, javax.servle
 		if (null != session) {
 			final Enumeration<String> sessionAttrs = session.getAttributeNames();
 			if (sessionAttrs != null) {
-				String attrName = null;
+				String attrName;
 				while (sessionAttrs.hasMoreElements()) {
 					attrName = sessionAttrs.nextElement();
 					context.put(attrName, session.getAttribute(attrName));

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ikanalyzer/IKAnalyzerResult.java
Patch:
@@ -31,7 +31,7 @@ public IKAnalyzerResult(IKSegmenter seg) {
 
 	@Override
 	protected Word nextWord() {
-		Lexeme next = null;
+		Lexeme next;
 		try {
 			next = this.seg.next();
 		} catch (IOException e) {

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jcseg/JcsegResult.java
Patch:
@@ -36,7 +36,7 @@ public boolean hasNext() {
 		if (this.cachedWord != null) {
 			return true;
 		}
-		IWord next = null;
+		IWord next;
 		try {
 			next = this.result.next();
 		} catch (IOException e) {

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/mmseg/MmsegResult.java
Patch:
@@ -30,7 +30,7 @@ public MmsegResult(MMSeg mmSeg) {
 
 	@Override
 	protected Word nextWord() {
-		com.chenlb.mmseg4j.Word next = null;
+		com.chenlb.mmseg4j.Word next;
 		try {
 			next = this.mmSeg.next();
 		} catch (IOException e) {

File: hutool-http/src/main/java/cn/hutool/http/webservice/SoapUtil.java
Patch:
@@ -81,7 +81,7 @@ public static String toString(SOAPMessage message, boolean pretty, Charset chars
 		} catch (SOAPException | IOException e) {
 			throw new SoapRuntimeException(e);
 		}
-		String messageToString = null;
+		String messageToString;
 		try {
 			messageToString = out.toString(charset.toString());
 		} catch (UnsupportedEncodingException e) {

File: hutool-aop/src/main/java/cn/hutool/aop/interceptor/CglibInterceptor.java
Patch:
@@ -16,8 +16,8 @@
 public class CglibInterceptor implements MethodInterceptor, Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private Object target;
-	private Aspect aspect;
+	private final Object target;
+	private final Aspect aspect;
 
 	/**
 	 * 构造

File: hutool-cache/src/main/java/cn/hutool/cache/impl/CacheObj.java
Patch:
@@ -20,7 +20,7 @@ public class CacheObj<K, V> implements Serializable{
 	/** 访问次数 */
 	protected long accessCount;
 	/** 对象存活时长，0表示永久存活*/
-	private long ttl;
+	private final long ttl;
 	
 	/**
 	 * 构造

File: hutool-cache/src/main/java/cn/hutool/cache/impl/CacheObjIterator.java
Patch:
@@ -23,7 +23,6 @@ public class CacheObjIterator<K, V> implements Iterator<CacheObj<K, V>>, Seriali
 	 * 构造
 	 * 
 	 * @param iterator 原{@link Iterator}
-	 * @param readLock 读锁
 	 */
 	CacheObjIterator(Iterator<CacheObj<K, V>> iterator) {
 		this.iterator = iterator;

File: hutool-cache/src/main/java/cn/hutool/cache/impl/CacheValuesIterator.java
Patch:
@@ -17,7 +17,6 @@ public class CacheValuesIterator<V> implements Iterator<V>, Serializable {
 	/**
 	 * 构造
 	 * @param iterator 原{@link CacheObjIterator}
-	 * @param readLock 读锁
 	 */
 	CacheValuesIterator(CacheObjIterator<?, V> iterator) {
 		this.cacheObjIter = iterator;

File: hutool-captcha/src/main/java/cn/hutool/captcha/generator/AbstractGenerator.java
Patch:
@@ -13,9 +13,9 @@ public abstract class AbstractGenerator implements CodeGenerator {
 	private static final long serialVersionUID = 8685744597154953479L;
 	
 	/** 基础字符集合，用于随机获取字符串的字符集合 */
-	protected String baseStr;
+	protected final String baseStr;
 	/** 验证码长度 */
-	protected int length;
+	protected final int length;
 	
 	/**
 	 * 构造，使用字母+数字做为基础

File: hutool-captcha/src/main/java/cn/hutool/captcha/generator/MathGenerator.java
Patch:
@@ -42,12 +42,11 @@ public String generate() {
 		number1 = StrUtil.padAfter(number1, this.numberLength, CharUtil.SPACE);
 		number2 = StrUtil.padAfter(number2, this.numberLength, CharUtil.SPACE);
 
-		final String code = StrUtil.builder()//
+		return StrUtil.builder()//
 				.append(number1)//
 				.append(RandomUtil.randomChar(operators))//
 				.append(number2)//
 				.append('=').toString();
-		return code;
 	}
 
 	@Override

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanDescCache.java
Patch:
@@ -11,7 +11,7 @@
 public enum BeanDescCache {
 	INSTANCE;
 	
-	private SimpleCache<Class<?>, BeanDesc> bdCache = new SimpleCache<>();
+	private final SimpleCache<Class<?>, BeanDesc> bdCache = new SimpleCache<>();
 	
 	/**
 	 * 获得属性名和{@link BeanDesc}Map映射

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanInfoCache.java
Patch:
@@ -14,8 +14,8 @@
 public enum BeanInfoCache {
 	INSTANCE;
 	
-	private SimpleCache<Class<?>, Map<String, PropertyDescriptor>> pdCache = new SimpleCache<>();
-	private SimpleCache<Class<?>, Map<String, PropertyDescriptor>> ignoreCasePdCache = new SimpleCache<>();
+	private final SimpleCache<Class<?>, Map<String, PropertyDescriptor>> pdCache = new SimpleCache<>();
+	private final SimpleCache<Class<?>, Map<String, PropertyDescriptor>> ignoreCasePdCache = new SimpleCache<>();
 	
 	/**
 	 * 获得属性名和{@link PropertyDescriptor}Map映射

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/provider/BeanValueProvider.java
Patch:
@@ -18,8 +18,8 @@
  */
 public class BeanValueProvider implements ValueProvider<String> {
 
-	private Object source;
-	private boolean ignoreError;
+	private final Object source;
+	private final boolean ignoreError;
 	final Map<String, PropDesc> sourcePdMap;
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/codec/Caesar.java
Patch:
@@ -9,7 +9,7 @@
 public class Caesar {
 
 	// 26个字母表
-	public static String table = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz";
+	public static final String table = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz";
 
 	/**
 	 * 传入明文，加密得到密文

File: hutool-core/src/main/java/cn/hutool/core/collection/ArrayIter.java
Patch:
@@ -16,7 +16,7 @@ public class ArrayIter<E> implements Iterator<E>, Iterable<E>, Serializable{
 	private static final long serialVersionUID = 1L;
 
 	/** 数组 */
-	private Object array;
+	private final Object array;
 	/** 起始位置 */
 	private int startIndex;
 	/** 结束位置 */

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -2366,7 +2366,7 @@ public static <T> List<List<T>> group(Collection<T> collection, Hash<T> hash) {
 	 */
 	public static <T> List<List<T>> groupByField(Collection<T> collection, final String fieldName) {
 		return group(collection, new Hash<T>() {
-			private List<Object> fieldNameList = new ArrayList<>();
+			private final List<Object> fieldNameList = new ArrayList<>();
 
 			@Override
 			public int hash(T t) {

File: hutool-core/src/main/java/cn/hutool/core/comparator/CompareUtil.java
Patch:
@@ -19,7 +19,7 @@ public class CompareUtil {
 	 * @see java.util.Comparator#compare(Object, Object)
 	 * @since 4.6.9
 	 */
-	@SuppressWarnings("rawtypes")
+	@SuppressWarnings({"rawtypes", "unchecked"})
 	public static <T> int compare(T c1, T c2, Comparator<T> comparator) {
 		if (null == comparator) {
 			return compare((Comparable)c1, (Comparable)c2);

File: hutool-core/src/main/java/cn/hutool/core/comparator/PropertyComparator.java
Patch:
@@ -62,7 +62,7 @@ public int compare(T o1, T o2) {
 		return compare(o1, o2, v1, v2);
 	}
 
-	@SuppressWarnings({ "rawtypes"})
+	@SuppressWarnings({"rawtypes", "unchecked"})
 	private int compare(T o1, T o2, Comparable fieldValue1, Comparable fieldValue2) {
 		int result = ObjectUtil.compare(fieldValue1, fieldValue2, isNullGreater);
 		if(0 == result) {

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/BeanConverter.java
Patch:
@@ -27,9 +27,9 @@
 public class BeanConverter<T> extends AbstractConverter<T> {
 	private static final long serialVersionUID = 1L;
 
-	private Type beanType;
-	private Class<T> beanClass;
-	private CopyOptions copyOptions;
+	private final Type beanType;
+	private final Class<T> beanClass;
+	private final CopyOptions copyOptions;
 	
 	/**
 	 * 构造，默认转换选项，注入失败的字段忽略

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/DurationConverter.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.convert.AbstractConverter;
 
 import java.time.Duration;
-import java.time.Period;
 import java.time.temporal.TemporalAmount;
 
 /**

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/OptionalConverter.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.convert.AbstractConverter;
 
-import java.time.Period;
 import java.util.Optional;
 
 /**

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/PeriodConverter.java
Patch:
@@ -4,7 +4,6 @@
 
 import java.time.Period;
 import java.time.temporal.TemporalAmount;
-import java.util.Optional;
 
 /**
  * 

File: hutool-core/src/main/java/cn/hutool/core/date/BetweenFormater.java
Patch:
@@ -17,7 +17,7 @@ public class BetweenFormater implements Serializable{
 	/** 格式化级别 */
 	private Level level;
 	/** 格式化级别的最大个数 */
-	private int levelMaxCount;
+	private final int levelMaxCount;
 	
 	/**
 	 * 构造
@@ -137,7 +137,7 @@ public enum Level {
 		MILLSECOND("毫秒");
 
 		/** 级别名称 */
-		private String name;
+		private final String name;
 
 		/**
 		 * 构造

File: hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromObjectGetter.java
Patch:
@@ -14,9 +14,6 @@
  */
 public abstract class OptNullBasicTypeFromObjectGetter<K> extends OptNullBasicTypeGetter<K>{
 	
-	@Override
-	public abstract Object getObj(K key, Object defaultValue);
-	
 	@Override
 	public String getStr(K key, String defaultValue) {
 		final Object obj = getObj(key);

File: hutool-core/src/main/java/cn/hutool/core/getter/OptNullBasicTypeFromStringGetter.java
Patch:
@@ -14,9 +14,6 @@
  */
 public abstract class OptNullBasicTypeFromStringGetter<K> extends OptNullBasicTypeGetter<K> {
 
-	@Override
-	public abstract String getStr(K key, String defaultValue);
-
 	@Override
 	public Object getObj(K key, Object defaultValue) {
 		return getStr(key, null == defaultValue ? null : defaultValue.toString());

File: hutool-core/src/main/java/cn/hutool/core/io/resource/BytesResource.java
Patch:
@@ -22,8 +22,8 @@
 public class BytesResource implements Resource, Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private byte[] bytes;
-	private String name;
+	private final byte[] bytes;
+	private final String name;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/io/resource/ClassPathResource.java
Patch:
@@ -20,9 +20,9 @@
 public class ClassPathResource extends UrlResource {
 	private static final long serialVersionUID = 1L;
 
-	private String path;
-	private ClassLoader classLoader;
-	private Class<?> clazz;
+	private final String path;
+	private final ClassLoader classLoader;
+	private final Class<?> clazz;
 
 	// -------------------------------------------------------------------------------------- Constructor start
 	/**

File: hutool-core/src/main/java/cn/hutool/core/lang/ParameterizedTypeImpl.java
Patch:
@@ -54,7 +54,6 @@ public String toString() {
 
 		final Type useOwner = this.ownerType;
 		final Class<?> raw = (Class<?>) this.rawType;
-		final Type[] typeArguments = this.actualTypeArguments;
 		if (useOwner == null) {
 			buf.append(raw.getName());
 		} else {
@@ -66,7 +65,7 @@ public String toString() {
 			buf.append('.').append(raw.getSimpleName());
 		}
 
-		appendAllTo(buf.append('<'), ", ", typeArguments).append('>');
+		appendAllTo(buf.append('<'), ", ", this.actualTypeArguments).append('>');
 		return buf.toString();
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/math/Arrangement.java
Patch:
@@ -18,7 +18,7 @@
 public class Arrangement implements Serializable {
 	private static final long serialVersionUID = 1L;
 
-	private String[] datas;
+	private final String[] datas;
 
 	/**
 	 * 构造
@@ -106,7 +106,6 @@ public List<String[]> selectAll() {
 	 * 排列方式为先从数据数组中取出一个元素，再把剩余的元素作为新的基数，依次列推，直到选择到足够的元素
 	 * 
 	 * @param datas 选择的基数
-	 * @param dataList 待选列表
 	 * @param resultList 前面（resultIndex-1）个的排列结果
 	 * @param resultIndex 选择索引，从0开始
 	 * @param result 最终结果

File: hutool-core/src/main/java/cn/hutool/core/swing/clipboard/ClipboardMonitor.java
Patch:
@@ -29,9 +29,9 @@ public enum ClipboardMonitor implements ClipboardOwner, Runnable, Closeable {
 	/** 重试等待 */
 	private long delay;
 	/** 系统剪贴板对象 */
-	private Clipboard clipboard;
+	private final Clipboard clipboard;
 	/** 监听事件处理 */
-	private Set<ClipboardListener> listenerSet = new LinkedHashSet<>();
+	private final Set<ClipboardListener> listenerSet = new LinkedHashSet<>();
 	/** 是否正在监听 */
 	private boolean isRunning;
 

File: hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java
Patch:
@@ -65,7 +65,7 @@ public static boolean isFalse(Boolean bool) {
 	 * @return 相反的Boolean值
 	 */
 	public static boolean negate(boolean bool) {
-		return bool ? false : true;
+		return !bool;
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ClassLoaderUtil.java
Patch:
@@ -33,11 +33,11 @@ public class ClassLoaderUtil {
 	private static final char INNER_CLASS_SEPARATOR = '$';
 
 	/** 原始类型名和其class对应表，例如：int =》 int.class */
-	private static final Map<String, Class<?>> primitiveTypeNameMap = new ConcurrentHashMap<String, Class<?>>(32);
-	private static SimpleCache<String, Class<?>> classCache = new SimpleCache<>();
+	private static final Map<String, Class<?>> primitiveTypeNameMap = new ConcurrentHashMap<>(32);
+	private static final SimpleCache<String, Class<?>> classCache = new SimpleCache<>();
 
 	static {
-		List<Class<?>> primitiveTypes = new ArrayList<Class<?>>(32);
+		List<Class<?>> primitiveTypes = new ArrayList<>(32);
 		// 加入原始类型
 		primitiveTypes.addAll(BasicType.primitiveWrapperMap.keySet());
 		// 加入原始类型数组类型

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertTest.java
Patch:
@@ -1,11 +1,9 @@
 package cn.hutool.core.convert;
 
-import cn.hutool.core.date.DateUtil;
 import org.junit.Assert;
 import org.junit.Test;
 
 import java.util.ArrayList;
-import java.util.Date;
 
 /**
  * 类型转换工具单元测试

File: hutool-core/src/test/java/cn/hutool/core/convert/DateConvertTest.java
Patch:
@@ -1,7 +1,6 @@
 package cn.hutool.core.convert;
 
 import cn.hutool.core.date.DateUtil;
-import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 

File: hutool-core/src/test/java/cn/hutool/core/math/ArrangementTest.java
Patch:
@@ -52,7 +52,7 @@ public void selectTest() {
 		Assert.assertEquals(Arrangement.countAll(4), selectAll.size());
 		
 		List<String[]> list2 = arrangement.select(0);
-		Assert.assertTrue(1 == list2.size());
+		Assert.assertEquals(1, list2.size());
 	}
 	
 	@Test

File: hutool-core/src/test/java/cn/hutool/core/util/ClassUtilTest.java
Patch:
@@ -61,7 +61,7 @@ public void getPublicMethod() {
 	}
 
 	@Test
-	public void getDeclaredMethod() throws Exception {
+	public void getDeclaredMethod() {
 		Method noMethod = ClassUtil.getDeclaredMethod(TestSubClass.class, "noMethod");
 		Assert.assertNull(noMethod);
 

File: hutool-core/src/test/java/cn/hutool/core/util/URLUtilTest.java
Patch:
@@ -1,6 +1,5 @@
 package cn.hutool.core.util;
 
-import cn.hutool.core.lang.Console;
 import org.junit.Assert;
 import org.junit.Test;
 

File: hutool-cron/src/main/java/cn/hutool/cron/listener/SimpleTaskListener.java
Patch:
@@ -16,12 +16,10 @@ public void onStart(TaskExecutor executor) {
 
 	@Override
 	public void onSucceeded(TaskExecutor executor) {
-		
 	}
 
 	@Override
 	public void onFailed(TaskExecutor executor, Throwable exception) {
-
 	}
 
 }

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/BoolArrayValueMatcher.java
Patch:
@@ -12,7 +12,7 @@
  */
 public class BoolArrayValueMatcher implements ValueMatcher{
 	
-	boolean[] bValues;
+	private final boolean[] bValues;
 	
 	public BoolArrayValueMatcher(List<Integer> intValueList) {
 		bValues = new boolean[Collections.max(intValueList) + 1];

File: hutool-cron/src/test/java/cn/hutool/cron/demo/TestJob.java
Patch:
@@ -26,6 +26,7 @@ public void doTest() {
 	/**
 	 * 执行循环定时任务，测试在定时任务结束时作为deamon线程是否能正常结束
 	 */
+	@SuppressWarnings("InfiniteLoopStatement")
 	public void doWhileTest() {
 		String name = Thread.currentThread().getName();
 		while (true) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/AsymmetricAlgorithm.java
Patch:
@@ -17,7 +17,7 @@ public enum AsymmetricAlgorithm {
 	/** EC（Elliptic Curve）算法 */
 	EC("EC");
 
-	private String value;
+	private final String value;
 
 	/**
 	 * 构造

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/BaseAsymmetric.java
Patch:
@@ -26,7 +26,7 @@ public class BaseAsymmetric<T extends BaseAsymmetric<T>>{
 	/** 私钥 */
 	protected PrivateKey privateKey;
 	/** 锁 */
-	protected Lock lock = new ReentrantLock();
+	protected final Lock lock = new ReentrantLock();
 
 	// ------------------------------------------------------------------ Constructor start
 	/**

File: hutool-db/src/main/java/cn/hutool/db/AbstractDb.java
Patch:
@@ -33,7 +33,7 @@
 public abstract class AbstractDb implements Serializable {
 	private static final long serialVersionUID = 3858951941916349062L;
 
-	protected DataSource ds;
+	protected final DataSource ds;
 	/**
 	 * 是否支持事务
 	 */

File: hutool-db/src/main/java/cn/hutool/db/ActiveEntity.java
Patch:
@@ -15,7 +15,7 @@
 public class ActiveEntity extends Entity {
 	private static final long serialVersionUID = 6112321379601134750L;
 
-	private Db db;
+	private final Db db;
 
 	// --------------------------------------------------------------- Static method start
 	/**

File: hutool-db/src/main/java/cn/hutool/db/ds/hikari/HikariDSFactory.java
Patch:
@@ -44,7 +44,6 @@ protected DataSource createDataSource(String jdbcUrl, String driver, String user
 			config.put("password", pass);
 		}
 
-		final HikariDataSource ds = new HikariDataSource(new HikariConfig(config));
-		return ds;
+		return new HikariDataSource(new HikariConfig(config));
 	}
 }

File: hutool-db/src/main/java/cn/hutool/db/handler/BeanHandler.java
Patch:
@@ -14,7 +14,7 @@
 public class BeanHandler<E> implements RsHandler<E>{
 	private static final long serialVersionUID = -5491214744966544475L;
 
-	private Class<E> elementBeanType;
+	private final Class<E> elementBeanType;
 	
 	/**
 	 * 创建一个 BeanHandler对象
@@ -24,7 +24,7 @@ public class BeanHandler<E> implements RsHandler<E>{
 	 * @return BeanHandler对象
 	 */
 	public static <E> BeanHandler<E> create(Class<E> beanType) {
-		return new BeanHandler<E>(beanType);
+		return new BeanHandler<>(beanType);
 	}
 
 	public BeanHandler(Class<E> beanType) {

File: hutool-db/src/main/java/cn/hutool/db/handler/BeanListHandler.java
Patch:
@@ -15,7 +15,7 @@
 public class BeanListHandler<E> implements RsHandler<List<E>> {
 	private static final long serialVersionUID = 4510569754766197707L;
 	
-	private Class<E> elementBeanType;
+	private final Class<E> elementBeanType;
 
 	/**
 	 * 创建一个 BeanListHandler对象
@@ -25,7 +25,7 @@ public class BeanListHandler<E> implements RsHandler<List<E>> {
 	 * @return BeanListHandler对象
 	 */
 	public static <E> BeanListHandler<E> create(Class<E> beanType) {
-		return new BeanListHandler<E>(beanType);
+		return new BeanListHandler<>(beanType);
 	}
 
 	/**
@@ -38,6 +38,6 @@ public BeanListHandler(Class<E> beanType) {
 
 	@Override
 	public List<E> handle(ResultSet rs) throws SQLException {
-		return HandleHelper.handleRsToBeanList(rs, new ArrayList<E>(), elementBeanType);
+		return HandleHelper.handleRsToBeanList(rs, new ArrayList<>(), elementBeanType);
 	}
 }

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/UploadSetting.java
Patch:
@@ -1,12 +1,11 @@
 package cn.hutool.extra.servlet.multipart;
 
-import java.net.URL;
-
 import cn.hutool.core.util.URLUtil;
 import cn.hutool.log.Log;
-import cn.hutool.log.StaticLog;
 import cn.hutool.setting.Setting;
 
+import java.net.URL;
+
 /**
  * 上传文件设定文件
  * 

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/ChannelType.java
Patch:
@@ -27,7 +27,7 @@ public enum ChannelType {
 	SUBSYSTEM("subsystem");
 
 	/** channel值 */
-	private String value;
+	private final String value;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java
Patch:
@@ -221,10 +221,10 @@ public static boolean bindPort(Session session, String remoteHost, int remotePor
 	public static boolean unBindPort(Session session, int localPort) {
 		try {
 			session.delPortForwardingL(localPort);
-			return true;
 		} catch (JSchException e) {
 			throw new JschRuntimeException(e);
 		}
+		return true;
 	}
 
 	/**

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlEngine.java
Patch:
@@ -23,7 +23,7 @@
  */
 public class BeetlEngine implements TemplateEngine {
 
-	private GroupTemplate engine;
+	private final GroupTemplate engine;
 
 	// --------------------------------------------------------------------------------- Constructor start
 	/**

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlTemplate.java
Patch:
@@ -15,7 +15,7 @@
 public class BeetlTemplate extends AbstractTemplate implements Serializable{
 	private static final long serialVersionUID = -8157926902932567280L;
 
-	org.beetl.core.Template rawTemplate;
+	private final org.beetl.core.Template rawTemplate;
 	
 	/**
 	 * 包装Beetl模板

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/beetl/BeetlUtil.java
Patch:
@@ -254,7 +254,7 @@ public static ResourceLoaderBuilder resourceLoaderBuilder() {
 	 *
 	 */
 	public static class ResourceLoaderBuilder {
-		private CompositeResourceLoader compositeResourceLoader = new CompositeResourceLoader();
+		private final CompositeResourceLoader compositeResourceLoader = new CompositeResourceLoader();
 
 		/**
 		 * 创建

File: hutool-extra/src/main/java/cn/hutool/extra/template/engine/rythm/RythmEngine.java
Patch:
@@ -66,7 +66,6 @@ private static org.rythmengine.RythmEngine createEngine(TemplateConfig config) {
 			props.put("home.template", path);
 		}
 
-		final org.rythmengine.RythmEngine engine = new org.rythmengine.RythmEngine(props);
-		return engine;
+		return new org.rythmengine.RythmEngine(props);
 	}
 }

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/Word.java
Patch:
@@ -1,12 +1,14 @@
 package cn.hutool.extra.tokenizer;
 
+import java.io.Serializable;
+
 /**
  * 表示分词中的一个词
  * 
  * @author looly
  *
  */
-public interface Word {
+public interface Word extends Serializable {
 
 	/**
 	 * 获取单词文本

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/analysis/AnalysisEngine.java
Patch:
@@ -19,7 +19,7 @@
  */
 public class AnalysisEngine implements TokenizerEngine {
 
-	private Analyzer analyzer;
+	private final Analyzer analyzer;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/analysis/AnalysisResult.java
Patch:
@@ -18,7 +18,7 @@
  */
 public class AnalysisResult extends AbstractResult {
 
-	private TokenStream stream;
+	private final TokenStream stream;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/analysis/AnalysisWord.java
Patch:
@@ -13,8 +13,9 @@
  *
  */
 public class AnalysisWord implements Word {
-	
-	private Attribute word;
+	private static final long serialVersionUID = 1L;
+
+	private final Attribute word;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ansj/AnsjEngine.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class AnsjEngine implements TokenizerEngine {
 
-	private Analysis analysis;
+	private final Analysis analysis;
 	
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ansj/AnsjResult.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class AnsjResult implements Result{
 	
-	Iterator<Term> result;
+	private final Iterator<Term> result;
 	
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ansj/AnsjWord.java
Patch:
@@ -11,7 +11,9 @@
  *
  */
 public class AnsjWord implements Word {
-	private Term term;
+	private static final long serialVersionUID = 1L;
+
+	private final Term term;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/hanlp/HanLPWord.java
Patch:
@@ -11,6 +11,7 @@
  *
  */
 public class HanLPWord implements Word {
+	private static final long serialVersionUID = 1L;
 	
 	private Term term;
 

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/ikanalyzer/IKAnalyzerWord.java
Patch:
@@ -11,6 +11,7 @@
  *
  */
 public class IKAnalyzerWord implements Word {
+	private static final long serialVersionUID = 1L;
 	
 	private Lexeme word;
 

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jcseg/JcsegWord.java
Patch:
@@ -11,7 +11,9 @@
  *
  */
 public class JcsegWord implements Word {
-	private IWord word;
+	private static final long serialVersionUID = 1L;
+
+	private final IWord word;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/jieba/JiebaWord.java
Patch:
@@ -11,7 +11,9 @@
  *
  */
 public class JiebaWord implements Word {
-	private SegToken segToken;
+	private static final long serialVersionUID = 1L;
+
+	private final SegToken segToken;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/mmseg/MmsegWord.java
Patch:
@@ -9,8 +9,9 @@
  *
  */
 public class MmsegWord implements Word {
+	private static final long serialVersionUID = 1L;
 	
-	private com.chenlb.mmseg4j.Word word;
+	private final com.chenlb.mmseg4j.Word word;
 
 	/**
 	 * 构造

File: hutool-extra/src/main/java/cn/hutool/extra/tokenizer/engine/word/WordWord.java
Patch:
@@ -9,8 +9,9 @@
  *
  */
 public class WordWord implements Word {
+	private static final long serialVersionUID = 1L;
 	
-	private org.apdplat.word.segmentation.Word word;
+	private final org.apdplat.word.segmentation.Word word;
 
 	/**
 	 * 构造

File: hutool-http/src/main/java/cn/hutool/http/ssl/AndroidSupportSSLFactory.java
Patch:
@@ -19,7 +19,7 @@
 public class AndroidSupportSSLFactory extends CustomProtocolsSSLFactory {
 
 	// Android低版本不重置的话某些SSL访问就会失败
-	private static String[] protocols = {SSLv3, TLSv1, TLSv11, TLSv12};
+	private static final String[] protocols = {SSLv3, TLSv1, TLSv11, TLSv12};
 	
 	public AndroidSupportSSLFactory() throws KeyManagementException, NoSuchAlgorithmException {
 		super(protocols);

File: hutool-json/src/main/java/cn/hutool/json/JSONObject.java
Patch:
@@ -17,7 +17,6 @@
 import cn.hutool.json.serialize.JSONSerializer;
 
 import java.io.IOException;
-import java.io.StringWriter;
 import java.io.Writer;
 import java.lang.reflect.Method;
 import java.math.BigDecimal;

File: hutool-log/src/main/java/cn/hutool/log/Log.java
Patch:
@@ -34,7 +34,7 @@ static Log get(Class<?> clazz) {
 	 * @return Log
 	 * @since 5.0.0
 	 */
-	public static Log get(String name) {
+	static Log get(String name) {
 		return LogFactory.get(name);
 	}
 

File: hutool-log/src/main/java/cn/hutool/log/dialect/jdk/JdkLog.java
Patch:
@@ -140,7 +140,6 @@ private void logIfEnabled(String callerFQCN, Level level, Throwable throwable, S
 	/**
 	 * 传入调用日志类的信息
 	 * @param callerFQCN 调用者全限定类名
-	 * @param superFQCN 调用者父类全限定名
 	 * @param record The record to update
 	 */
 	private static void fillCallerData(String callerFQCN, LogRecord record) {

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -792,7 +792,7 @@ public ExcelWriter writeHeadRow(Iterable<?> rowData) {
 	 * @see #writeRow(Map, boolean)
 	 * @since 4.1.5
 	 */
-	@SuppressWarnings({"rawtypes" })
+	@SuppressWarnings({"rawtypes", "unchecked"})
 	public ExcelWriter writeRow(Object rowBean, boolean isWriteKeyAsHead) {
 		if (rowBean instanceof Iterable) {
 			return writeRow((Iterable<?>) rowBean);
@@ -806,7 +806,7 @@ public ExcelWriter writeRow(Object rowBean, boolean isWriteKeyAsHead) {
 			}
 		} else if (BeanUtil.isBean(rowBean.getClass())) {
 			if (MapUtil.isEmpty(this.headerAlias)) {
-				rowMap = BeanUtil.beanToMap(rowBean, new LinkedHashMap<String, Object>(), false, false);
+				rowMap = BeanUtil.beanToMap(rowBean, new LinkedHashMap<>(), false, false);
 			} else {
 				// 别名存在情况下按照别名的添加顺序排序Bean数据
 				rowMap = BeanUtil.beanToMap(rowBean, new TreeMap<>(getInitedAliasComparator()), false, false);
@@ -1018,7 +1018,7 @@ protected void closeWithoutFlush() {
 		final Map<Object, Object> filteredMap = new LinkedHashMap<>();
 		String aliasName;
 		for (Entry<?, ?> entry : rowMap.entrySet()) {
-			aliasName = this.headerAlias.get(entry.getKey());
+			aliasName = this.headerAlias.get(StrUtil.toString(entry.getKey()));
 			if (null != aliasName) {
 				// 别名键值对加入
 				filteredMap.put(aliasName, entry.getValue());

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/CellDataType.java
Patch:
@@ -25,7 +25,7 @@ public enum CellDataType {
 	NULL("");
 
 	/** 属性值 */
-	private String name;
+	private final String name;
 
 	/**
 	 * 构造

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/ExcelSaxUtil.java
Patch:
@@ -149,6 +149,7 @@ private static Number getNumberValue(String value, String numFmtString) {
 		// 普通数字
 		if (null != numFmtString && numFmtString.indexOf(StrUtil.C_DOT) < 0) {
 			final long longPart = (long) numValue;
+			//noinspection RedundantIfStatement
 			if (longPart == numValue) {
 				// 对于无小数部分的数字类型，转为Long
 				return longPart;

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioClient.java
Patch:
@@ -22,7 +22,7 @@
  */
 public class AioClient implements Closeable{
 
-	private AioSession session;
+	private final AioSession session;
 
 	/**
 	 * 构造

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioServer.java
Patch:
@@ -23,12 +23,12 @@
  */
 public class AioServer implements Closeable {
 	private static final Log log = LogFactory.get();
-	private static AcceptHandler ACCEPT_HANDLER = new AcceptHandler();
+	private static final AcceptHandler ACCEPT_HANDLER = new AcceptHandler();
 
 	private AsynchronousChannelGroup group;
 	private AsynchronousServerSocketChannel channel;
 	protected IoAction<ByteBuffer> ioAction;
-	protected SocketConfig config;
+	protected final SocketConfig config;
 
 
 	/**

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioSession.java
Patch:
@@ -25,8 +25,8 @@ public class AioSession implements Closeable{
 
 	private static final ReadHandler READ_HANDLER = new ReadHandler();
 
-	private AsynchronousSocketChannel channel;
-	private IoAction<ByteBuffer> ioAction;
+	private final AsynchronousSocketChannel channel;
+	private final IoAction<ByteBuffer> ioAction;
 	private ByteBuffer readBuffer;
 	private ByteBuffer writeBuffer;
 	/** 读取超时时长，小于等于0表示默认 */

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvReader.java
Patch:
@@ -85,7 +85,7 @@ public void setSkipEmptyRows(boolean skipEmptyRows) {
 	 * @param errorOnDifferentFieldCount 每行字段个数不同时是否抛出异常，默认false
 	 */
 	public void setErrorOnDifferentFieldCount(boolean errorOnDifferentFieldCount) {
-		this.setErrorOnDifferentFieldCount(errorOnDifferentFieldCount);
+		this.config.setErrorOnDifferentFieldCount(errorOnDifferentFieldCount);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -181,7 +181,7 @@ public static <T> Collection<T> intersection(Collection<T> coll1, Collection<T>
 	 * 例如：集合1：[a, b, c, c, c]，集合2：[a, b, c, c]<br>
 	 * 结果：[c]，此结果中只保留了一个<br>
 	 * 任意一个集合为空，返回另一个集合<br>
-	 * 两个集合无交集则返回两个集合的组合
+	 * 两个集合无差集则返回空集合
 	 *
 	 * @param <T>   集合元素类型
 	 * @param coll1 集合1
@@ -1780,7 +1780,7 @@ public static <T> Collection<T> addAll(Collection<T> collection, Object value, T
 
 		final ConverterRegistry convert = ConverterRegistry.getInstance();
 		while (iter.hasNext()) {
-			collection.add((T) convert.convert(elementType, iter.next()));
+			collection.add(convert.convert(elementType, iter.next()));
 		}
 
 		return collection;

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -844,6 +844,7 @@ public HttpRequest setSSLSocketFactory(SSLSocketFactory ssf) {
 
 	/**
 	 * 设置HTTPS安全连接协议，只针对HTTPS请求，可以使用的协议包括：<br>
+	 * 此方法调用后{@link #setSSLSocketFactory(SSLSocketFactory)} 将被覆盖。
 	 *
 	 * <pre>
 	 * 1. TLSv1.2
@@ -855,6 +856,7 @@ public HttpRequest setSSLSocketFactory(SSLSocketFactory ssf) {
 	 * @param protocol 协议
 	 * @return this
 	 * @see SSLSocketFactoryBuilder
+	 * @see #setSSLSocketFactory(SSLSocketFactory)
 	 */
 	public HttpRequest setSSLProtocol(String protocol) {
 		if (null == this.ssf) {

File: hutool-core/src/main/java/cn/hutool/core/collection/ConcurrentHashSet.java
Patch:
@@ -17,8 +17,8 @@ public class ConcurrentHashSet<E> extends AbstractSet<E> implements java.io.Seri
 	private static final long serialVersionUID = 7997886765361607470L;
 
 	/** 持有对象。如果值为此对象表示有数据，否则无数据 */
-	private static final Object PRESENT = new Object();
-	private final ConcurrentHashMap<E, Object> map;
+	private static final Boolean PRESENT = true;
+	private final ConcurrentHashMap<E, Boolean> map;
 
 	// ----------------------------------------------------------------------------------- Constructor start
 	/**

File: hutool-db/src/main/java/cn/hutool/db/Page.java
Patch:
@@ -42,7 +42,7 @@ public Page() {
 	 * @param pageSize 每页结果数
 	 */
 	public Page(int pageNumber, int pageSize) {
-		this.pageNumber = pageNumber < 0 ? 0 : pageNumber;
+		this.pageNumber = Math.max(pageNumber, 0);
 		this.pageSize = pageSize <= 0 ? DEFAULT_PAGE_SIZE : pageSize;
 	}
 
@@ -73,7 +73,7 @@ public int getPageNumber() {
 	 * @param pageNumber 页码
 	 */
 	public void setPageNumber(int pageNumber) {
-		this.pageNumber = pageNumber < 0 ? 0 : pageNumber;
+		this.pageNumber = Math.max(pageNumber, 0);
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/convert/TemporalAccessorConverterTest.java
Patch:
@@ -45,7 +45,7 @@ public void toLocalTimeTest(){
 	@Test
 	public void toZonedDateTimeTest(){
 		ZonedDateTime zonedDateTime = Convert.convert(ZonedDateTime.class, "2019-02-18");
-		Assert.assertEquals("2019-02-18T00:00+08:00[GMT+08:00]", zonedDateTime.toString());
+		Assert.assertEquals("2019-02-18T00:00+08:00", zonedDateTime.toString().substring(0, 22));
 	}
 
 	@Test

File: hutool-db/src/main/java/cn/hutool/db/sql/Wrapper.java
Patch:
@@ -92,7 +92,7 @@ public String wrap(String field){
 		}
 		
 		//如果字段中包含通配符或者括号（字段通配符或者函数），不做包装
-		if(StrUtil.containsAnyIgnoreCase(field, "*", "(", " ", "as")) {
+		if(StrUtil.containsAnyIgnoreCase(field, "*", "(", " ", " as ")) {
 			return field;
 		}
 		

File: hutool-extra/src/main/java/cn/hutool/extra/qrcode/QrConfig.java
Patch:
@@ -278,7 +278,7 @@ public HashMap<EncodeHintType, Object> toHints() {
 		// 配置
 		final HashMap<EncodeHintType, Object> hints = new HashMap<>();
 		if (null != this.charset) {
-			hints.put(EncodeHintType.CHARACTER_SET, charset.toString());
+			hints.put(EncodeHintType.CHARACTER_SET, charset.toString().toLowerCase());
 		}
 		if (null != this.errorCorrection) {
 			hints.put(EncodeHintType.ERROR_CORRECTION, this.errorCorrection);

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -163,7 +163,7 @@ public DateTime(Instant instant) {
 	 * @since 5.0.0
 	 */
 	public DateTime(TemporalAccessor temporalAccessor) {
-		this(Instant.from(temporalAccessor));
+		this(DateUtil.toInstant(temporalAccessor));
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/util/IdcardUtilTest.java
Patch:
@@ -7,6 +7,8 @@
 import cn.hutool.core.date.DateTime;
 import cn.hutool.core.date.DateUtil;
 
+import java.time.ZonedDateTime;
+
 /**
  * 身份证单元测试
  * 

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java
Patch:
@@ -157,7 +157,7 @@ public static Session createSession(String sshHost, int sshPort, String sshUser,
 	 */
 	public static Session createSession(String sshHost, int sshPort, String sshUser, String privateKeyPath, byte[] passphrase) {
 		Assert.notEmpty(sshHost, "SSH Host must be not empty!");
-		Assert.isTrue(sshPort < 0, "SSH Host must be not empty!");
+		Assert.isTrue(sshPort > 0, "SSH port must be > 0");
 		Assert.notEmpty(privateKeyPath, "PrivateKey Path must be not empty!");
 
 		// 默认root用户

File: hutool-json/src/main/java/cn/hutool/json/JSONConverter.java
Patch:
@@ -77,7 +77,7 @@ protected static <T> T jsonConvert(Type targetType, Object value, boolean ignore
 			}
 		}
 		
-		Object targetValue = null;
+		Object targetValue;
 		try {
 			targetValue = Convert.convert(targetType, value);
 		} catch (ConvertException e) {

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -378,7 +378,7 @@ public static <T> T toBean(String jsonString, TypeReference<T> typeReference, bo
 	 * @since 4.3.2
 	 */
 	public static <T> T toBean(String jsonString, Type beanType, boolean ignoreError) {
-		return toBean(parseObj(jsonString), beanType, ignoreError);
+		return toBean(parse(jsonString), beanType, ignoreError);
 	}
 
 	/**
@@ -391,7 +391,7 @@ public static <T> T toBean(String jsonString, Type beanType, boolean ignoreError
 	 * @return 实体类对象
 	 * @since 4.6.2
 	 */
-	public static <T> T toBean(JSONObject json, TypeReference<T> typeReference, boolean ignoreError) {
+	public static <T> T toBean(JSON json, TypeReference<T> typeReference, boolean ignoreError) {
 		return toBean(json, typeReference.getType(), ignoreError);
 	}
 
@@ -405,7 +405,7 @@ public static <T> T toBean(JSONObject json, TypeReference<T> typeReference, bool
 	 * @return 实体类对象
 	 * @since 4.3.2
 	 */
-	public static <T> T toBean(JSONObject json, Type beanType, boolean ignoreError) {
+	public static <T> T toBean(JSON json, Type beanType, boolean ignoreError) {
 		if (null == json) {
 			return null;
 		}

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONArraySerializer.java
Patch:
@@ -9,4 +9,5 @@
  * 
  * @author Looly
  */
+@FunctionalInterface
 public interface JSONArraySerializer<V> extends JSONSerializer<JSONArray, V>{}

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONDeserializer.java
Patch:
@@ -9,6 +9,7 @@
  *
  * @param <T> 反序列化后的类型
  */
+@FunctionalInterface
 public interface JSONDeserializer<T> {
 	
 	/**

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONObjectSerializer.java
Patch:
@@ -8,4 +8,5 @@
  * 
  * @author Looly
  */
+@FunctionalInterface
 public interface JSONObjectSerializer<V> extends JSONSerializer<JSONObject, V>{}

File: hutool-json/src/main/java/cn/hutool/json/serialize/JSONSerializer.java
Patch:
@@ -9,6 +9,7 @@
  * @param <V> 对象类型
  * @author Looly
  */
+@FunctionalInterface
 public interface JSONSerializer<T extends JSON, V> {
 
 	/**

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -161,7 +161,7 @@ public void toBeanNullStrTest() {
 		// 当JSON中为字符串"null"时应被当作字符串处理
 		Assert.assertEquals("null", bean.getStrValue());
 		// 当JSON中为字符串"null"时Bean中的字段类型不匹配应在ignoreError模式下忽略注入
-		Assert.assertEquals(null, bean.getBeanValue());
+		Assert.assertNull(bean.getBeanValue());
 	}
 
 	@Test

File: hutool-cache/src/main/java/cn/hutool/cache/impl/AbstractCache.java
Patch:
@@ -71,7 +71,7 @@ public void put(K key, V object, long timeout) {
 	 * @since 4.5.16
 	 */
 	private void putWithoutLock(K key, V object, long timeout) {
-		CacheObj<K, V> co = new CacheObj<K, V>(key, object, timeout);
+		CacheObj<K, V> co = new CacheObj<>(key, object, timeout);
 		if (timeout != 0) {
 			existCustomTimeout = true;
 		}
@@ -190,10 +190,9 @@ public V get(K key, boolean isUpdateLastAccess) {
 	// ---------------------------------------------------------------- get end
 
 	@Override
-	@SuppressWarnings("unchecked")
 	public Iterator<V> iterator() {
 		CacheObjIterator<K, V> copiedIterator = (CacheObjIterator<K, V>) this.cacheObjIterator();
-		return new CacheValuesIterator<V>(copiedIterator);
+		return new CacheValuesIterator<>(copiedIterator);
 	}
 
 	@Override

File: hutool-cache/src/main/java/cn/hutool/cache/impl/FIFOCache.java
Patch:
@@ -42,7 +42,7 @@ public FIFOCache(int capacity, long timeout) {
 		
 		this.capacity = capacity;
 		this.timeout = timeout;
-		cacheMap = new LinkedHashMap<K, CacheObj<K, V>>(capacity + 1, 1.0f, false);
+		cacheMap = new LinkedHashMap<>(capacity + 1, 1.0f, false);
 	}
 
 	/**

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/bitMap/BitMap.java
Patch:
@@ -22,6 +22,7 @@ public interface BitMap{
 	 * 检查是否包含值
 	 * 
 	 * @param i 值
+	 * @return 是否包含
 	 */
 	boolean contains(long i);
 
@@ -30,5 +31,5 @@ public interface BitMap{
 	 * 
 	 * @param i 值
 	 */
-	public void remove(long i);
+	void remove(long i);
 }
\ No newline at end of file

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/filter/ELFFilter.java
Patch:
@@ -5,8 +5,8 @@
 public class ELFFilter extends AbstractFilter {
 	private static final long serialVersionUID = 1L;
 
-	public ELFFilter(long maxValue, int MACHINENUM) {
-		super(maxValue, MACHINENUM);
+	public ELFFilter(long maxValue, int machineNumber) {
+		super(maxValue, machineNumber);
 	}
 	
 	public ELFFilter(long maxValue) {

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioClient.java
Patch:
@@ -64,6 +64,7 @@ public AioClient(AsynchronousSocketChannel channel, IoAction<ByteBuffer> ioActio
 	 * @param <T> 选项泛型
 	 * @param name {@link SocketOption} 枚举
 	 * @param value SocketOption参数
+	 * @return this
 	 * @throws IOException IO异常
 	 */
 	public <T> AioClient setOption(SocketOption<T> name, T value) throws IOException {
@@ -92,7 +93,8 @@ public AioClient read() {
 
 	/**
 	 * 写数据到服务端
-	 * 
+	 *
+	 * @param data 数据
 	 * @return this
 	 */
 	public AioClient write(ByteBuffer data) {

File: hutool-cron/src/main/java/cn/hutool/cron/Scheduler.java
Patch:
@@ -414,7 +414,8 @@ public Scheduler stop() {
 	/**
 	 * 停止定时任务<br>
 	 * 此方法调用后会将定时器进程立即结束，如果为守护线程模式，则正在执行的作业也会自动结束，否则作业线程将在执行完成后结束。
-	 * 
+	 *
+	 * @param clearTasks 是否清除说有任务
 	 * @return this
 	 * @since 4.1.17
 	 */

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/MultipartRequestInputStream.java
Patch:
@@ -180,6 +180,7 @@ public int copy(OutputStream out, int limit) throws IOException {
 	 * 跳过边界表示
 	 * 
 	 * @return 跳过的字节数
+	 * @throws IOException 读取异常
 	 */
 	public int skipToBoundary() throws IOException {
 		int count = 0;

File: hutool-setting/src/main/java/cn/hutool/setting/GroupedSet.java
Patch:
@@ -199,7 +199,7 @@ public boolean load(InputStream settingStream) throws IOException {
 		try {
 			reader = IoUtil.getReader(settingStream, charset);
 			// 分组
-			String group = null;
+			String group;
 			LinkedHashSet<String> valueSet = null;
 
 			while (true) {
@@ -223,7 +223,7 @@ public boolean load(InputStream settingStream) throws IOException {
 					group = line.substring(1, line.length() - 1).trim();
 					valueSet = super.get(group);
 					if (null == valueSet) {
-						valueSet = new LinkedHashSet<String>();
+						valueSet = new LinkedHashSet<>();
 					}
 					super.put(group, valueSet);
 					continue;
@@ -232,7 +232,7 @@ public boolean load(InputStream settingStream) throws IOException {
 				// 添加值
 				if (null == valueSet) {
 					// 当出现无分组值的时候，会导致valueSet为空，此时group为""
-					valueSet = new LinkedHashSet<String>();
+					valueSet = new LinkedHashSet<>();
 					super.put(StrUtil.EMPTY, valueSet);
 				}
 				valueSet.add(line);

File: hutool-setting/src/main/java/cn/hutool/setting/SettingLoader.java
Patch:
@@ -202,7 +202,7 @@ synchronized private void store(PrintWriter writer) {
 	 */
 	private String replaceVar(String group, String value) {
 		// 找到所有变量标识
-		final Set<String> vars = ReUtil.findAll(varRegex, value, 0, new HashSet<String>());
+		final Set<String> vars = ReUtil.findAll(varRegex, value, 0, new HashSet<>());
 		String key;
 		for (String var : vars) {
 			key = ReUtil.get(varRegex, var, 1);

File: hutool-setting/src/main/java/cn/hutool/setting/SettingUtil.java
Patch:
@@ -16,7 +16,7 @@
 public class SettingUtil {
 	/** 配置文件缓存 */
 	private static Map<String, Setting> settingMap = new ConcurrentHashMap<>();
-	private static Object lock = new Object();
+	private static final Object lock = new Object();
 
 	/**
 	 * 获取当前环境下的配置文件<br>

File: hutool-system/src/main/java/cn/hutool/system/oshi/OshiUtil.java
Patch:
@@ -16,6 +16,8 @@
  * 1、系统信息
  * 2、硬件信息
  * </pre>
+ *
+ * 相关内容见：https://github.com/oshi/oshi
  * 
  * @author Looly
  * @since 4.6.4

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitMapBloomFilter.java
Patch:
@@ -27,7 +27,7 @@ public class BitMapBloomFilter implements BloomFilter{
 	 */
 	public BitMapBloomFilter(int m) {
 		int mNum =NumberUtil.div(String.valueOf(m), String.valueOf(5)).intValue();
-		long size = (long) (1L * mNum * 1024 * 1024 * 8);
+		long size = mNum * 1024 * 1024 * 8;
 		
 		filters = new BloomFilter[]{
 			new DefaultFilter(size),

File: hutool-core/src/test/java/cn/hutool/core/util/URLUtilTest.java
Patch:
@@ -62,10 +62,10 @@ public void formatTest() {
 
 	@Test
 	public void getHostTest() throws MalformedURLException {
-		String url = "//www.hutool.cn//aaa/\\bbb?a=1&b=2";
+		String url = "https://www.hutool.cn//aaa/\\bbb?a=1&b=2";
 		String normalize = URLUtil.normalize(url);
 		URI host = URLUtil.getHost(new URL(normalize));
-		Assert.assertEquals("www.hutool.cn", host.toString());
+		Assert.assertEquals("https://www.hutool.cn", host.toString());
 	}
 
 	@Test

File: hutool-http/src/test/java/cn/hutool/http/test/HttpRequestTest.java
Patch:
@@ -38,7 +38,7 @@ public void getCookiesTest() {
 		String body = res.body();
 		Console.log(res.getCookies());
 	}
-	
+
 	@Test
 	@Ignore
 	public void getWithParamsTest() {

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -136,7 +136,7 @@ public ConverterRegistry putCustom(Type type, Converter<?> converter) {
 	 * @return 转换器
 	 */
 	public <T> Converter<T> getConverter(Type type, boolean isCustomFirst) {
-		Converter<T> converter = null;
+		Converter<T> converter;
 		if (isCustomFirst) {
 			converter = this.getCustomConverter(type);
 			if (null == converter) {

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -289,7 +289,7 @@ private void parseSinglePattern(String pattern) {
 				throw new CronException(e, "Invalid pattern [{}], parsing 'year' field error!", pattern);
 			}
 		} else {// 不支持年的表达式，全部匹配
-			this.secondMatchers.add(new AlwaysTrueValueMatcher());
+			this.yearMatchers.add(new AlwaysTrueValueMatcher());
 		}
 		matcherSize++;
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/emoji/package-info.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * 基于<a href=“https://github.com/vdurmont/emoji-java”>emoji-java</a>的Emoji表情工具类
+ * 基于https://github.com/vdurmont/emoji-java的Emoji表情工具类
  * 
  * @author looly
  *

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/MultipartRequestInputStream.java
Patch:
@@ -36,6 +36,7 @@ public byte readByte() throws IOException {
 	 * 跳过指定位数的 bytes.
 	 * 
 	 * @param i 跳过的byte数
+	 * @throws IOException IO异常
 	 */
 	public void skipBytes(int i) throws IOException {
 		long len = super.skip(i);

File: hutool-extra/src/main/java/cn/hutool/extra/servlet/multipart/UploadFile.java
Patch:
@@ -83,6 +83,7 @@ public File write(String destPath) throws IOException {
 	 *
 	 * @param destination 目标文件
 	 * @return 目标文件
+	 * @throws IOException IO异常
 	 */
 	public File write(File destination) throws IOException {
 		assertValid();

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -261,6 +261,7 @@ public String getUrl() {
 	 * 设置URL
 	 *
 	 * @param url url字符串
+	 * @return this
 	 * @since 4.1.8
 	 */
 	public HttpRequest setUrl(String url) {
@@ -278,6 +279,7 @@ public HttpRequest setUrl(String url) {
 	 * 相关issue见：https://gitee.com/loolly/hutool/issues/IMD1X
 	 *
 	 * @param urlHandler {@link URLStreamHandler}
+	 * @return this
 	 * @since 4.1.9
 	 */
 	public HttpRequest setUrlHandler(URLStreamHandler urlHandler) {

File: hutool-http/src/main/java/cn/hutool/http/useragent/Browser.java
Patch:
@@ -55,6 +55,7 @@ public class Browser extends UserAgentInfo {
 	 * 
 	 * @param name 浏览器名称
 	 * @param regex 关键字或表达式
+	 * @param versionRegex 匹配版本的正则
 	 */
 	public Browser(String name, String regex, String versionRegex) {
 		super(name, regex);

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelUtil.java
Patch:
@@ -546,7 +546,7 @@ public static BigExcelWriter getBigWriter(File destFile, String sheetName) {
 	 * 将Sheet列号变为列名
 	 * 
 	 * @param index 列号, 从0开始
-	 * @return 0->A; 1->B...26->AA
+	 * @return 0-》A; 1-》B...26-》AA
 	 * @since 4.1.20
 	 */
 	public static String indexToColName(int index) {
@@ -569,7 +569,7 @@ public static String indexToColName(int index) {
 	 * 根据表元的列名转换为列号
 	 * 
 	 * @param colName 列名, 从A开始
-	 * @return A1->0; B1->1...AA1->26
+	 * @return A1-》0; B1-》1...AA1-》26
 	 * @since 4.1.20
 	 */
 	public static int colNameToIndex(String colName) {

File: hutool-extra/src/main/java/cn/hutool/extra/emoji/EmojiUtil.java
Patch:
@@ -11,9 +11,9 @@
 import com.vdurmont.emoji.EmojiParser.FitzpatrickAction;
 
 /**
- * 基于<a href=“https://github.com/vdurmont/emoji-java”>emoji-java</a>的Emoji表情工具类
+ * 基于https://github.com/vdurmont/emoji-java的Emoji表情工具类
  * <p>
- * emoji-java文档以及别名列表见：<a href="https://github.com/vdurmont/emoji-java">https://github.com/vdurmont/emoji-java</a>
+ * emoji-java文档以及别名列表见：https://github.com/vdurmont/emoji-java
  *
  * @author looly
  * @since 4.2.1

File: hutool-aop/src/main/java/cn/hutool/aop/ProxyUtil.java
Patch:
@@ -30,6 +30,7 @@ public static <T> T proxy(T target, Class<? extends Aspect> aspectClass){
 	 * 使用切面代理对象
 	 * 
 	 * @param <T> 被代理对象类型
+	 * @param target 被代理对象
 	 * @param aspect 切面对象
 	 * @return 代理对象
 	 */

File: hutool-aop/src/main/java/cn/hutool/aop/proxy/ProxyFactory.java
Patch:
@@ -17,7 +17,8 @@ public abstract class ProxyFactory implements Serializable{
 
 	/**
 	 * 创建代理
-	 * 
+	 *
+	 * @param <T> 代理对象类型
 	 * @param target 被代理对象
 	 * @param aspect 切面实现
 	 * @return 代理对象

File: hutool-db/src/main/java/cn/hutool/db/AbstractDb.java
Patch:
@@ -516,6 +516,7 @@ public List<Entity> findAll(Entity where) throws SQLException {
 	 *
 	 * @param <T>   Bean类型
 	 * @param where 条件实体类（包含表名）
+	 * @param beanClass 返回的对象类型
 	 * @return 数据对象列表
 	 * @throws SQLException SQL执行异常
 	 * @since 3.2.2

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -247,7 +247,7 @@ public String getFrom() {
 	 *
 	 * <pre>
 	 * 1. user@xxx.xx
-	 * 2.  name <user@xxx.xx>
+	 * 2.  name &lt;user@xxx.xx&gt;
 	 * </pre>
 	 *
 	 * @param from 发送方，遵循RFC-822标准
@@ -272,6 +272,7 @@ public boolean isDebug() {
 	 * 设置是否打开调试模式，调试模式会显示与邮件服务器通信过程，默认不开启
 	 *
 	 * @param debug 是否打开调试模式，调试模式会显示与邮件服务器通信过程，默认不开启
+	 * @return this
 	 * @since 4.0.2
 	 */
 	public MailAccount setDebug(boolean debug) {

File: hutool-json/src/main/java/cn/hutool/json/JSONConverter.java
Patch:
@@ -56,8 +56,8 @@ protected static <T> List<T> toList(JSONArray jsonArray, Class<T> elementType) {
 	/**
 	 * JSON递归转换<br>
 	 * 首先尝试JDK类型转换，如果失败尝试JSON转Bean
-	 * @param <T>
-	 * 
+	 *
+	 * @param <T> 转换后的对象类型
 	 * @param targetType 目标类型
 	 * @param value 值
 	 * @param ignoreError 是否忽略转换错误

File: hutool-setting/src/main/java/cn/hutool/setting/dialect/Props.java
Patch:
@@ -99,7 +99,7 @@ public Props() {
 	/**
 	 * 构造，使用相对于Class文件根目录的相对路径
 	 * 
-	 * @param path
+	 * @param path 配置文件路径，相对于ClassPath，或者使用绝对路径
 	 */
 	public Props(String path) {
 		this(path, CharsetUtil.CHARSET_ISO_8859_1);

File: hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java
Patch:
@@ -504,7 +504,7 @@ public static Map<String, Object> beanToMap(Object bean) {
 	 * @return Map
 	 */
 	public static Map<String, Object> beanToMap(Object bean, boolean isToUnderlineCase, boolean ignoreNullValue) {
-		return beanToMap(bean, new LinkedHashMap<>(), isToUnderlineCase, ignoreNullValue);
+		return beanToMap(bean, new LinkedHashMap<String, Object>(), isToUnderlineCase, ignoreNullValue);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -62,7 +62,7 @@ public static boolean isNotEmpty(Map<?, ?> map) {
 	 * @since 4.6.3
 	 */
 	public static <K, V> Map<K, V> emptyIfNull(Map<K, V> set) {
-		return (null == set) ? Collections.emptyMap() : set;
+		return (null == set) ? Collections.<K, V>emptyMap() : set;
 	}
 
 	/**
@@ -105,7 +105,7 @@ public static <K, V> HashMap<K, V> newHashMap() {
 	 */
 	public static <K, V> HashMap<K, V> newHashMap(int size, boolean isOrder) {
 		int initialCapacity = (int) (size / DEFAULT_LOAD_FACTOR) + 1;
-		return isOrder ? new LinkedHashMap<>(initialCapacity) : new HashMap<>(initialCapacity);
+		return isOrder ? new LinkedHashMap<K, V>(initialCapacity) : new HashMap<K, V>(initialCapacity);
 	}
 
 	/**
@@ -775,7 +775,7 @@ public static <K, V> MapWrapper<K, V> wrap(Map<K, V> map) {
 	 * @return map创建类
 	 */
 	public static <K, V> MapBuilder<K, V> builder() {
-		return builder(new HashMap<>());
+		return builder(new HashMap<K, V>());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/net/NetUtil.java
Patch:
@@ -312,7 +312,7 @@ public static Collection<NetworkInterface> getNetworkInterfaces() {
 			return null;
 		}
 
-		return CollectionUtil.addAll(new ArrayList<>(), networkInterfaces);
+		return CollectionUtil.addAll(new ArrayList<NetworkInterface>(), networkInterfaces);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/text/Simhash.java
Patch:
@@ -57,7 +57,7 @@ public Simhash(int fracCount, int hammingThresh) {
 		this.hammingThresh = hammingThresh;
 		this.storage = new ArrayList<>(fracCount);
 		for (int i = 0; i < fracCount; i++) {
-			storage.add(new HashMap<>());
+			storage.add(new HashMap<String, List<Long>>());
 		}
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/annotation/AnnotationUtil.java
Patch:
@@ -44,10 +44,11 @@ public static CombinationAnnotationElement toCombination(AnnotatedElement annota
 	 * 获取指定注解
 	 *
 	 * @param annotationEle {@link AnnotatedElement}，可以是Class、Method、Field、Constructor、ReflectPermission
+	 * @param isToCombination 是否为转换为组合注解
 	 * @return 注解对象
 	 */
-	public static Annotation[] getAnnotations(AnnotatedElement annotationEle, boolean isCombination) {
-		return (null == annotationEle) ? null : (isCombination ? toCombination(annotationEle) : annotationEle).getAnnotations();
+	public static Annotation[] getAnnotations(AnnotatedElement annotationEle, boolean isToCombination) {
+		return (null == annotationEle) ? null : (isToCombination ? toCombination(annotationEle) : annotationEle).getAnnotations();
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/comparator/PropertyComparator.java
Patch:
@@ -62,7 +62,7 @@ public int compare(T o1, T o2) {
 		return compare(o1, o2, v1, v2);
 	}
 
-	@SuppressWarnings({ "rawtypes", "unchecked" })
+	@SuppressWarnings({ "rawtypes"})
 	private int compare(T o1, T o2, Comparable fieldValue1, Comparable fieldValue2) {
 		int result = ObjectUtil.compare(fieldValue1, fieldValue2, isNullGreater);
 		if(0 == result) {

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -528,6 +528,8 @@ public static <T> List<T> toList(Class<T> elementType, Object value) {
 	 *
 	 * @param <K> 键类型
 	 * @param <V> 值类型
+	 * @param keyType 键类型
+	 * @param valueType 值类型
 	 * @param value 被转换的值
 	 * @return {@link Map}
 	 * @since 4.6.8

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java
Patch:
@@ -139,6 +139,7 @@ public boolean isOnlyCopyFile() {
 	 * 设置当拷贝来源是目录时是否只拷贝文件而忽略子目录
 	 * 
 	 * @param isOnlyCopyFile 当拷贝来源是目录时是否只拷贝文件而忽略子目录
+	 * @return this
 	 * @since 4.1.5
 	 */
 	public FileCopier setOnlyCopyFile(boolean isOnlyCopyFile) {

File: hutool-core/src/main/java/cn/hutool/core/io/resource/MultiFileResource.java
Patch:
@@ -16,7 +16,7 @@ public class MultiFileResource extends MultiResource{
 	/**
 	 * 构造
 	 * 
-	 * @param files
+	 * @param files 文件资源列表
 	 */
 	public MultiFileResource(Collection<File> files) {
 		super();
@@ -26,7 +26,7 @@ public MultiFileResource(Collection<File> files) {
 	/**
 	 * 构造
 	 * 
-	 * @param files
+	 * @param files 文件资源列表
 	 */
 	public MultiFileResource(File... files) {
 		super();

File: hutool-core/src/main/java/cn/hutool/core/io/watch/WatchMonitor.java
Patch:
@@ -442,7 +442,7 @@ public WatchMonitor setMaxDepth(int maxDepth) {
 	}
 
 	/**
-	 * 设置监听选项，例如监听频率等，可设置项包括：<p>
+	 * 设置监听选项，例如监听频率等，可设置项包括：
 	 *
 	 * <pre>
 	 * 1、com.sun.nio.file.StandardWatchEventKinds

File: hutool-core/src/main/java/cn/hutool/core/map/MapProxy.java
Patch:
@@ -119,7 +119,7 @@ public Set<Entry<Object, Object>> entrySet() {
 	}
 
 	@Override
-	public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
+	public Object invoke(Object proxy, Method method, Object[] args) {
 		final Class<?>[] parameterTypes = method.getParameterTypes();
 		if (ArrayUtil.isEmpty(parameterTypes)) {
 			final Class<?> returnType = method.getReturnType();
@@ -166,7 +166,8 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl
 	
 	/**
 	 * 将Map代理为指定接口的动态代理对象
-	 * 
+	 *
+	 * @param <T> 代理的Bean类型
 	 * @param interfaceClass 接口
 	 * @return 代理对象
 	 * @since 4.5.2

File: hutool-core/src/main/java/cn/hutool/core/net/LocalPortGenerater.java
Patch:
@@ -21,7 +21,7 @@ public class LocalPortGenerater implements Serializable{
 	/**
 	 * 构造
 	 * 
-	 * @param beginPort
+	 * @param beginPort 起始端口号
 	 */
 	public LocalPortGenerater(int beginPort) {
 		alternativePort = new AtomicInteger(beginPort);

File: hutool-core/src/main/java/cn/hutool/core/net/NetUtil.java
Patch:
@@ -174,7 +174,8 @@ public static int getUsableLocalPort(int minPort, int maxPort) {
 	/**
 	 * 获取多个本地可用端口<br>
 	 * 来自org.springframework.util.SocketUtils
-	 * 
+	 *
+	 * @param numRequested 尝试次数
 	 * @param minPort 端口最小值（包含）
 	 * @param maxPort 端口最大值（包含）
 	 * @return 可用的端口
@@ -311,7 +312,7 @@ public static Collection<NetworkInterface> getNetworkInterfaces() {
 			return null;
 		}
 
-		return CollectionUtil.addAll(new ArrayList<NetworkInterface>(), networkInterfaces);
+		return CollectionUtil.addAll(new ArrayList<>(), networkInterfaces);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/swing/clipboard/ClipboardUtil.java
Patch:
@@ -97,7 +97,7 @@ public static String getStr() {
 	/**
 	 * 从剪贴板的{@link Transferable}获取文本
 	 * 
-	 * @param content
+	 * @param content {@link Transferable}
 	 * @return 文本
 	 * @since 4.5.6
 	 */
@@ -126,7 +126,7 @@ public static Image getImage() {
 	/**
 	 * 从剪贴板的{@link Transferable}获取图片
 	 * 
-	 * @param content
+	 * @param content  {@link Transferable}
 	 * @return 图片
 	 * @since 4.5.6
 	 */

File: hutool-core/src/main/java/cn/hutool/core/text/StrBuilder.java
Patch:
@@ -155,7 +155,8 @@ public StrBuilder append(CharSequence csq, int start, int end) {
 	/**
 	 * 追加对象，对象会被转换为字符串
 	 *
-	 * @param obj 对象
+	 * @param index 插入位置
+	 * @param obj   对象
 	 * @return this
 	 */
 	public StrBuilder insert(int index, Object obj) {
@@ -392,7 +393,7 @@ public StrBuilder delTo(int newPosition) {
 	 * @param start 开始位置，负数按照0处理（包括）
 	 * @param end   结束位置，超出最大长度按照最大长度处理（不包括）
 	 * @return this
-	 * @throws StringIndexOutOfBoundsException 当start > end抛出此异常
+	 * @throws StringIndexOutOfBoundsException 当start &gt; end抛出此异常
 	 */
 	public StrBuilder del(int start, int end) throws StringIndexOutOfBoundsException {
 		if (start < 0) {

File: hutool-core/src/main/java/cn/hutool/core/thread/SyncFinisher.java
Patch:
@@ -16,7 +16,7 @@
  * ps:
  * //模拟1000个线程并发
  * SyncFinisher sf = new SyncFinisher(1000);
- * concurrencyTestUtil.run(() -> {
+ * concurrencyTestUtil.run(() -&gt; {
  *      // 需要并发测试的业务代码
  * });
  * </pre>
@@ -46,7 +46,7 @@ public SyncFinisher(int threadSize) {
 		this.beginLatch = new CountDownLatch(1);
 		this.threadSize = threadSize;
 		this.executorService = ThreadUtil.newExecutor(threadSize);
-		this.workers = new LinkedHashSet<Worker>();
+		this.workers = new LinkedHashSet<>();
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/util/ReflectUtil.java
Patch:
@@ -830,6 +830,7 @@ public static <T> T invoke(Object obj, String methodName, Object... args) throws
 	 *
 	 * @param <T>              AccessibleObject的子类，比如Class、Method、Field等
 	 * @param accessibleObject 可设置访问权限的对象，比如Class、Method、Field等
+	 * @return 被设置可访问的对象
 	 * @since 4.6.8
 	 */
 	public static <T extends AccessibleObject> T setAccessible(T accessibleObject) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/KeyUtil.java
Patch:
@@ -588,6 +588,7 @@ public static KeyGenerator getKeyGenerator(String algorithm) {
 	/**
 	 * 获取主体算法名，例如RSA/ECB/PKCS1Padding的主体算法是RSA
 	 *
+	 * @param algorithm XXXwithXXX算法
 	 * @return 主体算法名
 	 * @since 4.5.2
 	 */
@@ -823,6 +824,7 @@ public static byte[] encodeECPublicKey(PublicKey publicKey) {
 	 *
 	 * @param encode    压缩公钥
 	 * @param curveName EC曲线名
+	 * @return 公钥
 	 * @since 4.4.4
 	 */
 	public static PublicKey decodeECPoint(String encode, String curveName) {
@@ -835,6 +837,7 @@ public static PublicKey decodeECPoint(String encode, String curveName) {
 	 *
 	 * @param encodeByte 压缩公钥
 	 * @param curveName  EC曲线名
+	 * @return 公钥
 	 * @since 4.4.4
 	 */
 	public static PublicKey decodeECPoint(byte[] encodeByte, String curveName) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/AbstractAsymmetricCrypto.java
Patch:
@@ -150,6 +150,7 @@ public String encryptBase64(String data, KeyType keyType) {
 	 * 编码为Base64字符串
 	 *
 	 * @param data    被加密的字符串
+	 * @param charset 编码
 	 * @param keyType 私钥或公钥 {@link KeyType}
 	 * @return Base64字符串
 	 * @since 4.0.1

File: hutool-db/src/main/java/cn/hutool/db/ThreadLocalConnection.java
Patch:
@@ -68,7 +68,7 @@ public static class GroupedConnection {
 		 * 
 		 * @param ds 数据源
 		 * @return Connection
-		 * @throws SQLException
+		 * @throws SQLException SQL异常
 		 */
 		public Connection get(DataSource ds) throws SQLException {
 			Connection conn = connMap.get(ds);

File: hutool-db/src/main/java/cn/hutool/db/ds/DSFactory.java
Patch:
@@ -140,7 +140,7 @@ public static DSFactory setCurrentDSFactory(DSFactory dsFactory) {
 	/**
 	 * 创建数据源实现工厂<br>
 	 * 此方法通过“试错”方式查找引入项目的连接池库，按照优先级寻找，一旦寻找到则创建对应的数据源工厂<br>
-	 * 连接池优先级：Hikari > Druid > Tomcat > Dbcp > C3p0 > Hutool Pooled
+	 * 连接池优先级：Hikari &gt; Druid &gt; Tomcat &gt; Dbcp &gt; C3p0 &gt; Hutool Pooled
 	 * 
 	 * @return 日志实现类
 	 */
@@ -153,7 +153,7 @@ public static DSFactory create(Setting setting) {
 	/**
 	 * 创建数据源实现工厂<br>
 	 * 此方法通过“试错”方式查找引入项目的连接池库，按照优先级寻找，一旦寻找到则创建对应的数据源工厂<br>
-	 * 连接池优先级：Hikari > Druid > Tomcat > Dbcp > C3p0 > Hutool Pooled
+	 * 连接池优先级：Hikari &gt; Druid &gt; Tomcat &gt; Dbcp &gt; C3p0 &gt; Hutool Pooled
 	 * 
 	 * @return 日志实现类
 	 * @since 4.1.3

File: hutool-db/src/main/java/cn/hutool/db/sql/SqlLog.java
Patch:
@@ -30,6 +30,7 @@ public enum SqlLog {
 	 * @param isShowSql 是否显示SQL
 	 * @param isFormatSql 是否格式化显示的SQL
 	 * @param isShowParams 是否打印参数
+	 * @param level 日志级别
 	 */
 	public void init(boolean isShowSql, boolean isFormatSql, boolean isShowParams, Level level) {
 		this.showSql = isShowSql;

File: hutool-crypto/src/main/java/cn/hutool/crypto/SmUtil.java
Patch:
@@ -189,8 +189,8 @@ public static byte[] changeC1C3C2ToC1C2C3(byte[] c1c3c2, ECDomainParameters ecDo
 	 */
 	public static byte[] rsAsn1ToPlain(byte[] rsDer) {
 		ASN1Sequence seq = ASN1Sequence.getInstance(rsDer);
-		byte[] r = bigIntToFixexLengthBytes(ASN1Integer.getInstance(seq.getObjectAt(0)).getValue());
-		byte[] s = bigIntToFixexLengthBytes(ASN1Integer.getInstance(seq.getObjectAt(1)).getValue());
+		byte[] r = bigIntToFixedLengthBytes(ASN1Integer.getInstance(seq.getObjectAt(0)).getValue());
+		byte[] s = bigIntToFixedLengthBytes(ASN1Integer.getInstance(seq.getObjectAt(1)).getValue());
 		byte[] result = new byte[RS_LEN * 2];
 		System.arraycopy(r, 0, result, 0, r.length);
 		System.arraycopy(s, 0, result, RS_LEN, s.length);
@@ -251,7 +251,7 @@ public static HMac hmacSm3(byte[] key) {
 	 * @return 固定长度bytes
 	 * @since 4.5.0
 	 */
-	private static byte[] bigIntToFixexLengthBytes(BigInteger rOrS) {
+	private static byte[] bigIntToFixedLengthBytes(BigInteger rOrS) {
 		// for sm2p256v1, n is 00fffffffeffffffffffffffffffffffff7203df6b21c6052b53bbf40939d54123,
 		// r and s are the result of mod n, so they should be less than n and have length<=32
 		byte[] rs = rOrS.toByteArray();

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -140,6 +140,7 @@ public DateTime(Date date, TimeZone timeZone) {
 	 */
 	public DateTime(Calendar calendar) {
 		this(calendar.getTime(), calendar.getTimeZone());
+		this.setFirstDayOfWeek(Week.of(calendar.getFirstDayOfWeek()));
 	}
 
 	/**

File: hutool-core/src/test/java/cn/hutool/core/lang/ClassScanerTest.java
Patch:
@@ -10,7 +10,7 @@ public class ClassScanerTest {
 	@Test
 	@Ignore
 	public void scanTest() {
-		ClassScaner scaner = new ClassScaner("cn.hutool.core.util", null);
+		ClassScanner scaner = new ClassScanner("cn.hutool.core.util", null);
 		Set<Class<?>> set = scaner.scan();
 		for (Class<?> clazz : set) {
 			Console.log(clazz.getName());

File: hutool-cron/src/main/java/cn/hutool/cron/CronUtil.java
Patch:
@@ -145,9 +145,9 @@ public static void start() {
 	/**
 	 * 开始
 	 * 
-	 * @param isDeamon 是否以守护线程方式启动，如果为true，则在调用{@link #stop()}方法后执行的定时任务立即结束，否则等待执行完毕才结束。
+	 * @param isDaemon 是否以守护线程方式启动，如果为true，则在调用{@link #stop()}方法后执行的定时任务立即结束，否则等待执行完毕才结束。
 	 */
-	synchronized public static void start(boolean isDeamon) {
+	synchronized public static void start(boolean isDaemon) {
 		if (scheduler.isStarted()) {
 			throw new UtilException("Scheduler has been started, please stop it first!");
 		}
@@ -167,7 +167,7 @@ synchronized public static void start(boolean isDeamon) {
 		}
 
 		schedule(crontabSetting);
-		scheduler.start(isDeamon);
+		scheduler.start(isDaemon);
 	}
 
 	/**

File: hutool-http/src/main/java/cn/hutool/http/HttpBase.java
Patch:
@@ -27,7 +27,7 @@ public abstract class HttpBase<T> {
 	public static final String HTTP_1_1 = "HTTP/1.1";
 	
 	/**存储头信息*/
-	protected Map<String, List<String>> headers = new HashMap<String, List<String>>();
+	protected Map<String, List<String>> headers = new HashMap<>();
 	/**编码*/
 	protected Charset charset = CharsetUtil.CHARSET_UTF_8;
 	/**http版本*/
@@ -90,7 +90,7 @@ public T header(String name, String value, boolean isOverride) {
 		if(null != name && null != value){
 			final List<String> values = headers.get(name.trim());
 			if(isOverride || CollectionUtil.isEmpty(values)) {
-				final ArrayList<String> valueList = new ArrayList<String>();
+				final ArrayList<String> valueList = new ArrayList<>();
 				valueList.add(value);
 				headers.put(name.trim(), valueList);
 			}else {

File: hutool-core/src/main/java/cn/hutool/core/convert/Convert.java
Patch:
@@ -233,7 +233,7 @@ public static Integer toInt(Object value) {
 
 	/**
 	 * 转换为Integer数组<br>
-	 * 
+	 *
 	 * @param value 被转换的值
 	 * @return 结果
 	 */

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BitSetBloomFilter.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  * BloomFilter实现方式2，此方式使用BitSet存储。<br>
- * Hash算法的使用使用固定顺序，只需指定个数既可
+ * Hash算法的使用使用固定顺序，只需指定个数即可
  * @author loolly
  *
  */

File: hutool-core/src/main/java/cn/hutool/core/codec/Base62Codec.java
Patch:
@@ -33,7 +33,7 @@ public class Base62Codec implements Serializable{
 	};
 
 	/**
-	 * 反转风格，既将GMP风格中的大小写做转换
+	 * 反转风格，即将GMP风格中的大小写做转换
 	 */
 	private static final byte[] INVERTED = { //
 			'0', '1', '2', '3', '4', '5', '6', '7', //

File: hutool-core/src/main/java/cn/hutool/core/collection/CollUtil.java
Patch:
@@ -244,7 +244,7 @@ public static boolean contains(Collection<?> collection, Object value) {
 	}
 
 	/**
-	 * 其中一个集合在另一个集合中是否至少包含一个元素，既是两个集合是否至少有一个共同的元素
+	 * 其中一个集合在另一个集合中是否至少包含一个元素，即是两个集合是否至少有一个共同的元素
 	 * 
 	 * @param coll1 集合1
 	 * @param coll2 集合2
@@ -273,7 +273,7 @@ public static boolean containsAny(Collection<?> coll1, Collection<?> coll2) {
 	}
 
 	/**
-	 * 集合1中是否包含集合2中所有的元素，既集合2是否为集合1的子集
+	 * 集合1中是否包含集合2中所有的元素，即集合2是否为集合1的子集
 	 * 
 	 * @param coll1 集合1
 	 * @param coll2 集合2

File: hutool-core/src/main/java/cn/hutool/core/comparator/VersionComparator.java
Patch:
@@ -10,7 +10,7 @@
 /**
  * 版本比较器<br>
  * 比较两个版本的大小<br>
- * 排序时版本从小到大排序，既比较时小版本在前，大版本在后<br>
+ * 排序时版本从小到大排序，即比较时小版本在前，大版本在后<br>
  * 支持如：1.3.20.8，6.82.20160101，8.5a/8.5c等版本形式<br>
  * 参考：https://www.cnblogs.com/shihaiming/p/6286575.html
  * 
@@ -32,7 +32,7 @@ public VersionComparator() {
 	// -----------------------------------------------------------------------------------------------------
 	/**
 	 * 比较两个版本<br>
-	 * null版本排在最小：既：
+	 * null版本排在最小：即：
 	 * <pre>
 	 * compare(null, "v1") &lt; 0
 	 * compare("v1", "v1")  = 0

File: hutool-core/src/main/java/cn/hutool/core/date/DateModifier.java
Patch:
@@ -33,7 +33,7 @@ public class DateModifier {
 	 * 修改日期
 	 * 
 	 * @param calendar {@link Calendar}
-	 * @param dateField 日期字段，既保留到哪个日期字段
+	 * @param dateField 日期字段，即保留到哪个日期字段
 	 * @param modifyType 修改类型，包括舍去、四舍五入、进一等
 	 * @return 修改后的{@link Calendar}
 	 */

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -1582,7 +1582,7 @@ public static String normalize(String path) {
 		String element;
 		for (int i = pathList.size() - 1; i >= 0; i--) {
 			element = pathList.get(i);
-			// 只处理非.的目录，既只处理非当前目录
+			// 只处理非.的目录，即只处理非当前目录
 			if (false == StrUtil.DOT.equals(element)) {
 				if (StrUtil.DOUBLE_DOT.equals(element)) {
 					tops++;

File: hutool-core/src/main/java/cn/hutool/core/io/NullOutputStream.java
Patch:
@@ -4,7 +4,7 @@
 import java.io.OutputStream;
 
 /**
- * 此OutputStream写出数据到<b>/dev/null</b>，既忽略所有数据<br>
+ * 此OutputStream写出数据到<b>/dev/null</b>，即忽略所有数据<br>
  * 来自 Apache Commons io
  * 
  * @author looly

File: hutool-core/src/main/java/cn/hutool/core/lang/Assert.java
Patch:
@@ -226,7 +226,7 @@ public static String notBlank(String text) throws IllegalArgumentException {
 	}
 
 	/**
-	 * 断言给定字符串是否不被另一个字符串包含（既是否为子串）
+	 * 断言给定字符串是否不被另一个字符串包含（即是否为子串）
 	 * 
 	 * <pre class="code">
 	 * Assert.doesNotContain(name, "rod", "Name must not contain 'rod'");
@@ -247,7 +247,7 @@ public static String notContain(String textToSearch, String substring, String er
 	}
 
 	/**
-	 * 断言给定字符串是否不被另一个字符串包含（既是否为子串）
+	 * 断言给定字符串是否不被另一个字符串包含（即是否为子串）
 	 * 
 	 * <pre class="code">
 	 * Assert.doesNotContain(name, "rod", "Name must not contain 'rod'");

File: hutool-core/src/main/java/cn/hutool/core/lang/Range.java
Patch:
@@ -187,7 +187,7 @@ public Range<T> reset() {
 	 * 步进接口可以定义以下逻辑：
 	 * 
 	 * <pre>
-	 * 1、步进规则，既对象如何做步进
+	 * 1、步进规则，即对象如何做步进
 	 * 2、步进大小，通过实现此接口，在实现类中定义一个对象属性，可灵活定义步进大小
 	 * 3、限制range个数，通过实现此接口，在实现类中定义一个对象属性，可灵活定义limit，限制range个数
 	 * </pre>

File: hutool-core/src/main/java/cn/hutool/core/text/escape/InternalEscapeUtil.java
Patch:
@@ -8,7 +8,7 @@
 class InternalEscapeUtil {
 
 	/**
-	 * 将数组中的0和1位置的值互换，既键值转换
+	 * 将数组中的0和1位置的值互换，即键值转换
 	 * 
 	 * @param array String[][] 被转换的数组
 	 * @return String[][] 转换后的数组

File: hutool-core/src/main/java/cn/hutool/core/thread/GlobalThreadPool.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  * 全局公共线程池<br>
- * 此线程池是一个无限线程池，既加入的线程不等待任何线程，直接执行
+ * 此线程池是一个无限线程池，即加入的线程不等待任何线程，直接执行
  * 
  * @author Looly
  *

File: hutool-core/src/main/java/cn/hutool/core/util/ClassUtil.java
Patch:
@@ -57,7 +57,7 @@ public static Class<?> getEnclosingClass(Class<?> clazz) {
 	}
 
 	/**
-	 * 是否为顶层类，既定义在包中的类，而非定义在类中的内部类
+	 * 是否为顶层类，即定义在包中的类，而非定义在类中的内部类
 	 *
 	 * @param clazz 类
 	 * @return 是否为顶层类
@@ -924,7 +924,7 @@ public static Class<?> getTypeArgument(Class<?> clazz) {
 	 * 获得给定类的泛型参数
 	 *
 	 * @param clazz 被检查的类，必须是已经确定泛型类型的类
-	 * @param index 泛型类型的索引号，既第几个泛型类型
+	 * @param index 泛型类型的索引号，即第几个泛型类型
 	 * @return {@link Class}
 	 */
 	public static Class<?> getTypeArgument(Class<?> clazz, int index) {

File: hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java
Patch:
@@ -1654,7 +1654,7 @@ public static boolean isLessOrEqual(BigDecimal bigNum1, BigDecimal bigNum2) {
 	/**
 	 * 比较大小，值相等 返回true<br>
 	 * 此方法通过调用{@link BigDecimal#compareTo(BigDecimal)}方法来判断是否相等<br>
-	 * 此方法判断值相等时忽略精度的，既0.00 == 0
+	 * 此方法判断值相等时忽略精度的，即0.00 == 0
 	 * 
 	 * @param bigNum1 数字1
 	 * @param bigNum2 数字2

File: hutool-core/src/main/java/cn/hutool/core/util/ObjectUtil.java
Patch:
@@ -471,7 +471,7 @@ public static Class<?> getTypeArgument(Object obj) {
 	 * 获得给定类的第一个泛型参数
 	 *
 	 * @param obj   被检查的对象
-	 * @param index 泛型类型的索引号，既第几个泛型类型
+	 * @param index 泛型类型的索引号，即第几个泛型类型
 	 * @return {@link Class}
 	 * @since 3.0.8
 	 */

File: hutool-core/src/main/java/cn/hutool/core/util/StrUtil.java
Patch:
@@ -3271,7 +3271,7 @@ public static int compareIgnoreCase(CharSequence str1, CharSequence str2, boolea
 
 	/**
 	 * 比较两个版本<br>
-	 * null版本排在最小：既：
+	 * null版本排在最小：即：
 	 * 
 	 * <pre>
 	 * StrUtil.compareVersion(null, "v1") &lt; 0
@@ -4031,7 +4031,7 @@ public static int totalLength(CharSequence... strs) {
 	/**
 	 * 循环位移指定位置的字符串为指定距离<br>
 	 * 当moveLength大于0向右位移，小于0向左位移，0不位移<br>
-	 * 当moveLength大于字符串长度时采取循环位移策略，既位移到头后从头（尾）位移，例如长度为10，位移13则表示位移3
+	 * 当moveLength大于字符串长度时采取循环位移策略，即位移到头后从头（尾）位移，例如长度为10，位移13则表示位移3
 	 * 
 	 * @param str 字符串
 	 * @param startInclude 起始位置（包括）

File: hutool-core/src/main/java/cn/hutool/core/util/TypeUtil.java
Patch:
@@ -203,7 +203,7 @@ public static Type getTypeArgument(Type type) {
 	 * 获得给定类的泛型参数
 	 * 
 	 * @param type 被检查的类型，必须是已经确定泛型类型的类
-	 * @param index 泛型类型的索引号，既第几个泛型类型
+	 * @param index 泛型类型的索引号，即第几个泛型类型
 	 * @return {@link Type}
 	 */
 	public static Type getTypeArgument(Type type, int index) {

File: hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java
Patch:
@@ -368,7 +368,7 @@ public static void transform(Source source, Result result, String charset, int i
 	// -------------------------------------------------------------------------------------- Create
 	/**
 	 * 创建XML文档<br>
-	 * 创建的XML默认是utf8编码，修改编码的过程是在toStr和toFile方法里，既XML在转为文本的时候才定义编码
+	 * 创建的XML默认是utf8编码，修改编码的过程是在toStr和toFile方法里，即XML在转为文本的时候才定义编码
 	 * 
 	 * @return XML文档
 	 * @since 4.0.8
@@ -397,7 +397,7 @@ public static DocumentBuilder createDocumentBuilder() {
 
 	/**
 	 * 创建XML文档<br>
-	 * 创建的XML默认是utf8编码，修改编码的过程是在toStr和toFile方法里，既XML在转为文本的时候才定义编码
+	 * 创建的XML默认是utf8编码，修改编码的过程是在toStr和toFile方法里，即XML在转为文本的时候才定义编码
 	 * 
 	 * @param rootElementName 根节点名称
 	 * @return XML文档

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -421,7 +421,7 @@ public void parseUTCTest() {
 		DateTime dt2 = DateUtil.parse(dateStr1);
 		Assert.assertEquals(dt, dt2);
 
-		// 默认使用Pattern对应的时区，既UTC时区
+		// 默认使用Pattern对应的时区，即UTC时区
 		String dateStr = dt.toString();
 		Assert.assertEquals("2018-09-13 05:34:31", dateStr);
 

File: hutool-core/src/test/java/cn/hutool/core/util/ArrayUtilTest.java
Patch:
@@ -191,15 +191,15 @@ public void insertTest() {
 		String[] result = ArrayUtil.insert(a, -1, b);
 		Assert.assertArrayEquals(new String[]{"1", "2", "3", "a", "b", "c", "4"}, result);
 
-		// 在第0个位置插入，既在数组前追加
+		// 在第0个位置插入，即在数组前追加
 		result = ArrayUtil.insert(a, 0, b);
 		Assert.assertArrayEquals(new String[]{"a", "b", "c", "1", "2", "3", "4"}, result);
 
-		// 在第2个位置插入，既"3"之前
+		// 在第2个位置插入，即"3"之前
 		result = ArrayUtil.insert(a, 2, b);
 		Assert.assertArrayEquals(new String[]{"1", "2", "a", "b", "c", "3", "4"}, result);
 
-		// 在第4个位置插入，既"4"之后，相当于追加
+		// 在第4个位置插入，即"4"之后，相当于追加
 		result = ArrayUtil.insert(a, 4, b);
 		Assert.assertArrayEquals(new String[]{"1", "2", "3", "4", "a", "b", "c"}, result);
 

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -74,7 +74,7 @@
  * <li><strong>*&#47;2 * * * *</strong>：每两小时执行</li>
  * <li><strong>* 12 * * *</strong>：12点的每分钟执行</li>
  * <li><strong>59 11 * * 1,2</strong>：每周一和周二的11:59执行</li>
- * <li><strong>3-18&#47;5 * * * *</strong>：3~18分，每5分钟执行一次，既0:03, 0:08, 0:13, 0:18, 1:03, 1:08……</li>
+ * <li><strong>3-18&#47;5 * * * *</strong>：3~18分，每5分钟执行一次，即0:03, 0:08, 0:13, 0:18, 1:03, 1:08……</li>
  * </ul>
  * 
  * @author Looly

File: hutool-cron/src/main/java/cn/hutool/cron/task/Task.java
Patch:
@@ -3,7 +3,7 @@
 /**
  * 定时作业接口，通过实现execute方法执行具体的任务
  * <p>
- * 作业执行是异步执行，既不同作业、相同作业在不同时间的执行是相互独立的。<br>
+ * 作业执行是异步执行，即不同作业、相同作业在不同时间的执行是相互独立的。<br>
  * 假如前一个作业未完成，下一个调度开始，则不会等待前一个作业，直接执行。<br>
  * 关于作业的互斥，请自行加锁完成。
  * </p>

File: hutool-crypto/src/main/java/cn/hutool/crypto/Padding.java
Patch:
@@ -16,7 +16,7 @@ public enum Padding {
 	 */
 	NoPadding,
 	/**
-	 * 0补码，既不满block长度时使用0填充
+	 * 0补码，即不满block长度时使用0填充
 	 */
 	ZeroPadding,
 	ISO10126Padding,

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/Digester.java
Patch:
@@ -32,7 +32,7 @@ public class Digester implements Serializable {
 	private MessageDigest digest;
 	/** 盐值 */
 	protected byte[] salt;
-	/** 加盐位置，既将盐值字符串放置在数据的index数，默认0 */
+	/** 加盐位置，即将盐值字符串放置在数据的index数，默认0 */
 	protected int saltPosition;
 	/** 散列次数 */
 	protected int digestCount;
@@ -120,7 +120,7 @@ public Digester setSalt(byte[] salt) {
 	 * data: 0123456
 	 * </pre>
 	 * 
-	 * 则当saltPosition = 2时，盐位于data的1和2中间，既第二个空隙，既：
+	 * 则当saltPosition = 2时，盐位于data的1和2中间，即第二个空隙，即：
 	 * 
 	 * <pre>
 	 * data: 01[salt]23456

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/MD5.java
Patch:
@@ -53,7 +53,7 @@ public MD5(byte[] salt, int digestCount) {
 	 * 构造
 	 * 
 	 * @param salt 盐值
-	 * @param saltPosition 加盐位置，既将盐值字符串放置在数据的index数，默认0
+	 * @param saltPosition 加盐位置，即将盐值字符串放置在数据的index数，默认0
 	 * @param digestCount 摘要次数，当此值小于等于1,默认为1。
 	 */
 	public MD5(byte[] salt, int saltPosition, int digestCount) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/SM3.java
Patch:
@@ -51,7 +51,7 @@ public SM3(byte[] salt, int digestCount) {
 	 * 构造
 	 *
 	 * @param salt         盐值
-	 * @param saltPosition 加盐位置，既将盐值字符串放置在数据的index数，默认0
+	 * @param saltPosition 加盐位置，即将盐值字符串放置在数据的index数，默认0
 	 * @param digestCount  摘要次数，当此值小于等于1,默认为1。
 	 */
 	public SM3(byte[] salt, int saltPosition, int digestCount) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricCrypto.java
Patch:
@@ -134,7 +134,7 @@ public SymmetricCrypto(String algorithm, SecretKey key, AlgorithmParameterSpec p
 	 *
 	 * @param algorithm 算法
 	 * @param key       密钥，如果为<code>null</code>自动生成一个key
-	 * @return {@link SymmetricCrypto}的子对象，既子对象自身
+	 * @return {@link SymmetricCrypto}的子对象，即子对象自身
 	 */
 	public SymmetricCrypto init(String algorithm, SecretKey key) {
 		Assert.notBlank(algorithm, "'algorithm' must be not blank !");

File: hutool-http/src/main/java/cn/hutool/http/HtmlUtil.java
Patch:
@@ -151,7 +151,7 @@ public static String removeHtmlAttr(String content, String... attrs) {
 			// (?i)     表示忽略大小写
 			// \s*      属性名前后的空白符去除
 			// [^>]+?   属性值，至少有一个非>的字符，>表示标签结束
-			// \s+(?=>) 表示属性值后跟空格加>，既末尾的属性，此时去掉空格
+			// \s+(?=>) 表示属性值后跟空格加>，即末尾的属性，此时去掉空格
 			// (?=\s|>) 表示属性值后跟空格（属性后还有别的属性）或者跟>（最后一个属性）
 			regex = StrUtil.format("(?i)(\\s*{}\\s*=[^>]+?\\s+(?=>))|(\\s*{}\\s*=[^>]+?(?=\\s|>))", attr, attr);
 			content = content.replaceAll(regex, StrUtil.EMPTY);

File: hutool-http/src/main/java/cn/hutool/http/webservice/SoapClient.java
Patch:
@@ -495,7 +495,7 @@ public SoapClient setReadTimeout(int milliseconds) {
 	}
 
 	/**
-	 * 执行Webservice请求，既发送SOAP内容
+	 * 执行Webservice请求，即发送SOAP内容
 	 *
 	 * @return 返回结果
 	 */
@@ -517,7 +517,7 @@ public SOAPMessage sendForMessage() {
 	}
 
 	/**
-	 * 执行Webservice请求，既发送SOAP内容
+	 * 执行Webservice请求，即发送SOAP内容
 	 *
 	 * @return 返回结果
 	 */
@@ -526,7 +526,7 @@ public String send() {
 	}
 
 	/**
-	 * 执行Webservice请求，既发送SOAP内容
+	 * 执行Webservice请求，即发送SOAP内容
 	 *
 	 * @param pretty 是否格式化
 	 * @return 返回结果

File: hutool-json/src/main/java/cn/hutool/json/JSONArray.java
Patch:
@@ -513,7 +513,7 @@ public String toStringPretty() throws JSONException {
 	/**
 	 * 转为JSON字符串，指定缩进值
 	 *
-	 * @param indentFactor 缩进值，既缩进空格数
+	 * @param indentFactor 缩进值，即缩进空格数
 	 * @return JSON字符串
 	 * @throws JSONException JSON写入异常
 	 */

File: hutool-log/src/test/java/cn/hutool/log/test/LogTest.java
Patch:
@@ -28,7 +28,7 @@ public void logTest(){
 	}
 	
 	/**
-	 * 兼容slf4j日志消息格式测试，既第二个参数是异常对象时正常输出异常信息
+	 * 兼容slf4j日志消息格式测试，即第二个参数是异常对象时正常输出异常信息
 	 */
 	@Test
 	@Ignore

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java
Patch:
@@ -405,8 +405,8 @@ public List<Object> readRow(int rowIndex) {
 	/**
 	 * 读取某个单元格的值
 	 * 
-	 * @param x X坐标，从0计数，既列号
-	 * @param y Y坐标，从0计数，既行号
+	 * @param x X坐标，从0计数，即列号
+	 * @param y Y坐标，从0计数，即行号
 	 * @return 值，如果单元格无值返回null
 	 * @since 4.0.3
 	 */

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/BigExcelWriteTest.java
Patch:
@@ -57,7 +57,7 @@ public void writeTest() {
 		// 通过工具类创建writer
 		BigExcelWriter writer = ExcelUtil.getBigWriter(filePath);
 
-//		// 跳过当前行，既第一行，非必须，在此演示用
+//		// 跳过当前行，即第一行，非必须，在此演示用
 //		writer.passCurrentRow();
 //		// 合并单元格后的标题行，使用默认标题样式
 //		writer.merge(row1.size() - 1, "大数据测试标题");
@@ -84,7 +84,7 @@ public void mergeTest() {
 		CellStyle style = writer.getStyleSet().getHeadCellStyle();
 		StyleUtil.setColor(style, IndexedColors.RED, FillPatternType.SOLID_FOREGROUND);
 
-		// 跳过当前行，既第一行，非必须，在此演示用
+		// 跳过当前行，即第一行，非必须，在此演示用
 		writer.passCurrentRow();
 		// 合并单元格后的标题行，使用默认标题样式
 		writer.merge(row1.size() - 1, "测试标题");

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelWriteTest.java
Patch:
@@ -79,7 +79,7 @@ public void writeTest() {
 		// 通过构造方法创建writer
 		// ExcelWriter writer = new ExcelWriter("d:/writeTest.xls");
 
-		// 跳过当前行，既第一行，非必须，在此演示用
+		// 跳过当前行，即第一行，非必须，在此演示用
 		writer.passCurrentRow();
 		// 合并单元格后的标题行，使用默认标题样式
 		writer.merge(row1.size() - 1, "测试标题");
@@ -106,7 +106,7 @@ public void mergeTest() {
 		CellStyle style = writer.getStyleSet().getHeadCellStyle();
 		StyleUtil.setColor(style, IndexedColors.RED, FillPatternType.SOLID_FOREGROUND);
 
-		// 跳过当前行，既第一行，非必须，在此演示用
+		// 跳过当前行，即第一行，非必须，在此演示用
 		writer.passCurrentRow();
 		// 合并单元格后的标题行，使用默认标题样式
 		writer.merge(row1.size() - 1, "测试标题");

File: hutool-extra/src/test/java/cn/hutool/extra/mail/MailTest.java
Patch:
@@ -40,7 +40,7 @@ public void sendWithImageTest() {
 	}
 	
 	@Test
-//	@Ignore
+	@Ignore
 	public void sendHtmlTest() {
 		MailUtil.send("hutool@foxmail.com", "测试", "<h1>邮件来自Hutool测试</h1>", true);
 	}

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java
Patch:
@@ -10,6 +10,7 @@
 import java.lang.reflect.Type;
 import java.util.Map;
 import java.util.Map.Entry;
+import java.util.Objects;
 
 /**
  * {@link Map} 转换器
@@ -57,8 +58,8 @@ public MapConverter(Type mapType, Type keyType, Type valueType) {
 			final Type[] typeArguments = TypeUtil.getTypeArguments(value.getClass());
 			if (null != typeArguments //
 					&& 2 == typeArguments.length//
-					&& this.keyType.equals(typeArguments[0]) //
-					&& this.valueType.equals(typeArguments[1])) {
+					&& Objects.equals(this.keyType, typeArguments[0]) //
+					&& Objects.equals(this.valueType, typeArguments[1])) {
 				//对于键值对类型一致的Map对象，不再做转换，直接返回原对象
 				return (Map) value;
 			}

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -1548,7 +1548,7 @@ public static String normalize(String path) {
 		// 去除file:前缀
 		pathToUse = StrUtil.removePrefixIgnoreCase(pathToUse, URLUtil.FILE_URL_PREFIX);
 		// 统一使用斜杠
-		pathToUse = pathToUse.replaceAll("[/\\\\]{2,}", StrUtil.SLASH).trim();
+		pathToUse = pathToUse.replaceAll("[/\\\\]+", StrUtil.SLASH).trim();
 		//兼容Windows下的共享目录路径（原始路径如果以\\开头，则保留这种路径）
 		if(path.startsWith("\\\\")){
 			pathToUse = "\\" + pathToUse;

File: hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java
Patch:
@@ -3,6 +3,7 @@
 import java.io.Serializable;
 import java.util.Map;
 
+import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.CharUtil;
 import cn.hutool.core.util.ClassUtil;
@@ -49,7 +50,7 @@ public T convert(Object value, T defaultValue) {
 		if (null == value) {
 			return defaultValue;
 		}
-		
+
 		if (null == defaultValue || targetType.isInstance(defaultValue)) {
 			if (targetType.isInstance(value) && false == Map.class.isAssignableFrom(targetType)) {
 				// 除Map外，已经是目标类型，不需要转换（Map类型涉及参数类型，需要单独转换）

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -82,7 +82,7 @@ public static <K, V> Map<K, V> emptyIfNull(Map<K, V> set) {
 	 * @return HashMap对象
 	 */
 	public static <K, V> HashMap<K, V> newHashMap() {
-		return new HashMap<K, V>();
+		return new HashMap<>();
 	}
 
 	/**
@@ -400,7 +400,7 @@ public static <K, V> List<Map<K, V>> toMapList(Map<K, ? extends Iterable<V>> lis
 			return resultList;
 		}
 
-		boolean isEnd = true;// 是否结束。标准是元素列表已耗尽
+		boolean isEnd;// 是否结束。标准是元素列表已耗尽
 		int index = 0;// 值索引
 		Map<K, V> map;
 		do {
@@ -736,7 +736,7 @@ public static MapProxy createProxy(Map<?, ?> map) {
 	 * @since 4.5.4
 	 */
 	public static <K, V> MapWrapper<K, V> wrap(Map<K, V> map) {
-		return new MapWrapper<K, V>(map);
+		return new MapWrapper<>(map);
 	}
 
 	// ----------------------------------------------------------------------------------------------- builder

File: hutool-aop/src/main/java/cn/hutool/aop/aspects/TimeIntervalAspect.java
Patch:
@@ -1,10 +1,9 @@
 package cn.hutool.aop.aspects;
 
-import java.lang.reflect.Method;
-
 import cn.hutool.core.date.TimeInterval;
 import cn.hutool.core.lang.Console;
-import cn.hutool.core.util.StrUtil;
+
+import java.lang.reflect.Method;
 
 /**
  * 通过日志打印方法的执行时间的切面

File: hutool-bloomFilter/src/main/java/cn/hutool/bloomfilter/BloomFilter.java
Patch:
@@ -16,7 +16,7 @@ public interface BloomFilter extends Serializable{
 	 * @param str 字符串
 	 * @return 判断一个字符串是否bitMap中存在
 	 */
-	public boolean contains(String str);
+	boolean contains(String str);
 
 	/**
 	 * 在boolean的bitMap中增加一个字符串<br>
@@ -25,5 +25,5 @@ public interface BloomFilter extends Serializable{
 	 * @param str 字符串
 	 * @return 是否加入成功，如果存在就返回<code>false</code> .如果不存在返回<code>true</code>
 	 */
-	public boolean add(String str);
+	boolean add(String str);
 }
\ No newline at end of file

File: hutool-cache/src/main/java/cn/hutool/cache/GlobalPruneTimer.java
Patch:
@@ -30,7 +30,7 @@ public enum GlobalPruneTimer {
 	/**
 	 * 构造
 	 */
-	private GlobalPruneTimer() {
+	GlobalPruneTimer() {
 		create();
 	}
 

File: hutool-captcha/src/main/java/cn/hutool/captcha/ShearCaptcha.java
Patch:
@@ -155,7 +155,7 @@ private void shearY(Graphics g, int w1, int h1, Color color) {
 	 * 干扰线
 	 * 
 	 * @param g {@link Graphics}
-	 * @param x1x1
+	 * @param x1 x1
 	 * @param y1 y1
 	 * @param x2 x2
 	 * @param y2 y2
@@ -183,8 +183,8 @@ private void drawInterfere(Graphics g, int x1, int y1, int x2, int y2, int thick
 		int dy = (int) ddy;
 
 		// Now we can compute the corner points...
-		int xPoints[] = new int[4];
-		int yPoints[] = new int[4];
+		int[] xPoints = new int[4];
+		int[] yPoints = new int[4];
 
 		xPoints[0] = x1 + dx;
 		yPoints[0] = y1 + dy;

File: hutool-captcha/src/main/java/cn/hutool/captcha/generator/CodeGenerator.java
Patch:
@@ -14,7 +14,7 @@ public interface CodeGenerator extends Serializable{
 	 * 
 	 * @return 验证码
 	 */
-	public String generate();
+	String generate();
 
 	/**
 	 * 验证用户输入的字符串是否与生成的验证码匹配<br>
@@ -24,5 +24,5 @@ public interface CodeGenerator extends Serializable{
 	 * @param userInputCode 用户输入的验证码
 	 * @return 是否验证通过
 	 */
-	public boolean verify(String code, String userInputCode);
+	boolean verify(String code, String userInputCode);
 }

File: hutool-core/src/main/java/cn/hutool/core/bean/copier/ValueProvider.java
Patch:
@@ -23,7 +23,7 @@ public interface ValueProvider<T>{
 	 * @param valueType 被注入的值得类型
 	 * @return 对应参数名的值
 	 */
-	public Object value(T key, Type valueType);
+	Object value(T key, Type valueType);
 
 	/**
 	 * 是否包含指定KEY，如果不包含则忽略注入<br>
@@ -32,5 +32,5 @@ public interface ValueProvider<T>{
 	 * @param key Bean对象中参数名
 	 * @return 是否包含指定KEY
 	 */
-	public boolean containsKey(T key);
+	boolean containsKey(T key);
 }

File: hutool-core/src/main/java/cn/hutool/core/codec/Base62Codec.java
Patch:
@@ -129,7 +129,7 @@ private byte[] translate(byte[] indices, byte[] dictionary) {
 	 * @return 计算结果
 	 */
 	private byte[] convert(byte[] message, int sourceBase, int targetBase) {
-		/** 计算结果长度，算法来自：http://codegolf.stackexchange.com/a/21672 */
+		// 计算结果长度，算法来自：http://codegolf.stackexchange.com/a/21672
 		final int estimatedLength = estimateOutputLength(message.length, sourceBase, targetBase);
 
 		final ByteArrayOutputStream out = new ByteArrayOutputStream(estimatedLength);

File: hutool-core/src/main/java/cn/hutool/core/collection/CopiedIter.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.io.Serializable;
 import java.util.Iterator;
-import java.util.LinkedList;
 import java.util.List;
 
 /**

File: hutool-core/src/main/java/cn/hutool/core/convert/Converter.java
Patch:
@@ -17,6 +17,6 @@ public interface Converter<T> {
 	 * @return 转换后的值
 	 * @throws IllegalArgumentException 无法确定目标类型，且默认值为{@code null}，无法确定类型
 	 */
-	public T convert(Object value, T defaultValue) throws IllegalArgumentException;
+	T convert(Object value, T defaultValue) throws IllegalArgumentException;
 
 }
\ No newline at end of file

File: hutool-core/src/main/java/cn/hutool/core/date/BetweenFormater.java
Patch:
@@ -75,7 +75,7 @@ public String format(){
 			}
 			if(isLevelCountValid(levelCount) && 0 != millisecond && level >= Level.MILLSECOND.ordinal()){
 				sb.append(millisecond).append(Level.MILLSECOND.name);
-				levelCount++;
+				// levelCount++;
 			}
 		}
 		
@@ -123,7 +123,7 @@ public void setLevel(Level level) {
 	 * 
 	 * @author Looly
 	 */
-	public static enum Level {
+	public enum Level {
 
 		/** 天 */
 		DAY("天"),
@@ -143,7 +143,7 @@ public static enum Level {
 		 * 构造
 		 * @param name 级别名称
 		 */
-		private Level(String name) {
+		Level(String name) {
 			this.name = name;
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/date/DateField.java
Patch:
@@ -105,7 +105,7 @@ public enum DateField {
 	// ---------------------------------------------------------------
 	private int value;
 
-	private DateField(int value) {
+	DateField(int value) {
 		this.value = value;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/DateModifier.java
Patch:
@@ -129,7 +129,7 @@ private static void modifyField(Calendar calendar, int field, ModifyType modifyT
 	 * @author looly
 	 *
 	 */
-	public static enum ModifyType {
+	public enum ModifyType {
 		/**
 		 * 取指定日期短的起始值.
 		 */

File: hutool-core/src/main/java/cn/hutool/core/date/Month.java
Patch:
@@ -55,7 +55,7 @@ public enum Month {
 	// ---------------------------------------------------------------
 	private int value;
 
-	private Month(int value) {
+	Month(int value) {
 		this.value = value;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/Quarter.java
Patch:
@@ -25,7 +25,7 @@ public enum Quarter {
 	// ---------------------------------------------------------------
 	private int value;
 
-	private Quarter(int value) {
+	Quarter(int value) {
 		this.value = value;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/Season.java
Patch:
@@ -26,7 +26,7 @@ public enum Season {
 	// ---------------------------------------------------------------
 	private int value;
 
-	private Season(int value) {
+	Season(int value) {
 		this.value = value;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/date/Week.java
Patch:
@@ -43,7 +43,7 @@ public enum Week {
 	 * 
 	 * @param value 星期对应{@link Calendar} 中的Week值
 	 */
-	private Week(int value) {
+	Week(int value) {
 		this.value = value;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/getter/OptBasicTypeGetter.java
Patch:
@@ -140,7 +140,7 @@ public interface OptBasicTypeGetter<K> {
 	 * @param defaultValue 默认值
 	 * @return Enum类型的值，无则返回Null
 	 */
-	public <E extends Enum<E>> E getEnum(Class<E> clazz, K key, E defaultValue);
+	<E extends Enum<E>> E getEnum(Class<E> clazz, K key, E defaultValue);
 	
 	/**
 	 * 获取Date类型值

File: hutool-core/src/main/java/cn/hutool/core/img/ImgUtil.java
Patch:
@@ -389,8 +389,8 @@ public static void slice(Image srcImage, File descDir, int destWidth, int destHe
 
 		try {
 			if (srcWidth > destWidth && srcHeight > destHeight) {
-				int cols = 0; // 切片横向数量
-				int rows = 0; // 切片纵向数量
+				int cols; // 切片横向数量
+				int rows; // 切片纵向数量
 				// 计算切片的横向和纵向数量
 				if (srcWidth % destWidth == 0) {
 					cols = srcWidth / destWidth;
@@ -1772,7 +1772,7 @@ public static Color getColor(String colorName) {
 			return Color.LIGHT_GRAY;
 		} else if ("GRAY".equals(colorName)) {
 			return Color.GRAY;
-		} else if ("DARK_GRAY".equals(colorName) || "DARK_GRAY".equals(colorName)) {
+		} else if ("DARKGRAY".equals(colorName) || "DARK_GRAY".equals(colorName)) {
 			return Color.DARK_GRAY;
 		} else if ("RED".equals(colorName)) {
 			return Color.RED;

File: hutool-core/src/main/java/cn/hutool/core/img/ScaleType.java
Patch:
@@ -31,7 +31,7 @@ public enum ScaleType {
 	 * @see Image#SCALE_REPLICATE
 	 * @see Image#SCALE_AREA_AVERAGING
 	 */
-	private ScaleType(int value) {
+	ScaleType(int value) {
 		this.value = value;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java
Patch:
@@ -82,7 +82,7 @@ protected void init() throws IOException {
 			return;
 		}
 
-		byte bom[] = new byte[BOM_SIZE];
+		byte[] bom = new byte[BOM_SIZE];
 		int n, unread;
 		n = in.read(bom, 0, bom.length);
 

File: hutool-core/src/main/java/cn/hutool/core/io/StreamProgress.java
Patch:
@@ -10,16 +10,16 @@ public interface StreamProgress {
 	/**
 	 * 开始
 	 */
-	public void start();
+	void start();
 	
 	/**
 	 * 进行中
 	 * @param progressSize 已经进行的大小
 	 */
-	public void progress(long progressSize);
+	void progress(long progressSize);
 	
 	/**
 	 * 结束
 	 */
-	public void finish();
+	void finish();
 }

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileCopier.java
Patch:
@@ -216,7 +216,7 @@ private void internalCopyDirContent(File src, File dest) throws IORuntimeExcepti
 			throw new IORuntimeException(StrUtil.format("Src [{}] is a directory but dest [{}] is a file!", src.getPath(), dest.getPath()));
 		}
 		
-		final String files[] = src.list();
+		final String[] files = src.list();
 		File srcFile;
 		File destFile;
 		for (String file : files) {

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileMode.java
Patch:
@@ -14,6 +14,6 @@ public enum FileMode {
 	/** 打开以便读取和写入。相对于 "rw"，"rws" 还要求对“文件的内容”或“元数据”的每个更新都同步写入到基础存储设备。 */
 	rws,
 	/** 打开以便读取和写入，相对于 "rw"，"rwd" 还要求对“文件的内容”的每个更新都同步写入到基础存储设备。 */
-	rwd;
+	rwd
 
 }

File: hutool-core/src/main/java/cn/hutool/core/io/file/FileReader.java
Patch:
@@ -209,7 +209,7 @@ public List<String> readLines() throws IORuntimeException {
 	 */
 	public <T> T read(ReaderHandler<T> readerHandler) throws IORuntimeException {
 		BufferedReader reader = null;
-		T result = null;
+		T result;
 		try {
 			reader = FileUtil.getReader(this.file, charset);
 			result = readerHandler.handle(reader);
@@ -274,7 +274,7 @@ public File writeToStream(OutputStream out) throws IORuntimeException {
 	 * @param <T> Reader处理返回结果类型
 	 */
 	public interface ReaderHandler<T> {
-		public T handle(BufferedReader reader) throws IOException;
+		T handle(BufferedReader reader) throws IOException;
 	}
 	// -------------------------------------------------------------------------- Interface end
 	

File: hutool-core/src/main/java/cn/hutool/core/io/file/LineSeparator.java
Patch:
@@ -25,7 +25,7 @@ public enum LineSeparator {
 
 	private String value;
 
-	private LineSeparator(String lineSeparator) {
+	LineSeparator(String lineSeparator) {
 		this.value = lineSeparator;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/io/resource/NoResourceException.java
Patch:
@@ -41,7 +41,7 @@ public NoResourceException(Throwable throwable, String messageTemplate, Object..
 	 */
 	public boolean causeInstanceOf(Class<? extends Throwable> clazz) {
 		Throwable cause = this.getCause();
-		if (null != cause && clazz.isInstance(cause)) {
+		if (clazz.isInstance(cause)) {
 			return true;
 		}
 		return false;

File: hutool-core/src/main/java/cn/hutool/core/lang/ConsistentHash.java
Patch:
@@ -108,6 +108,6 @@ public T get(Object key) {
 	 *
 	 */
 	public interface HashFunc {
-		public Integer hash(Object key);
+		Integer hash(Object key);
 	}
 }
\ No newline at end of file

File: hutool-core/src/main/java/cn/hutool/core/lang/Editor.java
Patch:
@@ -19,5 +19,5 @@ public interface Editor<T> {
 	 * @param t 被过滤的对象
 	 * @return 修改后的对象，如果被过滤返回<code>null</code>
 	 */
-	public T edit(T t);
+	T edit(T t);
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/Matcher.java
Patch:
@@ -12,5 +12,5 @@ public interface Matcher<T>{
 	 * @param t 对象
 	 * @return 是否匹配
 	 */
-	public boolean match(T t);
+	boolean match(T t);
 }

File: hutool-core/src/main/java/cn/hutool/core/lang/Range.java
Patch:
@@ -196,7 +196,7 @@ public Range<T> reset() {
 	 *
 	 * @param <T> 需要增加步进的对象
 	 */
-	public static interface Steper<T> {
+	public interface Steper<T> {
 		/**
 		 * 增加步进<br>
 		 * 增加步进后的返回值如果为{@code null}则表示步进结束<br>

File: hutool-core/src/main/java/cn/hutool/core/lang/Replacer.java
Patch:
@@ -17,5 +17,5 @@ public interface Replacer<T> {
 	 * @param t 被替换的对象
 	 * @return 替代后的对象
 	 */
-	public T replace(T t);
+	T replace(T t);
 }

File: hutool-core/src/main/java/cn/hutool/core/swing/clipboard/ClipboardMonitor.java
Patch:
@@ -39,7 +39,7 @@ public enum ClipboardMonitor implements ClipboardOwner, Runnable, Closeable {
 	/**
 	 * 构造，尝试获取剪贴板内容的次数为10，第二次之后延迟100毫秒
 	 */
-	private ClipboardMonitor() {
+	ClipboardMonitor() {
 		this(DEFAULT_TRY_COUNT, DEFAULT_DELAY);
 	}
 
@@ -49,7 +49,7 @@ private ClipboardMonitor() {
 	 * @param tryCount 尝试获取剪贴板内容的次数
 	 * @param delay 响应延迟，当从第二次开始，延迟一定毫秒数等待剪贴板可以获取，当tryCount小于2时无效
 	 */
-	private ClipboardMonitor(int tryCount, long delay) {
+	ClipboardMonitor(int tryCount, long delay) {
 		this(tryCount, delay, ClipboardUtil.getClipboard());
 	}
 
@@ -60,7 +60,7 @@ private ClipboardMonitor(int tryCount, long delay) {
 	 * @param delay 响应延迟，当从第二次开始，延迟一定毫秒数等待剪贴板可以获取，当tryCount小于2时无效
 	 * @param clipboard 剪贴板对象
 	 */
-	private ClipboardMonitor(int tryCount, long delay, Clipboard clipboard) {
+	ClipboardMonitor(int tryCount, long delay, Clipboard clipboard) {
 		this.tryCount = tryCount;
 		this.delay = delay;
 		this.clipboard = clipboard;

File: hutool-core/src/main/java/cn/hutool/core/thread/RejectPolicy.java
Patch:
@@ -25,7 +25,7 @@ public enum RejectPolicy {
 
 	private RejectedExecutionHandler value;
 
-	private RejectPolicy(RejectedExecutionHandler handler) {
+	RejectPolicy(RejectedExecutionHandler handler) {
 		this.value = handler;
 	}
 

File: hutool-core/src/main/java/cn/hutool/core/util/BooleanUtil.java
Patch:
@@ -77,9 +77,7 @@ public static boolean negate(boolean bool) {
 	public static boolean toBoolean(String valueStr) {
 		if (StrUtil.isNotBlank(valueStr)) {
 			valueStr = valueStr.trim().toLowerCase();
-			if (ArrayUtil.contains(TRUE_ARRAY, valueStr)) {
-				return true;
-			}
+			return ArrayUtil.contains(TRUE_ARRAY, valueStr);
 		}
 		return false;
 	}

File: hutool-core/src/main/java/cn/hutool/core/util/ModifierUtil.java
Patch:
@@ -19,7 +19,7 @@ public class ModifierUtil {
 	 * @author looly
 	 * @since 4.0.5
 	 */
-	public static enum ModifierType {
+	public enum ModifierType {
 		/** public修饰符，所有类都能访问 */
 		PUBLIC(Modifier.PUBLIC),
 		/** private修饰符，只能被自己访问和修改 */
@@ -51,7 +51,7 @@ public static enum ModifierType {
 		 * 构造
 		 * @param modifier 修饰符int表示，见{@link Modifier}
 		 */
-		private ModifierType(int modifier) {
+		ModifierType(int modifier) {
 			this.value = modifier;
 		}
 

File: hutool-core/src/main/java/cn/hutool/core/util/ReferenceUtil.java
Patch:
@@ -60,7 +60,7 @@ public static <T> Reference<T> create(ReferenceType type, T referent, ReferenceQ
 	 * @author looly
 	 *
 	 */
-	public static enum ReferenceType {
+	public enum ReferenceType {
 		/** 软引用，在GC报告内存不足时会被GC回收 */
 		SOFT,
 		/** 弱引用，在GC时发现弱引用会回收其对象 */
@@ -69,7 +69,7 @@ public static enum ReferenceType {
 		 * 虚引用，在GC时发现虚引用对象，会将{@link PhantomReference}插入{@link ReferenceQueue}。 <br>
 		 * 此时对象未被真正回收，要等到{@link ReferenceQueue}被真正处理后才会被回收。
 		 */
-		PHANTOM;
+		PHANTOM
 	}
 
 }

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertToBeanTest.java
Patch:
@@ -42,8 +42,8 @@ public void beanToMapTest2() {
 		person.setSubName("sub名字");
 
 		Map<String, String> map = Convert.toMap(String.class, String.class, person);
-		Assert.assertEquals(map.get("name"), "测试A11");
-		Assert.assertEquals(map.get("age"), 14);
+		Assert.assertEquals("测试A11", map.get("name"));
+		Assert.assertEquals("14", map.get("age"));
 		Assert.assertEquals("11213232", map.get("openid"));
 	}
 

File: hutool-core/src/test/java/cn/hutool/core/date/DateUtilTest.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.*;
 

File: hutool-core/src/test/java/cn/hutool/core/util/EnumUtilTest.java
Patch:
@@ -52,10 +52,10 @@ public void getNameFieldMapTest() {
 		Assert.assertEquals("type1", enumMap.get("TEST1"));
 	}
 	
-	public static enum TestEnum{
+	public enum TestEnum{
 		TEST1("type1"), TEST2("type2"), TEST3("type3");
 		
-		private TestEnum(String type) {
+		TestEnum(String type) {
 			this.type = type;
 		}
 		

File: hutool-cron/src/main/java/cn/hutool/cron/listener/TaskListener.java
Patch:
@@ -13,20 +13,20 @@ public interface TaskListener {
 	 * 定时任务启动时触发
 	 * @param executor {@link TaskExecutor}
 	 */
-	public void onStart(TaskExecutor executor);
+	void onStart(TaskExecutor executor);
 	
 	/**
 	 * 任务成功结束时触发
 	 * 
 	 * @param executor {@link TaskExecutor}
 	 */
-	public void onSucceeded(TaskExecutor executor);
+	void onSucceeded(TaskExecutor executor);
 
 	/**
 	 * 任务启动失败时触发
 	 * 
 	 * @param executor {@link TaskExecutor}
 	 * @param exception 异常
 	 */
-	public void onFailed(TaskExecutor executor, Throwable exception);
+	void onFailed(TaskExecutor executor, Throwable exception);
 }

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/CronPattern.java
Patch:
@@ -165,7 +165,7 @@ public boolean match(GregorianCalendar calendar, boolean isMatchSecond) {
 
 		boolean eval;
 		for (int i = 0; i < matcherSize; i++) {
-			eval = (isMatchSecond ? secondMatchers.get(i).match(second) : true) // 匹配秒（非秒匹配模式下始终返回true）
+			eval = ((false == isMatchSecond) || secondMatchers.get(i).match(second)) // 匹配秒（非秒匹配模式下始终返回true）
 					&& minuteMatchers.get(i).match(minute)// 匹配分
 					&& hourMatchers.get(i).match(hour)// 匹配时
 					&& isMatchDayOfMonth(dayOfMonthMatchers.get(i), dayOfMonth, month, calendar.isLeapYear(year))// 匹配日
@@ -211,7 +211,7 @@ private static boolean isMatchDayOfMonth(ValueMatcher matcher, int dayOfMonth, i
 	 * @since 4.0.2
 	 */
 	private static boolean isMatch(List<ValueMatcher> matchers, int index, int value) {
-		return (matchers.size() > index) ? matchers.get(index).match(value) : true;
+		return (matchers.size() <= index) || matchers.get(index).match(value);
 	}
 
 	/**
@@ -253,7 +253,7 @@ private void parseSinglePattern(String pattern) {
 		}
 		// 分
 		try {
-			this.minuteMatchers.add(ValueMatcherBuilder.build(parts[0 + offset], MINUTE_VALUE_PARSER));
+			this.minuteMatchers.add(ValueMatcherBuilder.build(parts[offset], MINUTE_VALUE_PARSER));
 		} catch (Exception e) {
 			throw new CronException(e, "Invalid pattern [{}], parsing 'minute' field error!", pattern);
 		}

File: hutool-cron/src/main/java/cn/hutool/cron/pattern/parser/ValueParser.java
Patch:
@@ -19,19 +19,19 @@ public interface ValueParser {
 	 * @param value String值
 	 * @return int
 	 */
-	public int parse(String value);
+	int parse(String value);
 
 	/**
 	 * 返回最小值
 	 * 
 	 * @return 最小值
 	 */
-	public int getMin();
+	int getMin();
 
 	/**
 	 * 返回最大值
 	 * 
 	 * @return 最大值
 	 */
-	public int getMax();
+	int getMax();
 }

File: hutool-cron/src/main/java/cn/hutool/cron/task/InvokeTask.java
Patch:
@@ -61,7 +61,7 @@ public InvokeTask(String classNameWithMethodName) {
 	@Override
 	public void execute() {
 		try {
-			ReflectUtil.invoke(this.obj, this.method, new Object[]{});
+			ReflectUtil.invoke(this.obj, this.method);
 		} catch (UtilException e) {
 			throw new CronException(e.getCause());
 		}

File: hutool-cron/src/main/java/cn/hutool/cron/task/Task.java
Patch:
@@ -18,5 +18,5 @@ public interface Task {
 	 * 作业的具体实现需考虑异常情况，默认情况下任务异常在监听中统一监听处理，如果不加入监听，异常会被忽略<br>
 	 * 因此最好自行捕获异常后处理
 	 */
-	public void execute();
+	void execute();
 }

File: hutool-crypto/src/main/java/cn/hutool/crypto/GlobalBouncyCastleProvider.java
Patch:
@@ -13,7 +13,7 @@ public enum GlobalBouncyCastleProvider {
 	private Provider provider;
 	private static boolean useBouncyCastle = true;
 	
-	private GlobalBouncyCastleProvider() {
+	GlobalBouncyCastleProvider() {
 		try {
 			this.provider = ProviderFactory.createBouncyCastleProvider();
 		} catch (NoClassDefFoundError e) {
@@ -33,7 +33,7 @@ public Provider getProvider() {
 	 * 设置是否使用Bouncy Castle库<br>
 	 * 如果设置为false，表示强制关闭Bouncy Castle而使用JDK
 	 * 
-	 * @param isUseBouncyCastle
+	 * @param isUseBouncyCastle 是否使用BouncyCastle库
 	 * @since 4.5.2
 	 */
 	public static void setUseBouncyCastle(boolean isUseBouncyCastle) {

File: hutool-crypto/src/main/java/cn/hutool/crypto/Mode.java
Patch:
@@ -42,5 +42,5 @@ public enum Mode {
 	/**
 	 * Propagating Cipher Block
 	 */
-	PCBC;
+	PCBC
 }

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/AsymmetricAlgorithm.java
Patch:
@@ -23,7 +23,7 @@ public enum AsymmetricAlgorithm {
 	 * 构造
 	 * @param value 算法字符表示，区分大小写
 	 */
-	private AsymmetricAlgorithm(String value) {
+	AsymmetricAlgorithm(String value) {
 		this.value = value;
 	}
 

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/KeyType.java
Patch:
@@ -7,5 +7,5 @@
  *
  */
 public enum KeyType {
-	PrivateKey, PublicKey;
+	PrivateKey, PublicKey
 }
\ No newline at end of file

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SignAlgorithm.java
Patch:
@@ -40,7 +40,7 @@ public enum SignAlgorithm {
 	 * 
 	 * @param value 算法字符表示，区分大小写
 	 */
-	private SignAlgorithm(String value) {
+	SignAlgorithm(String value) {
 		this.value = value;
 	}
 

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/DigestAlgorithm.java
Patch:
@@ -21,7 +21,7 @@ public enum DigestAlgorithm {
 	 * 
 	 * @param value 算法字符串表示
 	 */
-	private DigestAlgorithm(String value) {
+	DigestAlgorithm(String value) {
 		this.value = value;
 	}
 

File: hutool-crypto/src/main/java/cn/hutool/crypto/symmetric/SymmetricAlgorithm.java
Patch:
@@ -28,7 +28,7 @@ public enum SymmetricAlgorithm {
 	 * 构造
 	 * @param value 算法的字符串表示，区分大小写
 	 */
-	private SymmetricAlgorithm(String value) {
+	SymmetricAlgorithm(String value) {
 		this.value = value;
 	}
 

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/SmTest.java
Patch:
@@ -1,8 +1,5 @@
 package cn.hutool.crypto.test;
 
-import cn.hutool.core.date.DateUtil;
-import cn.hutool.core.date.TimeInterval;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.crypto.KeyUtil;
 import cn.hutool.crypto.Mode;

File: hutool-db/src/main/java/cn/hutool/db/ds/GlobalDSFactory.java
Patch:
@@ -14,7 +14,7 @@ public class GlobalDSFactory {
 	private static volatile DSFactory factory;
 	private static Object lock = new Object();
 
-	/**
+	/*
 	 * 设置在JVM关闭时关闭所有数据库连接
 	 */
 	static {

File: hutool-db/src/main/java/cn/hutool/db/handler/RsHandler.java
Patch:
@@ -28,5 +28,5 @@ public interface RsHandler<T> extends Serializable{
 	 * @return 处理后生成的对象
 	 * @throws SQLException SQL异常
 	 */
-	public T handle(ResultSet rs) throws SQLException;
+	T handle(ResultSet rs) throws SQLException;
 }

File: hutool-db/src/main/java/cn/hutool/db/transaction/TransactionLevel.java
Patch:
@@ -60,7 +60,7 @@ public enum TransactionLevel {
 	/** 事务级别，对应Connection中的常量值 */
 	private int level;
 
-	private TransactionLevel(int level) {
+	TransactionLevel(int level) {
 		this.level = level;
 	}
 

File: hutool-extra/src/main/java/cn/hutool/extra/ftp/FtpMode.java
Patch:
@@ -13,5 +13,5 @@ public enum FtpMode {
 	/** 主动模式 */
 	Active,
 	/** 被动模式 */
-	Passive;
+	Passive
 }

File: hutool-extra/src/main/java/cn/hutool/extra/mail/GlobalMailAccount.java
Patch:
@@ -16,7 +16,7 @@ public enum GlobalMailAccount {
 	/**
 	 * 构造
 	 */
-	private GlobalMailAccount() {
+	GlobalMailAccount() {
 		mailAccount = createDefaultAccount();
 	}
 

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/ChannelType.java
Patch:
@@ -34,7 +34,7 @@ public enum ChannelType {
 	 * 
 	 * @param value 类型值
 	 */
-	private ChannelType(String value) {
+	ChannelType(String value) {
 		this.value = value;
 	}
 

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/Sftp.java
Patch:
@@ -429,12 +429,12 @@ public void close() throws IOException {
 	 * @author looly
 	 *
 	 */
-	public static enum Mode {
+	public enum Mode {
 		/** 完全覆盖模式，这是JSch的默认文件传输模式，即如果目标文件已经存在，传输的文件将完全覆盖目标文件，产生新的文件。 */
 		OVERWRITE,
 		/** 恢复模式，如果文件已经传输一部分，这时由于网络或其他任何原因导致文件传输中断，如果下一次传输相同的文件，则会从上一次中断的地方续传。 */
 		RESUME,
 		/** 追加模式，如果目标文件已存在，传输的文件将在目标文件后追加。 */
-		APPEND;
+		APPEND
 	}
 }

File: hutool-extra/src/main/java/cn/hutool/extra/template/TemplateConfig.java
Patch:
@@ -132,7 +132,7 @@ public void setResourceMode(ResourceMode resourceMode) {
 	 * 
 	 * @author looly
 	 */
-	public static enum ResourceMode {
+	public enum ResourceMode {
 		/** 从ClassPath加载模板 */
 		CLASSPATH,
 		/** 从File目录加载模板 */
@@ -142,7 +142,7 @@ public static enum ResourceMode {
 		/** 从模板文本加载模板 */
 		STRING,
 		/** 复合加载模板（分别从File、ClassPath、Web-root、String方式尝试查找模板） */
-		COMPOSITE;
+		COMPOSITE
 	}
 
 	@Override
@@ -185,5 +185,5 @@ public boolean equals(Object obj) {
 			return false;
 		}
 		return true;
-	};
+	}
 }

File: hutool-http/src/main/java/cn/hutool/http/ContentType.java
Patch:
@@ -24,7 +24,7 @@ public enum ContentType {
 	TEXT_XML("text/xml");
 
 	private String value;
-	private ContentType(String value) {
+	ContentType(String value) {
 		this.value = value;
 	}
 

File: hutool-http/src/main/java/cn/hutool/http/GlobalHeaders.java
Patch:
@@ -26,7 +26,7 @@ public enum GlobalHeaders {
 	/**
 	 * 构造
 	 */
-	private GlobalHeaders() {
+	GlobalHeaders() {
 		putDefault(false);
 	}
 
@@ -110,7 +110,7 @@ public GlobalHeaders header(String name, String value, boolean isOverride) {
 		if (null != name && null != value) {
 			final List<String> values = headers.get(name.trim());
 			if (isOverride || CollectionUtil.isEmpty(values)) {
-				final ArrayList<String> valueList = new ArrayList<String>();
+				final ArrayList<String> valueList = new ArrayList<>();
 				valueList.add(value);
 				headers.put(name.trim(), valueList);
 			} else {

File: hutool-http/src/main/java/cn/hutool/http/Header.java
Patch:
@@ -64,7 +64,7 @@ public enum Header {
 	LOCATION("Location");
 	
 	private String value;
-	private Header(String value) {
+	Header(String value) {
 		this.value = value;
 	}
 	

File: hutool-http/src/main/java/cn/hutool/http/Method.java
Patch:
@@ -6,5 +6,5 @@
  *
  */
 public enum Method {
-	GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE, CONNECT, PATCH;
+	GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE, CONNECT, PATCH
 }

File: hutool-http/src/main/java/cn/hutool/http/webservice/SoapProtocol.java
Patch:
@@ -19,7 +19,7 @@ public enum SoapProtocol {
 	 * 
 	 * @param value {@link SOAPConstants} 中的协议版本值
 	 */
-	private SoapProtocol(String value) {
+	SoapProtocol(String value) {
 		this.value = value;
 	}
 

File: hutool-json/src/main/java/cn/hutool/json/JSONString.java
Patch:
@@ -14,5 +14,5 @@ public interface JSONString {
 	 * 
 	 * @return JSON字符串
 	 */
-	public String toJSONString();
+	String toJSONString();
 }

File: hutool-json/src/test/java/cn/hutool/json/JSONObjectTest.java
Patch:
@@ -354,7 +354,7 @@ public void getStrTest() {
 		Assert.assertEquals("defaultBBB", bbb);
 	}
 
-	public static enum TestEnum {
+	public enum TestEnum {
 		TYPE_A, TYPE_B
 	}
 

File: hutool-json/src/test/java/cn/hutool/json/test/bean/report/EnvSettingInfo.java
Patch:
@@ -17,7 +17,7 @@ public class EnvSettingInfo {
 	private String hubRemoteUrl;
 	
 	private String reportFolder = "/report";
-	private String screenshotFolder = "/screenshot";;
+	private String screenshotFolder = "/screenshot";
 
 	private String elementFolder = "/config/element/";
 	private String suiteFolder = "/config/suite/";

File: hutool-log/src/main/java/cn/hutool/log/Log.java
Patch:
@@ -18,7 +18,7 @@ public interface Log extends TraceLog, DebugLog, InfoLog, WarnLog, ErrorLog {
 	/**
 	 * @return 日志对象的Name
 	 */
-	public String getName();
+	String getName();
 
 	/**
 	 * 是否开启指定日志

File: hutool-poi/src/main/java/cn/hutool/poi/excel/cell/CellEditor.java
Patch:
@@ -14,5 +14,5 @@ public interface CellEditor {
 	 * @param value 单元格值
 	 * @return 编辑后的对象
 	 */
-	public Object edit(Cell cell, Object value);
+	Object edit(Cell cell, Object value);
 }

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/CellDataType.java
Patch:
@@ -32,7 +32,7 @@ public enum CellDataType {
 	 * 
 	 * @param name 类型属性值
 	 */
-	private CellDataType(String name) {
+	CellDataType(String name) {
 		this.name = name;
 	}
 

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/BigExcelWriteTest.java
Patch:
@@ -1,6 +1,3 @@
-/**
- * 
- */
 package cn.hutool.poi.excel.test;
 
 import java.util.ArrayList;

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelWriteTest.java
Patch:
@@ -1,6 +1,3 @@
-/**
- * 
- */
 package cn.hutool.poi.excel.test;
 
 import java.util.ArrayList;

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioServer.java
Patch:
@@ -143,7 +143,7 @@ public AioServer accept() {
 	 * @return 服务是否开启状态
 	 */
 	public boolean isOpen() {
-		return (null == this.channel) ? false : this.channel.isOpen();
+		return (null != this.channel) && this.channel.isOpen();
 	}
 
 	/**

File: hutool-socket/src/main/java/cn/hutool/socket/aio/AioSession.java
Patch:
@@ -153,7 +153,7 @@ public AioSession write(ByteBuffer data, CompletionHandler<Integer, AioSession>
 	 * @return 会话是否打开状态
 	 */
 	public boolean isOpen() {
-		return (null == this.channel) ? false : this.channel.isOpen();
+		return (null != this.channel) && this.channel.isOpen();
 	}
 
 	/**

File: hutool-socket/src/main/java/cn/hutool/socket/nio/Operation.java
Patch:
@@ -29,7 +29,7 @@ public enum Operation {
 	 * @see SelectionKey#OP_CONNECT
 	 * @see SelectionKey#OP_ACCEPT
 	 */
-	private Operation(int value) {
+	Operation(int value) {
 		this.value = value;
 	}
 

File: hutool-system/src/main/java/cn/hutool/system/JavaInfo.java
Patch:
@@ -88,7 +88,7 @@ public final int getVersionInt() {
 	 * 
 	 * @return Java版本的<code>float</code>值或<code>0</code>
 	 */
-	private final float getJavaVersionAsFloat() {
+	private float getJavaVersionAsFloat() {
 		if (JAVA_VERSION == null) {
 			return 0f;
 		}
@@ -105,7 +105,7 @@ private final float getJavaVersionAsFloat() {
 	 * 
 	 * @return Java版本的<code>int</code>值或<code>0</code>
 	 */
-	private final int getJavaVersionAsInt() {
+	private int getJavaVersionAsInt() {
 		if (JAVA_VERSION == null) {
 			return 0;
 		}
@@ -324,7 +324,7 @@ public final boolean isJava12() {
 	 * 
 	 * @return 如果版本匹配，则返回<code>true</code>
 	 */
-	private final boolean getJavaVersionMatches(String versionPrefix) {
+	private boolean getJavaVersionMatches(String versionPrefix) {
 		if (JAVA_VERSION == null) {
 			return false;
 		}

File: hutool-system/src/main/java/cn/hutool/system/OsInfo.java
Patch:
@@ -350,7 +350,7 @@ public final boolean isWindows10() {
 	 * 
 	 * @return 如果匹配，则返回<code>true</code>
 	 */
-	private final boolean getOSMatches(String osNamePrefix) {
+	private boolean getOSMatches(String osNamePrefix) {
 		if (OS_NAME == null) {
 			return false;
 		}
@@ -366,7 +366,7 @@ private final boolean getOSMatches(String osNamePrefix) {
 	 * 
 	 * @return 如果匹配，则返回<code>true</code>
 	 */
-	private final boolean getOSMatches(String osNamePrefix, String osVersionPrefix) {
+	private boolean getOSMatches(String osNamePrefix, String osVersionPrefix) {
 		if ((OS_NAME == null) || (OS_VERSION == null)) {
 			return false;
 		}

File: hutool-poi/src/main/java/cn/hutool/poi/excel/sax/Excel03SaxReader.java
Patch:
@@ -299,7 +299,7 @@ private void processLastCell(LastCellOfRowDummyRecord lastCell) {
 		// 每行结束时， 调用handle() 方法
 		this.rowHandler.handle(curRid, lastCell.getRow(), this.rowCellList);
 		// 清空行Cache
-		this.rowCellList.clear();
+		this.rowCellList = new ArrayList<>(this.rowCellList.size());
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/date/StopWatch.java
Patch:
@@ -312,7 +312,7 @@ public String shortSummary() {
 	public String prettyPrint() {
 		StringBuilder sb = new StringBuilder(shortSummary());
 		sb.append(FileUtil.getLineSeparator());
-		if (null != this.taskList) {
+		if (null == this.taskList) {
 			sb.append("No task info kept");
 		} else {
 			sb.append("---------------------------------------------").append(FileUtil.getLineSeparator());

File: hutool-core/src/main/java/cn/hutool/core/convert/impl/MapConverter.java
Patch:
@@ -52,7 +52,7 @@ public MapConverter(Type mapType, Type keyType, Type valueType) {
 	@Override
 	@SuppressWarnings({ "rawtypes", "unchecked" })
 	protected Map<?, ?> convertInternal(Object value) {
-		Map map = null;
+		final Map map;
 		if (value instanceof Map) {
 			final Type[] typeArguments = TypeUtil.getTypeArguments(value.getClass());
 			if (null != typeArguments //

File: hutool-core/src/main/java/cn/hutool/core/date/SystemClock.java
Patch:
@@ -25,7 +25,7 @@ public class SystemClock {
 
 	/**
 	 * 构造
-	 * @param period
+	 * @param period 时钟更新间隔，单位毫秒
 	 */
 	private SystemClock(long period) {
 		this.period = period;

File: hutool-extra/src/test/java/cn/hutool/extra/mail/MailTest.java
Patch:
@@ -40,7 +40,7 @@ public void sendWithImageTest() {
 	}
 	
 	@Test
-	@Ignore
+//	@Ignore
 	public void sendHtmlTest() {
 		MailUtil.send("hutool@foxmail.com", "测试", "<h1>邮件来自Hutool测试</h1>", true);
 	}

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -25,6 +25,7 @@ public class MailAccount implements Serializable {
 	private static final String SMTP_TIMEOUT = "mail.smtp.timeout";
 
 	private static final String STARTTTLS_ENABLE = "mail.smtp.starttls.enable";
+    private static final String SSL_ENABLE = "mail.smtp.ssl.enable";
 	private static final String SOCKEY_FACTORY = "mail.smtp.socketFactory.class";
 	private static final String SOCKEY_FACTORY_FALLBACK = "mail.smtp.socketFactory.fallback";
 	private static final String SOCKEY_FACTORY_PORT = "smtp.socketFactory.port";
@@ -440,6 +441,7 @@ public Properties getSmtpProps() {
 		
 		// SSL
 		if(null != this.sslEnable && this.sslEnable) {
+            p.put(SSL_ENABLE, sslEnable);
 			p.put(SOCKEY_FACTORY, socketFactoryClass);
 			p.put(SOCKEY_FACTORY_FALLBACK, String.valueOf(this.socketFactoryFallback));
 			p.put(SOCKEY_FACTORY_PORT, String.valueOf(this.socketFactoryPort));

File: hutool-extra/src/main/java/cn/hutool/extra/mail/MailAccount.java
Patch:
@@ -25,6 +25,7 @@ public class MailAccount implements Serializable {
 	private static final String SMTP_TIMEOUT = "mail.smtp.timeout";
 
 	private static final String STARTTTLS_ENABLE = "mail.smtp.starttls.enable";
+    private static final String SSL_ENABLE = "mail.smtp.ssl.enable";
 	private static final String SOCKEY_FACTORY = "mail.smtp.socketFactory.class";
 	private static final String SOCKEY_FACTORY_FALLBACK = "mail.smtp.socketFactory.fallback";
 	private static final String SOCKEY_FACTORY_PORT = "smtp.socketFactory.port";
@@ -440,6 +441,7 @@ public Properties getSmtpProps() {
 		
 		// SSL
 		if(null != this.sslEnable && this.sslEnable) {
+            p.put(SSL_ENABLE, sslEnable);
 			p.put(SOCKEY_FACTORY, socketFactoryClass);
 			p.put(SOCKEY_FACTORY_FALLBACK, String.valueOf(this.socketFactoryFallback));
 			p.put(SOCKEY_FACTORY_PORT, String.valueOf(this.socketFactoryPort));

File: hutool-core/src/main/java/cn/hutool/core/text/csv/CsvParser.java
Patch:
@@ -189,7 +189,7 @@ private List<String> readLine() throws IORuntimeException {
 
 					if (localPreChar == config.fieldSeparator || localCurrentField.hasContent()) {
 						//剩余部分作为一个字段
-						currentFields.add(localCurrentField.toStringAndReset());
+						currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(), config.textDelimiter));
 					}
 					break;
 				}

File: hutool-db/src/main/java/cn/hutool/db/DbUtil.java
Patch:
@@ -257,6 +257,6 @@ public static void setShowSqlGlobal(Setting setting) {
 	 * @since 4.1.7
 	 */
 	public static void setShowSqlGlobal(boolean isShowSql, boolean isFormatSql, boolean isShowParams, Level level) {
-		SqlLog.INSTASNCE.init(isShowSql, isFormatSql, isShowParams, level);
+		SqlLog.INSTANCE.init(isShowSql, isFormatSql, isShowParams, level);
 	}
 }

File: hutool-core/src/main/java/cn/hutool/core/convert/ConverterRegistry.java
Patch:
@@ -75,7 +75,7 @@ public class ConverterRegistry implements Serializable{
 	/** 默认类型转换器 */
 	private Map<Type, Converter<?>> defaultConverterMap;
 	/** 用户自定义类型转换器 */
-	private Map<Type, Converter<?>> customConverterMap;
+	private volatile Map<Type, Converter<?>> customConverterMap;
 
 	/** 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例 没有绑定关系，而且只有被调用到才会装载，从而实现了延迟加载 */
 	private static class SingletonHolder {

File: hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
Patch:
@@ -55,7 +55,6 @@
 import cn.hutool.core.io.file.Tailer;
 import cn.hutool.core.io.resource.ResourceUtil;
 import cn.hutool.core.lang.Assert;
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.CharUtil;
 import cn.hutool.core.util.CharsetUtil;

File: hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java
Patch:
@@ -106,7 +106,7 @@ public static Process exec(String... cmds) {
 	 * @since 4.1.6
 	 */
 	public static Process exec(String[] envp, String... cmds) {
-		return exec(envp, cmds);
+		return exec(envp, null, cmds);
 	}
 
 	/**

File: hutool-core/src/main/java/cn/hutool/core/collection/ArrayIter.java
Patch:
@@ -18,11 +18,11 @@ public class ArrayIter<E> implements Iterator<E>, Iterable<E>, Serializable{
 	/** 数组 */
 	private Object array;
 	/** 起始位置 */
-	private int startIndex = 0;
+	private int startIndex;
 	/** 结束位置 */
-	private int endIndex = 0;
+	private int endIndex;
 	/** 当前位置 */
-	private int index = 0;
+	private int index;
 
 	/**
 	 * 构造

File: hutool-core/src/main/java/cn/hutool/core/collection/BoundedPriorityQueue.java
Patch:
@@ -35,7 +35,7 @@ public BoundedPriorityQueue(int capacity, final Comparator<? super E> comparator
 
 			@Override
 			public int compare(E o1, E o2) {
-				int cResult = 0;
+				int cResult;
 				if(comparator != null) {
 					cResult = comparator.compare(o1, o2);
 				}else {

File: hutool-extra/src/test/java/cn/hutool/extra/template/TemplateUtilTest.java
Patch:
@@ -101,7 +101,7 @@ public void enjoyEngineTest() {
 		Template template = engine.getTemplate("#(x + 123)");
 		String result = template.render(Dict.create().set("x", 1));
 		Assert.assertEquals("124", result);
-		
+
 		//ClassPath模板
 		engine = new EnjoyEngine(new TemplateConfig("templates", ResourceMode.CLASSPATH));
 		template = engine.getTemplate("enjoy_test.etl");

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/Digester.java
Patch:
@@ -259,7 +259,7 @@ public String digestHex(File file) {
 	 * @return 摘要bytes
 	 */
 	public byte[] digest(byte[] data) {
-		byte[] result = null;
+		byte[] result;
 		if (this.saltPosition <= 0) {
 			// 加盐在开头，自动忽略空盐值
 			result = doDigest(this.salt, data);

File: hutool-crypto/src/main/java/cn/hutool/crypto/digest/mac/BCHMacEngine.java
Patch:
@@ -67,7 +67,7 @@ public byte[] digest(InputStream data, int bufferLength) {
 		}
 		final byte[] buffer = new byte[bufferLength];
 
-		byte[] result = null;
+		byte[] result;
 		try {
 			int read = data.read(buffer, 0, bufferLength);
 

File: hutool-core/src/test/java/cn/hutool/core/convert/ConvertTest.java
Patch:
@@ -7,7 +7,6 @@
 import org.junit.Test;
 
 import cn.hutool.core.date.DateUtil;
-import cn.hutool.core.lang.Console;
 
 /**
  * 类型转换工具单元测试
@@ -28,7 +27,7 @@ public void toStrTest() {
 		int a = 1;
 		long[] b = { 1, 2, 3, 4, 5 };
 		
-		Console.log(Convert.convert(String.class, b));
+		Assert.assertEquals("[1, 2, 3, 4, 5]", Convert.convert(String.class, b));
 
 		String aStr = Convert.toStr(a);
 		Assert.assertEquals("1", aStr);

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/RSATest.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.Assert;
 import org.junit.Test;
 
-import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.HexUtil;
 import cn.hutool.core.util.StrUtil;
@@ -60,7 +59,6 @@ public void rsaTest() {
 
 		// 公钥加密，私钥解密
 		byte[] encrypt = rsa.encrypt(StrUtil.bytes("我是一段测试aaaa", CharsetUtil.CHARSET_UTF_8), KeyType.PublicKey);
-		Console.log(HexUtil.encodeHexStr(encrypt));
 		
 		byte[] decrypt = rsa.decrypt(encrypt, KeyType.PrivateKey);
 		Assert.assertEquals("我是一段测试aaaa", StrUtil.str(decrypt, CharsetUtil.CHARSET_UTF_8));

File: hutool-core/src/main/java/cn/hutool/core/util/RandomUtil.java
Patch:
@@ -14,6 +14,7 @@
 import java.util.Set;
 import java.util.concurrent.ThreadLocalRandom;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.date.DateField;
 import cn.hutool.core.date.DateTime;
 import cn.hutool.core.date.DateUtil;
@@ -355,13 +356,13 @@ public static <T> List<T> randomEles(List<T> list, int count) {
 	 * @throws IllegalArgumentException 需要的长度大于给定集合非重复总数
 	 */
 	public static <T> Set<T> randomEleSet(Collection<T> collection, int count) {
-		ArrayList<T> source = new ArrayList<>(new HashSet<>(collection));
+		final ArrayList<T> source = CollUtil.distinct(collection);
 		if (count > source.size()) {
 			throw new IllegalArgumentException("Count is larger than collection distinct size !");
 		}
 
 		final HashSet<T> result = new HashSet<T>(count);
-		int limit = collection.size();
+		int limit = source.size();
 		while (result.size() < count) {
 			result.add(randomEle(source, limit));
 		}

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -1136,7 +1136,8 @@ private void appendPart(String formFieldName, Resource resource, OutputStream ou
 			final StringBuilder builder = StrUtil.builder().append("--").append(BOUNDARY).append(StrUtil.CRLF);
 			final String fileName = resource.getName();
 			builder.append(StrUtil.format(CONTENT_DISPOSITION_FILE_TEMPLATE, formFieldName, ObjectUtil.defaultIfNull(fileName, formFieldName)));
-			builder.append(StrUtil.format(CONTENT_TYPE_FILE_TEMPLATE, HttpUtil.getMimeType(fileName)));
+			// 根据name的扩展名指定互联网媒体类型，默认二进制流数据
+			builder.append(StrUtil.format(CONTENT_TYPE_FILE_TEMPLATE, HttpUtil.getMimeType(fileName, "application/octet-stream")));
 			IoUtil.write(out, this.charset, false, builder);
 			InputStream in = null;
 			try {

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelWriteTest.java
Patch:
@@ -75,7 +75,7 @@ public void writeTest() {
 			rows.add(ObjectUtil.clone(row1));
 		}
 
-		String filePath = "e:/writeTest.xlsx";
+		String filePath = "f:/test/writeTest.xlsx";
 		FileUtil.del(filePath);
 		// 通过工具类创建writer
 		ExcelWriter writer = ExcelUtil.getWriter(filePath);

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -774,7 +774,7 @@ public static void putSerializer(Type type, JSONObjectSerializer<?> serializer)
 	 * 加入自定义的反序列化器
 	 * 
 	 * @param type 对象类型
-	 * @param serializer 反序列化器实现
+	 * @param deserializer 反序列化器实现
 	 * @see GlobalSerializeMapping#put(Type, JSONDeserializer)
 	 * @since 4.6.5
 	 */

File: hutool-json/src/main/java/cn/hutool/json/serialize/GlobalSerializeMapping.java
Patch:
@@ -55,7 +55,7 @@ synchronized private static void putInternal(Type type, JSONSerializer<? extends
 	 * 加入自定义的反序列化器
 	 * 
 	 * @param type 对象类型
-	 * @param serializer 反序列化器实现
+	 * @param deserializer 反序列化器实现
 	 */
 	synchronized public static void put(Type type, JSONDeserializer<?> deserializer) {
 		if(null == deserializerMap) {

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -534,9 +534,9 @@ public ExcelWriter setHeaderOrFooter(String text, Align align, boolean isFooter)
 	/**
 	 * 增加下拉列表
 	 * 
-	 * @param regions {@link CellRangeAddressList} 指定下拉列表所占的单元格范围
 	 * @param x x坐标，列号，从0开始
 	 * @param y y坐标，行号，从0开始
+	 * @param selectList 下拉列表
 	 * @return this
 	 * @since 4.6.2
 	 */

File: hutool-db/src/main/java/cn/hutool/db/sql/Condition.java
Patch:
@@ -118,7 +118,7 @@ public Condition(String field, String value, LikeType likeType) {
 		this.operator = OPERATOR_LIKE;
 		this.value = SqlUtil.buildLikeValue(value, likeType, false);
 	}
-	// --------------------------------------------------------------- Constructor start
+	// --------------------------------------------------------------- Constructor end
 
 	// --------------------------------------------------------------- Getters and Setters start
 	/**

File: hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/AsymmetricAlgorithm.java
Patch:
@@ -14,7 +14,7 @@ public enum AsymmetricAlgorithm {
 	RSA_ECB_PKCS1("RSA/ECB/PKCS1Padding"), 
 	/** RSA算法，此算法用了RSA/None/NoPadding */
 	RSA_None("RSA/None/NoPadding"), 
-	/** EC算法 */
+	/** EC（Elliptic Curve）算法 */
 	EC("EC");
 
 	private String value;

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/RSATest.java
Patch:
@@ -5,6 +5,7 @@
 import org.junit.Assert;
 import org.junit.Test;
 
+import cn.hutool.core.lang.Console;
 import cn.hutool.core.util.CharsetUtil;
 import cn.hutool.core.util.HexUtil;
 import cn.hutool.core.util.StrUtil;
@@ -59,6 +60,8 @@ public void rsaTest() {
 
 		// 公钥加密，私钥解密
 		byte[] encrypt = rsa.encrypt(StrUtil.bytes("我是一段测试aaaa", CharsetUtil.CHARSET_UTF_8), KeyType.PublicKey);
+		Console.log(HexUtil.encodeHexStr(encrypt));
+		
 		byte[] decrypt = rsa.decrypt(encrypt, KeyType.PrivateKey);
 		Assert.assertEquals("我是一段测试aaaa", StrUtil.str(decrypt, CharsetUtil.CHARSET_UTF_8));
 

File: hutool-crypto/src/test/java/cn/hutool/crypto/test/SymmetricTest.java
Patch:
@@ -30,7 +30,7 @@ public void aesTest() {
 
 		// 随机生成密钥
 		byte[] key = KeyUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded();
-
+		
 		// 构建
 		SymmetricCrypto aes = new SymmetricCrypto(SymmetricAlgorithm.AES, key);
 

File: hutool-core/src/main/java/cn/hutool/core/date/DateTime.java
Patch:
@@ -190,7 +190,7 @@ public DateTime(String dateStr, DateFormat dateFormat) {
 	public DateTime(String dateStr, DateParser dateParser) {
 		this(parse(dateStr, dateParser), dateParser.getTimeZone());
 	}
-
+	
 	// -------------------------------------------------------------------- Constructor end
 
 	// -------------------------------------------------------------------- offset start

File: hutool-json/src/main/java/cn/hutool/json/JSONUtil.java
Patch:
@@ -673,7 +673,7 @@ public static boolean isJson(String str) {
 	}
 
 	/**
-	 * 是否为JSONObject字符串，首尾都为大括号或中括号判定为JSON字符串
+	 * 是否为JSONObject字符串，首尾都为大括号判定为JSONObject字符串
 	 * 
 	 * @param str 字符串
 	 * @return 是否为JSON字符串
@@ -687,7 +687,7 @@ public static boolean isJsonObj(String str) {
 	}
 
 	/**
-	 * 是否为JSONObject字符串，首尾都为大括号或中括号判定为JSON字符串
+	 * 是否为JSONArray字符串，首尾都为中括号判定为JSONArray字符串
 	 * 
 	 * @param str 字符串
 	 * @return 是否为JSON字符串

File: hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java
Patch:
@@ -3770,7 +3770,7 @@ public static Object swap(Object array, int index1, int index2) {
 	}
 	
 	/**
-	 * 是否存在一个以上{@code null}或空对象，通过{@link ObjectUtil#isEmpty(Object)} 判断元素
+	 * 计算{@code null}或空元素对象的个数，通过{@link ObjectUtil#isEmpty(Object)} 判断元素
 	 *
 	 * @param args 被检查的对象,一个或者多个
 	 * @return 存在{@code null}的数量
@@ -3781,7 +3781,7 @@ public static int emptyCount(Object... args) {
 		if (isNotEmpty(args)) {
 			for (Object element : args) {
 				if (ObjectUtil.isEmpty(element)) {
-					return count++;
+					count++;
 				}
 			}
 		}

File: hutool-core/src/main/java/cn/hutool/core/lang/Dict.java
Patch:
@@ -302,7 +302,6 @@ public Object getObj(String key) {
 	 * 
 	 * @param <T> 值类型
 	 * @param attr 字段名
-	 * @param defaultValue 默认值
 	 * @return 字段值
 	 * @since 4.6.3
 	 */

File: hutool-core/src/main/java/cn/hutool/core/map/MapUtil.java
Patch:
@@ -62,7 +62,8 @@ public static boolean isNotEmpty(Map<?, ?> map) {
 	 * 如果提供的集合为{@code null}，返回一个不可变的默认空集合，否则返回原集合<br>
 	 * 空集合使用{@link Collections#emptyMap()}
 	 *
-	 * @param <T> 集合元素类型
+	 * @param <K> 键类型
+	 * @param <V> 值类型
 	 * @param set 提供的集合，可能为null
 	 * @return 原集合，若为null返回空集合
 	 * @since 4.6.3

File: hutool-extra/src/main/java/cn/hutool/extra/ssh/JschUtil.java
Patch:
@@ -285,7 +285,7 @@ public static String exec(Session session, String cmd, Charset charset, OutputSt
 		} catch (IOException e) {
 			throw new IORuntimeException(e);
 		} catch (JSchException e) {
-			throw new IORuntimeException(e);
+			throw new JschRuntimeException(e);
 		} finally {
 			IoUtil.close(in);
 			close(channel);

File: hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelWriter.java
Patch:
@@ -507,7 +507,7 @@ public ExcelWriter addSelect(int x, int y, String... selectList) {
 	 * 增加下拉列表
 	 * 
 	 * @param regions {@link CellRangeAddressList} 指定下拉列表所占的单元格范围
-	 * @param 
+	 * @param selectList 下拉列表内容
 	 * @return this
 	 * @since 4.6.2
 	 */

File: hutool-poi/src/test/java/cn/hutool/poi/excel/test/ExcelWriteTest.java
Patch:
@@ -124,7 +124,7 @@ public void mergeTest() {
 	}
 
 	@Test
-//	@Ignore
+	@Ignore
 	public void mergeTest2() {
 		Map<String, Object> row1 = new LinkedHashMap<>();
 		row1.put("姓名", "张三");

File: hutool-http/src/main/java/cn/hutool/http/HttpRequest.java
Patch:
@@ -288,7 +288,8 @@ public HttpRequest setMethod(Method method) {
 	}
 
 	/**
-	 * 获取{@link HttpConnection}
+	 * 获取{@link HttpConnection}<br>
+	 * 在{@link #execute()} 执行前此对象为null
 	 * 
 	 * @return {@link HttpConnection}
 	 * @since 4.2.2

File: hutool-extra/src/main/java/cn/hutool/extra/template/TemplateEngine.java
Patch:
@@ -10,7 +10,7 @@ public interface TemplateEngine {
 	/**
 	 * 获取模板
 	 * 
-	 * @param resource 资源，根据事先不同，此资源可以是模板本身，也可以是模板的相对路径
+	 * @param resource 资源，根据实现不同，此资源可以是模板本身，也可以是模板的相对路径
 	 * @return 模板实现
 	 */
 	Template getTemplate(String resource);

