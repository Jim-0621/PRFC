File: refresh-header/src/main/java/com/scwang/smart/refresh/header/BezierCircleHeader.java
Patch:
@@ -17,9 +17,9 @@
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
+import com.scwang.smart.refresh.layout.constant.SpinnerStyle;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 
 /**
  * CircleRefresh

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/DeliveryHeader.java
Patch:
@@ -15,9 +15,9 @@
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.constant.RefreshState;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
+import com.scwang.smart.refresh.layout.constant.SpinnerStyle;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 
 /**
  * Refresh your delivery!

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/DropBoxHeader.java
Patch:
@@ -23,10 +23,10 @@
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.constant.RefreshState;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
+import com.scwang.smart.refresh.layout.constant.SpinnerStyle;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 import com.scwang.smartrefresh.header.R;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
 
 /**
  * DropBoxRefresh

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/FlyRefreshHeader.java
Patch:
@@ -18,8 +18,8 @@
 import com.scwang.smart.refresh.header.flyrefresh.MountainSceneView;
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 
 /**
  * 纸飞机和山丘

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/FunGameBattleCityHeader.java
Patch:
@@ -11,7 +11,7 @@
 
 import com.scwang.smart.refresh.header.fungame.FunGameView;
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 
 import java.util.LinkedList;
 import java.util.Queue;

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/PhoenixHeader.java
Patch:
@@ -17,13 +17,13 @@
 import android.view.animation.Transformation;
 
 import com.scwang.smart.drawable.PathsDrawable;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
+import com.scwang.smart.refresh.layout.constant.SpinnerStyle;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 import com.scwang.smartrefresh.header.R;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
 
 /**
  * Phoenix

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/StoreHouseHeader.java
Patch:
@@ -17,12 +17,12 @@
 
 import com.scwang.smart.refresh.header.storehouse.StoreHouseBarItem;
 import com.scwang.smart.refresh.header.storehouse.StoreHousePath;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 import com.scwang.smartrefresh.header.R;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
 
 import java.util.ArrayList;
 import java.util.List;

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/TaurusHeader.java
Patch:
@@ -17,13 +17,13 @@
 import android.view.animation.Transformation;
 
 import com.scwang.smart.drawable.PathsDrawable;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
+import com.scwang.smart.refresh.layout.constant.SpinnerStyle;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 import com.scwang.smartrefresh.header.R;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
 
 import java.util.HashMap;
 import java.util.Map;

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/flyrefresh/FlyView.java
Patch:
@@ -4,7 +4,7 @@
 import android.util.AttributeSet;
 
 import com.scwang.smart.drawable.view.PathsView;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 
 /**
  * 纸飞机视图

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/fungame/FunGameBase.java
Patch:
@@ -9,13 +9,13 @@
 import android.view.View;
 
 import com.scwang.smart.refresh.layout.api.RefreshContent;
+import com.scwang.smart.refresh.layout.api.RefreshHeader;
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.constant.RefreshState;
 import com.scwang.smart.refresh.layout.simple.SimpleComponent;
-import com.scwang.smartrefresh.layout.api.RefreshHeader;
-import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
+import com.scwang.smart.refresh.layout.constant.SpinnerStyle;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 
 import static android.view.MotionEvent.ACTION_MASK;
 

File: refresh-header/src/main/java/com/scwang/smart/refresh/header/fungame/FunGameView.java
Patch:
@@ -25,8 +25,8 @@
 import com.scwang.smart.refresh.layout.api.RefreshKernel;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.constant.RefreshState;
+import com.scwang.smart.refresh.layout.util.SmartUtil;
 import com.scwang.smartrefresh.header.R;
-import com.scwang.smartrefresh.layout.util.SmartUtil;
 
 import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
 

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/BezierCircleHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * CircleRefresh
  * Created by scwang on 2018/7/18.
  * from https://github.com/tuesda/CircleRefreshLayout
  */
-public class BezierCircleHeader extends com.scwang.smart.refresh.header.BezierCircleHeader {
+public class BezierCircleHeader extends com.scwang.smart.refresh.header.BezierCircleHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public BezierCircleHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/DeliveryHeader.java
Patch:
@@ -4,12 +4,14 @@
 import android.support.annotation.Nullable;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * Refresh your delivery!
  * Created by scwang on 2017/6/25.
  * design https://dribbble.com/shots/2753803-Refresh-your-delivery
  */
-public class DeliveryHeader extends com.scwang.smart.refresh.header.DeliveryHeader {
+public class DeliveryHeader extends com.scwang.smart.refresh.header.DeliveryHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public DeliveryHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/DropBoxHeader.java
Patch:
@@ -4,12 +4,14 @@
 import android.support.annotation.Nullable;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * DropBoxRefresh
  * Created by scwang on 2017/6/24.
  * design https://dribbble.com/shots/3470499-DropBox-Refresh
  */
-public class DropBoxHeader extends com.scwang.smart.refresh.header.DropBoxHeader {
+public class DropBoxHeader extends com.scwang.smart.refresh.header.DropBoxHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public DropBoxHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/FlyRefreshHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * 纸飞机和山丘
  * Created by scwang on 2017/6/6.
  * from https://github.com/race604/FlyRefresh
  */
-public class FlyRefreshHeader extends com.scwang.smart.refresh.header.FlyRefreshHeader {
+public class FlyRefreshHeader extends com.scwang.smart.refresh.header.FlyRefreshHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public FlyRefreshHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/FunGameBattleCityHeader.java
Patch:
@@ -3,13 +3,15 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 import java.util.Random;
 
 /**
  * Created by scwang on 2018/3/09.
  * from https://github.com/Hitomis/FunGameRefresh
  */
-public class FunGameBattleCityHeader extends com.scwang.smart.refresh.header.FunGameBattleCityHeader {
+public class FunGameBattleCityHeader extends com.scwang.smart.refresh.header.FunGameBattleCityHeader implements RefreshHeader {
 
     //<editor-fold desc="初始方法">
     public FunGameBattleCityHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/FunGameHitBlockHeader.java
Patch:
@@ -3,11 +3,13 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * Created by scwang on 2018/2/29.
  * from https://github.com/Hitomis/FunGameRefresh
  */
-public class FunGameHitBlockHeader extends com.scwang.smart.refresh.header.FunGameHitBlockHeader {
+public class FunGameHitBlockHeader extends com.scwang.smart.refresh.header.FunGameHitBlockHeader implements RefreshHeader {
 
     //<editor-fold desc="初始方法">
     public FunGameHitBlockHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/MaterialHeader.java
Patch:
@@ -3,11 +3,13 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * Material 主题下拉头
  * Created by scwang on 2017/6/2.
  */
-public class MaterialHeader extends com.scwang.smart.refresh.header.MaterialHeader {
+public class MaterialHeader extends com.scwang.smart.refresh.header.MaterialHeader implements RefreshHeader {
 
     //<editor-fold desc="MaterialHeader">
     public MaterialHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/PhoenixHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * Phoenix
  * Created by scwang on 2017/5/31.
  * from https://github.com/Yalantis/Phoenix
  */
-public class PhoenixHeader extends com.scwang.smart.refresh.header.PhoenixHeader {
+public class PhoenixHeader extends com.scwang.smart.refresh.header.PhoenixHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public PhoenixHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/StoreHouseHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * StoreHouseHeader
  * Created by scwang on 2017/5/31.
  * from https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh
  */
-public class StoreHouseHeader extends com.scwang.smart.refresh.header.StoreHouseHeader {
+public class StoreHouseHeader extends com.scwang.smart.refresh.header.StoreHouseHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public StoreHouseHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/TaurusHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * Taurus
  * Created by scwang on 2017/5/31.
  * from https://github.com/Yalantis/Taurus
  */
-public class TaurusHeader extends com.scwang.smart.refresh.header.TaurusHeader {
+public class TaurusHeader extends com.scwang.smart.refresh.header.TaurusHeader implements RefreshHeader {
 
     //<editor-fold desc="View">
     public TaurusHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/WaterDropHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * WaterDropHeader
  * Created by scwang on 2017/5/31.
  * from https://github.com/THEONE10211024/WaterDropListView
  */
-public class WaterDropHeader extends com.scwang.smart.refresh.header.WaterDropHeader {
+public class WaterDropHeader extends com.scwang.smart.refresh.header.WaterDropHeader implements RefreshHeader {
 
     //<editor-fold desc="ViewGroup">
     public WaterDropHeader(Context context) {

File: refresh-header/src/main/java/com/scwang/smartrefresh/header/WaveSwipeHeader.java
Patch:
@@ -3,12 +3,14 @@
 import android.content.Context;
 import android.util.AttributeSet;
 
+import com.scwang.smartrefresh.layout.api.RefreshHeader;
+
 /**
  * 全屏水滴下拉头
  * Created by scwang on 2017/6/4.
  * from https://github.com/recruit-lifestyle/WaveSwipeRefreshLayout
  */
-public class WaveSwipeHeader extends com.scwang.smart.refresh.header.WaveSwipeHeader {
+public class WaveSwipeHeader extends com.scwang.smart.refresh.header.WaveSwipeHeader implements RefreshHeader {
 
     //<editor-fold desc="DropHeader">
     public WaveSwipeHeader(Context context) {

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/SmartRefreshLayout.java
Patch:
@@ -29,7 +29,6 @@
 import android.view.ViewGroup;
 import android.view.ViewParent;
 import android.view.animation.AnimationUtils;
-import android.view.animation.DecelerateInterpolator;
 import android.view.animation.Interpolator;
 import android.widget.Scroller;
 import android.widget.TextView;
@@ -3046,7 +3045,7 @@ public void run() {
 
                     reboundAnimator = ValueAnimator.ofInt(mSpinner, (int) (mHeaderHeight * dragRate));
                     reboundAnimator.setDuration(duration);
-                    reboundAnimator.setInterpolator(new DecelerateInterpolator());
+                    reboundAnimator.setInterpolator(new SmartUtil());
                     reboundAnimator.addUpdateListener(new AnimatorUpdateListener() {
                         @Override
                         public void onAnimationUpdate(ValueAnimator animation) {
@@ -3146,7 +3145,7 @@ public void run() {
 
                     reboundAnimator = ValueAnimator.ofInt(mSpinner, -(int) (mFooterHeight * dragRate));
                     reboundAnimator.setDuration(duration);
-                    reboundAnimator.setInterpolator(new DecelerateInterpolator());
+                    reboundAnimator.setInterpolator(new SmartUtil());
                     reboundAnimator.addUpdateListener(new AnimatorUpdateListener() {
                         @Override
                         public void onAnimationUpdate(ValueAnimator animation) {

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/footer/BallPulseFooter.java
Patch:
@@ -1,5 +1,7 @@
 package com.scwang.smartrefresh.layout.footer;
 
+import android.animation.TimeInterpolator;
+import android.animation.ValueAnimator;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
@@ -48,7 +50,7 @@ public class BallPulseFooter extends InternalAbstract implements RefreshFooter {
 
     protected long mStartTime = 0;
     protected boolean mIsStarted = false;
-    protected Interpolator mInterpolator = new AccelerateDecelerateInterpolator();
+    protected TimeInterpolator mInterpolator = new AccelerateDecelerateInterpolator();
 //    protected List<ValueAnimator> mAnimators;
 //    protected Map<ValueAnimator, ValueAnimator.AnimatorUpdateListener> mUpdateListeners = new HashMap<>();
     //</editor-fold>

File: app/src/main/java/com/scwang/refreshlayout/fragment/example/FlexboxLayoutManagerFragment.java
Patch:
@@ -56,8 +56,7 @@ public void onClick(View v) {
         manager.setAlignItems(AlignItems.STRETCH);
 
         RecyclerView recyclerView = root.findViewById(R.id.recyclerView);
-//        recyclerView.setLayoutManager(manager);
-        recyclerView.setLayoutManager(new LinearLayoutManager(root.getContext()));
+        recyclerView.setLayoutManager(manager);
         recyclerView.setClipToPadding(false);
         recyclerView.setPadding(DensityUtil.dp2px(2.5f),DensityUtil.dp2px(2.5f),DensityUtil.dp2px(2.5f),DensityUtil.dp2px(2.5f));
 

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/api/RefreshLayout.java
Patch:
@@ -505,7 +505,7 @@ public interface RefreshLayout {
     /**
      * Restore the original state after finishLoadMoreWithNoMoreData.
      * 恢复没有更多数据的原始状态
-     * @deprecated use {@link RefreshLayout#resetNoMoreData()}
+     * @deprecated use {@link RefreshLayout#resetNoMoreData()} and {@link RefreshLayout#finishLoadMoreWithNoMoreData()}
      * @param noMoreData 是否有更多数据
      * @return RefreshLayout
      */

File: app/src/main/java/com/scwang/refreshlayout/activity/style/BezierCircleStyleActivity.java
Patch:
@@ -86,7 +86,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 内容不偏移:
                 mRefreshLayout.setEnableHeaderTranslationContent(false);
                 break;

File: app/src/main/java/com/scwang/refreshlayout/activity/style/BezierRadarStyleActivity.java
Patch:
@@ -91,7 +91,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 内容不偏移:
                 mRefreshLayout.setEnableHeaderTranslationContent(false);
                 break;

File: app/src/main/java/com/scwang/refreshlayout/activity/style/ClassicsStyleActivity.java
Patch:
@@ -123,7 +123,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 背后固定:
                 mClassicsHeader.setSpinnerStyle(SpinnerStyle.FixedBehind);
                 mRefreshLayout.setPrimaryColors(0xff444444, 0xffffffff);

File: app/src/main/java/com/scwang/refreshlayout/activity/style/DeliveryStyleActivity.java
Patch:
@@ -89,7 +89,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 默认主题:
                 mToolbar.setBackgroundResource(android.R.color.white);
                 mToolbar.setTitleTextColor(0xffbbbbbb);

File: app/src/main/java/com/scwang/refreshlayout/activity/style/DropBoxStyleActivity.java
Patch:
@@ -94,7 +94,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 默认主题:
                 setThemeColor(R.color.colorPrimary, R.color.colorPrimaryDark);
                 mRefreshLayout.setPrimaryColors(0xff283645, 0xff6ea9ff);

File: app/src/main/java/com/scwang/refreshlayout/activity/style/FunGameBattleCityStyleActivity.java
Patch:
@@ -86,7 +86,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 默认主题:
                 mRefreshLayout.setPrimaryColorsId(android.R.color.white, android.R.color.black);
                 break;

File: app/src/main/java/com/scwang/refreshlayout/activity/style/FunGameHitBlockStyleActivity.java
Patch:
@@ -87,7 +87,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 默认主题:
                 mRefreshLayout.setPrimaryColorsId(android.R.color.white, android.R.color.black);
                 break;

File: app/src/main/java/com/scwang/refreshlayout/activity/style/MaterialStyleActivity.java
Patch:
@@ -92,7 +92,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 内容不偏移:
                 mRefreshLayout.setEnableHeaderTranslationContent(false);
                 break;

File: app/src/main/java/com/scwang/refreshlayout/activity/style/PhoenixStyleActivity.java
Patch:
@@ -120,7 +120,7 @@ public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) {
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 折叠:
                 mAppBarLayout.setExpanded(false, true);
                 mAppBarLayout.setEnabled(false);

File: app/src/main/java/com/scwang/refreshlayout/activity/style/StoreHouseStyleActivity.java
Patch:
@@ -91,7 +91,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 显示中文: {
                 RefreshHeader refreshHeader = mRefreshLayout.getRefreshHeader();
                 if (refreshHeader instanceof StoreHouseHeader) {

File: app/src/main/java/com/scwang/refreshlayout/activity/style/TaurusStyleActivity.java
Patch:
@@ -120,7 +120,7 @@ public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) {
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 折叠:
                 mAppBarLayout.setExpanded(false, true);
                 mAppBarLayout.setEnabled(false);

File: app/src/main/java/com/scwang/refreshlayout/activity/style/WaterDropStyleActivity.java
Patch:
@@ -87,7 +87,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 内容不偏移:
                 mRefreshLayout.setEnableHeaderTranslationContent(false);
                 break;

File: app/src/main/java/com/scwang/refreshlayout/activity/style/WaveSwipeStyleActivity.java
Patch:
@@ -87,7 +87,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Item model, int position
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (Item.values()[position]) {
+        switch (Item.values()[position % Item.values().length]) {
             case 内容不偏移:
                 mRefreshLayout.setEnableHeaderTranslationContent(false);
                 break;

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/api/RefreshInternal.java
Patch:
@@ -36,6 +36,7 @@ public interface RefreshInternal extends OnStateChangedListener {
      * 设置主题颜色
      * @param colors 对应Xml中配置的 srlPrimaryColor srlAccentColor
      */
+    @RestrictTo({LIBRARY,LIBRARY_GROUP,SUBCLASSES})
     void setPrimaryColors(@ColorInt int... colors);
 
     /**

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/constant/RefreshState.java
Patch:
@@ -41,6 +41,6 @@ public RefreshState toHeader() {
         if (isFooter && !isTwoLevel) {
             return values()[ordinal()-1];
         }
-        return null;
+        return this;
     }
 }
\ No newline at end of file

File: app/src/main/java/com/scwang/refreshlayout/App.java
Patch:
@@ -29,7 +29,6 @@ public class App extends Application {
             @Override
             public void initialize(@NonNull Context context, @NonNull RefreshLayout layout) {
                 //全局设置（优先级最低）
-                layout.setEnableLoadMore(false);
                 layout.setEnableAutoLoadMore(true);
                 layout.setEnableOverScrollDrag(false);
                 layout.setEnableOverScrollBounce(true);

File: app/src/main/java/com/scwang/refreshlayout/activity/IndexMainActivity.java
Patch:
@@ -68,10 +68,10 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_index_main);
 
-        final BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
+        final BottomNavigationView navigation = findViewById(R.id.navigation);
         navigation.setOnNavigationItemSelectedListener(this);
 
-        ViewPager viewPager = (ViewPager) findViewById(R.id.content);
+        ViewPager viewPager = findViewById(R.id.content);
         viewPager.setAdapter(new FragmentStatePagerAdapter(getSupportFragmentManager()) {
             @Override
             public int getCount() {
@@ -101,7 +101,7 @@ protected void onDestroy() {
 
     @Override
     public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-        ((ViewPager) findViewById(R.id.content)).setCurrentItem(TabFragment.from(item.getItemId()).ordinal());
+        ((ViewPager)findViewById(R.id.content)).setCurrentItem(TabFragment.from(item.getItemId()).ordinal());
 //        getSupportFragmentManager()
 //                .beginTransaction()
 //                .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)

File: app/src/main/java/com/scwang/refreshlayout/activity/example/AssignCodeExampleActivity.java
Patch:
@@ -26,7 +26,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_example_assign_code);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -35,7 +35,7 @@ public void onClick(View v) {
         });
 
 
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         //设置 Header 为 Material风格
         refreshLayout.setRefreshHeader(new MaterialHeader(this).setShowBezierWave(true));
         //设置 Footer 为 球脉冲

File: app/src/main/java/com/scwang/refreshlayout/activity/example/AssignDefaultExampleActivity.java
Patch:
@@ -35,7 +35,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setContentView(R.layout.activity_example_assign_default);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -47,7 +47,7 @@ public void onClick(View v) {
          * 以下代码仅仅为了演示效果而已，不是必须的
          * 关键代码在构造函数中
          */
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
 //            //触发上拉加载

File: app/src/main/java/com/scwang/refreshlayout/activity/example/AssignXmlExampleActivity.java
Patch:
@@ -23,7 +23,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_example_assign_xml);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -35,7 +35,7 @@ public void onClick(View v) {
          * 以下代码仅仅为了演示效果而已，不是必须的
          * 关键代码在 activity_example_assign_xml 中
          */
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
 //            //触发上拉加载

File: app/src/main/java/com/scwang/refreshlayout/activity/example/CustomExampleActivity.java
Patch:
@@ -46,15 +46,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_example_custom);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        ListView listView = (ListView) findViewById(R.id.listView);
+        ListView listView = findViewById(R.id.listView);
         listView.setAdapter(mAdapter = new BaseRecyclerAdapter<Void>(simple_list_item_2) {
             @Override
             protected void onBindViewHolder(SmartViewHolder holder, Void model, int position) {
@@ -64,7 +64,7 @@ protected void onBindViewHolder(SmartViewHolder holder, Void model, int position
             }
         });
 
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         refreshLayout.setOnRefreshListener(new OnRefreshListener() {
             @Override
             public void onRefresh(@NonNull final RefreshLayout refreshLayout) {

File: app/src/main/java/com/scwang/refreshlayout/activity/example/ListenerExampleActivity.java
Patch:
@@ -49,18 +49,18 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_example_listener);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mTvContent = (TextView) findViewById(R.id.content);
+        mTvContent = findViewById(R.id.content);
         mTvContent.setMovementMethod(ScrollingMovementMethod.getInstance());
 
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         refreshLayout.setOnMultiPurposeListener(new SimpleMultiPurposeListener() {
 
             @Override

File: app/src/main/java/com/scwang/refreshlayout/activity/example/NestedLayoutExampleActivity.java
Patch:
@@ -38,7 +38,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_example_region);
 
-        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         if (toolbar != null) {
             toolbar.setNavigationOnClickListener(new View.OnClickListener() {
                 @Override
@@ -78,7 +78,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
          * 以下代码仅仅为了演示效果而已，不是必须的
          * 关键代码在 activity_example_assign_xml 中
          */
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter && refreshLayout != null) {
             isFirstEnter = false;
             //触发上拉加载

File: app/src/main/java/com/scwang/refreshlayout/activity/example/SnapHelperExampleActivity.java
Patch:
@@ -29,7 +29,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_example_snaphelper);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/BannerPracticeActivity.java
Patch:
@@ -43,16 +43,16 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_banner);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        final RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerView);
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RecyclerView recyclerView = findViewById(R.id.recyclerView);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
 
         mAdapter = new QuickAdapter();
         recyclerView.addItemDecoration(new DividerItemDecoration(this, VERTICAL));

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/FeedListPracticeActivity.java
Patch:
@@ -20,15 +20,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_feedlist);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             refreshLayout.autoRefresh();

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/ProfilePracticeActivity.java
Patch:
@@ -19,7 +19,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_profile);
 
-        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/QQBrowserPracticeActivity.java
Patch:
@@ -24,17 +24,17 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_qqbrowser);
 
-        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        final LoadingLayout loading = (LoadingLayout) findViewById(R.id.loading);
+        final LoadingLayout loading = findViewById(R.id.loading);
 
-        final WebView webView = (WebView) findViewById(R.id.webView);
+        final WebView webView = findViewById(R.id.webView);
         webView.loadUrl("https://github.com/scwang90/SmartRefreshLayout");
         webView.getSettings().setJavaScriptEnabled(true);
         webView.setWebViewClient(new WebViewClient(){

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/RepastPracticeActivity.java
Patch:
@@ -41,15 +41,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_repast);
 
-        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         refreshLayout.setEnableFooterFollowWhenLoadFinished(true);
 
         //第一次进入演示刷新

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/WebViewPracticeActivity.java
Patch:
@@ -28,16 +28,16 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_webview);
 
-        final Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        final WebView webView = (WebView) findViewById(R.id.webView);
-        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout);
+        final WebView webView = findViewById(R.id.webView);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
         refreshLayout.setOnRefreshListener(new OnRefreshListener() {
             @Override
             public void onRefresh(@NonNull RefreshLayout refreshLayout) {

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/WeiboPracticeActivity.java
Patch:
@@ -29,7 +29,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_practice_weibo);
 
-        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         toolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -43,8 +43,8 @@ public void onClick(View v) {
 
         final View parallax = findViewById(R.id.parallax);
         final View buttonBar = findViewById(R.id.buttonBarLayout);
-        final NestedScrollView scrollView = (NestedScrollView)findViewById(R.id.scrollView);
-        final RefreshLayout refreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        final NestedScrollView scrollView = findViewById(R.id.scrollView);
+        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);
 
         findViewById(R.id.attention).setOnClickListener(new View.OnClickListener() {
             @Override

File: app/src/main/java/com/scwang/refreshlayout/activity/style/BezierCircleStyleActivity.java
Patch:
@@ -50,15 +50,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_circle);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/BezierRadarStyleActivity.java
Patch:
@@ -54,16 +54,16 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_bezier);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
-        mRefreshHeader = (BezierRadarHeader) findViewById(R.id.header);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
+        mRefreshHeader = findViewById(R.id.header);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/ClassicsStyleActivity.java
Patch:
@@ -71,15 +71,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_classics);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
 
         int delta = new Random().nextInt(7 * 24 * 60 * 60 * 1000);
         mClassicsHeader = (ClassicsHeader)mRefreshLayout.getRefreshHeader();

File: app/src/main/java/com/scwang/refreshlayout/activity/style/DeliveryStyleActivity.java
Patch:
@@ -57,15 +57,15 @@ protected void onCreate(Bundle savedInstanceState) {
             window.getDecorView().setSystemUiVisibility(systemUiVisibility);
         }
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/DropBoxStyleActivity.java
Patch:
@@ -61,15 +61,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_dropbox);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/FunGameBattleCityStyleActivity.java
Patch:
@@ -49,15 +49,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_fungame_battlecity);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/FunGameHitBlockStyleActivity.java
Patch:
@@ -49,15 +49,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_fungame_hitblock);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/MaterialStyleActivity.java
Patch:
@@ -54,15 +54,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_material);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/StoreHouseStyleActivity.java
Patch:
@@ -55,15 +55,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_storehouse);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/WaterDropStyleActivity.java
Patch:
@@ -51,15 +51,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_water_drop);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: app/src/main/java/com/scwang/refreshlayout/activity/style/WaveSwipeStyleActivity.java
Patch:
@@ -50,15 +50,15 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_style_wave_swipe);
 
-        mToolbar = (Toolbar)findViewById(R.id.toolbar);
+        mToolbar = findViewById(R.id.toolbar);
         mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 finish();
             }
         });
 
-        mRefreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
+        mRefreshLayout = findViewById(R.id.refreshLayout);
         if (isFirstEnter) {
             isFirstEnter = false;
             mRefreshLayout.autoRefresh();//第一次进入触发自动刷新，演示效果

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/SmartRefreshLayout.java
Patch:
@@ -1087,12 +1087,12 @@ protected void setStateDirectLoading() {
 //                    mRefreshFooter.onReleased(this, mFooterHeight, (int) (mFooterMaxDragRate * mFooterHeight));
 //                }
 //            }
-            mFooterLocked = true;
+            mFooterLocked = true;//Footer 正在loading 的时候是否锁住 列表不能向上滚动
             notifyStateChanged(RefreshState.Loading);
             if (mLoadMoreListener != null) {
                 mLoadMoreListener.onLoadMore(this);
             } else if (mOnMultiPurposeListener == null) {
-                finishLoadMore(2000);
+                finishLoadMore(2000);//如果没有任何加载监听器，两秒之后自动关闭
             }
             if (mRefreshFooter != null) {
                 mRefreshFooter.onStartAnimator(this, mFooterHeight, (int) (mFooterMaxDragRate * mFooterHeight));

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/api/RefreshKernel.java
Patch:
@@ -26,12 +26,12 @@ public interface RefreshKernel {
      * 开始执行二极刷新
      * @param open 是否展开
      */
-    void startTwoLevel(boolean open);
+    RefreshKernel startTwoLevel(boolean open);
 
     /**
      * 结束关闭二极刷新
      */
-    void finishTwoLevel();
+    RefreshKernel finishTwoLevel();
 
     /**
      * 移动视图到指定位置

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/constant/RefreshState.java
Patch:
@@ -12,9 +12,9 @@ public enum RefreshState {
     RefreshFinish(1,false,false,true), LoadFinish(2,false,false,true), TwoLevelFinish(1,false,false,true),;
 
     private final int role;
-    public final boolean draging;
-    public final boolean opening;
-    public final boolean finishing;
+    public final boolean draging;// 正在拖动状态：PullDownToRefresh PullToUpLoad ReleaseToRefresh ReleaseToLoad ReleaseToTwoLevel
+    public final boolean opening;// 正在刷新状态：Refreshing Loading TwoLevel
+    public final boolean finishing;//正在完成状态：RefreshFinish LoadFinish TwoLevelFinish
 
     RefreshState(int role, boolean draging) {
         this.role = role;

File: app/src/main/java/com/scwang/refreshlayout/fragment/using/EmptyLayoutUsingFragment.java
Patch:
@@ -23,6 +23,8 @@
 import com.scwang.refreshlayout.adapter.SmartViewHolder;
 import com.scwang.smartrefresh.layout.api.RefreshLayout;
 import com.scwang.smartrefresh.layout.constant.RefreshState;
+import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
+import com.scwang.smartrefresh.layout.header.ClassicsHeader;
 import com.scwang.smartrefresh.layout.listener.OnRefreshListener;
 import com.scwang.smartrefresh.layout.listener.SimpleMultiPurposeListener;
 
@@ -77,6 +79,7 @@ public void onClick(View v) {
         });
 
         mRefreshLayout = (RefreshLayout) root.findViewById(refreshLayout);
+        mRefreshLayout.setRefreshHeader(new ClassicsHeader(getContext()).setSpinnerStyle(SpinnerStyle.FixedBehind).setPrimaryColorId(R.color.colorPrimary).setAccentColorId(android.R.color.white));
         mRefreshLayout.setOnRefreshListener(this);
 
         mRecyclerView = (RecyclerView) root.findViewById(recyclerView);

File: app/src/main/java/com/scwang/refreshlayout/fragment/using/EmptyLayoutUsingFragmentInner.java
Patch:
@@ -26,6 +26,8 @@
 import com.scwang.refreshlayout.fragment.using.EmptyLayoutUsingFragment.Item;
 import com.scwang.smartrefresh.layout.api.RefreshLayout;
 import com.scwang.smartrefresh.layout.constant.RefreshState;
+import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
+import com.scwang.smartrefresh.layout.header.ClassicsHeader;
 import com.scwang.smartrefresh.layout.listener.OnRefreshListener;
 import com.scwang.smartrefresh.layout.listener.SimpleMultiPurposeListener;
 
@@ -65,6 +67,7 @@ public void onClick(View v) {
         });
 
         mRefreshLayout = (RefreshLayout) root.findViewById(refreshLayout);
+        mRefreshLayout.setRefreshHeader(new ClassicsHeader(getContext()).setSpinnerStyle(SpinnerStyle.FixedBehind).setPrimaryColorId(R.color.colorPrimary).setAccentColorId(android.R.color.white));
         mRefreshLayout.setOnRefreshListener(this);
 
         mRecyclerView = (RecyclerView) root.findViewById(recyclerView);

File: app/src/main/java/com/scwang/refreshlayout/fragment/using/EmptyLayoutUsingFragmentOuter.java
Patch:
@@ -25,6 +25,8 @@
 import com.scwang.refreshlayout.adapter.SmartViewHolder;
 import com.scwang.refreshlayout.fragment.using.EmptyLayoutUsingFragment.Item;
 import com.scwang.smartrefresh.layout.api.RefreshLayout;
+import com.scwang.smartrefresh.layout.constant.SpinnerStyle;
+import com.scwang.smartrefresh.layout.header.ClassicsHeader;
 import com.scwang.smartrefresh.layout.listener.OnRefreshListener;
 
 import java.util.Arrays;
@@ -62,6 +64,7 @@ public void onClick(View v) {
         });
 
         mRefreshLayout = (RefreshLayout) root.findViewById(refreshLayout);
+        mRefreshLayout.setRefreshHeader(new ClassicsHeader(getContext()).setSpinnerStyle(SpinnerStyle.FixedBehind).setPrimaryColorId(R.color.colorPrimary).setAccentColorId(android.R.color.white));
         mRefreshLayout.setOnRefreshListener(this);
 
         mRecyclerView = (RecyclerView) root.findViewById(recyclerView);

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/BannerPracticeActivity.java
Patch:
@@ -59,7 +59,6 @@ public void onClick(View v) {
         recyclerView.setAdapter(mAdapter);
         final List<Movie> movies = new Gson().fromJson(JSON_MOVIES, new TypeToken<ArrayList<Movie>>() {}.getType());
         mAdapter.replaceData(movies);
-        refreshLayout.autoRefresh();
         refreshLayout.setOnRefreshListener(new OnRefreshListener() {
             @Override
             public void onRefresh(final RefreshLayout refreshlayout) {

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/WeiboPracticeActivity.java
Patch:
@@ -17,7 +17,7 @@
 import com.scwang.smartrefresh.layout.util.DensityUtil;
 
 /**
- * 微博列表
+ * 微博主页
  */
 public class WeiboPracticeActivity extends AppCompatActivity {
 

File: app/src/main/java/com/scwang/refreshlayout/fragment/index/RefreshPractiveFragment.java
Patch:
@@ -46,7 +46,7 @@ private enum Item {
         Profile("个人中心-PureScrollMode-纯滚动模式", ProfilePracticeActivity.class),
         Webview("网页引用-WebView", WebviewPracticeActivity.class),
         FeedList("微博列表-智能识别", FeedlistPracticeActivity.class),
-        Weibo("微博主页-CoordinatorLayout", WeiboPracticeActivity.class),
+        Weibo("微博主页-MultiPurposeListener", WeiboPracticeActivity.class),
         Banner("滚动广告-Banner", BannerPracticeActivity.class),
         QQBrowser("QQ浏览器-模拟QQ浏览器内核提示", QQBrowserPracticeActivity.class),
         TwoLevel("二级刷新-仿淘宝二楼", SecondFloorPracticeFragment.class),

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/api/RefreshLayout.java
Patch:
@@ -313,7 +313,7 @@ public interface RefreshLayout {
      * 自动刷新
      * @param delayed 开始延时
      * @param duration 拖拽动画持续时间
-     * @param dragrate 拉拽的高度比率（要求 >= 1 ）
+     * @param dragrate 拉拽的高度比率（要求 ≥ 1 ）
      */
     boolean autoRefresh(int delayed, int duration, float dragrate);
 
@@ -332,7 +332,7 @@ public interface RefreshLayout {
      * 自动加载
      * @param delayed 开始延时
      * @param duration 拖拽动画持续时间
-     * @param dragrate 拉拽的高度比率（要求 >= 1 ）
+     * @param dragrate 拉拽的高度比率（要求 ≥ 1 ）
      */
     boolean autoLoadmore(int delayed, int duration, float dragrate);
 

File: app/src/main/java/com/scwang/refreshlayout/fragment/using/PureScrollUsingFragmentHeader.java
Patch:
@@ -54,7 +54,7 @@ public void onClick(View v) {
         });
 
         RefreshLayout refreshLayout = (RefreshLayout) root.findViewById(R.id.refreshLayout);
-        refreshLayout.setRefreshHeader(new FalsifyHeader(getContext()));
+        refreshLayout.setRefreshHeader(new FalsifyHeader(getContext()));//也可以在 XML 中添加 FalsifyHeader
 
         View view = root.findViewById(R.id.recyclerView);
         if (view instanceof RecyclerView) {

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/listener/OnMultiPurposeListener.java
Patch:
@@ -10,11 +10,13 @@
 
 public interface OnMultiPurposeListener extends OnRefreshLoadmoreListener, OnStateChangedListener {
     void onHeaderPulling(RefreshHeader header, float percent, int offset, int headerHeight, int extendHeight);
+    void onHeaderReleased(RefreshHeader header, int headerHeight, int extendHeight);
     void onHeaderReleasing(RefreshHeader header, float percent, int offset, int headerHeight, int extendHeight);
     void onHeaderStartAnimator(RefreshHeader header, int headerHeight, int extendHeight);
     void onHeaderFinish(RefreshHeader header, boolean success);
 
     void onFooterPulling(RefreshFooter footer, float percent, int offset, int footerHeight, int extendHeight);
+    void onFooterReleased(RefreshFooter footer, int footerHeight, int extendHeight);
     void onFooterReleasing(RefreshFooter footer, float percent, int offset, int footerHeight, int extendHeight);
     void onFooterStartAnimator(RefreshFooter footer, int footerHeight, int extendHeight);
     void onFooterFinish(RefreshFooter footer, boolean success);

File: app/src/main/java/com/scwang/refreshlayout/fragment/index/RefreshUsingFragment.java
Patch:
@@ -28,6 +28,7 @@
 import com.scwang.refreshlayout.fragment.using.NestedScrollUsingFragment;
 import com.scwang.refreshlayout.fragment.using.PureScrollUsingFragment;
 import com.scwang.refreshlayout.fragment.using.SpecifyStyleUsingFragment;
+import com.scwang.refreshlayout.fragment.using.ViewPagerUsingFragment;
 import com.scwang.refreshlayout.util.StatusBarUtil;
 
 import java.util.Arrays;
@@ -50,7 +51,8 @@ private enum Item {
         PureScroll("纯滚动模式", PureScrollUsingFragment.class),
         Listener("多功能监听器", ListenerUsingActivity.class),
         Custom("自定义Header", CustomUsingActivity.class),
-        SnapHelper("结合 SnapHelper 使用", SnapHelperUsingActivity.class),;
+        SnapHelper("结合 SnapHelper 使用", SnapHelperUsingActivity.class),
+        ViewPager("ViewPager 多页面共用一个 RefreshLayout", ViewPagerUsingFragment.class),;
         public String name;
         public Class<?> clazz;
 

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/api/RefreshContent.java
Patch:
@@ -26,9 +26,11 @@ public interface RefreshContent {
     void onActionDown(MotionEvent e);
     void onActionUpOrCancel();
 
+    boolean fling(int velocity);
     void setupComponent(RefreshKernel kernel, View fixedHeader, View fixedFooter);
     void onInitialHeaderAndFooter(int headerHeight, int footerHeight);
     void setScrollBoundaryDecider(ScrollBoundaryDecider boundary);
+
     void setEnableLoadmoreWhenContentNotFull(boolean enable);
 
     AnimatorUpdateListener onLoadingFinish(RefreshKernel kernel, int footerHeight, int startDelay, int reboundDuration);

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/footer/ClassicsFooter.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
 import android.util.AttributeSet;
+import android.util.TypedValue;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.animation.LinearInterpolator;
@@ -139,7 +140,7 @@ private void initView(Context context, AttributeSet attrs, int defStyleAttr) {
         }
 
         if (ta.hasValue(R.styleable.ClassicsFooter_srlTextSizeTitle)) {
-            mTitleText.setTextSize(ta.getDimensionPixelSize(R.styleable.ClassicsFooter_srlTextSizeTitle, 16));
+            mTitleText.setTextSize(TypedValue.COMPLEX_UNIT_PX, ta.getDimensionPixelSize(R.styleable.ClassicsFooter_srlTextSizeTitle, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 16, getResources().getDisplayMetrics())));
         } else {
             mTitleText.setTextSize(16);
         }

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/header/ClassicsHeader.java
Patch:
@@ -15,6 +15,7 @@
 import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.util.AttributeSet;
+import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -180,13 +181,13 @@ private void initView(Context context, AttributeSet attrs) {
         }
 
         if (ta.hasValue(R.styleable.ClassicsHeader_srlTextSizeTitle)) {
-            mTitleText.setTextSize(ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTitle, 16));
+            mTitleText.setTextSize(TypedValue.COMPLEX_UNIT_PX, ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTitle, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 16, getResources().getDisplayMetrics())));
         } else {
             mTitleText.setTextSize(16);
         }
 
         if (ta.hasValue(R.styleable.ClassicsHeader_srlTextSizeTime)) {
-            mLastUpdateText.setTextSize(ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTime, 12));
+            mLastUpdateText.setTextSize(TypedValue.COMPLEX_UNIT_PX, ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTime, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 12, getResources().getDisplayMetrics())));
         } else {
             mLastUpdateText.setTextSize(12);
         }

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/footer/ClassicsFooter.java
Patch:
@@ -8,6 +8,7 @@
 import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
 import android.util.AttributeSet;
+import android.util.TypedValue;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.animation.LinearInterpolator;
@@ -139,7 +140,7 @@ private void initView(Context context, AttributeSet attrs, int defStyleAttr) {
         }
 
         if (ta.hasValue(R.styleable.ClassicsFooter_srlTextSizeTitle)) {
-            mTitleText.setTextSize(ta.getDimensionPixelSize(R.styleable.ClassicsFooter_srlTextSizeTitle, 16));
+            mTitleText.setTextSize(TypedValue.COMPLEX_UNIT_PX, ta.getDimensionPixelSize(R.styleable.ClassicsFooter_srlTextSizeTitle, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 16, getResources().getDisplayMetrics())));
         } else {
             mTitleText.setTextSize(16);
         }

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/header/ClassicsHeader.java
Patch:
@@ -15,6 +15,7 @@
 import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.util.AttributeSet;
+import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -180,13 +181,13 @@ private void initView(Context context, AttributeSet attrs) {
         }
 
         if (ta.hasValue(R.styleable.ClassicsHeader_srlTextSizeTitle)) {
-            mTitleText.setTextSize(ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTitle, 16));
+            mTitleText.setTextSize(TypedValue.COMPLEX_UNIT_PX, ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTitle, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 16, getResources().getDisplayMetrics())));
         } else {
             mTitleText.setTextSize(16);
         }
 
         if (ta.hasValue(R.styleable.ClassicsHeader_srlTextSizeTime)) {
-            mLastUpdateText.setTextSize(ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTime, 12));
+            mLastUpdateText.setTextSize(TypedValue.COMPLEX_UNIT_PX, ta.getDimensionPixelSize(R.styleable.ClassicsHeader_srlTextSizeTime, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 12, getResources().getDisplayMetrics())));
         } else {
             mLastUpdateText.setTextSize(12);
         }

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/WebviewPracticeActivity.java
Patch:
@@ -53,8 +53,10 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 view.loadUrl(url);
                 return true;
             }
+
             @Override
-            public void onPageCommitVisible(WebView view, String url) {
+            public void onPageFinished(WebView view, String url) {
+                super.onPageFinished(view, url);
                 refreshLayout.finishRefresh();
                 view.loadUrl(String.format(Locale.CHINA, "javascript:document.body.style.paddingTop='%fpx'; void 0", DensityUtil.px2dp(webView.getPaddingTop())));
             }

File: app/src/main/java/com/scwang/refreshlayout/activity/practice/WebviewPracticeActivity.java
Patch:
@@ -53,8 +53,10 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 view.loadUrl(url);
                 return true;
             }
+
             @Override
-            public void onPageCommitVisible(WebView view, String url) {
+            public void onPageFinished(WebView view, String url) {
+                super.onPageFinished(view, url);
                 refreshLayout.finishRefresh();
                 view.loadUrl(String.format(Locale.CHINA, "javascript:document.body.style.paddingTop='%fpx'; void 0", DensityUtil.px2dp(webView.getPaddingTop())));
             }

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/footer/BallPulseFooter.java
Patch:
@@ -60,10 +60,10 @@ private void initView(Context context, AttributeSet attrs, int defStyleAttr) {
         int primaryColor = ta.getColor(R.styleable.BallPulseFooter_srlPrimaryColor, 0);
         int accentColor = ta.getColor(R.styleable.BallPulseFooter_srlAccentColor, 0);
         if (primaryColor != 0) {
-            mBallPulseView.setAnimatingColor(primaryColor);
+            mBallPulseView.setNormalColor(primaryColor);
         }
         if (accentColor != 0) {
-            mBallPulseView.setNormalColor(primaryColor);
+            mBallPulseView.setAnimatingColor(accentColor);
         }
 
         mSpinnerStyle = SpinnerStyle.values()[ta.getInt(R.styleable.BallPulseFooter_srlClassicsSpinnerStyle, mSpinnerStyle.ordinal())];

File: refresh-layout/src/main/java/com/scwang/smartrefresh/layout/footer/BallPulseFooter.java
Patch:
@@ -60,10 +60,10 @@ private void initView(Context context, AttributeSet attrs, int defStyleAttr) {
         int primaryColor = ta.getColor(R.styleable.BallPulseFooter_srlPrimaryColor, 0);
         int accentColor = ta.getColor(R.styleable.BallPulseFooter_srlAccentColor, 0);
         if (primaryColor != 0) {
-            mBallPulseView.setAnimatingColor(primaryColor);
+            mBallPulseView.setNormalColor(primaryColor);
         }
         if (accentColor != 0) {
-            mBallPulseView.setNormalColor(primaryColor);
+            mBallPulseView.setAnimatingColor(accentColor);
         }
 
         mSpinnerStyle = SpinnerStyle.values()[ta.getInt(R.styleable.BallPulseFooter_srlClassicsSpinnerStyle, mSpinnerStyle.ordinal())];

