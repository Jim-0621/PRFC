File: cat-core/src/main/java/com/dianping/cat/report/service/BaseRemoteModelService.java
Patch:
@@ -91,9 +91,8 @@ public ModelResponse<T> invoke(ModelRequest request) {
 
 			t.addData(url.toString());
 
-			InputStream in = Urls.forIO().connectTimeout(1000).readTimeout(10000).openStream(url.toExternalForm());
-			GZIPInputStream gzip = new GZIPInputStream(in);
-			String xml = Files.forIO().readFrom(gzip, "utf-8");
+			InputStream in = Urls.forIO().connectTimeout(1000).readTimeout(10000).withGzip().openStream(url.toExternalForm());
+			String xml = Files.forIO().readFrom(in, "utf-8");
 
 			int len = xml == null ? 0 : xml.length();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/service/RemoteLogViewService.java
Patch:
@@ -59,9 +59,8 @@ public ModelResponse<String> invoke(ModelRequest request) {
 
 			t.addData(url.toString());
 
-			InputStream in = Urls.forIO().connectTimeout(1000).readTimeout(5000).openStream(url.toExternalForm());
-			GZIPInputStream gzip = new GZIPInputStream(in);
-			String xml = Files.forIO().readFrom(gzip, "utf-8");
+			InputStream in = Urls.forIO().connectTimeout(1000).readTimeout(5000).withGzip().openStream(url.toExternalForm());
+			String xml = Files.forIO().readFrom(in, "utf-8");
 
 			int len = xml == null ? 0 : xml.length();
 

File: cat-client/src/main/java/com/dianping/cat/message/encoder/NativeMessageTreeEncoder.java
Patch:
@@ -75,9 +75,7 @@ public void writeId(ByteBuf buf, char id) {
 		}
 
 		public void writeString(ByteBuf buf, String str) {
-			if (str == null) {
-				buf.writeByte(-1);
-			} else if (str.length() == 0) {
+			if (str == null || str.length() == 0) {
 				writeVarint(buf, 0);
 			} else {
 				byte[] data = str.getBytes(UTF8);

File: cat-client/src/main/java/com/dianping/cat/configuration/source/ServerConfigureSource.java
Patch:
@@ -74,7 +74,7 @@ public ClientConfig refresh(ClientConfig config) throws Exception {
 		ClientConfig newConfig = new ClientConfig();
 
 		for (Map.Entry<String, String> e : properties.entrySet()) {
-			newConfig.addProperty(new Property(e.getKey()).setName(e.getValue()));
+			newConfig.addProperty(new Property(e.getKey()).setValue(e.getValue()));
 		}
 
 		return newConfig;

File: cat-client/src/main/java/com/dianping/cat/message/context/DefaultTraceContext.java
Patch:
@@ -49,6 +49,7 @@ public void attach(ForkedTransaction forked) {
 
 	private void deliver(DefaultMessageTree tree) {
 		m_pipeline.headContext(tree).fireMessage(tree);
+		tree.reset();
 	}
 
 	@Override

File: cat-client/src/main/java/com/dianping/cat/message/encoder/NativeMetricBagEncoder.java
Patch:
@@ -8,7 +8,7 @@
 import io.netty.buffer.ByteBuf;
 
 public class NativeMetricBagEncoder implements MetricBagEncoder {
-	public static final String ID = "NB1"; // native metric bag version 1
+	public static final String ID = "NM1"; // native metric bag version 1
 
 	@Override
 	public void encode(MetricBag bag, ByteBuf buf) {

File: cat-core/src/main/java/com/dianping/cat/message/CodecHandler.java
Patch:
@@ -47,7 +47,7 @@ public static MessageTree decode(ByteBuf buf) {
 			tree = m_plainTextCodec.decode(buf);
 		} else if ("NT1".equals(hint)) {
 			tree = m_nativeCodec.decode(buf);
-		} else if ("NB1".equals(hint)) {
+		} else if ("NM1".equals(hint)) {
 			MetricBag bag = m_metricBagDecoder.decode(buf);
 
 			tree = new DefaultMessageTree();

File: cat-core/src/main/java/com/dianping/cat/message/codec/NativeMetricBagDecoder.java
Patch:
@@ -30,7 +30,7 @@ public MetricBag decode(ByteBuf buf) {
 	private void decodeHeader(Context ctx, DefaultMetricBag bag) {
 		String version = ctx.readVersion();
 
-		if ("NB1".equals(version)) {
+		if ("NM1".equals(version)) {
 			String domain = ctx.readString();
 			String hostName = ctx.readString();
 			String ipAddress = ctx.readString();

File: cat-client/src/main/java/com/dianping/cat/component/factory/CatComponentFactory.java
Patch:
@@ -2,13 +2,13 @@
 
 import com.dianping.cat.apiguardian.api.API;
 import com.dianping.cat.apiguardian.api.API.Status;
-import com.dianping.cat.configuration.ApplicationProperties;
 import com.dianping.cat.configuration.ConfigureManager;
 import com.dianping.cat.configuration.ConfigureSource;
 import com.dianping.cat.configuration.DefaultConfigureManager;
 import com.dianping.cat.configuration.source.AppPropertiesSource;
 import com.dianping.cat.configuration.source.ClientXmlSource;
 import com.dianping.cat.configuration.source.EnvironmentVariableSource;
+import com.dianping.cat.configuration.source.ServerConfigureSource;
 import com.dianping.cat.configuration.source.SystemPropertiesSource;
 import com.dianping.cat.message.analysis.EventAggregator;
 import com.dianping.cat.message.analysis.LocalAggregator;
@@ -31,7 +31,6 @@
 public class CatComponentFactory extends ComponentFactorySupport {
 	@Override
 	protected void defineComponents() {
-		singletonOf(ApplicationProperties.class);
 		singletonOf(MessageIdFactory.class);
 		singletonOf(TcpSocketSender.class);
 		singletonOf(TransportManager.class).by(DefaultTransportManager.class);
@@ -45,6 +44,7 @@ protected void defineComponents() {
 		singletonOf(ConfigureSource.class, "client-xml").by(ClientXmlSource.class);
 		singletonOf(ConfigureSource.class, "environment-variable").by(EnvironmentVariableSource.class);
 		singletonOf(ConfigureSource.class, "system-properties").by(SystemPropertiesSource.class);
+		singletonOf(ConfigureSource.class, "server-configure").by(ServerConfigureSource.class);
 
 		// message
 		singletonOf(MessageEncoder.class, PlainTextMessageEncoder.ID).by(PlainTextMessageEncoder.class);

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultForkableTransaction.java
Patch:
@@ -70,7 +70,7 @@ public void complete(long startInMillis, long endInMillis) {
 			}
 		}
 
-		MessageContextHelper.getThreadLocal().end(this);
+		MessageContextHelper.threadLocal().end(this);
 	}
 
 	@Override
@@ -90,7 +90,7 @@ public synchronized ForkedTransaction doFork() {
 			m_children.add(child);
 		}
 
-		MessageContextHelper.getThreadLocal().attach(child);
+		MessageContextHelper.threadLocal().attach(child);
 
 		return child;
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultTransaction.java
Patch:
@@ -27,7 +27,6 @@
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.context.MessageContext;
-import com.dianping.cat.message.context.MessageContextHelper;
 import com.dianping.cat.message.tree.MessageTree;
 
 public class DefaultTransaction extends AbstractMessage implements Transaction {
@@ -119,7 +118,7 @@ public void complete(long startInMillis, long endInMillis) {
 
 	@Override
 	public ForkableTransaction forFork() {
-		MessageTree tree = MessageContextHelper.getThreadLocal().getMessageTree();
+		MessageTree tree = m_ctx.getMessageTreeWithMessageId();
 		String rootMessageId = tree.getRootMessageId();
 		String messageId = tree.getMessageId();
 		ForkableTransaction forkable = new DefaultForkableTransaction(rootMessageId, messageId);

File: cat-client/src/main/java/com/dianping/cat/util/Threads.java
Patch:
@@ -19,10 +19,10 @@
 package com.dianping.cat.util;
 
 import java.lang.Thread.UncaughtExceptionHandler;
-import java.util.ArrayList;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
@@ -196,7 +196,7 @@ public void setUncaughtExceptionHandler(UncaughtExceptionHandler handler) {
 	static class Manager implements UncaughtExceptionHandler {
 		private Map<String, ThreadGroupManager> m_groupManagers = new LinkedHashMap<String, ThreadGroupManager>();
 
-		private List<ThreadListener> m_listeners = new ArrayList<ThreadListener>();
+		private List<ThreadListener> m_listeners = new CopyOnWriteArrayList<ThreadListener>();
 
 		private ThreadPoolManager m_threadPoolManager;
 

File: cat-client/src/test/java/com/dianping/cat/CatTest.java
Patch:
@@ -47,6 +47,6 @@ public void test() {
 		Cat.logEvent("RemoteLink", "Call", Message.SUCCESS, "Cat-0a010680-384736-2061");
 		Cat.logEvent("EventType", "EventName");
 
-		Assert.assertEquals(true, Cat.isInitialized());
+		Assert.assertEquals(true, Cat.getBootstrap().isInitialized());
 	}
 }

File: cat-client/src/test/java/com/dianping/cat/message/internal/CatClientTest.java
Patch:
@@ -29,11 +29,11 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.model.entity.ClientConfig;
 import com.dianping.cat.configuration.model.entity.Domain;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.io.MessageQueue;
 import com.dianping.cat.message.io.TransportManager;
+import com.dianping.cat.message.legacy.CatTestCase;
 import com.dianping.cat.message.tree.MessageTree;
 import com.dianping.cat.util.Files;
 import com.dianping.cat.util.Reflects;

File: cat-client/src/test/java/com/dianping/cat/message/internal/MockMessageBuilderTest.java
Patch:
@@ -21,9 +21,10 @@
 import org.junit.Assert;
 import org.junit.Test;
 
+import com.dianping.cat.ComponentTestCase;
 import com.dianping.cat.message.Message;
 
-public class MockMessageBuilderTest {
+public class MockMessageBuilderTest extends ComponentTestCase {
 	@Test
 	public void test() {
 		Message message = new MockMessageBuilder() {

File: cat-client/src/test/java/com/dianping/cat/message/legacy/CatPerformanceTest.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message;
+package com.dianping.cat.message.legacy;
 
 import static com.dianping.cat.message.Message.SUCCESS;
 
@@ -31,6 +31,7 @@
 import org.junit.Test;
 
 import com.dianping.cat.Cat;
+import com.dianping.cat.message.Transaction;
 
 public class CatPerformanceTest {
 

File: cat-client/src/test/java/com/dianping/cat/message/legacy/CatTestCase.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message;
+package com.dianping.cat.message.legacy;
 
 import java.io.File;
 import java.io.IOException;

File: cat-client/src/test/java/com/dianping/cat/message/legacy/MetricTest.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message;
+package com.dianping.cat.message.legacy;
 
 import org.junit.Test;
 

File: cat-client/src/test/java/com/dianping/cat/message/tree/MessageIdFactoryTest.java
Patch:
@@ -191,7 +191,7 @@ public void testGivenDomainResume() throws IOException {
 		}
 	}
 
-	@Test(expected = IllegalStateException.class)
+	@Test
 	public void testSetup() {
 		MessageIdFactory factory = lookup(MessageIdFactory.class);
 

File: cat-client/src/test/java/com/dianping/cat/servlet/CatFilterTest.java
Patch:
@@ -38,6 +38,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
+import com.dianping.cat.message.context.MessageContextHelper;
 import com.dianping.cat.util.Files;
 import com.dianping.cat.util.Joiners;
 import com.dianping.cat.util.Urls;
@@ -94,7 +95,7 @@ public void testMode1() throws Exception {
 
 		try {
 			String childId = Cat.createMessageId();
-			String id = Cat.getMessageTree().getMessageId();
+			String id = MessageContextHelper.threadLocal().getMessageTree().getMessageId();
 
 			Cat.logEvent("RemoteCall", url, Message.SUCCESS, childId);
 

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/CatPropertyProvider.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.configuration;
+package com.dianping.cat.system.page.login.service;
 
 /**
  * 应用属性配置SPI 此为配置的接口和扩展点，如具体应用要扩展，请实现此接口并在应用如下文件中指定实现类<br>

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/DefaultCatPropertyProvider.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.configuration;
+package com.dianping.cat.system.page.login.service;
 
 // Component
 public class DefaultCatPropertyProvider implements CatPropertyProvider {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/SessionManager.java
Patch:
@@ -29,7 +29,6 @@
 import org.apache.commons.lang3.StringUtils;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.configuration.CatPropertyProvider;
 import com.dianping.cat.system.page.login.spi.ISessionManager;
 import com.google.common.base.Function;
 

File: cat-home/src/test/java/com/dianping/cat/demo/TestCode.java
Patch:
@@ -28,6 +28,7 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Transaction;
+import com.dianping.cat.message.context.MessageContextHelper;
 import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.tree.MessageTree;
 
@@ -75,7 +76,7 @@ public void logError(Throwable able) {
 
 		Cat.logError(able);
 
-		MessageTree tree = Cat.getMessageTree();
+		MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 
 		((DefaultMessageTree) tree).setDomain("NeoCortex");
 		t.complete();
@@ -99,7 +100,7 @@ public void test() throws InterruptedException {
 				Cat.logError(new RuntimeException("sdsf"));
 			}
 
-			MessageTree tree = Cat.getMessageTree();
+			MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 
 			((DefaultMessageTree) tree).setDomain("NeoCortex");
 			t.setStatus(Transaction.SUCCESS);

File: cat-home/src/test/java/com/dianping/cat/demo/TestCrashLog.java
Patch:
@@ -24,6 +24,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Transaction;
+import com.dianping.cat.message.context.MessageContextHelper;
 import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.tree.MessageTree;
 
@@ -43,7 +44,7 @@ public void test() throws InterruptedException {
 				String moudle = getModule("Android", i);
 				String level = getLevel("Android", i);
 
-				MessageTree tree = Cat.getMessageTree();
+				MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 				((DefaultMessageTree) tree).setIpAddress(version + ":" + plateform + ":" + moudle + ":" + level);
 				((DefaultMessageTree) tree).setDomain("AndroidCrashLog");
 				t.complete();
@@ -58,7 +59,7 @@ public void test() throws InterruptedException {
 				String moudle2 = getModule("iOS", i);
 				String level2 = getLevel("iOS", i);
 
-				MessageTree tree2 = Cat.getMessageTree();
+				MessageTree tree2 = MessageContextHelper.threadLocal().getMessageTree();
 				((DefaultMessageTree) tree2).setIpAddress(version2 + ":" + plateform2 + ":" + moudle2 + ":" + level2);
 				((DefaultMessageTree) tree2).setDomain("iOSCrashLog");
 				t2.complete();

File: cat-home/src/test/java/com/dianping/cat/demo/TestCrossMessage.java
Patch:
@@ -28,6 +28,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Transaction;
+import com.dianping.cat.message.context.MessageContextHelper;
 import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.tree.MessageTree;
 
@@ -72,7 +73,7 @@ private void sendServiceMsg(String method, String server, String serverIp, Strin
 		Cat.logEvent("PigeonService.client", clientIp);
 		Cat.logEvent("PigeonService.app", client);
 
-		MessageTree tree = Cat.getMessageTree();
+		MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 
 		((DefaultMessageTree) tree).setDomain(server);
 		((DefaultMessageTree) tree).setIpAddress(serverIp);
@@ -88,7 +89,7 @@ private void sendClientMsg(String method, String client, String clientIp, String
 		Cat.logEvent("PigeonCall.app", server);
 		Cat.logEvent("PigeonCall.port", port);
 
-		MessageTree tree = Cat.getMessageTree();
+		MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 
 		((DefaultMessageTree) tree).setDomain(client);
 		((DefaultMessageTree) tree).setIpAddress(clientIp);

File: cat-home/src/test/java/com/dianping/cat/demo/TestMaxMessage.java
Patch:
@@ -29,7 +29,8 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.context.MessageContextHelper;
+import com.dianping.cat.message.tree.MessageTree;
 
 public class TestMaxMessage {
 
@@ -100,7 +101,7 @@ public void sendMaxMessage() throws Exception {
 			t5.setStatus(Message.SUCCESS);
 			t5.complete();
 
-			MessageTree tree = (MessageTree) Cat.getMessageTree();
+			MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 			String messageId = tree.getMessageId();
 
 			String[] ids = messageId.split("-");

File: cat-home/src/test/java/com/dianping/cat/demo/ThreadTest.java
Patch:
@@ -24,6 +24,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Transaction;
+import com.dianping.cat.message.context.MessageContextHelper;
 
 public class ThreadTest {
 
@@ -55,7 +56,7 @@ public void run() {
 
 			Transaction t = Cat.newTransaction("test2", "test2");
 
-			Cat.getMessageTree().setMessageId(m_messageId);
+			MessageContextHelper.threadLocal().getMessageTree().setMessageId(m_messageId);
 
 			t.complete();
 		}

File: cat-home/src/test/java/com/dianping/cat/report/page/cross/CrossTest.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Transaction;
+import com.dianping.cat.message.context.MessageContextHelper;
 import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.tree.MessageTree;
 
@@ -62,7 +63,7 @@ public void test() throws InterruptedException {
 
 	private void sendServiceMsg(String method, String server, String serverIp, String client, String clientIp) {
 		Transaction t = Cat.newTransaction("PigeonService", method);
-		MessageTree tree = Cat.getMessageTree();
+		MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 		((DefaultMessageTree) tree).setDomain(server);
 		((DefaultMessageTree) tree).setIpAddress(serverIp);
 		Cat.logEvent("PigeonService.client", clientIp);
@@ -73,7 +74,7 @@ private void sendServiceMsg(String method, String server, String serverIp, Strin
 
 	private void sendClientMsg(String method, String client, String clientIp, String server, String serverIp) {
 		Transaction t = Cat.newTransaction("PigeonCall", method);
-		MessageTree tree = Cat.getMessageTree();
+		MessageTree tree = MessageContextHelper.threadLocal().getMessageTree();
 		((DefaultMessageTree) tree).setDomain(client);
 		((DefaultMessageTree) tree).setIpAddress(clientIp);
 		Cat.logEvent("PigeonCall.server", serverIp);

File: cat-client/src/main/java/com/dianping/cat/CatBootstrap.java
Patch:
@@ -6,7 +6,6 @@
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.locks.LockSupport;
 
-import com.dianping.cat.analyzer.LocalAggregator;
 import com.dianping.cat.apiguardian.api.API;
 import com.dianping.cat.apiguardian.api.API.Status;
 import com.dianping.cat.component.ComponentContext;
@@ -19,9 +18,10 @@
 import com.dianping.cat.configuration.model.entity.ClientConfig;
 import com.dianping.cat.configuration.model.entity.Domain;
 import com.dianping.cat.configuration.model.entity.Server;
-import com.dianping.cat.message.internal.MessageIdFactory;
+import com.dianping.cat.message.analysis.LocalAggregator;
 import com.dianping.cat.message.internal.MilliSecondTimer;
 import com.dianping.cat.message.io.TransportManager;
+import com.dianping.cat.message.tree.MessageIdFactory;
 import com.dianping.cat.status.StatusUpdateTask;
 import com.dianping.cat.util.Threads;
 import com.dianping.cat.util.Threads.AbstractThreadListener;

File: cat-client/src/main/java/com/dianping/cat/configuration/ConfigureProperty.java
Patch:
@@ -18,4 +18,6 @@ public interface ConfigureProperty {
 	String START_TRANSACTION_TYPES = "startTransactionTypes";
 
 	String MATCH_TRANSACTION_TYPES = "matchTransactionTypes";
+
+	String MAX_MESSAGE_LENGTH = "max-message-lines";
 }

File: cat-client/src/main/java/com/dianping/cat/configuration/model/BaseEntity.java
Patch:
@@ -3,6 +3,7 @@
 
 import java.util.Formattable;
 import java.util.Formatter;
+
 import com.dianping.cat.configuration.model.transform.DefaultXmlBuilder;
 public abstract class BaseEntity<T> implements IEntity<T>, Formattable {
 

File: cat-client/src/main/java/com/dianping/cat/configuration/model/ClientConfigHelper.java
Patch:
@@ -6,12 +6,12 @@
 import java.io.InputStream;
 import java.io.StringReader;
 
+import org.xml.sax.InputSource;
+
 import com.dianping.cat.configuration.model.entity.ClientConfig;
 import com.dianping.cat.configuration.model.transform.DefaultXmlBuilder;
 import com.dianping.cat.configuration.model.transform.DefaultXmlParser;
 
-import org.xml.sax.InputSource;
-
 public class ClientConfigHelper {
    public static String asXml(IEntity<?> entity) {
       return new DefaultXmlBuilder().build(entity);

File: cat-client/src/main/java/com/dianping/cat/configuration/model/transform/DefaultLinker.java
Patch:
@@ -3,6 +3,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+
 import com.dianping.cat.configuration.model.entity.ClientConfig;
 import com.dianping.cat.configuration.model.entity.Domain;
 import com.dianping.cat.configuration.model.entity.Host;

File: cat-client/src/main/java/com/dianping/cat/configuration/model/transform/DefaultXmlMaker.java
Patch:
@@ -10,6 +10,7 @@
 import static com.dianping.cat.configuration.model.Constants.ATTR_TENANT_TOKEN;
 
 import java.util.Map;
+
 import org.xml.sax.Attributes;
 
 import com.dianping.cat.configuration.model.entity.ClientConfig;

File: cat-client/src/main/java/com/dianping/cat/configuration/model/transform/DefaultXmlParser.java
Patch:
@@ -5,9 +5,9 @@
 import static com.dianping.cat.configuration.model.Constants.ENTITY_CONFIG;
 import static com.dianping.cat.configuration.model.Constants.ENTITY_DOMAIN;
 import static com.dianping.cat.configuration.model.Constants.ENTITY_HOST;
+import static com.dianping.cat.configuration.model.Constants.ENTITY_PROPERTIES;
 import static com.dianping.cat.configuration.model.Constants.ENTITY_PROPERTY;
 import static com.dianping.cat.configuration.model.Constants.ENTITY_SERVER;
-import static com.dianping.cat.configuration.model.Constants.ENTITY_PROPERTIES;
 import static com.dianping.cat.configuration.model.Constants.ENTITY_SERVERS;
 
 import java.io.IOException;

File: cat-client/src/main/java/com/dianping/cat/log4j/CatAppender.java
Patch:
@@ -33,7 +33,7 @@
 public class CatAppender extends AppenderSkeleton {
 	@Override
 	protected void append(LoggingEvent event) {
-		boolean isTraceMode = Cat.getManager().isTraceMode();
+		boolean isTraceMode = false; // Cat.getManager().isTraceMode();
 		Level level = event.getLevel();
 
 		if (level.isGreaterOrEqual(Level.ERROR)) {

File: cat-client/src/main/java/com/dianping/cat/message/Event.java
Patch:
@@ -38,5 +38,5 @@
 	* @author Frankie Wu
 	*/
 public interface Event extends Message {
-
+	public void complete(long startInMillis);
 }

File: cat-client/src/main/java/com/dianping/cat/message/analysis/AtomicTreeParser.java
Patch:
@@ -16,14 +16,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.analyzer;
+package com.dianping.cat.message.analysis;
 
 import java.util.ArrayList;
 import java.util.List;
 
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageTree;
 import com.dianping.cat.util.Splitters;
 
 public class AtomicTreeParser {

File: cat-client/src/main/java/com/dianping/cat/message/analysis/DurationComputer.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.analyzer;
+package com.dianping.cat.message.analysis;
 
 public class DurationComputer {
 

File: cat-client/src/main/java/com/dianping/cat/message/analysis/LocalAggregator.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.analyzer;
+package com.dianping.cat.message.analysis;
 
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
@@ -28,7 +28,7 @@
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageTree;
 import com.dianping.cat.util.Threads.Task;
 
 // Component

File: cat-client/src/main/java/com/dianping/cat/message/analysis/ProblemLongType.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.analyzer;
+package com.dianping.cat.message.analysis;
 
 public enum ProblemLongType {
 

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -29,7 +29,7 @@
 import com.dianping.cat.component.lifecycle.Logger;
 import com.dianping.cat.configuration.ConfigureManager;
 import com.dianping.cat.configuration.ConfigureProperty;
-import com.dianping.cat.message.internal.MessageIdFactory;
+import com.dianping.cat.message.tree.MessageIdFactory;
 import com.dianping.cat.util.Pair;
 import com.dianping.cat.util.Splitters;
 import com.dianping.cat.util.StringUtils;

File: cat-client/src/main/java/com/dianping/cat/message/io/DefaultMessageQueue.java
Patch:
@@ -22,8 +22,7 @@
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.TimeUnit;
 
-import com.dianping.cat.message.spi.MessageQueue;
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageTree;
 
 public class DefaultMessageQueue implements MessageQueue {
 

File: cat-client/src/main/java/com/dianping/cat/message/io/DefaultMessageStatistics.java
Patch:
@@ -16,10 +16,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.spi.internal;
+package com.dianping.cat.message.io;
 
-import com.dianping.cat.message.spi.MessageStatistics;
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageTree;
 
 // Component
 public class DefaultMessageStatistics implements MessageStatistics {

File: cat-client/src/main/java/com/dianping/cat/message/io/MessageSender.java
Patch:
@@ -21,7 +21,7 @@
 import java.net.InetSocketAddress;
 import java.util.List;
 
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageTree;
 
 public interface MessageSender {
 	public void initialize(List<InetSocketAddress> addresses);

File: cat-client/src/main/java/com/dianping/cat/message/io/MessageStatistics.java
Patch:
@@ -16,7 +16,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.spi;
+package com.dianping.cat.message.io;
+
+import com.dianping.cat.message.tree.MessageTree;
 
 public interface MessageStatistics {
 	public long getBytes();

File: cat-client/src/main/java/com/dianping/cat/message/tree/MessageId.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.internal;
+package com.dianping.cat.message.tree;
 
 import com.dianping.cat.util.StringUtils;
 

File: cat-client/src/main/java/com/dianping/cat/message/tree/MessageIdFactory.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.internal;
+package com.dianping.cat.message.tree;
 
 import java.io.File;
 import java.io.RandomAccessFile;

File: cat-client/src/main/java/com/dianping/cat/status/StatusInfoCollector.java
Patch:
@@ -31,7 +31,7 @@
 import java.util.List;
 import java.util.TreeMap;
 
-import com.dianping.cat.message.spi.MessageStatistics;
+import com.dianping.cat.message.io.MessageStatistics;
 import com.dianping.cat.status.model.entity.DiskInfo;
 import com.dianping.cat.status.model.entity.DiskVolumeInfo;
 import com.dianping.cat.status.model.entity.Extension;

File: cat-client/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -31,9 +31,8 @@
 import com.dianping.cat.message.EventTest;
 import com.dianping.cat.message.HeartbeatTest;
 import com.dianping.cat.message.TransactionTest;
-import com.dianping.cat.message.internal.MessageIdFactoryTest;
 import com.dianping.cat.message.internal.MockMessageBuilderTest;
-import com.dianping.cat.message.internal.MultiThreadingTest;
+import com.dianping.cat.message.tree.MessageIdFactoryTest;
 import com.dianping.cat.servlet.CatFilterTest;
 
 @RunWith(Suite.class)
@@ -79,7 +78,7 @@
 
       MockMessageBuilderTest.class,
 
-      MultiThreadingTest.class
+//      MultiThreadingTest.class
 
 })
 public class AllTests {

File: cat-client/src/test/java/com/dianping/cat/CatTest.java
Patch:
@@ -46,7 +46,6 @@ public void test() {
 		Cat.logMetricForSum("logMetricForSum", 100, 100);
 		Cat.logEvent("RemoteLink", "Call", Message.SUCCESS, "Cat-0a010680-384736-2061");
 		Cat.logEvent("EventType", "EventName");
-		Cat.logHeartbeat("logHeartbeat", "logHeartbeat", Message.SUCCESS, null);
 
 		Assert.assertEquals(true, Cat.isInitialized());
 	}

File: cat-client/src/test/java/com/dianping/cat/component/LoggerTest.java
Patch:
@@ -4,8 +4,8 @@
 import org.junit.Test;
 
 import com.dianping.cat.component.lifecycle.DefaultLogger;
-import com.dianping.cat.component.lifecycle.Logger;
 import com.dianping.cat.component.lifecycle.DefaultLogger.Output;
+import com.dianping.cat.component.lifecycle.Logger;
 import com.dianping.cat.component.lifecycle.Logger.Level;
 
 public class LoggerTest {

File: cat-client/src/test/java/com/dianping/cat/message/TransactionTest.java
Patch:
@@ -25,7 +25,7 @@
 public class TransactionTest {
 	@Test
 	public void testNormal() {
-		Transaction t = Cat.getProducer().newTransaction("URL", "MyPage");
+		Transaction t = Cat.newTransaction("URL", "MyPage");
 
 		try {
 			// do your business here

File: cat-client/src/test/java/com/dianping/cat/message/internal/MmapConsumerTaskTest.java
Patch:
@@ -31,6 +31,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.ComponentTestCase;
+import com.dianping.cat.message.tree.MessageIdFactory;
 
 public class MmapConsumerTaskTest extends ComponentTestCase {
 	private void createMessage(MessageIdFactory factory, StringBuilder sb, int i) {

File: cat-client/src/test/java/com/dianping/cat/message/tree/MessageIdFactoryTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.message.internal;
+package com.dianping.cat.message.tree;
 
 import java.io.BufferedReader;
 import java.io.File;

File: cat-client/src/test/java/com/dianping/cat/servlet/CatFilterTest.java
Patch:
@@ -94,7 +94,7 @@ public void testMode1() throws Exception {
 
 		try {
 			String childId = Cat.createMessageId();
-			String id = Cat.getManager().getThreadLocalMessageTree().getMessageId();
+			String id = Cat.getMessageTree().getMessageId();
 
 			Cat.logEvent("RemoteCall", url, Message.SUCCESS, childId);
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -22,8 +22,8 @@
 import com.dianping.cat.analysis.AbstractMessageAnalyzer;
 import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.report.ReportManager;
 import com.dianping.cat.statistic.ServerStatisticManager;
 import org.codehaus.plexus.logging.LogEnabled;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/LocalMessageBucketManager.java
Patch:
@@ -50,13 +50,13 @@
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.PathBuilder;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 import com.dianping.cat.message.storage.LocalMessageBucket;
 import com.dianping.cat.message.storage.MessageBlock;
 import com.dianping.cat.message.storage.MessageBucket;
 import com.dianping.cat.message.storage.MessageBucketManager;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.statistic.ServerStatisticManager;
 
 import io.netty.buffer.ByteBuf;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/MessageItem.java
Patch:
@@ -18,8 +18,8 @@
  */
 package com.dianping.cat.consumer.dump;
 
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 
 public class MessageItem {
 	private MessageTree m_tree;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -157,13 +157,13 @@ private void cleanUpReports() {
 					EventReport report = m_reportManager.getHourlyReport(m_startTime, domain, false);
 
 					visitor.visitEventReport(report);
-					tran.setSuccessStatus();
+					tran.success();
 				} catch (Exception e) {
 					try {
 						EventReport report = m_reportManager.getHourlyReport(m_startTime, domain, false);
 
 						visitor.visitEventReport(report);
-						tran.setSuccessStatus();
+						tran.success();
 					} catch (Exception re) {
 						tran.setStatus(re);
 						Cat.logError(re);
@@ -172,7 +172,7 @@ private void cleanUpReports() {
 					tran.complete();
 				}
 			}
-			t.setSuccessStatus();
+			t.success();
 		} catch (Exception e) {
 			Cat.logError(e);
 		} finally {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -23,7 +23,6 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.consumer.core.aggregation.CompositeFormatTest;
-import com.dianping.cat.consumer.core.aggregation.DefaultFormatTest;
 import com.dianping.cat.consumer.cross.CrossAnalyzerTest;
 import com.dianping.cat.consumer.cross.CrossInfoTest;
 import com.dianping.cat.consumer.cross.CrossReportMergerTest;
@@ -93,8 +92,6 @@
 
 						CompositeFormatTest.class,
 
-						DefaultFormatTest.class,
-
 						ProblemFilterTest.class,
 
 						//MetricAnalyzerTest.class,

File: cat-consumer/src/test/java/com/dianping/cat/consumer/TestHelper.java
Patch:
@@ -27,7 +27,7 @@
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 public class TestHelper {
 	/**

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/StoragePerformanceTest.java
Patch:
@@ -27,12 +27,12 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.codec.PlainTextMessageCodec;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageCodec;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 import com.dianping.cat.message.storage.MessageBucketManager;
+import com.dianping.cat.message.tree.MessageId;
 
 public class StoragePerformanceTest extends ComponentTestCase {
 	private MessageCodec m_codec = new PlainTextMessageCodec();

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/TreeHelper.java
Patch:
@@ -22,10 +22,10 @@
 import io.netty.buffer.Unpooled;
 
 import com.dianping.cat.message.Message;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageCodec;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
+import com.dianping.cat.message.tree.MessageId;
 
 public class TreeHelper {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzerTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.unidal.helper.Files;
@@ -34,8 +34,8 @@
 import com.dianping.cat.message.Heartbeat;
 import com.dianping.cat.message.internal.DefaultHeartbeat;
 import com.dianping.cat.message.internal.DefaultTransaction;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class HeartbeatAnalyzerTest extends ComponentTestCase {
 
@@ -83,7 +83,7 @@ protected MessageTree generateMessageTree(int i) throws IOException {
 		tree.setHostName("group001");
 		tree.setIpAddress("192.168.1.1");
 
-		DefaultTransaction t = new DefaultTransaction("A", "n" + i % 2, null);
+		DefaultTransaction t = new DefaultTransaction("A", "n" + i % 2);
 
 		Heartbeat heartbeat = newHeartbeat("heartbeat", "fail", m_timestamp + i * 1000 * 60, "0");
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/matrix/MatrixModelTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.consumer.matrix;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/CrossPerformanceTest.java
Patch:
@@ -33,8 +33,8 @@
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class CrossPerformanceTest extends ComponentTestCase {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/DumpPerformanceTest.java
Patch:
@@ -24,10 +24,10 @@
 import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.dump.DumpAnalyzer;
 import com.dianping.cat.message.Message;
-import com.dianping.cat.message.internal.MessageIdFactory;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
+import com.dianping.cat.message.tree.MessageIdFactory;
 
 public class DumpPerformanceTest extends ComponentTestCase {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/EventPerformanceTest.java
Patch:
@@ -25,8 +25,8 @@
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class EventPerformanceTest extends ComponentTestCase {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/MatrixPerformanceTest.java
Patch:
@@ -25,8 +25,8 @@
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class MatrixPerformanceTest extends ComponentTestCase {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/ProblemPerformanceTest.java
Patch:
@@ -27,8 +27,8 @@
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.DefaultEvent;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class ProblemPerformanceTest extends ComponentTestCase {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/TransactionPerformanceTest.java
Patch:
@@ -25,8 +25,8 @@
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class TransactionPerformanceTest extends ComponentTestCase {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemFilterTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.consumer.problem;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemHandlerTest.java
Patch:
@@ -21,7 +21,7 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 public class ProblemHandlerTest {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/state/StateAnalyzerTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.Date;
 import java.util.TimeZone;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.unidal.helper.Files;

File: cat-consumer/src/test/java/com/dianping/cat/consumer/storage/DatabaseParserTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.consumer.storage;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionAnalyzerTest.java
Patch:
@@ -33,8 +33,8 @@
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.DefaultTransaction;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class TransactionAnalyzerTest extends ComponentTestCase {
 	private long m_timestamp;
@@ -93,8 +93,8 @@ protected MessageTree generateMessageTree(int i) {
 		tree.setHostName("group001");
 		tree.setIpAddress("192.168.1.1");
 
-		DefaultTransaction t = new DefaultTransaction("A", "n" + i % 2, null);
-		DefaultTransaction t2 = new DefaultTransaction("A-1", "n" + i % 3, null);
+		DefaultTransaction t = new DefaultTransaction("A", "n" + i % 2);
+		DefaultTransaction t2 = new DefaultTransaction("A-1", "n" + i % 3);
 
 		if (i % 2 == 0) {
 			t2.setStatus("ERROR");

File: cat-core/src/main/java/com/dianping/cat/analysis/MessageAnalyzer.java
Patch:
@@ -18,8 +18,7 @@
  */
 package com.dianping.cat.analysis;
 
-import com.dianping.cat.message.spi.MessageQueue;
-import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.report.ReportManager;
 
 public interface MessageAnalyzer {

File: cat-core/src/main/java/com/dianping/cat/analysis/MessageConsumer.java
Patch:
@@ -18,8 +18,8 @@
  */
 package com.dianping.cat.analysis;
 
-import java.util.List;
-
+import java.util.List;
+
 import com.dianping.cat.message.spi.MessageTree;
 
 public interface MessageConsumer {

File: cat-core/src/main/java/com/dianping/cat/analysis/Period.java
Patch:
@@ -31,8 +31,6 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.message.io.DefaultMessageQueue;
-import com.dianping.cat.message.spi.MessageQueue;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.statistic.ServerStatisticManager;
 

File: cat-core/src/main/java/com/dianping/cat/analysis/PeriodTask.java
Patch:
@@ -28,7 +28,6 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.CatConstants;
-import com.dianping.cat.message.spi.MessageQueue;
 import com.dianping.cat.message.spi.MessageTree;
 
 public class PeriodTask implements Task, LogEnabled {

File: cat-core/src/main/java/com/dianping/cat/analysis/TcpSocketReceiver.java
Patch:
@@ -28,8 +28,8 @@
 import com.dianping.cat.CatConstants;
 import com.dianping.cat.config.server.ServerConfigManager;
 import com.dianping.cat.message.CodecHandler;
-import com.dianping.cat.message.io.BufReleaseHelper;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
+import com.dianping.cat.message.spi.BufReleaseHelper;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.statistic.ServerStatisticManager;
 
 import io.netty.bootstrap.ServerBootstrap;

File: cat-core/src/main/java/com/dianping/cat/message/CodecHandler.java
Patch:
@@ -20,10 +20,10 @@
 
 import io.netty.buffer.ByteBuf;
 
+import com.dianping.cat.message.codec.NativeMessageCodec;
+import com.dianping.cat.message.codec.PlainTextMessageCodec;
 import com.dianping.cat.message.spi.MessageCodec;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.codec.NativeMessageCodec;
-import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
 
 public class CodecHandler {
 

File: cat-core/src/main/java/com/dianping/cat/message/codec/BufferWriter.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.spi.codec;
+package com.dianping.cat.message.codec;
 
 import io.netty.buffer.ByteBuf;
 

File: cat-core/src/main/java/com/dianping/cat/message/codec/EscapingBufferWriter.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.spi.codec;
+package com.dianping.cat.message.codec;
 
 import io.netty.buffer.ByteBuf;
 

File: cat-core/src/main/java/com/dianping/cat/message/codec/HtmlEncodingBufferWriter.java
Patch:
@@ -20,8 +20,6 @@
 
 import io.netty.buffer.ByteBuf;
 
-import com.dianping.cat.message.spi.codec.BufferWriter;
-
 public class HtmlEncodingBufferWriter implements BufferWriter {
 	public static final String ID = "html";
 

File: cat-core/src/main/java/com/dianping/cat/message/codec/HtmlMessageCodec.java
Patch:
@@ -39,7 +39,6 @@
 import com.dianping.cat.message.Trace;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.codec.BufferWriter;
 
 public class HtmlMessageCodec {
 

File: cat-core/src/main/java/com/dianping/cat/message/codec/WaterfallMessageCodec.java
Patch:
@@ -30,7 +30,6 @@
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.codec.BufferWriter;
 
 public class WaterfallMessageCodec {
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/BufReleaseHelper.java
Patch:
@@ -16,7 +16,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.dianping.cat.message.io;
+package com.dianping.cat.message.spi;
 
 import com.dianping.cat.Cat;
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/MessageTree.java
Patch:
@@ -25,7 +25,7 @@
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Metric;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 import io.netty.buffer.ByteBuf;
 

File: cat-core/src/main/java/com/dianping/cat/message/storage/LocalMessageBucket.java
Patch:
@@ -32,8 +32,8 @@
 import org.xerial.snappy.SnappyOutputStream;
 
 import com.dianping.cat.message.CodecHandler;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = MessageBucket.class, value = LocalMessageBucket.ID, instantiationStrategy = Named.PER_LOOKUP)
 public class LocalMessageBucket implements MessageBucket {

File: cat-core/src/main/java/com/dianping/cat/message/storage/MessageBucketManager.java
Patch:
@@ -18,8 +18,8 @@
  */
 package com.dianping.cat.message.storage;
 
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 
 public interface MessageBucketManager {
 	public void archive(long startTime);

File: cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java
Patch:
@@ -281,7 +281,7 @@ private void storeDatabase(long startTime, Map<String, T> reports) {
 				m_reportContentDao.insert(content);
 				m_reportDelegate.createHourlyTask(report);
 			} catch (Throwable e) {
-				Cat.getProducer().logError(e);
+				Cat.logError(e);
 			}
 		}
 	}

File: cat-core/src/main/java/com/dianping/cat/report/service/BaseCompositeModelService.java
Patch:
@@ -99,7 +99,7 @@ public ModelResponse<T> invoke(final ModelRequest request) {
 		int requireSize = 0;
 		final List<ModelResponse<T>> responses = Collections.synchronizedList(new ArrayList<ModelResponse<T>>());
 		final Semaphore semaphore = new Semaphore(0);
-		final Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
+		final Transaction t = Cat.newTransaction("ModelService", getClass().getSimpleName());
 		int count = 0;
 
 		t.setStatus(Message.SUCCESS);

File: cat-core/src/main/java/com/dianping/cat/report/service/ModelServiceWithCalSupport.java
Patch:
@@ -26,7 +26,6 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.internal.DefaultEvent;
-import com.dianping.cat.message.internal.DefaultMessageProducer;
 
 public abstract class ModelServiceWithCalSupport extends ContainerHolder {
 	private Transaction m_current;
@@ -58,9 +57,10 @@ protected void logEvent(String type, String name, String status, String nameValu
 	}
 
 	protected Transaction newTransaction(String type, String name) {
-		DefaultMessageProducer cat = (DefaultMessageProducer) Cat.getProducer();
+		Transaction transaction = Cat.newTransaction(type, name);
 
-		return cat.newTransaction(m_current, type, name);
+		m_current.addChild(transaction);
+		return transaction;
 	}
 
 	protected void setParentTransaction(Transaction current) {

File: cat-core/src/test/java/com/dianping/cat/message/DefaultMessagePathBuilderTest.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.List;
 import java.util.TimeZone;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Splitters;
 

File: cat-core/src/test/java/com/dianping/cat/message/MockMessageTreeBuilder.java
Patch:
@@ -19,8 +19,8 @@
 package com.dianping.cat.message;
 
 import com.dianping.cat.message.internal.MockMessageBuilder;
+import com.dianping.cat.message.spi.DefaultMessageTree;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 public class MockMessageTreeBuilder {
 

File: cat-core/src/test/java/com/dianping/cat/service/DefaultReportManagerTest.java
Patch:
@@ -27,7 +27,7 @@
 import java.util.Map.Entry;
 import java.util.Set;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.unidal.dal.jdbc.DalException;

File: cat-core/src/test/java/com/dianping/cat/service/ModelPeriodTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.service;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.report.service.ModelPeriod;

File: cat-core/src/test/java/com/dianping/cat/service/ModelRequestTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.service;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.report.service.ModelPeriod;

File: cat-core/src/test/java/com/dianping/cat/service/ModelResponseTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.service;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.report.service.ModelResponse;

File: cat-core/src/test/java/com/dianping/cat/statistic/ServerStatisticManagerTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.statistic;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.statistic.ServerStatistic.Statistic;
@@ -58,8 +58,8 @@ public void test() {
 		Assert.assertEquals(11, findState(manager, time).getMessageTotalLoss());
 		Assert.assertEquals(9, findState(manager, time).getPigeonTimeError());
 		Assert.assertEquals(10, findState(manager, time).getNetworkTimeError());
-		Assert.assertEquals(11.0, findState(manager, time).getProcessDelaySum());
-		Assert.assertEquals(11.0, findState(manager, time).getAvgProcessDelay());
+		Assert.assertEquals(11.0, findState(manager, time).getProcessDelaySum(), 1e-6);
+		Assert.assertEquals(11.0, findState(manager, time).getAvgProcessDelay(), 1e-6);
 		Assert.assertEquals(1, findState(manager, time).getProcessDelayCount());
 		Assert.assertEquals(7, findState(manager, time).getMessageSizes().get(domain).get());
 		Assert.assertEquals(2, findState(manager, time).getMessageTotals().get(domain).get());

File: cat-core/src/test/java/com/dianping/cat/storage/BucketConcurrentTest.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.concurrent.Executors;
 import java.util.concurrent.TimeUnit;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Ignore;
 import org.junit.Test;

File: cat-core/src/test/java/com/dianping/cat/storage/StringBucketTestCase.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.concurrent.Executors;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;

File: cat-core/src/test/java/com/dianping/cat/storage/message/MessageBlockTest.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.io.IOException;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.xerial.snappy.SnappyOutputStream;
 

File: cat-core/src/test/java/com/dianping/cat/task/TaskManagerTest.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Map;
 import java.util.Set;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.dal.jdbc.DalException;
 

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucketManager.java
Patch:
@@ -24,10 +24,11 @@
 import com.dianping.cat.message.PathBuilder;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.internal.DefaultTransaction;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.storage.MessageBucket;
 import com.dianping.cat.message.storage.MessageBucketManager;
+import com.dianping.cat.message.tree.MessageId;
+
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.fs.PathFilter;

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/bucket/AbstractHdfsMessageBucket.java
Patch:
@@ -30,9 +30,9 @@
 import com.dianping.cat.hadoop.hdfs.FileSystemManager;
 import com.dianping.cat.hadoop.hdfs.MessageBlockReader;
 import com.dianping.cat.message.CodecHandler;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.storage.MessageBucket;
+import com.dianping.cat.message.tree.MessageId;
 
 public abstract class AbstractHdfsMessageBucket implements MessageBucket {
 

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/Block.java
Patch:
@@ -21,9 +21,9 @@
 import java.io.IOException;
 import java.util.Map;
 
-import io.netty.buffer.ByteBuf;
+import com.dianping.cat.message.tree.MessageId;
 
-import com.dianping.cat.message.internal.MessageId;
+import io.netty.buffer.ByteBuf;
 
 public interface Block {
 	public void clear();

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/Bucket.java
Patch:
@@ -21,9 +21,9 @@
 import java.io.IOException;
 import java.util.Map;
 
-import io.netty.buffer.ByteBuf;
+import com.dianping.cat.message.tree.MessageId;
 
-import com.dianping.cat.message.internal.MessageId;
+import io.netty.buffer.ByteBuf;
 
 public interface Bucket {
 	public static final long SEGMENT_SIZE = 32 * 1024L;

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/Index.java
Patch:
@@ -21,7 +21,7 @@
 import java.io.IOException;
 import java.util.Map;
 
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 public interface Index {
 

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/MessageFinder.java
Patch:
@@ -18,9 +18,9 @@
  */
 package org.unidal.cat.message.storage;
 
-import io.netty.buffer.ByteBuf;
+import com.dianping.cat.message.tree.MessageId;
 
-import com.dianping.cat.message.internal.MessageId;
+import io.netty.buffer.ByteBuf;
 
 public interface MessageFinder {
 	public ByteBuf find(MessageId id);

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/MessageFinderManager.java
Patch:
@@ -18,9 +18,9 @@
  */
 package org.unidal.cat.message.storage;
 
-import io.netty.buffer.ByteBuf;
+import com.dianping.cat.message.tree.MessageId;
 
-import com.dianping.cat.message.internal.MessageId;
+import io.netty.buffer.ByteBuf;
 
 public interface MessageFinderManager {
 	public void close(int hour);

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/clean/LogviewProcessor.java
Patch:
@@ -163,10 +163,10 @@ private void processLogviewFiles(final List<String> paths, boolean upload) {
 			try {
 				if (upload) {
 					uploadFileToHdfs(path);
-					Cat.getProducer().logEvent("Upload", "UploadAndDelete", Message.SUCCESS, loginfo);
+					Cat.logEvent("Upload", "UploadAndDelete", Message.SUCCESS, loginfo);
 				} else {
 					deleteLocalFile(path);
-					Cat.getProducer().logEvent("Upload", "Delete", Message.SUCCESS, loginfo);
+					Cat.logEvent("Upload", "Delete", Message.SUCCESS, loginfo);
 				}
 			} catch (Exception e) {
 				t.setStatus(e);

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsBucket.java
Patch:
@@ -38,7 +38,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.config.server.ServerConfigManager;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = Bucket.class, value = HdfsBucket.ID, instantiationStrategy = Named.PER_LOOKUP)
 public class HdfsBucket implements Bucket {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsBucketManager.java
Patch:
@@ -38,8 +38,8 @@
 import com.dianping.cat.message.CodecHandler;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named
 public class HdfsBucketManager extends ContainerHolder implements Initializable, LogEnabled {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsIndex.java
Patch:
@@ -37,7 +37,7 @@
 import org.unidal.lookup.annotation.Named;
 
 import com.dianping.cat.config.server.ServerConfigManager;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = Index.class, value = HdfsBucket.ID, instantiationStrategy = Named.PER_LOOKUP)
 public class HdfsIndex implements Index {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/hdfs/HdfsIndexManager.java
Patch:
@@ -36,7 +36,7 @@
 import com.dianping.cat.config.server.ServerConfigManager;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named
 public class HdfsIndexManager extends ContainerHolder implements Initializable, LogEnabled {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultBlock.java
Patch:
@@ -36,7 +36,7 @@
 import org.xerial.snappy.SnappyOutputStream;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 public class DefaultBlock implements Block {
 

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageDumper.java
Patch:
@@ -43,8 +43,8 @@
 import com.dianping.cat.CatConstants;
 import com.dianping.cat.config.server.ServerConfigManager;
 import com.dianping.cat.helper.TimeHelper;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.statistic.ServerStatisticManager;
 
 @Named(type = MessageDumper.class, instantiationStrategy = Named.PER_LOOKUP)

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageFinderManager.java
Patch:
@@ -28,7 +28,7 @@
 import org.unidal.cat.message.storage.MessageFinderManager;
 import org.unidal.lookup.annotation.Named;
 
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = MessageFinderManager.class)
 public class DefaultMessageFinderManager implements MessageFinderManager {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/internals/DefaultMessageProcessor.java
Patch:
@@ -41,8 +41,8 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.config.server.ServerConfigManager;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = MessageProcessor.class, instantiationStrategy = Named.PER_LOOKUP)
 public class DefaultMessageProcessor implements MessageProcessor, MessageFinder {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucket.java
Patch:
@@ -45,7 +45,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.config.server.ServerConfigManager;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = Bucket.class, value = "local", instantiationStrategy = Named.PER_LOOKUP)
 public class LocalBucket implements Bucket {

File: cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalIndex.java
Patch:
@@ -43,7 +43,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Event;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 @Named(type = Index.class, value = "local", instantiationStrategy = Named.PER_LOOKUP)
 public class LocalIndex implements Index {

File: cat-hadoop/src/test/java/org/unidal/cat/message/MessageIdTest.java
Patch:
@@ -20,11 +20,11 @@
 
 import java.io.IOException;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 public class MessageIdTest extends ComponentTestCase {
 	@Test

File: cat-hadoop/src/test/java/org/unidal/cat/message/storage/IndexManagerTest.java
Patch:
@@ -20,12 +20,12 @@
 
 import java.io.IOException;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.configuration.NetworkInterfaceManager;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 public class IndexManagerTest extends ComponentTestCase {
 	@Test

File: cat-hadoop/src/test/java/org/unidal/cat/message/storage/IndexTest.java
Patch:
@@ -20,14 +20,14 @@
 
 import java.io.File;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.unidal.helper.Files;
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.configuration.NetworkInterfaceManager;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 public class IndexTest extends ComponentTestCase {
 

File: cat-hadoop/src/test/java/org/unidal/cat/message/storage/TokenMappingTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.io.IOException;
 import java.util.concurrent.CountDownLatch;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.unidal.helper.Files;

File: cat-hadoop/src/test/java/org/unidal/cat/message/storage/hdfs/MessageConsumerIpFindTest.java
Patch:
@@ -26,7 +26,7 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.config.server.ServerConfigManager;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 
 public class MessageConsumerIpFindTest extends ComponentTestCase {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/Handler.java
Patch:
@@ -31,7 +31,7 @@
 import com.dianping.cat.config.server.ServerConfigManager;
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.message.Event;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.service.ModelRequest;
 import com.dianping.cat.report.service.ModelResponse;

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/service/HistoricalMessageService.java
Patch:
@@ -31,9 +31,9 @@
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.codec.HtmlMessageCodec;
 import com.dianping.cat.message.codec.WaterfallMessageCodec;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.storage.MessageBucketManager;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.report.service.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ModelRequest;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/service/LocalMessageService.java
Patch:
@@ -37,9 +37,9 @@
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.codec.HtmlMessageCodec;
 import com.dianping.cat.message.codec.WaterfallMessageCodec;
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.storage.MessageBucketManager;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.mvc.ApiPayload;
 import com.dianping.cat.report.service.LocalModelService;
 import com.dianping.cat.report.service.ModelPeriod;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -36,7 +36,7 @@
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.message.internal.MessageId;
+import com.dianping.cat.message.tree.MessageId;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.service.LocalModelService;
 import com.dianping.cat.report.service.ModelPeriod;

File: cat-home/src/test/java/com/dianping/cat/TestHelper.java
Patch:
@@ -20,7 +20,7 @@
 import com.dianping.cat.consumer.transaction.model.IEntity;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 public class TestHelper {
 

File: cat-home/src/test/java/com/dianping/cat/demo/ThreadTest.java
Patch:
@@ -31,7 +31,7 @@ public class ThreadTest {
 	public void test() throws InterruptedException {
 		Transaction t = Cat.newTransaction("test3", "test3");
 
-		String id = Cat.getProducer().createMessageId();
+		String id = Cat.createMessageId();
 
 		Threads.forGroup("cat").start(new Task(id));
 
@@ -55,7 +55,7 @@ public void run() {
 
 			Transaction t = Cat.newTransaction("test2", "test2");
 
-			Cat.getManager().getThreadLocalMessageTree().setMessageId(m_messageId);
+			Cat.getMessageTree().setMessageId(m_messageId);
 
 			t.complete();
 		}

File: cat-home/src/test/java/com/dianping/cat/report/alert/FrontEndJsonTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.io.InputStream;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.alarm.rule.entity.Rule;

File: cat-home/src/test/java/com/dianping/cat/report/alert/JudgeTimeTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.util.Calendar;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 public class JudgeTimeTest {

File: cat-home/src/test/java/com/dianping/cat/report/alert/MetricIdAndRuleMappingTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.List;
 import java.util.Map;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/SuspendTest.java
Patch:
@@ -21,7 +21,7 @@
 import java.util.Date;
 import java.util.concurrent.TimeUnit;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/UserDefineRuleTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.report.alert;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.tuple.Pair;
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/sender/SenderTest.java
Patch:
@@ -21,7 +21,7 @@
 import java.util.Arrays;
 import java.util.Map;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/RouterBuilderTest.java
Patch:
@@ -21,7 +21,7 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 

File: cat-home/src/test/java/com/dianping/cat/report/graph/ValueTranslaterTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.report.graph;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -40,6 +40,6 @@ public void test() throws Exception {
 	void check(double expected, double... values) throws Exception {
 		ValueTranslater translater = lookup(ValueTranslater.class);
 
-		Assert.assertEquals(expected, translater.getMaxValue(values));
+		Assert.assertEquals(expected, translater.getMaxValue(values), 1e-6);
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/report/page/event/EventReportFilterTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.report.page.event;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-home/src/test/java/com/dianping/cat/report/page/event/EventTrendGraphBuilderTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.util.Map;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
@@ -59,7 +59,7 @@ public void testVisitType() throws Exception {
 
 	public void assertArray(double expected, double[] real) {
 		for (int i = 0; i < real.length; i++) {
-			Assert.assertEquals(expected, real[i]);
+			Assert.assertEquals(expected, real[i], 1e-6);
 		}
 	}
 

File: cat-home/src/test/java/com/dianping/cat/report/page/problem/ProblemTrendGraphBuilderTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.util.Arrays;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-home/src/test/java/com/dianping/cat/report/page/transaction/PayloadTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.Calendar;
 import java.util.Date;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.report.service.ModelPeriod;

File: cat-home/src/test/java/com/dianping/cat/report/page/transaction/TransactionTrendGraphBuilderTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.util.Map;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
@@ -62,7 +62,7 @@ public void testVisitType() throws Exception {
 
 	public void assertArray(double expected, double[] real) {
 		for (int i = 0; i < real.length; i++) {
-			Assert.assertEquals(expected, real[i]);
+			Assert.assertEquals(expected, real[i], 1e-6);
 		}
 	}
 

File: cat-home/src/test/java/com/dianping/cat/report/task/ConfigsBackupTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.io.IOException;
 import java.util.List;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.helper.Files;

File: cat-home/src/test/java/com/dianping/cat/report/task/TaskConsumerTest.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.core.dal.Task;

File: cat-home/src/test/java/com/dianping/cat/report/task/cached/CachedReportBuilerTest.java
Patch:
@@ -21,7 +21,7 @@
 import java.io.File;
 import java.util.Date;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.List;
 import java.util.Map;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.helper.Files;
 

File: cat-client/src/main/java/com/dianping/cat/CatClientConstants.java
Patch:
@@ -19,7 +19,7 @@
 package com.dianping.cat;
 
 public interface CatClientConstants {
-	String APP_PROPERTIES = "/META-INF/app.properties";
+	String APP_PROPERTIES = "META-INF/app.properties";
 
 	String CLIENT_XML = "client.xml";
 

File: cat-client/src/test/java/com/dianping/cat/CatTest.java
Patch:
@@ -28,12 +28,13 @@ public class CatTest {
 
 	@Test
 	public void test() {
+		Throwable cause = new Throwable();
+
 		Cat.getBootstrap().initialize("localhost");
 
 		Cat.newTransaction("logTransaction", "logTransaction");
 		Cat.newEvent("logEvent", "logEvent");
 		Cat.newHeartbeat("logHeartbeat", "logHeartbeat");
-		Throwable cause = new Throwable();
 		Cat.logError(cause);
 		Cat.logError("message", cause);
 		Cat.logTrace("logTrace", "<trace>");

File: cat-client/src/main/java/com/dianping/cat/configuration/DefaultClientConfigManager.java
Patch:
@@ -330,7 +330,7 @@ private static class ConfigValidator extends BaseVisitor {
 		@Override
 		public void visitConfig(ClientConfig config) {
 			if (config.getDomains().isEmpty()) {
-				config.setEnabled(false);
+				config.addDomain(new Domain("Unknown").setEnabled(true));
 			}
 
 			if (config.getServers().isEmpty()) {

File: cat-core/src/main/java/com/dianping/cat/config/server/ServerConfigManager.java
Patch:
@@ -321,19 +321,19 @@ public int getLongUrlDefaultThreshold() {
 	}
 
 	public int getMessageDumpThreads() {
-		return Integer.parseInt(getProperty("message-dumper-thread", "5"));
+		return Integer.parseInt(getProperty("message-dumper-thread", "3"));
 	}
 
 	public int getMessageProcessorThreads() {
-		return Integer.parseInt(getProperty("message-processor-thread", "20"));
+		return Integer.parseInt(getProperty("message-processor-thread", "8"));
 	}
 
 	public ExecutorService getModelServiceExecutorService() {
 		return m_threadPool;
 	}
 
 	public int getModelServiceThreads() {
-		return Integer.parseInt(getProperty("model-service-thread", "100"));
+		return Integer.parseInt(getProperty("model-service-thread", "20"));
 	}
 
 	public String getProperty(String name, String defaultValue) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -235,9 +235,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		switch (action) {
 		case HOURLY_REPORT:
 			TransactionReport report = getHourlyReport(payload);
-			report = m_mergeHelper.mergeAllMachines(report, ipAddress);
 
 			if (report != null) {
+				report = m_mergeHelper.mergeAllMachines(report, ipAddress);
 				model.setReport(report);
 				buildTransactionMetaInfo(model, payload, report);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/page/business/config/BusinessTagConfigManager.java
Patch:
@@ -48,7 +48,7 @@ public class BusinessTagConfigManager implements Initializable {
 
 	private int m_configId;
 
-	private BusinessTagConfig m_tagConfig;
+	private BusinessTagConfig m_tagConfig = new BusinessTagConfig();
 
 	public Set<String> findAllTags() {
 		return m_tagConfig.getTags().keySet();
@@ -104,8 +104,8 @@ public void initialize() throws InitializationException {
 				config.setDomain(Constants.CAT);
 				config.setContent(m_tagConfig.toString());
 				config.setUpdatetime(new Date());
-				m_configDao.insert(config);
 
+				m_configDao.insert(config);
 				m_configId = config.getId();
 			}
 

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -60,7 +60,7 @@ protected void postConfigure(WebAppContext context) {
 	@Test
 	public void startWebApp() throws Exception {
 		super.startServer();
-		display("/cat/r");
+		display("/cat/r/t");
 		waitForAnyKey();
 	}
 

File: cat-client/src/test/java/com/dianping/cat/CatEnvironmentTest.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.io.File;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.message.MessageProducer;

File: cat-client/src/test/java/com/dianping/cat/CatTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.message.Message;

File: cat-client/src/test/java/com/dianping/cat/ToolsTest.java
Patch:
@@ -26,7 +26,8 @@
 
 import com.site.helper.Splitters;
 import com.site.helper.Stringizers;
-import junit.framework.Assert;
+
+import org.junit.Assert;
 import org.junit.Test;
 import org.unidal.lookup.util.StringUtils;
 

File: cat-client/src/test/java/com/dianping/cat/message/internal/MessageIdFactoryTest.java
Patch:
@@ -24,8 +24,8 @@
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
 
-import junit.framework.Assert;
 import org.junit.After;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.unidal.helper.Scanners;

File: cat-client/src/test/java/com/dianping/cat/message/internal/MockMessageBuilderTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.message.internal;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.message.Message;

File: cat-client/src/test/java/com/dianping/cat/servlet/CatFilterTest.java
Patch:
@@ -30,8 +30,8 @@
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
 
-import junit.framework.Assert;
 import org.junit.After;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.mortbay.jetty.Handler;

File: cat-client/src/test/java/com/dianping/cat/status/StatusInfoCollectorTest.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.status;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 import com.dianping.cat.status.model.entity.StatusInfo;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/util/InvidStringBuilder.java
Patch:
@@ -18,7 +18,7 @@
  */
 package com.dianping.cat.consumer.util;
 
-import sun.misc.BASE64Encoder;
+import com.dianping.cat.consumer.util.base.BASE64Encoder;
 
 public class InvidStringBuilder {
 

File: cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java
Patch:
@@ -48,7 +48,7 @@ public class DefaultMessageAnalyzerManager extends ContainerHolder
 
 	private List<String> m_analyzerNames;
 
-	private Map<Long, Map<String, List<MessageAnalyzer>>> m_analyzers = new HashMap<Long, Map<String, List<MessageAnalyzer>>>();
+	private final Map<Long, Map<String, List<MessageAnalyzer>>> m_analyzers = new HashMap<Long, Map<String, List<MessageAnalyzer>>>();
 
 	@Override
 	public List<MessageAnalyzer> getAnalyzer(String name, long startTime) {
@@ -57,8 +57,8 @@ public List<MessageAnalyzer> getAnalyzer(String name, long startTime) {
 			Map<String, List<MessageAnalyzer>> temp = m_analyzers.remove(startTime - m_duration * 2);
 
 			if (temp != null) {
-				for (List<MessageAnalyzer> anlyzers : temp.values()) {
-					for (MessageAnalyzer analyzer : anlyzers) {
+				for (List<MessageAnalyzer> analyzers : temp.values()) {
+					for (MessageAnalyzer analyzer : analyzers) {
 						analyzer.destroy();
 					}
 				}

File: cat-core/src/main/java/com/dianping/cat/analysis/TcpSocketReceiver.java
Patch:
@@ -62,7 +62,7 @@ public final class TcpSocketReceiver implements LogEnabled {
 
 	private Logger m_logger;
 
-	private int m_port = 2280; // default port number from phone, C:2, A:2, T:8
+	private final int m_port = 2280; // default port number from phone, C:2, A:2, T:8
 
 	public synchronized void destory() {
 		try {

File: integration/dubbo/src/main/java/net/dubboclub/catmonitor/CatTransaction.java
Patch:
@@ -9,7 +9,6 @@
 import com.alibaba.dubbo.rpc.support.RpcUtils;
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.*;
-import com.dianping.cat.message.internal.AbstractMessage;
 import net.dubboclub.catmonitor.constants.CatConstants;
 import org.apache.commons.lang.StringUtils;
 
@@ -186,8 +185,7 @@ private void createConsumerCross(URL url,Transaction transaction){
     }
 
     private void completeEvent(Event event){
-        AbstractMessage message = (AbstractMessage) event;
-        message.setCompleted(true);
+        event.complete();
     }
 
     private void createProviderCross(URL url,Transaction transaction){

File: lib/java/src/main/java/com/dianping/cat/status/system/StaticInfoCollector.java
Patch:
@@ -71,7 +71,7 @@ public Map<String, String> getProperties() {
         Map<String, String> map = new LinkedHashMap<String, String>();
 
         map.put(CLASSPATH, jars);
-        map.put("system.java.verision", System.getProperty("java.version"));
+        map.put("system.java.version", System.getProperty("java.version"));
         map.put("system.user.name", System.getProperty("user.name"));
         map.put("java.cat.version", ApplicationEnvironment.VERSION);
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/event/EventAlert.java
Patch:
@@ -270,7 +270,7 @@ public void run() {
 
 				for (Entry<String, Rule> entry : rules.entrySet()) {
 					//Event告警开关
-					if (!entry.getValue().getAvailable()) {
+					if (null != entry.getValue().getAvailable() && !entry.getValue().getAvailable()) {
 						continue;
 					}
 					try {

File: cat-home/src/main/java/com/dianping/cat/report/alert/transaction/TransactionAlert.java
Patch:
@@ -275,7 +275,7 @@ public void run() {
 
 				for (Entry<String, Rule> entry : rules.entrySet()) {
 					//告警开关
-					if (!entry.getValue().getAvailable()) {
+					if (null != entry.getValue().getAvailable() && !entry.getValue().getAvailable()) {
 						continue;
 					}
 					try {

File: integration/dubbo/src/main/java/net/dubboclub/catmonitor/CatTransaction.java
Patch:
@@ -6,10 +6,10 @@
 import com.alibaba.dubbo.remoting.RemotingException;
 import com.alibaba.dubbo.remoting.TimeoutException;
 import com.alibaba.dubbo.rpc.*;
+import com.alibaba.dubbo.rpc.support.RpcUtils;
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.*;
 import com.dianping.cat.message.internal.AbstractMessage;
-import com.dianping.cat.message.spi.MessageTree;
 import net.dubboclub.catmonitor.constants.CatConstants;
 import org.apache.commons.lang.StringUtils;
 

File: cat-alarm/src/main/java/com/dianping/cat/alarm/spi/AlertManager.java
Patch:
@@ -205,6 +205,8 @@ private boolean sendRecoveryMessage(AlertEntity alert, String currentMinute) {
 			String title = "[告警恢复] [告警类型 " + alterType.getTitle() + "][" + group + " " + alert.getMetric() + "]";
 			String content = "[告警已恢复][恢复时间]" + currentMinute;
 			List<String> receivers = m_contactorManager.queryReceivers(alert.getContactGroup(), channel, type);
+			//去重
+			removeDuplicate(receivers);
 
 			if (receivers.size() > 0) {
 				SendMessageEntity message = new SendMessageEntity(group, title, type, content, receivers);

File: cat-home/src/main/java/com/dianping/cat/report/alert/exception/ExceptionAlert.java
Patch:
@@ -69,7 +69,7 @@ protected TopMetric buildTopMetric(Date date) {
 		TopReport topReport = queryTopReport(date);
 		TopMetric topMetric = new TopMetric(ALERT_PERIOD, Integer.MAX_VALUE, m_exceptionConfigManager);
 
-		topMetric.setStart(date).setEnd(new Date(date.getTime() + TimeHelper.ONE_MINUTE));
+		topMetric.setStart(date).setEnd(new Date(date.getTime() + TimeHelper.ONE_MINUTE - 1));
 		topMetric.visitTopReport(topReport);
 		return topMetric;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/alert/exception/ExceptionAlert.java
Patch:
@@ -125,7 +125,7 @@ public void run() {
 			Transaction t = Cat.newTransaction("AlertException", TimeHelper.getMinuteStr());
 
 			try {
-				TopMetric topMetric = buildTopMetric(new Date(current - TimeHelper.ONE_MINUTE * 2));
+				TopMetric topMetric = buildTopMetric(new Date(current - TimeHelper.ONE_MINUTE - current%TimeHelper.ONE_MINUTE));
 				Collection<List<Item>> itemLists = topMetric.getError().getResult().values();
 				List<Item> itemList = new ArrayList<Item>();
 

File: cat-alarm/src/main/java/com/dianping/cat/alarm/spi/AlertType.java
Patch:
@@ -26,7 +26,7 @@ public enum AlertType {
 
 	HeartBeat("Heartbeat", "心跳告警"),
 
-	Transaction("Transaction", "Transacation告警"),
+	Transaction("Transaction", "Transaction告警"),
 
 	Event("Event", "Event告警");
 

File: cat-client/src/test/java/com/dianping/cat/MessageFormatTest.java
Patch:
@@ -23,7 +23,7 @@
 
 import org.junit.Test;
 
-public class MessageFomatTest {
+public class MessageFormatTest {
 
 	@Test
 	public void test() {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/StoragePerformanceTest.java
Patch:
@@ -34,7 +34,7 @@
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 import com.dianping.cat.message.storage.MessageBucketManager;
 
-public class StoragePerformaceTest extends ComponentTestCase {
+public class StoragePerformanceTest extends ComponentTestCase {
 	private MessageCodec m_codec = new PlainTextMessageCodec();
 
 	@Before

File: cat-consumer/src/test/java/com/dianping/cat/consumer/heartbeat/HeartbeatReportMergerTest.java
Patch:
@@ -27,7 +27,7 @@
 
 public class HeartbeatReportMergerTest {
 	@Test
-	public void testHaertbeatReportMerge() throws Exception {
+	public void testHeartbeatReportMerge() throws Exception {
 		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer_old.xml"), "utf-8");
 		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer_old.xml"), "utf-8");
 		HeartbeatReport reportOld = DefaultSaxParser.parse(oldXml);

File: cat-core/src/main/java/com/dianping/cat/mvc/AbstractReportModel.java
Patch:
@@ -64,15 +64,15 @@ public abstract class AbstractReportModel<A extends Action, P extends Page, M ex
 
 	private transient ProjectService m_projectService;
 
-	private transient HostinfoService m_hostinfoService;
+	private transient HostinfoService m_hostInfoService;
 
 	private transient SampleConfigManager m_sampleConfigManager;
 
 	public AbstractReportModel(M ctx) {
 		super(ctx);
 		try {
 			m_projectService = ContainerLoader.getDefaultContainer().lookup(ProjectService.class);
-			m_hostinfoService = ContainerLoader.getDefaultContainer().lookup(HostinfoService.class);
+			m_hostInfoService = ContainerLoader.getDefaultContainer().lookup(HostinfoService.class);
 			m_sampleConfigManager = ContainerLoader.getDefaultContainer().lookup(SampleConfigManager.class);
 		} catch (Exception e) {
 			Cat.logError(e);
@@ -190,7 +190,7 @@ public Map<String, String> getIpToHostname() {
 		Map<String, String> ipToHostname = new HashMap<String, String>();
 
 		for (String ip : ips) {
-			String hostname = m_hostinfoService.queryHostnameByIp(ip);
+			String hostname = m_hostInfoService.queryHostnameByIp(ip);
 
 			if (hostname != null && !hostname.equalsIgnoreCase("null")) {
 				ipToHostname.put(ip, hostname);

File: cat-core/src/main/java/com/dianping/cat/service/ProjectService.java
Patch:
@@ -129,10 +129,10 @@ public Map<String, Department> findDepartments(Collection<String> domains) {
 
 			if (project != null) {
 				String bu = project.getBu();
-				String productline = project.getCmdbProductline();
+				String productLine = project.getCmdbProductline();
 
 				department = bu == null ? DEFAULT : bu;
-				projectLine = productline == null ? DEFAULT : productline;
+				projectLine = productLine == null ? DEFAULT : productLine;
 			}
 			Department temp = departments.get(department);
 

File: cat-core/src/test/java/com/dianping/cat/service/DefaultReportManagerTest.java
Patch:
@@ -61,7 +61,7 @@ public class DefaultReportManagerTest {
 
 	private MockHourlyReportDao m_hourlyReportDao = new MockHourlyReportDao();
 
-	private MockBuckerManager m_bucketManager = new MockBuckerManager();
+	private MockBucketManager m_bucketManager = new MockBucketManager();
 
 	private long m_start;
 
@@ -138,7 +138,7 @@ public void testStoreReport() {
 		Assert.assertEquals(3, m_bucketInsertCount);
 	}
 
-	public class MockBuckerManager implements ReportBucketManager {
+	public class MockBucketManager implements ReportBucketManager {
 
 		@Override
 		public void closeBucket(ReportBucket bucket) {

File: cat-core/src/test/java/com/dianping/cat/task/TaskManagerTest.java
Patch:
@@ -55,7 +55,7 @@ public void testAll() throws Exception {
 	}
 
 	@Test
-	public void testExcluedHourly() throws Exception {
+	public void testExcludeHourly() throws Exception {
 		MockTaskManager analyzer = new MockTaskManager();
 		Date start = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse("2013-04-23 00:00");
 		Date end = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse("2013-06-23 00:00");

File: cat-home/src/main/java/com/dianping/cat/report/alert/event/EventAlert.java
Patch:
@@ -62,7 +62,7 @@ public class EventAlert implements Task, LogEnabled {
 
 	protected static final long DURATION = TimeHelper.ONE_MINUTE;
 
-	private static final int DATA_AREADY_MINUTE = 1;
+	private static final int DATA_ALREADY_MINUTE = 1;
 
 	private static String MIN = "min";
 
@@ -117,7 +117,7 @@ private double[] buildArrayData(int start, int end, String type, String name, St
 
 	protected int calAlreadyMinute() {
 		long current = (System.currentTimeMillis()) / 1000 / 60;
-		int minute = (int) (current % (60)) - DATA_AREADY_MINUTE;
+		int minute = (int) (current % (60)) - DATA_ALREADY_MINUTE;
 
 		return minute;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -61,7 +61,7 @@ public class HeartbeatAlert implements Task {
 
 	protected static final long DURATION = TimeHelper.ONE_MINUTE;
 
-	private static final int DATA_AREADY_MINUTE = 1;
+	private static final int DATA_ALREADY_MINUTE = 1;
 
 	@Inject
 	protected HeartbeatRuleConfigManager m_ruleConfigManager;
@@ -142,7 +142,7 @@ private Map<String, double[]> buildBaseValue(Machine machine) {
 
 	protected int calAlreadyMinute() {
 		long current = (System.currentTimeMillis()) / 1000 / 60;
-		int minute = (int) (current % (60)) - DATA_AREADY_MINUTE;
+		int minute = (int) (current % (60)) - DATA_ALREADY_MINUTE;
 
 		return minute;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/alert/transaction/TransactionAlert.java
Patch:
@@ -61,7 +61,7 @@ public class TransactionAlert implements Task, LogEnabled {
 
 	private static final long DURATION = TimeHelper.ONE_MINUTE;
 
-	private static final int DATA_AREADY_MINUTE = 1;
+	private static final int DATA_ALREADY_MINUTE = 1;
 
 	private static final String MAX = "max";
 
@@ -126,7 +126,7 @@ private double[] buildArrayData(int start, int end, String type, String name, St
 	private int calAlreadyMinute() {
 		long current = (System.currentTimeMillis()) / 1000 / 60;
 
-		return (int) (current % (60)) - DATA_AREADY_MINUTE;
+		return (int) (current % (60)) - DATA_ALREADY_MINUTE;
 	}
 
 	private List<DataCheckEntity> computeAlertForRule(String domain, String type, String name, String monitor,

File: cat-home/src/main/java/com/dianping/cat/report/page/business/graph/BusinessGraphCreator.java
Patch:
@@ -78,8 +78,8 @@ public class BusinessGraphCreator extends AbstractGraphCreator {
 	@Inject
 	private CustomDataCalculator m_customDataCalculator;
 
-	private Pair<String, Boolean> buidlTitleAndPrivilege(BusinessReportConfig businessReportConfig, String itemId,
-							String type) {
+	private Pair<String, Boolean> buildTitleAndPrivilege(BusinessReportConfig businessReportConfig, String itemId,
+														 String type) {
 		boolean isPrivilege = false;
 		String title = null;
 		String des = MetricType.getDesByName(type);
@@ -307,7 +307,7 @@ private void buildLineChartTitle(List<AlertEntity> alertKeys, LineChart chart, S
 		String domain = businessReportConfig.getId();
 		String itemId = m_keyHelper.getBusinessItemId(key);
 		String type = m_keyHelper.getType(key);
-		Pair<String, Boolean> titleAndPrivilege = buidlTitleAndPrivilege(businessReportConfig, itemId, type);
+		Pair<String, Boolean> titleAndPrivilege = buildTitleAndPrivilege(businessReportConfig, itemId, type);
 		String title = titleAndPrivilege.getKey();
 
 		chart.setTitle(title);

File: cat-client/src/main/java/com/dianping/cat/message/spi/codec/NativeMessageCodec.java
Patch:
@@ -19,6 +19,7 @@
 package com.dianping.cat.message.spi.codec;
 
 import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.util.List;
 import java.util.Stack;
 
@@ -457,7 +458,7 @@ public String readString(ByteBuf buf) {
 			}
 
 			buf.readBytes(m_data, 0, len);
-			return new String(m_data, 0, len);
+			return new String(m_data, 0, len, StandardCharsets.UTF_8);
 		}
 
 		public long readTimestamp(ByteBuf buf) {

File: cat-client/src/test/java/com/dianping/cat/message/internal/CatClientTest.java
Patch:
@@ -22,6 +22,7 @@
 import java.io.IOException;
 import java.util.Queue;
 
+import com.dianping.cat.message.spi.MessageQueue;
 import junit.framework.Assert;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.junit.Before;
@@ -65,10 +66,9 @@ public static void beforeClass() throws IOException {
 	@Before
 	public void before() throws Exception {
 		TransportManager manager = Cat.lookup(TransportManager.class);
-		Initializable queue = Reflects.forField()
+		MessageQueue queue = Reflects.forField()
 								.getDeclaredFieldValue(manager.getSender().getClass(), "m_queue",	manager.getSender());
 
-		queue.initialize();
 		m_queue = Reflects.forField().getDeclaredFieldValue(queue.getClass(), "m_queue", queue);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -23,6 +23,7 @@
 import javax.servlet.http.HttpServletResponse;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
+import java.nio.charset.StandardCharsets;
 import java.util.Map;
 import java.util.zip.GZIPOutputStream;
 
@@ -49,7 +50,7 @@ public class Handler extends ContainerHolder implements Initializable, PageHandl
 	private byte[] compress(String str) throws IOException {
 		ByteArrayOutputStream out = new ByteArrayOutputStream(1024 * 32);
 		GZIPOutputStream gzip = new GZIPOutputStream(out);
-		gzip.write(str.getBytes());
+		gzip.write(str.getBytes(StandardCharsets.UTF_8));
 		gzip.close();
 		return out.toByteArray();
 	}

File: integration/context/CatFeignConfiguration.java
Patch:
@@ -22,9 +22,9 @@ public void apply(RequestTemplate requestTemplate) {
 
         com.dianping.cat.context.CatContextImpl catContext = new CatContextImpl();
         Cat.logRemoteCallClient(catContext,Cat.getManager().getDomain());
-        requestTemplate.header(Cat.Context.ROOT,catContext.getProperty(com.dianping.cat.context.CatConstantsExt.CAT_HTTP_HEADER_ROOT_MESSAGE_ID));
-        requestTemplate.header(Cat.Context.PARENT,catContext.getProperty(com.dianping.cat.context.CatConstantsExt.CAT_HTTP_HEADER_PARENT_MESSAGE_ID));
-        requestTemplate.header(Cat.Context.CHILD,catContext.getProperty(CatConstantsExt.CAT_HTTP_HEADER_CHILD_MESSAGE_ID));
+        requestTemplate.header(CatConstantsExt.CAT_HTTP_HEADER_ROOT_MESSAGE_ID,catContext.getProperty(Cat.Context.ROOT));
+        requestTemplate.header(CatConstantsExt.CAT_HTTP_HEADER_PARENT_MESSAGE_ID,catContext.getProperty(Cat.Context.PARENT));
+        requestTemplate.header(CatConstantsExt.CAT_HTTP_HEADER_CHILD_MESSAGE_ID,catContext.getProperty(Cat.Context.CHILD));
 
     }
 }

File: integration/mybatis/CatMybatisPlugin.java
Patch:
@@ -167,7 +167,7 @@ private String resolveParameterValue(Object obj) {
             value = "'" + obj.toString() + "'";
         } else if (obj instanceof Date) {
             DateFormat formatter = DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.CHINA);
-            value = "'" + formatter.format(new Date()) + "'";
+            value = "'" + formatter.format((Date) obj) + "'";
         } else {
             if (obj != null) {
                 value = obj.toString();

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -105,7 +105,7 @@ private static void errorHandler(Exception e) {
 	}
 
 	public static String getCatHome() {
-		String catHome = Properties.forString().fromEnv().fromSystem().getProperty("CAT_HOME", "/data/appdatas/cat/");
+		String catHome = CatPropertyProvider.INST.getProperty("CAT_HOME", "/data/appdatas/cat/");
 
 		return catHome;
 	}

File: lib/java/src/main/java/com/dianping/cat/analyzer/EventAggregator.java
Patch:
@@ -30,7 +30,7 @@
 
 public class EventAggregator {
     private static EventAggregator instance = new EventAggregator();
-    private ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>> events = new ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>>();
+    private volatile ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>> events = new ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>>();
 
     public static EventAggregator getInstance() {
         return instance;

File: lib/java/src/main/java/com/dianping/cat/analyzer/MetricTagAggregator.java
Patch:
@@ -35,7 +35,7 @@ public class MetricTagAggregator {
     public static int MAX_KEY_SIZE = 1000;
     private static final String OTHERS = "others";
     private static final String EMPTY = "empty";
-    private ConcurrentHashMap<String, Map<String, MetricTagItem>> metrics = new ConcurrentHashMap<String, Map<String, MetricTagItem>>();
+    private volatile ConcurrentHashMap<String, Map<String, MetricTagItem>> metrics = new ConcurrentHashMap<String, Map<String, MetricTagItem>>();
     private ConcurrentHashMap<String, Integer> metricThresholds = new ConcurrentHashMap<String, Integer>();
 
     public static MetricTagAggregator getInstance() {

File: lib/java/src/main/java/com/dianping/cat/analyzer/TransactionAggregator.java
Patch:
@@ -33,7 +33,7 @@
 
 public class TransactionAggregator {
     private static TransactionAggregator instance = new TransactionAggregator();
-    private ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>> transactions = new ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>>();
+    private volatile ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>> transactions = new ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>>();
 
     public static TransactionAggregator getInstance() {
         return instance;

File: lib/java/src/main/java/com/dianping/cat/analyzer/EventAggregator.java
Patch:
@@ -30,7 +30,7 @@
 
 public class EventAggregator {
     private static EventAggregator instance = new EventAggregator();
-    private ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>> events = new ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>>();
+    private volatile ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>> events = new ConcurrentHashMap<String, ConcurrentHashMap<String, EventData>>();
 
     public static EventAggregator getInstance() {
         return instance;

File: lib/java/src/main/java/com/dianping/cat/analyzer/MetricTagAggregator.java
Patch:
@@ -35,7 +35,7 @@ public class MetricTagAggregator {
     public static int MAX_KEY_SIZE = 1000;
     private static final String OTHERS = "others";
     private static final String EMPTY = "empty";
-    private ConcurrentHashMap<String, Map<String, MetricTagItem>> metrics = new ConcurrentHashMap<String, Map<String, MetricTagItem>>();
+    private volatile ConcurrentHashMap<String, Map<String, MetricTagItem>> metrics = new ConcurrentHashMap<String, Map<String, MetricTagItem>>();
     private ConcurrentHashMap<String, Integer> metricThresholds = new ConcurrentHashMap<String, Integer>();
 
     public static MetricTagAggregator getInstance() {

File: lib/java/src/main/java/com/dianping/cat/analyzer/TransactionAggregator.java
Patch:
@@ -33,7 +33,7 @@
 
 public class TransactionAggregator {
     private static TransactionAggregator instance = new TransactionAggregator();
-    private ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>> transactions = new ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>>();
+    private volatile ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>> transactions = new ConcurrentHashMap<String, ConcurrentHashMap<String, TransactionData>>();
 
     public static TransactionAggregator getInstance() {
         return instance;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventReportMerger.java
Patch:
@@ -101,7 +101,7 @@ public void visitEventReport(EventReport eventReport) {
 		super.visitEventReport(eventReport);
 
 		EventReport report = getEventReport();
-		report.getIps().addAll(eventReport.getIps());
+		report.getIps().addAll(eventReport.getMachines().keySet());
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventReportMerger.java
Patch:
@@ -101,7 +101,7 @@ public void visitEventReport(EventReport eventReport) {
 		super.visitEventReport(eventReport);
 
 		EventReport report = getEventReport();
-		report.getIps().addAll(eventReport.getIps());
+		report.getIps().addAll(eventReport.getMachines().keySet());
 	}
 
 	@Override

File: cat-core/src/main/java/com/dianping/cat/message/CodecHandler.java
Patch:
@@ -15,7 +15,7 @@ public class CodecHandler {
 
 	public static MessageTree decode(ByteBuf buf) {
 		byte[] data = new byte[3];
-		MessageTree tree = null;
+		MessageTree tree;
 
 		buf.getBytes(4, data);
 		String hint = new String(data);

File: cat-core/src/main/java/com/dianping/cat/message/CodecHandler.java
Patch:
@@ -15,7 +15,7 @@ public class CodecHandler {
 
 	public static MessageTree decode(ByteBuf buf) {
 		byte[] data = new byte[3];
-		MessageTree tree = null;
+		MessageTree tree;
 
 		buf.getBytes(4, data);
 		String hint = new String(data);

File: cat-client/src/main/java/com/dianping/cat/configuration/ClientConfigManager.java
Patch:
@@ -33,4 +33,6 @@ public interface ClientConfigManager {
 	
 	public void refreshConfig();
 
+	public int getLongThresholdByDuration(String key, int duration);
+
 }
\ No newline at end of file

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -124,6 +124,7 @@ public void flush(MessageTree tree, boolean clearContext) {
 		}
 	}
 
+	@Override
 	public ClientConfigManager getConfigManager() {
 		return m_configManager;
 	}

File: cat-client/src/main/java/com/dianping/cat/message/spi/MessageManager.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.message.spi;
 
+import com.dianping.cat.configuration.ClientConfigManager;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 
@@ -103,4 +104,6 @@ public interface MessageManager {
 	 */
 	public String getDomain();
 
+	public ClientConfigManager getConfigManager();
+
 }
\ No newline at end of file

File: cat-client/src/test/java/com/dianping/cat/opensource/OpensourceTest.java
Patch:
@@ -36,10 +36,8 @@ private long calMills(int i) {
 
 	@Test
 	public void testEvent() throws Exception {
-		//Transaction t = Cat.newTransaction("Parent3", "name22");
-
 		for (int i = 0; i < 1000; i++) {
-			Cat.logEvent("JavaClient13", "Bucket_");
+			Cat.logEvent("JavaClient1", "Bucket_" + String.valueOf(i % 10));
 			Thread.sleep(5);
 		}
 		//t.complete();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -83,6 +83,7 @@ public List<Component> defineComponents() {
 		all.addAll(defineBusinessComponents());
 
 		all.add(A(AtomicMessageConfigManager.class));
+		all.add(A(ServerConfigManager.class));
 		all.add(A(TpValueStatisticConfigManager.class));
 		all.add(A(AllReportConfigManager.class));
 		all.add(C(Module.class, CatConsumerModule.ID, CatConsumerModule.class));

File: cat-consumer/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -27,7 +27,6 @@
 import com.dianping.cat.consumer.top.TopAnalyzerTest;
 import com.dianping.cat.consumer.top.TopReportMergerTest;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzerTest;
-import com.dianping.cat.consumer.transaction.TransactionReportFilterTest;
 import com.dianping.cat.consumer.transaction.TransactionReportMergerTest;
 import com.dianping.cat.consumer.transaction.TransactionReportTest;
 import com.dianping.cat.consumer.transaction.TransactionReportTypeAggergatorTest;
@@ -43,8 +42,6 @@
 
 TransactionReportTest.class,
 
-TransactionReportFilterTest.class,
-
 TransactionReportMergerTest.class,
 
 /* event */

File: cat-client/src/main/java/com/dianping/cat/log4j/CatAppender.java
Patch:
@@ -15,12 +15,11 @@
 public class CatAppender extends AppenderSkeleton {
 	@Override
 	protected void append(LoggingEvent event) {
-		boolean isTraceMode = Cat.getManager().isTraceMode();
 		Level level = event.getLevel();
 
 		if (level.isGreaterOrEqual(Level.ERROR)) {
 			logError(event);
-		} else if (isTraceMode) {
+		} else if (Cat.getManager().isTraceMode()) {
 			logTrace(event);
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/log4j/CatAppender.java
Patch:
@@ -15,12 +15,11 @@
 public class CatAppender extends AppenderSkeleton {
 	@Override
 	protected void append(LoggingEvent event) {
-		boolean isTraceMode = Cat.getManager().isTraceMode();
 		Level level = event.getLevel();
 
 		if (level.isGreaterOrEqual(Level.ERROR)) {
 			logError(event);
-		} else if (isTraceMode) {
+		} else if (Cat.getManager().isTraceMode()) {
 			logTrace(event);
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -222,7 +222,7 @@ public List<Component> defineComponents() {
 		all.add(C(AppDatabaseConfigurator.class).req(AppCommandDataDao.class, AppSpeedDataDao.class));
 
 		all.add(C(TaskBuilder.class, NotifyTaskBuilder.ID, NotifyTaskBuilder.class)
-		      .req(ReportRender.class, SenderManager.class).req(ProjectService.class)
+		      .req(ReportRender.class, SenderManager.class, ServerFilterConfigManager.class).req(ProjectService.class)
 		      .req(TransactionReportService.class, EventReportService.class, ProblemReportService.class));
 
 		all.add(C(TaskBuilder.class, AppDatabasePruner.ID, AppDatabasePruner.class).req(AppCommandDataDao.class,

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -222,7 +222,7 @@ public List<Component> defineComponents() {
 		all.add(C(AppDatabaseConfigurator.class).req(AppCommandDataDao.class, AppSpeedDataDao.class));
 
 		all.add(C(TaskBuilder.class, NotifyTaskBuilder.ID, NotifyTaskBuilder.class)
-		      .req(ReportRender.class, SenderManager.class).req(ProjectService.class)
+		      .req(ReportRender.class, SenderManager.class, ServerFilterConfigManager.class).req(ProjectService.class)
 		      .req(TransactionReportService.class, EventReportService.class, ProblemReportService.class));
 
 		all.add(C(TaskBuilder.class, AppDatabasePruner.ID, AppDatabasePruner.class).req(AppCommandDataDao.class,

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/TokenBuilder.java
Patch:
@@ -55,7 +55,7 @@ public Token parse(SigninContext ctx, String value) {
 			int expectedCheckSum = getCheckSum(value.substring(0, value.lastIndexOf(SP) + 1));
 
 			if (checkSum == expectedCheckSum) {
-				if (remoteIp.equals(ctx.getRequest().getRemoteAddr())) {
+				if (remoteIp.equals(HttpRequestUtils.getAddr(ctx.getRequest()))) {
 					if (lastLoginDate + ONE_DAY > System.currentTimeMillis()) {
 						return new Token( realName, userName);
 					}

File: 框架埋点方案集成/mybatis/CatMybatisPlugin.java
Patch:
@@ -210,7 +210,7 @@ private String getParameterValue(Object obj) {
             value = "'" + obj.toString() + "'";
         } else if (obj instanceof Date) {
             DateFormat formatter = DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.CHINA);
-            value = "'" + formatter.format(new Date()) + "'";
+            value = "'" + formatter.format((Date)obj) + "'";
         } else {
             if (obj != null) {
                 value = obj.toString();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -80,7 +80,7 @@ public void enableLogging(Logger logger) {
 	}
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 2;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dependency/DependencyAnalyzer.java
Patch:
@@ -58,7 +58,7 @@ private DependencyReport findOrCreateReport(String domain) {
 	}
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 2;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -112,7 +112,7 @@ public void setServerStateManager(ServerStatisticManager serverStateManager) {
 	}
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 2;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -51,7 +51,7 @@ public void enableLogging(Logger logger) {
 	}
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 2;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemAnalyzer.java
Patch:
@@ -41,7 +41,7 @@ public void enableLogging(Logger logger) {
 	}
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 2;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -98,7 +98,7 @@ public void enableLogging(Logger logger) {
 	}
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 2;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/analysis/AbstractMessageAnalyzer.java
Patch:
@@ -85,7 +85,7 @@ public void destroy() {
 	public abstract void doCheckpoint(boolean atEnd);
 
 	@Override
-	public int getAnanlyzerCount() {
+	public int getAnalyzerCount() {
 		return 1;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java
Patch:
@@ -74,7 +74,7 @@ public List<MessageAnalyzer> getAnalyzer(String name, long startTime) {
 					analyzer.initialize(startTime, m_duration, m_extraTime);
 					analyzers.add(analyzer);
 
-					int count = analyzer.getAnanlyzerCount();
+					int count = analyzer.getAnalyzerCount();
 
 					for (int i = 1; i < count; i++) {
 						MessageAnalyzer tempAnalyzer = lookup(MessageAnalyzer.class, name);

File: cat-core/src/main/java/com/dianping/cat/analysis/MessageAnalyzer.java
Patch:
@@ -15,7 +15,7 @@ public interface MessageAnalyzer {
 
 	public void initialize(long startTime, long duration, long extraTime);
 
-	public int getAnanlyzerCount();
+	public int getAnalyzerCount();
 
 	public void setIndex(int index);
 

File: cat-core/src/main/java/com/dianping/cat/analysis/Period.java
Patch:
@@ -137,7 +137,7 @@ public List<MessageAnalyzer> getAnalyzer(String name) {
 		return analyzers;
 	}
 
-	public List<MessageAnalyzer> getAnalzyers() {
+	public List<MessageAnalyzer> getAnalyzers() {
 		List<MessageAnalyzer> analyzers = new ArrayList<MessageAnalyzer>(m_tasks.size());
 
 		for (Entry<String, List<PeriodTask>> tasks : m_tasks.entrySet()) {

File: cat-core/src/main/java/com/dianping/cat/analysis/RealtimeConsumer.java
Patch:
@@ -72,7 +72,7 @@ public void doCheckpoint() {
 			long currentStartTime = getCurrentStartTime();
 			Period period = m_periodManager.findPeriod(currentStartTime);
 
-			for (MessageAnalyzer analyzer : period.getAnalzyers()) {
+			for (MessageAnalyzer analyzer : period.getAnalyzers()) {
 				try {
 					analyzer.doCheckpoint(false);
 				} catch (Exception e) {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/state/StateAnalyzerTest.java
Patch:
@@ -30,7 +30,7 @@ public void setUp() throws Exception {
 		Date date = sdf.parse("20120101 00:00:00:00");
 
 		m_analyzer = (StateAnalyzer) lookup(MessageAnalyzer.class, StateAnalyzer.ID);
-		
+		m_analyzer.setIp("192.168.1.1");
 		m_analyzer.initialize(date.getTime(), Constants.HOUR, Constants.MINUTE * 5);
 	}
 

File: cat-core/src/main/java/com/dianping/cat/config/app/command/CommandFormatConfigManager.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -115,7 +116,8 @@ public boolean insert(String xml) {
 	private void refreshData(Config config) throws SAXException, IOException {
 		Map<String, Rule> map = new HashMap<String, Rule>();
 		String content = config.getContent();
-		long modifyTime = config.getModifyDate().getTime();
+		Date modifyDate = config.getModifyDate();
+		long modifyTime = modifyDate == null ? System.currentTimeMillis() : modifyDate.getTime();
 		CommandFormat format = DefaultSaxParser.parse(content);
 
 		for (Rule rule : format.getRules()) {

File: cat-core/src/main/java/com/dianping/cat/config/server/ServerConfigManager.java
Patch:
@@ -80,7 +80,7 @@ public String getConsoleRemoteServers() {
 			}
 		}
 
-		return "";
+		return "127.0.0.1:2281";
 	}
 
 	public String getHdfsBaseDir(String id) {

File: cat-maven-plugin/src/main/java/com/dianping/cat/plugin/InstallMojo.java
Patch:
@@ -15,8 +15,8 @@
 import org.apache.maven.plugin.MojoFailureException;
 import org.unidal.helper.Files;
 import org.unidal.helper.Files.AutoClose;
-import org.unidal.maven.plugin.common.PropertyProviders;
-import org.unidal.maven.plugin.common.PropertyProviders.IValidator;
+
+import com.dianping.cat.plugin.PropertyProviders.IValidator;
 
 /**
  * @goal install

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -461,4 +461,4 @@ public String toString() {
 		}
 	}
 
-}
\ No newline at end of file
+}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/core/FormatTest.java
Patch:
@@ -32,7 +32,6 @@ public void testFormat() {
 
 		checkFormat(12, "0.#", "12");
 		checkFormat(12.34, "0.#", "12.3");
-		checkFormat(12.35, "0.#", "12.4");
 
 		checkFormat(12.34, "0.##", "12.34");
 		checkFormat(12.346, "0.##", "12.35");
@@ -47,7 +46,6 @@ public void testFranceFormat() {
 
 		checkFranceFormat(12, "0.#", "12");
 		checkFranceFormat(12.34, "0.#", "12,3");
-		checkFranceFormat(12.35, "0.#", "12,4");
 
 		checkFranceFormat(12.34, "0.##", "12,34");
 		checkFranceFormat(12.346, "0.##", "12,35");

File: cat-consumer/src/test/java/com/dianping/cat/consumer/core/NumberFormatTest.java
Patch:
@@ -27,7 +27,6 @@ public void testFormat() {
 
 		checkFormat(12, "0.#", "12");
 		checkFormat(12.34, "0.#", "12.3");
-		checkFormat(12.35, "0.#", "12.4");
 
 		checkFormat(12.34, "0.##", "12.34");
 		checkFormat(12.346, "0.##", "12.35");

File: cat-consumer/src/test/java/com/dianping/cat/consumer/matrix/MatrixAnalyzerTest.java
Patch:
@@ -7,6 +7,7 @@
 import junit.framework.Assert;
 
 import org.junit.Before;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.helper.Files;
 import org.unidal.lookup.ComponentTestCase;
@@ -42,6 +43,7 @@ public void setUp() throws Exception {
 		m_analyzer.initialize(date.getTime(), Constants.HOUR, Constants.MINUTE * 5);
 	}
 
+	@Ignore
 	@Test
 	public void testProcess() throws Exception {
 		for (int i = 1; i <= 100; i++) {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/matrix/MatrixReportMergerTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.dianping.cat.consumer.matrix;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser;
 
 public class MatrixReportMergerTest {
+	@Ignore
 	@Test
 	public void testMatrixReportMerge() throws Exception {
 		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("matrix_analyzer.xml"), "utf-8");

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -257,7 +257,7 @@ private boolean isChannelStalled(ChannelFuture activeFuture) {
 		m_retriedTimes++;
 
 		int size = m_queue.size();
-		boolean stalled = activeFuture != null && size >= TcpSocketSender.SIZE - 10;
+		boolean stalled = activeFuture != null && size >= TcpSocketSender.getQueueSize() - 10;
 
 		if (stalled) {
 			if (m_retriedTimes >= 5) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -235,8 +235,9 @@ private Collection<String> queryAllDomains() {
 			if (m_service.isEligable(request)) {
 				ModelResponse<DependencyReport> response = m_service.invoke(request);
 				DependencyReport report = response.getModel();
-
-				return report.getDomainNames();
+                if(null != report) {
+                    return report.getDomainNames();
+                }
 			}
 
 			return new HashSet<String>();

File: 框架埋点方案集成/dubbo/src/main/java/net/dubboclub/catmonitor/CatTransaction.java
Patch:
@@ -187,7 +187,7 @@ private void createProviderCross(URL url,Transaction transaction){
             consumerAppName= RpcContext.getContext().getRemoteHost()+":"+ RpcContext.getContext().getRemotePort();
         }
         Event crossAppEvent = Cat.newEvent(CatConstants.PROVIDER_CALL_APP,consumerAppName);
-        Event crossServerEvent = Cat.newEvent(CatConstants.PROVIDER_CALL_SERVER,url.getHost());
+        Event crossServerEvent = Cat.newEvent(CatConstants.PROVIDER_CALL_SERVER, RpcContext.getContext().getRemoteHost());
         crossAppEvent.setStatus(Event.SUCCESS);
         crossServerEvent.setStatus(Event.SUCCESS);
         completeEvent(crossAppEvent);

File: cat-client/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.configuration.ConfigTest;
-import com.dianping.cat.configuration.NetworkInterfaceManagerTest;
 import com.dianping.cat.message.EventTest;
 import com.dianping.cat.message.HeartbeatTest;
 import com.dianping.cat.message.MessageTest;
@@ -40,8 +39,6 @@
 /* .tool */
 ToolsTest.class,
 
-NetworkInterfaceManagerTest.class,
-
 CatTest.class,
 
 ApiTest.class

File: cat-client/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.configuration.ConfigTest;
-import com.dianping.cat.configuration.NetworkInterfaceManagerTest;
 import com.dianping.cat.message.EventTest;
 import com.dianping.cat.message.HeartbeatTest;
 import com.dianping.cat.message.MessageTest;
@@ -40,8 +39,6 @@
 /* .tool */
 ToolsTest.class,
 
-NetworkInterfaceManagerTest.class,
-
 CatTest.class,
 
 ApiTest.class

File: cat-home/src/test/java/com/dianping/cat/demo/TestSendMessage.java
Patch:
@@ -265,11 +265,11 @@ public void sendLongSQLTransaction() throws Exception {
 	public void sendCacheTransactionWithMissed() throws Exception {
 		for (int i = 0; i < 130; i++) {
 			Transaction t = Cat.getProducer().newTransaction("Cache.kvdb", "Method" + i % 10);
-			Cat.getProducer().newEvent("Cache.kvdb", "Method" + i % 10 + ":missed");
+			Cat.logEvent("Cache.kvdb", "Method" + i % 10 + ":missed");
 			t.addData("key and value");
 
 			Transaction t2 = Cat.getProducer().newTransaction("Cache.web", "Method" + i % 10);
-			Cat.getProducer().newEvent("Cache.web", "Method" + i % 10 + ":missed");
+			Cat.logEvent("Cache.web", "Method" + i % 10 + ":missed");
 			t2.addData("key and value");
 			Thread.sleep(2);
 			t2.complete();

File: cat-home/src/test/java/com/dianping/cat/demo/TestSendMessage.java
Patch:
@@ -265,11 +265,11 @@ public void sendLongSQLTransaction() throws Exception {
 	public void sendCacheTransactionWithMissed() throws Exception {
 		for (int i = 0; i < 130; i++) {
 			Transaction t = Cat.getProducer().newTransaction("Cache.kvdb", "Method" + i % 10);
-			Cat.getProducer().newEvent("Cache.kvdb", "Method" + i % 10 + ":missed");
+			Cat.logEvent("Cache.kvdb", "Method" + i % 10 + ":missed");
 			t.addData("key and value");
 
 			Transaction t2 = Cat.getProducer().newTransaction("Cache.web", "Method" + i % 10);
-			Cat.getProducer().newEvent("Cache.web", "Method" + i % 10 + ":missed");
+			Cat.logEvent("Cache.web", "Method" + i % 10 + ":missed");
 			t2.addData("key and value");
 			Thread.sleep(2);
 			t2.complete();

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -213,9 +213,10 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		switch (action) {
 		case HOURLY_REPORT:
 			TransactionReport report = getHourlyReport(payload);
-			report = m_mergeHelper.mergeAllMachines(report, ipAddress);
 
 			if (report != null) {
+				report = m_mergeHelper.mergeAllMachines(report, ipAddress);
+
 				model.setReport(report);
 				buildTransactionMetaInfo(model, payload, report);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -213,9 +213,10 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		switch (action) {
 		case HOURLY_REPORT:
 			TransactionReport report = getHourlyReport(payload);
-			report = m_mergeHelper.mergeAllMachines(report, ipAddress);
 
 			if (report != null) {
+				report = m_mergeHelper.mergeAllMachines(report, ipAddress);
+
 				model.setReport(report);
 				buildTransactionMetaInfo(model, payload, report);
 			}

File: cat-client/src/main/java/com/dianping/cat/CatConstants.java
Patch:
@@ -15,6 +15,8 @@ public class CatConstants {
 
 	public static final String CAT_PAGE_URI = "cat-page-uri";
 
+	public static final String CAT_PAGE_TYPE = "cat-page-type";
+
 	/**
 	 * Pigeon Transation Type
 	 */

File: cat-client/src/main/java/com/dianping/cat/CatConstants.java
Patch:
@@ -15,6 +15,8 @@ public class CatConstants {
 
 	public static final String CAT_PAGE_URI = "cat-page-uri";
 
+	public static final String CAT_PAGE_TYPE = "cat-page-type";
+
 	/**
 	 * Pigeon Transation Type
 	 */

File: cat-home/src/main/java/com/dianping/cat/system/page/router/config/RouterConfigHandler.java
Patch:
@@ -118,8 +118,8 @@ public int compare(Entry<String, Long> o1, Entry<String, Long> o2) {
 
 		processBackServer(servers, routerConfig, numbers);
 
-		routerConfig.setStartTime(end);
-		routerConfig.setEndTime(new Date(end.getTime() + TimeHelper.ONE_DAY));
+		routerConfig.setStartTime(period);
+		routerConfig.setEndTime(end);
 
 		return routerConfig;
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/LongExecutionProblemHandler.java
Patch:
@@ -103,7 +103,7 @@ private void processLongCache(Machine machine, Transaction transaction, MessageT
 			String status = transaction.getName();
 			Entity entity = findOrCreateEntity(machine, type, status);
 
-			updateEntity(tree, entity, 0);
+			updateEntity(tree, entity, (int) nomarizeDuration);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphManager.java
Patch:
@@ -148,9 +148,9 @@ public String getName() {
 		@Override
 		public void run() {
 			boolean active = TimeHelper.sleepToNextMinute();
-			long current = System.currentTimeMillis();
 
 			while (active) {
+				long start = System.currentTimeMillis();
 				try {
 					Transaction t = Cat.newTransaction("ReloadTask", "NetGraph");
 
@@ -178,7 +178,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					long duration = System.currentTimeMillis() - current;
+					long duration = System.currentTimeMillis() - start;
 
 					if (duration < DURATION) {
 						Thread.sleep(DURATION - duration);

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/AppConfigProcessor.java
Patch:
@@ -211,6 +211,7 @@ public void process(Action action, Payload payload, Model model) {
 			id = payload.getId();
 
 			if (m_appConfigManager.deleteCommand(id)) {
+				m_appRuleConfigManager.deleteByCommandId(id);
 				model.setOpState(true);
 			} else {
 				model.setOpState(false);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventDelegate.java
Patch:
@@ -59,9 +59,9 @@ public byte[] buildBinary(EventReport report) {
 	public String buildXml(EventReport report) {
 		report.accept(m_computer);
 
-		String xml = new EventReportCountFilter().buildXml(report);
+		new EventReportCountFilter().visitEventReport(report);;
 
-		return xml;
+		return report.toString();
 	}
 
 	public EventReport createAggregatedReport(Map<String, EventReport> reports) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionDelegate.java
Patch:
@@ -62,9 +62,9 @@ public byte[] buildBinary(TransactionReport report) {
 	public String buildXml(TransactionReport report) {
 		report.accept(m_computer);
 
-		String xml = new TransactionReportCountFilter().buildXml(report);
+		new TransactionReportCountFilter().visitTransactionReport(report);
 
-		return xml;
+		return report.toString();
 	}
 
 	public TransactionReport createAggregatedReport(Map<String, TransactionReport> reports) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/LocalMessageBucketManager.java
Patch:
@@ -113,7 +113,7 @@ public void initialize() throws InitializationException {
 		Threads.forGroup("cat").start(new LogviewUploader(this, m_buckets, m_logviewUploader, m_configManager));
 
 		if (m_configManager.isLocalMode()) {
-			m_gzipThreads = 1;
+			m_gzipThreads = 2;
 		}
 
 		for (int i = 0; i < m_gzipThreads; i++) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/storage/StorageAnalyzer.java
Patch:
@@ -140,8 +140,6 @@ private void processSQLTransaction(MessageTree tree, Transaction t) {
 			}
 		}
 		if (databaseName != null && ip != null) {
-			String sqlName = t.getName();
-			String sqlStatement = (String) t.getData();
 			String id = querySQLId(databaseName);
 			StorageReport report = m_reportManager.getHourlyReport(getStartTime(), id, true);
 			StorageUpdateParam param = new StorageUpdateParam();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/storage/StorageAnalyzer.java
Patch:
@@ -121,9 +121,6 @@ private void processSQLTransaction(MessageTree tree, Transaction t) {
 		String ip = null;
 		String domain = tree.getDomain();
 		List<Message> messages = t.getChildren();
-		String sqlName = t.getName();
-		String sqlStatement = (String) t.getData();
-		sqlStatement = sqlStatement.replace("<", "&lt;").replace(">", "&gt;");
 
 		for (Message message : messages) {
 			if (message instanceof Event) {
@@ -143,6 +140,8 @@ private void processSQLTransaction(MessageTree tree, Transaction t) {
 			}
 		}
 		if (databaseName != null && ip != null) {
+			String sqlName = t.getName();
+			String sqlStatement = (String) t.getData();
 			String id = querySQLId(databaseName);
 			StorageReport report = m_reportManager.getHourlyReport(getStartTime(), id, true);
 			StorageUpdateParam param = new StorageUpdateParam();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/LogviewUploader.java
Patch:
@@ -84,7 +84,7 @@ public Direction matches(File base, String path) {
 
 					if (index == -1 && shouldDelete(path)) {
 						paths.add(path);
-					} else if (index > 0) {
+					} else if (index > 0 && shouldDelete(path)) {
 						paths.add(path.substring(0, index));
 					}
 				}

File: cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java
Patch:
@@ -70,17 +70,17 @@ public List<MessageAnalyzer> getAnalyzer(String name, long startTime) {
 
 					MessageAnalyzer analyzer = lookup(MessageAnalyzer.class, name);
 
-					analyzer.initialize(startTime, m_duration, m_extraTime);
 					analyzer.setIndex(0);
+					analyzer.initialize(startTime, m_duration, m_extraTime);
 					analyzers.add(analyzer);
 
 					int count = analyzer.getAnanlyzerCount();
 
 					for (int i = 1; i < count; i++) {
 						MessageAnalyzer tempAnalyzer = lookup(MessageAnalyzer.class, name);
 
-						tempAnalyzer.initialize(startTime, m_duration, m_extraTime);
 						tempAnalyzer.setIndex(i);
+						tempAnalyzer.initialize(startTime, m_duration, m_extraTime);
 						analyzers.add(tempAnalyzer);
 					}
 					map.put(name, analyzers);

File: cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java
Patch:
@@ -145,6 +145,7 @@ public void initialize() {
 	public Map<String, T> loadHourlyReports(long startTime, StoragePolicy policy, int index) {
 		Transaction t = Cat.newTransaction("Restore", m_name);
 		Map<String, T> reports = m_reports.get(startTime);
+		Cat.logEvent("Restore", m_name + ":" + index);
 		ReportBucket bucket = null;
 
 		if (reports == null) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -14,13 +14,11 @@
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.event.model.entity.Range;
-import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.report.DefaultReportManager.StoragePolicy;
-import com.dianping.cat.report.ReportDelegate;
 import com.dianping.cat.report.ReportManager;
 
 public class EventAnalyzer extends AbstractMessageAnalyzer<EventReport> implements LogEnabled {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -14,13 +14,11 @@
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.event.model.entity.Range;
-import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.report.DefaultReportManager.StoragePolicy;
-import com.dianping.cat.report.ReportDelegate;
 import com.dianping.cat.report.ReportManager;
 
 public class EventAnalyzer extends AbstractMessageAnalyzer<EventReport> implements LogEnabled {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -142,7 +142,7 @@ private Collection<Component> defineEventComponents() {
 		final String ID = EventAnalyzer.ID;
 
 		all.add(C(MessageAnalyzer.class, ID, EventAnalyzer.class).is(PER_LOOKUP).req(ReportManager.class, ID)
-		      .req(ServerConfigManager.class, ServerFilterConfigManager.class, EventDelegate.class));
+		      .req(ReportDelegate.class, ID).req(ServerConfigManager.class, ServerFilterConfigManager.class));
 		all.add(C(ReportManager.class, ID, DefaultReportManager.class).is(PER_LOOKUP) //
 		      .req(ReportDelegate.class, ID) //
 		      .req(ReportBucketManager.class, HourlyReportDao.class, HourlyReportContentDao.class, DomainValidator.class) //

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -14,11 +14,13 @@
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.event.model.entity.Range;
+import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.report.DefaultReportManager.StoragePolicy;
+import com.dianping.cat.report.ReportDelegate;
 import com.dianping.cat.report.ReportManager;
 
 public class EventAnalyzer extends AbstractMessageAnalyzer<EventReport> implements LogEnabled {

File: cat-core/src/main/java/com/dianping/cat/analysis/PeriodTask.java
Patch:
@@ -60,6 +60,7 @@ public void finish() {
 			m_analyzer.destroy();
 			
 			ReportManager<?> manager = m_analyzer.getReportManager();
+			
 			if(manager!=null){
 				manager.destory();
 			}

File: cat-core/src/main/java/com/dianping/cat/report/DefaultReportManager.java
Patch:
@@ -142,6 +142,7 @@ public Map<String, T> getHourlyReports(long startTime) {
 	@Override
 	public void initialize() {
 		m_logger.info("init report manager " + this);
+		super.release(this);
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -267,7 +267,7 @@ private Collection<Component> defineTransactionComponents() {
 		      .req(ReportBucketManager.class, HourlyReportDao.class, HourlyReportContentDao.class, DomainValidator.class) //
 		      .config(E("name").value(ID)));
 		all.add(C(ReportDelegate.class, ID, TransactionDelegate.class).req(TaskManager.class,
-		      ServerFilterConfigManager.class));
+		      ServerFilterConfigManager.class, AllTransactionConfigManager.class));
 
 		return all;
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionDelegate.java
Patch:
@@ -26,6 +26,9 @@ public class TransactionDelegate implements ReportDelegate<TransactionReport> {
 
 	@Inject
 	private ServerFilterConfigManager m_configManager;
+	
+	@Inject
+	private AllTransactionConfigManager m_transactionManager;
 
 	private TransactionStatisticsComputer m_computer = new TransactionStatisticsComputer();
 

File: cat-core/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.analysis.AbstractMessageAnalyzerTest;
-import com.dianping.cat.analysis.DefaultMessageAnalyzerManagerTest;
 import com.dianping.cat.analysis.PeriodTaskTest;
 import com.dianping.cat.message.codec.HtmlMessageCodecTest;
 import com.dianping.cat.message.codec.WaterfallMessageCodecTest;
@@ -48,8 +47,6 @@
 
 AbstractMessageAnalyzerTest.class,
 
-DefaultMessageAnalyzerManagerTest.class,
-
 DefaultReportManagerTest.class
 
 })

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Model.java
Patch:
@@ -91,7 +91,7 @@ public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	private DisplayCommands m_displayCommands;
 
-	private List<CrashLogDomain> m_crashLogDomains;
+	private Collection<CrashLogDomain> m_crashLogDomains;
 
 	public Model(Context ctx) {
 		super(ctx);
@@ -178,7 +178,7 @@ public String getContent() {
 		return m_content;
 	}
 
-	public List<CrashLogDomain> getCrashLogDomains() {
+	public Collection<CrashLogDomain> getCrashLogDomains() {
 		return m_crashLogDomains;
 	}
 
@@ -325,7 +325,7 @@ public void setContent(String content) {
 		m_content = content;
 	}
 
-	public void setCrashLogDomains(List<CrashLogDomain> crashLogDomains) {
+	public void setCrashLogDomains(Collection<CrashLogDomain> crashLogDomains) {
 		m_crashLogDomains = crashLogDomains;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/processor/CrashLogProcessor.java
Patch:
@@ -135,11 +135,11 @@ public void process(Action action, Payload payload, Model model) {
 		model.setFieldsInfo(buildFeildsInfo(report));
 		model.setProblemStatistics(problemStatistics);
 		model.setProblemReport(report);
-		model.setCrashLogDomains(m_serverFilterConfigManager.getCrashLogDomains());
+		model.setCrashLogDomains(m_serverFilterConfigManager.getCrashLogDomains().values());
 	}
 
 	private String queryDomain(Payload payload) {
-		Set<String> crashLogDomains = m_serverFilterConfigManager.getCrashLogDomainIds();
+		Set<String> crashLogDomains = m_serverFilterConfigManager.getCrashLogDomains().keySet();
 		String domain = "";
 
 		if (StringUtils.isNotEmpty(payload.getQuery1())) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Handler.java
Patch:
@@ -80,7 +80,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Payload payload = ctx.getPayload();
 
 		normalize(model, payload);
-		long historyTime = payload.getHistoryEndDate().getTime() - payload.getHistoryStartDate().getTime();
+		long historyTime = (payload.getHistoryEndDate().getTime() - payload.getHistoryStartDate().getTime()) / 1000;
 
 		switch (payload.getAction()) {
 		case HOURLY_PROJECT:

File: cat-client/src/main/java/com/dianping/cat/CatClientModule.java
Patch:
@@ -28,7 +28,6 @@ protected void execute(final ModuleContext ctx) throws Exception {
 		// tracking thread start/stop
 		Threads.addListener(new CatThreadListener(ctx));
 
-
 		// warm up Cat
 		Cat.getInstance().setContainer(((DefaultModuleContext) ctx).getContainer());
 

File: cat-core/src/main/java/com/dianping/cat/config/server/ServerFilterConfigManager.java
Patch:
@@ -9,6 +9,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.dal.jdbc.DalNotFoundException;
+import org.unidal.helper.Threads;
 import org.unidal.helper.Threads.Task;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.lookup.util.StringUtils;
@@ -103,6 +104,7 @@ public void initialize() throws InitializationException {
 		if (m_config == null) {
 			m_config = new ServerFilterConfig();
 		}
+		Threads.forGroup("cat").start(new ConfigReloadTask());
 	}
 
 	public boolean insert(String xml) {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -88,6 +88,7 @@ public class Handler implements PageHandler<Context> {
 	private ConfigModificationDao m_configModificationDao;
 
 	@Override
+	@PreInboundActionMeta("login")
 	@PayloadMeta(Payload.class)
 	@InboundActionMeta(name = "config")
 	public void handleInbound(Context ctx) throws ServletException, IOException {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/LocalMessageBucketManager.java
Patch:
@@ -69,7 +69,7 @@ public class LocalMessageBucketManager extends ContainerHolder implements Messag
 
 	private long m_total;
 
-	private int m_gzipThreads = 24;
+	private int m_gzipThreads = 36;
 
 	private int m_gzipMessageSize = 5000;
 
@@ -251,7 +251,7 @@ public void storeMessage(final MessageTree tree, final MessageId id) {
 		MessageItem messageItem = new MessageItem(tree, id);
 		int retryTime = 0;
 
-		while (retryTime < m_gzipThreads) {
+		while (retryTime < 2) {
 			LinkedBlockingQueue<MessageItem> queue = m_messageQueues.get((index + retryTime) % m_gzipThreads);
 			boolean result = queue.offer(messageItem);
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -280,7 +280,7 @@ private List<Pair<Integer, String>> queryCommands(String url) {
 		if (url.startsWith("http")) {
 			String formatUrl = m_parser.parse(url);
 
-			if (url != null) {
+			if (formatUrl != null) {
 				command = m_appConfigManager.getCommands().get(formatUrl);
 
 				if (command != null) {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/AppConfigProcessor.java
Patch:
@@ -365,7 +365,7 @@ public void setInvalidatePaths(Set<String> invalidatePaths) {
 		public void visitName(EventName name) {
 			String id = name.getId();
 
-			if (id.indexOf("jpg") > -1 && id.indexOf("http") > -1 && id.indexOf("file") > -1 && id.indexOf("zip") > -1) {
+			if (id.indexOf("jpg") > -1 || id.indexOf("http") > -1 || id.indexOf("file") > -1 || id.indexOf("zip") > -1) {
 				invalidatePaths.add(id);
 			} else {
 				paths.add(id);

File: cat-home/src/test/java/com/dianping/cat/report/page/transaction/TransactionReportFilterTest.java
Patch:
@@ -14,11 +14,11 @@ public class TransactionReportFilterTest {
 	public void test() throws Exception {
 		String source = Files.forIO().readFrom(getClass().getResourceAsStream("transaction_filter.xml"), "utf-8");
 		TransactionReport report = DefaultSaxParser.parse(source);
-		TransactionReportFilter f1 = new TransactionReportFilter(null, null, "10.1.77.193");
+		TransactionReportFilter f1 = new TransactionReportFilter(null, null, "10.1.77.193", 0, 59);
 		String expected1 = Files.forIO().readFrom(getClass().getResourceAsStream("transaction_filter_type.xml"), "utf-8");
 		Assert.assertEquals(expected1.replaceAll("\r", ""), f1.buildXml(report).replaceAll("\r", ""));
-		
-		TransactionReportFilter f2 = new TransactionReportFilter("URL", null, null);
+
+		TransactionReportFilter f2 = new TransactionReportFilter("URL", null, null, 0, 59);
 		String expected2 = Files.forIO().readFrom(getClass().getResourceAsStream("transaction_filter_name.xml"), "utf-8");
 		Assert.assertEquals(expected2.replaceAll("\r", ""), f2.buildXml(report).replaceAll("\r", ""));
 	}

File: cat-core/src/main/java/com/dianping/cat/analysis/PeriodManager.java
Patch:
@@ -55,7 +55,7 @@ private void endPeriod(long timestamp) {
 
 	public Period findPeriod(long timestamp) {
 		for (Period period : m_periods) {
-			if (period.getStartTime() == timestamp) {
+			if (period.isIn(timestamp)) {
 				return period;
 			}
 		}

File: cat-agent/src/main/java/com/dianping/cat/agent/build/ComponentsConfigurator.java
Patch:
@@ -19,7 +19,6 @@
 import com.dianping.cat.agent.monitor.executors.system.SystemStateExecutor;
 import com.dianping.cat.agent.monitor.paas.DataBuilder;
 import com.dianping.cat.agent.monitor.paas.PaasTask;
-import com.dianping.cat.configuration.ClientConfigManager;
 
 public class ComponentsConfigurator extends AbstractResourceConfigurator {
 	public static void main(String[] args) {
@@ -34,7 +33,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(DataBuilder.class).req(CommandUtils.class));
 
-		all.add(C(CatServers.class).req(ClientConfigManager.class));
+		all.add(C(CatServers.class));
 
 		all.add(C(DataSender.class).req(CatServers.class));
 

File: cat-agent/src/main/java/com/dianping/cat/agent/build/ComponentsConfigurator.java
Patch:
@@ -19,6 +19,7 @@
 import com.dianping.cat.agent.monitor.executors.system.SystemStateExecutor;
 import com.dianping.cat.agent.monitor.paas.DataBuilder;
 import com.dianping.cat.agent.monitor.paas.PaasTask;
+import com.dianping.cat.configuration.ClientConfigManager;
 
 public class ComponentsConfigurator extends AbstractResourceConfigurator {
 	public static void main(String[] args) {
@@ -33,7 +34,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(DataBuilder.class).req(CommandUtils.class));
 
-		all.add(C(CatServers.class));
+		all.add(C(CatServers.class).req(ClientConfigManager.class));
 
 		all.add(C(DataSender.class).req(CatServers.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateGraphBuilder.java
Patch:
@@ -43,8 +43,7 @@ public Pair<LineChart, PieChart> buildGraph(Payload payload, String key, StateRe
 
 	private Pair<LineChart, PieChart> buildHistoryGraph(String domain, Date start, Date end, String key, String ip) {
 		List<StateReport> reports = new ArrayList<StateReport>();
-		StateHistoryGraphVisitor builder = new StateHistoryGraphVisitor(ip, m_configManager.getUnusedDomains(),
-		      start.getTime(), end.getTime(), key);
+		StateHistoryGraphVisitor builder = new StateHistoryGraphVisitor(ip, start.getTime(), end.getTime(), key);
 		StateDistirbutionVisitor visitor = new StateDistirbutionVisitor(key);
 		long step;
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/connection/Handler.java
Patch:
@@ -224,7 +224,7 @@ private void processVersion3Content(Integer cityId, Integer operatorId, String c
 				}
 			}
 		} else {
-			Cat.logEvent("contentEmpty", "connection:3");
+			Cat.logEvent("contentEmpty", "connection:3", Event.SUCCESS, null);
 		}
 	}
 }

File: cat-core/src/main/java/com/dianping/cat/config/app/AppSpeedConfigManager.java
Patch:
@@ -3,11 +3,11 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.unidal.dal.jdbc.DalException;
@@ -34,7 +34,7 @@ public class AppSpeedConfigManager implements Initializable {
 	@Inject
 	private ContentFetcher m_fetcher;
 
-	private Map<String, Speed> m_speeds = new HashMap<String, Speed>();
+	private Map<String, Speed> m_speeds = new ConcurrentHashMap<String, Speed>();
 
 	private int m_configId;
 
@@ -166,7 +166,7 @@ public Set<Integer> querySpeedIds() {
 
 	private void updateData() {
 		Map<Integer, Speed> speeds = m_config.getSpeeds();
-		Map<String, Speed> tmp = new HashMap<String, Speed>();
+		Map<String, Speed> tmp = new ConcurrentHashMap<String, Speed>();
 
 		for (Entry<Integer, Speed> entry : speeds.entrySet()) {
 			Speed s = entry.getValue();

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Payload.java
Patch:
@@ -11,7 +11,7 @@ public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private Action m_action;
 
 	@FieldMeta("docName")
-	private String m_docName = "userMonitor";
+	private String m_docName = "index";
 
 	@FieldMeta("subDocName")
 	private String m_subDocName;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -151,7 +151,7 @@ private void processVersion3Record(int cityId, int operatorId, String record) {
 				Integer command = m_appConfigManager.getCommands().get(url);
 
 				if (command == null) {
-					 url = m_parser.parse(url);
+					url = m_parser.parse(url);
 
 					if (url != null) {
 						command = m_appConfigManager.getCommands().get(url);
@@ -226,7 +226,7 @@ private void processVersion2Record(int cityId, int operatorId, String record) {
 						command = m_appConfigManager.getCommands().get(url);
 					}
 				}
-				
+
 				if (command != null) {
 					// appData.setTimestamp(Long.parseLong(items[0]));
 					appData.setTimestamp(System.currentTimeMillis());

File: cat-broker/src/test/java/com/dianping/cat/broker/app/AppDataTest.java
Patch:
@@ -28,6 +28,8 @@ public void SendData(String host) throws Exception {
 		for (int i = 0; i < 10; i++) {
 			urls.add(url_pre + "?v=2&c=" + timestamp
 			      + URLEncoder.encode("\t1\t2\t3\tshop.bin\t4\t5\t10\t20\t30\n", "utf-8"));
+			urls.add(url_pre + "?v=2&c=" + timestamp
+			      + URLEncoder.encode("\t1\t2\t3\tsearchshop.api\t4\t5\t10\t20\t30\n", "utf-8"));
 		}
 
 		for (String url : urls) {

File: cat-core/src/main/java/com/dianping/cat/config/app/AppConfigManager.java
Patch:
@@ -68,6 +68,8 @@ public class AppConfigManager implements Initializable {
 
 	public static String CONNECT_TYPE = "连接类型";
 
+	public static final int ALL_COMMAND_ID = 0;
+
 	public static final int COMMAND_END_INDEX = 1099;
 
 	public static final int ACTIVITY_END_INDEX = 1200;
@@ -365,7 +367,7 @@ public List<Command> queryCommands(boolean activity) {
 		} else {
 			for (Command command : commands) {
 				int commandId = command.getId();
-				if (commandId > 0 && commandId <= COMMAND_END_INDEX) {
+				if (commandId >= ALL_COMMAND_ID && commandId <= COMMAND_END_INDEX) {
 					results.add(command);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/app/service/SpeedQueryEntity.java
Patch:
@@ -8,8 +8,6 @@
 
 public class SpeedQueryEntity extends BaseQueryEntity {
 
-	public static final int DEFAULT_SPEED_PAGE = 1;
-
 	public SpeedQueryEntity() {
 		super();
 	}

File: cat-home/src/test/java/com/dianping/cat/report/task/app/AppReportBuilderTest.java
Patch:
@@ -18,7 +18,7 @@ public void testDailyTask() {
 
 		try {
 			builder.buildDailyTask(AppReportBuilder.ID, Constants.CAT,
-			      new SimpleDateFormat("yyyy-MM-dd").parse("2015-03-20"));
+			      new SimpleDateFormat("yyyy-MM-dd").parse("2015-03-23"));
 		} catch (ParseException e) {
 			e.printStackTrace();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -4,7 +4,7 @@
 import org.unidal.web.mvc.annotation.ModuleMeta;
 import org.unidal.web.mvc.annotation.ModulePagesMeta;
 
-@ModuleMeta(name = "r", defaultInboundAction = "home", defaultTransition = "default", defaultErrorAction = "default")
+@ModuleMeta(name = "r", defaultInboundAction = "top", defaultTransition = "default", defaultErrorAction = "default")
 @ModulePagesMeta({
 
 com.dianping.cat.report.page.home.Handler.class,

File: cat-home/src/test/java/com/dianping/cat/report/page/transaction/PayloadTest.java
Patch:
@@ -77,11 +77,9 @@ public void testHistoryDayNav() {
 		Date lastTwoDay = new Date(temp - 2 * ONE_DAY);
 		Date lastOneDay = new Date(temp - ONE_DAY);
 		Date currentDay = new Date(temp);
-		Date nextDay = new Date(temp + ONE_DAY);
 		String lastTwo = sdf.format(lastTwoDay);
 		String lastOne = sdf.format(lastOneDay);
 		String current = sdf.format(currentDay);
-		String next = sdf.format(nextDay);
 		payload.setDate(sdf.format(input));
 
 		payload.setStep(-1);

File: cat-core/src/main/java/com/dianping/cat/service/BaseCompositeModelService.java
Patch:
@@ -21,7 +21,7 @@
 
 public abstract class BaseCompositeModelService<T> extends ModelServiceWithCalSupport implements ModelService<T>,
       Initializable {
-	private static ExecutorService s_threadPool = Threads.forPool().getFixedThreadPool("Cat-ModelService", 50);
+	private static ExecutorService s_threadPool = Threads.forPool().getFixedThreadPool("Cat-ModelService", 100);
 
 	// introduce another list is due to a bug inside Plexus ComponentList
 	private List<ModelService<T>> m_allServices = new ArrayList<ModelService<T>>();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -46,7 +46,6 @@ private Period buildHeartBeatInfo(Machine machine, Heartbeat heartbeat, long tim
 
 			transalteHearbeat(info);
 		} catch (Exception e) {
-			m_logger.error(e.getMessage(), e);
 			return null;
 		}
 

File: cat-core/src/main/java/com/dianping/cat/mvc/HistoryNav.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.view;
+package com.dianping.cat.mvc;
 
 public enum HistoryNav {
 

File: cat-core/src/main/java/com/dianping/cat/mvc/UrlNav.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.view;
+package com.dianping.cat.mvc;
 
 public enum UrlNav {
 	SEVEN_DAY_BEFORE("-7d", -24 * 7),

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -32,6 +32,7 @@
 import com.dianping.cat.home.dal.report.AlertDao;
 import com.dianping.cat.home.dal.report.TopologyGraphDao;
 import com.dianping.cat.home.dal.report.UserDefineRuleDao;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.alert.AlertInfo;
 import com.dianping.cat.report.alert.app.AppRuleConfigManager;
 import com.dianping.cat.report.alert.business.BusinessRuleConfigManager;
@@ -59,7 +60,6 @@
 import com.dianping.cat.report.graph.svg.ValueTranslater;
 import com.dianping.cat.report.page.ConfigReloadTask;
 import com.dianping.cat.report.page.DomainGroupConfigManager;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.activity.config.ActivityConfigManager;
 import com.dianping.cat.report.page.app.service.AppConnectionService;
 import com.dianping.cat.report.page.app.service.AppDataService;

File: cat-home/src/main/java/com/dianping/cat/report/page/activity/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.activity;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/JspFile.java
Patch:
@@ -3,8 +3,7 @@
 public enum JspFile {
 	INSERT("/jsp/report/alteration/alter_insertResult.jsp"),
 
-	VIEW("/jsp/report/alteration/alter_view.jsp"),
-	;
+	VIEW("/jsp/report/alteration/alter_view.jsp"), ;
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/Model.java
Patch:
@@ -5,10 +5,11 @@
 import java.util.Map;
 
 import com.dianping.cat.Constants;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.alteration.Handler.AlterationMinute;
 
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	private String m_insertResult;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/Payload.java
Patch:
@@ -9,10 +9,10 @@
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("altType")

File: cat-home/src/main/java/com/dianping/cat/report/page/app/JspFile.java
Patch:
@@ -4,7 +4,7 @@ public enum JspFile {
 	VIEW("/jsp/report/app/linechart.jsp"),
 
 	PIECHART("/jsp/report/app/piechart.jsp"),
-	
+
 	CONN_LINECHART("/jsp/report/app/connLinechart.jsp"),
 
 	CONN_PIECHART("/jsp/report/app/connPiechart.jsp"),
@@ -14,9 +14,9 @@ public enum JspFile {
 	APP_FETCH_DATA("/jsp/report/app/fetchData.jsp"),
 
 	CRASH_LOG("/jsp/report/app/crashLog.jsp"),
-	
+
 	SPEED("/jsp/report/app/speed.jsp"),
-	
+
 	STATISTICS("/jsp/report/app/statistics.jsp");
 
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Model.java
Patch:
@@ -19,17 +19,18 @@
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.helper.JsonBuilder;
 import com.dianping.cat.home.app.entity.AppReport;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.PieChart;
-import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.app.display.AppDataDetail;
 import com.dianping.cat.report.page.app.display.AppSpeedDetail;
 import com.dianping.cat.report.page.app.display.AppSpeedDisplayInfo;
 import com.dianping.cat.report.page.app.display.PieChartDetailInfo;
 import com.dianping.cat.report.page.app.processor.CrashLogProcessor.FieldsInfo;
 
 @ModelMeta(Constants.APP)
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	@EntityMeta
 	private LineChart m_lineChart;

File: cat-home/src/main/java/com/dianping/cat/report/page/app/processor/CrashLogProcessor.java
Patch:
@@ -17,7 +17,7 @@
 
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
-import com.dianping.cat.report.page.PayloadNormalizer;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.page.app.Action;
 import com.dianping.cat.report.page.app.Model;
 import com.dianping.cat.report.page.app.Payload;

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -178,7 +178,7 @@ public void add(TransactionName transactionName, EventName eventName, String met
 
 			if (!StringUtils.isEmpty(method)) {
 				long total = incMethodCount(method, transactionTotalCount);
-				
+
 				if ("get".equalsIgnoreCase(method)) {
 					m_missed = m_missed + eventName.getTotalCount();
 					m_hited = 1 - (double) m_missed / total;

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	@FieldMeta("op")
 	private Action m_action;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/JspFile.java
Patch:
@@ -14,5 +14,5 @@ private JspFile(String path) {
 	public String getPath() {
 		return m_path;
 	}
-	
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/Payload.java
Patch:
@@ -7,10 +7,10 @@
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Handler.java
Patch:
@@ -14,8 +14,8 @@
 
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.cross.display.HostInfo;
 import com.dianping.cat.report.page.cross.display.MethodInfo;
 import com.dianping.cat.report.page.cross.display.ProjectInfo;
@@ -174,6 +174,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 	private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.CROSS);
+		model.setAction(payload.getAction());
 		m_normalizePayload.normalize(model, payload);
 		model.setCallSort(payload.getCallSort());
 		model.setServiceSort(payload.getServiceSort());

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 
 	private static int HOUR = 60 * 60 * 1000;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dashboard/Handler.java
Patch:
@@ -62,7 +62,7 @@ public class Handler implements PageHandler<Context> {
 
 	@Inject
 	private JsonBuilder m_builder;
-	
+
 	private NumberFormat m_format = new DecimalFormat("#0.00");
 
 	private static final String COUNT = "Count";

File: cat-home/src/main/java/com/dianping/cat/report/page/database/GraphCreator.java
Patch:
@@ -9,10 +9,10 @@
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.helper.Chinese;
 import com.dianping.cat.helper.TimeHelper;
-import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.graph.metric.AbstractGraphCreator;
 import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
 import com.dianping.cat.report.alert.MetricType;
+import com.dianping.cat.report.graph.LineChart;
+import com.dianping.cat.report.graph.metric.AbstractGraphCreator;
 
 public class GraphCreator extends AbstractGraphCreator {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Handler.java
Patch:
@@ -18,9 +18,9 @@
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.config.ProductLineConfigManager;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.PayloadNormalizer;
 
 public class Handler implements PageHandler<Context> {
 	@Inject
@@ -69,6 +69,8 @@ private void normalize(Model model, Payload payload) {
 
 		model.setPage(ReportPage.DATABASE);
 		model.setProductLines(databases);
+		model.setAction(payload.getAction());
+
 		m_normalizePayload.normalize(model, payload);
 
 		if (StringUtils.isEmpty(payload.getProduct())) {

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Model.java
Patch:
@@ -10,12 +10,13 @@
 import org.unidal.web.mvc.view.annotation.ModelMeta;
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.metric.Range;
 
 @ModelMeta("database")
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	@EntityMeta
 	private List<LineChart> m_lineCharts;

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/ExternalInfoBuilder.java
Patch:
@@ -23,7 +23,7 @@ public class ExternalInfoBuilder {
 
 	@Inject
 	private DependencyReportService m_reportService;
-	
+
 	@Inject
 	protected ServerConfigManager m_serverConfigManager;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/JspFile.java
Patch:
@@ -7,8 +7,8 @@ public enum JspFile {
 
 	DEPENDENCY_DASHBOARD("/jsp/report/dependency/dependencyDashboard.jsp"),
 
-	PRODUCT_LINE("/jsp/report/dependency/dependencyProductLine.jsp"), 
-	
+	PRODUCT_LINE("/jsp/report/dependency/dependencyProductLine.jsp"),
+
 	ERROR_DASHBOARD("/jsp/report/dependency/errorDashboard.jsp"),
 
 	;

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Action.java
Patch:
@@ -8,7 +8,7 @@ public enum Action implements org.unidal.web.mvc.Action {
 	HISTORY_REPORT("history"),
 
 	HOURLY_REPORT("view"),
-	
+
 	GROUP_GRAPHS("groupGraphs"),
 
 	HISTORY_GROUP_GRAPH("historyGroupGraph"),

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Model.java
Patch:
@@ -10,11 +10,12 @@
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.helper.SortHelper;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.event.transform.DistributionDetailVisitor.DistributionDetail;
 
 @ModelMeta(EventAnalyzer.ID)
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 	@EntityMeta
 	private DisplayNames m_displayNameReport;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -23,9 +23,9 @@
 import com.dianping.cat.consumer.heartbeat.model.entity.Period;
 import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.svg.GraphBuilder;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.heartbeat.config.HeartbeatDisplayPolicyManager;
 import com.dianping.cat.report.page.heartbeat.service.HeartbeatReportService;
 import com.dianping.cat.report.service.ModelService;
@@ -150,6 +150,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	private void normalize(Model model, Payload payload) {
 		String ipAddress = payload.getIpAddress();
 
+		model.setAction(payload.getAction());
 		model.setPage(ReportPage.HEARTBEAT);
 		if (StringUtils.isEmpty(ipAddress) || ipAddress.equals(Constants.ALL)) {
 			model.setIpAddress(Constants.ALL);

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/HistoryGraphs.java
Patch:
@@ -93,7 +93,7 @@ private void dealWithExtensions(Map<String, double[]> datas, int minute, Period
 			for (String metric : currentExtension.getDetails().keySet()) {
 				m_extensionMetrics.add(metric);
 				double value = currentExtension.findDetail(metric).getValue();
-				int unit = m_manager.queryUnit(group,metric);
+				int unit = m_manager.queryUnit(group, metric);
 				double actualValue = value / unit;
 
 				updateMetricArray(datas, minute, metric, actualValue);

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Model.java
Patch:
@@ -12,11 +12,12 @@
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.helper.SortHelper;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.heartbeat.HeartbeatSvgGraph.ExtensionGroup;
 
 @ModelMeta(HeartbeatAnalyzer.ID)
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	private int m_hour;
 
@@ -133,7 +134,6 @@ public void setIpAddress(String ipAddress) {
 		m_ipAddress = ipAddress;
 	}
 
-
 	public void setReport(HeartbeatReport report) {
 		m_report = report;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Handler.java
Patch:
@@ -25,7 +25,7 @@ public class Handler implements PageHandler<Context> {
 
 	@Inject
 	private TcpSocketReceiver m_receiver;
-	
+
 	@Inject(type = MessageConsumer.class)
 	private RealtimeConsumer m_realtimeConsumer;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Model.java
Patch:
@@ -5,9 +5,10 @@
 import java.util.Collections;
 import java.util.List;
 
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 	private String m_content;
 
 	private String m_domain;

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/Model.java
Patch:
@@ -4,9 +4,10 @@
 import java.util.Collections;
 
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 	private String m_domain;
 
 	private String m_mobileResponse;

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Handler.java
Patch:
@@ -13,8 +13,8 @@
 
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.matrix.service.MatrixReportService;
 import com.dianping.cat.report.service.ModelService;
 import com.dianping.cat.service.ModelRequest;
@@ -63,6 +63,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Model model = new Model(ctx);
 		Payload payload = ctx.getPayload();
 
+		model.setAction(payload.getAction());
 		normalize(model, payload);
 		switch (payload.getAction()) {
 		case HISTORY_REPORT:

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Model.java
Patch:
@@ -10,10 +10,11 @@
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.helper.SortHelper;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 
 @ModelMeta(MatrixAnalyzer.ID)
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 	@EntityMeta
 	private DisplayMatrix m_matrix;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	@FieldMeta("op")
 	private Action m_action;
 
@@ -18,7 +18,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	public Payload() {
 		super(ReportPage.MATRIX);
 	}
-	
+
 	@Override
 	public Action getAction() {
 		return m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Action.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum Action implements org.unidal.web.mvc.Action {
 	METRIC("view"),
-	
+
 	JSON("json");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -19,9 +19,9 @@
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.PayloadNormalizer;
 
 public class Handler implements PageHandler<Context> {
 	@Inject
@@ -98,6 +98,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 	private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.METRIC);
+		model.setAction(payload.getAction());
 		m_normalizePayload.normalize(model, payload);
 
 		int timeRange = payload.getTimeRange();

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Model.java
Patch:
@@ -10,11 +10,12 @@
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.AbstractReportModel;
 
 @ModelMeta(MetricAnalyzer.ID)
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	@EntityMeta
 	private List<LineChart> m_lineCharts;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -27,7 +27,7 @@
 @SuppressWarnings("rawtypes")
 public class Handler extends ContainerHolder implements Initializable, PageHandler<Context> {
 
-   public Map<String, LocalModelService> m_localServices;
+	public Map<String, LocalModelService> m_localServices;
 
 	private byte[] compress(String str) throws IOException {
 		ByteArrayOutputStream out = new ByteArrayOutputStream(1024 * 32);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Payload.java
Patch:
@@ -19,7 +19,7 @@ public class Payload extends BasePayload implements ActionPayload<ReportPage, Ac
 
 	@PathMeta("path")
 	private String[] m_path;
-	
+
 	@Override
 	public Action getAction() {
 		return m_action;
@@ -62,15 +62,15 @@ public void setAction(String action) {
 	public void setPage(String page) {
 		m_page = ReportPage.getByName(page, ReportPage.MODEL);
 	}
-	
+
 	public void setPath(String[] path) {
 		if (path == null) {
 			m_path = new String[0];
 		} else {
 			m_path = Arrays.copyOf(path, path.length);
 		}
 	}
-	
+
 	@Override
 	public void validate(ActionContext<?> ctx) {
 		if (m_action == null) {

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -19,9 +19,9 @@
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.config.ProductLineConfigManager;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.network.nettopology.NetGraphManager;
 import com.dianping.cat.service.ModelPeriod;
 
@@ -85,6 +85,7 @@ private void normalize(Model model, Payload payload) {
 			payload.setProduct(productLines.iterator().next().getId());
 		}
 
+		model.setAction(payload.getAction());
 		m_normalizePayload.normalize(model, payload);
 
 		if (payload.getAction().equals(Action.NETTOPOLOGY)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -1,9 +1,8 @@
 package com.dianping.cat.report.page.network;
 
 public enum JspFile {
-	NETWORK("/jsp/report/network/metric.jsp"),
-	NETTOPOLOGY("/jsp/report/network/nettopology.jsp");
-	
+	NETWORK("/jsp/report/network/metric.jsp"), NETTOPOLOGY("/jsp/report/network/nettopology.jsp");
+
 	private String m_path;
 
 	private JspFile(String path) {

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Model.java
Patch:
@@ -10,12 +10,13 @@
 import org.unidal.web.mvc.view.annotation.ModelMeta;
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.metric.Range;
 
 @ModelMeta("network")
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	@EntityMeta
 	private List<LineChart> m_lineCharts;

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("op")
@@ -125,5 +125,5 @@ public void validate(ActionContext<?> ctx) {
 			m_action = Action.NETTOPOLOGY;
 		}
 	}
-	
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/overload/JspFile.java
Patch:
@@ -1,8 +1,7 @@
 package com.dianping.cat.report.page.overload;
 
 public enum JspFile {
-	VIEW("/jsp/report/overload/overload.jsp"),
-	;
+	VIEW("/jsp/report/overload/overload.jsp"), ;
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Action.java
Patch:
@@ -6,15 +6,15 @@ public enum Action implements org.unidal.web.mvc.Action {
 	GROUP("group"),
 
 	THREAD("thread"),
-	
+
 	HOUR_GRAPH("hourlyGraph"),
 
 	HISTORY_REPORT("history"),
 
 	HISTORY_GRAPH("historyGraph"),
 
 	HOULY_REPORT("view"),
-	
+
 	GROUP_GRAPHS("groupGraphs"),
 
 	HISTORY_GROUP_GRAPH("historyGroupGraph"),

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/GroupLevelInfo.java
Patch:
@@ -7,9 +7,9 @@
 import java.util.Map;
 import java.util.TreeSet;
 
+import com.dianping.cat.consumer.problem.model.entity.Entity;
 import com.dianping.cat.consumer.problem.model.entity.JavaThread;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
-import com.dianping.cat.consumer.problem.model.entity.Entity;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
 import com.dianping.cat.helper.SortHelper;
@@ -49,7 +49,7 @@ public GroupLevelInfo display(ProblemReport report) {
 		}
 		long currentTimeMillis = System.currentTimeMillis();
 		long currentHours = currentTimeMillis - currentTimeMillis % (60 * 60 * 1000);
-		
+
 		if (currentHours == m_model.getLongDate()) {
 			for (int i = m_minutes; i >= 0; i--) {
 				m_datas.add(getShowDetailByMinte(i));

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -25,9 +25,9 @@
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.helper.JsonBuilder;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.DomainGroupConfigManager;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.problem.service.ProblemReportService;
 import com.dianping.cat.report.page.problem.transform.DetailStatistics;
 import com.dianping.cat.report.page.problem.transform.HourlyLineChartVisitor;
@@ -280,6 +280,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	private void normalize(Model model, Payload payload) {
 		setDefaultThreshold(model, payload);
 		model.setPage(ReportPage.PROBLEM);
+		model.setAction(payload.getAction());
 		m_normalizePayload.normalize(model, payload);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java
Patch:
@@ -18,10 +18,10 @@
 import com.dianping.cat.consumer.state.StateAnalyzer;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
 import com.dianping.cat.helper.JsonBuilder;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.PieChart;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.state.service.StateReportService;
 import com.dianping.cat.report.service.ModelService;
 import com.dianping.cat.service.ModelRequest;
@@ -130,6 +130,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 	private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.STATE);
+		model.setAction(payload.getAction());
+
 		String ip = payload.getIpAddress();
 
 		if (StringUtils.isEmpty(ip)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Payload.java
Patch:
@@ -3,10 +3,10 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 
 	private ReportPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateHistoryGraphVisitor.java
Patch:
@@ -65,7 +65,7 @@ protected Machine mergerMachine(Machine old, Machine other) {
 
 		long count = old.getDelayCount();
 		double sum = old.getDelaySum();
-		
+
 		if (count > 0) {
 			old.setDelayAvg(sum / count);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Model.java
Patch:
@@ -20,10 +20,11 @@
 import com.dianping.cat.home.service.entity.ServiceReport;
 import com.dianping.cat.home.system.entity.SystemReport;
 import com.dianping.cat.home.utilization.entity.UtilizationReport;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 
 @ModelMeta("statistics")
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	private String m_browserChart;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/storage/Handler.java
Patch:
@@ -28,9 +28,9 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.storage.alert.entity.Storage;
 import com.dianping.cat.home.storage.alert.entity.StorageAlertInfo;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.storage.config.StorageGroupConfigManager;
 import com.dianping.cat.report.page.storage.config.StorageGroupConfigManager.Department;
 import com.dianping.cat.report.page.storage.task.StorageReportService;
@@ -70,7 +70,7 @@ public class Handler implements PageHandler<Context> {
 	private Map<String, Map<String, List<String>>> buildAlertLinks(Map<String, StorageAlertInfo> alertInfos, String type) {
 		Map<String, Map<String, List<String>>> links = new LinkedHashMap<String, Map<String, List<String>>>();
 		String format = m_storageGroupConfigManager.getSqlLinkFormat();
-		
+
 		if (format != null) {
 			for (Entry<String, StorageAlertInfo> alertInfo : alertInfos.entrySet()) {
 				String key = alertInfo.getKey();
@@ -219,6 +219,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 	private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.STORAGE);
+		model.setAction(payload.getAction());
 		m_normalizePayload.normalize(model, payload);
 
 		if (payload.getAction() == Action.DASHBOARD) {

File: cat-home/src/main/java/com/dianping/cat/report/page/storage/JspFile.java
Patch:
@@ -6,7 +6,7 @@ public enum JspFile {
 	HOURL_GRAPH("/jsp/report/storage/hourlyGraphs.jsp"),
 
 	HISTORY_REPORT("/jsp/report/storage/historyStorage.jsp"),
-	
+
 	DASHBOARD("/jsp/report/storage/dashboard.jsp");
 
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/storage/Model.java
Patch:
@@ -13,10 +13,11 @@
 import com.dianping.cat.consumer.storage.model.entity.StorageReport;
 import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.home.storage.alert.entity.StorageAlertInfo;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.storage.config.StorageGroupConfigManager.Department;
 
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	private StorageReport m_report;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/storage/Payload.java
Patch:
@@ -5,10 +5,10 @@
 
 import com.dianping.cat.Constants;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 
 	private ReportPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Action.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum Action implements org.unidal.web.mvc.Action {
 	SYSTEM("view"),
-	
+
 	;
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Handler.java
Patch:
@@ -21,9 +21,9 @@
 import com.dianping.cat.consumer.config.ProductLineConfig;
 import com.dianping.cat.consumer.config.ProductLineConfigManager;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.system.graph.SystemGraphCreator;
 
 public class Handler implements PageHandler<Context> {
@@ -102,6 +102,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	private void normalize(Model model, Payload payload) {
 		model.setProductLines(buildProductlines());
 		model.setPage(ReportPage.SYSTEM);
+		model.setAction(payload.getAction());
 		m_normalizePayload.normalize(model, payload);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Model.java
Patch:
@@ -8,12 +8,13 @@
 import org.unidal.web.mvc.view.annotation.EntityMeta;
 import org.unidal.web.mvc.view.annotation.ModelMeta;
 
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
-import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.metric.Range;
 
 @ModelMeta("system")
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 
 	@EntityMeta
 	private List<LineChart> m_lineCharts;

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Payload.java
Patch:
@@ -8,10 +8,10 @@
 
 import com.dianping.cat.Constants;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/page/top/Handler.java
Patch:
@@ -20,9 +20,9 @@
 import com.dianping.cat.consumer.top.TopAnalyzer;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.PayloadNormalizer;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.alert.exception.ExceptionRuleConfigManager;
-import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.dependency.ExternalInfoBuilder;
 import com.dianping.cat.report.page.dependency.TopExceptionExclude;
 import com.dianping.cat.report.page.dependency.TopMetric;
@@ -113,7 +113,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.TOP);
 		model.setAction(Action.VIEW);
-
 		m_normalizePayload.normalize(model, payload);
 
 		Integer minute = parseQueryMinute(payload);

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Action.java
Patch:
@@ -8,7 +8,7 @@ public enum Action implements org.unidal.web.mvc.Action {
 	HISTORY_REPORT("history"),
 
 	HOURLY_REPORT("view"),
-	
+
 	GROUP_GRAPHS("groupGraphs"),
 
 	HISTORY_GROUP_GRAPH("historyGroupGraph"),

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -10,11 +10,12 @@
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.helper.SortHelper;
-import com.dianping.cat.report.page.AbstractReportModel;
+import com.dianping.cat.mvc.AbstractReportModel;
+import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.transaction.transform.DistributionDetailVisitor.DistributionDetail;
 
 @ModelMeta(TransactionAnalyzer.ID)
-public class Model extends AbstractReportModel<Action, Context> {
+public class Model extends AbstractReportModel<Action, ReportPage, Context> {
 	@EntityMeta
 	private DisplayNames m_displayNameReport;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/web/Payload.java
Patch:
@@ -10,10 +10,10 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.helper.TimeHelper;
+import com.dianping.cat.mvc.AbstractReportPayload;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 
-public class Payload extends AbstractReportPayload<Action> {
+public class Payload extends AbstractReportPayload<Action,ReportPage> {
 	private ReportPage m_page;
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskConsumer.java
Patch:
@@ -46,7 +46,7 @@ public boolean checkTime() {
 		Calendar cal = Calendar.getInstance();
 		int minute = cal.get(Calendar.MINUTE);
 
-		if (minute > 15) {
+		if (minute > 10) {
 			return true;
 		} else {
 			return false;

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -19,7 +19,6 @@
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
-import org.xml.sax.SAXException;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
@@ -30,7 +29,6 @@
 import com.dianping.cat.helper.JsonBuilder;
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.app.entity.AppReport;
-import com.dianping.cat.home.app.transform.DefaultSaxParser;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.PieChart;

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -19,6 +19,7 @@
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
+import org.xml.sax.SAXException;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
@@ -29,6 +30,7 @@
 import com.dianping.cat.helper.JsonBuilder;
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.app.entity.AppReport;
+import com.dianping.cat.home.app.transform.DefaultSaxParser;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.PieChart;
@@ -349,7 +351,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			distributionVisitor.visitAppReport(report);
 			report = distributionVisitor.getReport();
 
-			AppReportSorter sorter = new AppReportSorter(report, payload.getSort());
+			AppReportSorter sorter = new AppReportSorter(report, "1XX");
 			report = sorter.getSortedReport();
 			model.setAppReport(report);
 			break;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -73,7 +73,6 @@ public TopReport getReport(String domain) {
 				if (m_serverConfigManager.validateDomain(name) || Constants.FRONT_END.equals(name)) {
 					TransactionReport report = m_transactionAnalyzer.getRawReport(name);
 
-					System.out.println(report);
 					transactionReportVisitor.visitTransactionReport(report);
 				}
 			} catch (ConcurrentModificationException e) {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/top/TopAnalyzerTest.java
Patch:
@@ -17,8 +17,8 @@
 import com.dianping.cat.consumer.problem.ProblemAnalyzerTest;
 import com.dianping.cat.consumer.problem.ProblemDelegate;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
+import com.dianping.cat.consumer.top.Configurator.MockTransactionReportManager;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
-import com.dianping.cat.consumer.transaction.Configurator.MockTransactionReportManager;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzerTest;
 import com.dianping.cat.consumer.transaction.TransactionDelegate;

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -80,7 +80,7 @@ public void init() {
 		}
 	}
 
-	public void destory() {
+	public synchronized void destory() {
 		try {
 			m_logger.info("start shutdown socket, port " + m_port);
 			m_future.channel().closeFuture();

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -25,12 +25,13 @@
 import com.dianping.cat.CatConstants;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.message.spi.MessageCodec;
+import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 import com.dianping.cat.statistic.ServerStatisticManager;
 
 public final class TcpSocketReceiver implements LogEnabled {
 
-	@Inject
+	@Inject(type = MessageCodec.class, value = PlainTextMessageCodec.ID)
 	private MessageCodec m_codec;
 
 	@Inject
@@ -139,8 +140,6 @@ protected void decode(ChannelHandlerContext ctx, ByteBuf buffer, List<Object> ou
 					ByteBuf readBytes = buffer.readBytes(length + 4);
 					readBytes.markReaderIndex();
 					readBytes.readInt();
-					
-					System.out.println(m_codec.getClass().getSimpleName());
 
 					DefaultMessageTree tree = (DefaultMessageTree) m_codec.decode(readBytes);
 					boolean valid = m_domainValidator.validate(tree.getDomain());

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Handler.java
Patch:
@@ -23,10 +23,11 @@ public class Handler implements PageHandler<Context> {
 	@Inject
 	private JspViewer m_jspViewer;
 
+	@Inject
+	private TcpSocketReceiver m_receiver;
+	
 	@Inject(type = MessageConsumer.class)
 	private RealtimeConsumer m_realtimeConsumer;
-	
-	private TcpSocketReceiver m_receiver;
 
 	@Override
 	@PayloadMeta(Payload.class)

File: cat-home/src/main/java/com/dianping/cat/system/config/StorageRuleConfigManager.java
Patch:
@@ -69,7 +69,7 @@ private void refreshData() {
 			String ruleId = entry.getValue().getId();
 			String[] conditions = ruleId.split(StorageConstants.FIELD_SEPARATOR);
 
-			if (conditions.length == 4) {
+			if (conditions.length >= 4) {
 				String name = conditions[0];
 				String machine = conditions[1];
 				String operation = conditions[2];

File: cat-client/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -105,7 +105,7 @@ protected void decodeHeader(Context ctx, MessageTree tree) {
 			throw new RuntimeException(String.format("Unrecognized id(%s) for plain text message codec!", id));
 		}
 	}
-
+	
 	protected Message decodeLine(Context ctx, DefaultTransaction parent, Stack<DefaultTransaction> stack,
 	      MessageTree tree) {
 		BufferHelper helper = m_bufferHelper;

File: cat-core/src/test/java/com/dianping/cat/service/DefaultReportManagerTest.java
Patch:
@@ -19,6 +19,7 @@
 import com.dianping.cat.core.dal.HourlyReportContent;
 import com.dianping.cat.core.dal.HourlyReportContentDao;
 import com.dianping.cat.core.dal.HourlyReportDao;
+import com.dianping.cat.message.spi.core.DomainValidator;
 import com.dianping.cat.service.DefaultReportManager.StoragePolicy;
 import com.dianping.cat.storage.report.ReportBucket;
 import com.dianping.cat.storage.report.ReportBucketManager;
@@ -52,6 +53,7 @@ public void setUp() {
 		m_manager.setReportContentDao(m_reportContentDao);
 		m_manager.setReportDao(m_hourlyReportDao);
 		m_manager.setReportDelegate(new MockReportDeletegate());
+		m_manager.setValidator(new DomainValidator());
 
 		long time = System.currentTimeMillis();
 		m_start = time - time % (3600 * 1000L);
@@ -82,6 +84,7 @@ public void testCreateReport() {
 		Assert.assertEquals("[domain1]", domains.toString());
 
 		m_manager.getHourlyReport(m_start, DOMAIN3, true);
+		domains = m_manager.getDomains(m_start);
 		Assert.assertEquals("[domain3, domain1]", domains.toString());
 
 		Map<String, String> reports = m_manager.getHourlyReports(m_start);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -39,7 +39,7 @@ public class TransactionAnalyzer extends AbstractMessageAnalyzer<TransactionRepo
 	public static final String ID = "transaction";
 
 	private Pair<Boolean, Long> checkForTruncatedMessage(Transaction t) {
-		Pair<Boolean, Long> pair = new Pair<Boolean, Long>(true, t.getDurationInMicros());
+		Pair<Boolean, Long> pair = new Pair<Boolean, Long>(true, t.getDurationInMillis());
 		List<Message> children = t.getChildren();
 		int size = children.size();
 
@@ -147,7 +147,7 @@ public void process(MessageTree tree) {
 				TransactionName name = type.findOrCreateName(root.getName());
 				String messageId = tree.getMessageId();
 
-				processTypeAndName(root, type, name, messageId, pair.getValue().doubleValue() / 1000d);
+				processTypeAndName(root, type, name, messageId, pair.getValue().doubleValue());
 			}
 
 			List<Message> children = root.getChildren();
@@ -190,7 +190,7 @@ protected void processTransaction(TransactionReport report, MessageTree tree, Tr
 			TransactionType transactionType = report.findOrCreateMachine(ip).findOrCreateType(type);
 			TransactionName transactionName = transactionType.findOrCreateName(name);
 			String messageId = tree.getMessageId();
-			processTypeAndName(t, transactionType, transactionName, messageId, t.getDurationInMillis() / 1000d);
+			processTypeAndName(t, transactionType, transactionName, messageId, t.getDurationInMillis());
 
 			List<Message> children = t.getChildren();
 

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -30,6 +30,7 @@
 import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
 import com.dianping.cat.message.spi.core.DefaultMessageHandler;
 import com.dianping.cat.message.spi.core.DefaultMessagePathBuilder;
+import com.dianping.cat.message.spi.core.DomainValidator;
 import com.dianping.cat.message.spi.core.MessageHandler;
 import com.dianping.cat.message.spi.core.MessagePathBuilder;
 import com.dianping.cat.message.spi.core.TcpSocketReceiver;
@@ -53,14 +54,15 @@ public List<Component> defineComponents() {
 		all.add(C(TaskManager.class).req(TaskDao.class));
 		all.add(C(ServerConfigManager.class));
 		all.add(C(ServerStatisticManager.class));
+		all.add(C(DomainValidator.class));
 		all.add(C(ContentFetcher.class, DefaultContentFetcher.class));
 
 		all.add(C(MessagePathBuilder.class, DefaultMessagePathBuilder.class));
 
 		all.add(C(MessageAnalyzerManager.class, DefaultMessageAnalyzerManager.class));
 
 		all.add(C(TcpSocketReceiver.class).req(ServerConfigManager.class).req(ServerStatisticManager.class)
-		      .req(MessageCodec.class, PlainTextMessageCodec.ID).req(MessageHandler.class));
+		      .req(MessageCodec.class, PlainTextMessageCodec.ID).req(MessageHandler.class).req(DomainValidator.class));
 
 		all.add(C(MessageHandler.class, DefaultMessageHandler.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/AlertType.java
Patch:
@@ -22,7 +22,9 @@ public enum AlertType {
 
 	Web("Web"),
 
-	Transaction("Transaction");
+	Transaction("Transaction"),
+
+	Storage("Storage");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/AlertManager.java
Patch:
@@ -100,6 +100,8 @@ private String generateTypeStr(String type) {
 			return "transaction告警";
 		case DataBase:
 			return "数据库告警";
+		case Storage:
+			return "存储告警";
 		}
 		return type;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatReportBuilder.java
Patch:
@@ -66,7 +66,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 
 	private HeartbeatReport queryDailyHeartbeatReport(String name, String domain, Date start, Date end) {
 		Set<String> domains = m_reportService.queryAllDomainNames(start, end, HeartbeatAnalyzer.ID);
-		HeartbeatDailyMerger merger = new HeartbeatDailyMerger(new HeartbeatReport(domain));
+		HeartbeatDailyMerger merger = new HeartbeatDailyMerger(new HeartbeatReport(domain), start.getTime());
 		long startTime = start.getTime();
 		long endTime = end.getTime();
 
@@ -82,7 +82,7 @@ private HeartbeatReport queryDailyHeartbeatReport(String name, String domain, Da
 		heartbeatReport.setStartTime(start);
 		heartbeatReport.setEndTime(new Date(end.getTime() - 1));
 		heartbeatReport.getDomainNames().addAll(domains);
-		
+
 		return heartbeatReport;
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatReportBuilder.java
Patch:
@@ -10,7 +10,6 @@
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.transform.DefaultNativeBuilder;
-import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.core.dal.DailyReport;
 import com.dianping.cat.core.dal.GraphDao;
 import com.dianping.cat.helper.TimeHelper;
@@ -66,7 +65,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 	}
 
 	private HeartbeatReport queryDailyHeartbeatReport(String name, String domain, Date start, Date end) {
-		Set<String> domains = m_reportService.queryAllDomainNames(start, end, TransactionAnalyzer.ID);
+		Set<String> domains = m_reportService.queryAllDomainNames(start, end, HeartbeatAnalyzer.ID);
 		HeartbeatDailyMerger merger = new HeartbeatDailyMerger(new HeartbeatReport(domain));
 		long startTime = start.getTime();
 		long endTime = end.getTime();

File: cat-home/src/main/java/com/dianping/cat/report/task/highload/HighLoadReportBuilder.java
Patch:
@@ -11,6 +11,7 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Constants;
+import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.Machine;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
@@ -144,7 +145,7 @@ private String getID() {
 	}
 
 	protected Set<String> queryDomains(Date startTime, Date endTime) {
-		return m_reportService.queryAllDomainNames(startTime, endTime, "transaction");
+		return m_reportService.queryAllDomainNames(startTime, endTime, TransactionAnalyzer.ID);
 	}
 
 	public class Heap {

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -32,6 +32,7 @@
 import com.dianping.cat.report.graph.metric.CachedMetricReportService;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphBuilder;
 import com.dianping.cat.report.page.network.nettopology.NetGraphBuilder;
+import com.dianping.cat.report.page.storage.StorageMergerHelper;
 import com.dianping.cat.report.page.transaction.TransactionMergeHelper;
 import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.service.ReportServiceManager;
@@ -176,7 +177,8 @@ public List<Component> defineComponents() {
 
 		all.add(C(TaskBuilder.class, CachedReportBuilder.ID, CachedReportBuilder.class).req(CachedReportTask.class));
 
-		all.add(C(TaskBuilder.class, StorageReportBuilder.ID, StorageReportBuilder.class));
+		all.add(C(TaskBuilder.class, StorageReportBuilder.ID, StorageReportBuilder.class).req(GraphDao.class,
+		      DailyGraphDao.class, ReportServiceManager.class, StorageMergerHelper.class));
 
 		all.add(C(TaskBuilder.class, CmdbInfoReloadBuilder.ID, CmdbInfoReloadBuilder.class).req(ProjectUpdateTask.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/page/storage/StorageSorter.java
Patch:
@@ -77,9 +77,8 @@ public int compare(Entry<String, Domain> o1, Entry<String, Domain> o2) {
 				}
 				if (Constants.ALL.equals(domain2)) {
 					return 1;
-				} else {
-					return sortValue(op1, op2);
 				}
+				return sortValue(op1, op2);
 			} else {
 				return sortDomain(domain1, domain2);
 			}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/storage/StorageDelegate.java
Patch:
@@ -27,7 +27,6 @@ public class StorageDelegate implements ReportDelegate<StorageReport> {
 
 	@Override
 	public void afterLoad(Map<String, StorageReport> reports) {
-		// TODO Auto-generated method stub
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/storage/StorageAnalyzer.java
Patch:
@@ -41,6 +41,7 @@ public class StorageAnalyzer extends AbstractMessageAnalyzer<StorageReport> impl
 	public void doCheckpoint(boolean atEnd) {
 		if (atEnd && !isLocalMode()) {
 			m_reportManager.storeHourlyReports(getStartTime(), StoragePolicy.FILE_AND_DB);
+			m_databaseParser.showErrorCon();
 		} else {
 			m_reportManager.storeHourlyReports(getStartTime(), StoragePolicy.FILE);
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -122,10 +122,10 @@ private void transalteHearbeat(StatusInfo info) {
 		}
 
 		Extension item = info.findOrCreateExtension("dal");
-		
+
 		for (Extension ex : info.getExtensions().values()) {
 			Map<String, String> propertis = ex.getDynamicAttributes();
-			
+
 			for (Entry<String, String> entry : propertis.entrySet()) {
 				try {
 					double value = Double.parseDouble(entry.getValue());
@@ -184,7 +184,7 @@ protected void process(MessageTree tree) {
 	private void processHeartbeat(HeartbeatReport report, Heartbeat heartbeat, MessageTree tree) {
 		String ip = tree.getIpAddress();
 		Machine machine = report.findOrCreateMachine(ip);
-		Period period = buildHeartBeatInfo(machine, heartbeat, tree.getMessage().getTimestamp());
+		Period period = buildHeartBeatInfo(machine, heartbeat, heartbeat.getTimestamp());
 
 		if (period != null) {
 			machine.getPeriods().add(period);

File: cat-consumer/src/test/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzerTest.java
Patch:
@@ -35,7 +35,6 @@ public void setUp() throws Exception {
 		super.setUp();
 
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm");
-
 		Date date = sdf.parse("20120101 00:00");
 
 		m_timestamp = date.getTime();
@@ -69,15 +68,15 @@ protected MessageTree generateMessageTree(int i) throws IOException {
 
 		DefaultTransaction t = new DefaultTransaction("A", "n" + i % 2, null);
 
-		Heartbeat heartbeat = newHeartbeat("heartbeat", "fail", m_timestamp, "0");
+		Heartbeat heartbeat = newHeartbeat("heartbeat", "fail", m_timestamp + i * 1000 * 60, "0");
 
 		t.addChild(heartbeat);
 
 		t.complete();
 		t.setDurationInMillis(i * 2);
 		t.setTimestamp(m_timestamp + 1000);
 		tree.setMessage(t);
-
+		
 		return tree;
 	}
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/heartbeat/HeartbeatReportMergerTest.java
Patch:
@@ -10,8 +10,8 @@
 public class HeartbeatReportMergerTest {
 	@Test
 	public void testHaertbeatReportMerge() throws Exception {
-		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer.xml"), "utf-8");
-		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer.xml"), "utf-8");
+		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer_old.xml"), "utf-8");
+		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer_old.xml"), "utf-8");
 		HeartbeatReport reportOld = DefaultSaxParser.parse(oldXml);
 		HeartbeatReport reportNew = DefaultSaxParser.parse(newXml);
 		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("heartbeat_analyzer_merge.xml"), "utf-8");

File: cat-consumer/src/test/java/com/dianping/cat/consumer/cross/CrossInfoTest.java
Patch:
@@ -47,7 +47,7 @@ public void testParsePigeonClientTransaction() throws Exception {
 		CrossInfo info = analyzer.parseCorssTransaction(t, tree);
 
 		Assert.assertEquals(info.getLocalAddress(), "192.168.0.1");
-		Assert.assertEquals(info.getRemoteAddress(), "Unknown");
+		Assert.assertEquals(info.getRemoteAddress(), null);
 
 		Message message = new DefaultEvent("PigeonCall.server", "10.1.1.1", null);
 		Message messageApp = new DefaultEvent("PigeonCall.app", "myDomain", null);
@@ -74,7 +74,7 @@ public void testParsePigeonServerTransaction() throws Exception {
 		MessageTree tree = buildMockMessageTree();
 		CrossInfo info = analyzer.parseCorssTransaction(t, tree);
 
-		Assert.assertEquals(info,null);
+		Assert.assertEquals(info.validate(), false);
 
 		Message message = new DefaultEvent("PigeonService.client", "192.168.7.71", null);
 		Message messageApp = new DefaultEvent("PigeonService.app", "myDomain", null);

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -50,7 +50,7 @@
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.service.app.AppDataService;
 import com.dianping.cat.report.service.app.AppSpeedService;
-import com.dianping.cat.report.task.alert.AlertInfo;
+import com.dianping.cat.report.alert.AlertInfo;
 import com.dianping.cat.report.task.cmdb.ProjectUpdateTask;
 import com.dianping.cat.service.HostinfoService;
 import com.dianping.cat.service.IpService;

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -40,8 +40,8 @@
 import com.dianping.cat.report.task.DefaultTaskConsumer;
 import com.dianping.cat.report.task.ReportFacade;
 import com.dianping.cat.report.task.TaskBuilder;
-import com.dianping.cat.report.task.alert.exception.AlertReportBuilder;
-import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
+import com.dianping.cat.report.alert.exception.AlertReportBuilder;
+import com.dianping.cat.report.alert.sender.sender.SenderManager;
 import com.dianping.cat.report.task.bug.BugReportBuilder;
 import com.dianping.cat.report.task.cached.CachedReportBuilder;
 import com.dianping.cat.report.task.cached.CachedReportTask;

File: cat-home/src/main/java/com/dianping/cat/report/alert/AlarmRule.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/report/alert/AlertInfo.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/report/alert/AlertLevel.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 public class AlertLevel {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/AlertResultEntity.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.Date;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/AlertType.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 public enum AlertType {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/BaseAlert.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.Date;
 import java.util.List;
@@ -20,8 +20,8 @@
 import com.dianping.cat.home.rule.entity.Config;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
-import com.dianping.cat.report.task.alert.sender.AlertManager;
+import com.dianping.cat.report.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.sender.AlertManager;
 import com.dianping.cat.system.config.BaseRuleConfigManager;
 
 public abstract class BaseAlert implements Task, LogEnabled {

File: cat-home/src/main/java/com/dianping/cat/report/alert/DataChecker.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/DefaultDataChecker.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/report/alert/MetricReportGroup.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.Map;
 import java.util.Map.Entry;

File: cat-home/src/main/java/com/dianping/cat/report/alert/MetricType.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 public enum MetricType {
 	COUNT("COUNT"), AVG("AVG"), SUM("SUM");

File: cat-home/src/main/java/com/dianping/cat/report/alert/RemoteMetricReportService.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -32,7 +32,7 @@
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.page.model.metric.MetricReportMerger;
 import com.dianping.cat.report.page.model.spi.internal.ModelServiceWithCalSupport;
-import com.dianping.cat.report.task.alert.MetricReportGroup.State;
+import com.dianping.cat.report.alert.MetricReportGroup.State;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/RuleFTLDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.io.StringWriter;
 import java.util.HashMap;

File: cat-home/src/main/java/com/dianping/cat/report/alert/RuleType.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: cat-home/src/main/java/com/dianping/cat/report/alert/database/DatabaseAlert.java
Patch:
@@ -1,12 +1,12 @@
-package com.dianping.cat.report.task.alert.database;
+package com.dianping.cat.report.alert.database;
 
 import java.util.Map;
 
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.BaseAlert;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.BaseAlert;
 import com.dianping.cat.system.config.BaseRuleConfigManager;
 import com.dianping.cat.system.config.DatabaseRuleConfigManager;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/exception/AlertExceptionBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.exception;
+package com.dianping.cat.report.alert.exception;
 
 import java.util.ArrayList;
 import java.util.LinkedHashMap;
@@ -13,7 +13,7 @@
 import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.home.exception.entity.ExceptionLimit;
 import com.dianping.cat.report.page.dependency.TopMetric.Item;
-import com.dianping.cat.report.task.alert.AlertLevel;
+import com.dianping.cat.report.alert.AlertLevel;
 import com.dianping.cat.system.config.ExceptionRuleConfigManager;
 
 public class AlertExceptionBuilder {

File: cat-home/src/main/java/com/dianping/cat/report/alert/exception/AlertReportBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.exception;
+package com.dianping.cat.report.alert.exception;
 
 import java.util.Date;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/exception/AlertReportMerger.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.exception;
+package com.dianping.cat.report.alert.exception;
 
 import com.dianping.cat.home.alert.report.entity.AlertReport;
 import com.dianping.cat.home.alert.report.entity.Domain;

File: cat-home/src/main/java/com/dianping/cat/report/alert/exception/TopReportVisitor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.exception;
+package com.dianping.cat.report.alert.exception;
 
 import org.unidal.lookup.annotation.Inject;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/network/NetworkAlert.java
Patch:
@@ -1,12 +1,12 @@
-package com.dianping.cat.report.task.alert.network;
+package com.dianping.cat.report.alert.network;
 
 import java.util.Map;
 
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.BaseAlert;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.BaseAlert;
 import com.dianping.cat.system.config.BaseRuleConfigManager;
 import com.dianping.cat.system.config.NetworkRuleConfigManager;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/AlertChannel.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender;
+package com.dianping.cat.report.alert.sender;
 
 public enum AlertChannel {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/AlertEntity.java
Patch:
@@ -1,10 +1,10 @@
-package com.dianping.cat.report.task.alert.sender;
+package com.dianping.cat.report.alert.sender;
 
 import java.util.Date;
 import java.util.HashMap;
 import java.util.Map;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class AlertEntity {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/AlertMessageEntity.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender;
+package com.dianping.cat.report.alert.sender;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/AppDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.io.StringWriter;
 import java.util.HashMap;
@@ -8,8 +8,8 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/DatabaseDecorator.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 public class DatabaseDecorator extends Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/Decorator.java
Patch:
@@ -1,9 +1,9 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 public abstract class Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/DecoratorManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -8,7 +8,7 @@
 import org.unidal.lookup.ContainerHolder;
 import org.unidal.tuple.Pair;
 
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 public class DecoratorManager extends ContainerHolder implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.io.StringWriter;
 import java.text.DateFormat;
@@ -11,8 +11,8 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/HeartbeatDecorator.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 public class HeartbeatDecorator extends Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/NetworkDecorator.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 public class NetworkDecorator extends Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/ProjectDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import org.unidal.lookup.annotation.Inject;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/SystemDecorator.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 public class SystemDecorator extends Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/ThirdpartyDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.io.StringWriter;
 import java.text.DateFormat;
@@ -10,8 +10,8 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/TransactionDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.io.StringWriter;
 import java.text.DateFormat;
@@ -10,8 +10,8 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/decorator/WebDecorator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.decorator;
+package com.dianping.cat.report.alert.sender.decorator;
 
 import java.io.StringWriter;
 import java.util.HashMap;
@@ -8,8 +8,8 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/AppContactor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.List;
 import java.util.Map;
@@ -8,7 +8,7 @@
 
 import com.dianping.cat.config.app.AppConfigManager;
 import com.dianping.cat.configuration.app.entity.Command;
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class AppContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/BusinessContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class BusinessContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/Contactor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/ContactorManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.HashMap;
 import java.util.List;
@@ -8,7 +8,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.ContainerHolder;
 
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertChannel;
 
 public class ContactorManager extends ContainerHolder implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/DatabaseContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class DatabaseContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/DefaultContactor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/ExceptionContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class ExceptionContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/FrontEndExceptionContactor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
@@ -10,7 +10,7 @@
 import com.dianping.cat.config.aggregation.AggregationConfigManager;
 import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.home.alert.config.entity.Receiver;
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 import com.dianping.cat.system.config.AlertConfigManager;
 
 public class FrontEndExceptionContactor extends DefaultContactor implements Contactor {

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/HeartbeatContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class HeartbeatContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/NetworkContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class NetworkContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/ProjectContactor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/SystemContactor.java
Patch:
@@ -1,8 +1,8 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.List;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class SystemContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/ThirdpartyContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class ThirdpartyContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/TransactionContactor.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class TransactionContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/receiver/WebContactor.java
Patch:
@@ -1,12 +1,12 @@
-package com.dianping.cat.report.task.alert.sender.receiver;
+package com.dianping.cat.report.alert.sender.receiver;
 
 import java.util.List;
 
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.configuration.url.pattern.entity.PatternItem;
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class WebContactor extends ProjectContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/sender/AbstractSender.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.sender;
+package com.dianping.cat.report.alert.sender.sender;
 
 import java.io.IOException;
 import java.io.InputStream;

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/sender/MailSender.java
Patch:
@@ -1,13 +1,13 @@
-package com.dianping.cat.report.task.alert.sender.sender;
+package com.dianping.cat.report.alert.sender.sender;
 
 import java.net.URLEncoder;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.List;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
 
 public class MailSender extends AbstractSender {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/sender/SenderManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.sender;
+package com.dianping.cat.report.alert.sender.sender;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -9,8 +9,8 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Event;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
 
 public class SenderManager extends ContainerHolder implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/sender/SmsSender.java
Patch:
@@ -1,11 +1,11 @@
-package com.dianping.cat.report.task.alert.sender.sender;
+package com.dianping.cat.report.alert.sender.sender;
 
 import java.net.URLEncoder;
 import java.util.List;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
 
 public class SmsSender extends AbstractSender {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/sender/WeixinSender.java
Patch:
@@ -1,11 +1,11 @@
-package com.dianping.cat.report.task.alert.sender.sender;
+package com.dianping.cat.report.alert.sender.sender;
 
 import java.net.URLEncoder;
 import java.util.List;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
 
 public class WeixinSender extends AbstractSender {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/spliter/MailSpliter.java
Patch:
@@ -1,6 +1,6 @@
-package com.dianping.cat.report.task.alert.sender.spliter;
+package com.dianping.cat.report.alert.sender.spliter;
 
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertChannel;
 
 public class MailSpliter implements Spliter {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/spliter/SmsSpliter.java
Patch:
@@ -1,8 +1,8 @@
-package com.dianping.cat.report.task.alert.sender.spliter;
+package com.dianping.cat.report.alert.sender.spliter;
 
 import java.util.regex.Pattern;
 
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertChannel;
 
 public class SmsSpliter implements Spliter {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/spliter/Spliter.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.spliter;
+package com.dianping.cat.report.alert.sender.spliter;
 
 public interface Spliter {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/spliter/SpliterManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.sender.spliter;
+package com.dianping.cat.report.alert.sender.spliter;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -7,7 +7,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.ContainerHolder;
 
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertChannel;
 
 public class SpliterManager extends ContainerHolder implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/sender/spliter/WeixinSpliter.java
Patch:
@@ -1,8 +1,8 @@
-package com.dianping.cat.report.task.alert.sender.spliter;
+package com.dianping.cat.report.alert.sender.spliter;
 
 import java.util.regex.Pattern;
 
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertChannel;
 
 public class WeixinSpliter implements Spliter {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/AlertSummaryContentGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import java.util.ArrayList;
 import java.util.Date;

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/AlertSummaryGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -20,7 +20,7 @@
 import com.dianping.cat.home.dependency.graph.entity.TopologyEdge;
 import com.dianping.cat.home.dependency.graph.entity.TopologyGraph;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphManager;
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class AlertSummaryGenerator {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/AlertSummaryManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/AlertSummaryVisitor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
@@ -13,7 +13,7 @@
 import com.dianping.cat.home.alert.summary.entity.AlertSummary;
 import com.dianping.cat.home.alert.summary.entity.Category;
 import com.dianping.cat.home.alert.summary.transform.BaseVisitor;
-import com.dianping.cat.report.task.alert.AlertType;
+import com.dianping.cat.report.alert.AlertType;
 
 public class AlertSummaryVisitor extends BaseVisitor {
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/AlterationSummaryContentGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import java.util.Date;
 import java.util.HashMap;

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/FailureSummaryContentGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import java.util.Calendar;
 import java.util.Date;

File: cat-home/src/main/java/com/dianping/cat/report/alert/summary/SummaryContentGenerator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.summary;
+package com.dianping.cat.report.alert.summary;
 
 import java.io.StringWriter;
 import java.util.Date;

File: cat-home/src/main/java/com/dianping/cat/report/alert/system/SystemAlert.java
Patch:
@@ -1,12 +1,12 @@
-package com.dianping.cat.report.task.alert.system;
+package com.dianping.cat.report.alert.system;
 
 import java.util.Map;
 
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.BaseAlert;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.BaseAlert;
 import com.dianping.cat.system.config.BaseRuleConfigManager;
 import com.dianping.cat.system.config.SystemRuleConfigManager;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/thirdParty/HttpConnector.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.thirdParty;
+package com.dianping.cat.report.alert.thirdParty;
 
 import java.io.BufferedReader;
 import java.io.IOException;

File: cat-home/src/main/java/com/dianping/cat/report/alert/thirdParty/ThirdPartyAlertBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.thirdParty;
+package com.dianping.cat.report.alert.thirdParty;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/alert/thirdParty/ThirdPartyAlertEntity.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert.thirdParty;
+package com.dianping.cat.report.alert.thirdParty;
 
 public class ThirdPartyAlertEntity {
 

File: cat-home/src/main/java/com/dianping/cat/report/graph/metric/AbstractGraphCreator.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.service.BaselineService;
-import com.dianping.cat.report.task.alert.AlertInfo;
+import com.dianping.cat.report.alert.AlertInfo;
 
 public abstract class AbstractGraphCreator implements LogEnabled {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/graph/metric/impl/MetricDataFetcherImpl.java
Patch:
@@ -8,7 +8,7 @@
 import com.dianping.cat.consumer.metric.model.entity.Segment;
 import com.dianping.cat.consumer.metric.model.transform.BaseVisitor;
 import com.dianping.cat.report.graph.metric.MetricDataFetcher;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 
 public class MetricDataFetcherImpl implements MetricDataFetcher {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Handler.java
Patch:
@@ -28,9 +28,9 @@
 import com.dianping.cat.home.dal.report.AlertDao;
 import com.dianping.cat.home.dal.report.AlertEntity;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
-import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.sender.SenderManager;
 
 public class Handler implements PageHandler<Context> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/database/GraphCreator.java
Patch:
@@ -11,8 +11,8 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.metric.AbstractGraphCreator;
-import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
+import com.dianping.cat.report.alert.MetricType;
 
 public class GraphCreator extends AbstractGraphCreator {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/GraphCreator.java
Patch:
@@ -23,8 +23,8 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.metric.AbstractGraphCreator;
-import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
+import com.dianping.cat.report.alert.MetricType;
 import com.dianping.cat.service.ProjectService;
 
 public class GraphCreator extends AbstractGraphCreator {

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -20,7 +20,7 @@
 import com.dianping.cat.message.internal.DefaultMetric;
 import com.dianping.cat.message.internal.DefaultTransaction;
 import com.dianping.cat.message.spi.MessageTree;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 
 public class Handler implements PageHandler<Context> {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/GraphCreator.java
Patch:
@@ -14,8 +14,8 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.graph.LineChart;
 import com.dianping.cat.report.graph.metric.AbstractGraphCreator;
-import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
+import com.dianping.cat.report.alert.MetricType;
 
 public class GraphCreator extends AbstractGraphCreator {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphBuilder.java
Patch:
@@ -14,7 +14,7 @@
 import com.dianping.cat.home.network.entity.NetGraphSet;
 import com.dianping.cat.home.network.entity.NetTopology;
 import com.dianping.cat.home.network.entity.Switch;
-import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
+import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
 
 public class NetGraphBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphManager.java
Patch:
@@ -30,9 +30,9 @@
 import com.dianping.cat.home.network.entity.NetTopology;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.service.ReportServiceManager;
-import com.dianping.cat.report.task.alert.AlertInfo;
-import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
-import com.dianping.cat.report.task.alert.RemoteMetricReportService;
+import com.dianping.cat.report.alert.AlertInfo;
+import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
+import com.dianping.cat.report.alert.RemoteMetricReportService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.system.config.NetGraphConfigManager;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Handler.java
Patch:
@@ -45,7 +45,7 @@
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.service.ReportServiceManager;
-import com.dianping.cat.report.task.alert.summary.AlertSummaryExecutor;
+import com.dianping.cat.report.alert.summary.AlertSummaryExecutor;
 import com.dianping.cat.report.task.heavy.HeavyReportMerger.ServiceComparator;
 import com.dianping.cat.report.task.heavy.HeavyReportMerger.UrlComparator;
 import com.dianping.cat.report.task.jar.JarReportBuilder;

File: cat-home/src/main/java/com/dianping/cat/report/service/BaselineService.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.Date;
 
 import com.dianping.cat.home.dal.report.Baseline;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 
 public interface BaselineService {
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/AlertReportService.java
Patch:
@@ -28,7 +28,7 @@
 import com.dianping.cat.home.dal.report.WeeklyReportContent;
 import com.dianping.cat.home.dal.report.WeeklyReportContentEntity;
 import com.dianping.cat.report.service.AbstractReportService;
-import com.dianping.cat.report.task.alert.exception.AlertReportMerger;
+import com.dianping.cat.report.alert.exception.AlertReportMerger;
 
 public class AlertReportService extends AbstractReportService<AlertReport> {
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DefaultBaselineService.java
Patch:
@@ -21,7 +21,7 @@
 import com.dianping.cat.home.dal.report.BaselineEntity;
 import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.task.TaskHelper;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 import com.dianping.cat.service.ModelPeriod;
 
 public class DefaultBaselineService implements BaselineService {

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.task.TaskBuilder;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 
 public class MetricBaselineReportBuilder implements TaskBuilder, LogEnabled {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricPointParser.java
Patch:
@@ -6,7 +6,7 @@
 
 import com.dianping.cat.consumer.metric.model.entity.MetricItem;
 import com.dianping.cat.consumer.metric.model.entity.Segment;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 
 public class MetricPointParser {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/network/NetTopologyReportBuilder.java
Patch:
@@ -23,7 +23,7 @@
 import com.dianping.cat.report.page.network.nettopology.NetGraphBuilder;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.task.TaskBuilder;
-import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
+import com.dianping.cat.report.alert.AlertInfo.AlertMetric;
 import com.dianping.cat.system.config.NetGraphConfigManager;
 
 public class NetTopologyReportBuilder implements TaskBuilder {

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/AppDataComparisonNotifier.java
Patch:
@@ -24,9 +24,9 @@
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.service.app.AppDataService;
 import com.dianping.cat.report.service.app.CommandQueryEntity;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
-import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.sender.SenderManager;
 import com.dianping.cat.report.task.notify.render.AppDataComparisonRender;
 
 public class AppDataComparisonNotifier {

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/NotifyTaskBuilder.java
Patch:
@@ -19,9 +19,9 @@
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.task.TaskBuilder;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
-import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.sender.SenderManager;
 import com.dianping.cat.service.ProjectService;
 
 public class NotifyTaskBuilder implements TaskBuilder {

File: cat-home/src/main/java/com/dianping/cat/system/config/AlertPolicyManager.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.home.alert.policy.entity.Level;
 import com.dianping.cat.home.alert.policy.entity.Type;
 import com.dianping.cat.home.alert.policy.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertChannel;
 
 public class AlertPolicyManager implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/system/config/AppRuleConfigManager.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.home.rule.entity.Rule;
 import com.dianping.cat.home.rule.entity.SubCondition;
 import com.dianping.cat.home.rule.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.alert.AlertLevel;
+import com.dianping.cat.report.alert.AlertLevel;
 
 public class AppRuleConfigManager extends BaseRuleConfigManager implements Initializable {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -28,9 +28,9 @@
 import com.dianping.cat.home.rule.transform.DefaultJsonParser;
 import com.dianping.cat.home.rule.transform.DefaultSaxParser;
 import com.dianping.cat.message.Event;
-import com.dianping.cat.report.task.alert.AlarmRule;
-import com.dianping.cat.report.task.alert.MetricType;
-import com.dianping.cat.report.task.alert.RuleType;
+import com.dianping.cat.report.alert.AlarmRule;
+import com.dianping.cat.report.alert.MetricType;
+import com.dianping.cat.report.alert.RuleType;
 
 public abstract class BaseRuleConfigManager {
 

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -21,7 +21,7 @@
 import com.dianping.cat.home.rule.entity.SubCondition;
 import com.dianping.cat.home.rule.transform.DefaultSaxParser;
 import com.dianping.cat.message.Event;
-import com.dianping.cat.report.task.alert.MetricType;
+import com.dianping.cat.report.alert.MetricType;
 
 public class BusinessRuleConfigManager extends BaseRuleConfigManager implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/BaseProcesser.java
Patch:
@@ -12,7 +12,7 @@
 import com.dianping.cat.home.rule.entity.MetricItem;
 import com.dianping.cat.home.rule.entity.Rule;
 import com.dianping.cat.home.rule.transform.DefaultJsonBuilder;
-import com.dianping.cat.report.task.alert.RuleFTLDecorator;
+import com.dianping.cat.report.alert.RuleFTLDecorator;
 import com.dianping.cat.system.config.BaseRuleConfigManager;
 import com.dianping.cat.system.page.config.Model;
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/AlertReportBuilderTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -7,7 +7,7 @@
 
 import com.dianping.cat.home.alert.report.entity.AlertReport;
 import com.dianping.cat.home.alert.report.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.alert.exception.AlertReportMerger;
+import com.dianping.cat.report.alert.exception.AlertReportMerger;
 
 public class AlertReportBuilderTest  extends ComponentTestCase {
 	

File: cat-home/src/test/java/com/dianping/cat/report/alert/AlertTest.java
Patch:
@@ -7,8 +7,8 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.configuration.ServerConfigManager;
-import com.dianping.cat.report.task.alert.heartbeat.HeartbeatAlert;
-import com.dianping.cat.report.task.alert.transaction.TransactionAlert;
+import com.dianping.cat.report.alert.heartbeat.HeartbeatAlert;
+import com.dianping.cat.report.alert.transaction.TransactionAlert;
 
 public class AlertTest extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/ExtractDataTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import junit.framework.Assert;
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/MetricIdAndRuleMappingTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.io.IOException;
 import java.util.Arrays;

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -16,9 +16,9 @@
 import com.dianping.cat.home.rule.entity.MonitorRules;
 import com.dianping.cat.home.rule.entity.Rule;
 import com.dianping.cat.home.rule.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.alert.AlertResultEntity;
-import com.dianping.cat.report.task.alert.DataChecker;
-import com.dianping.cat.report.task.alert.DefaultDataChecker;
+import com.dianping.cat.report.alert.AlertResultEntity;
+import com.dianping.cat.report.alert.DataChecker;
+import com.dianping.cat.report.alert.DefaultDataChecker;
 
 public class RuleConfigTest {
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/SuspendTest.java
Patch:
@@ -8,9 +8,9 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-import com.dianping.cat.report.task.alert.AlertType;
-import com.dianping.cat.report.task.alert.sender.AlertEntity;
-import com.dianping.cat.report.task.alert.sender.AlertManager;
+import com.dianping.cat.report.alert.AlertType;
+import com.dianping.cat.report.alert.sender.AlertEntity;
+import com.dianping.cat.report.alert.sender.AlertManager;
 
 public class SuspendTest extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/TopReportVisitorTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.alert;
+package com.dianping.cat.report.alert;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -14,7 +14,7 @@
 import com.dianping.cat.home.alert.report.entity.AlertReport;
 import com.dianping.cat.home.exception.entity.ExceptionExclude;
 import com.dianping.cat.home.exception.entity.ExceptionLimit;
-import com.dianping.cat.report.task.alert.exception.TopReportVisitor;
+import com.dianping.cat.report.alert.exception.TopReportVisitor;
 import com.dianping.cat.system.config.ExceptionRuleConfigManager;
 
 public class TopReportVisitorTest extends ComponentTestCase {

File: cat-home/src/test/java/com/dianping/cat/report/alert/sender/SenderManagerTest.java
Patch:
@@ -7,9 +7,9 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-import com.dianping.cat.report.task.alert.sender.AlertChannel;
-import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
-import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
+import com.dianping.cat.report.alert.sender.AlertChannel;
+import com.dianping.cat.report.alert.sender.AlertMessageEntity;
+import com.dianping.cat.report.alert.sender.sender.SenderManager;
 
 public class SenderManagerTest extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -16,9 +16,9 @@
 import com.dianping.cat.home.rule.entity.MonitorRules;
 import com.dianping.cat.home.rule.entity.Rule;
 import com.dianping.cat.home.rule.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.alert.AlertResultEntity;
-import com.dianping.cat.report.task.alert.DataChecker;
-import com.dianping.cat.report.task.alert.DefaultDataChecker;
+import com.dianping.cat.report.alert.AlertResultEntity;
+import com.dianping.cat.report.alert.DataChecker;
+import com.dianping.cat.report.alert.DefaultDataChecker;
 
 public class AlertConfigTest {
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -121,12 +121,14 @@ private void transalteHearbeat(StatusInfo info) {
 			}
 		}
 
+		Extension item = info.findOrCreateExtension("dal");
+		
 		for (Extension ex : info.getExtensions().values()) {
 			Map<String, String> propertis = ex.getDynamicAttributes();
+			
 			for (Entry<String, String> entry : propertis.entrySet()) {
 				try {
 					double value = Double.parseDouble(entry.getValue());
-					Extension item = info.findOrCreateExtension("dal");
 
 					item.findOrCreateExtensionDetail(entry.getKey()).setValue(value);
 				} catch (Exception e) {

File: cat-home/src/test/java/com/dianping/cat/demo/TestCrashLog.java
Patch:
@@ -15,7 +15,7 @@ public class TestCrashLog {
 	public void test() throws InterruptedException {
 		while (true) {
 			for (int i = 0; i < 10; i++) {
-				Transaction t = Cat.newTransaction("AndroidCrashLog#123", "crashLog#123");
+				Transaction t = Cat.newTransaction("AndroidCrashLog", "crashLog");
 
 				Cat.logEvent("Error", "AndroidCrashLogTest1", "ERROR", "Crash log detail stack info A !");
 				Cat.logEvent("Error", "AndroidCrashLogTest2", "ERROR", "Crash log detail stack info B !");

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/HostInfo.java
Patch:
@@ -187,12 +187,11 @@ public void visitLocal(Local local) {
 
 	@Override
 	public void visitRemote(Remote remote) {
-		// String remoteIp = remote.getId();
 		String id = remote.getId();
 		String remoteIp = remote.getIp();
 
 		if (remoteIp == null) {
-			remoteIp = remote.getId();
+			remoteIp = id;
 
 			int index = remoteIp.indexOf(":Caller");
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/ProjectInfo.java
Patch:
@@ -181,7 +181,7 @@ public void visitRemote(Remote remote) {
 			addServiceProject(remoteIp, app, remote.getType());
 		} else if (role != null && role.endsWith("Server")) {
 			addCallProject(remoteIp, app, remote.getType());
-		} else if (role != null && role.endsWith("Caller") && remoteIp.endsWith(":Caller")) {
+		} else if (role != null && role.endsWith("Caller")) {
 			addCallerProject(remoteIp, app, remote.getType());
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -65,8 +65,6 @@ public static String getCatHome() {
 	}
 
 	public static Cat getInstance() {
-		checkAndInitialize();
-		
 		return s_instance;
 	}
 

File: cat-client/src/main/java/com/dianping/cat/configuration/DefaultClientConfigManager.java
Patch:
@@ -147,7 +147,6 @@ public void initialize(File configFile) throws Exception {
 		if (clientConfig == null) {
 			clientConfig = loadConfigFromXml();
 		}
-
 		// merge the two configures together to make it effected
 		if (globalConfig != null && clientConfig != null) {
 			globalConfig.accept(new ClientConfigMerger(clientConfig));

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/transaction/TransactionAlert.java
Patch:
@@ -150,6 +150,7 @@ private void processRule(Rule rule) {
 		int minute = calAlreadyMinute();
 
 		List<AlertResultEntity> alertResults = computeAlertForRule(domain, type, name, rule.getConfigs(), minute);
+		
 		for (AlertResultEntity alertResult : alertResults) {
 			AlertEntity entity = new AlertEntity();
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/SmsSender.java
Patch:
@@ -37,8 +37,8 @@ public boolean send(AlertMessageEntity message) {
 		return result;
 	}
 
-	private boolean sendSms(AlertMessageEntity message, String receiver,
-	      com.dianping.cat.home.sender.entity.Sender sender) {
+    private boolean sendSms(AlertMessageEntity message, String receiver,
+        com.dianping.cat.home.sender.entity.Sender sender) {
 		String filterContent = message.getContent().replaceAll("(<a href.*(?=</a>)</a>)|(\n)", "");
 		String content = message.getTitle() + " " + filterContent;
 		String urlPrefix = sender.getUrl();
@@ -51,6 +51,6 @@ private boolean sendSms(AlertMessageEntity message, String receiver,
 			Cat.logError(e);
 		}
 
-		return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
+        return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/WeixinSender.java
Patch:
@@ -55,6 +55,6 @@ private boolean sendWeixin(AlertMessageEntity message, String receiver,
 			Cat.logError(e);
 		}
 
-		return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
+        return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/report/alert/sender/SenderManagerTest.java
Patch:
@@ -1,10 +1,12 @@
 package com.dianping.cat.report.alert.sender;
 
+import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
 
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
+import org.unidal.webres.helper.Files;
 
 import com.dianping.cat.report.task.alert.sender.AlertChannel;
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
@@ -18,7 +20,7 @@ public void test() throws Exception {
 		List<String> receivers = new ArrayList<String>();
 
 		receivers.add("yong.you@dianping.com");
-		AlertMessageEntity message = new AlertMessageEntity("Test", "test", "test", "content", receivers);
+        AlertMessageEntity message = new AlertMessageEntity("Test", "test", "test", "content", receivers);
 		boolean result = manager.sendAlert(AlertChannel.MAIL, message);
 
 		System.out.println(result);

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -56,7 +56,7 @@ private boolean checkWritable(ChannelFuture channel) {
 		boolean isWriteable = false;
 
 		if (channel != null && channel.channel().isOpen()) {
-			if (channel.channel().isActive()) {
+			if (channel.channel().isWritable()) {
 				isWriteable = true;
 			} else {
 				int count = m_attempts.incrementAndGet();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/MailSender.java
Patch:
@@ -51,12 +51,12 @@ private boolean sendEmail(AlertMessageEntity message, String receiver,
 			urlPars = urlPars.replace("${receiver}", URLEncoder.encode(receiver, "utf-8"))
 			      .replace("${title}", URLEncoder.encode(title, "utf-8"))
 			      .replace("${content}", URLEncoder.encode(content, "utf-8"))
-	      		.replace("${time}", URLEncoder.encode(time, "utf-8"));
+			      .replace("${time}", URLEncoder.encode(time, "utf-8"));
 
 		} catch (Exception e) {
 			Cat.logError(e);
 		}
 
-		return httpGetSend(sender.getSuccessCode(), urlPrefix, urlPars);
+		return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/SmsSender.java
Patch:
@@ -37,7 +37,8 @@ public boolean send(AlertMessageEntity message) {
 		return result;
 	}
 
-	private boolean sendSms(AlertMessageEntity message, String receiver, com.dianping.cat.home.sender.entity.Sender sender) {
+	private boolean sendSms(AlertMessageEntity message, String receiver,
+	      com.dianping.cat.home.sender.entity.Sender sender) {
 		String filterContent = message.getContent().replaceAll("(<a href.*(?=</a>)</a>)|(\n)", "");
 		String content = message.getTitle() + " " + filterContent;
 		String urlPrefix = sender.getUrl();
@@ -50,6 +51,6 @@ private boolean sendSms(AlertMessageEntity message, String receiver, com.dianpin
 			Cat.logError(e);
 		}
 
-		return httpGetSend(sender.getSuccessCode(), urlPrefix, urlPars);
+		return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/WeixinSender.java
Patch:
@@ -55,6 +55,6 @@ private boolean sendWeixin(AlertMessageEntity message, String receiver,
 			Cat.logError(e);
 		}
 
-		return httpGetSend(sender.getSuccessCode(), urlPrefix, urlPars);
+		return httpSend(sender.getSuccessCode(), sender.getType(), urlPrefix, urlPars);
 	}
 }

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -210,7 +210,7 @@ public static void logMetricForSum(String name, double value) {
 	 *           the quantity to be accumulated
 	 */
 	public static void logMetricForSum(String name, double sum, int quantity) {
-		logMetricInternal(name, "S,C", String.format("%.2f,%s", sum, quantity));
+		logMetricInternal(name, "S,C", String.format("%s,%.2f", quantity, sum));
 	}
 
 	private static void logMetricInternal(String name, String status, String keyValuePairs) {

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -210,7 +210,7 @@ public static void logMetricForSum(String name, double value) {
 	 *           the quantity to be accumulated
 	 */
 	public static void logMetricForSum(String name, double sum, int quantity) {
-		logMetricInternal(name, "S,C", String.format("%.2f,%s", sum, quantity));
+		logMetricInternal(name, "S,C", String.format("%s,%.2f", quantity, sum));
 	}
 
 	private static void logMetricInternal(String name, String status, String keyValuePairs) {

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -210,7 +210,7 @@ public static void logMetricForSum(String name, double value) {
 	 *           the quantity to be accumulated
 	 */
 	public static void logMetricForSum(String name, double sum, int quantity) {
-		logMetricInternal(name, "S,C", String.format("%s,%.2f", sum, quantity));
+		logMetricInternal(name, "S,C", String.format("%s,%.2f", quantity, sum));
 	}
 
 	private static void logMetricInternal(String name, String status, String keyValuePairs) {

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -210,7 +210,7 @@ public static void logMetricForSum(String name, double value) {
 	 *           the quantity to be accumulated
 	 */
 	public static void logMetricForSum(String name, double sum, int quantity) {
-		logMetricInternal(name, "S,C", String.format("%.2f,%s", sum, quantity));
+		logMetricInternal(name, "S,C", String.format("%s,%.2f", sum, quantity));
 	}
 
 	private static void logMetricInternal(String name, String status, String keyValuePairs) {

File: cat-home/src/main/java/com/dianping/cat/report/service/BaselineService.java
Patch:
@@ -14,4 +14,7 @@ public interface BaselineService {
 	public double[] queryDailyBaseline(String reportName, String key, Date reportPeriod);
 
 	public double[] queryHourlyBaseline(String reportName, String key, Date reportPeriod);
+
+	public boolean hasDailyBaseline(String reportName, String key, Date reportPeriod);
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -103,9 +103,9 @@ protected void buildDailyReportInternal(Map<String, MetricReport> reports, Strin
 			m_baselineService.insertBaseline(baseline);
 
 			Date tomorrow = new Date(reportPeriod.getTime() + TimeHelper.ONE_DAY);
-			double[] baseLine = m_baselineService.queryDailyBaseline(reportName, key, tomorrow);
+			boolean has = m_baselineService.hasDailyBaseline(reportName, key, tomorrow);
 
-			if (baseLine == null) {
+			if (!has) {
 				Baseline tomorrowBaseline = new Baseline();
 
 				tomorrowBaseline.setDataInDoubleArray(result);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DefaultBaselineService.java
Patch:
@@ -80,11 +80,11 @@ public double[] queryDailyBaseline(String reportName, String key, Date reportPer
 
 		if (baseline == null) {
 			try {
-				baseline = m_baselineDao
-				      .findByReportNameKeyTime(reportPeriod, reportName, key, BaselineEntity.READSET_FULL);
+				baseline = m_baselineDao.findByReportNameKeyTime(reportPeriod, reportName, key, BaselineEntity.READSET_FULL);
 
 				m_baselines.put(baselineKey, baseline);
 			} catch (DalNotFoundException e) {
+				return null;
 			} catch (Exception e) {
 				Cat.logError(e);
 				return null;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -153,7 +153,7 @@ private boolean send(AlertEntity alert) {
 				rawContent = rawContent + "<br/>[告警间隔时间]" + suspendMinute + "分钟";
 			}
 			String content = m_splitterManager.process(rawContent, channel);
-			List<String> receivers = m_contactorManager.queryReceivers(group, channel, type);
+			List<String> receivers = m_contactorManager.queryReceivers(alert.getContactGroup(), channel, type);
 			message = new AlertMessageEntity(group, title, type, content, receivers);
 
 			if (m_senderManager.sendAlert(channel, message)) {
@@ -181,7 +181,7 @@ private boolean sendRecoveryMessage(AlertEntity alert, String currentMinute) {
 		for (AlertChannel channel : channels) {
 			String title = "[告警恢复] [告警类型 " + generateTypeStr(type) + "][" + group + " " + alert.getMetric() + "]";
 			String content = "[告警已恢复][恢复时间]" + currentMinute;
-			List<String> receivers = m_contactorManager.queryReceivers(group, channel, type);
+			List<String> receivers = m_contactorManager.queryReceivers(alert.getContactGroup(), channel, type);
 			AlertMessageEntity message = new AlertMessageEntity(group, title, type, content, receivers);
 
 			if (m_senderManager.sendAlert(channel, message)) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/TransactionDecorator.java
Patch:
@@ -29,7 +29,7 @@ public String generateContent(AlertEntity alert) {
 		Map<Object, Object> datas = new HashMap<Object, Object>();
 		String[] fields = alert.getMetric().split("-");
 
-		datas.put("domain", alert.getDomain());
+		datas.put("domain", alert.getGroup());
 		datas.put("type", fields[0]);
 		datas.put("name", fields[1]);
 		datas.put("content", alert.getContent());

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -57,7 +57,7 @@ protected void buildDailyReportInternal(Map<String, MetricReport> reports, Strin
 	      Date reportPeriod) {
 		MetricItemConfig metricConfig = m_configManager.getMetricConfig().getMetricItemConfigs().get(metricId);
 		String metricDomain = metricConfig.getDomain();
-		String productLine = String.valueOf(m_productLineConfigManager.queryProductLineByDomain(metricDomain));
+		String productLine = m_productLineConfigManager.queryProductLineByDomain(metricDomain);
 
 		for (MetricType type : MetricType.values()) {
 			String key = metricId + ":" + type;

File: cat-consumer/src/test/java/com/dianping/cat/consumer/top/TopAnalyzerTest.java
Patch:
@@ -100,7 +100,7 @@ public void setUp() throws Exception {
 	public void testProcess() throws Exception {
 		TopReport report = m_analyzer.getReport(m_domain);
 
-		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("top_analyzer.xml"), "utf-8");
+		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("top_analyzer_test.xml"), "utf-8");
 		Assert.assertEquals(expected.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopReportMerger.java
Patch:
@@ -20,7 +20,6 @@ protected void mergeDomain(Domain old, Domain domain) {
 	@Override
 	protected void mergeError(Error old, Error error) {
 		old.setCount(old.getCount() + error.getCount());
-		super.mergeError(old, error);
 	}
 
 	@Override
@@ -63,7 +62,6 @@ protected void mergeSegment(Segment old, Segment segment) {
 		if (old.getService() > 0) {
 			old.setServiceDuration(old.getServiceSum() / old.getService());
 		}
-		super.mergeSegment(old, segment);
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/productline/ProductLineConfig.java
Patch:
@@ -12,7 +12,7 @@ public enum ProductLineConfig {
 
 	METRIC("metricProductLine", "业务监控", ""),
 
-	USER("userProductline", "外部监控", Constants.BROKER_SERVICE),
+	USER("userProductLine", "外部监控", Constants.BROKER_SERVICE),
 
 	APPLICATION("applicationProductLine", "应用监控", ""),
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopReportMerger.java
Patch:
@@ -63,6 +63,7 @@ protected void mergeSegment(Segment old, Segment segment) {
 		if (old.getService() > 0) {
 			old.setServiceDuration(old.getServiceSum() / old.getService());
 		}
+		super.mergeSegment(old, segment);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/Payload.java
Patch:
@@ -151,7 +151,7 @@ public ReportPage getPage() {
 
 	public Date getStartTime() {
 		if (m_startTime == null || m_startTime.length() == 0) {
-			return new Date(System.currentTimeMillis() - TimeHelper.ONE_HOUR / 2);
+			return new Date(System.currentTimeMillis() - TimeHelper.ONE_HOUR / 4);
 		} else {
 			try {
 				return m_minSdf.parse(m_startTime);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/productline/ProductLineConfigManager.java
Patch:
@@ -60,7 +60,7 @@ private String buildDomainInfo(ProductLineConfig productLineConfig, ProductLine
 				for (ProductLine product : config.getCompany().getProductLines().values()) {
 					String productId = product.getId();
 
-					if (productId != null && productId.equals(id)) {
+					if (productId != null && !productId.equals(id)) {
 						for (Domain domain : product.getDomains().values()) {
 							domains.add(domain.getId());
 						}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/productline/ProductLineConfigManager.java
Patch:
@@ -58,7 +58,9 @@ private String buildDomainInfo(ProductLineConfig productLineConfig, ProductLine
 		      || ProductLineConfig.APPLICATION_PRODUCTLINE.equals(productLineConfig)) {
 			for (ProductLineConfig config : ProductLineConfig.values()) {
 				for (ProductLine product : config.getCompany().getProductLines().values()) {
-					if (!product.getId().equals(id)) {
+					String productId = product.getId();
+
+					if (productId != null && productId.equals(id)) {
 						for (Domain domain : product.getDomains().values()) {
 							domains.add(domain.getId());
 						}

File: cat-home/src/main/java/com/dianping/cat/report/task/system/SystemReportBuilder.java
Patch:
@@ -31,7 +31,7 @@ public class SystemReportBuilder implements TaskBuilder {
 	@Inject
 	protected CachedMetricReportService m_metricReportService;
 
-	public static final String ID = Constants.HIGH_LOAD_REPORT;
+	public static final String ID = Constants.REPORT_SYSTEM;
 
 	public static List<String> KEYS = Arrays.asList("sysCpu", "userCpu", "cpuUsage");
 

File: cat-client/src/main/java/com/dianping/cat/configuration/ClientConfigManager.java
Patch:
@@ -128,7 +128,7 @@ public void initialize(File configFile) throws Exception {
 		}
 
 		m_config = clientConfig;
-		m_logger.info(m_config.toString());
+		System.out.println(m_config);
 	}
 
 	public boolean isCatEnabled() {

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Handler.java
Patch:
@@ -115,7 +115,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				Alert alertEntity = buildAlertEntity(payload);
 
 				try {
-					System.out.println(alertEntity);
 					int count = m_alertDao.insert(alertEntity);
 
 					if (count == 0) {

File: cat-client/src/test/java/com/dianping/cat/configuration/NetworkInterfaceManagerTest.java
Patch:
@@ -33,9 +33,9 @@ public void test() {
 		adress = NetworkInterfaceManager.INSTANCE.findValidateIp(buildAllIps(str5));
 		Assert.assertEquals("10.1.1.1", adress.getHostAddress());
 
-		String[] str6 = { "127.0.0.1", "192.168.1.1" };
+		String[] str6 = { "127.0.0.1", "10.128.120.122" };
 		adress = NetworkInterfaceManager.INSTANCE.findValidateIp(buildAllIps(str6));
-		Assert.assertEquals("192.168.1.1", adress.getHostAddress());
+		Assert.assertEquals("10.128.120.122", adress.getHostAddress());
 	}
 
 	public List<InetAddress> buildAllIps(String[] strs) {

File: cat-client/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -5,6 +5,7 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.configuration.ConfigTest;
+import com.dianping.cat.configuration.NetworkInterfaceManagerTest;
 import com.dianping.cat.message.EventTest;
 import com.dianping.cat.message.HeartbeatTest;
 import com.dianping.cat.message.MessageTest;
@@ -39,6 +40,8 @@
 /* .tool */
 ToolsTest.class,
 
+NetworkInterfaceManagerTest.class,
+
 CatTest.class
 
 })

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/TransactionReportService.java
Patch:
@@ -220,7 +220,7 @@ private TransactionReport convert(TransactionReport report) {
 
 		try {
 			if (start != null && end != null && end.before(m_sdf.parse("2015-01-02"))) {
-				TpsStatistics statistics = new TpsStatistics((end.getTime() - start.getTime()) / 1000);
+				TpsStatistics statistics = new TpsStatistics((end.getTime() - start.getTime()) / 1000.0);
 
 				report.accept(statistics);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/event/EventReportBuilder.java
Patch:
@@ -142,7 +142,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 	private EventReport queryDailyReportsByDuration(String domain, Date start, Date end) {
 		long startTime = start.getTime();
 		long endTime = end.getTime();
-		double duration = (startTime - endTime) / TimeHelper.ONE_DAY;
+		double duration = (endTime - startTime) * 1.0 / TimeHelper.ONE_DAY;
 		HistoryEventReportMerger merger = new HistoryEventReportMerger(new EventReport(domain)).setDuration(duration);
 
 		for (; startTime < endTime; startTime += TimeHelper.ONE_DAY) {
@@ -169,7 +169,7 @@ private EventReport queryHourlyReportsByDuration(String name, String domain, Dat
 		List<EventReport> reports = new ArrayList<EventReport>();
 		long startTime = start.getTime();
 		long endTime = end.getTime();
-		double duration = (endTime - startTime) / TimeHelper.ONE_DAY;
+		double duration = (endTime - startTime) * 1.0 / TimeHelper.ONE_DAY;
 
 		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			EventReport report = m_reportService.queryEventReport(domain, new Date(startTime), new Date(startTime

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionReportBuilder.java
Patch:
@@ -156,7 +156,7 @@ public void enableLogging(Logger logger) {
 	private TransactionReport queryDailyReportsByDuration(String domain, Date start, Date end) {
 		long startTime = start.getTime();
 		long endTime = end.getTime();
-		double duration = (end.getTime() - start.getTime()) / TimeHelper.ONE_DAY;
+		double duration = (end.getTime() - start.getTime()) * 1.0 / TimeHelper.ONE_DAY;
 		HistoryTransactionReportMerger merger = new HistoryTransactionReportMerger(new TransactionReport(domain))
 		      .setDuration(duration);
 
@@ -184,7 +184,7 @@ private TransactionReport queryHourlyReportsByDuration(String name, String domai
 		List<TransactionReport> reports = new ArrayList<TransactionReport>();
 		long startTime = start.getTime();
 		long endTime = endDate.getTime();
-		double duration = (endTime - startTime) / TimeHelper.ONE_DAY;
+		double duration = (endTime - startTime) * 1.0 / TimeHelper.ONE_DAY;
 
 		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			TransactionReport report = m_reportService.queryTransactionReport(domain, new Date(startTime), new Date(

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/TopologyConfigProcessor.java
Patch:
@@ -69,7 +69,7 @@ private boolean graphNodeConfigAddOrUpdateSubmit(Payload payload, Model model) {
 		String domain = config.getId();
 		model.setDomainConfig(config);
 
-		if (domain.equalsIgnoreCase(Constants.ALL)) {
+		if (Constants.ALL.equalsIgnoreCase(domain)) {
 			return m_topologyConfigManager.insertDomainDefaultConfig(type, config);
 		} else {
 			return m_topologyConfigManager.insertDomainConfig(type, config);

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -272,8 +272,6 @@ private void storeModifyInfo(Context ctx, Payload payload) {
 			} catch (Exception ex) {
 				Cat.logError("store cookie fail:" + cookieValue, new RuntimeException());
 			}
-		} else {
-			Cat.logError("cannot get cookie info", new RuntimeException());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/TopMetric.java
Patch:
@@ -341,7 +341,7 @@ private Item findOrCreateItem(String minute, String domain) {
 			Map<String, Item> temp = m_items.get(minute);
 
 			if (temp == null) {
-				temp = new HashMap<String, Item>();
+				temp = new LinkedHashMap<String, Item>();
 				m_items.put(minute, temp);
 			}
 			Item item = temp.get(domain);
@@ -367,7 +367,7 @@ public int compare(String o1, String o2) {
 			String hour2 = o2.substring(0, 2);
 
 			if (!hour1.equals(hour2)) {
-				return Integer.parseInt(hour2) - Integer.parseInt(hour1);
+				return (Integer.parseInt(hour2) + 24) % 25 - (Integer.parseInt(hour1) + 24) % 25;
 			} else {
 				String first = o1.substring(3, 5);
 				String end = o2.substring(3, 5);

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/ExternalInfoBuilder.java
Patch:
@@ -127,6 +127,7 @@ private TopReport queryTopReport(Payload payload) {
 		if (m_topService.isEligable(request)) {
 			ModelResponse<TopReport> response = m_topService.invoke(request);
 			TopReport report = response.getModel();
+			
 			if (report == null || report.getDomains().size() == 0) {
 				report = m_reportService.queryTopReport(domain, new Date(payload.getDate()), new Date(payload.getDate()
 				      + TimeHelper.ONE_HOUR));

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/LocalCrossService.java
Patch:
@@ -27,7 +27,7 @@ public LocalCrossService() {
 	protected CrossReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		CrossReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getIps().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/LocalDependencyService.java
Patch:
@@ -27,7 +27,7 @@ public LocalDependencyService() {
 	protected DependencyReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		DependencyReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getDomainNames().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/LocalEventService.java
Patch:
@@ -27,7 +27,7 @@ public LocalEventService() {
 	protected EventReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		EventReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getIps().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/LocalHeartbeatService.java
Patch:
@@ -26,7 +26,7 @@ public LocalHeartbeatService() {
 	protected HeartbeatReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		HeartbeatReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getIps().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/LocalMatrixService.java
Patch:
@@ -27,7 +27,7 @@ public LocalMatrixService() {
 	protected MatrixReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		MatrixReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getDomainNames().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/LocalMetricService.java
Patch:
@@ -26,7 +26,7 @@ public LocalMetricService() {
 	protected MetricReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		MetricReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getMetricItems().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/LocalProblemService.java
Patch:
@@ -27,7 +27,7 @@ public LocalProblemService() {
 	protected ProblemReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		ProblemReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getIps().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -26,7 +26,7 @@ public LocalStateService() {
 	protected StateReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		StateReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getMachines().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/LocalTopService.java
Patch:
@@ -26,10 +26,10 @@ public LocalTopService() {
 	protected TopReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		TopReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getDomains().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
-		
+
 			if (report == null) {
 				report = new TopReport(domain);
 				report.setStartTime(new Date(startTime));

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -26,7 +26,7 @@ public LocalTransactionService() {
 	protected TransactionReport getReport(ModelRequest request, ModelPeriod period, String domain) throws Exception {
 		TransactionReport report = super.getReport(request, period, domain);
 
-		if (report == null && period.isLast()) {
+		if ((report == null || report.getIps().isEmpty()) && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
 		}

File: cat-home/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -12,7 +12,6 @@
 import com.dianping.cat.report.graph.ValueTranslaterTest;
 import com.dianping.cat.report.page.cross.CrossReportMergerTest;
 import com.dianping.cat.report.page.dependency.DependencyReportMergerTest;
-import com.dianping.cat.report.page.dependency.graph.GraphConfigManagerTest;
 import com.dianping.cat.report.page.event.EventGraphDataTest;
 import com.dianping.cat.report.page.event.EventReportFilterTest;
 import com.dianping.cat.report.page.metric.MetricReportMergerTest;
@@ -113,8 +112,6 @@
 /* Dependency */
 DependencyReportMergerTest.class,
 
-GraphConfigManagerTest.class,
-
 MetricReportParseTest.class,
 
 /* service */

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -22,7 +22,7 @@ public abstract class AbstractReportPayload<A extends Action> implements ActionP
 	protected String m_customStart;
 
 	@FieldMeta("date")
-	private long m_date;
+	protected long m_date;
 
 	@FieldMeta("domain")
 	private String m_domain;
@@ -36,7 +36,7 @@ public abstract class AbstractReportPayload<A extends Action> implements ActionP
 	private String m_reportType;
 
 	@FieldMeta("step")
-	private int m_step;
+	protected int m_step;
 
 	@FieldMeta("today")
 	private boolean m_today;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -275,7 +275,7 @@ private void normalize(Model model, Payload payload) {
 		List<Integer> minutes = new ArrayList<Integer>();
 
 		if (payload.getPeriod().isCurrent()) {
-			long current = System.currentTimeMillis() / 1000 / 60;
+			long current = payload.getCurrentTimeMillis() / 1000 / 60;
 			maxMinute = (int) (current % (60));
 		}
 		for (int i = 0; i < 60; i++) {
@@ -291,7 +291,7 @@ private int parseQueryMinute(Payload payload) {
 		String min = payload.getMinute();
 
 		if (StringUtils.isEmpty(min)) {
-			long current = System.currentTimeMillis() / 1000 / 60;
+			long current = payload.getCurrentTimeMillis() / 1000 / 60;
 			minute = (int) (current % (60));
 		} else {
 			minute = Integer.parseInt(min);

File: cat-consumer/src/test/java/com/dianping/cat/consumer/metric/ProductLineConfigManagerTest.java
Patch:
@@ -40,7 +40,7 @@ public void testInitNormal() throws Exception {
 		manager.insertProductLine(line2, domains2, ProductLineConfig.METRIC_PRODUCTLINE.getTitle());
 
 		Assert.assertEquals(2, s_storeCount);
-		Assert.assertEquals("Default", manager.queryProductLineByDomain("domain"));
+		Assert.assertEquals(null, manager.queryProductLineByDomain("domain"));
 		Assert.assertEquals("Test1", manager.queryProductLineByDomain("domain1"));
 		List<String> pDomains = manager.queryDomainsByProductLine("Test1", ProductLineConfig.METRIC_PRODUCTLINE);
 		Assert.assertEquals(2, pDomains.size());

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -145,7 +145,7 @@ protected List<AlertResultEntity> processMetricType(int minute, List<Config> con
 
 			return m_dataChecker.checkData(value, baseline, conditions);
 		} else {
-			return null;
+			return new ArrayList<AlertResultEntity>();
 		}
 	}
 

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -40,11 +40,12 @@ public class DefaultMessageManager extends ContainerHolder implements MessageMan
 	@Inject
 	private MessageStatistics m_statistics;
 
+	@Inject
+	private MessageIdFactory m_factory;
+	
 	// we don't use static modifier since MessageManager is configured as singleton
 	private ThreadLocal<Context> m_context = new ThreadLocal<Context>();
 
-	private MessageIdFactory m_factory;
-
 	private long m_throttleTimes;
 
 	private Domain m_domain;
@@ -179,7 +180,6 @@ public void initialize() throws InitializationException {
 
 		// initialize domain and IP address
 		try {
-			m_factory = lookup(MessageIdFactory.class);
 			m_factory.initialize(m_domain.getId());
 		} catch (IOException e) {
 			throw new InitializationException("Error while initializing MessageIdFactory!", e);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -27,9 +27,6 @@ public class CrossAnalyzer extends AbstractMessageAnalyzer<CrossReport> implemen
 	@Inject(ID)
 	protected ReportManager<CrossReport> m_reportManager;
 
-	@Inject
-	private ServerConfigManager m_serverConfigManager;
-
 	@Inject
 	private IpConvertManager m_ipConvertManager;
 

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -29,6 +29,7 @@
 import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
 import com.dianping.cat.message.spi.core.DefaultMessageHandler;
 import com.dianping.cat.message.spi.core.DefaultMessagePathBuilder;
+import com.dianping.cat.message.spi.core.MessageConsumer;
 import com.dianping.cat.message.spi.core.MessageHandler;
 import com.dianping.cat.message.spi.core.MessagePathBuilder;
 import com.dianping.cat.message.spi.core.TcpSocketReceiver;
@@ -61,7 +62,7 @@ public List<Component> defineComponents() {
 		all.add(C(TcpSocketReceiver.class).req(ServerConfigManager.class).req(ServerStatisticManager.class)
 		      .req(MessageCodec.class, PlainTextMessageCodec.ID).req(MessageHandler.class));
 
-		all.add(C(MessageHandler.class, DefaultMessageHandler.class));
+		all.add(C(MessageHandler.class, DefaultMessageHandler.class).req(MessageConsumer.class));
 
 		all.add(C(AggregationHandler.class, DefaultAggregationHandler.class));
 

File: cat-home/src/main/java/com/dianping/cat/build/ServiceComponentConfigurator.java
Patch:
@@ -20,7 +20,7 @@
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.hadoop.hdfs.HdfsMessageBucketManager;
 import com.dianping.cat.message.spi.MessageCodec;
-import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
+import com.dianping.cat.message.spi.core.HtmlMessageCodec;
 import com.dianping.cat.message.spi.core.MessageConsumer;
 import com.dianping.cat.message.spi.core.WaterfallMessageCodec;
 import com.dianping.cat.report.page.model.cross.CompositeCrossService;
@@ -164,7 +164,7 @@ public List<Component> defineComponents() {
 		all.add(C(ModelService.class, "message-local", LocalMessageService.class) //
 		      .req(MessageConsumer.class) //
 		      .req(MessageBucketManager.class, LocalMessageBucketManager.ID) //
-		      .req(MessageCodec.class, PlainTextMessageCodec.ID, "m_codec") //
+		      .req(MessageCodec.class, HtmlMessageCodec.ID, "m_html") //
 		      .req(MessageCodec.class, WaterfallMessageCodec.ID, "m_waterfull"));
 		all.add(C(ModelService.class, "message-historical", HistoricalMessageService.class) //
 		      .req(MessageBucketManager.class, HdfsMessageBucketManager.ID) //

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/LocalMessageService.java
Patch:
@@ -24,7 +24,7 @@ public class LocalMessageService extends BaseLocalModelService<String> {
 	private MessageBucketManager m_bucketManager;
 
 	@Inject("html")
-	private MessageCodec m_codec;
+	private MessageCodec m_html;
 
 	@Inject("waterfull")
 	private MessageCodec m_waterfull;
@@ -44,7 +44,7 @@ protected String getReport(ModelRequest request, ModelPeriod period, String doma
 			if (tree.getMessage() instanceof Transaction && request.getProperty("waterfall", "false").equals("true")) {
 				m_waterfull.encode(tree, buf);
 			} else {
-				m_codec.encode(tree, buf);
+				m_html.encode(tree, buf);
 			}
 
 			try {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -133,6 +133,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	WEB_RULE_DELETE("webRuleDelete"),
 
+	APP_NAME_CHECK("appNameCheck"),
+
 	APP_LIST("appList"),
 
 	APP_UPDATE("appUpdate"),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -194,6 +194,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			m_heartbeatConfigProcessor.process(action, payload, model);
 			break;
 
+		case APP_NAME_CHECK:
 		case APP_LIST:
 		case APP_UPDATE:
 		case APP_SUBMIT:

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -140,6 +140,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.WEB_RULE.getPath();
 		case WEB_RULE_ADD_OR_UPDATE:
 			return JspFile.WEB_RULE_UPDATE.getPath();
+		case APP_NAME_CHECK:
+			return JspFile.APP_NAME_CHECK.getPath();
 		case APP_LIST:
 		case APP_SUBMIT:
 		case APP_PAGE_DELETE:

File: cat-consumer/src/test/java/com/dianping/cat/consumer/MockReportManager.java
Patch:
@@ -12,7 +12,7 @@ public abstract class MockReportManager<T> implements ReportManager<T> {
 	private Set<String> m_set;
 
 	@Override
-	public void cleanup() {
+	public void cleanup(long time) {
 	}
 
 	@Override

File: cat-core/src/main/java/com/dianping/cat/service/ReportManager.java
Patch:
@@ -6,7 +6,7 @@
 import com.dianping.cat.service.DefaultReportManager.StoragePolicy;
 
 public interface ReportManager<T> {
-	public void cleanup();
+	public void cleanup(long startTime);
 
 	public void initialize();
 	

File: cat-core/src/test/java/com/dianping/cat/service/DefaultReportManagerTest.java
Patch:
@@ -63,10 +63,10 @@ public void testClean(){
 		m_manager.getHourlyReport(m_start-3*hour, DOMAIN1, true);
 		m_manager.getHourlyReport(m_start-4*hour, DOMAIN2, true);
 		m_manager.getHourlyReport(m_start, DOMAIN3, true);
-		m_manager.cleanup();
+		m_manager.cleanup(m_start);
 
 		Map<String, String> reports = m_manager.getHourlyReports(m_start);
-		Assert.assertEquals(1, reports.size());
+		Assert.assertEquals(0, reports.size());
 	}
 
 	@Test

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/app/AppAlert.java
Patch:
@@ -73,6 +73,7 @@ private double[] fetchDatas(String conditions, String type, int minute) {
 		if (startMinute < 0 && endMinute < 0) {
 			String period = m_sdf.format(queryDayPeriod(-1).getTime());
 			CommandQueryEntity queryEntity = new CommandQueryEntity(period + ";" + conditions + ";;");
+			
 			datas = ArrayUtils.toPrimitive(m_appDataService.queryValue(queryEntity, type), 0);
 		} else if (startMinute < 0 && endMinute >= 0) {
 			String last = m_sdf.format(queryDayPeriod(-1).getTime());
@@ -81,10 +82,12 @@ private double[] fetchDatas(String conditions, String type, int minute) {
 			CommandQueryEntity currentQueryEntity = new CommandQueryEntity(current + ";" + conditions + ";;");
 			double[] lastDatas = ArrayUtils.toPrimitive(m_appDataService.queryValue(lastQueryEntity, type), 0);
 			double[] currentDatas = ArrayUtils.toPrimitive(m_appDataService.queryValue(currentQueryEntity, type), 0);
+			
 			datas = mergerArray(lastDatas, currentDatas);
 		} else if (startMinute >= 0) {
 			String period = m_sdf.format(queryDayPeriod(0).getTime());
 			CommandQueryEntity queryEntity = new CommandQueryEntity(period + ";" + conditions + ";;");
+			
 			datas = ArrayUtils.toPrimitive(m_appDataService.queryValue(queryEntity, type), 0);
 		}
 		return datas;

File: cat-home/src/test/java/com/dianping/cat/report/task/event/EventDailyGraphMergerTest.java
Patch:
@@ -34,7 +34,7 @@ public void setUp() {
 
 	@Test
 	public void testForMergerDaily() throws Exception {
-		EventReport report = m_meger.mergeForDaily(m_reportDomain, reports, m_domains);
+		EventReport report = m_meger.mergeForDaily(m_reportDomain, reports, m_domains, 1);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("EventMergerDaily.xml"), "utf-8");
 
 		Assert.assertEquals(expeted.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
@@ -44,7 +44,7 @@ private EventReport creatReport() {
 		EventReport result = new EventReport();
 		try {
 			String xml = Files.forIO().readFrom(getClass().getResourceAsStream("BaseEventReport.xml"), "utf-8");
-			
+
 			return DefaultSaxParser.parse(xml);
 		} catch (Exception e) {
 			e.printStackTrace();

File: cat-home/src/test/java/com/dianping/cat/report/task/transaction/TransactionDailyGraphMergerTest.java
Patch:
@@ -34,7 +34,7 @@ public void setUp() {
 
 	@Test
 	public void testForMergerDaily() throws Exception {
-		TransactionReport report = m_meger.mergeForDaily(m_reportDomain, reports, m_domains);
+		TransactionReport report = m_meger.mergeForDaily(m_reportDomain, reports, m_domains, 1);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerDaily.xml"), "utf-8");
 
 		Assert.assertEquals(expeted.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/AlarmRule.java
Patch:
@@ -19,7 +19,7 @@ public AlarmRule(Map<String, Map<MetricType, List<Config>>> configs) {
 		m_configs = configs;
 	}
 
-	public int calMaxMinute() {
+	public int calMaxRuleMinute() {
 		int maxMinute = 0;
 
 		for (Map<MetricType, List<Config>> subMap : m_configs.values()) {

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/AppDataComparisonNotifier.java
Patch:
@@ -84,7 +84,6 @@ private Map<String, String> buildUser2Ids(Set<String> allUsers, Map<String, AppD
 		Map<String, String> user2Id = new HashMap<String, String>();
 
 		for (String user : allUsers) {
-
 			for (Entry<String, AppDataComparisonResult> entry : results.entrySet()) {
 				AppDataComparisonResult result = entry.getValue();
 				String id = result.getId();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -15,7 +15,6 @@
 import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.statistic.ServerStatisticManager;
-import com.dianping.cat.storage.message.LocalMessageBucketManager;
 import com.dianping.cat.storage.message.MessageBucketManager;
 
 public class DumpAnalyzer extends AbstractMessageAnalyzer<Object> implements LogEnabled {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -15,6 +15,7 @@
 import com.dianping.cat.consumer.dependency.DependencyAnalyzerTest;
 import com.dianping.cat.consumer.dependency.DependencyReportMergerTest;
 import com.dianping.cat.consumer.dump.DumpAnalyzerTest;
+import com.dianping.cat.consumer.dump.LocalMessageBucketManagerTest;
 import com.dianping.cat.consumer.event.EventAnalyzerTest;
 import com.dianping.cat.consumer.event.EventReportMergerTest;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzerTest;

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/DumpAnalyzerTest.java
Patch:
@@ -13,7 +13,6 @@
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 import com.dianping.cat.statistic.ServerStatisticManager;
-import com.dianping.cat.storage.message.LocalMessageBucketManager;
 
 public class DumpAnalyzerTest {
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/LocalMessageBucketManagerTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.storage.message;
+package com.dianping.cat.consumer.dump;
 
 import java.io.File;
 import java.io.IOException;
@@ -21,7 +21,6 @@
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
-import com.dianping.cat.storage.message.LocalMessageBucketManager;
 import com.dianping.cat.storage.message.MessageBucketManager;
 
 @RunWith(JUnit4.class)

File: cat-core/src/main/java/com/dianping/cat/storage/message/LocalMessageBucket.java
Patch:
@@ -100,7 +100,7 @@ public MessageTree findByIndex(int index) throws IOException {
 		}
 	}
 
-	protected MessageBlock flushBlock() throws IOException {
+	public MessageBlock flushBlock() throws IOException {
 		if (m_dirty.get()) {
 			synchronized (this) {
 				m_out.close();
@@ -132,6 +132,7 @@ public MessageBlockWriter getWriter() {
 		return m_writer;
 	}
 
+
 	@Override
 	public void initialize(String dataFile) throws IOException {
 		m_dataFile = dataFile;
@@ -153,7 +154,7 @@ public void setMessageCodec(MessageCodec codec) {
 		m_codec = codec;
 	}
 
-	protected synchronized MessageBlock storeMessage(final ChannelBuffer buf, final MessageId id) throws IOException {
+	public synchronized MessageBlock storeMessage(final ChannelBuffer buf, final MessageId id) throws IOException {
 		int size = buf.readableBytes();
 
 		m_dirty.set(true);

File: cat-core/src/main/java/com/dianping/cat/storage/message/MessageBlockReader.java
Patch:
@@ -7,7 +7,7 @@
 import java.io.RandomAccessFile;
 import java.util.zip.GZIPInputStream;
 
-class MessageBlockReader {
+public class MessageBlockReader {
 	private RandomAccessFile m_indexFile;
 
 	private RandomAccessFile m_dataFile;

File: cat-core/src/main/java/com/dianping/cat/storage/message/MessageBlockWriter.java
Patch:
@@ -4,7 +4,7 @@
 import java.io.IOException;
 import java.io.RandomAccessFile;
 
-class MessageBlockWriter {
+public class MessageBlockWriter {
 	private RandomAccessFile m_indexFile;
 
 	private RandomAccessFile m_dataFile;

File: cat-core/src/main/java/com/dianping/cat/storage/report/ReportBucketManager.java
Patch:
@@ -5,6 +5,8 @@
 public interface ReportBucketManager {
 
 	public void closeBucket(ReportBucket<?> bucket);
+	
+	public void clearOldReports();
 
 	public ReportBucket<String> getReportBucket(long timestamp, String name) throws IOException;
 }

File: cat-home/src/main/java/com/dianping/cat/build/ServiceComponentConfigurator.java
Patch:
@@ -9,6 +9,7 @@
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
+import com.dianping.cat.consumer.dump.LocalMessageBucketManager;
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
@@ -56,7 +57,6 @@
 import com.dianping.cat.report.page.model.transaction.LocalTransactionService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.task.cached.CachedReportTask;
-import com.dianping.cat.storage.message.LocalMessageBucketManager;
 import com.dianping.cat.storage.message.MessageBucketManager;
 import com.dianping.cat.storage.report.ReportBucketManager;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/LocalMessageService.java
Patch:
@@ -16,8 +16,8 @@
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
-import com.dianping.cat.storage.message.LocalMessageBucketManager;
 import com.dianping.cat.storage.message.MessageBucketManager;
+import com.dianping.cat.consumer.dump.LocalMessageBucketManager;
 
 public class LocalMessageService extends BaseLocalModelService<String> {
 	@Inject(LocalMessageBucketManager.ID)

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/HistoricalMessageService.java
Patch:
@@ -45,7 +45,7 @@ protected String getReport(ModelRequest request, ModelPeriod period, String doma
 
 	@Override
 	public boolean isEligable(ModelRequest request) {
-		boolean eligibale = !request.getPeriod().isCurrent();
+		boolean eligibale = request.getPeriod().isHistorical();
 
 		if (eligibale) {
 			String messageId = request.getProperty("messageId");

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryExecutor.java
Patch:
@@ -60,7 +60,7 @@ public String execute(String domain, Date date) {
 		}
 		date = normalizeDate(date);
 
-		Transaction t = Cat.newTransaction("AlertSummary", domain);
+		Transaction t = Cat.newTransaction("Summary", domain);
 
 		try {
 			StringBuilder builder = new StringBuilder();

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -256,7 +256,7 @@ public void run() {
 			boolean active = true;
 
 			while (active) {
-				Transaction t = Cat.newTransaction("Dependency", "ReloadTask");
+				Transaction t = Cat.newTransaction("ReloadTask", "Dependency");
 				long current = System.currentTimeMillis();
 				try {
 					Collection<String> domains = queryAllDomains();

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphManager.java
Patch:
@@ -147,9 +147,9 @@ public void run() {
 			boolean active = true;
 
 			while (active) {
-				Transaction t = Cat.newTransaction("NetGraph", TimeHelper.getMinuteStr());
+				Transaction t = Cat.newTransaction("ReloadTask", "NetGraph");
 				long current = System.currentTimeMillis();
-				
+
 				try {
 					NetGraph netGraphTemplate = m_netGraphConfigManager.getConfig().getNetGraphs().get(0);
 					Set<String> groups = queryAllGroups(netGraphTemplate);

File: cat-home/src/main/java/com/dianping/cat/report/service/AbstractReportService.java
Patch:
@@ -27,6 +27,7 @@
 import com.dianping.cat.home.dal.report.DailyReportContentDao;
 import com.dianping.cat.home.dal.report.MonthlyReportContentDao;
 import com.dianping.cat.home.dal.report.WeeklyReportContentDao;
+import com.dianping.cat.message.Event;
 
 public abstract class AbstractReportService<T> implements LogEnabled, ReportService<T> {
 
@@ -133,7 +134,7 @@ private Set<String> queryAllDomains(Date date) {
 					}
 				}
 				Cat.logEvent("FindDomain", new SimpleDateFormat("yyyy-MM-dd HH:mm").format(date) + " " + domains.size(),
-				      null, domains.toString());
+				      Event.SUCCESS, domains.toString());
 				m_domains.put(date, domains);
 			} catch (DalException e) {
 				Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -135,7 +135,7 @@ protected List<AlertResultEntity> processMetricType(int minute, List<Config> con
 	      String metricKey, MetricType type) {
 		Pair<Integer, List<Condition>> resultPair = m_ruleConfigManager.convertConditions(configs);
 		int ruleMinute = resultPair.getKey();
-		Cat.logEvent("RecordMetric", metricKey + "," + type.getName(), Event.SUCCESS, "minute=" + minute + "&ruleMinute"
+		Cat.logEvent("RecordMetric", metricKey + "," + type.getName(), Event.SUCCESS, "minute=" + minute + "&ruleMinute="
 		      + ruleMinute);
 		double[] value = reportGroup.extractData(minute, ruleMinute, metricKey, type);
 		double[] baseline = m_baselineService.queryBaseline(minute, ruleMinute, metricKey, type);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/FrontEndExceptionAlert.java
Patch:
@@ -49,7 +49,7 @@ public void run() {
 		}
 		while (active) {
 			long current = System.currentTimeMillis();
-			Transaction t = Cat.newTransaction("FrontEndException", TimeHelper.getMinuteStr());
+			Transaction t = Cat.newTransaction("AlertFrontEnd", TimeHelper.getMinuteStr());
 
 			try {
 				TopMetric topMetric = buildTopMetric(new Date(current - TimeHelper.ONE_MINUTE * 2));

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/MailSender.java
Patch:
@@ -74,7 +74,7 @@ public boolean send(AlertMessageEntity message) {
 		boolean result = sendEmail(message);
 
 		if (!result) {
-			Cat.logEvent("InternalMailSender", "error", Event.SUCCESS, null);
+			Cat.logEvent("MailSender", "Gmail", Event.SUCCESS, null);
 
 			boolean gmail = sendEmailByGmail(message);
 			if (gmail == false) {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/bucket/impl/DataBucketExecutor.java
Patch:
@@ -120,9 +120,10 @@ public void flush() {
 					}
 				}
 				batchInsert(commands, datas);
-				m_flushCountDownLatch.countDown();
 			} catch (Exception e) {
 				Cat.logError(e);
+			} finally {
+				m_flushCountDownLatch.countDown();
 			}
 		}
 		m_datas.clear();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -358,7 +358,7 @@ public void run() {
 		}
 
 		while (active) {
-			Transaction t = Cat.newTransaction("alert-heartbeat", TimeHelper.getMinuteStr());
+			Transaction t = Cat.newTransaction("AlertHeartbeat", TimeHelper.getMinuteStr());
 			long current = System.currentTimeMillis();
 
 			try {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/transaction/TransactionAlert.java
Patch:
@@ -167,7 +167,7 @@ public void run() {
 			active = false;
 		}
 		while (active) {
-			Transaction t = Cat.newTransaction("alert-transaction", TimeHelper.getMinuteStr());
+			Transaction t = Cat.newTransaction("AlertTransaction", TimeHelper.getMinuteStr());
 			long current = System.currentTimeMillis();
 
 			try {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/web/WebAlert.java
Patch:
@@ -262,7 +262,7 @@ public void run() {
 			active = false;
 		}
 		while (active) {
-			Transaction t = Cat.newTransaction("alert-web", TimeHelper.getMinuteStr());
+			Transaction t = Cat.newTransaction("AlertWeb", TimeHelper.getMinuteStr());
 			long current = System.currentTimeMillis();
 
 			try {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -152,10 +152,9 @@ protected void processProductLine(ProductLine productLine) {
 		int minute = (int) (current % (60)) - DATA_AREADY_MINUTE;
 		AlarmRule monitorConfigs = buildMonitorConfigs(productId, configs);
 		int maxMinute = monitorConfigs.calMaxMinute();
-		boolean isDataReady = false;
 		MetricReportGroup reportGroup = prepareDatas(productId, maxMinute);
 
-		if (isDataReady) {
+		if (reportGroup.isDataReady()) {
 			for (MetricItemConfig config : configs) {
 				try {
 					processMetricItemConfig(config, minute, monitorConfigs.getConfigs().get(config.getId()), productLine,

File: cat-home/src/main/java/com/dianping/cat/system/config/DomainGroupConfigManager.java
Patch:
@@ -16,8 +16,8 @@
 import com.dianping.cat.home.group.entity.Domain;
 import com.dianping.cat.home.group.entity.DomainGroup;
 import com.dianping.cat.home.group.entity.Group;
-import com.dianping.cat.home.group.transform.DefaultJsonParser;
 import com.dianping.cat.home.group.transform.DefaultSaxParser;
+import com.dianping.cat.report.page.JsonBuilder;
 
 public class DomainGroupConfigManager implements Initializable {
 
@@ -80,11 +80,10 @@ public boolean insert(String xml) {
 
 	public boolean insertFromJson(String json) {
 		try {
-			m_domainGroup = DefaultJsonParser.parse(DomainGroup.class, json);
+			m_domainGroup = (DomainGroup) new JsonBuilder().parse(json, DomainGroup.class);
 
 			return storeConfig();
 		} catch (Exception e) {
-			e.printStackTrace();
 			Cat.logError(e);
 			return false;
 		}

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -135,7 +135,7 @@ private void offerQueue(ProtoData appData) {
 	private void processVersion3Record(int cityId, int operatorId, String record) {
 		String[] items = record.split("\t");
 
-		if (items.length == 11) {
+		if (items.length >= 10) {
 			AppDataProto appData = new AppDataProto();
 
 			try {
@@ -188,7 +188,7 @@ private void processVersion3Record(int cityId, int operatorId, String record) {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("InvalidRecord", "batch", Event.SUCCESS, null);
+			Cat.logEvent("InvalidRecord", "batch:version3:" + String.valueOf(items.length), Event.SUCCESS, null);
 		}
 	}
 
@@ -248,7 +248,7 @@ private void processVersion2Record(int cityId, int operatorId, String record) {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("InvalidRecord", "batch", Event.SUCCESS, null);
+			Cat.logEvent("InvalidRecord", "batch:version2:" + String.valueOf(items.length), Event.SUCCESS, null);
 		}
 	}
 

File: cat-client/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -43,7 +43,8 @@ public List<Component> defineComponents() {
 
 		all.add(C(MessageSender.class, TcpSocketSender.ID, TcpSocketSender.class) //
 		      .is(PER_LOOKUP) //
-		      .req(ClientConfigManager.class).req(MessageStatistics.class, "default", "m_statistics") //
+		      .req(ClientConfigManager.class, MessageIdFactory.class) //
+		      .req(MessageStatistics.class, "default", "m_statistics") //
 		      .req(MessageCodec.class, PlainTextMessageCodec.ID, "m_codec"));
 		all.add(C(TransportManager.class, DefaultTransportManager.class) //
 		      .req(ClientConfigManager.class));

File: cat-client/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -43,7 +43,8 @@ public List<Component> defineComponents() {
 
 		all.add(C(MessageSender.class, TcpSocketSender.ID, TcpSocketSender.class) //
 		      .is(PER_LOOKUP) //
-		      .req(ClientConfigManager.class).req(MessageStatistics.class, "default", "m_statistics") //
+		      .req(ClientConfigManager.class, MessageIdFactory.class) //
+		      .req(MessageStatistics.class, "default", "m_statistics") //
 		      .req(MessageCodec.class, PlainTextMessageCodec.ID, "m_codec"));
 		all.add(C(TransportManager.class, DefaultTransportManager.class) //
 		      .req(ClientConfigManager.class));

File: cat-client/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -43,7 +43,8 @@ public List<Component> defineComponents() {
 
 		all.add(C(MessageSender.class, TcpSocketSender.ID, TcpSocketSender.class) //
 		      .is(PER_LOOKUP) //
-		      .req(ClientConfigManager.class).req(MessageStatistics.class, "default", "m_statistics") //
+		      .req(ClientConfigManager.class, MessageIdFactory.class) //
+		      .req(MessageStatistics.class, "default", "m_statistics") //
 		      .req(MessageCodec.class, PlainTextMessageCodec.ID, "m_codec"));
 		all.add(C(TransportManager.class, DefaultTransportManager.class) //
 		      .req(ClientConfigManager.class));

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/cdn/Handler.java
Patch:
@@ -90,7 +90,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 							m_manager.offer(entity);
 							Cat.logEvent("Cdn.Hit", tabs[1], Event.SUCCESS, userIp);
 						} else {
-							Cat.logEvent("Cdn.InvalidRecord", line, Event.SUCCESS, null);
+							Cat.logEvent("InvalidRecord", "cdn", Event.SUCCESS, null);
 						}
 					}
 				}
@@ -99,7 +99,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("UnknownIp", "Cdn", Event.SUCCESS, null);
+			Cat.logEvent("UnknownIp", "cdn", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -4,7 +4,7 @@
 import org.unidal.web.mvc.annotation.ModuleMeta;
 import org.unidal.web.mvc.annotation.ModulePagesMeta;
 
-@ModuleMeta(name = "r", defaultInboundAction = "home", defaultTransition = "default", defaultErrorAction = "default")
+@ModuleMeta(name = "r", defaultInboundAction = "dependency", defaultTransition = "default", defaultErrorAction = "default")
 @ModulePagesMeta({
 
 com.dianping.cat.report.page.home.Handler.class,

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -25,8 +25,6 @@ public void whether_url_has_max_names() throws Exception {
 			type.addName(new TransactionName("Test" + i));
 		}
 		
-		System.out.println(report);
-
 		TransactionReportCountFilter f1 = new TransactionReportCountFilter();
 		String filterReport = f1.buildXml(report);
 		TransactionReport newReport = DefaultSaxParser.parse(filterReport);

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/DependencyItemBuilder.java
Patch:
@@ -8,7 +8,7 @@
 import com.dianping.cat.home.dependency.graph.entity.TopologyEdge;
 import com.dianping.cat.home.dependency.graph.entity.TopologyNode;
 
-public class TopologyGraphItemBuilder {
+public class DependencyItemBuilder {
 
 	@Inject
 	private TopologyGraphConfigManager m_graphConfigManager;

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -209,7 +209,7 @@ public List<Component> defineComponents() {
 		      .req(ProductLineConfigManager.class, BaselineService.class, DisplayPolicyManager.class)
 		      .req(RemoteMetricReportService.class, HeartbeatRuleConfigManager.class, DataChecker.class,
 		            ServerConfigManager.class, AlertManager.class, AlertInfo.class)
-		      .req(ModelService.class, HeartbeatAnalyzer.ID, "m_service")
+		      .req(ModelService.class, HeartbeatAnalyzer.ID, "m_heartbeatService")
 		      .req(ModelService.class, TransactionAnalyzer.ID, "m_transactionService"));
 
 		all.add(C(SystemAlert.class).req(ProductLineConfigManager.class, BaselineService.class, AlertInfo.class).req(

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/network/NetworkAlert.java
Patch:
@@ -65,8 +65,6 @@ public void run() {
 			} catch (Exception e) {
 				t.setStatus(e);
 			} finally {
-				m_currentReports.clear();
-				m_lastReports.clear();
 				t.complete();
 			}
 			long duration = System.currentTimeMillis() - current;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/system/SystemAlert.java
Patch:
@@ -65,8 +65,6 @@ public void run() {
 			} catch (Exception e) {
 				t.setStatus(e);
 			} finally {
-				m_currentReports.clear();
-				m_lastReports.clear();
 				t.complete();
 			}
 			long duration = System.currentTimeMillis() - current;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Payload.java
Patch:
@@ -130,7 +130,7 @@ public class Payload implements ActionPayload<SystemPage, Action> {
 	@Override
 	public Action getAction() {
 		if (m_action == null) {
-			m_action = Action.PROJECT_ALL;
+			m_action = Action.TOPOLOGY_GRAPH_PRODUCT_LINE;
 		}
 		return m_action;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -4,7 +4,7 @@
 import org.unidal.web.mvc.annotation.ModuleMeta;
 import org.unidal.web.mvc.annotation.ModulePagesMeta;
 
-@ModuleMeta(name = "r", defaultInboundAction = "transaction", defaultTransition = "default", defaultErrorAction = "default")
+@ModuleMeta(name = "r", defaultInboundAction = "t", defaultTransition = "default", defaultErrorAction = "default")
 @ModulePagesMeta({
 
 com.dianping.cat.report.page.home.Handler.class,

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -4,7 +4,7 @@
 import org.unidal.web.mvc.annotation.ModuleMeta;
 import org.unidal.web.mvc.annotation.ModulePagesMeta;
 
-@ModuleMeta(name = "r", defaultInboundAction = "home", defaultTransition = "default", defaultErrorAction = "default")
+@ModuleMeta(name = "r", defaultInboundAction = "transaction", defaultTransition = "default", defaultErrorAction = "default")
 @ModulePagesMeta({
 
 com.dianping.cat.report.page.home.Handler.class,

File: cat-home/src/main/java/com/dianping/cat/system/SystemModule.java
Patch:
@@ -4,7 +4,7 @@
 import org.unidal.web.mvc.annotation.ModuleMeta;
 import org.unidal.web.mvc.annotation.ModulePagesMeta;
 
-@ModuleMeta(name = "s", defaultInboundAction = "login", defaultTransition = "default", defaultErrorAction = "default")
+@ModuleMeta(name = "s", defaultInboundAction = "config", defaultTransition = "default", defaultErrorAction = "default")
 @ModulePagesMeta({
 
 com.dianping.cat.system.page.login.Handler.class,

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -246,7 +246,7 @@ protected BaseRuleConfigManager getRuleConfigManager() {
 	private void processDomain(String domain) {
 		clearCacheReport();
 		int minute = getAlreadyMinute();
-		List<String> metrics = m_ruleConfigManager.queryMetrics();
+		Set<String> metrics = m_ruleConfigManager.queryMetrics();
 
 		for (String metric : metrics) {
 			List<Config> configs = m_ruleConfigManager.queryConfigs(domain, metric, null);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -246,7 +246,7 @@ protected BaseRuleConfigManager getRuleConfigManager() {
 	private void processDomain(String domain) {
 		clearCacheReport();
 		int minute = getAlreadyMinute();
-		List<String> metrics = m_ruleConfigManager.queryMetrics();
+		Set<String> metrics = m_ruleConfigManager.queryMetrics();
 
 		for (String metric : metrics) {
 			List<Config> configs = m_ruleConfigManager.queryConfigs(domain, metric, null);

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -164,7 +164,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	}
 
 	private boolean isGenericMetric(String group) {
-		return !isNetwork(group) && !isSystem(group) && isDatabase(group);
+		return !isNetwork(group) && !isSystem(group) && !isDatabase(group);
 	}
 
 	private boolean isNetwork(String group) {

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -164,7 +164,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	}
 
 	private boolean isGenericMetric(String group) {
-		return !isNetwork(group) && !isSystem(group) && isDatabase(group);
+		return !isNetwork(group) && !isSystem(group) && !isDatabase(group);
 	}
 
 	private boolean isNetwork(String group) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemHandler.java
Patch:
@@ -31,7 +31,7 @@ protected int getSegmentByMessage(MessageTree tree) {
 
 	public abstract void handle(Machine machine, MessageTree tree);
 
-	public void updateProblem(MessageTree tree, Entity entity, int value) {
+	public void updateEntity(MessageTree tree, Entity entity, int value) {
 		Duration duration = entity.findOrCreateDuration(value);
 		List<String> messages = duration.getMessages();
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemReportConvertor.java
Patch:
@@ -33,6 +33,7 @@ public void visitMachine(Machine machine) {
 					entity.addThread(thread);
 				}
 			}
+			entries.clear();
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/HourlyLineChartVisitor.java
Patch:
@@ -7,8 +7,8 @@
 import org.codehaus.plexus.util.StringUtils;
 
 import com.dianping.cat.Constants;
-import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.Entity;
+import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
 import com.dianping.cat.consumer.problem.model.transform.BaseVisitor;
 import com.dianping.cat.helper.TimeHelper;

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/PieGraphChartVisitor.java
Patch:
@@ -74,6 +74,7 @@ public void visitEntity(Entity entity) {
 	@Override
 	public void visitMachine(Machine machine) {
 		m_ip = machine.getIp();
+
 		super.visitMachine(machine);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemDailyGraphCreator.java
Patch:
@@ -89,6 +89,7 @@ public MachineInfo findOrCreateMachine(String ip) {
 	public void visitDuration(Duration duration) {
 		int count = duration.getCount();
 		MachineInfo info = findOrCreateMachine(m_currentIp);
+
 		buildMachineDetail(count, info);
 		buildMachineDetail(count, m_allMachine);
 	}
@@ -97,12 +98,14 @@ public void visitDuration(Duration duration) {
 	public void visitEntity(Entity entity) {
 		m_currentType = entity.getType();
 		m_currentName = entity.getStatus();
+
 		super.visitEntity(entity);
 	}
 
 	@Override
 	public void visitMachine(Machine machine) {
 		m_currentIp = machine.getIp();
+
 		super.visitMachine(machine);
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemReportConvertor.java
Patch:
@@ -33,6 +33,7 @@ public void visitMachine(Machine machine) {
 					entity.addThread(thread);
 				}
 			}
+			entries.clear();
 		}
 	}
 }

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -536,6 +536,7 @@ public void truncateAndFlush(Context ctx, long timestamp) {
 					DefaultTransaction t = (DefaultTransaction) stack.get(i);
 
 					t.setTimestamp(timestamp);
+					t.setDurationStart(System.nanoTime());
 				}
 
 				DefaultEvent next = new DefaultEvent("RemoteCall", "Next");
@@ -555,6 +556,7 @@ public void truncateAndFlush(Context ctx, long timestamp) {
 
 				ctx.m_length = stack.size();
 				ctx.m_totalDurationInMicros = ctx.m_totalDurationInMicros + target.getDurationInMicros();
+
 				flush(t);
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -149,7 +149,7 @@ public List<Component> defineComponents() {
 		all.add(C(ContactorManager.class));
 
 		all.add(C(Decorator.class, BusinessDecorator.ID, BusinessDecorator.class).req(ProductLineConfigManager.class,
-		      AlertSummaryExecutor.class));
+		      AlertSummaryExecutor.class, ProjectService.class));
 
 		all.add(C(Decorator.class, NetworkDecorator.ID, NetworkDecorator.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/task/highload/HighLoadReportBuilder.java
Patch:
@@ -247,7 +247,6 @@ private void sort() {
 				swap(0, i);
 				heapAdjust(0, i - 1);
 			}
-
 		}
 
 		private void swap(int index1, int index2) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -316,16 +316,16 @@ private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.TRANSACTION);
 		m_normalizePayload.normalize(model, payload);
 
-		if (StringUtils.isEmpty(payload.getQueryName())) {
-			payload.setQueryName(null);
-		}
 		if (StringUtils.isEmpty(payload.getType())) {
 			payload.setType(null);
 		}
 
 		String queryName = payload.getQueryName();
+		
 		if (queryName != null) {
 			model.setQueryName(queryName);
+		}else{
+			payload.setQueryName(null);
 		}
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventReportCountFilter.java
Patch:
@@ -44,7 +44,7 @@ public void visitType(EventType type) {
 				// invalidate char
 				if (temp.charAt(i) > 126 || temp.charAt(i) < 32) {
 					invalidates.add(temp);
-					continue;
+					break;
 				}
 			}
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemDelegate.java
Patch:
@@ -39,7 +39,7 @@ public void beforeSave(Map<String, ProblemReport> reports) {
 		}
 
 		try {
-			ProblemReportURLFilter problemReportURLFilter = new ProblemReportURLFilter();
+			ProblemReportFilter problemReportURLFilter = new ProblemReportFilter();
 
 			for (Entry<String, ProblemReport> entry : reports.entrySet()) {
 				ProblemReport report = entry.getValue();
@@ -68,7 +68,8 @@ public boolean createHourlyTask(ProblemReport report) {
 		if (m_manager.validateDomain(domain)) {
 			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL);
 		} else if (m_manager.isCrashLog(domain)) {
-			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
+			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID,
+			      TaskProlicy.ALL_EXCLUED_HOURLY);
 		} else {
 			return true;
 		}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemURLFilterTest.java
Patch:
@@ -12,7 +12,7 @@ public class ProblemURLFilterTest {
 
 	@Test
 	public void test() throws Exception{
-		ProblemReportURLFilter problemReportURLFilter = new ProblemReportURLFilter(5);
+		ProblemReportFilter problemReportURLFilter = new ProblemReportFilter(5);
 		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("problemURLFilter.xml"), "utf-8");
 		String resultXml = Files.forIO().readFrom(getClass().getResourceAsStream("problemURLFilterResult.xml"), "utf-8");
 		ProblemReport report = DefaultSaxParser.parse(oldXml);

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemReportBuilder.java
Patch:
@@ -12,7 +12,7 @@
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.ProblemReportMerger;
-import com.dianping.cat.consumer.problem.ProblemReportURLFilter;
+import com.dianping.cat.consumer.problem.ProblemReportFilter;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.transform.DefaultNativeBuilder;
 import com.dianping.cat.core.dal.DailyGraph;
@@ -101,7 +101,7 @@ public boolean buildHourlyTask(String name, String domain, Date period) {
 	public boolean buildMonthlyTask(String name, String domain, Date period) {
 		ProblemReport problemReport = queryDailyReportsByDuration(domain, period, TaskHelper.nextMonthStart(period));
 	
-		new ProblemReportURLFilter().visitProblemReport(problemReport);
+		new ProblemReportFilter().visitProblemReport(problemReport);
 		
 		MonthlyReport report = new MonthlyReport();
 

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -208,7 +208,8 @@ public List<Component> defineComponents() {
 		all.add(C(HeartbeatAlert.class)
 		      .req(ProductLineConfigManager.class, BaselineService.class, DisplayPolicyManager.class)
 		      .req(RemoteMetricReportService.class, HeartbeatRuleConfigManager.class, DataChecker.class,
-		            AlertManager.class, AlertInfo.class).req(ModelService.class, HeartbeatAnalyzer.ID, "m_service")
+		            ServerConfigManager.class, AlertManager.class, AlertInfo.class)
+		      .req(ModelService.class, HeartbeatAnalyzer.ID, "m_service")
 		      .req(ModelService.class, TransactionAnalyzer.ID, "m_transactionService"));
 
 		all.add(C(SystemAlert.class).req(ProductLineConfigManager.class, BaselineService.class, AlertInfo.class).req(

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventReportCountFilter.java
Patch:
@@ -44,7 +44,7 @@ public void visitType(EventType type) {
 				// invalidate char
 				if (temp.charAt(i) > 126 || temp.charAt(i) < 32) {
 					invalidates.add(temp);
-					continue;
+					break;
 				}
 			}
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemDelegate.java
Patch:
@@ -39,7 +39,7 @@ public void beforeSave(Map<String, ProblemReport> reports) {
 		}
 
 		try {
-			ProblemReportURLFilter problemReportURLFilter = new ProblemReportURLFilter();
+			ProblemReportFilter problemReportURLFilter = new ProblemReportFilter();
 
 			for (Entry<String, ProblemReport> entry : reports.entrySet()) {
 				ProblemReport report = entry.getValue();
@@ -68,7 +68,8 @@ public boolean createHourlyTask(ProblemReport report) {
 		if (m_manager.validateDomain(domain)) {
 			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL);
 		} else if (m_manager.isCrashLog(domain)) {
-			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
+			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID,
+			      TaskProlicy.ALL_EXCLUED_HOURLY);
 		} else {
 			return true;
 		}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemURLFilterTest.java
Patch:
@@ -12,7 +12,7 @@ public class ProblemURLFilterTest {
 
 	@Test
 	public void test() throws Exception{
-		ProblemReportURLFilter problemReportURLFilter = new ProblemReportURLFilter(5);
+		ProblemReportFilter problemReportURLFilter = new ProblemReportFilter(5);
 		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("problemURLFilter.xml"), "utf-8");
 		String resultXml = Files.forIO().readFrom(getClass().getResourceAsStream("problemURLFilterResult.xml"), "utf-8");
 		ProblemReport report = DefaultSaxParser.parse(oldXml);

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemReportBuilder.java
Patch:
@@ -12,7 +12,7 @@
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.ProblemReportMerger;
-import com.dianping.cat.consumer.problem.ProblemReportURLFilter;
+import com.dianping.cat.consumer.problem.ProblemReportFilter;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.transform.DefaultNativeBuilder;
 import com.dianping.cat.core.dal.DailyGraph;
@@ -101,7 +101,7 @@ public boolean buildHourlyTask(String name, String domain, Date period) {
 	public boolean buildMonthlyTask(String name, String domain, Date period) {
 		ProblemReport problemReport = queryDailyReportsByDuration(domain, period, TaskHelper.nextMonthStart(period));
 	
-		new ProblemReportURLFilter().visitProblemReport(problemReport);
+		new ProblemReportFilter().visitProblemReport(problemReport);
 		
 		MonthlyReport report = new MonthlyReport();
 

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMetric.java
Patch:
@@ -20,7 +20,7 @@ public DefaultMetric(String type, String name, MessageManager manager) {
 	public void complete() {
 		setCompleted(true);
 
-		if (m_manager != null && m_manager.getThreadLocalMessageTree().getMessage() == null) {
+		if (m_manager != null) {
 			m_manager.add(this);
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMetric.java
Patch:
@@ -20,7 +20,7 @@ public DefaultMetric(String type, String name, MessageManager manager) {
 	public void complete() {
 		setCompleted(true);
 
-		if (m_manager != null && m_manager.getThreadLocalMessageTree().getMessage() == null) {
+		if (m_manager != null) {
 			m_manager.add(this);
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -95,6 +95,7 @@
 import com.dianping.cat.system.config.AppRuleConfigManager;
 import com.dianping.cat.system.config.BusinessRuleConfigManager;
 import com.dianping.cat.system.config.DatabaseRuleConfigManager;
+import com.dianping.cat.system.config.DisplayPolicyManager;
 import com.dianping.cat.system.config.ExceptionConfigManager;
 import com.dianping.cat.system.config.HeartbeatRuleConfigManager;
 import com.dianping.cat.system.config.NetworkRuleConfigManager;
@@ -205,7 +206,7 @@ public List<Component> defineComponents() {
 		      RemoteMetricReportService.class, DatabaseRuleConfigManager.class, DataChecker.class, AlertManager.class));
 
 		all.add(C(HeartbeatAlert.class)
-		      .req(ProductLineConfigManager.class, BaselineService.class)
+		      .req(ProductLineConfigManager.class, BaselineService.class, DisplayPolicyManager.class)
 		      .req(RemoteMetricReportService.class, HeartbeatRuleConfigManager.class, DataChecker.class,
 		            AlertManager.class, AlertInfo.class).req(ModelService.class, HeartbeatAnalyzer.ID, "m_service")
 		      .req(ModelService.class, TransactionAnalyzer.ID, "m_transactionService"));

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -92,6 +92,7 @@ private Metric buildMetric(String group, String domain, String key, String type,
 		if (!isNetwork(group) && !isSystem(group)) {
 			tree.setDomain(domain);
 		}
+		metric.complete();
 		return defaultMetric;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -92,6 +92,7 @@ private Metric buildMetric(String group, String domain, String key, String type,
 		if (!isNetwork(group) && !isSystem(group)) {
 			tree.setDomain(domain);
 		}
+		metric.complete();
 		return defaultMetric;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/DisplayHeartbeat.java
Patch:
@@ -129,8 +129,8 @@ private void dealWithExtensions() {
 				double[] values = metricEntry.getValue();
 
 				if (m_manager.isDelta(groupName, metricName)) {
-					metricEntry.setValue(getAddedCount(values));
-					values = metricEntry.getValue();
+					values = getAddedCount(values);
+					metricEntry.setValue(values);
 				}
 
 				int unit = m_manager.queryUnit(groupName, metricName);

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorManager.java
Patch:
@@ -24,7 +24,7 @@
 import com.dianping.cat.message.internal.DefaultMetric;
 import com.dianping.cat.service.IpService;
 import com.dianping.cat.service.IpService.IpInfo;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class MonitorManager implements Initializable, LogEnabled {
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/cdn/Handler.java
Patch:
@@ -19,7 +19,7 @@
 import com.dianping.cat.broker.api.page.MonitorManager;
 import com.dianping.cat.broker.api.page.RequestUtils;
 import com.dianping.cat.message.Event;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class Handler implements PageHandler<Context>, LogEnabled {
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/speed/Handler.java
Patch:
@@ -27,8 +27,8 @@
 import com.dianping.cat.message.Event;
 import com.dianping.cat.service.IpService;
 import com.dianping.cat.service.IpService.IpInfo;
-import com.site.helper.Splitters;
-import com.site.lookup.util.StringUtils;
+import org.unidal.helper.Splitters;
+import org.unidal.lookup.util.StringUtils;
 
 public class Handler implements PageHandler<Context>, LogEnabled {
 

File: cat-client/src/main/java/com/dianping/cat/agent/MmapConsumerTask.java
Patch:
@@ -23,7 +23,7 @@
 import com.dianping.cat.message.internal.DefaultTransaction;
 import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
-import com.site.helper.Splitters;
+import org.unidal.helper.Splitters;
 
 public class MmapConsumerTask implements Task, Initializable, LogEnabled {
 	@Inject

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -28,7 +28,7 @@
 
 import com.dianping.cat.configuration.ClientConfigManager;
 import com.dianping.cat.message.spi.MessageQueue;
-import com.site.helper.Splitters;
+import org.unidal.helper.Splitters;
 
 public class ChannelManager implements Task {
 

File: cat-client/src/test/java/com/dianping/cat/ToolsTest.java
Patch:
@@ -12,7 +12,7 @@
 
 import com.site.helper.Splitters;
 import com.site.helper.Stringizers;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class ToolsTest {
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -19,7 +19,7 @@
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.service.DefaultReportManager.StoragePolicy;
 import com.dianping.cat.service.ReportManager;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class CrossAnalyzer extends AbstractMessageAnalyzer<CrossReport> implements LogEnabled {
 	public static final String ID = "cross";

File: cat-core/src/main/java/com/dianping/cat/config/app/AppComparisonConfigManager.java
Patch:
@@ -7,6 +7,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.dal.jdbc.DalNotFoundException;
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
@@ -17,7 +18,6 @@
 import com.dianping.cat.core.config.Config;
 import com.dianping.cat.core.config.ConfigDao;
 import com.dianping.cat.core.config.ConfigEntity;
-import com.site.helper.Splitters;
 
 public class AppComparisonConfigManager implements Initializable {
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/WaterfallMessageCodec.java
Patch:
@@ -8,6 +8,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.jboss.netty.buffer.ChannelBuffer;
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.message.Event;
@@ -16,7 +17,6 @@
 import com.dianping.cat.message.spi.MessageCodec;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.codec.BufferWriter;
-import com.site.helper.Splitters;
 
 /**
  * Local use only, do not use it over network since it only supports one-way encoding

File: cat-core/src/main/java/com/dianping/cat/service/HostinfoService.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.core.dal.Hostinfo;
 import com.dianping.cat.core.dal.HostinfoDao;
 import com.dianping.cat.core.dal.HostinfoEntity;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class HostinfoService implements Initializable, LogEnabled {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Handler.java
Patch:
@@ -12,6 +12,7 @@
 import javax.servlet.ServletException;
 
 import org.unidal.dal.jdbc.DalException;
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.PageHandler;
@@ -27,7 +28,6 @@
 import com.dianping.cat.report.task.alert.sender.AlertChannel;
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
-import com.site.helper.Splitters;
 
 public class Handler implements PageHandler<Context> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Payload.java
Patch:
@@ -5,14 +5,14 @@
 import java.util.Date;
 import java.util.List;
 
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.site.helper.Splitters;
-import com.site.lookup.util.StringUtils;
 
 public class Payload implements ActionPayload<ReportPage, Action> {
 	private ReportPage m_page;

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/Handler.java
Patch:
@@ -9,6 +9,7 @@
 import javax.servlet.ServletException;
 
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.PageHandler;
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
@@ -19,7 +20,6 @@
 import com.dianping.cat.home.dal.report.AlterationDao;
 import com.dianping.cat.home.dal.report.AlterationEntity;
 import com.dianping.cat.report.ReportPage;
-import com.site.lookup.util.StringUtils;
 
 public class Handler implements PageHandler<Context> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.alteration;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Model.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.Map.Entry;
 import java.util.Set;
 
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.view.annotation.EntityMeta;
 
 import com.dianping.cat.configuration.app.entity.Code;
@@ -168,7 +168,7 @@ public String getDomainToCommandsJson() {
 
 		for (Command command : m_commands) {
 			String domain = command.getDomain();
-			if (StringUtil.isEmpty(domain)) {
+			if (StringUtils.isEmpty(domain)) {
 				domain = "default";
 			}
 			List<Command> commands = map.get(domain);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/ProblemStatistics.java
Patch:
@@ -8,13 +8,13 @@
 import java.util.TreeMap;
 
 import org.codehaus.plexus.util.StringUtils;
+import org.unidal.helper.Splitters;
 
 import com.dianping.cat.consumer.problem.model.entity.Duration;
 import com.dianping.cat.consumer.problem.model.entity.Entry;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.transform.BaseVisitor;
 import com.dianping.cat.helper.SortHelper;
-import com.site.helper.Splitters;
 
 public class ProblemStatistics extends BaseVisitor {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/processor/CrashLogProcessor.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.Set;
 
 import org.codehaus.plexus.util.StringUtils;
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
@@ -25,7 +26,6 @@
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
-import com.site.helper.Splitters;
 
 public class CrashLogProcessor {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.Map;
 import java.util.Set;
 
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils;
 
 import com.dianping.cat.consumer.event.model.entity.EventName;
 import com.dianping.cat.consumer.event.model.entity.EventType;
@@ -170,7 +170,7 @@ public void add(TransactionName transactionName, EventName eventName, String met
 			m_name.setAvg((double) m_name.getSum() / m_name.getTotalCount());
 			m_name.setTps(m_name.getTps() + transactionName.getTps());
 
-			if (!StringUtil.isEmpty(method)) {
+			if (!StringUtils.isEmpty(method)) {
 				if ("get".equals(method)) {
 					m_get += transactionTotalCount;
 					m_missed = m_missed + eventName.getTotalCount();

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Handler.java
Patch:
@@ -9,7 +9,6 @@
 
 import javax.servlet.ServletException;
 
-import org.hsqldb.lib.StringUtil;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.PageHandler;
@@ -249,7 +248,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			CacheReport cacheReport = buildCacheReport(transactionReport, eventReport, payload);
 
 			model.setReport(cacheReport);
-			if (!StringUtil.isEmpty(type)) {
+			if (!StringUtils.isEmpty(type)) {
 				model.setPieChart(buildPieChart(model.getReport()));
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.cdn;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/Payload.java
Patch:
@@ -3,13 +3,13 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
+import org.unidal.web.mvc.ActionContext;
+import org.unidal.web.mvc.payload.annotation.FieldMeta;
+
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.AbstractReportPayload;
 
-import org.unidal.web.mvc.ActionContext;
-import org.unidal.web.mvc.payload.annotation.FieldMeta;
-
 public class Payload extends AbstractReportPayload<Action> {
 	private ReportPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/CrossMethodVisitor.java
Patch:
@@ -1,11 +1,12 @@
 package com.dianping.cat.report.page.cross;
 
+import org.unidal.lookup.util.StringUtils;
+
 import com.dianping.cat.consumer.cross.model.entity.Name;
 import com.dianping.cat.consumer.cross.model.entity.Remote;
 import com.dianping.cat.consumer.cross.model.transform.BaseVisitor;
 import com.dianping.cat.report.page.cross.display.MethodQueryInfo;
 import com.dianping.cat.service.HostinfoService;
-import com.site.lookup.util.StringUtils;
 
 public class CrossMethodVisitor extends BaseVisitor {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/HostInfo.java
Patch:
@@ -13,7 +13,7 @@
 import com.dianping.cat.consumer.cross.model.entity.Type;
 import com.dianping.cat.consumer.cross.model.transform.BaseVisitor;
 import com.dianping.cat.service.HostinfoService;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class HostInfo extends BaseVisitor {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Handler.java
Patch:
@@ -9,6 +9,7 @@
 import javax.servlet.ServletException;
 
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.PageHandler;
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
@@ -20,7 +21,6 @@
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PayloadNormalizer;
-import com.site.lookup.util.StringUtils;
 
 public class Handler implements PageHandler<Context> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/database/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.database;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Payload.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.report.page.database;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
-
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	private ReportPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -13,8 +13,8 @@
 
 import javax.servlet.ServletException;
 
-import org.hsqldb.lib.StringUtil;
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.tuple.Pair;
 import org.unidal.web.mvc.PageHandler;
 import org.unidal.web.mvc.annotation.InboundActionMeta;
@@ -271,7 +271,7 @@ private int parseQueryMinute(Payload payload) {
 		int minute = 0;
 		String min = payload.getMinute();
 
-		if (StringUtil.isEmpty(min)) {
+		if (StringUtils.isEmpty(min)) {
 			long current = System.currentTimeMillis() / 1000 / 60;
 			minute = (int) (current % (60));
 		} else {

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -6,8 +6,8 @@
 
 import javax.servlet.ServletException;
 
-import org.hsqldb.lib.StringUtil;
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.PageHandler;
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
@@ -83,7 +83,7 @@ private void buildHistoryGraph(Model model, Payload payload) {
 		HeartbeatReport report = m_reportService.queryHeartbeatReport(payload.getDomain(), start, end);
 
 		model.setReport(report);
-		if (StringUtil.isEmpty(payload.getIpAddress()) || Constants.ALL.equals(payload.getIpAddress())) {
+		if (StringUtils.isEmpty(payload.getIpAddress()) || Constants.ALL.equals(payload.getIpAddress())) {
 			String ipAddress = getIpAddress(report, payload);
 
 			payload.setIpAddress(ipAddress);
@@ -150,7 +150,7 @@ private void normalize(Model model, Payload payload) {
 		String ipAddress = payload.getIpAddress();
 
 		model.setPage(ReportPage.HEARTBEAT);
-		if (StringUtil.isEmpty(ipAddress) || ipAddress.equals(Constants.ALL)) {
+		if (StringUtils.isEmpty(ipAddress) || ipAddress.equals(Constants.ALL)) {
 			model.setIpAddress(Constants.ALL);
 		} else {
 			payload.setRealIp(payload.getIpAddress());

File: cat-home/src/main/java/com/dianping/cat/report/page/highload/DisplayTypes.java
Patch:
@@ -4,7 +4,7 @@
 import java.util.Comparator;
 import java.util.List;
 
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils;
 
 import com.dianping.cat.home.highload.entity.HighloadReport;
 import com.dianping.cat.home.highload.entity.Name;
@@ -13,7 +13,7 @@
 public class DisplayTypes {
 
 	public HighloadReport display(String sortBy, HighloadReport report) {
-		if (!StringUtil.isEmpty(sortBy)) {
+		if (!StringUtils.isEmpty(sortBy)) {
 			for (Type type : report.getTypes()) {
 				List<Name> names = type.getNames();
 				Collections.sort(names, new NameComparator(sortBy));

File: cat-home/src/main/java/com/dianping/cat/report/page/highload/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.highload;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/GraphCreator.java
Patch:
@@ -10,6 +10,7 @@
 import java.util.Map.Entry;
 
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
@@ -24,7 +25,6 @@
 import com.dianping.cat.report.task.alert.AlertInfo.AlertMetric;
 import com.dianping.cat.report.task.alert.MetricType;
 import com.dianping.cat.service.ProjectService;
-import com.site.lookup.util.StringUtils;
 
 public class GraphCreator extends AbstractGraphCreator {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -5,6 +5,7 @@
 import javax.servlet.ServletException;
 
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.PageHandler;
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
@@ -19,7 +20,6 @@
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.report.page.JsonBuilder;
 import com.dianping.cat.report.task.alert.MetricType;
-import com.site.lookup.util.StringUtils;
 
 public class Handler implements PageHandler<Context> {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.monitor;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Model.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.monitor;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ViewModel;
 
+import com.dianping.cat.report.ReportPage;
+
 public class Model extends ViewModel<ReportPage, Action, Context> {
 
 	public Model(Context ctx) {

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Payload.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.report.page.monitor;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
-
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.network;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Payload.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.report.page.network;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
-
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	private ReportPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/overload/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.overload;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/PieGraphChartVisitor.java
Patch:
@@ -5,7 +5,7 @@
 import java.util.List;
 import java.util.Map;
 
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils;
 
 import com.dianping.cat.consumer.problem.model.entity.Duration;
 import com.dianping.cat.consumer.problem.model.entity.Entry;
@@ -65,7 +65,7 @@ public void visitEntry(Entry entry) {
 		String name = entry.getStatus();
 
 		if (type.equals(m_type)) {
-			if (StringUtil.isEmpty(m_status) || name.equals(m_status)) {
+			if (StringUtils.isEmpty(m_status) || name.equals(m_status)) {
 				super.visitEntry(entry);
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/system/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.system;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Model.java
Patch:
@@ -5,14 +5,14 @@
 import java.util.HashSet;
 import java.util.List;
 
+import org.unidal.web.mvc.view.annotation.EntityMeta;
+import org.unidal.web.mvc.view.annotation.ModelMeta;
+
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.metric.Range;
 
-import org.unidal.web.mvc.view.annotation.EntityMeta;
-import org.unidal.web.mvc.view.annotation.ModelMeta;
-
 @ModelMeta("system")
 public class Model extends AbstractReportModel<Action, Context> {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/web/Handler.java
Patch:
@@ -13,6 +13,7 @@
 
 import javax.servlet.ServletException;
 
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.tuple.Pair;
 import org.unidal.web.mvc.PageHandler;
@@ -31,7 +32,6 @@
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.PieChart;
 import com.dianping.cat.report.page.web.graph.WebGraphCreator;
-import com.site.helper.Splitters;
 
 public class Handler implements PageHandler<Context> {
 

File: cat-home/src/main/java/com/dianping/cat/report/service/app/AppDataField.java
Patch:
@@ -1,6 +1,6 @@
 package com.dianping.cat.report.service.app;
 
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public enum AppDataField {
 	OPERATOR("operator"),

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/BusinessDecorator.java
Patch:
@@ -11,7 +11,7 @@
 import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 import com.dianping.cat.report.task.alert.summary.AlertSummaryExecutor;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class BusinessDecorator extends Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ProjectDecorator.java
Patch:
@@ -5,7 +5,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.core.dal.Project;
 import com.dianping.cat.service.ProjectService;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public abstract class ProjectDecorator extends Decorator {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/DefaultContactor.java
Patch:
@@ -3,8 +3,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import org.unidal.helper.Splitters;
+
 import com.dianping.cat.home.alert.config.entity.Receiver;
-import com.site.helper.Splitters;
 
 public abstract class DefaultContactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/ProjectContactor.java
Patch:
@@ -9,7 +9,7 @@
 import com.dianping.cat.home.alert.config.entity.Receiver;
 import com.dianping.cat.service.ProjectService;
 import com.dianping.cat.system.config.AlertConfigManager;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public abstract class ProjectContactor extends DefaultContactor implements Contactor {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryExecutor.java
Patch:
@@ -6,16 +6,16 @@
 import java.util.Date;
 import java.util.List;
 
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.task.alert.sender.AlertChannel;
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
-import com.site.helper.Splitters;
-import com.site.lookup.util.StringUtils;
 
 public class AlertSummaryExecutor {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/transaction/TransactionAlert.java
Patch:
@@ -6,6 +6,7 @@
 import java.util.Map.Entry;
 
 import org.codehaus.plexus.util.StringUtils;
+import org.unidal.helper.Splitters;
 import org.unidal.helper.Threads.Task;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.tuple.Pair;
@@ -32,7 +33,6 @@
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
-import com.site.helper.Splitters;
 
 public class TransactionAlert extends BaseAlert implements Task {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/AppDataComparisonNotifier.java
Patch:
@@ -12,7 +12,9 @@
 import java.util.Set;
 
 import org.unidal.dal.jdbc.DalException;
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
+import org.unidal.lookup.util.StringUtils;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.config.app.AppComparisonConfigManager;
@@ -29,8 +31,6 @@
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
 import com.dianping.cat.report.task.notify.render.AppDataComparisonRender;
-import com.site.helper.Splitters;
-import com.site.lookup.util.StringUtils;
 
 public class AppDataComparisonNotifier {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProjectUpdateTask.java
Patch:
@@ -29,7 +29,7 @@
 import com.dianping.cat.report.service.ReportService;
 import com.dianping.cat.service.HostinfoService;
 import com.dianping.cat.service.ProjectService;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class ProjectUpdateTask implements Task, LogEnabled {
 

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -25,7 +25,7 @@
 import com.dianping.cat.message.Event;
 import com.dianping.cat.report.task.alert.MetricType;
 import com.dianping.cat.report.task.alert.RuleType;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public abstract class BaseRuleConfigManager {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/ScheduledManager.java
Patch:
@@ -28,7 +28,7 @@
 import com.dianping.cat.home.dal.alarm.ScheduledSubscriptionEntity;
 import com.dianping.cat.service.ProjectService;
 import com.dianping.cat.system.page.alarm.UserReportSubState.UserReportSubStateCompartor;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class ScheduledManager implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java
Patch:
@@ -8,7 +8,8 @@
 import java.util.List;
 import java.util.Map;
 
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils
+;
 import org.unidal.web.mvc.ViewModel;
 
 import com.dianping.cat.consumer.metric.config.entity.MetricItemConfig;
@@ -259,7 +260,7 @@ public String getDomain2CommandsJson() {
 
 		for (Command command : m_commands) {
 			String domain = command.getDomain();
-			if (StringUtil.isEmpty(domain)) {
+			if (StringUtils.isEmpty(domain)) {
 				domain = "default";
 			}
 			List<Command> commands = map.get(domain);

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/AppConfigProcessor.java
Patch:
@@ -3,6 +3,7 @@
 import java.util.List;
 
 import org.codehaus.plexus.util.StringUtils;
+import org.unidal.helper.Splitters;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
@@ -16,7 +17,6 @@
 import com.dianping.cat.system.page.config.Action;
 import com.dianping.cat.system.page.config.Model;
 import com.dianping.cat.system.page.config.Payload;
-import com.site.helper.Splitters;
 
 public class AppConfigProcessor extends BaseProcesser {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/BaseProcesser.java
Patch:
@@ -4,7 +4,8 @@
 import java.util.Collection;
 import java.util.List;
 
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils
+;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
@@ -44,7 +45,7 @@ public void generateRuleConfigContent(String key, BaseRuleConfigManager manager,
 		String configsStr = "";
 		String ruleId = "";
 
-		if (!StringUtil.isEmpty(key)) {
+		if (!StringUtils.isEmpty(key)) {
 			Rule rule = manager.queryRule(key);
 
 			if (rule != null) {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/ExceptionConfigProcessor.java
Patch:
@@ -19,7 +19,7 @@
 import com.dianping.cat.system.page.config.Action;
 import com.dianping.cat.system.page.config.Model;
 import com.dianping.cat.system.page.config.Payload;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class ExceptionConfigProcessor {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/processor/MetricConfigProcessor.java
Patch:
@@ -7,8 +7,7 @@
 import java.util.Map.Entry;
 import java.util.Set;
 
-import org.codehaus.plexus.util.StringUtils;
-import org.hsqldb.lib.StringUtil;
+import org.unidal.lookup.util.StringUtils;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.consumer.metric.config.entity.MetricItemConfig;
@@ -48,7 +47,7 @@ private boolean metricConfigAddSubmit(Payload payload, Model model) {
 		String type = config.getType();
 		String metricKey = config.getMetricKey();
 
-		if (!StringUtil.isEmpty(domain) && !StringUtil.isEmpty(type) && !StringUtil.isEmpty(metricKey)) {
+		if (!StringUtils.isEmpty(domain) && !StringUtils.isEmpty(type) && !StringUtils.isEmpty(metricKey)) {
 			config.setId(m_metricConfigManager.buildMetricKey(domain, type, metricKey));
 
 			return m_metricConfigManager.insertMetricItemConfig(config);

File: cat-home/src/test/java/com/dianping/cat/report/alert/summary/AlertSummaryStringDecorator.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.home.alert.summary.entity.Alert;
 import com.dianping.cat.home.alert.summary.entity.AlertSummary;
 import com.dianping.cat.home.alert.summary.entity.Category;
-import com.site.lookup.util.StringUtils;
+import org.unidal.lookup.util.StringUtils;
 
 public class AlertSummaryStringDecorator implements AlertSummaryDecorator {
 	

File: cat-home/src/main/java/com/dianping/cat/system/config/DisplayPolicyManager.java
Patch:
@@ -139,7 +139,7 @@ public int compare(Metric m1, Metric m2) {
 					return m1.getOrder() - m2.getOrder();
 				}
 			});
-			for (Metric metric : group.getMetrics().values()) {
+			for (Metric metric : list) {
 				metricNames.add(metric.getId());
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -115,7 +115,7 @@ private void filterCommands(Model model, boolean isShowActivity) {
 		} else {
 			for (Command command : commands) {
 				int commandId = command.getId();
-				if (commandId >= 0 && commandId <= 200) {
+				if (commandId > 0 && commandId < 1000) {
 					remainCommands.add(command);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -116,7 +116,7 @@ private void filterCommands(Model model, boolean isShowActivity) {
 		} else {
 			for (Command command : commands) {
 				int commandId = command.getId();
-				if (commandId >= 0 && commandId <= 200) {
+				if (commandId > 0 && commandId < 1000) {
 					remainCommands.add(command);
 				}
 			}

File: cat-core/src/main/java/com/dianping/cat/configuration/ServerConfigManager.java
Patch:
@@ -255,6 +255,7 @@ public void initialize() throws InitializationException {
 		m_invalidateDomains.add("MerchantAndroidCrashLog");
 		m_invalidateDomains.add("MerchantIOSCrashLog");
 		m_invalidateDomains.add("paas");
+		m_invalidateDomains.add("SMS-RECEIVER");
 
 		m_crashLogs.add("AndroidCrashLog");
 		m_crashLogs.add("iOSCrashLog");
@@ -288,8 +289,8 @@ public void initialize(File configFile) throws Exception {
 			m_logger.warn("CAT server is running in LOCAL mode! No HDFS or MySQL will be accessed!");
 		}
 	}
-	
-	public Set<String> getUnusedDomains(){
+
+	public Set<String> getUnusedDomains() {
 		return m_invalidateDomains;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/storage/report/ReportBucket.java
Patch:
@@ -54,4 +54,5 @@ public interface ReportBucket<T> {
 	 * @throws IOException
 	 */
 	public boolean storeById(String id, T data) throws IOException;
+	
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -29,7 +29,7 @@ protected StateReport getReport(ModelRequest request, ModelPeriod period, String
 		if (report == null && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
-		
+
 			if (report == null) {
 				report = new StateReport(domain);
 				report.setStartTime(new Date(startTime));

File: cat-core/src/main/java/com/dianping/cat/configuration/ServerConfigManager.java
Patch:
@@ -255,6 +255,7 @@ public void initialize() throws InitializationException {
 		m_invalidateDomains.add("MerchantAndroidCrashLog");
 		m_invalidateDomains.add("MerchantIOSCrashLog");
 		m_invalidateDomains.add("paas");
+		m_invalidateDomains.add("SMS-RECEIVER");
 
 		m_crashLogs.add("AndroidCrashLog");
 		m_crashLogs.add("iOSCrashLog");
@@ -288,8 +289,8 @@ public void initialize(File configFile) throws Exception {
 			m_logger.warn("CAT server is running in LOCAL mode! No HDFS or MySQL will be accessed!");
 		}
 	}
-	
-	public Set<String> getUnusedDomains(){
+
+	public Set<String> getUnusedDomains() {
 		return m_invalidateDomains;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/storage/report/ReportBucket.java
Patch:
@@ -54,4 +54,5 @@ public interface ReportBucket<T> {
 	 * @throws IOException
 	 */
 	public boolean storeById(String id, T data) throws IOException;
+	
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -29,7 +29,7 @@ protected StateReport getReport(ModelRequest request, ModelPeriod period, String
 		if (report == null && period.isLast()) {
 			long startTime = request.getStartTime();
 			report = getReportFromLocalDisk(startTime, domain);
-		
+
 			if (report == null) {
 				report = new StateReport(domain);
 				report.setStartTime(new Date(startTime));

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultEvent.java
Patch:
@@ -20,7 +20,7 @@ public DefaultEvent(String type, String name, MessageManager manager) {
 	public void complete() {
 		setCompleted(true);
 
-		if (m_manager != null && m_manager.getThreadLocalMessageTree().getMessage() == null) {
+		if (m_manager != null) {
 			m_manager.add(this);
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultTrace.java
Patch:
@@ -20,7 +20,7 @@ public DefaultTrace(String type, String name, MessageManager manager) {
 	public void complete() {
 		setCompleted(true);
 
-		if (m_manager != null && m_manager.getThreadLocalMessageTree().getMessage() == null) {
+		if (m_manager != null) {
 			m_manager.add(this);
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultTransaction.java
Patch:
@@ -135,7 +135,7 @@ public void setStandalone(boolean standalone) {
 	}
 
 	public void setDurationStart(long durationStart) {
-   	m_durationStart = durationStart;
-   }
-	
+		m_durationStart = durationStart;
+	}
+
 }

File: cat-client/src/main/java/com/dianping/cat/message/internal/MockMessageBuilder.java
Patch:
@@ -186,7 +186,7 @@ public EventHolder(String type, String name, String data) {
 
 		@Override
 		public Event build() {
-			m_event = new DefaultEvent(getType(), getName());
+			m_event = new DefaultEvent(getType(), getName(), null);
 			m_event.setTimestamp(getTimestampInMillis());
 			m_event.setStatus(getStatus());
 			m_event.addData(getData());

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultEvent.java
Patch:
@@ -20,7 +20,7 @@ public DefaultEvent(String type, String name, MessageManager manager) {
 	public void complete() {
 		setCompleted(true);
 
-		if (m_manager != null && m_manager.getThreadLocalMessageTree().getMessage() == null) {
+		if (m_manager != null) {
 			m_manager.add(this);
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultTrace.java
Patch:
@@ -20,7 +20,7 @@ public DefaultTrace(String type, String name, MessageManager manager) {
 	public void complete() {
 		setCompleted(true);
 
-		if (m_manager != null && m_manager.getThreadLocalMessageTree().getMessage() == null) {
+		if (m_manager != null) {
 			m_manager.add(this);
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultTransaction.java
Patch:
@@ -135,7 +135,7 @@ public void setStandalone(boolean standalone) {
 	}
 
 	public void setDurationStart(long durationStart) {
-   	m_durationStart = durationStart;
-   }
-	
+		m_durationStart = durationStart;
+	}
+
 }

File: cat-client/src/main/java/com/dianping/cat/message/internal/MockMessageBuilder.java
Patch:
@@ -186,7 +186,7 @@ public EventHolder(String type, String name, String data) {
 
 		@Override
 		public Event build() {
-			m_event = new DefaultEvent(getType(), getName());
+			m_event = new DefaultEvent(getType(), getName(), null);
 			m_event.setTimestamp(getTimestampInMillis());
 			m_event.setStatus(getStatus());
 			m_event.addData(getData());

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -218,8 +218,8 @@ public List<Component> defineComponents() {
 		      .req(MailRecordDao.class, AppDataComparisonNotifier.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, AppDatabasePruner.ID, AppDatabasePruner.class).req(AppCommandDataDao.class,
-		      AppSpeedDataDao.class,AppSpeedConfigManager.class,AppSpeedConfigManager.class));
-		
+		      AppSpeedDataDao.class, AppSpeedConfigManager.class, AppConfigManager.class));
+
 		all.add(C(ReportFacade.class));
 
 		return all;

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -23,7 +23,7 @@
 import com.dianping.cat.home.dal.report.AlterationDao;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphManager;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import com.dianping.cat.report.page.transaction.TransactionMergeManager;
+import com.dianping.cat.report.page.transaction.TransactionMergeHelper;
 import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.service.app.AppDataService;
 import com.dianping.cat.report.task.alert.AlertInfo;
@@ -221,7 +221,7 @@ public List<Component> defineComponents() {
 		      .req(UrlPatternConfigManager.class));
 
 		all.add(C(TransactionAlert.class).req(ProductLineConfigManager.class, BaselineService.class, AlertInfo.class)
-		      .req(RemoteMetricReportService.class, TransactionMergeManager.class, DataChecker.class, AlertManager.class)
+		      .req(RemoteMetricReportService.class, TransactionMergeHelper.class, DataChecker.class, AlertManager.class)
 		      .req(ModelService.class, TransactionAnalyzer.ID).req(TransactionRuleConfigManager.class));
 
 		all.add(C(AlertExceptionBuilder.class).req(ExceptionConfigManager.class, AggregationConfigManager.class));

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -34,7 +34,7 @@
 import com.dianping.cat.home.dal.report.WeeklyReportContentDao;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphBuilder;
 import com.dianping.cat.report.page.network.nettopology.NetGraphBuilder;
-import com.dianping.cat.report.page.transaction.TransactionMergeManager;
+import com.dianping.cat.report.page.transaction.TransactionMergeHelper;
 import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.service.app.AppDataService;
@@ -161,7 +161,7 @@ public List<Component> defineComponents() {
 		      ReportServiceManager.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, UtilizationReportBuilder.ID, UtilizationReportBuilder.class)
-		      .req(ReportServiceManager.class, TransactionMergeManager.class, ServerConfigManager.class,
+		      .req(ReportServiceManager.class, TransactionMergeHelper.class, ServerConfigManager.class,
 		            HostinfoService.class));
 
 		all.add(C(ReportTaskBuilder.class, DependencyReportBuilder.ID, DependencyReportBuilder.class).req(

File: cat-home/src/main/java/com/dianping/cat/report/page/event/EventMergeHelper.java
Patch:
@@ -3,7 +3,7 @@
 import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 
-public class EventMergeManager {
+public class EventMergeHelper {
 
 	public EventReport mergerAllIp(EventReport report, String ipAddress) {
 		if (Constants.ALL.equalsIgnoreCase(ipAddress)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -55,7 +55,7 @@ public class Handler implements PageHandler<Context> {
 	private ReportServiceManager m_reportService;
 
 	@Inject
-	private EventMergeManager m_mergeManager;
+	private EventMergeHelper m_mergeManager;
 
 	@Inject(type = ModelService.class, value = EventAnalyzer.ID)
 	private ModelService<EventReport> m_service;

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -62,7 +62,7 @@ public class Handler implements PageHandler<Context> {
 	private ReportServiceManager m_reportService;
 
 	@Inject
-	private TransactionMergeManager m_mergeManager;
+	private TransactionMergeHelper m_mergeManager;
 
 	@Inject
 	private PayloadNormalizer m_normalizePayload;

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/TransactionMergeHelper.java
Patch:
@@ -3,7 +3,7 @@
 import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 
-public class TransactionMergeManager {
+public class TransactionMergeHelper {
 
 	public TransactionReport mergerAllIp(TransactionReport report, String ipAddress) {
 		if (Constants.ALL.equalsIgnoreCase(ipAddress)) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/transaction/TransactionAlert.java
Patch:
@@ -24,7 +24,7 @@
 import com.dianping.cat.home.rule.entity.Rule;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import com.dianping.cat.report.page.transaction.TransactionMergeManager;
+import com.dianping.cat.report.page.transaction.TransactionMergeHelper;
 import com.dianping.cat.report.task.alert.AlertResultEntity;
 import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.BaseAlert;
@@ -40,7 +40,7 @@ public class TransactionAlert extends BaseAlert implements Task {
 	private ModelService<TransactionReport> m_service;
 
 	@Inject
-	private TransactionMergeManager m_mergeManager;
+	private TransactionMergeHelper m_mergeManager;
 
 	private double[] buildArrayData(int start, int end, String type, String name, TransactionReport report) {
 		TransactionType t = report.findOrCreateMachine(Constants.ALL).findOrCreateType(type);

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportBuilder.java
Patch:
@@ -25,7 +25,7 @@
 import com.dianping.cat.home.utilization.transform.DefaultNativeBuilder;
 import com.dianping.cat.report.page.cross.display.ProjectInfo;
 import com.dianping.cat.report.page.cross.display.TypeDetailInfo;
-import com.dianping.cat.report.page.transaction.TransactionMergeManager;
+import com.dianping.cat.report.page.transaction.TransactionMergeHelper;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.ReportTaskBuilder;
@@ -39,7 +39,7 @@ public class UtilizationReportBuilder implements ReportTaskBuilder {
 	protected ReportServiceManager m_reportService;
 
 	@Inject
-	private TransactionMergeManager m_mergeManager;
+	private TransactionMergeHelper m_mergeManager;
 
 	@Inject
 	private ServerConfigManager m_configManger;

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -218,8 +218,8 @@ public List<Component> defineComponents() {
 		      .req(MailRecordDao.class, AppDataComparisonNotifier.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, AppDatabasePruner.ID, AppDatabasePruner.class).req(AppCommandDataDao.class,
-		      AppSpeedDataDao.class,AppSpeedConfigManager.class,AppSpeedConfigManager.class));
-		
+		      AppSpeedDataDao.class, AppSpeedConfigManager.class, AppConfigManager.class));
+
 		all.add(C(ReportFacade.class));
 
 		return all;

File: cat-home/src/main/java/com/dianping/cat/report/page/web/Handler.java
Patch:
@@ -163,12 +163,12 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 					model.setStart(TimeHelper.getCurrentDay());
 					model.setEnd(new Date());
 				}
-				model.setPattermItems(m_patternManager.queryUrlPatternRules());
-				model.setAction(Action.VIEW);
-				model.setCityInfo(m_cityManager.getCityInfo());
 			} catch (Exception e) {
 				Cat.logError(e);
 			}
+			model.setPattermItems(m_patternManager.queryUrlPatternRules());
+			model.setAction(Action.VIEW);
+			model.setCityInfo(m_cityManager.getCityInfo());
 			break;
 		case JSON:
 			try {

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -21,10 +21,10 @@
 import com.dianping.cat.home.dal.report.AlertDao;
 import com.dianping.cat.home.dal.report.AlertSummaryDao;
 import com.dianping.cat.home.dal.report.AlterationDao;
-import com.dianping.cat.report.baseline.BaselineService;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphManager;
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.transaction.TransactionMergeManager;
+import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.service.app.AppDataService;
 import com.dianping.cat.report.task.alert.AlertInfo;
 import com.dianping.cat.report.task.alert.DataChecker;

File: cat-home/src/main/java/com/dianping/cat/report/graph/metric/AbstractGraphCreator.java
Patch:
@@ -16,8 +16,8 @@
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.helper.TimeHelper;
-import com.dianping.cat.report.baseline.BaselineService;
 import com.dianping.cat.report.page.LineChart;
+import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.task.alert.AlertInfo;
 
 public abstract class AbstractGraphCreator implements LogEnabled {

File: cat-home/src/main/java/com/dianping/cat/report/service/BaselineService.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.baseline;
+package com.dianping.cat.report.service;
 
 import java.util.Date;
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DefaultBaselineService.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.baseline.impl;
+package com.dianping.cat.report.service.impl;
 
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
@@ -18,7 +18,7 @@
 import com.dianping.cat.home.dal.report.Baseline;
 import com.dianping.cat.home.dal.report.BaselineDao;
 import com.dianping.cat.home.dal.report.BaselineEntity;
-import com.dianping.cat.report.baseline.BaselineService;
+import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.task.TaskHelper;
 
 public class DefaultBaselineService implements BaselineService {

File: cat-home/src/main/java/com/dianping/cat/report/task/DefaultTaskConsumer.java
Patch:
@@ -61,6 +61,7 @@ protected boolean processTask(Task doing) {
 			t.setStatus(Transaction.SUCCESS);
 		} catch (Exception e) {
 			Cat.logError(e);
+			t.setStatus(e);
 		} finally {
 			t.complete();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -24,7 +24,7 @@
 import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.rule.entity.Condition;
 import com.dianping.cat.home.rule.entity.Config;
-import com.dianping.cat.report.baseline.BaselineService;
+import com.dianping.cat.report.service.BaselineService;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 import com.dianping.cat.report.task.alert.sender.AlertManager;
 import com.dianping.cat.service.ModelPeriod;

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/BaselineConfig.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.baseline;
+package com.dianping.cat.report.task.metric;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/BaselineConfigManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.baseline;
+package com.dianping.cat.report.task.metric;
 
 import java.util.Arrays;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/BaselineCreator.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.baseline;
+package com.dianping.cat.report.task.metric;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/impl/DefaultBaselineCreator.java
Patch:
@@ -1,10 +1,10 @@
-package com.dianping.cat.report.baseline.impl;
+package com.dianping.cat.report.task.metric.impl;
 
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
-import com.dianping.cat.report.baseline.BaselineCreator;
+import com.dianping.cat.report.task.metric.BaselineCreator;
 
 public class DefaultBaselineCreator implements BaselineCreator {
 

File: cat-home/src/main/java/com/dianping/cat/report/view/DomainFilter.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.servlet;
+package com.dianping.cat.report.view;
 
 import java.io.IOException;
 

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/BaselineCreatorTest.java
Patch:
@@ -8,7 +8,7 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.helper.TimeHelper;
-import com.dianping.cat.report.baseline.impl.DefaultBaselineCreator;
+import com.dianping.cat.report.task.metric.impl.DefaultBaselineCreator;
 
 public class BaselineCreatorTest extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilderTest.java
Patch:
@@ -12,9 +12,7 @@
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.home.dal.report.Baseline;
-import com.dianping.cat.report.baseline.BaselineConfig;
-import com.dianping.cat.report.baseline.BaselineConfigManager;
-import com.dianping.cat.report.baseline.BaselineService;
+import com.dianping.cat.report.service.BaselineService;
 
 public class MetricBaselineReportBuilderTest extends ComponentTestCase {
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -16,6 +16,7 @@
 import com.dianping.cat.report.task.DefaultTaskConsumer;
 import com.dianping.cat.report.task.alert.app.AppAlert;
 import com.dianping.cat.report.task.alert.business.BusinessAlert;
+import com.dianping.cat.report.task.alert.database.DatabaseAlert;
 import com.dianping.cat.report.task.alert.exception.ExceptionAlert;
 import com.dianping.cat.report.task.alert.exception.FrontEndExceptionAlert;
 import com.dianping.cat.report.task.alert.heartbeat.HeartbeatAlert;
@@ -58,6 +59,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 		if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
 			BusinessAlert metricAlert = ctx.lookup(BusinessAlert.class);
 			NetworkAlert networkAlert = ctx.lookup(NetworkAlert.class);
+			DatabaseAlert databaseAlert = ctx.lookup(DatabaseAlert.class);
 			SystemAlert systemAlert = ctx.lookup(SystemAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
 			FrontEndExceptionAlert frontEndExceptionAlert = ctx.lookup(FrontEndExceptionAlert.class);
@@ -70,6 +72,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 			TransactionAlert transactionAlert = ctx.lookup(TransactionAlert.class);
 
 			Threads.forGroup("cat").start(networkAlert);
+			Threads.forGroup("cat").start(databaseAlert);
 			Threads.forGroup("cat").start(systemAlert);
 			Threads.forGroup("cat").start(metricAlert);
 			Threads.forGroup("cat").start(exceptionAlert);

File: cat-home/src/main/java/com/dianping/cat/report/task/DefaultTaskConsumer.java
Patch:
@@ -61,6 +61,7 @@ protected boolean processTask(Task doing) {
 			t.setStatus(Transaction.SUCCESS);
 		} catch (Exception e) {
 			Cat.logError(e);
+			t.setStatus(e);
 		} finally {
 			t.complete();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/AlertType.java
Patch:
@@ -6,6 +6,8 @@ public enum AlertType {
 
 	Network("network"),
 
+	DataBase("database"),
+
 	System("system"),
 
 	Exception("exception"),

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -90,6 +90,8 @@ private String generateTypeStr(String type) {
 			return "心跳告警";
 		case Transaction:
 			return "transaction告警";
+		case DataBase:
+			return "数据库告警";
 		}
 		return type;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/BusinessContactor.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.dianping.cat.report.task.alert.AlertType;
 
-public class BusinessContactor extends ProductlineContactor {
+public class BusinessContactor extends ProjectContactor {
 
 	public static final String ID = AlertType.Business.getName();
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/NetworkContactor.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.dianping.cat.report.task.alert.AlertType;
 
-public class NetworkContactor extends ProductlineContactor {
+public class NetworkContactor extends ProjectContactor {
 
 	public static final String ID = AlertType.Network.getName();
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -176,7 +176,7 @@ private void processVersion2Record(int cityId, int operatorId, String record) {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("InvalidPar", items[4], Event.SUCCESS, items[4]);
+			Cat.logEvent("InvalidRecord", record, Event.SUCCESS, record);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/display/AppGraphCreator.java
Patch:
@@ -177,9 +177,9 @@ private Pair<Integer, String> buildPieChartFieldTitlePair(int command, AppComman
 				title = code.getName();
 				int status = code.getStatus();
 				if (status == 0) {
-					title += "<span class='text-success'>&nbsp;&nbsp;【成功】</span>";
+					title += "<span class='text-success'>【成功】</span>";
 				} else {
-					title += "<span class='text-error'>&nbsp;&nbsp;【失败】</span>";
+					title += "<span class='text-error'>【失败】</span>";
 				}
 			}
 			break;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -171,7 +171,7 @@ private void processVersion2Record(int cityId, int operatorId, String record) {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("InvalidPar", items[4], Event.SUCCESS, items[4]);
+			Cat.logEvent("InvalidRecord", record, Event.SUCCESS, record);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/display/AppGraphCreator.java
Patch:
@@ -177,9 +177,9 @@ private Pair<Integer, String> buildPieChartFieldTitlePair(int command, AppComman
 				title = code.getName();
 				int status = code.getStatus();
 				if (status == 0) {
-					title += "<span class='text-success'>&nbsp;&nbsp;【成功】</span>";
+					title += "<span class='text-success'>【成功】</span>";
 				} else {
-					title += "<span class='text-error'>&nbsp;&nbsp;【失败】</span>";
+					title += "<span class='text-error'>【失败】</span>";
 				}
 			}
 			break;

File: cat-consumer/src/test/java/com/dianping/cat/consumer/cross/CrossInfoTest.java
Patch:
@@ -42,7 +42,7 @@ public void testParsePigeonClientTransaction() throws Exception {
 		analyzer.setServerConfigManager(lookup(ServerConfigManager.class));
 		analyzer.setIpConvertManager(new IpConvertManager());
 
-		DefaultTransaction t = new DefaultTransaction("Call", "method1", null);
+		DefaultTransaction t = new DefaultTransaction("PigeonCall", "method1", null);
 		MessageTree tree = buildMockMessageTree();
 		CrossInfo info = analyzer.parseCorssTransaction(t, tree);
 
@@ -70,7 +70,7 @@ public void testParsePigeonServerTransaction() throws Exception {
 		analyzer.setServerConfigManager(lookup(ServerConfigManager.class));
 		analyzer.setIpConvertManager(new IpConvertManager());
 
-		DefaultTransaction t = new DefaultTransaction("Service", "method1", null);
+		DefaultTransaction t = new DefaultTransaction("PigeonService", "method1", null);
 		MessageTree tree = buildMockMessageTree();
 		CrossInfo info = analyzer.parseCorssTransaction(t, tree);
 
@@ -97,7 +97,7 @@ public void testParsePigeonServerTransactionWithPort() throws Exception {
 		analyzer.setServerConfigManager(lookup(ServerConfigManager.class));
 		analyzer.setIpConvertManager(new IpConvertManager());
 
-		DefaultTransaction t = new DefaultTransaction("Service", "method1", null);
+		DefaultTransaction t = new DefaultTransaction("PigeonService", "method1", null);
 		MessageTree tree = buildMockMessageTree();
 		CrossInfo info = analyzer.parseCorssTransaction(t, tree);
 

File: cat-core/src/test/java/com/dianping/cat/ServerConfigManagerTest.java
Patch:
@@ -34,12 +34,12 @@ public void test() throws Exception {
 		Assert.assertEquals(6, manager.getHdfsProperties().size());
 		Assert.assertEquals(0, manager.getLongConfigDomains().size());
 		Assert.assertEquals(100, manager.getLongUrlDefaultThreshold());
-		Assert.assertEquals(true, manager.isClientCall("Call"));
+		Assert.assertEquals(true, manager.isClientCall("PigeonCall"));
 		Assert.assertEquals(true, manager.isHdfsOn());
 		Assert.assertEquals(true, manager.isInitialized());
 		Assert.assertEquals(false, manager.isJobMachine());
 		Assert.assertEquals(false, manager.isLocalMode());
-		Assert.assertEquals(true, manager.isServerService("Service"));
+		Assert.assertEquals(true, manager.isServerService("PigeonService"));
 		Assert.assertEquals(false, manager.validateDomain("All"));
 		
 		Transaction t = new DefaultTransaction("Service", "piegonService:heartTaskService:heartBeat", null);

File: cat-core/src/main/java/com/dianping/cat/ServerConfigManager.java
Patch:
@@ -45,7 +45,6 @@ public class ServerConfigManager implements Initializable, LogEnabled {
 	private Set<String> m_invalidateDomains = new HashSet<String>();
 
 	public boolean discardTransaction(Transaction t) {
-		// pigeon default heartbeat is no use
 		String type = t.getType();
 		String name = t.getName();
 
@@ -306,7 +305,7 @@ public boolean isAlertMachine() {
 	}
 
 	public boolean isClientCall(String type) {
-		return "PigeonCall".equals(type) || "Call".equals(type);
+		return "PigeonCall".equals(type);
 	}
 
 	public boolean isCrashLog(String domain) {
@@ -348,7 +347,7 @@ public boolean isOffline() {
 	}
 
 	public boolean isServerService(String type) {
-		return "PigeonService".equals(type) || "Service".equals(type);
+		return "PigeonService".equals(type);
 	}
 
 	private long toLong(String str, long defaultValue) {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorEntity.java
Patch:
@@ -1,6 +1,5 @@
 package com.dianping.cat.broker.api.page;
 
-import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 
 public class MonitorEntity {
@@ -73,7 +72,7 @@ public void setIp(String ip) {
 	public MonitorEntity setTargetUrl(String targetUrl) {
 		try {
 			m_targetUrl = URLDecoder.decode(targetUrl, "utf-8");
-		} catch (UnsupportedEncodingException e) {
+		} catch (Exception e) {
 			m_targetUrl = targetUrl;
 		}
 		return this;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dependency/DependencyAnalyzer.java
Patch:
@@ -141,8 +141,6 @@ private void processPigeonTransaction(DependencyReport report, MessageTree tree,
 				DependencyReport serverReport = findOrCreateReport(target);
 
 				updateDependencyInfo(serverReport, t, tree.getDomain(), "PigeonService");
-			}else{
-				System.err.println(t);
 			}
 		}
 	}

File: cat-core/src/main/java/com/dianping/cat/config/app/AppCommandDataTableProvider.java
Patch:
@@ -37,8 +37,7 @@ public String getPhysicalTableName(Map<String, Object> hints) {
 		Date old = new Date();
 
 		try {
-			//TODO
-			old = new SimpleDateFormat("yyyy-MM-dd").parse("2015-01-01");
+			old = new SimpleDateFormat("yyyy-MM-dd").parse("2014-11-25");
 		} catch (ParseException e) {
 			throw new RuntimeException(e);
 		}

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -11,6 +11,7 @@
 import com.dianping.cat.app.AppSpeedDataDao;
 import com.dianping.cat.config.app.AppComparisonConfigManager;
 import com.dianping.cat.config.app.AppConfigManager;
+import com.dianping.cat.config.app.AppSpeedConfigManager;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.core.config.ConfigDao;
@@ -217,8 +218,8 @@ public List<Component> defineComponents() {
 		      .req(MailRecordDao.class, AppDataComparisonNotifier.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, AppDatabasePruner.ID, AppDatabasePruner.class).req(AppCommandDataDao.class,
-		      AppSpeedDataDao.class));
-
+		      AppSpeedDataDao.class,AppSpeedConfigManager.class,AppSpeedConfigManager.class));
+		
 		all.add(C(ReportFacade.class));
 
 		return all;

File: cat-home/src/main/java/com/dianping/cat/report/task/database/AppDatabasePruner.java
Patch:
@@ -105,7 +105,6 @@ public boolean pruneDatabase(int months) {
 		boolean speed = pruneAppSpeedData(period);
 
 		return command && speed;
-
 	}
 
 	public Date queryPeriod(int months) {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorEntity.java
Patch:
@@ -1,6 +1,5 @@
 package com.dianping.cat.broker.api.page;
 
-import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
 
 public class MonitorEntity {
@@ -73,7 +72,7 @@ public void setIp(String ip) {
 	public MonitorEntity setTargetUrl(String targetUrl) {
 		try {
 			m_targetUrl = URLDecoder.decode(targetUrl, "utf-8");
-		} catch (UnsupportedEncodingException e) {
+		} catch (Exception e) {
 			m_targetUrl = targetUrl;
 		}
 		return this;

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -11,6 +11,7 @@
 import com.dianping.cat.app.AppSpeedDataDao;
 import com.dianping.cat.config.app.AppComparisonConfigManager;
 import com.dianping.cat.config.app.AppConfigManager;
+import com.dianping.cat.config.app.AppSpeedConfigManager;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.core.config.ConfigDao;
@@ -217,8 +218,8 @@ public List<Component> defineComponents() {
 		      .req(MailRecordDao.class, AppDataComparisonNotifier.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, AppDatabasePruner.ID, AppDatabasePruner.class).req(AppCommandDataDao.class,
-		      AppSpeedDataDao.class));
-
+		      AppSpeedDataDao.class,AppSpeedConfigManager.class,AppSpeedConfigManager.class));
+		
 		all.add(C(ReportFacade.class));
 
 		return all;

File: cat-home/src/main/java/com/dianping/cat/report/task/database/AppDatabasePruner.java
Patch:
@@ -105,7 +105,6 @@ public boolean pruneDatabase(int months) {
 		boolean speed = pruneAppSpeedData(period);
 
 		return command && speed;
-
 	}
 
 	public Date queryPeriod(int months) {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/bucket/impl/DataBucketExecutor.java
Patch:
@@ -97,7 +97,7 @@ public void flush() {
 							proto.setOperator(appData.getOperator());
 							proto.setNetwork(appData.getNetwork());
 							proto.setAppVersion(appData.getVersion());
-							proto.setConnectType(appData.getConnectType());
+							proto.setConnnectType(appData.getConnectType());
 							proto.setCode(appData.getCode());
 							proto.setPlatform(appData.getPlatform());
 							proto.setAccessNumber(appData.getCount());

File: cat-broker/src/test/java/com/dianping/cat/broker/app/InsertTest.java
Patch:
@@ -25,7 +25,7 @@ public void testBatch() throws DalException {
 			command.setAppVersion(i);
 			command.setCity(i);
 			command.setCode(i);
-			command.setConnectType(i);
+			command.setConnnectType(i);
 			command.setCreationDate(new Date());
 			command.setPeriod(new Date());
 			command.setPlatform(i);
@@ -53,7 +53,7 @@ public void test() throws DalException {
 			command.setAppVersion(i);
 			command.setCity(i);
 			command.setCode(i);
-			command.setConnectType(i);
+			command.setConnnectType(i);
 			command.setCreationDate(new Date());
 			command.setPeriod(new Date());
 			command.setPlatform(i);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/display/AppGraphCreator.java
Patch:
@@ -142,7 +142,7 @@ private Pair<Integer, String> buildPieChartFieldTitlePair(int command, AppComman
 			Map<Integer, com.dianping.cat.configuration.app.entity.Item> connectTypes = m_appConfigManager
 			      .queryConfigItem(AppConfigManager.CONNECT_TYPE);
 			com.dianping.cat.configuration.app.entity.Item connectType = null;
-			keyValue = data.getConnectType();
+			keyValue = data.getConnnectType();
 
 			if (connectTypes != null && (connectType = connectTypes.get(keyValue)) != null) {
 				title = connectType.getName();

File: cat-home/src/main/java/com/dianping/cat/report/service/app/AppDataService.java
Patch:
@@ -197,7 +197,7 @@ private int queryFieldValue(AppCommandData data, AppDataField field) {
 		case CITY:
 			return data.getCity();
 		case CONNECT_TYPE:
-			return data.getConnectType();
+			return data.getConnnectType();
 		case NETWORK:
 			return data.getNetwork();
 		case PLATFORM:

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionDelegate.java
Patch:
@@ -88,9 +88,9 @@ public boolean createHourlyTask(TransactionReport report) {
 		String domain = report.getDomain();
 
 		if (domain.equals(Constants.ALL)) {
-			return m_taskManager.createTask(report.getStartTime(), domain, TransactionAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
-		}
-		if (m_manager.validateDomain(domain)) {
+			return m_taskManager.createTask(report.getStartTime(), domain, TransactionAnalyzer.ID,
+			      TaskProlicy.ALL_EXCLUED_HOURLY);
+		} else if (m_manager.validateDomain(domain)) {
 			return m_taskManager.createTask(report.getStartTime(), report.getDomain(), TransactionAnalyzer.ID,
 			      TaskProlicy.ALL);
 		} else {

File: cat-core/src/main/java/com/dianping/cat/config/app/AppCommandDataTableProvider.java
Patch:
@@ -37,7 +37,8 @@ public String getPhysicalTableName(Map<String, Object> hints) {
 		Date old = new Date();
 
 		try {
-			old = new SimpleDateFormat("yyyy-MM-dd").parse("2014-11-20");
+			//TODO
+			old = new SimpleDateFormat("yyyy-MM-dd").parse("2015-01-01");
 		} catch (ParseException e) {
 			throw new RuntimeException(e);
 		}

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -211,7 +211,7 @@ public boolean storeById(String id, String report) throws IOException {
 
 			m_writeDataFileLength += num.length + 1 + length + 1;
 			m_writeIndexFile.write(data);
-			m_writeDataFile.flush();
+			m_writeIndexFile.flush();
 			m_idToOffsets.put(id, offset);
 			return true;
 		} finally {

File: cat-core/src/test/java/com/dianping/cat/ServerConfigManagerTest.java
Patch:
@@ -33,9 +33,7 @@ public void test() throws Exception {
 		Assert.assertEquals("hdfs://10.1.77.86/user/cat", manager.getHdfsServerUri(id));
 		Assert.assertEquals(6, manager.getHdfsProperties().size());
 		Assert.assertEquals(0, manager.getLongConfigDomains().size());
-		Assert.assertEquals(1000, manager.getLongSqlDefaultThreshold());
 		Assert.assertEquals(100, manager.getLongUrlDefaultThreshold());
-		Assert.assertEquals("target/bucket", manager.getStorageLocalBaseDir());
 		Assert.assertEquals(true, manager.isClientCall("Call"));
 		Assert.assertEquals(true, manager.isHdfsOn());
 		Assert.assertEquals(true, manager.isInitialized());

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -209,7 +209,7 @@ public List<Component> defineComponents() {
 		all.add(C(ReportTaskBuilder.class, NotifyTaskBuilder.ID, NotifyTaskBuilder.class)
 		      .req(ReportRender.class, SenderManager.class)//
 		      .req(ReportServiceManager.class, ScheduledManager.class)//
-		      .req(MailRecordDao.class, AppDataComparisonNotifier.class));
+		      .req(MailRecordDao.class, AppDataComparisonNotifier.class, ServerConfigManager.class));
 
 		all.add(C(ReportFacade.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/page/database/GraphCreator.java
Patch:
@@ -58,8 +58,7 @@ private Map<String, double[]> buildGraphData(MetricReport metricReport) {
 		for (Entry<String, double[]> entry : datas.entrySet()) {
 			String key = entry.getKey();
 
-			//TODO 定义规则
-			if (key.endsWith(MetricType.AVG.name())) {
+			if (key.endsWith(MetricType.SUM.name())) {
 				putKey(datas, values, key);
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -126,10 +126,10 @@ private void buildDependencyDashboard(Model model, Payload payload, Date reportT
 		Map<String, List<TopologyNode>> nodes = dashboardGraph.getNodes();
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHH");
 		String minute = String.valueOf(parseQueryMinute(payload));
-		
+
 		for (List<TopologyNode> n : nodes.values()) {
 			for (TopologyNode node : n) {
-				String domain = payload.getDomain();
+				String domain = node.getId();
 				String link = String.format("?op=dependencyGraph&minute=%s&domain=%s&date=%s", minute, domain,
 				      sdf.format(new Date(payload.getDate())));
 				node.setLink(link);

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/ScheduledManager.java
Patch:
@@ -64,9 +64,9 @@ public Collection<ScheduledReport> queryScheduledReports() {
 	public void queryScheduledReports(Model model, String userName) {
 		List<UserReportSubState> userRules = new ArrayList<UserReportSubState>();
 		try {
-			Collection<ScheduledReport> lists = m_reports.values();
+			Collection<ScheduledReport> reports = m_reports.values();
 
-			for (ScheduledReport report : lists) {
+			for (ScheduledReport report : reports) {
 				if (m_serverConfigManager.validateDomain(report.getDomain())) {
 					int scheduledReportId = report.getId();
 					UserReportSubState userSubState = new UserReportSubState(report);

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -126,10 +126,10 @@ private void buildDependencyDashboard(Model model, Payload payload, Date reportT
 		Map<String, List<TopologyNode>> nodes = dashboardGraph.getNodes();
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHH");
 		String minute = String.valueOf(parseQueryMinute(payload));
-		
+
 		for (List<TopologyNode> n : nodes.values()) {
 			for (TopologyNode node : n) {
-				String domain = payload.getDomain();
+				String domain = node.getId();
 				String link = String.format("?op=dependencyGraph&minute=%s&domain=%s&date=%s", minute, domain,
 				      sdf.format(new Date(payload.getDate())));
 				node.setLink(link);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/display/AppGraphCreator.java
Patch:
@@ -22,6 +22,7 @@
 
 public class AppGraphCreator {
 
+	@Inject
 	private AppDataService m_AppDataService;
 
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/app/display/AppGraphCreator.java
Patch:
@@ -22,6 +22,7 @@
 
 public class AppGraphCreator {
 
+	@Inject
 	private AppDataService m_AppDataService;
 
 	@Inject

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -211,7 +211,7 @@ public boolean storeById(String id, String report) throws IOException {
 
 			m_writeDataFileLength += num.length + 1 + length + 1;
 			m_writeIndexFile.write(data);
-			m_writeDataFile.flush();
+			m_writeIndexFile.flush();
 			m_idToOffsets.put(id, offset);
 			return true;
 		} finally {

File: cat-home/src/main/java/com/dianping/cat/report/page/database/GraphCreator.java
Patch:
@@ -58,8 +58,7 @@ private Map<String, double[]> buildGraphData(MetricReport metricReport) {
 		for (Entry<String, double[]> entry : datas.entrySet()) {
 			String key = entry.getKey();
 
-			//TODO 定义规则
-			if (key.endsWith(MetricType.AVG.name())) {
+			if (key.endsWith(MetricType.SUM.name())) {
 				putKey(datas, values, key);
 			}
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -72,7 +72,7 @@ public TopReport getReport(String domain) {
 
 		for (String name : domains) {
 			try {
-				if (m_serverConfigManager.validateDomain(name) || Constants.FRONT_END.equals(domain)) {
+				if (m_serverConfigManager.validateDomain(name) || Constants.FRONT_END.equals(name)) {
 					TransactionReport report = m_transactionAnalyzer.getRawReport(name);
 
 					transactionReportVisitor.visitTransactionReport(report);
@@ -94,7 +94,7 @@ public TopReport getReport(String domain) {
 
 		for (String name : domains) {
 			try {
-				if (m_serverConfigManager.validateDomain(name) || Constants.FRONT_END.equals(domain)) {
+				if (m_serverConfigManager.validateDomain(name) || Constants.FRONT_END.equals(name)) {
 					ProblemReport report = m_problemAnalyzer.getReport(name);
 
 					problemReportVisitor.visitProblemReport(report);

File: cat-core/src/main/java/com/dianping/cat/build/AppDatabaseConfigurator.java
Patch:
@@ -6,7 +6,7 @@
 import org.unidal.dal.jdbc.configuration.AbstractJdbcResourceConfigurator;
 import org.unidal.lookup.configuration.Component;
 
-final public class AppDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
+public final class AppDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    @Override
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();

File: cat-core/src/main/java/com/dianping/cat/service/app/command/AppDataCommandTableProvider.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.config.app;
+package com.dianping.cat.service.app.command;
 
 import java.util.Map;
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.report.task.alert.app.AppAlert;
 import com.dianping.cat.report.task.alert.business.BusinessAlert;
 import com.dianping.cat.report.task.alert.exception.ExceptionAlert;
+import com.dianping.cat.report.task.alert.exception.FrontEndExceptionAlert;
 import com.dianping.cat.report.task.alert.heartbeat.HeartbeatAlert;
 import com.dianping.cat.report.task.alert.network.NetworkAlert;
 import com.dianping.cat.report.task.alert.system.SystemAlert;
@@ -59,6 +60,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 			NetworkAlert networkAlert = ctx.lookup(NetworkAlert.class);
 			SystemAlert systemAlert = ctx.lookup(SystemAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
+			FrontEndExceptionAlert frontEndExceptionAlert = ctx.lookup(FrontEndExceptionAlert.class);
 			HeartbeatAlert heartbeatAlert = ctx.lookup(HeartbeatAlert.class);
 			ProjectUpdateTask productUpdateTask = ctx.lookup(ProjectUpdateTask.class);
 			ThirdPartyAlert thirdPartyAlert = ctx.lookup(ThirdPartyAlert.class);
@@ -71,6 +73,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 			Threads.forGroup("cat").start(systemAlert);
 			Threads.forGroup("cat").start(metricAlert);
 			Threads.forGroup("cat").start(exceptionAlert);
+			Threads.forGroup("cat").start(frontEndExceptionAlert);
 			Threads.forGroup("cat").start(heartbeatAlert);
 			Threads.forGroup("cat").start(productUpdateTask);
 			Threads.forGroup("cat").start(thirdPartyAlert);

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -9,7 +9,6 @@
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.config.app.AppComparisonConfigManager;
 import com.dianping.cat.config.app.AppConfigManager;
-import com.dianping.cat.config.app.AppDataService;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.core.config.ConfigDao;
@@ -84,6 +83,7 @@
 import com.dianping.cat.report.task.utilization.UtilizationReportBuilder;
 import com.dianping.cat.service.HostinfoService;
 import com.dianping.cat.service.ProjectService;
+import com.dianping.cat.service.app.command.AppDataService;
 import com.dianping.cat.system.config.ExceptionConfigManager;
 import com.dianping.cat.system.config.NetGraphConfigManager;
 import com.dianping.cat.system.config.RouterConfigManager;

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Action.java
Patch:
@@ -17,7 +17,9 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	HOURLY_CRASH_LOG("crashLog"),
 
-	HISTORY_CRASH_LOG("historyCrashLog");
+	HISTORY_CRASH_LOG("historyCrashLog"),
+
+	SPEED("speed");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/JspFile.java
Patch:
@@ -9,7 +9,9 @@ public enum JspFile {
 
 	APP_FETCH_DATA("/jsp/report/app/fetchData.jsp"),
 
-	CRASH_LOG("/jsp/report/app/crashLog.jsp");
+	CRASH_LOG("/jsp/report/app/crashLog.jsp"),
+	
+	SPEED("/jsp/report/app/speed.jsp");
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/JspViewer.java
Patch:
@@ -24,6 +24,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case HOURLY_CRASH_LOG:
 		case HISTORY_CRASH_LOG:
 			return JspFile.CRASH_LOG.getPath();
+		case SPEED:
+			return JspFile.SPEED.getPath();
 		}
 
 		throw new RuntimeException("Unknown action: " + action);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/graph/Sorter.java
Patch:
@@ -2,8 +2,8 @@
 
 import java.util.Comparator;
 
-import com.dianping.cat.config.app.AppDataService;
-import com.dianping.cat.config.app.AppDataSpreadInfo;
+import com.dianping.cat.service.app.command.AppDataService;
+import com.dianping.cat.service.app.command.AppDataSpreadInfo;
 
 public class Sorter {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Payload.java
Patch:
@@ -19,7 +19,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private ReportPage m_page;
 
 	@FieldMeta("project")
-	private String m_projectName;
+	private String m_projectName = "All";
 
 	@FieldMeta("remote")
 	private String m_remoteIp;

File: cat-home/src/main/java/com/dianping/cat/report/page/top/TopMetric.java
Patch:
@@ -109,9 +109,7 @@ public TopMetric setStart(Date start) {
 	public void visitDomain(Domain domain) {
 		m_currentDomain = domain.getName();
 
-		if (m_excludedDomains == null) {
-			super.visitDomain(domain);
-		} else if (!m_excludedDomains.contains(m_currentDomain)) {
+		if (m_excludedDomains == null || !m_excludedDomains.contains(m_currentDomain)) {
 			super.visitDomain(domain);
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/web/WebAlert.java
Patch:
@@ -18,7 +18,6 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.Monitor;
-import com.dianping.cat.config.app.AppDataService;
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.configuration.url.pattern.entity.PatternItem;
 import com.dianping.cat.consumer.metric.model.entity.MetricItem;
@@ -35,6 +34,7 @@
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
+import com.dianping.cat.service.app.command.AppDataService;
 
 public class WebAlert extends BaseAlert implements Task {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/AppDataComparisonNotifier.java
Patch:
@@ -17,8 +17,6 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.config.app.AppComparisonConfigManager;
 import com.dianping.cat.config.app.AppConfigManager;
-import com.dianping.cat.config.app.AppDataService;
-import com.dianping.cat.config.app.QueryEntity;
 import com.dianping.cat.configuration.app.comparison.entity.AppComparison;
 import com.dianping.cat.configuration.app.comparison.entity.AppComparisonConfig;
 import com.dianping.cat.configuration.app.comparison.entity.Item;
@@ -29,6 +27,8 @@
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
 import com.dianping.cat.report.task.notify.render.AppDataComparisonRender;
+import com.dianping.cat.service.app.command.AppDataService;
+import com.dianping.cat.service.app.command.CommandQueryEntity;
 import com.site.helper.Splitters;
 import com.site.lookup.util.StringUtils;
 
@@ -224,7 +224,7 @@ private double queryOneDayDelay4Command(Date yesterday, String url) {
 		Integer command = m_appConfigManager.getCommands().get(url);
 
 		if (command != null) {
-			QueryEntity entity = new QueryEntity(yesterdayStr + ";" + command + ";;;;;;;;;");
+			CommandQueryEntity entity = new CommandQueryEntity(yesterdayStr + ";" + command + ";;;;;;;;;");
 
 			return m_appDataService.queryOneDayDelayAvg(entity);
 		} else {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -95,6 +95,8 @@ public enum JspFile {
 
 	APP_CODE_UPDATE("/jsp/system/appConfig/codeUpdate.jsp"),
 
+	APP_SPEED_UPDATE("/jsp/system/appConfig/speedUpdate.jsp"),
+
 	APP_UPDATE("/jsp/system/appConfig/appUpdate.jsp"),
 
 	APP_RULE("/jsp/system/appRule/appRule.jsp"),

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -76,8 +76,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Payload payload = ctx.getPayload();
 		HttpServletRequest request = ctx.getHttpServletRequest();
 		HttpServletResponse response = ctx.getHttpServletResponse();
-		// String userIp = m_util.getRemoteIp(request);
-		String userIp = "23.100.46.198";
+		String userIp = m_util.getRemoteIp(request);
 		String version = payload.getVersion();
 		boolean success = true;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -95,6 +95,8 @@ public enum JspFile {
 
 	APP_CODE_UPDATE("/jsp/system/appConfig/codeUpdate.jsp"),
 
+	APP_SPEED_UPDATE("/jsp/system/appConfig/speedUpdate.jsp"),
+
 	APP_UPDATE("/jsp/system/appConfig/appUpdate.jsp"),
 
 	APP_RULE("/jsp/system/appRule/appRule.jsp"),

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -224,6 +224,7 @@ private void updateCrossReport(CrossReport report, Transaction t, CrossInfo info
 		Local local = report.findOrCreateLocal(localIp);
 		Remote remote = local.findOrCreateRemote(remoteIp);
 
+		report.addIp(localIp);
 		remote.setRole(role);
 		remote.setApp(info.getApp());
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/heartbeat/HeartbeatReportMergerTest.java
Patch:
@@ -20,8 +20,6 @@ public void testHaertbeatReportMerge() throws Exception {
 		reportOld.accept(merger);
 		reportNew.accept(merger);
 
-		Assert.assertEquals("Source report is changed!", newXml.replace("\r", ""), reportNew.toString().replace("\r", ""));
-		Assert.assertEquals("Source report is changed!", oldXml.replace("\r", ""), reportOld.toString().replace("\r", ""));
 		Assert.assertEquals("Check the merge result!", expected.replace("\r", ""), merger.getHeartbeatReport().toString()
 		      .replace("\r", ""));
 

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -164,7 +164,8 @@ private List<Component> defineConfigComponents() {
 		all.add(C(ExceptionConfigManager.class).req(ConfigDao.class, ContentFetcher.class));
 		all.add(C(DomainGroupConfigManager.class).req(ConfigDao.class, ContentFetcher.class));
 		all.add(C(BugConfigManager.class).req(ConfigDao.class, ContentFetcher.class));
-		all.add(C(NetworkRuleConfigManager.class).req(ConfigDao.class, UserDefinedRuleManager.class, ContentFetcher.class));
+		all.add(C(NetworkRuleConfigManager.class)
+		      .req(ConfigDao.class, UserDefinedRuleManager.class, ContentFetcher.class));
 		all.add(C(BusinessRuleConfigManager.class).req(ConfigDao.class, MetricConfigManager.class,
 		      UserDefinedRuleManager.class, ContentFetcher.class));
 		all.add(C(AppRuleConfigManager.class).req(ConfigDao.class, UserDefinedRuleManager.class, ContentFetcher.class));

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -132,7 +132,8 @@ public List<Component> defineComponents() {
 		      .req(GraphDao.class, ReportServiceManager.class) //
 		      .req(HeartbeatGraphCreator.class));
 
-		all.add(C(ReportTaskBuilder.class, BugReportBuilder.ID, BugReportBuilder.class).req(ReportServiceManager.class));
+		all.add(C(ReportTaskBuilder.class, BugReportBuilder.ID, BugReportBuilder.class).req(ReportServiceManager.class,
+		      ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, ServiceReportBuilder.ID, ServiceReportBuilder.class).req(
 		      ReportServiceManager.class, HostinfoService.class));
@@ -153,7 +154,7 @@ public List<Component> defineComponents() {
 		      ReportServiceManager.class, ExceptionConfigManager.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, HeavyReportBuilder.ID, HeavyReportBuilder.class).req(
-		      ReportServiceManager.class));
+		      ReportServiceManager.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, UtilizationReportBuilder.ID, UtilizationReportBuilder.class)
 		      .req(ReportServiceManager.class, TransactionMergeManager.class, ServerConfigManager.class,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/JarReportService.java
Patch:
@@ -47,8 +47,7 @@ public JarReport queryHourlyReport(String domain, Date start, Date end) {
 		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
-				reports = m_hourlyReportDao.findAllByDomainNamePeriod(start, domain, name,
-				      HourlyReportEntity.READSET_FULL);
+				reports = m_hourlyReportDao.findAllByDomainNamePeriod(start, domain, name, HourlyReportEntity.READSET_FULL);
 			} catch (DalException e) {
 				Cat.logError(e);
 			}
@@ -63,7 +62,6 @@ public JarReport queryHourlyReport(String domain, Date start, Date end) {
 			}
 		}
 		return new JarReport();
-
 	}
 
 	@Override

File: cat-home/src/test/java/com/dianping/cat/report/task/jar/JarReportBuilderTest.java
Patch:
@@ -16,7 +16,7 @@ public class JarReportBuilderTest  extends ComponentTestCase{
 	public void test() throws ParseException{
 		JarReportBuilder builder = (JarReportBuilder)lookup(ReportTaskBuilder.class,JarReportBuilder.ID);
 		
-		Date period = new SimpleDateFormat("yyyy-MM-dd HH").parse("2014-11-14 13");
+		Date period = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse("2014-11-14 13:00:00");
 		builder.buildHourlyTask(Constants.REPORT_JAR, "cat", period);
 	}
 }

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -224,6 +224,7 @@ private void updateCrossReport(CrossReport report, Transaction t, CrossInfo info
 		Local local = report.findOrCreateLocal(localIp);
 		Remote remote = local.findOrCreateRemote(remoteIp);
 
+		report.addIp(localIp);
 		remote.setRole(role);
 		remote.setApp(info.getApp());
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/heartbeat/HeartbeatReportMergerTest.java
Patch:
@@ -20,8 +20,6 @@ public void testHaertbeatReportMerge() throws Exception {
 		reportOld.accept(merger);
 		reportNew.accept(merger);
 
-		Assert.assertEquals("Source report is changed!", newXml.replace("\r", ""), reportNew.toString().replace("\r", ""));
-		Assert.assertEquals("Source report is changed!", oldXml.replace("\r", ""), reportOld.toString().replace("\r", ""));
 		Assert.assertEquals("Check the merge result!", expected.replace("\r", ""), merger.getHeartbeatReport().toString()
 		      .replace("\r", ""));
 

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -41,9 +41,7 @@ public abstract class BaseRuleConfigManager {
 
 	protected Rule copyRule(Rule rule) {
 		try {
-			Rule result = new Rule(rule.getId());
-
-			return DefaultSaxParser.parseEntity(Rule.class, result.toString());
+			return DefaultSaxParser.parseEntity(Rule.class, rule.toString());
 		} catch (Exception e) {
 			Cat.logError(e);
 			return null;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemDelegate.java
Patch:
@@ -97,7 +97,7 @@ public boolean createHourlyTask(ProblemReport report) {
 		if (m_manager.validateDomain(domain)) {
 			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL);
 		} else if (m_manager.isCrashLog(domain)) {
-			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL);
+			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
 		} else {
 			return true;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -136,7 +136,7 @@ private HeartbeatReport generateReport(String domain, long date) {
 	public String getName() {
 		return AlertType.HeartBeat.getName();
 	}
-
+	
 	private void processDomain(String domain) {
 		List<Config> configs = m_ruleConfigManager.queryAllConfigsByGroup(domain);
 		int minute = getAlreadyMinute();
@@ -197,6 +197,8 @@ private void processDomain(String domain) {
 			}
 		}
 	}
+	
+	
 
 	private void processMeitrc(String domain, String ip, String metric, double[] values) {
 		try {

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -32,7 +32,7 @@ public class BusinessRuleConfigManager extends BaseRuleConfigManager implements
 	private ContentFetcher m_getter;
 
 	private static final String CONFIG_NAME = "businessRuleConfig";
-
+	
 	private com.dianping.cat.home.rule.entity.Config buildDefaultConfig() {
 		com.dianping.cat.home.rule.entity.Config config = new com.dianping.cat.home.rule.entity.Config();
 		config.setStarttime("00:00");
@@ -110,7 +110,6 @@ public void initialize() throws InitializationException {
 		}
 	}
 
-	@Override
 	public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String product, String metricKey, MetricType type) {
 		Rule rule = m_config.getRules().get(metricKey);
 		List<com.dianping.cat.home.rule.entity.Config> configs = new ArrayList<com.dianping.cat.home.rule.entity.Config>();
@@ -147,7 +146,7 @@ public Rule queryRule(String product, String metricKey) {
 		Rule rule = m_config.getRules().get(metricKey);
 
 		if (rule != null) {
-			return copyRuleWithDeepCopyConditions(rule);
+			return copyRule(rule);
 		} else {
 			return buildDefaultRule(product, metricKey);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -138,7 +138,7 @@ public String getName() {
 	}
 
 	private void processDomain(String domain) {
-		List<Config> configs = m_ruleConfigManager.queryConfigsByGroup(domain);
+		List<Config> configs = m_ruleConfigManager.queryAllConfigsByGroup(domain);
 		int minute = getAlreadyMinute();
 		int maxMinute = queryCheckMinuteAndConditions(configs).getKey();
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -29,8 +29,6 @@
 import com.dianping.cat.core.dal.HourlyReportContentDao;
 import com.dianping.cat.core.dal.HourlyReportDao;
 import com.dianping.cat.service.DefaultReportManager;
-import com.dianping.cat.service.HostinfoService;
-import com.dianping.cat.service.ProjectService;
 import com.dianping.cat.service.ReportDelegate;
 import com.dianping.cat.service.ReportManager;
 import com.dianping.cat.storage.BucketManager;
@@ -87,7 +85,7 @@ private Collection<Component> defineDependencyComponents() {
 
 		all.add(C(DatabaseParser.class));
 		all.add(C(MessageAnalyzer.class, ID, DependencyAnalyzer.class).is(PER_LOOKUP).req(ReportManager.class, ID)
-		      .req(ServerConfigManager.class, HostinfoService.class, ProjectService.class, DatabaseParser.class));
+		      .req(ServerConfigManager.class, DatabaseParser.class));
 		all.add(C(ReportManager.class, ID, DefaultReportManager.class) //
 		      .req(ReportDelegate.class, ID) //
 		      .req(BucketManager.class, HourlyReportDao.class, HourlyReportContentDao.class) //

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/cross/CrossAnalyzerTest.java
Patch:
@@ -37,7 +37,6 @@ public void setUp() throws Exception {
 		m_timestamp = currentTimeMillis - currentTimeMillis % (3600 * 1000);
 
 		m_analyzer = (CrossAnalyzer) lookup(MessageAnalyzer.class, CrossAnalyzer.ID);
-		m_analyzer.setCrossAppSwitch(new CrossAppSwitch().setTurnOn(true));
 		
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm");
 		Date date = sdf.parse("20120101 00:00");

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/dependency/DependencyReportMergerTest.java
Patch:
@@ -10,8 +10,8 @@
 public class DependencyReportMergerTest {
 	@Test
 	public void testDependencyReportMerge() throws Exception {
-		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_analyzer.xml"), "utf-8");
-		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_analyzer.xml"), "utf-8");
+		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_new.xml"), "utf-8");
+		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_new.xml"), "utf-8");
 		DependencyReport reportOld = DefaultSaxParser.parse(oldXml);
 		DependencyReport reportNew = DefaultSaxParser.parse(newXml);
 		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_analyzer_merger.xml"), "utf-8");

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemDelegate.java
Patch:
@@ -58,7 +58,6 @@ public void beforeSave(Map<String, ProblemReport> reports) {
 		}
 	}
 
-
 	@Override
 	public byte[] buildBinary(ProblemReport report) {
 		return DefaultNativeBuilder.build(report);
@@ -97,6 +96,8 @@ public boolean createHourlyTask(ProblemReport report) {
 		}
 		if (m_manager.validateDomain(domain)) {
 			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL);
+		} else if (m_manager.isCrashLog(domain)) {
+			return m_taskManager.createTask(report.getStartTime(), domain, ProblemAnalyzer.ID, TaskProlicy.ALL);
 		} else {
 			return true;
 		}

File: cat-core/src/main/java/com/dianping/cat/service/ProjectService.java
Patch:
@@ -232,7 +232,6 @@ public void run() {
 		@Override
 		public void shutdown() {
 		}
-
 	}
 
 }

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -36,7 +36,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 		ServerConfigManager serverConfigManager = ctx.lookup(ServerConfigManager.class);
 
 		ctx.lookup(MessageConsumer.class);
-		if (!serverConfigManager.isLocalMode() && !serverConfigManager.isLocalMode()) {
+		if (!serverConfigManager.isLocalMode()) {
 			ConfigReloadTask configReloadTask = ctx.lookup(ConfigReloadTask.class);
 			UploaderAndCleaner uploader = ctx.lookup(UploaderAndCleaner.class);
 

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -149,7 +149,7 @@ public List<Component> defineComponents() {
 		      ReportServiceManager.class, RouterConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, AlertReportBuilder.ID, AlertReportBuilder.class).req(
-		      ReportServiceManager.class, ExceptionConfigManager.class));
+		      ReportServiceManager.class, ExceptionConfigManager.class, ServerConfigManager.class));
 
 		all.add(C(ReportTaskBuilder.class, HeavyReportBuilder.ID, HeavyReportBuilder.class).req(
 		      ReportServiceManager.class));

File: cat-home/src/main/java/com/dianping/cat/report/task/router/RouterConfigBuilder.java
Patch:
@@ -208,8 +208,6 @@ private void processMainServer(Map<Server, Long> servers, RouterConfig routerCon
 
 				if (oldValue != null) {
 					servers.put(server, oldValue + value);
-				} else {
-					servers.put(server, value);
 				}
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -160,6 +160,9 @@ private void redirect(Context ctx, Payload payload) {
 		if (url == null || url.length() == 0 || url.equals(loginUrl)) {
 			url = ctx.getRequestContext().getActionUri("");
 		}
+		if (url.indexOf("/cat/s/login") > -1) {
+			url = "/cat/r/home";
+		}
 
 		ctx.redirect(url);
 		ctx.stopProcess();

File: cat-home/src/test/java/com/dianping/cat/report/task/alert/TopReportVisitorTest.java
Patch:
@@ -9,6 +9,7 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.Constants;
+import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
 import com.dianping.cat.home.alert.report.entity.AlertReport;
 import com.dianping.cat.home.dependency.exception.entity.ExceptionExclude;
@@ -29,7 +30,7 @@ public void test() throws Exception {
 		ExceptionConfigMock exceptionConfigManager = new ExceptionConfigMock();
 		AlertReport alertReport = new AlertReport(Constants.CAT);
 		TopReportVisitor visitor = new TopReportVisitor().setReport(alertReport).setExceptionConfigManager(
-				exceptionConfigManager);
+				exceptionConfigManager).setConfigManager(new ServerConfigManager());
 
 		alertReport.setStartTime(topReport.getStartTime());
 		alertReport.setEndTime(topReport.getEndTime());

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/dependency/DependencyReportMergerTest.java
Patch:
@@ -10,8 +10,8 @@
 public class DependencyReportMergerTest {
 	@Test
 	public void testDependencyReportMerge() throws Exception {
-		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_analyzer.xml"), "utf-8");
-		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_analyzer.xml"), "utf-8");
+		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_new.xml"), "utf-8");
+		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_new.xml"), "utf-8");
 		DependencyReport reportOld = DefaultSaxParser.parse(oldXml);
 		DependencyReport reportNew = DefaultSaxParser.parse(newXml);
 		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("dependency_analyzer_merger.xml"), "utf-8");

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/TopReportVisitor.java
Patch:
@@ -1,5 +1,7 @@
 package com.dianping.cat.report.task.alert.exception;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.consumer.top.model.entity.Domain;
 import com.dianping.cat.consumer.top.model.entity.Error;
@@ -23,6 +25,7 @@ public class TopReportVisitor extends BaseVisitor {
 
 	private static final String TOTAL_EXCEPTION_ALERT = "TotalExceptionAlert";
 
+	@Inject
 	private ServerConfigManager m_configManager;
 
 	public TopReportVisitor setExceptionConfigManager(ExceptionConfigManager exceptionConfigManager) {

File: cat-home/src/test/java/com/dianping/cat/report/task/alert/TopReportVisitorTest.java
Patch:
@@ -9,6 +9,7 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.Constants;
+import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
 import com.dianping.cat.home.alert.report.entity.AlertReport;
 import com.dianping.cat.home.dependency.exception.entity.ExceptionExclude;
@@ -29,7 +30,7 @@ public void test() throws Exception {
 		ExceptionConfigMock exceptionConfigManager = new ExceptionConfigMock();
 		AlertReport alertReport = new AlertReport(Constants.CAT);
 		TopReportVisitor visitor = new TopReportVisitor().setReport(alertReport).setExceptionConfigManager(
-				exceptionConfigManager);
+				exceptionConfigManager).setConfigManager(new ServerConfigManager());
 
 		alertReport.setStartTime(topReport.getStartTime());
 		alertReport.setEndTime(topReport.getEndTime());

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -10,6 +10,7 @@
 import com.dianping.cat.config.aggregation.AggregationConfigManager;
 import com.dianping.cat.config.app.AppConfigManager;
 import com.dianping.cat.config.app.AppDataService;
+import com.dianping.cat.config.content.ContentFetcher;
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
@@ -162,7 +163,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(DecoratorManager.class));
 
-		all.add(C(AlertPolicyManager.class).req(ConfigDao.class));
+		all.add(C(AlertPolicyManager.class).req(ConfigDao.class, ContentFetcher.class));
 
 		all.add(C(Spliter.class, MailSpliter.ID, MailSpliter.class));
 

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -188,7 +188,7 @@ public List<Component> defineComponents() {
 		      .req(CapacityUpdater.class, MonthlyCapacityUpdater.ID, "m_monthlyUpdater"));
 
 		all.add(C(ReportTaskBuilder.class, HighLoadReportBuilder.ID, HighLoadReportBuilder.class)//
-		      .req(ReportServiceManager.class));
+		      .req(ReportServiceManager.class, ProjectService.class));
 
 		all.add(C(ReportRender.class, ReportRenderImpl.class));
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -36,7 +36,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 		ServerConfigManager serverConfigManager = ctx.lookup(ServerConfigManager.class);
 
 		ctx.lookup(MessageConsumer.class);
-		if (!serverConfigManager.isLocalMode() && !serverConfigManager.isLocalMode()) {
+		if (!serverConfigManager.isLocalMode()) {
 			ConfigReloadTask configReloadTask = ctx.lookup(ConfigReloadTask.class);
 			UploaderAndCleaner uploader = ctx.lookup(UploaderAndCleaner.class);
 

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -160,6 +160,9 @@ private void redirect(Context ctx, Payload payload) {
 		if (url == null || url.length() == 0 || url.equals(loginUrl)) {
 			url = ctx.getRequestContext().getActionUri("");
 		}
+		if (url.indexOf("/cat/s/login") > -1) {
+			url = "/cat/r/home";
+		}
 
 		ctx.redirect(url);
 		ctx.stopProcess();

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -56,7 +56,7 @@ public List<Component> defineComponents() {
 	private Collection<Component> defineMetricComponents() {
 		final List<Component> all = new ArrayList<Component>();
 
-		all.add(C(ContentGetter.class).req(DefaultContentGetter.class));
+		all.add(C(ContentGetter.class, DefaultContentGetter.class));
 		all.add(C(ProductLineConfigManager.class).req(ConfigDao.class, ContentGetter.class));
 		all.add(C(MetricConfigManager.class).req(ConfigDao.class, ProductLineConfigManager.class, ContentGetter.class));
 		all.add(C(MessageAnalyzer.class, MetricAnalyzer.ID, MetricAnalyzer.class).is(PER_LOOKUP) //

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -57,7 +57,7 @@ public List<Component> defineComponents() {
 		all.add(C(TaskManager.class).req(TaskDao.class));
 		all.add(C(ServerConfigManager.class));
 		all.add(C(ServerStatisticManager.class));
-		all.add(C(ContentGetter.class).req(DefaultContentGetter.class));
+		all.add(C(ContentGetter.class, DefaultContentGetter.class));
 
 		all.add(C(MessagePathBuilder.class, DefaultMessagePathBuilder.class));
 

File: cat-core/src/main/java/com/dianping/cat/ServerConfigManager.java
Patch:
@@ -127,7 +127,6 @@ public String getHdfsBaseDir(String id) {
 				}
 			}
 		}
-
 		return null;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/router/RouterConfigBuilder.java
Patch:
@@ -208,8 +208,6 @@ private void processMainServer(Map<Server, Long> servers, RouterConfig routerCon
 
 				if (oldValue != null) {
 					servers.put(server, oldValue + value);
-				} else {
-					servers.put(server, value);
 				}
 			}
 		}

File: cat-client/src/main/java/com/dianping/cat/configuration/NetworkInterfaceManager.java
Patch:
@@ -68,6 +68,8 @@ private void load() {
 											local = address;
 										}
 									}
+								} else {
+									local = address;
 								}
 							}
 						}

File: cat-home/src/test/java/com/dianping/cat/demo/TestCrashLog.java
Patch:
@@ -51,18 +51,18 @@ public void test() throws InterruptedException {
 	}
 
 	private String getLevel(String platform, int index) {
-		return platform + "level" + new Random().nextInt(20);
+		return platform + "Level" + new Random().nextInt(20);
 	}
 
 	private String getModule(String platform, int index) {
-		return platform + "module" + new Random().nextInt(20);
+		return platform + "Module" + new Random().nextInt(20);
 	}
 
 	private String getPlateform(String platform, int index) {
 		return platform + new Random().nextInt(20);
 	}
 
 	private String getVersion(String platform, int index) {
-		return platform + "version" + new Random().nextInt(20);
+		return platform + "Version" + new Random().nextInt(20);
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/demo/TestCrashLog.java
Patch:
@@ -51,18 +51,18 @@ public void test() throws InterruptedException {
 	}
 
 	private String getLevel(String platform, int index) {
-		return platform + "level" + new Random().nextInt(20);
+		return platform + "Level" + new Random().nextInt(20);
 	}
 
 	private String getModule(String platform, int index) {
-		return platform + "module" + new Random().nextInt(20);
+		return platform + "Module" + new Random().nextInt(20);
 	}
 
 	private String getPlateform(String platform, int index) {
 		return platform + new Random().nextInt(20);
 	}
 
 	private String getVersion(String platform, int index) {
-		return platform + "version" + new Random().nextInt(20);
+		return platform + "Version" + new Random().nextInt(20);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Payload.java
Patch:
@@ -119,7 +119,7 @@ public QueryEntity getQueryEntity2() {
 		if (m_query2 != null && m_query2.length() > 0) {
 			return new QueryEntity(m_query2);
 		} else {
-			return new QueryEntity(m_showActivity);
+			return null;
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -23,7 +23,7 @@ public class FrontEndExceptionDecorator extends ProjectDecorator implements Init
 
 	public Configuration m_configuration;
 
-	protected DateFormat m_format = new SimpleDateFormat("yyyyMMddHH");
+	protected DateFormat m_linkFormat = new SimpleDateFormat("yyyyMMddHH");
 
 	@Override
 	public String buildContactInfo(String domainName) {
@@ -53,6 +53,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 		map.put("domain", domain);
 		map.put("content", alert.getContent());
 		map.put("date", m_format.format(alert.getDate()));
+		map.put("linkDate", m_linkFormat.format(alert.getDate()));
 		map.put("contactInfo", contactInfo);
 
 		return map;

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Payload.java
Patch:
@@ -119,7 +119,7 @@ public QueryEntity getQueryEntity2() {
 		if (m_query2 != null && m_query2.length() > 0) {
 			return new QueryEntity(m_query2);
 		} else {
-			return new QueryEntity(m_showActivity);
+			return null;
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -23,7 +23,7 @@ public class FrontEndExceptionDecorator extends ProjectDecorator implements Init
 
 	public Configuration m_configuration;
 
-	protected DateFormat m_format = new SimpleDateFormat("yyyyMMddHH");
+	protected DateFormat m_linkFormat = new SimpleDateFormat("yyyyMMddHH");
 
 	@Override
 	public String buildContactInfo(String domainName) {
@@ -53,6 +53,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 		map.put("domain", domain);
 		map.put("content", alert.getContent());
 		map.put("date", m_format.format(alert.getDate()));
+		map.put("linkDate", m_linkFormat.format(alert.getDate()));
 		map.put("contactInfo", contactInfo);
 
 		return map;

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -112,7 +112,7 @@ public List<Component> defineComponents() {
 		all.add(C(Contactor.class, NetworkContactor.ID, NetworkContactor.class).req(ProductLineConfigManager.class,
 		      AlertConfigManager.class));
 
-		all.add(C(Contactor.class, SystemContactor.ID, SystemContactor.class).req(ProductLineConfigManager.class,
+		all.add(C(Contactor.class, SystemContactor.ID, SystemContactor.class).req(ProjectService.class,
 		      AlertConfigManager.class));
 
 		all.add(C(Contactor.class, ExceptionContactor.ID, ExceptionContactor.class).req(ProjectService.class,

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -70,7 +70,7 @@ private void buildHeartbeatGraphInfo(Model model, DisplayHeartbeat displayHeartb
 		model.setDisksGraph(displayHeartbeat.getDisksGraph());
 		model.setSystemLoadAverageGraph(displayHeartbeat.getSystemLoadAverageGraph());
 		model.setMemoryFreeGraph(displayHeartbeat.getMemoryFreeGraph());
-		model.setExtensionGraph(displayHeartbeat.getDalGraph());
+		model.setExtensionGraph(displayHeartbeat.getExtensionGraph());
 	}
 
 	private void buildHistoryGraph(Model model, Payload payload) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -11,6 +11,7 @@
 import org.unidal.tuple.Pair;
 
 import com.dianping.cat.Cat;
+import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.entity.Machine;
@@ -119,7 +120,8 @@ private Map<String, double[]> generateArgumentMap(Machine machine) {
 	}
 
 	private HeartbeatReport generateReport(String domain, long date) {
-		ModelRequest request = new ModelRequest(domain, date);
+		ModelRequest request = new ModelRequest(domain, date)//
+		      .setProperty("ip", Constants.ALL);
 
 		if (m_service.isEligable(request)) {
 			ModelResponse<HeartbeatReport> response = m_service.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -11,6 +11,7 @@
 import org.unidal.tuple.Pair;
 
 import com.dianping.cat.Cat;
+import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.entity.Machine;
@@ -119,7 +120,8 @@ private Map<String, double[]> generateArgumentMap(Machine machine) {
 	}
 
 	private HeartbeatReport generateReport(String domain, long date) {
-		ModelRequest request = new ModelRequest(domain, date);
+		ModelRequest request = new ModelRequest(domain, date)//
+		      .setProperty("ip", Constants.ALL);
 
 		if (m_service.isEligable(request)) {
 			ModelResponse<HeartbeatReport> response = m_service.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -237,7 +237,7 @@ private Pair<LineChart, List<AppDataSpreadInfo>> buildLineChart(Model model, Pay
 	}
 
 	private void normalize(Model model, Payload payload) {
-		model.setAction(Action.VIEW);
+		model.setAction(payload.getAction());
 		model.setPage(ReportPage.APP);
 		model.setConnectionTypes(m_manager.queryConfigItem(AppConfigManager.CONNECT_TYPE));
 		model.setCities(m_manager.queryConfigItem(AppConfigManager.CITY));

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -237,7 +237,7 @@ private Pair<LineChart, List<AppDataSpreadInfo>> buildLineChart(Model model, Pay
 	}
 
 	private void normalize(Model model, Payload payload) {
-		model.setAction(Action.VIEW);
+		model.setAction(payload.getAction());
 		model.setPage(ReportPage.APP);
 		model.setConnectionTypes(m_manager.queryConfigItem(AppConfigManager.CONNECT_TYPE));
 		model.setCities(m_manager.queryConfigItem(AppConfigManager.CITY));

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -129,7 +129,7 @@ public String getLogicalPath() {
 
 	@Override
 	public void initialize(Class<?> type, String name, Date timestamp) throws IOException {
-		m_baseDir = m_configManager.getHdfsLocalBaseDir("logview");
+		m_baseDir = m_configManager.getHdfsLocalBaseDir("report");
 		m_writeLock = new ReentrantLock();
 		m_readLock = new ReentrantLock();
 

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/UploaderAndCleaner.java
Patch:
@@ -110,7 +110,7 @@ public String getName() {
 	@Override
 	public void initialize() throws InitializationException {
 		m_dumpBaseDir = m_configManager.getHdfsLocalBaseDir("dump");
-		m_reportBaseDir = m_configManager.getHdfsLocalBaseDir("logview");
+		m_reportBaseDir = m_configManager.getHdfsLocalBaseDir("report");
 	}
 
 	private boolean isActive() {

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Payload.java
Patch:
@@ -18,7 +18,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	public Payload() {
 		super(ReportPage.MATRIX);
 	}
-
+	
 	@Override
 	public Action getAction() {
 		return m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -175,7 +175,7 @@ public void add(TransactionName transactionName, EventName eventName, String met
 					m_get += transactionTotalCount;
 					m_missed = m_missed + eventName.getTotalCount();
 					m_hited = 1 - (double) m_missed / m_get;
-				} else if ("mget".equals(method)) {
+				} else if ("mGet".equals(method)) {
 					m_mget += transactionTotalCount;
 				} else if ("add".equals(method)) {
 					m_add += transactionTotalCount;

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -175,7 +175,7 @@ public void add(TransactionName transactionName, EventName eventName, String met
 					m_get += transactionTotalCount;
 					m_missed = m_missed + eventName.getTotalCount();
 					m_hited = 1 - (double) m_missed / m_get;
-				} else if ("mget".equals(method)) {
+				} else if ("mGet".equals(method)) {
 					m_mget += transactionTotalCount;
 				} else if ("add".equals(method)) {
 					m_add += transactionTotalCount;

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/CapacityUpdater.java
Patch:
@@ -11,10 +11,10 @@ public interface CapacityUpdater {
 	public static final int WEEKLY_TYPE = 3;
 
 	public static final int MONTHLY_TYPE = 4;
-	
+
 	public static final double CAPACITY = 15.0;
 
-	public void updateDBCapacity(double capacity) throws DalException;
+	public void updateDBCapacity() throws DalException;
 
 	public String getId();
 

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/TableCapacityService.java
Patch:
@@ -110,7 +110,6 @@ public List<OverloadReport> queryOverloadReports(Date startTime, Date endTime) {
 						report = m_monthlyReportDao.findByPK(reportId, MonthlyReportEntity.READSET_FULL);
 						break;
 					}
-
 					reports.add(generateOverloadReport(report, reportSize, reportType));
 				} catch (DalNotFoundException e) {
 				} catch (Exception ex) {

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Payload.java
Patch:
@@ -101,7 +101,7 @@ public QueryEntity getQueryEntity1() {
 		if (m_query1 != null && m_query1.length() > 0) {
 			return new QueryEntity(m_query1);
 		} else {
-			return new QueryEntity();
+			return new QueryEntity(m_showActivity);
 		}
 	}
 

File: cat-client/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -272,6 +272,7 @@ protected void logRequestPayload(HttpServletRequest req, String type) {
 
 			private void customizeStatus(Transaction t, HttpServletRequest req) {
 				Object catStatus = req.getAttribute(CatConstants.CAT_STATE);
+				
 				if (catStatus != null) {
 					t.setStatus(catStatus.toString());
 				} else {
@@ -281,6 +282,7 @@ private void customizeStatus(Transaction t, HttpServletRequest req) {
 
 			private void customizeUri(Transaction t, HttpServletRequest req) {
 				Object catPageUri = req.getAttribute(CatConstants.CAT_PAGE_URI);
+				
 				if (t instanceof DefaultTransaction && catPageUri instanceof String) {
 					((DefaultTransaction) t).setName(catPageUri.toString());
 				}

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -95,7 +95,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			String type = payload.getType();
 			try {
 				filterCommands(model, payload.isShowActivity());
-				
+
 				LineChart lineChart = m_appGraphCreator.buildLineChart(linechartEntity1, linechartEntity2, type);
 				List<AppDataSpreadInfo> appDataSpreadInfos = m_appDataService.buildAppDataSpreadInfo(linechartEntity1,
 				      field);
@@ -112,7 +112,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				Pair<PieChart, List<PieChartDetailInfo>> pair = m_appGraphCreator.buildPieChart(payload.getQueryEntity1(),
 				      field);
 				List<PieChartDetailInfo> infos = pair.getValue();
-				Collections.sort(infos, new Sorter(sortBy).buildPieChartInfoComparator());
+				Collections.sort(infos, new Sorter().buildPieChartInfoComparator());
 
 				model.setPieChart(pair.getKey());
 				model.setPieChartDetailInfos(infos);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/graph/AppGraphCreator.java
Patch:
@@ -35,7 +35,7 @@ public class AppGraphCreator extends AbstractGraphCreator {
 
 	private double queryMinYlable(final List<Double[]> datas) {
 		double min = Double.MAX_VALUE;
-		
+
 		for (Double[] data : datas) {
 			List<Double> dataList = Arrays.asList(data);
 			double tmp = Collections.min(dataList);
@@ -152,6 +152,7 @@ private Pair<Integer, String> buildPieChartFieldTitlePair(int command, AppDataCo
 			if (connectTypes != null && (connectType = connectTypes.get(keyValue)) != null) {
 				title = connectType.getName();
 			}
+			break;
 		case NETWORK:
 			Map<Integer, com.dianping.cat.configuration.app.entity.Item> networks = m_manager
 			      .queryConfigItem(AppConfigManager.NETWORK);
@@ -195,7 +196,6 @@ private Pair<Integer, Item> buildPieChartItem(int command, AppDataCommand data,
 
 		item.setNumber(data.getAccessNumberSum());
 		Pair<Integer, String> pair = buildPieChartFieldTitlePair(command, data, field);
-
 		item.setTitle(pair.getValue());
 		return new Pair<Integer, Item>(pair.getKey(), item);
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Handler.java
Patch:
@@ -95,7 +95,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			String type = payload.getType();
 			try {
 				filterCommands(model, payload.isShowActivity());
-				
+
 				LineChart lineChart = m_appGraphCreator.buildLineChart(linechartEntity1, linechartEntity2, type);
 				List<AppDataSpreadInfo> appDataSpreadInfos = m_appDataService.buildAppDataSpreadInfo(linechartEntity1,
 				      field);
@@ -112,7 +112,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				Pair<PieChart, List<PieChartDetailInfo>> pair = m_appGraphCreator.buildPieChart(payload.getQueryEntity1(),
 				      field);
 				List<PieChartDetailInfo> infos = pair.getValue();
-				Collections.sort(infos, new Sorter(sortBy).buildPieChartInfoComparator());
+				Collections.sort(infos, new Sorter().buildPieChartInfoComparator());
 
 				model.setPieChart(pair.getKey());
 				model.setPieChartDetailInfos(infos);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/graph/AppGraphCreator.java
Patch:
@@ -35,7 +35,7 @@ public class AppGraphCreator extends AbstractGraphCreator {
 
 	private double queryMinYlable(final List<Double[]> datas) {
 		double min = Double.MAX_VALUE;
-		
+
 		for (Double[] data : datas) {
 			List<Double> dataList = Arrays.asList(data);
 			double tmp = Collections.min(dataList);
@@ -152,6 +152,7 @@ private Pair<Integer, String> buildPieChartFieldTitlePair(int command, AppDataCo
 			if (connectTypes != null && (connectType = connectTypes.get(keyValue)) != null) {
 				title = connectType.getName();
 			}
+			break;
 		case NETWORK:
 			Map<Integer, com.dianping.cat.configuration.app.entity.Item> networks = m_manager
 			      .queryConfigItem(AppConfigManager.NETWORK);
@@ -195,7 +196,6 @@ private Pair<Integer, Item> buildPieChartItem(int command, AppDataCommand data,
 
 		item.setNumber(data.getAccessNumberSum());
 		Pair<Integer, String> pair = buildPieChartFieldTitlePair(command, data, field);
-
 		item.setTitle(pair.getValue());
 		return new Pair<Integer, Item>(pair.getKey(), item);
 	}

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -137,15 +137,15 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 			} else {
 				Cat.logEvent("FindRule:" + getConfigName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 			}
-			return configs;
+			return decorateConfigOnRead(configs);
 		}
 	}
 
 	public Rule queryRule(String product, String metricKey) {
 		Rule rule = m_config.getRules().get(metricKey);
 
 		if (rule != null) {
-			return rule;
+			return copyRuleWithDeepCopyConditions(rule);
 		} else {
 			return buildDefaultRule(product, metricKey);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -153,7 +153,7 @@ private void processDomain(String domain) {
 
 					for (String metric : m_metrics) {
 						try {
-							double[] values = extract(arguments.get(metric), maxMinute, 59);
+							double[] values = extract(arguments.get(metric), maxMinute, minute);
 
 							processMeitrc(domain, ip, metric, values);
 						} catch (Exception ex) {
@@ -176,7 +176,7 @@ private void processDomain(String domain) {
 
 					for (String metric : m_metrics) {
 						try {
-							double[] values = extract(arguments.get(metric), maxMinute, minute);
+							double[] values = extract(arguments.get(metric), maxMinute, 59);
 
 							processMeitrc(domain, ip, metric, values);
 						} catch (Exception ex) {

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -111,7 +111,7 @@ public List<Component> defineComponents() {
 		all.add(C(Contactor.class, ExceptionContactor.ID, ExceptionContactor.class).req(ProjectService.class,
 		      AlertConfigManager.class));
 
-		all.add(C(Contactor.class, HeartbeatContactor.ID, ExceptionContactor.class).req(ProjectService.class,
+		all.add(C(Contactor.class, HeartbeatContactor.ID, HeartbeatContactor.class).req(ProjectService.class,
 		      AlertConfigManager.class));
 
 		all.add(C(Contactor.class, ThirdpartyContactor.ID, ThirdpartyContactor.class).req(ProjectService.class,
@@ -178,7 +178,8 @@ public List<Component> defineComponents() {
 		all.add(C(NetworkAlert.class).req(ProductLineConfigManager.class, BaselineService.class, AlertInfo.class).req(
 		      RemoteMetricReportService.class, NetworkRuleConfigManager.class, DataChecker.class, AlertManager.class));
 
-		all.add(C(HeartbeatAlert.class).req(ProductLineConfigManager.class, BaselineService.class)
+		all.add(C(HeartbeatAlert.class)
+		      .req(ProductLineConfigManager.class, BaselineService.class)
 		      .req(ProjectService.class, RemoteMetricReportService.class, HeartbeatRuleConfigManager.class,
 		            DataChecker.class, AlertManager.class, AlertInfo.class).req(ModelService.class, HeartbeatAnalyzer.ID));
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -174,10 +174,10 @@ private void porocessMachine(String domain, Machine machine) {
 			for (AlertResultEntity alertResult : alertResults) {
 				AlertEntity entity = new AlertEntity();
 
-				entity.setDate(alertResult.getAlertTime()).setContent(ip + ":\n" + alertResult.getContent())
+				entity.setDate(alertResult.getAlertTime()).setContent(alertResult.getContent())
 				      .setLevel(alertResult.getAlertLevel());
 				entity.setMetric(metric).setType(getName()).setGroup(domain);
-
+				entity.getParas().put("ip", ip);
 				m_sendManager.addAlert(entity);
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/HeartbeatDecorator.java
Patch:
@@ -15,8 +15,8 @@ public String getId() {
 	@Override
 	public String generateTitle(AlertEntity alert) {
 		StringBuilder sb = new StringBuilder();
-		sb.append("[心跳告警] [机器： ").append(alert.getGroup()).append("]").append("[指标: ").append(alert.getMetric())
-		      .append("]");
+		sb.append("[心跳告警] [项目: ").append(alert.getGroup()).append("][ip: ").append(alert.getParas().get("ip"))
+		      .append("][指标: ").append(alert.getMetric()).append("]");
 		return sb.toString();
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -174,9 +174,9 @@ private void porocessMachine(String domain, Machine machine) {
 			for (AlertResultEntity alertResult : alertResults) {
 				AlertEntity entity = new AlertEntity();
 
-				entity.setDate(alertResult.getAlertTime()).setContent(alertResult.getContent())
+				entity.setDate(alertResult.getAlertTime()).setContent(ip + ":\n" + alertResult.getContent())
 				      .setLevel(alertResult.getAlertLevel());
-				entity.setMetric(metric).setType(getName()).setGroup(domain + ":" + ip);
+				entity.setMetric(metric).setType(getName()).setGroup(domain);
 
 				m_sendManager.addAlert(entity);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/AppRuleConfigManager.java
Patch:
@@ -29,7 +29,6 @@ public void addDefultRule(String name, Integer commandId) {
 		m_config.addRule(rule);
 		if (!storeConfig()) {
 			Cat.logError("store app command rule error: " + name + " " + " " + commandId, new RuntimeException());
-			;
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/config/AppRuleConfigManager.java
Patch:
@@ -29,7 +29,6 @@ public void addDefultRule(String name, Integer commandId) {
 		m_config.addRule(rule);
 		if (!storeConfig()) {
 			Cat.logError("store app command rule error: " + name + " " + " " + commandId, new RuntimeException());
-			;
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/process/AppConfigProcessor.java
Patch:
@@ -64,7 +64,7 @@ public void process(Action action, Payload payload, Model model) {
 				}
 			} else {
 				try {
-					if (m_appConfigManager.addCommand(domain, title, name)) {
+					if (m_appConfigManager.addCommand(domain, title, name).getKey()) {
 						model.setOpState(true);
 					} else {
 						model.setOpState(false);

File: cat-home/src/main/java/com/dianping/cat/system/page/config/process/AppConfigProcessor.java
Patch:
@@ -64,7 +64,7 @@ public void process(Action action, Payload payload, Model model) {
 				}
 			} else {
 				try {
-					if (m_appConfigManager.addCommand(domain, title, name)) {
+					if (m_appConfigManager.addCommand(domain, title, name).getKey()) {
 						model.setOpState(true);
 					} else {
 						model.setOpState(false);

File: cat-core/src/main/java/com/dianping/cat/config/app/AppConfigManager.java
Patch:
@@ -131,7 +131,7 @@ private int findAvailableId(int startIndex, int endIndex) throws Exception {
 				maxKey = key;
 			}
 		}
-		if (maxKey < endIndex) {
+		if (maxKey < endIndex && maxKey >= startIndex) {
 			return maxKey + 1;
 		} else {
 			for (int i = startIndex; i <= endIndex; i++) {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -61,7 +61,7 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	METRIC_CONFIG_DELETE("metricConfigDelete"),
 
-	DOMAIN_METRIC_RULE_CONFIG_UPDATE("domainMetricRuleConfigUpdate"),
+	METRIC_RULE_CONFIG_UPDATE("metricRuleConfigUpdate"),
 
 	NETWORK_RULE_CONFIG_LIST("networkRuleConfigList"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -130,7 +130,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		case METRIC_RULE_ADD_OR_UPDATE_SUBMIT:
 		case METRIC_CONFIG_LIST:
 		case METRIC_CONFIG_DELETE:
-		case DOMAIN_METRIC_RULE_CONFIG_UPDATE:
+		case METRIC_RULE_CONFIG_UPDATE:
 			m_metricConfigProcessor.process(action, payload, model);
 			break;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -35,7 +35,7 @@ public enum JspFile {
 
 	METRIC_CONFIG_LIST("/jsp/system/metric/metricConfigs.jsp"),
 
-	DOMAIN_METRIC_RULE_CONFIG_UPDATE("/jsp/system/domainMetricRule/domainMetricRuleConfig.jsp"),
+	METRIC_RULE_CONFIG_UPDATE("/jsp/system/metric/metricRuleConfig.jsp"),
 
 	NETWORK_RULE_CONFIG_LIST("/jsp/system/networkRule/networkConfigs.jsp"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -70,8 +70,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.METRIC_CONFIG_LIST.getPath();
 		case METRIC_CONFIG_DELETE:
 			return JspFile.METRIC_CONFIG_LIST.getPath();
-		case DOMAIN_METRIC_RULE_CONFIG_UPDATE:
-			return JspFile.DOMAIN_METRIC_RULE_CONFIG_UPDATE.getPath();
+		case METRIC_RULE_CONFIG_UPDATE:
+			return JspFile.METRIC_RULE_CONFIG_UPDATE.getPath();
 		case METRIC_RULE_ADD_OR_UPDATE:
 			return JspFile.METRIC_RULE_ADD_OR_UPDATE.getPath();
 		case METRIC_RULE_ADD_OR_UPDATE_SUBMIT:

File: cat-home/src/main/java/com/dianping/cat/system/page/config/process/MetricConfigProcessor.java
Patch:
@@ -134,7 +134,7 @@ public void process(Action action, Payload payload, Model model) {
 			      payload.getDomain(), payload.getType(), payload.getMetricKey())));
 			metricConfigList(payload, model);
 			break;
-		case DOMAIN_METRIC_RULE_CONFIG_UPDATE:
+		case METRIC_RULE_CONFIG_UPDATE:
 			String domainMetricRuleConfig = payload.getContent();
 			if (!StringUtils.isEmpty(domainMetricRuleConfig)) {
 				model.setOpState(m_businessRuleConfigManager.insert(domainMetricRuleConfig));

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -60,7 +60,6 @@
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
 import com.dianping.cat.report.task.alert.sender.sender.SmsSender;
 import com.dianping.cat.report.task.alert.sender.sender.WeixinSender;
-import com.dianping.cat.report.task.alert.sender.spliter.DbSpliter;
 import com.dianping.cat.report.task.alert.sender.spliter.MailSpliter;
 import com.dianping.cat.report.task.alert.sender.spliter.SmsSpliter;
 import com.dianping.cat.report.task.alert.sender.spliter.Spliter;
@@ -159,8 +158,6 @@ public List<Component> defineComponents() {
 
 		all.add(C(Spliter.class, WeixinSpliter.ID, WeixinSpliter.class));
 
-		all.add(C(Spliter.class, DbSpliter.ID, DbSpliter.class));
-
 		all.add(C(SpliterManager.class));
 
 		all.add(C(Sender.class, MailSender.ID, MailSender.class).req(ServerConfigManager.class));

File: cat-home/src/main/java/com/dianping/cat/report/baseline/impl/DefaultBaselineService.java
Patch:
@@ -14,7 +14,7 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.Baseline;
 import com.dianping.cat.home.dal.report.BaselineDao;
 import com.dianping.cat.home.dal.report.BaselineEntity;
@@ -117,7 +117,7 @@ public double[] queryDailyBaseline(String reportName, String key, Date reportPer
 	public double[] queryHourlyBaseline(String reportName, String key, Date reportPeriod) {
 		double[] result = new double[60];
 		Date today = TaskHelper.todayZero(reportPeriod);
-		int hour = (int) ((reportPeriod.getTime() - today.getTime()) / TimeUtil.ONE_HOUR);
+		int hour = (int) ((reportPeriod.getTime() - today.getTime()) / TimeHelper.ONE_HOUR);
 		double[] dayResult = queryDailyBaseline(reportName, key, today);
 
 		if (dayResult != null) {

File: cat-home/src/main/java/com/dianping/cat/report/chart/impl/CachedMetricReportServiceImpl.java
Patch:
@@ -13,7 +13,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.chart.CachedMetricReportService;
 import com.dianping.cat.report.page.cdn.graph.CdnReportConvertor;
 import com.dianping.cat.report.page.model.spi.ModelService;
@@ -52,7 +52,7 @@ private MetricReport getReportFromCache(String product, long date) {
 
 		if (result == null) {
 			Date start = new Date(date);
-			Date end = new Date(date + TimeUtil.ONE_HOUR);
+			Date end = new Date(date + TimeHelper.ONE_HOUR);
 
 			try {
 				result = m_reportService.queryMetricReport(product, start, end);

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Payload.java
Patch:
@@ -8,7 +8,7 @@
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.site.lookup.util.StringUtils;
 
@@ -169,7 +169,7 @@ public Date getStartTime() {
 		try {
 			return m_format.parse(m_startTime);
 		} catch (Exception e) {
-			return new Date(System.currentTimeMillis() - TimeUtil.ONE_HOUR);
+			return new Date(System.currentTimeMillis() - TimeHelper.ONE_HOUR);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/Payload.java
Patch:
@@ -7,7 +7,7 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.AbstractReportPayload;
 
@@ -147,7 +147,7 @@ public ReportPage getPage() {
 
 	public Date getStartTime() {
 		if (m_startTime == null || m_startTime.length() == 0) {
-			return new Date(System.currentTimeMillis() - TimeUtil.ONE_HOUR / 2);
+			return new Date(System.currentTimeMillis() - TimeHelper.ONE_HOUR / 2);
 		} else {
 			try {
 				return m_minSdf.parse(m_startTime);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/graph/AppGraphCreator.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.config.app.AppDataService;
 import com.dianping.cat.config.app.QueryEntity;
 import com.dianping.cat.configuration.app.entity.Code;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.chart.AbstractGraphCreator;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PieChart;
@@ -95,7 +95,7 @@ protected Map<Long, Double> convertToMap(double[] data, Date start, int step) {
 		long time = startTime;
 
 		for (int i = 0; i < length; i++) {
-			time += step * TimeUtil.ONE_MINUTE;
+			time += step * TimeHelper.ONE_MINUTE;
 			map.put(time, data[i]);
 		}
 		return map;

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Model.java
Patch:
@@ -8,8 +8,8 @@
 import org.unidal.web.mvc.view.annotation.EntityMeta;
 import org.unidal.web.mvc.view.annotation.ModelMeta;
 
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta("cache")
 public class Model extends AbstractReportModel<Action, Context> {
@@ -44,15 +44,15 @@ public Collection<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 
 	public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return StringSortHelper.sortDomain(m_report.getIps());
+			return SortHelper.sortDomain(m_report.getIps());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/Handler.java
Patch:
@@ -11,7 +11,7 @@
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.cdn.graph.CdnGraphCreator;
 import com.dianping.cat.report.page.web.CityManager;
@@ -44,8 +44,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		long start = payload.getHistoryStartDate().getTime();
 		long end = payload.getHistoryEndDate().getTime();
 
-		start = start - start % TimeUtil.ONE_HOUR;
-		end = end - end % TimeUtil.ONE_HOUR;
+		start = start - start % TimeHelper.ONE_HOUR;
+		end = end - end % TimeHelper.ONE_HOUR;
 
 		Date startDate = new Date(start);
 		Date endDate = new Date(end);

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Handler.java
Patch:
@@ -17,7 +17,7 @@
 import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.cross.display.HostInfo;
@@ -80,7 +80,7 @@ private CrossReport getHourlyReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), CrossAnalyzer.ID);
+				      new Date(payload.getDate() + TimeHelper.ONE_HOUR), CrossAnalyzer.ID);
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Model.java
Patch:
@@ -10,12 +10,12 @@
 
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.cross.display.HostInfo;
 import com.dianping.cat.report.page.cross.display.MethodInfo;
 import com.dianping.cat.report.page.cross.display.MethodQueryInfo;
 import com.dianping.cat.report.page.cross.display.ProjectInfo;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(CrossAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -73,7 +73,7 @@ public Collection<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 
@@ -89,7 +89,7 @@ public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return StringSortHelper.sort(m_report.getIps());
+			return SortHelper.sortIpAddress(m_report.getIps());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Model.java
Patch:
@@ -15,12 +15,12 @@
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.entity.Segment;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.home.dal.report.Event;
 import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.dependency.dashboard.ProductLinesDashboard;
 import com.dianping.cat.report.page.top.TopMetric;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(DependencyAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -101,7 +101,7 @@ public Collection<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/LineGraphBuilder.java
Patch:
@@ -14,7 +14,7 @@
 import com.dianping.cat.consumer.dependency.model.entity.Index;
 import com.dianping.cat.consumer.dependency.model.entity.Segment;
 import com.dianping.cat.consumer.dependency.model.transform.BaseVisitor;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.LineChart;
 
 public class LineGraphBuilder extends BaseVisitor {
@@ -47,7 +47,7 @@ private LineChart buildLineChart(String title, Map<String, Item> items) {
 		LineChart result = new LineChart();
 
 		result.setSize(60);
-		result.setStep(TimeUtil.ONE_MINUTE);
+		result.setStep(TimeHelper.ONE_MINUTE);
 		result.setTitle(title);
 		result.setStart(m_start);
 		if (items != null) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphBuilder.java
Patch:
@@ -14,7 +14,7 @@
 import com.dianping.cat.consumer.dependency.model.entity.Index;
 import com.dianping.cat.consumer.dependency.model.entity.Segment;
 import com.dianping.cat.consumer.dependency.model.transform.BaseVisitor;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dependency.graph.entity.TopologyEdge;
 import com.dianping.cat.home.dependency.graph.entity.TopologyGraph;
 import com.dianping.cat.home.dependency.graph.entity.TopologyNode;
@@ -65,7 +65,7 @@ public TopologyNode createNode(String domain) {
 	}
 
 	private TopologyGraph findOrCreateGraph() {
-		long time = m_date.getTime() + m_minute * TimeUtil.ONE_MINUTE;
+		long time = m_date.getTime() + m_minute * TimeHelper.ONE_MINUTE;
 		TopologyGraph graph = m_graphs.get(time);
 
 		if (graph == null) {

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -26,7 +26,7 @@
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.event.model.entity.Machine;
 import com.dianping.cat.consumer.event.model.entity.Range;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.GraphBuilder;
 import com.dianping.cat.report.page.JsonBuilder;
@@ -219,7 +219,7 @@ private EventReport getHourlyReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), EventAnalyzer.ID);
+				      new Date(payload.getDate() + TimeHelper.ONE_HOUR), EventAnalyzer.ID);
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Model.java
Patch:
@@ -9,8 +9,8 @@
 
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(EventAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -82,7 +82,7 @@ public List<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 
@@ -122,7 +122,7 @@ public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return StringSortHelper.sort(m_report.getIps());
+			return SortHelper.sortIpAddress(m_report.getIps());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Model.java
Patch:
@@ -12,8 +12,8 @@
 
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(HeartbeatAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -136,7 +136,7 @@ public List<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 
@@ -179,7 +179,7 @@ public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return StringSortHelper.sort(m_report.getIps());
+			return SortHelper.sortIpAddress(m_report.getIps());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Handler.java
Patch:
@@ -14,7 +14,7 @@
 
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.model.spi.ModelService;
@@ -48,7 +48,7 @@ private MatrixReport getHourlyReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), MatrixAnalyzer.ID);
+				      new Date(payload.getDate() + TimeHelper.ONE_HOUR), MatrixAnalyzer.ID);
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Model.java
Patch:
@@ -9,8 +9,8 @@
 
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(MatrixAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -44,7 +44,7 @@ public Collection<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -46,6 +46,7 @@
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.cdn.graph.CdnReportConvertor;
@@ -63,7 +64,6 @@
 import com.dianping.cat.report.page.model.transaction.LocalTransactionService;
 import com.dianping.cat.report.page.system.graph.SystemReportConvertor;
 import com.dianping.cat.report.page.web.graph.WebReportConvertor;
-import com.dianping.cat.report.view.StringSortHelper;
 import com.dianping.cat.service.IpService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -146,7 +146,7 @@ private String doFilter(Payload payload, Object dataModel) {
 				HeartbeatReport reportModel = (HeartbeatReport) dataModel;
 				Set<String> ips = reportModel.getIps();
 				if (ips.size() > 0) {
-					ipAddress = StringSortHelper.sort(ips).get(0);
+					ipAddress = SortHelper.sortIpAddress(ips).get(0);
 				}
 			}
 			HeartBeatReportFilter filter = new HeartBeatReportFilter(ipAddress);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/HistoricalCrossService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected CrossReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private CrossReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryCrossReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryCrossReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/LocalCrossService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -34,7 +34,7 @@ protected CrossReport getReport(ModelRequest request, ModelPeriod period, String
 			if (report == null) {
 				report = new CrossReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/HistoricalDependencyService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -42,7 +42,7 @@ protected DependencyReport buildModel(ModelRequest request) throws Exception {
 
 	private DependencyReport getReportFromDatabase(long timestamp, String domain) throws Exception {
 		return m_reportService
-		      .queryDependencyReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		      .queryDependencyReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private DependencyReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/LocalDependencyService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -34,7 +34,7 @@ protected DependencyReport getReport(ModelRequest request, ModelPeriod period, S
 			if (report == null) {
 				report = new DependencyReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected EventReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private EventReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryEventReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryEventReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private EventReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/LocalEventService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -34,7 +34,7 @@ protected EventReport getReport(ModelRequest request, ModelPeriod period, String
 			if (report == null) {
 				report = new EventReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/HistoricalHeartbeatService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected HeartbeatReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private HeartbeatReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryHeartbeatReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryHeartbeatReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/LocalHeartbeatService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -33,7 +33,7 @@ protected HeartbeatReport getReport(ModelRequest request, ModelPeriod period, St
 			if (report == null) {
 				report = new HeartbeatReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/RemoteLogViewService.java
Patch:
@@ -9,7 +9,7 @@
 import org.unidal.helper.Urls;
 import org.xml.sax.SAXException;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.page.model.spi.internal.BaseRemoteModelService;
@@ -34,9 +34,9 @@ public boolean isEligable(ModelRequest request) {
 		if (period.isHistorical()) {
 			long time = Long.parseLong(request.getProperty("timestamp"));
 			long current = System.currentTimeMillis();
-			long currentHour = current - current % TimeUtil.ONE_HOUR;
+			long currentHour = current - current % TimeHelper.ONE_HOUR;
 
-			if (time == currentHour - 2 * TimeUtil.ONE_HOUR) {
+			if (time == currentHour - 2 * TimeHelper.ONE_HOUR) {
 				return true;
 			}
 		} else {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/HistoricalMatrixService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected MatrixReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private MatrixReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryMatrixReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryMatrixReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/LocalMatrixService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -34,7 +34,7 @@ protected MatrixReport getReport(ModelRequest request, ModelPeriod period, Strin
 			if (report == null) {
 				report = new MatrixReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected MetricReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private MetricReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryMetricReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryMetricReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private MetricReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/LocalMetricService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -33,7 +33,7 @@ protected MetricReport getReport(ModelRequest request, ModelPeriod period, Strin
 			if (report == null) {
 				report = new MetricReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected ProblemReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private ProblemReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryProblemReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryProblemReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private ProblemReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/LocalProblemService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -34,7 +34,7 @@ protected ProblemReport getReport(ModelRequest request, ModelPeriod period, Stri
 			if (report == null) {
 				report = new ProblemReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/HistoricalStateService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.state.StateAnalyzer;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
 import com.dianping.cat.consumer.state.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected StateReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private StateReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryStateReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryStateReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private StateReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.state.StateAnalyzer;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
 import com.dianping.cat.consumer.state.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -33,7 +33,7 @@ protected StateReport getReport(ModelRequest request, ModelPeriod period, String
 			if (report == null) {
 				report = new StateReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/HistoricalTopService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.top.TopAnalyzer;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
 import com.dianping.cat.consumer.top.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -41,7 +41,7 @@ protected TopReport buildModel(ModelRequest request) throws Exception {
 	}
 
 	private TopReport getReportFromDatabase(long timestamp, String domain) throws Exception {
-		return m_reportService.queryTopReport(domain, new Date(timestamp), new Date(timestamp + TimeUtil.ONE_HOUR));
+		return m_reportService.queryTopReport(domain, new Date(timestamp), new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private TopReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/LocalTopService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.top.TopAnalyzer;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
 import com.dianping.cat.consumer.top.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -33,7 +33,7 @@ protected TopReport getReport(ModelRequest request, ModelPeriod period, String d
 			if (report == null) {
 				report = new TopReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseHistoricalModelService;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.ModelRequest;
@@ -42,7 +42,7 @@ protected TransactionReport buildModel(ModelRequest request) throws Exception {
 
 	private TransactionReport getReportFromDatabase(long timestamp, String domain) throws Exception {
 		return m_reportService.queryTransactionReport(domain, new Date(timestamp),
-		      new Date(timestamp + TimeUtil.ONE_HOUR));
+		      new Date(timestamp + TimeHelper.ONE_HOUR));
 	}
 
 	private TransactionReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -7,7 +7,7 @@
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -33,7 +33,7 @@ protected TransactionReport getReport(ModelRequest request, ModelPeriod period,
 			if (report == null) {
 				report = new TransactionReport(domain);
 				report.setStartTime(new Date(startTime));
-				report.setEndTime(new Date(startTime + TimeUtil.ONE_HOUR - 1));
+				report.setEndTime(new Date(startTime + TimeHelper.ONE_HOUR - 1));
 			}
 		}
 		return report;

File: cat-home/src/main/java/com/dianping/cat/report/page/overload/Payload.java
Patch:
@@ -8,7 +8,7 @@
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 
 public class Payload implements ActionPayload<ReportPage, Action> {
@@ -69,7 +69,7 @@ public Date getStartTime() {
 		try {
 			return m_format.parse(m_startTime);
 		} catch (Exception e) {
-			return new Date(System.currentTimeMillis() - TimeUtil.ONE_DAY);
+			return new Date(System.currentTimeMillis() - TimeHelper.ONE_DAY);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/DetailStatistics.java
Patch:
@@ -14,7 +14,7 @@
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
 import com.dianping.cat.consumer.problem.model.transform.BaseVisitor;
-import com.dianping.cat.helper.MapUtils;
+import com.dianping.cat.helper.SortHelper;
 
 public class DetailStatistics extends BaseVisitor {
 
@@ -184,7 +184,7 @@ public int getCount() {
 		}
 
 		public Map<String, StatusStatistics> getStatus() {
-			Map<String, StatusStatistics> result = MapUtils.sortMap(m_status,
+			Map<String, StatusStatistics> result = SortHelper.sortMap(m_status,
 			      new Comparator<java.util.Map.Entry<String, StatusStatistics>>() {
 				      @Override
 				      public int compare(java.util.Map.Entry<String, StatusStatistics> o1,

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/GroupLevelInfo.java
Patch:
@@ -11,8 +11,8 @@
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.view.ProblemReportHelper;
-import com.dianping.cat.report.view.StringSortHelper;
 
 public class GroupLevelInfo {
 	private List<String> m_datas = new ArrayList<String>();
@@ -78,7 +78,7 @@ public List<String> getDatas() {
 	}
 
 	public List<String> getGroups() {
-		return StringSortHelper.sortString(m_groupStatistics.keySet());
+		return SortHelper.sortDomain(m_groupStatistics.keySet());
 	}
 
 	private String getShowDetailByMinte(int minute) {

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -25,7 +25,7 @@
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.JsonBuilder;
 import com.dianping.cat.report.page.PayloadNormalizer;
@@ -111,7 +111,7 @@ private ProblemReport getHourlyReport(Payload payload, String queryType) {
 			ProblemReport report = response.getModel();
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), ProblemAnalyzer.ID);
+				      new Date(payload.getDate() + TimeHelper.ONE_HOUR), ProblemAnalyzer.ID);
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/HourlyLineChartVisitor.java
Patch:
@@ -11,7 +11,7 @@
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
 import com.dianping.cat.consumer.problem.model.transform.BaseVisitor;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.LineChart;
 
 public class HourlyLineChartVisitor extends BaseVisitor {
@@ -34,7 +34,7 @@ public HourlyLineChartVisitor(String ip, String type, String state, Date start)
 		m_state = state;
 
 		m_graphItem.setSize(SIZE);
-		m_graphItem.setStep(TimeUtil.ONE_MINUTE);
+		m_graphItem.setStep(TimeHelper.ONE_MINUTE);
 		m_graphItem.setStart(start);
 
 		String subTitle = type;

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Model.java
Patch:
@@ -9,8 +9,8 @@
 
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(ProblemAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -100,7 +100,7 @@ public List<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 
@@ -132,7 +132,7 @@ public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return StringSortHelper.sort(m_report.getIps());
+			return SortHelper.sortIpAddress(m_report.getIps());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/ProblemStatistics.java
Patch:
@@ -12,7 +12,7 @@
 import com.dianping.cat.consumer.problem.model.entity.Entry;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.transform.BaseVisitor;
-import com.dianping.cat.helper.MapUtils;
+import com.dianping.cat.helper.SortHelper;
 
 public class ProblemStatistics extends BaseVisitor {
 
@@ -187,7 +187,7 @@ public int getCount() {
 		}
 
 		public Map<String, StatusStatistics> getStatus() {
-			Map<String, StatusStatistics> result = MapUtils.sortMap(m_status,
+			Map<String, StatusStatistics> result = SortHelper.sortMap(m_status,
 			      new Comparator<java.util.Map.Entry<String, StatusStatistics>>() {
 				      @Override
 				      public int compare(java.util.Map.Entry<String, StatusStatistics> o1,

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Model.java
Patch:
@@ -9,8 +9,8 @@
 
 import com.dianping.cat.consumer.state.StateAnalyzer;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(StateAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -52,7 +52,7 @@ public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		}
-		return StringSortHelper.sort(m_report.getMachines().keySet());
+		return SortHelper.sortIpAddress(m_report.getMachines().keySet());
 	}
 
 	public String getMessage() {

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Handler.java
Patch:
@@ -23,7 +23,7 @@
 import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.core.dal.Project;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.JsonBuilder;
 import com.dianping.cat.report.page.LineChart;
@@ -98,8 +98,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 		long start = payload.getHistoryStartDate().getTime();
 		long end = payload.getHistoryEndDate().getTime();
-		start = start - start % TimeUtil.ONE_HOUR;
-		end = end - end % TimeUtil.ONE_HOUR;
+		start = start - start % TimeHelper.ONE_HOUR;
+		end = end - end % TimeHelper.ONE_HOUR;
 		Date startDate = new Date(start);
 		Date endDate = new Date(end);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/top/Handler.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.top.TopAnalyzer;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.model.spi.ModelService;
@@ -51,7 +51,7 @@ private TopReport getReport(Payload payload) {
 
 			if (report == null || report.getDomains().size() == 0) {
 				report = m_reportService.queryTopReport(domain, new Date(payload.getDate()), new Date(payload.getDate()
-				      + TimeUtil.ONE_HOUR));
+				      + TimeHelper.ONE_HOUR));
 			}
 			return report;
 		} else {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -26,7 +26,7 @@
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.graph.GraphBuilder;
 import com.dianping.cat.report.page.JsonBuilder;
@@ -223,7 +223,7 @@ private TransactionReport getHourlyReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Date start = new Date(payload.getDate());
-				Date end = new Date(payload.getDate() + TimeUtil.ONE_HOUR);
+				Date end = new Date(payload.getDate() + TimeHelper.ONE_HOUR);
 
 				if (Constants.ALL.equals(domain)) {
 					report = m_reportService.queryTransactionReport(domain, start, end);

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -9,8 +9,8 @@
 
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
+import com.dianping.cat.helper.SortHelper;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.StringSortHelper;
 
 @ModelMeta(TransactionAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
@@ -86,7 +86,7 @@ public List<String> getDomains() {
 		} else {
 			Set<String> domainNames = m_report.getDomainNames();
 
-			return StringSortHelper.sortDomain(domainNames);
+			return SortHelper.sortDomain(domainNames);
 		}
 	}
 
@@ -126,7 +126,7 @@ public List<String> getIps() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return StringSortHelper.sort(m_report.getIps());
+			return SortHelper.sortIpAddress(m_report.getIps());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/web/Handler.java
Patch:
@@ -21,7 +21,7 @@
 import com.dianping.cat.Monitor;
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.configuration.url.pattern.entity.PatternItem;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PayloadNormalizer;
@@ -63,8 +63,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		long start = payload.getHistoryStartDate().getTime();
 		long end = payload.getHistoryEndDate().getTime();
 
-		start = start - start % TimeUtil.ONE_HOUR;
-		end = end - end % TimeUtil.ONE_HOUR;
+		start = start - start % TimeHelper.ONE_HOUR;
+		end = end - end % TimeHelper.ONE_HOUR;
 
 		Date startDate = new Date(start);
 		Date endDate = new Date(end);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/AlertReportService.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.alert.report.entity.AlertReport;
 import com.dianping.cat.home.alert.report.transform.DefaultNativeParser;
 import com.dianping.cat.home.dal.report.DailyReportContent;
@@ -48,7 +48,7 @@ public AlertReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_ALERT;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -81,7 +81,7 @@ public AlertReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_ALERT;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/BugReportService.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.bug.entity.BugReport;
 import com.dianping.cat.home.bug.transform.DefaultNativeParser;
 import com.dianping.cat.home.dal.report.DailyReportContent;
@@ -48,7 +48,7 @@ public BugReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_BUG;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -121,7 +121,7 @@ public BugReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_BUG;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/CrossReportService.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -49,7 +49,7 @@ public CrossReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = CrossAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -123,7 +123,7 @@ public CrossReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = CrossAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DependencyReportService.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.core.dal.HourlyReportContent;
 import com.dianping.cat.core.dal.HourlyReportContentEntity;
 import com.dianping.cat.core.dal.HourlyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.service.AbstractReportService;
 
 public class DependencyReportService extends AbstractReportService<DependencyReport> {
@@ -52,7 +52,7 @@ public DependencyReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = DependencyAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/EventReportService.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -49,7 +49,7 @@ public EventReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = EventAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -123,7 +123,7 @@ public EventReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = EventAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/HeartbeatReportService.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.core.dal.HourlyReportContent;
 import com.dianping.cat.core.dal.HourlyReportContentEntity;
 import com.dianping.cat.core.dal.HourlyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.service.AbstractReportService;
 
 public class HeartbeatReportService extends AbstractReportService<HeartbeatReport> {
@@ -52,7 +52,7 @@ public HeartbeatReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = HeartbeatAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/HeavyReportService.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -48,7 +48,7 @@ public HeavyReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_HEAVY;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -121,7 +121,7 @@ public HeavyReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_HEAVY;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/MatrixReportService.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -49,7 +49,7 @@ public MatrixReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = MatrixAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -123,7 +123,7 @@ public MatrixReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = MatrixAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/ProblemReportService.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -49,7 +49,7 @@ public ProblemReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = ProblemAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -124,7 +124,7 @@ public ProblemReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = ProblemAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/ServiceReportService.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -48,7 +48,7 @@ public ServiceReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_SERVICE;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -121,7 +121,7 @@ public ServiceReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_SERVICE;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/StateReportService.java
Patch:
@@ -21,7 +21,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -48,7 +48,7 @@ public StateReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = StateAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -122,7 +122,7 @@ public StateReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = StateAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/TopReportService.java
Patch:
@@ -15,7 +15,7 @@
 import com.dianping.cat.core.dal.HourlyReportContent;
 import com.dianping.cat.core.dal.HourlyReportContentEntity;
 import com.dianping.cat.core.dal.HourlyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.service.AbstractReportService;
 
 public class TopReportService extends AbstractReportService<TopReport> {
@@ -51,7 +51,7 @@ public TopReport queryHourlyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = TopAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/TransactionReportService.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -49,7 +49,7 @@ public TransactionReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = TransactionAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -124,7 +124,7 @@ public TransactionReport queryHourlyReport(String domain, Date start, Date end)
 		long endTime = end.getTime();
 		String name = TransactionAnalyzer.ID;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/UtilizationReportService.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.core.dal.MonthlyReportEntity;
 import com.dianping.cat.core.dal.WeeklyReport;
 import com.dianping.cat.core.dal.WeeklyReportEntity;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.DailyReportContent;
 import com.dianping.cat.home.dal.report.DailyReportContentEntity;
 import com.dianping.cat.home.dal.report.MonthlyReportContent;
@@ -48,7 +48,7 @@ public UtilizationReport queryDailyReport(String domain, Date start, Date end) {
 		long endTime = end.getTime();
 		String name = Constants.REPORT_UTILIZATION;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
@@ -121,7 +121,7 @@ public UtilizationReport queryHourlyReport(String domain, Date start, Date end)
 		long endTime = end.getTime();
 		String name = Constants.REPORT_UTILIZATION;
 
-		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_HOUR) {
+		for (; startTime < endTime; startTime = startTime + TimeHelper.ONE_HOUR) {
 			List<HourlyReport> reports = null;
 			try {
 				reports = m_hourlyReportDao.findAllByDomainNamePeriod(new Date(startTime), domain, name,

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/AlertInfo.java
Patch:
@@ -10,7 +10,7 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.consumer.metric.MetricConfigManager;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 
 public class AlertInfo implements Initializable {
 
@@ -34,7 +34,7 @@ public List<AlertMetric> queryLastestAlarmKey(int minute) {
 		for (Entry<AlertMetric, Long> entry : m_alertInfos.entrySet()) {
 			Long value = entry.getValue();
 
-			if (currentTimeMillis - value < TimeUtil.ONE_MINUTE * minute) {
+			if (currentTimeMillis - value < TimeHelper.ONE_MINUTE * minute) {
 				keys.add(entry.getKey());
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -21,7 +21,7 @@
 import com.dianping.cat.consumer.metric.model.entity.MetricItem;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.entity.Segment;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.rule.entity.Condition;
 import com.dianping.cat.home.rule.entity.Config;
 import com.dianping.cat.report.baseline.BaselineService;
@@ -56,7 +56,7 @@ public abstract class BaseAlert {
 
 	protected static final int DATA_AREADY_MINUTE = 1;
 
-	protected static final long DURATION = TimeUtil.ONE_MINUTE;
+	protected static final long DURATION = TimeHelper.ONE_MINUTE;
 
 	protected Logger m_logger;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertChannel.java
Patch:
@@ -6,9 +6,7 @@ public enum AlertChannel {
 
 	SMS("sms"),
 
-	WEIXIN("weixin"),
-
-	DATABASE("database");
+	WEIXIN("weixin");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/dependency/DependencyReportBuilder.java
Patch:
@@ -11,7 +11,7 @@
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.report.TopologyGraphDao;
 import com.dianping.cat.home.dependency.graph.entity.TopologyGraph;
 import com.dianping.cat.home.dependency.graph.transform.DefaultNativeBuilder;
@@ -39,7 +39,7 @@ public boolean buildDailyTask(String name, String reportDomain, Date reportPerio
 
 	@Override
 	public boolean buildHourlyTask(String name, String reportDomain, Date reportPeriod) {
-		Date end = new Date(reportPeriod.getTime() + TimeUtil.ONE_HOUR);
+		Date end = new Date(reportPeriod.getTime() + TimeHelper.ONE_HOUR);
 		Set<String> domains = m_reportService.queryAllDomainNames(reportPeriod, end, DependencyAnalyzer.ID);
 		boolean result = true;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatReportBuilder.java
Patch:
@@ -11,7 +11,7 @@
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.core.dal.Graph;
 import com.dianping.cat.core.dal.GraphDao;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.report.task.spi.ReportTaskBuilder;
 
@@ -64,7 +64,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 
 	private List<Graph> qeueryHourlyGraphs(String name, String domain, Date period) throws DalException {
 		HeartbeatReport report = m_reportService.queryHeartbeatReport(domain, period, new Date(period.getTime()
-		      + TimeUtil.ONE_HOUR));
+		      + TimeHelper.ONE_HOUR));
 
 		return m_heartbeatGraphCreator.splitReportToGraphs(report.getStartTime(), report.getDomain(),
 		      HeartbeatAnalyzer.ID, report);

File: cat-home/src/main/java/com/dianping/cat/report/task/network/NetTopologyReportBuilder.java
Patch:
@@ -13,7 +13,7 @@
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.core.dal.HourlyReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.nettopo.entity.Connection;
 import com.dianping.cat.home.nettopo.entity.Interface;
 import com.dianping.cat.home.nettopo.entity.NetGraph;
@@ -60,7 +60,7 @@ public boolean buildHourlyTask(String name, String domain, Date period) {
 		Map<String, MetricReport> reports = new HashMap<String, MetricReport>();
 
 		for (String group : groups) {
-			Date end = new Date(period.getTime() + TimeUtil.ONE_HOUR);
+			Date end = new Date(period.getTime() + TimeHelper.ONE_HOUR);
 			MetricReport report = m_reportService.queryMetricReport(group, period, end);
 
 			reports.put(group, report);

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/NotifyTaskBuilder.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.alarm.MailRecord;
 import com.dianping.cat.home.dal.alarm.MailRecordDao;
 import com.dianping.cat.home.dal.alarm.ScheduledReport;
@@ -73,7 +73,7 @@ private String renderContent(String names, String domain, Date start) {
 		int transactionFlag = names.indexOf(TransactionAnalyzer.ID);
 		int eventFlag = names.indexOf(EventAnalyzer.ID);
 		int problemFlag = names.indexOf(ProblemAnalyzer.ID);
-		Date end = new Date(start.getTime() + TimeUtil.ONE_DAY);
+		Date end = new Date(start.getTime() + TimeHelper.ONE_DAY);
 		TransactionReport transactionReport = m_reportService.queryTransactionReport(domain, start, end);
 		EventReport eventReport = m_reportService.queryEventReport(domain, start, end);
 		ProblemReport problemReport = m_reportService.queryProblemReport(domain, start, end);

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/render/ProblemRender.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.Map;
 
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.page.problem.ProblemStatistics;
 import com.dianping.cat.report.page.problem.ProblemStatistics.TypeStatistics;
 
@@ -70,8 +70,8 @@ public void visitProblemReport(ProblemReport report) {
 			temp.setType(type).setCount(count).setUrl(graphUrl);
 			m_types.add(temp);
 		}
-		Date lastDay = new Date(m_date.getTime() - TimeUtil.ONE_DAY);
-		Date lastWeek = new Date(m_date.getTime() - 7 * TimeUtil.ONE_DAY);
+		Date lastDay = new Date(m_date.getTime() - TimeHelper.ONE_DAY);
+		Date lastWeek = new Date(m_date.getTime() - 7 * TimeHelper.ONE_DAY);
 		String currentUrl = buildProblemUrl(m_date);
 		String lastDayUrl = buildProblemUrl(lastDay);
 		String lastWeekUrl = buildProblemUrl(lastWeek);

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/CapacityUpdater.java
Patch:
@@ -12,7 +12,7 @@ public interface CapacityUpdater {
 
 	public static final int MONTHLY_TYPE = 4;
 	
-	public static final double CAPACITY = 5.0;
+	public static final double CAPACITY = 15.0;
 
 	public void updateDBCapacity(double capacity) throws DalException;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProjectUpdateTask.java
Patch:
@@ -24,7 +24,7 @@
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.core.dal.Hostinfo;
 import com.dianping.cat.core.dal.Project;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.service.ReportService;
 import com.dianping.cat.service.HostinfoService;
@@ -264,8 +264,8 @@ private String queryHostnameFromCMDB(String ip) {
 	}
 
 	private List<String> queryIpsFromReport(String domain) {
-		Date startDate = TimeUtil.getCurrentDay(-2);
-		Date endDate = TimeUtil.getCurrentDay();
+		Date startDate = TimeHelper.getCurrentDay(-2);
+		Date endDate = TimeHelper.getCurrentDay();
 		TransactionReport report = m_reportService.queryDailyReport(domain, startDate, endDate);
 		Set<String> ipSet = report.getMachines().keySet();
 		List<String> ipList = new ArrayList<String>();

File: cat-home/src/main/java/com/dianping/cat/report/view/DomainNavManager.java
Patch:
@@ -15,7 +15,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.core.dal.Project;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.service.ProjectService;
 
 public class DomainNavManager implements Task, Initializable {
@@ -119,7 +119,7 @@ public void run() {
 				Cat.logError(e);
 			}
 			try {
-				Thread.sleep(3 * TimeUtil.ONE_MINUTE);
+				Thread.sleep(3 * TimeHelper.ONE_MINUTE);
 			} catch (InterruptedException e) {
 				active = false;
 			}

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/ScheduledManager.java
Patch:
@@ -15,7 +15,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.core.dal.Project;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.dal.alarm.ScheduledReport;
 import com.dianping.cat.home.dal.alarm.ScheduledReportDao;
 import com.dianping.cat.home.dal.alarm.ScheduledReportEntity;
@@ -193,7 +193,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					Thread.sleep(TimeUtil.ONE_MINUTE);
+					Thread.sleep(TimeHelper.ONE_MINUTE);
 				} catch (InterruptedException e) {
 					active = false;
 				}

File: cat-home/src/main/java/com/dianping/cat/system/page/config/process/ExceptionConfigProcessor.java
Patch:
@@ -10,7 +10,7 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Constants;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.bug.entity.BugReport;
 import com.dianping.cat.home.dependency.exception.entity.ExceptionExclude;
 import com.dianping.cat.home.dependency.exception.entity.ExceptionLimit;
@@ -91,8 +91,8 @@ public void process(Action action,Payload payload,Model model){
 		}
 	}	private List<String> queryExceptionList() {
 		long current = System.currentTimeMillis();
-		Date start = new Date(current - current % TimeUtil.ONE_HOUR - TimeUtil.ONE_HOUR - TimeUtil.ONE_DAY);
-		Date end = new Date(start.getTime() + TimeUtil.ONE_HOUR);
+		Date start = new Date(current - current % TimeHelper.ONE_HOUR - TimeHelper.ONE_HOUR - TimeHelper.ONE_DAY);
+		Date end = new Date(start.getTime() + TimeHelper.ONE_HOUR);
 		BugReport report = m_reportService.queryBugReport(Constants.CAT, start, end);
 		Set<String> keys = new HashSet<String>();
 		List<String> exceptions = new ArrayList<String>();

File: cat-home/src/main/java/com/dianping/cat/system/page/router/Handler.java
Patch:
@@ -13,7 +13,7 @@
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
 import com.dianping.cat.Constants;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.home.router.entity.Domain;
 import com.dianping.cat.home.router.entity.RouterConfig;
 import com.dianping.cat.home.router.entity.Server;
@@ -42,7 +42,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Payload payload = ctx.getPayload();
 		Action action = payload.getAction();
 		Date start = payload.getDate();
-		Date end = new Date(start.getTime() + TimeUtil.ONE_DAY);
+		Date end = new Date(start.getTime() + TimeHelper.ONE_DAY);
 		RouterConfig report = m_reportService.queryRouterConfigReport(Constants.CAT, start, end);
 
 		switch (action) {

File: cat-home/src/main/java/com/dianping/cat/system/page/router/Payload.java
Patch:
@@ -7,7 +7,7 @@
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.system.SystemPage;
 
 public class Payload implements ActionPayload<SystemPage, Action> {
@@ -36,7 +36,7 @@ public Date getDate() {
 		try {
 			return m_sdf.parse(m_date);
 		} catch (Exception e) {
-			return TimeUtil.getCurrentDay(-1);
+			return TimeHelper.getCurrentDay(-1);
 		}
 	}
 

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/AvgLoadAnalyzer.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.consumer.heartbeat.model.entity.Machine;
 import com.dianping.cat.consumer.heartbeat.model.entity.Period;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.service.ReportServiceManager;
 
 public class AvgLoadAnalyzer extends ComponentTestCase {
@@ -51,7 +51,7 @@ public void test() throws Exception {
 
 		for (String domain : domains) {
 			HeartbeatReport report = m_reportService.queryHeartbeatReport(domain, start, new Date(start.getTime()
-			      + TimeUtil.ONE_HOUR));
+			      + TimeHelper.ONE_HOUR));
 
 			if(!"PhoenixAgent".equals(domain)){
 				new HeartbeatVisitor().visitHeartbeatReport(report);
@@ -110,7 +110,7 @@ public void visitPeriod(Period period) {
 	}
 
 	private Set<String> queryDomains(Date date) {
-		return m_reportService.queryAllDomainNames(date, new Date(date.getTime() + TimeUtil.ONE_HOUR),
+		return m_reportService.queryAllDomainNames(date, new Date(date.getTime() + TimeHelper.ONE_HOUR),
 		      TransactionAnalyzer.ID);
 	}
 	

File: cat-home/src/test/java/com/dianping/cat/report/page/system/SystemReportFetcher.java
Patch:
@@ -17,7 +17,7 @@
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.Constants;
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.chart.DataExtractor;
 import com.dianping.cat.report.page.system.graph.SystemGraphCreator;
 
@@ -61,7 +61,7 @@ public void buildReport() {
 			Date end = null;
 			try {
 				start = m_sdf.parse(date);
-				end = new Date(start.getTime() + TimeUtil.ONE_DAY);
+				end = new Date(start.getTime() + TimeHelper.ONE_DAY);
 			} catch (ParseException e) {
 				e.printStackTrace();
 			}

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/BaselineCreatorTest.java
Patch:
@@ -7,18 +7,18 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-import com.dianping.cat.helper.TimeUtil;
+import com.dianping.cat.helper.TimeHelper;
 import com.dianping.cat.report.baseline.impl.DefaultBaselineCreator;
 
 public class BaselineCreatorTest extends ComponentTestCase {
 
 	@Test
 	public void testCreateData() {
 		MetricBaselineReportBuilder builder = lookup(MetricBaselineReportBuilder.class);
-		Date date = TimeUtil.getCurrentMonth();
+		Date date = TimeHelper.getCurrentMonth();
 		long start = date.getTime();
 
-		for (; start < System.currentTimeMillis(); start = start + TimeUtil.ONE_DAY) {
+		for (; start < System.currentTimeMillis(); start = start + TimeHelper.ONE_DAY) {
 
 			builder.buildDailyTask("Metric", "", new Date(start));
 		}

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -60,7 +60,6 @@
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
 import com.dianping.cat.report.task.alert.sender.sender.SmsSender;
 import com.dianping.cat.report.task.alert.sender.sender.WeixinSender;
-import com.dianping.cat.report.task.alert.sender.spliter.DbSpliter;
 import com.dianping.cat.report.task.alert.sender.spliter.MailSpliter;
 import com.dianping.cat.report.task.alert.sender.spliter.SmsSpliter;
 import com.dianping.cat.report.task.alert.sender.spliter.Spliter;
@@ -159,8 +158,6 @@ public List<Component> defineComponents() {
 
 		all.add(C(Spliter.class, WeixinSpliter.ID, WeixinSpliter.class));
 
-		all.add(C(Spliter.class, DbSpliter.ID, DbSpliter.class));
-
 		all.add(C(SpliterManager.class));
 
 		all.add(C(Sender.class, MailSender.ID, MailSender.class).req(ServerConfigManager.class));

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertChannel.java
Patch:
@@ -6,9 +6,7 @@ public enum AlertChannel {
 
 	SMS("sms"),
 
-	WEIXIN("weixin"),
-
-	DATABASE("database");
+	WEIXIN("weixin");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/web/WebAlert.java
Patch:
@@ -160,7 +160,6 @@ protected MetricReport fetchMetricReport(Rule rule, ModelPeriod period) {
 		}
 
 		return report;
-
 	}
 
 	private List<Rule> queryRuelsForUrl(String url) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -145,14 +145,14 @@ private Map<String, double[]> generateArgumentMap(Machine machine) {
 			double[] oldGcCounts = map.get("OldGcCount");
 			if (oldGcCounts == null) {
 				oldGcCounts = new double[60];
-				map.put("ThreadCount", oldGcCounts);
+				map.put("OldGcCount", oldGcCounts);
 			}
 			oldGcCounts[index] = period.getOldGcCount();
 
 			double[] memoryFrees = map.get("MemoryFree");
 			if (memoryFrees == null) {
 				memoryFrees = new double[60];
-				map.put("ThreadCount", memoryFrees);
+				map.put("MemoryFree", memoryFrees);
 			}
 			memoryFrees[index] = period.getMemoryFree();
 

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/CapacityUpdater.java
Patch:
@@ -12,7 +12,7 @@ public interface CapacityUpdater {
 
 	public static final int MONTHLY_TYPE = 4;
 	
-	public static final double CAPACITY = 5.0;
+	public static final double CAPACITY = 15.0;
 
 	public void updateDBCapacity(double capacity) throws DalException;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/heartbeat/HeartbeatAlert.java
Patch:
@@ -145,14 +145,14 @@ private Map<String, double[]> generateArgumentMap(Machine machine) {
 			double[] oldGcCounts = map.get("OldGcCount");
 			if (oldGcCounts == null) {
 				oldGcCounts = new double[60];
-				map.put("ThreadCount", oldGcCounts);
+				map.put("OldGcCount", oldGcCounts);
 			}
 			oldGcCounts[index] = period.getOldGcCount();
 
 			double[] memoryFrees = map.get("MemoryFree");
 			if (memoryFrees == null) {
 				memoryFrees = new double[60];
-				map.put("ThreadCount", memoryFrees);
+				map.put("MemoryFree", memoryFrees);
 			}
 			memoryFrees[index] = period.getMemoryFree();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Payload.java
Patch:
@@ -1,6 +1,5 @@
 package com.dianping.cat.report.page.home;
 
-import org.unidal.lookup.util.StringUtils;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -32,6 +32,9 @@ public class BusinessRuleConfigManager extends BaseRuleConfigManager implements
 
 	private com.dianping.cat.home.rule.entity.Config buildDefaultConfig() {
 		com.dianping.cat.home.rule.entity.Config config = new com.dianping.cat.home.rule.entity.Config();
+		config.setStarttime("00:00");
+		config.setEndtime("24:00");
+
 		Condition condition = new Condition();
 		SubCondition descPerSubcon = new SubCondition();
 		SubCondition descValSubcon = new SubCondition();

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -69,6 +69,7 @@
 import com.dianping.cat.system.config.ConfigReloadTask;
 import com.dianping.cat.system.config.DomainGroupConfigManager;
 import com.dianping.cat.system.config.ExceptionConfigManager;
+import com.dianping.cat.system.config.HeartbeatRuleConfigManager;
 import com.dianping.cat.system.config.MetricGroupConfigManager;
 import com.dianping.cat.system.config.NetGraphConfigManager;
 import com.dianping.cat.system.config.NetworkRuleConfigManager;
@@ -164,6 +165,7 @@ private List<Component> defineConfigComponents() {
 		all.add(C(BusinessRuleConfigManager.class).req(ConfigDao.class, MetricConfigManager.class));
 		all.add(C(AppRuleConfigManager.class).req(ConfigDao.class));
 		all.add(C(WebRuleConfigManager.class).req(ConfigDao.class));
+		all.add(C(HeartbeatRuleConfigManager.class).req(ConfigDao.class));
 		all.add(C(AlertConfigManager.class).req(ConfigDao.class));
 		all.add(C(NetGraphConfigManager.class).req(ConfigDao.class));
 		all.add(C(ThirdPartyConfigManager.class).req(ConfigDao.class));

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -32,6 +32,9 @@ public class BusinessRuleConfigManager extends BaseRuleConfigManager implements
 
 	private com.dianping.cat.home.rule.entity.Config buildDefaultConfig() {
 		com.dianping.cat.home.rule.entity.Config config = new com.dianping.cat.home.rule.entity.Config();
+		config.setStarttime("00:00");
+		config.setEndtime("24:00");
+
 		Condition condition = new Condition();
 		SubCondition descPerSubcon = new SubCondition();
 		SubCondition descValSubcon = new SubCondition();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventDelegate.java
Patch:
@@ -10,6 +10,7 @@
 import com.dianping.cat.consumer.event.model.transform.DefaultNativeBuilder;
 import com.dianping.cat.consumer.event.model.transform.DefaultNativeParser;
 import com.dianping.cat.consumer.event.model.transform.DefaultSaxParser;
+import com.dianping.cat.consumer.transaction.TransactionReportCountFilter;
 import com.dianping.cat.service.ReportDelegate;
 import com.dianping.cat.task.TaskManager;
 import com.dianping.cat.task.TaskManager.TaskProlicy;
@@ -19,8 +20,6 @@ public class EventDelegate implements ReportDelegate<EventReport> {
 	@Inject
 	private TaskManager m_taskManager;
 
-	private EventReportCountFilter m_countFilter = new EventReportCountFilter();
-
 	@Override
 	public void afterLoad(Map<String, EventReport> reports) {
 	}
@@ -37,7 +36,7 @@ public void beforeSave(Map<String, EventReport> reports) {
 
 	@Override
 	public String buildXml(EventReport report) {
-		String xml = m_countFilter.buildXml(report);
+		String xml = new EventReportCountFilter().buildXml(report);
 
 		return xml;
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionDelegate.java
Patch:
@@ -29,8 +29,6 @@ public class TransactionDelegate implements ReportDelegate<TransactionReport> {
 
 	private TransactionStatisticsComputer m_computer = new TransactionStatisticsComputer();
 
-	private TransactionReportCountFilter m_countFilter = new TransactionReportCountFilter();
-	
 	@Override
 	public void afterLoad(Map<String, TransactionReport> reports) {
 	}
@@ -60,7 +58,7 @@ public byte[] buildBinary(TransactionReport report) {
 	public String buildXml(TransactionReport report) {
 		report.accept(m_computer);
 
-		String xml = m_countFilter.buildXml(report);
+		String xml = new TransactionReportCountFilter().buildXml(report);
 
 		return xml;
 	}

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java
Patch:
@@ -30,7 +30,7 @@
 import com.dianping.cat.report.page.JsonBuilder;
 import com.dianping.cat.report.page.web.CityManager.City;
 import com.dianping.cat.system.SystemPage;
-import com.dianping.cat.system.page.config.Handler.RuleItem;
+import com.dianping.cat.system.page.config.process.BaseProcesser.RuleItem;
 
 public class Model extends ViewModel<SystemPage, Action, Context> {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/process/HeartbeatConfigProcessor.java
Patch:
@@ -18,8 +18,7 @@ public void process(Action action, Payload payload, Model model) {
 			generateRuleItemList(m_heartbeatRuleConfigManager, model);
 			break;
 		case HEARTBEAT_RULE_ADD_OR_UPDATE:
-			generateRuleEditContent(payload.getKey(), "?op=heartbeatRuleSubmit", "rule_heartbeatItems.ftl",
-			      "rule_configs.ftl", m_heartbeatRuleConfigManager, model);
+			generateRuleConfigContent(payload.getKey(), m_heartbeatRuleConfigManager, model);
 			break;
 		case HEARTBEAT_RULE_ADD_OR_UPDATE_SUBMIT:
 			model.setOpState(addSubmitRule(m_heartbeatRuleConfigManager, payload.getRuleId(), payload.getMetrics(),

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventDelegate.java
Patch:
@@ -10,6 +10,7 @@
 import com.dianping.cat.consumer.event.model.transform.DefaultNativeBuilder;
 import com.dianping.cat.consumer.event.model.transform.DefaultNativeParser;
 import com.dianping.cat.consumer.event.model.transform.DefaultSaxParser;
+import com.dianping.cat.consumer.transaction.TransactionReportCountFilter;
 import com.dianping.cat.service.ReportDelegate;
 import com.dianping.cat.task.TaskManager;
 import com.dianping.cat.task.TaskManager.TaskProlicy;
@@ -19,8 +20,6 @@ public class EventDelegate implements ReportDelegate<EventReport> {
 	@Inject
 	private TaskManager m_taskManager;
 
-	private EventReportCountFilter m_countFilter = new EventReportCountFilter();
-
 	@Override
 	public void afterLoad(Map<String, EventReport> reports) {
 	}
@@ -37,7 +36,7 @@ public void beforeSave(Map<String, EventReport> reports) {
 
 	@Override
 	public String buildXml(EventReport report) {
-		String xml = m_countFilter.buildXml(report);
+		String xml = new EventReportCountFilter().buildXml(report);
 
 		return xml;
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionDelegate.java
Patch:
@@ -29,8 +29,6 @@ public class TransactionDelegate implements ReportDelegate<TransactionReport> {
 
 	private TransactionStatisticsComputer m_computer = new TransactionStatisticsComputer();
 
-	private TransactionReportCountFilter m_countFilter = new TransactionReportCountFilter();
-	
 	@Override
 	public void afterLoad(Map<String, TransactionReport> reports) {
 	}
@@ -60,7 +58,7 @@ public byte[] buildBinary(TransactionReport report) {
 	public String buildXml(TransactionReport report) {
 		report.accept(m_computer);
 
-		String xml = m_countFilter.buildXml(report);
+		String xml = new TransactionReportCountFilter().buildXml(report);
 
 		return xml;
 	}

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java
Patch:
@@ -30,7 +30,7 @@
 import com.dianping.cat.report.page.JsonBuilder;
 import com.dianping.cat.report.page.web.CityManager.City;
 import com.dianping.cat.system.SystemPage;
-import com.dianping.cat.system.page.config.Handler.RuleItem;
+import com.dianping.cat.system.page.config.process.BaseProcesser.RuleItem;
 
 public class Model extends ViewModel<SystemPage, Action, Context> {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -192,7 +192,7 @@ private boolean compareTime(String start, String end) {
 		int minuteStart = Integer.parseInt(startTime[1]);
 		int startMinute = hourStart * 60 + minuteStart;
 
-		String[] endTime = start.split(":");
+		String[] endTime = end.split(":");
 		int hourEnd = Integer.parseInt(endTime[0]);
 		int minuteEnd = Integer.parseInt(endTime[1]);
 		int endMinute = hourEnd * 60 + minuteEnd;

File: cat-home/src/main/java/com/dianping/cat/report/page/overload/Payload.java
Patch:
@@ -69,7 +69,7 @@ public Date getStartTime() {
 		try {
 			return m_format.parse(m_startTime);
 		} catch (Exception e) {
-			return new Date(System.currentTimeMillis() - TimeUtil.ONE_DAY);
+			return new Date(System.currentTimeMillis() - 8 * TimeUtil.ONE_HOUR);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.config.aggregation.AggregationConfigManager;
+import com.dianping.cat.config.app.AppConfigManager;
 import com.dianping.cat.config.app.AppDataService;
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
@@ -172,7 +173,7 @@ public List<Component> defineComponents() {
 		      RemoteMetricReportService.class, SystemRuleConfigManager.class, DataChecker.class, AlertManager.class));
 
 		all.add(C(AppAlert.class).req(AppDataService.class, AlertManager.class, AppRuleConfigManager.class,
-		      DataChecker.class));
+		      DataChecker.class, AppConfigManager.class));
 
 		all.add(C(WebAlert.class).req(ProductLineConfigManager.class, BaselineService.class, AlertInfo.class)
 		      .req(RemoteMetricReportService.class, WebRuleConfigManager.class, DataChecker.class, AlertManager.class)

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/AppDecorator.java
Patch:
@@ -51,7 +51,7 @@ public String generateTitle(AlertEntity alert) {
 			title = "延时平均值（毫秒/5分钟）";
 		}
 
-		sb.append("[手机端告警] [监控项: ").append(title).append("]");
+		sb.append("[CAT APP告警] [命令字: ").append(alert.getGroup()).append("] [监控项: ").append(title).append("]");
 		return sb.toString();
 	}
 
@@ -71,10 +71,8 @@ public String generateContent(AlertEntity alert) {
 	}
 
 	protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
-		String domain = alert.getDomain();
 		Map<Object, Object> map = new HashMap<Object, Object>();
 
-		map.put("domain", domain);
 		map.put("content", alert.getContent());
 		map.put("date", m_format.format(alert.getDate()));
 

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.config.aggregation.AggregationConfigManager;
+import com.dianping.cat.config.app.AppConfigManager;
 import com.dianping.cat.config.app.AppDataService;
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
@@ -172,7 +173,7 @@ public List<Component> defineComponents() {
 		      RemoteMetricReportService.class, SystemRuleConfigManager.class, DataChecker.class, AlertManager.class));
 
 		all.add(C(AppAlert.class).req(AppDataService.class, AlertManager.class, AppRuleConfigManager.class,
-		      DataChecker.class));
+		      DataChecker.class, AppConfigManager.class));
 
 		all.add(C(WebAlert.class).req(ProductLineConfigManager.class, BaselineService.class, AlertInfo.class)
 		      .req(RemoteMetricReportService.class, WebRuleConfigManager.class, DataChecker.class, AlertManager.class)

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/AppDecorator.java
Patch:
@@ -41,6 +41,7 @@ public String getId() {
 	public String generateTitle(AlertEntity alert) {
 		StringBuilder sb = new StringBuilder();
 		String type = alert.getMetric();
+		System.out.println(alert.getDomain());
 		String title = "";
 
 		if (AppDataService.SUCCESS.equals(type)) {
@@ -51,7 +52,7 @@ public String generateTitle(AlertEntity alert) {
 			title = "延时平均值（毫秒/5分钟）";
 		}
 
-		sb.append("[手机端告警] [监控项: ").append(title).append("]");
+		sb.append("[CAT APP告警] [命令字: " + alert.getGroup() + "] [监控项: ").append(title).append("]");
 		return sb.toString();
 	}
 
@@ -71,10 +72,8 @@ public String generateContent(AlertEntity alert) {
 	}
 
 	protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
-		String domain = alert.getDomain();
 		Map<Object, Object> map = new HashMap<Object, Object>();
 
-		map.put("domain", domain);
 		map.put("content", alert.getContent());
 		map.put("date", m_format.format(alert.getDate()));
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/WebDecorator.java
Patch:
@@ -45,10 +45,8 @@ public String generateTitle(AlertEntity alert) {
 
 	@Override
 	public String generateContent(AlertEntity alert) {
-		String domain = alert.getDomain();
 		Map<Object, Object> datas = new HashMap<Object, Object>();
 
-		datas.put("domain", domain);
 		datas.put("content", alert.getContent());
 		datas.put("date", m_format.format(alert.getDate()));
 		

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/cdn/Handler.java
Patch:
@@ -54,7 +54,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 					String[] tabs = line.split("\t");
 					// timstampTABtargetUrlTABdnslookupTABtcpconnectTABrequestTABresponseENTER
 					if (tabs.length == 6) {
-						long timestamp = Long.parseLong(tabs[0]);
+						// long timestamp = Long.parseLong(tabs[0]);
+						long timestamp = System.currentTimeMillis();
 						MonitorEntity entity = createEntity(tabs[1] + "/dnsLookup", timestamp, Double.parseDouble(tabs[2]),
 						      userIp);
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/js/Handler.java
Patch:
@@ -44,7 +44,8 @@ public void handleInbound(Context ctx) throws ServletException, IOException {
 	@OutboundActionMeta(name = "js")
 	public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Payload payload = ctx.getPayload();
-		long timestamp = payload.getTimestamp();
+		// long timestamp = payload.getTimestamp();
+		long timestamp = System.currentTimeMillis();
 		String error = payload.getError();
 		String host = parseHost();
 		String url = payload.getUrl();

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/Handler.java
Patch:
@@ -63,7 +63,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			entity.setHttpStatus(httpStatus);
 			entity.setIp(userIp);
 			entity.setTargetUrl(payload.getTargetUrl());
-			entity.setTimestamp(payload.getTimestamp());
+			entity.setTimestamp(System.currentTimeMillis());
 			m_manager.offer(entity);
 		} else {
 			Cat.logEvent("unknownIp", "single", Event.SUCCESS, null);

File: cat-home/src/main/java/com/dianping/cat/report/page/overload/Payload.java
Patch:
@@ -69,7 +69,7 @@ public Date getStartTime() {
 		try {
 			return m_format.parse(m_startTime);
 		} catch (Exception e) {
-			return new Date(System.currentTimeMillis() - TimeUtil.ONE_WEEK);
+			return new Date(System.currentTimeMillis() - TimeUtil.ONE_DAY);
 		}
 	}
 

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -299,7 +299,7 @@ public void run() {
 			}
 
 			try {
-				Thread.sleep(10 * 1000L); // check every 2 seconds
+				Thread.sleep(10 * 1000L); // check every 10 seconds
 			} catch (InterruptedException e) {
 				// ignore
 			}

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -32,6 +32,7 @@
 import com.dianping.cat.message.spi.core.MessagePathBuilder;
 import com.dianping.cat.message.spi.core.TcpSocketReceiver;
 import com.dianping.cat.service.HostinfoService;
+import com.dianping.cat.service.IpService;
 import com.dianping.cat.statistic.ServerStatisticManager;
 import com.dianping.cat.storage.dump.LocalMessageBucket;
 import com.dianping.cat.storage.dump.LocalMessageBucketManager;
@@ -46,6 +47,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(HostinfoService.class).req(HostinfoDao.class, ServerConfigManager.class));
 
+		all.add(C(IpService.class));
 		all.add(C(TaskManager.class).req(TaskDao.class));
 		all.add(C(ServerConfigManager.class));
 		all.add(C(ServerStatisticManager.class));

File: cat-core/src/main/java/com/dianping/cat/service/IpService.java
Patch:
@@ -172,8 +172,8 @@ private void initForeignAreaMap(String areaFile) {
 				strs = line.split(":");
 				ids = strs[1].split(",");
 				Area area = new Area();
-				area.setNation("");
-				area.setProvince("");
+				area.setNation("国外");
+				area.setProvince(strs[0]);
 				area.setCity(strs[0]);
 
 				for (String id : ids) {

File: cat-home/src/main/java/com/dianping/cat/system/page/router/Handler.java
Patch:
@@ -44,9 +44,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Model model = new Model(ctx);
 		Payload payload = ctx.getPayload();
 		Action action = payload.getAction();
-		Date date = payload.getDate();
-		Date end = new Date(date.getTime() + TimeUtil.ONE_DAY);
-		RouterConfig report = m_reportService.queryRouterConfigReport(Constants.CAT, date, end);
+		Date start = payload.getDate();
+		Date end = new Date(start.getTime() + TimeUtil.ONE_DAY);
+		RouterConfig report = m_reportService.queryRouterConfigReport(Constants.CAT, start, end);
 
 		switch (action) {
 		case API:

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionDelegate.java
Patch:
@@ -58,7 +58,7 @@ public byte[] buildBinary(TransactionReport report) {
 	public String buildXml(TransactionReport report) {
 		report.accept(m_computer);
 
-		String xml = new TransactionReportUrlFilter().buildXml(report);
+		String xml = new TransactionReportCountFilter().buildXml(report);
 
 		return xml;
 	}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -25,7 +25,7 @@ public void whether_url_has_max_names() throws Exception {
 			type.addName(new TransactionName("Test" + i));
 		}
 
-		TransactionReportUrlFilter f1 = new TransactionReportUrlFilter();
+		TransactionReportCountFilter f1 = new TransactionReportCountFilter();
 		String filterReport = f1.buildXml(report);
 		TransactionReport newReport = DefaultSaxParser.parse(filterReport);
 

File: cat-home/src/main/java/com/dianping/cat/report/service/CachedReportTask.java
Patch:
@@ -26,7 +26,7 @@
 import com.dianping.cat.consumer.state.StateAnalyzer;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
-import com.dianping.cat.consumer.transaction.TransactionReportUrlFilter;
+import com.dianping.cat.consumer.transaction.TransactionReportCountFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.core.dal.MonthlyReport;
 import com.dianping.cat.core.dal.WeeklyReport;
@@ -86,7 +86,7 @@ private void reloadCurrentMonthly() {
 				Transaction t = Cat.newTransaction("ReloadTask", "Reload-Month-" + domain);
 
 				TransactionReport transactionReport = m_reportService.queryTransactionReport(domain, start, end);
-				new TransactionReportUrlFilter().visitTransactionReport(transactionReport);
+				new TransactionReportCountFilter().visitTransactionReport(transactionReport);
 
 				m_reportService.insertMonthlyReport(buildMonthlyReport(domain, start, TransactionAnalyzer.ID),
 				      com.dianping.cat.consumer.transaction.model.transform.DefaultNativeBuilder.build(transactionReport));
@@ -129,7 +129,7 @@ private void reloadCurrentWeekly() {
 				Transaction t = Cat.newTransaction("ReloadTask", "Reload-Week-" + domain);
 
 				TransactionReport transactionReport = m_reportService.queryTransactionReport(domain, start, end);
-				new TransactionReportUrlFilter().visitTransactionReport(transactionReport);
+				new TransactionReportCountFilter().visitTransactionReport(transactionReport);
 
 				m_reportService.insertWeeklyReport(buildWeeklyReport(domain, start, TransactionAnalyzer.ID),
 				      com.dianping.cat.consumer.transaction.model.transform.DefaultNativeBuilder.build(transactionReport));

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionMerger.java
Patch:
@@ -8,7 +8,7 @@
 import java.util.Set;
 
 import com.dianping.cat.consumer.transaction.TransactionReportMerger;
-import com.dianping.cat.consumer.transaction.TransactionReportUrlFilter;
+import com.dianping.cat.consumer.transaction.TransactionReportCountFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.report.task.TaskHelper;
 
@@ -43,7 +43,7 @@ public TransactionReport mergeForDaily(String reportDomain, List<TransactionRepo
 		Date end = new Date(TaskHelper.tomorrowZero(date).getTime() - 1000);
 		transactionReport.setEndTime(end);
 
-		new TransactionReportUrlFilter().visitTransactionReport(transactionReport);
+		new TransactionReportCountFilter().visitTransactionReport(transactionReport);
 		return transactionReport;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionReportBuilder.java
Patch:
@@ -14,7 +14,7 @@
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.TransactionReportMerger;
-import com.dianping.cat.consumer.transaction.TransactionReportUrlFilter;
+import com.dianping.cat.consumer.transaction.TransactionReportCountFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultNativeBuilder;
 import com.dianping.cat.core.dal.DailyGraph;
@@ -173,7 +173,7 @@ private TransactionReport queryDailyReportsByDuration(String domain, Date start,
 
 		transactionReport.setStartTime(start);
 		transactionReport.setEndTime(end);
-		new TransactionReportUrlFilter().visitTransactionReport(transactionReport);
+		new TransactionReportCountFilter().visitTransactionReport(transactionReport);
 		return transactionReport;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProjectUpdateTask.java
Patch:
@@ -256,7 +256,6 @@ private String queryHostnameFromCMDB(String ip) {
 			t.addData(content);
 			return parseHostname(content.trim());
 		} catch (Exception e) {
-			Cat.logError(e);
 			t.setStatus(e);
 		} finally {
 			t.complete();
@@ -286,7 +285,6 @@ private Map<String, String> queryProjectInfoFromCMDB(String cmdbDomain) {
 			t.addData(content);
 			return parseInfos(content.trim());
 		} catch (Exception e) {
-			Cat.logError(e);
 			t.setStatus(e);
 		} finally {
 			t.complete();
@@ -304,7 +302,6 @@ private String queryProjectInfoFromCMDB(String url, String jsonName, String attr
 			t.addData(content);
 			return parseInfo(content, jsonName, attrName);
 		} catch (Exception e) {
-			Cat.logError(e);
 			t.setStatus(e);
 		} finally {
 			t.complete();

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -122,7 +122,7 @@ public List<Component> defineComponents() {
 		all.addAll(defineMetricComponents());
 
 		all.add(C(Module.class, CatHomeModule.ID, CatHomeModule.class));
-		
+
 		all.add(C(ModuleManager.class, DefaultModuleManager.class) //
 		      .config(E("topLevelModules").value(CatHomeModule.ID)));
 
@@ -159,7 +159,7 @@ private List<Component> defineConfigComponents() {
 		all.add(C(BugConfigManager.class).req(ConfigDao.class));
 		all.add(C(MetricGroupConfigManager.class).req(ConfigDao.class));
 		all.add(C(NetworkRuleConfigManager.class).req(ConfigDao.class));
-		all.add(C(BusinessRuleConfigManager.class).req(ConfigDao.class));
+		all.add(C(BusinessRuleConfigManager.class).req(ConfigDao.class, MetricConfigManager.class));
 		all.add(C(AlertConfigManager.class).req(ConfigDao.class));
 		all.add(C(NetGraphConfigManager.class).req(ConfigDao.class));
 		all.add(C(ThirdPartyConfigManager.class).req(ConfigDao.class));

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProjectUpdateTask.java
Patch:
@@ -256,7 +256,6 @@ private String queryHostnameFromCMDB(String ip) {
 			t.addData(content);
 			return parseHostname(content.trim());
 		} catch (Exception e) {
-			Cat.logError(e);
 			t.setStatus(e);
 		} finally {
 			t.complete();
@@ -286,7 +285,6 @@ private Map<String, String> queryProjectInfoFromCMDB(String cmdbDomain) {
 			t.addData(content);
 			return parseInfos(content.trim());
 		} catch (Exception e) {
-			Cat.logError(e);
 			t.setStatus(e);
 		} finally {
 			t.complete();
@@ -304,7 +302,6 @@ private String queryProjectInfoFromCMDB(String url, String jsonName, String attr
 			t.addData(content);
 			return parseInfo(content, jsonName, attrName);
 		} catch (Exception e) {
-			Cat.logError(e);
 			t.setStatus(e);
 		} finally {
 			t.complete();

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -122,7 +122,7 @@ public List<Component> defineComponents() {
 		all.addAll(defineMetricComponents());
 
 		all.add(C(Module.class, CatHomeModule.ID, CatHomeModule.class));
-		
+
 		all.add(C(ModuleManager.class, DefaultModuleManager.class) //
 		      .config(E("topLevelModules").value(CatHomeModule.ID)));
 
@@ -159,7 +159,7 @@ private List<Component> defineConfigComponents() {
 		all.add(C(BugConfigManager.class).req(ConfigDao.class));
 		all.add(C(MetricGroupConfigManager.class).req(ConfigDao.class));
 		all.add(C(NetworkRuleConfigManager.class).req(ConfigDao.class));
-		all.add(C(BusinessRuleConfigManager.class).req(ConfigDao.class));
+		all.add(C(BusinessRuleConfigManager.class).req(ConfigDao.class, MetricConfigManager.class));
 		all.add(C(AlertConfigManager.class).req(ConfigDao.class));
 		all.add(C(NetGraphConfigManager.class).req(ConfigDao.class));
 		all.add(C(ThirdPartyConfigManager.class).req(ConfigDao.class));

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryExecutor.java
Patch:
@@ -30,13 +30,13 @@ public class AlertSummaryExecutor {
 	private AlertSummaryDecorator m_alertSummaryDecorator;
 
 	@Inject
-	private FailureModelGenerator m_failureContextGenerator;
+	private ErrorModelGenerator m_failureContextGenerator;
 
 	@Inject
 	private SenderManager m_sendManager;
 
 	@Inject
-	private FailureDecorator m_failureDecorator;
+	private ErrorDecorator m_failureDecorator;
 
 	private List<String> builderReceivers(String str) {
 		List<String> result = new ArrayList<String>();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/ErrorDecorator.java
Patch:
@@ -11,15 +11,15 @@
 import freemarker.template.Configuration;
 import freemarker.template.Template;
 
-public class FailureDecorator implements Initializable {
+public class ErrorDecorator implements Initializable {
 
 	public Configuration m_configuration;
 
 	public String generateHtml(Map<Object, Object> failureModel) {
 		StringWriter sw = new StringWriter(5000);
 
 		try {
-			Template t = m_configuration.getTemplate("failureInfo.ftl");
+			Template t = m_configuration.getTemplate("errorInfo.ftl");
 			t.process(failureModel, sw);
 		} catch (Exception e) {
 			Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -56,6 +56,7 @@ private Rule buildDefaultRule(String product, String metricKey) {
 
 		item.setProductText(product);
 		item.setMetricItemText(metricKey);
+		item.setMonitorCount(true);
 
 		rule.addMetricItem(item);
 		rule.addConfig(buildDefaultConfig());

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryExecutor.java
Patch:
@@ -30,13 +30,13 @@ public class AlertSummaryExecutor {
 	private AlertSummaryDecorator m_alertSummaryDecorator;
 
 	@Inject
-	private FailureModelGenerator m_failureContextGenerator;
+	private ErrorModelGenerator m_failureContextGenerator;
 
 	@Inject
 	private SenderManager m_sendManager;
 
 	@Inject
-	private FailureDecorator m_failureDecorator;
+	private ErrorDecorator m_failureDecorator;
 
 	private List<String> builderReceivers(String str) {
 		List<String> result = new ArrayList<String>();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/ErrorDecorator.java
Patch:
@@ -11,15 +11,15 @@
 import freemarker.template.Configuration;
 import freemarker.template.Template;
 
-public class FailureDecorator implements Initializable {
+public class ErrorDecorator implements Initializable {
 
 	public Configuration m_configuration;
 
 	public String generateHtml(Map<Object, Object> failureModel) {
 		StringWriter sw = new StringWriter(5000);
 
 		try {
-			Template t = m_configuration.getTemplate("failureInfo.ftl");
+			Template t = m_configuration.getTemplate("errorInfo.ftl");
 			t.process(failureModel, sw);
 		} catch (Exception e) {
 			Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -56,6 +56,7 @@ private Rule buildDefaultRule(String product, String metricKey) {
 
 		item.setProductText(product);
 		item.setMetricItemText(metricKey);
+		item.setMonitorCount(true);
 
 		rule.addMetricItem(item);
 		rule.addConfig(buildDefaultConfig());

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/DailyCapacityUpdater.java
Patch:
@@ -53,7 +53,7 @@ public void updateDBCapacity(double capacity) throws DalException {
 
 						overload.setReportId(reportId);
 						overload.setReportSize(contentLength);
-						overload.setReportType(CapacityUpdater.HOURLY_TYPE);
+						overload.setReportType(CapacityUpdater.DAILY_TYPE);
 
 						try {
 							DailyReport report = m_dailyReportDao.findByPK(reportId, DailyReportEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/MonthlyCapacityUpdater.java
Patch:
@@ -53,7 +53,7 @@ public void updateDBCapacity(double capacity) throws DalException {
 
 						overload.setReportId(reportId);
 						overload.setReportSize(contentLength);
-						overload.setReportType(CapacityUpdater.HOURLY_TYPE);
+						overload.setReportType(CapacityUpdater.MONTHLY_TYPE);
 
 						try {
 							MonthlyReport report = m_monthlyReportDao.findByPK(reportId, MonthlyReportEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/TableCapacityService.java
Patch:
@@ -110,7 +110,7 @@ public List<OverloadReport> queryOverloadReports(Date startTime, Date endTime) {
 						break;
 					}
 
-					reports.add(generateOverloadReport(report, reportSize, reportId));
+					reports.add(generateOverloadReport(report, reportSize, reportType));
 				} catch (Exception ex) {
 					Cat.logError(ex);
 				}

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/WeeklyCapacityUpdater.java
Patch:
@@ -53,7 +53,7 @@ public void updateDBCapacity(double capacity) throws DalException {
 
 						overload.setReportId(reportId);
 						overload.setReportSize(contentLength);
-						overload.setReportType(CapacityUpdater.HOURLY_TYPE);
+						overload.setReportType(CapacityUpdater.WEEKLY_TYPE);
 
 						try {
 							WeeklyReport report = m_weeklyReportDao.findByPK(reportId, WeeklyReportEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/DailyCapacityUpdater.java
Patch:
@@ -53,7 +53,7 @@ public void updateDBCapacity(double capacity) throws DalException {
 
 						overload.setReportId(reportId);
 						overload.setReportSize(contentLength);
-						overload.setReportType(CapacityUpdater.HOURLY_TYPE);
+						overload.setReportType(CapacityUpdater.DAILY_TYPE);
 
 						try {
 							DailyReport report = m_dailyReportDao.findByPK(reportId, DailyReportEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/MonthlyCapacityUpdater.java
Patch:
@@ -53,7 +53,7 @@ public void updateDBCapacity(double capacity) throws DalException {
 
 						overload.setReportId(reportId);
 						overload.setReportSize(contentLength);
-						overload.setReportType(CapacityUpdater.HOURLY_TYPE);
+						overload.setReportType(CapacityUpdater.MONTHLY_TYPE);
 
 						try {
 							MonthlyReport report = m_monthlyReportDao.findByPK(reportId, MonthlyReportEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/TableCapacityService.java
Patch:
@@ -110,7 +110,7 @@ public List<OverloadReport> queryOverloadReports(Date startTime, Date endTime) {
 						break;
 					}
 
-					reports.add(generateOverloadReport(report, reportSize, reportId));
+					reports.add(generateOverloadReport(report, reportSize, reportType));
 				} catch (Exception ex) {
 					Cat.logError(ex);
 				}

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/WeeklyCapacityUpdater.java
Patch:
@@ -53,7 +53,7 @@ public void updateDBCapacity(double capacity) throws DalException {
 
 						overload.setReportId(reportId);
 						overload.setReportSize(contentLength);
-						overload.setReportType(CapacityUpdater.HOURLY_TYPE);
+						overload.setReportType(CapacityUpdater.WEEKLY_TYPE);
 
 						try {
 							WeeklyReport report = m_weeklyReportDao.findByPK(reportId, WeeklyReportEntity.READSET_FULL);

File: cat-client/src/main/java/com/dianping/cat/status/StatusInfoCollector.java
Patch:
@@ -144,7 +144,7 @@ public void visitMemory(MemoryInfo memory) {
 		memory.setFree(runtime.freeMemory());
 		memory.setHeapUsage(bean.getHeapMemoryUsage().getUsed());
 		memory.setNonHeapUsage(bean.getNonHeapMemoryUsage().getUsed());
-
+		
 		List<GarbageCollectorMXBean> beans = ManagementFactory.getGarbageCollectorMXBeans();
 
 		for (GarbageCollectorMXBean mxbean : beans) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -44,7 +44,8 @@ public boolean createHourlyTask(StateReport report) {
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_UTILIZATION, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_NET_TOPOLOGY, TaskProlicy.HOULY);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_ROUTER, TaskProlicy.DAILY);
-		m_taskManager.createTask(startTime, domain, Constants.DATABASE_CAPACITY, TaskProlicy.ALL);
+		m_taskManager.createTask(startTime, domain, Constants.REPORT_DATABASE_CAPACITY, TaskProlicy.ALL);
+		m_taskManager.createTask(startTime, domain, Constants.REPORT_NOTIFY, TaskProlicy.DAILY);
 		return m_taskManager.createTask(startTime, domain, StateAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
 	}
 

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -37,6 +37,8 @@ public class Constants {
 
 	public static final String REPORT_ROUTER = "router";
 
-	public static final String DATABASE_CAPACITY = "databaseCapacity";
+	public static final String REPORT_DATABASE_CAPACITY = "databaseCapacity";
+
+	public static final String REPORT_NOTIFY = "dailyNotify";
 
 }

File: cat-home/src/main/java/com/dianping/cat/build/WebComponentConfigurator.java
Patch:
@@ -3,12 +3,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.dianping.cat.report.ReportModule;
-import com.dianping.cat.system.SystemModule;
-
 import org.unidal.lookup.configuration.Component;
 import org.unidal.web.configuration.AbstractWebComponentsConfigurator;
 
+import com.dianping.cat.report.ReportModule;
+import com.dianping.cat.system.SystemModule;
+
 class WebComponentConfigurator extends AbstractWebComponentsConfigurator {
 	@SuppressWarnings("unchecked")
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -57,7 +57,8 @@
 
 com.dianping.cat.report.page.alert.Handler.class,
 
-com.dianping.cat.report.page.overload.Handler.class,
+com.dianping.cat.report.page.overload.Handler.class
+
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/graph/MetricGraphCreator.java
Patch:
@@ -225,6 +225,7 @@ public Map<String, LineChart> buildDashboardByGroup(Date start, Date end, String
 			String key = metric.getMetricKey();
 			String id = m_metricConfigManager.buildMetricKey(domain, type, key) + ":"
 			      + metric.getDisplayType().toUpperCase();
+
 			put(allCharts, result, id);
 		}
 		return result;
@@ -308,6 +309,6 @@ private Map<String, double[]> buildGraphData(MetricReport metricReport, List<Met
 				putKey(datas, values, sumKey);
 			}
 		}
-		return datas.isEmpty() ? values : datas;
+		return values;
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/overload/Handler.java
Patch:
@@ -39,8 +39,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		case VIEW:
 			try {
 				model.setReports(m_tableCapacityService.queryOverloadReports(payload.getStartTime(), payload.getEndTime()));
-			} catch (Exception ex) {
-				Cat.logError(ex);
+			} catch (Exception e) {
+				Cat.logError(e);
 			}
 			break;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertEntity.java
Patch:
@@ -23,7 +23,7 @@ public class AlertEntity {
 	private Map<String, Object> m_paras = new HashMap<String, Object>();
 
 	public String getDomain() {
-		if (m_type.equals(AlertType.Business.getName())) {
+		if (AlertType.Business.getName().equals(m_type)) {
 			return String.valueOf(m_paras.get("domain"));
 		} else {
 			return m_group;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -102,9 +102,6 @@ private boolean send(AlertEntity alert) {
 		AlertMessageEntity dbMessage = new AlertMessageEntity(group, title, type, dbContent, null);
 
 		m_alertEntityService.storeAlert(alert, dbMessage);
-		if (AlertType.Business.getName().equals(alert.getType())) {
-			pair = m_decoratorManager.generateTitleAndContent(alert);
-		}
 
 		if (suspendMinute > 0) {
 			if (isSuspend(alertKey, suspendMinute)) {

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/AppDataComparisonNotifier.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify;
+package com.dianping.cat.report.task.notify;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -29,7 +29,7 @@
 import com.dianping.cat.report.task.alert.sender.AlertChannel;
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
-import com.dianping.cat.system.notify.render.AppDataComparisonRender;
+import com.dianping.cat.report.task.notify.render.AppDataComparisonRender;
 import com.site.helper.Splitters;
 import com.site.lookup.util.StringUtils;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/AppDataComparisonResult.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify;
+package com.dianping.cat.report.task.notify;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/ReportRender.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify;
+package com.dianping.cat.report.task.notify;
 
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/render/AppDataComparisonRender.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify.render;
+package com.dianping.cat.report.task.notify.render;
 
 import java.io.StringWriter;
 import java.text.SimpleDateFormat;
@@ -11,7 +11,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.system.notify.AppDataComparisonResult;
+import com.dianping.cat.report.task.notify.AppDataComparisonResult;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/render/EventRender.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify.render;
+package com.dianping.cat.report.task.notify.render;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/render/ProblemRender.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify.render;
+package com.dianping.cat.report.task.notify.render;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: cat-home/src/main/java/com/dianping/cat/report/task/notify/render/TransactionRender.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.notify.render;
+package com.dianping.cat.report.task.notify.render;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/CapacityUpdater.java
Patch:
@@ -11,6 +11,8 @@ public interface CapacityUpdater {
 	public static final int WEEKLY_TYPE = 3;
 
 	public static final int MONTHLY_TYPE = 4;
+	
+	public static final double CAPACITY = 5.0;
 
 	public void updateDBCapacity(double capacity) throws DalException;
 

File: cat-home/src/test/java/com/dianping/cat/system/notify/RenderTest.java
Patch:
@@ -11,6 +11,8 @@
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
+import com.dianping.cat.report.task.notify.ReportRender;
+import com.dianping.cat.report.task.notify.ReportRenderImpl;
 
 public class RenderTest extends ComponentTestCase {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/graph/MetricGraphCreator.java
Patch:
@@ -225,6 +225,7 @@ public Map<String, LineChart> buildDashboardByGroup(Date start, Date end, String
 			String key = metric.getMetricKey();
 			String id = m_metricConfigManager.buildMetricKey(domain, type, key) + ":"
 			      + metric.getDisplayType().toUpperCase();
+
 			put(allCharts, result, id);
 		}
 		return result;
@@ -308,6 +309,6 @@ private Map<String, double[]> buildGraphData(MetricReport metricReport, List<Met
 				putKey(datas, values, sumKey);
 			}
 		}
-		return datas.isEmpty() ? values : datas;
+		return values;
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -103,7 +103,7 @@ public List<Component> defineComponents() {
 		      AggregationConfigManager.class, AlertConfigManager.class));
 
 		all.add(C(ContactorManager.class));
-
+		
 		all.add(C(Decorator.class, BusinessDecorator.ID, BusinessDecorator.class).req(ProductLineConfigManager.class,
 		      AlertSummaryExecutor.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertEntity.java
Patch:
@@ -23,7 +23,7 @@ public class AlertEntity {
 	private Map<String, Object> m_paras = new HashMap<String, Object>();
 
 	public String getDomain() {
-		if (m_type.equals(AlertType.Business.getName())) {
+		if (AlertType.Business.getName().equals(m_type)) {
 			return String.valueOf(m_paras.get("domain"));
 		} else {
 			return m_group;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -102,9 +102,6 @@ private boolean send(AlertEntity alert) {
 		AlertMessageEntity dbMessage = new AlertMessageEntity(group, title, type, dbContent, null);
 
 		m_alertEntityService.storeAlert(alert, dbMessage);
-		if (AlertType.Business.getName().equals(alert.getType())) {
-			pair = m_decoratorManager.generateTitleAndContent(alert);
-		}
 
 		if (suspendMinute > 0) {
 			if (isSuspend(alertKey, suspendMinute)) {

File: cat-home/src/main/java/com/dianping/cat/report/task/overload/HourlyCapacityUpdater.java
Patch:
@@ -28,7 +28,7 @@ public class HourlyCapacityUpdater implements CapacityUpdater {
 	private OverloadDao m_overloadDao;
 
 	public static final String ID = "hourly_capacity_updater";
-
+	
 	@Override
 	public String getId() {
 		return ID;

File: cat-client/src/main/java/com/dianping/cat/status/StatusInfoCollector.java
Patch:
@@ -144,7 +144,7 @@ public void visitMemory(MemoryInfo memory) {
 		memory.setFree(runtime.freeMemory());
 		memory.setHeapUsage(bean.getHeapMemoryUsage().getUsed());
 		memory.setNonHeapUsage(bean.getNonHeapMemoryUsage().getUsed());
-
+		
 		List<GarbageCollectorMXBean> beans = ManagementFactory.getGarbageCollectorMXBeans();
 
 		for (GarbageCollectorMXBean mxbean : beans) {

File: cat-home/src/main/java/com/dianping/cat/report/task/database/HourlyCapacityUpdater.java
Patch:
@@ -53,7 +53,6 @@ public String getId() {
 
 	@Override
 	public int updateDBCapacity(double capacity) throws DalException {
-		System.out.println("beginnnnnnn");
 		int maxId = m_overloadTableDao.findMaxIdByType(TYPE, OverloadTableEntity.READSET_MAXID).getMaxId();
 		int loopStartId = maxId;
 		boolean hasMore = true;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -109,10 +109,9 @@ private void processEvent(EventReport report, MessageTree tree, Event event) {
 	private void processEventGrpah(EventName name, Event t) {
 		long current = t.getTimestamp() / 1000 / 60;
 		int min = (int) (current % (60));
-		int tk = min - min % 5;
 
 		synchronized (name) {
-			Range range = name.findOrCreateRange(tk);
+			Range range = name.findOrCreateRange(min);
 
 			range.incCount();
 			if (!t.isSuccess()) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -149,14 +149,13 @@ public void process(MessageTree tree) {
 
 	private void processNameGraph(Transaction t, TransactionName name, int min, double d) {
 		int dk = 1;
-		int tk = min - min % 5;
 
 		while (dk < d) {
 			dk <<= 1;
 		}
 
 		Duration duration = name.findOrCreateDuration(dk);
-		Range range = name.findOrCreateRange(tk);
+		Range range = name.findOrCreateRange(min);
 
 		duration.incCount();
 		range.incCount();

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -168,7 +168,6 @@ public Date getHistoryEndDate() {
 
 	public Date getHistoryStartDate() {
 		if (m_customStart != null) {
-			System.out.println(m_customStart);
 			try {
 				if (m_customStart.length() == 8) {
 					return m_dayFormat.parse(m_customStart);

File: cat-home/src/main/java/com/dianping/cat/report/page/system/graph/SystemGraphCreator.java
Patch:
@@ -86,7 +86,7 @@ private Set<String> buildIpAddrs(String ipPar, Set<String> ipAll) {
 		}
 	}
 
-	private Map<String, double[]> prepareAllData(String group, Map<String, String> pars, Set<String> ipAddrs,
+	public Map<String, double[]> prepareAllData(String group, Map<String, String> pars, Set<String> ipAddrs,
 	      Date startDate, Date endDate) {
 		long start = startDate.getTime(), end = endDate.getTime();
 		int totalSize = (int) ((end - start) / TimeUtil.ONE_MINUTE);

File: cat-home/src/test/java/com/dianping/cat/report/page/event/EventGraphDataTest.java
Patch:
@@ -36,7 +36,8 @@ public void testBuildGraphDatasByType() throws IOException {
 		Map<String, double[]> graphDatas = handler.buildGraphDatasForHour(start, end, "URL", "", graphs);
 		double[] total_count = graphDatas.get("total_count");
 		double[] failure_count = graphDatas.get("failure_count");
-		assertArray(30, total_count);
+		
+		assertArray(6, total_count);
 		assertArray(0, failure_count);
 	}
 
@@ -57,7 +58,7 @@ public void testBuildGraphDatasByTypeAndName() throws IOException {
 		Map<String, double[]> graphDatas = handler.buildGraphDatasForHour(start, end, "URL", "ClientInfo", graphs);
 		double[] total_count = graphDatas.get("total_count");
 		double[] failure_count = graphDatas.get("failure_count");
-		assertArray(15, total_count);
+		assertArray(3, total_count);
 		assertArray(0, failure_count);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Handler.java
Patch:
@@ -13,7 +13,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.home.OverloadReport.entity.OverloadReport;
 import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.task.monitor.database.TableCapacityService;
+import com.dianping.cat.report.task.database.TableCapacityService;
 
 public class Handler implements PageHandler<Context> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/task/database/CapacityUpdater.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.monitor.database;
+package com.dianping.cat.report.task.database;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/database/DailyCapacityUpdater.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.monitor.database;
+package com.dianping.cat.report.task.database;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/database/HourlyCapacityUpdater.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.monitor.database;
+package com.dianping.cat.report.task.database;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/database/MonthlyCapacityUpdater.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.monitor.database;
+package com.dianping.cat.report.task.database;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/database/TableCapacityService.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.monitor.database;
+package com.dianping.cat.report.task.database;
 
 import java.util.ArrayList;
 import java.util.Calendar;

File: cat-home/src/main/java/com/dianping/cat/report/task/database/WeeklyCapacityUpdater.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.task.monitor.database;
+package com.dianping.cat.report.task.database;
 
 import java.util.List;
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/AppDataConsumer.java
Patch:
@@ -67,7 +67,7 @@ public void loadOldData() {
 		File path = new File(SAVE_PATH);
 		File[] files = path.listFiles();
 
-		if (files.length > 0) {
+		if (files != null && files.length > 0) {
 
 			for (File file : files) {
 				try {
@@ -90,7 +90,7 @@ public void loadOldData() {
 			File paths = new File(SAVE_PATH);
 			File[] leftFiles = paths.listFiles();
 
-			if (leftFiles.length > 0) {
+			if (leftFiles != null && leftFiles.length > 0) {
 				for (File file : leftFiles) {
 					boolean success = file.delete();
 

File: cat-home/src/main/java/com/dianping/cat/system/notify/AppDataComparisonNotifier.java
Patch:
@@ -227,7 +227,7 @@ private double queryOneDayDelay4Command(Date yesterday, String url) {
 		Integer command = m_appConfigManager.getCommands().get(url);
 
 		if (command != null) {
-			QueryEntity entity = new QueryEntity(yesterdayStr + ";" + command + ";;;;;;;");
+			QueryEntity entity = new QueryEntity(yesterdayStr + ";" + command + ";;;;;;;;;");
 
 			return m_appDataService.queryOneDayDelayAvg(entity);
 		} else {

File: cat-home/src/main/java/com/dianping/cat/system/notify/AppDataComparisonNotifier.java
Patch:
@@ -227,7 +227,7 @@ private double queryOneDayDelay4Command(Date yesterday, String url) {
 		Integer command = m_appConfigManager.getCommands().get(url);
 
 		if (command != null) {
-			QueryEntity entity = new QueryEntity(yesterdayStr + ";" + command + ";;;;;;;");
+			QueryEntity entity = new QueryEntity(yesterdayStr + ";" + command + ";;;;;;;;;");
 
 			return m_appDataService.queryOneDayDelayAvg(entity);
 		} else {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/AppDataConsumer.java
Patch:
@@ -67,7 +67,7 @@ public void loadOldData() {
 		File path = new File(SAVE_PATH);
 		File[] files = path.listFiles();
 
-		if (files.length > 0) {
+		if (files != null && files.length > 0) {
 
 			for (File file : files) {
 				try {
@@ -90,7 +90,7 @@ public void loadOldData() {
 			File paths = new File(SAVE_PATH);
 			File[] leftFiles = paths.listFiles();
 
-			if (leftFiles.length > 0) {
+			if (leftFiles != null && leftFiles.length > 0) {
 				for (File file : leftFiles) {
 					boolean success = file.delete();
 

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProjectUpdateTask.java
Patch:
@@ -291,7 +291,7 @@ private Map<String, String> queryProjectInfoFromCMDB(String cmdbDomain) {
 		} finally {
 			t.complete();
 		}
-		return null;
+		return new HashMap<String, String>();
 	}
 
 	private String queryProjectInfoFromCMDB(String url, String jsonName, String attrName) {

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataService.java
Patch:
@@ -120,7 +120,7 @@ private double computeSuccessRatio(int commandId, List<AppDataCommand> datas) {
 			}
 			sum += number;
 		}
-		return sum == 0 ? 0 : (double) success / sum;
+		return sum == 0 ? 0 : (double) success / sum * 100;
 	}
 
 	private AppDataCommandMap convert2AppDataCommandMap(List<AppDataCommand> fromDatas, Date period) {

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataService.java
Patch:
@@ -120,7 +120,7 @@ private double computeSuccessRatio(int commandId, List<AppDataCommand> datas) {
 			}
 			sum += number;
 		}
-		return sum == 0 ? 0 : (double) success / sum;
+		return sum == 0 ? 0 : (double) success / sum * 100;
 	}
 
 	private AppDataCommandMap convert2AppDataCommandMap(List<AppDataCommand> fromDatas, Date period) {

File: cat-home/src/main/java/com/dianping/cat/system/notify/AppDataComparisonNotifier.java
Patch:
@@ -105,7 +105,7 @@ private Map<String, String> buildUser2Ids(Set<String> allUsers, Map<String, AppD
 					if (StringUtils.isEmpty(ids)) {
 						user2Id.put(user, id);
 					} else {
-						user2Id.put(user, ids + ";" + id);
+						user2Id.put(user, ids + "," + id);
 					}
 				}
 			}
@@ -145,8 +145,8 @@ private Map<List<String>, List<AppDataComparisonResult>> buildUsers2Results(Map<
 		Map<List<String>, List<AppDataComparisonResult>> users2Results = new HashMap<List<String>, List<AppDataComparisonResult>>();
 
 		for (Entry<String, String> entry : id2Users.entrySet()) {
-			List<String> emails = Splitters.by(";").noEmptyItem().split(entry.getValue());
-			List<String> ids = Splitters.by(";").noEmptyItem().split(entry.getKey());
+			List<String> emails = Splitters.by(",").noEmptyItem().split(entry.getValue());
+			List<String> ids = Splitters.by(",").noEmptyItem().split(entry.getKey());
 			List<AppDataComparisonResult> userResults = new ArrayList<AppDataComparisonResult>();
 
 			for (String id : ids) {

File: cat-home/src/main/java/com/dianping/cat/report/page/LineChart.java
Patch:
@@ -83,7 +83,8 @@ public String getId() {
 	}
 
 	public String getJsonString() {
-		return new JsonBuilder().toJson(this);
+		String json = new JsonBuilder().toJson(this);
+		return json;
 	}
 
 	public int getSize() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -75,6 +75,7 @@ private void processMetricItemConfig(MetricItemConfig config, int minute, Produc
 				entity.setDate(alertResult.getAlertTime()).setContent(alertResult.getContent())
 				      .setLevel(alertResult.getAlertLevel());
 				entity.setMetric(metricName).setType(getName()).setGroup(product);
+				entity.getParas().put("domain", domain);
 
 				m_sendManager.addAlert(entity);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/spliter/MailSpliter.java
Patch:
@@ -8,7 +8,7 @@ public class MailSpliter implements Spliter {
 
 	@Override
 	public String process(String content) {
-		return content;
+		return content+"<br/><a href=\"http://web.cmdb.dp/app-alter/app\">修改项目信息请点击</a>";
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/service/AlertEntityService.java
Patch:
@@ -17,9 +17,9 @@ public class AlertEntityService {
 	private Alert buildAlert(AlertEntity alertEntity, AlertMessageEntity message) {
 		Alert alert = new Alert();
 
-		alert.setDomain(alertEntity.getGroup());
+		alert.setDomain(alertEntity.getDomain());
 		alert.setAlertTime(alertEntity.getDate());
-		alert.setCategory(alertEntity.getType() + "-alert");
+		alert.setCategory(alertEntity.getType());
 		alert.setType(alertEntity.getLevel());
 		alert.setContent(message.getTitle() + "<br/>" + message.getContent());
 		alert.setMetric(alertEntity.getMetric());

File: cat-broker/src/test/java/com/dianping/cat/broker/AllTests.java
Patch:
@@ -4,14 +4,11 @@
 import org.junit.runners.Suite;
 import org.junit.runners.Suite.SuiteClasses;
 
-import com.dianping.cat.broker.js.AggregationConfigManagerTest;
 import com.dianping.cat.broker.js.ParseTest;
 
 @RunWith(Suite.class)
 @SuiteClasses({
 
-AggregationConfigManagerTest.class,
-
 ParseTest.class
 
 })

File: cat-broker/src/test/java/com/dianping/cat/broker/AllTests.java
Patch:
@@ -4,14 +4,11 @@
 import org.junit.runners.Suite;
 import org.junit.runners.Suite.SuiteClasses;
 
-import com.dianping.cat.broker.js.AggregationConfigManagerTest;
 import com.dianping.cat.broker.js.ParseTest;
 
 @RunWith(Suite.class)
 @SuiteClasses({
 
-AggregationConfigManagerTest.class,
-
 ParseTest.class
 
 })

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProjectUpdateTask.java
Patch:
@@ -185,7 +185,7 @@ private String parseInfo(String content, String jsonName, String attrName) throw
 			Object obj = json.get(attrName);
 
 			if (obj != null) {
-				obj.toString();
+				return obj.toString();
 			}
 		}
 		return null;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/ApiModule.java
Patch:
@@ -13,7 +13,9 @@
 
 com.dianping.cat.broker.api.page.js.Handler.class,
 
-com.dianping.cat.broker.api.page.cdn.Handler.class
+com.dianping.cat.broker.api.page.cdn.Handler.class,
+
+com.dianping.cat.broker.api.page.save.Handler.class
 })
 public class ApiModule extends AbstractModule {
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/ApiPage.java
Patch:
@@ -11,7 +11,9 @@ public enum ApiPage implements Page {
 
    JS("js", "js", "Js", "Js", true),
 
-   CDN("cdn", "cdn", "Cdn", "Cdn", true);
+   CDN("cdn", "cdn", "Cdn", "Cdn", true),
+
+   SAVE("save", "save", "Save", "Save", true);
 
    private String m_name;
 

File: cat-client/src/main/java/com/dianping/cat/configuration/ClientConfigManager.java
Patch:
@@ -162,7 +162,8 @@ public String getServerConfigUrl() {
 				if (httpPort == null || httpPort == 0) {
 					httpPort = 8080;
 				}
-				return String.format("http://%s:%d/cat/s/router?domain=%s", server.getIp(), httpPort, getDomain().getId());
+				return String.format("http://%s:%d/cat/s/router?domain=%s", server.getIp().trim(), httpPort, getDomain()
+				      .getId());
 			}
 		}
 		return null;

File: cat-client/src/test/java/com/dianping/cat/message/spi/codec/PlainTextPerformanceCodecTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.message.spi.core;
+package com.dianping.cat.message.spi.codec;
 
 import java.io.PrintWriter;
 import java.io.StringWriter;

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataService.java
Patch:
@@ -80,7 +80,7 @@ public Double[] queryValue(QueryEntity entity, String type) {
 		return null;
 	}
 
-	private static int queryTenMinutesBackLength(Date period, int n) {
+	private int queryTenMinutesBackLength(Date period, int n) {
 		int size = n;
 		Calendar cal = Calendar.getInstance();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Action.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.report.page.alert;
 
+
 public enum Action implements org.unidal.web.mvc.Action {
 	ALERT("alert"),
 
@@ -16,8 +17,9 @@ public static Action getByName(String name, Action defaultAction) {
 			if (action.getName().equals(name)) {
 				return action;
 			}
+			
 		}
-
+		
 		return defaultAction;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/service/HostinfoService.java
Patch:
@@ -76,10 +76,10 @@ public Hostinfo findByIp(String ip) {
 			return hostinfo;
 		} else {
 			try {
-				Hostinfo host = m_hostinfoDao.findByIp(ip, HostinfoEntity.READSET_FULL);
+				hostinfo = m_hostinfoDao.findByIp(ip, HostinfoEntity.READSET_FULL);
 
 				m_hostinfos.put(ip, hostinfo);
-				return host;
+				return hostinfo;
 			} catch (DalNotFoundException e) {
 			} catch (Exception e) {
 				Cat.logError(e);
@@ -270,6 +270,7 @@ private void queryFromDatabase() {
 						addIps.add(hostinfo.getIp());
 						m_ipDomains.put(hostinfo.getIp(), hostinfo.getDomain());
 					}
+
 				} catch (Exception e) {
 					// ignore
 				}

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/save/Handler.java
Patch:
@@ -15,7 +15,7 @@
 
 public class Handler implements PageHandler<Context> {
 	@Inject
-	private JspViewer m_jspViewer;
+	protected JspViewer m_jspViewer;
 	
 	@Inject
 	private AppDataConsumer m_appDataConsumer;

File: cat-broker/src/test/java/com/dianping/cat/broker/AppTest.java
Patch:
@@ -6,8 +6,6 @@
 import java.net.URLConnection;
 import java.net.URLEncoder;
 import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.Date;
 import java.util.List;
 
 import org.junit.Test;

File: cat-client/src/test/java/com/dianping/cat/message/spi/codec/PlainTextPerformanceCodecTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.message.spi.core;
+package com.dianping.cat.message.spi.codec;
 
 import java.io.PrintWriter;
 import java.io.StringWriter;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -109,7 +109,7 @@ private void processEvent(EventReport report, MessageTree tree, Event event) {
 	private void processEventGrpah(EventName name, Event t) {
 		long current = t.getTimestamp() / 1000 / 60;
 		int min = (int) (current % (60));
-		int tk = min - min % 1;
+		int tk = min - min % 5;
 
 		synchronized (name) {
 			Range range = name.findOrCreateRange(tk);

File: cat-client/src/main/java/com/dianping/cat/configuration/ClientConfigManager.java
Patch:
@@ -162,7 +162,8 @@ public String getServerConfigUrl() {
 				if (httpPort == null || httpPort == 0) {
 					httpPort = 8080;
 				}
-				return String.format("http://%s:%d/cat/s/router?domain=%s", server.getIp(), httpPort, getDomain().getId());
+				return String.format("http://%s:%d/cat/s/router?domain=%s", server.getIp().trim(), httpPort, getDomain()
+				      .getId());
 			}
 		}
 		return null;

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataService.java
Patch:
@@ -80,7 +80,7 @@ public Double[] queryValue(QueryEntity entity, String type) {
 		return null;
 	}
 
-	private static int queryTenMinutesBackLength(Date period, int n) {
+	private int queryTenMinutesBackLength(Date period, int n) {
 		int size = n;
 		Calendar cal = Calendar.getInstance();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Action.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.report.page.alert;
 
+
 public enum Action implements org.unidal.web.mvc.Action {
 	ALERT("alert"),
 
@@ -16,8 +17,9 @@ public static Action getByName(String name, Action defaultAction) {
 			if (action.getName().equals(name)) {
 				return action;
 			}
+			
 		}
-
+		
 		return defaultAction;
 	}
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/AppDataQueue.java
Patch:
@@ -5,17 +5,17 @@
 import java.util.concurrent.TimeUnit;
 
 public class AppDataQueue {
-	private BlockingQueue<AppData> m_dataQueue = new LinkedBlockingQueue<AppData>(10000);
+	private BlockingQueue<AppData> m_datas = new LinkedBlockingQueue<AppData>(100000);
 
 	public boolean offer(AppData appData) {
-		return m_dataQueue.offer(appData);
+		return m_datas.offer(appData);
 	}
 
 	public AppData poll() {
 		AppData appData;
 
 		try {
-			appData = m_dataQueue.poll(5, TimeUnit.MICROSECONDS);
+			appData = m_datas.poll(5, TimeUnit.MICROSECONDS);
 		} catch (InterruptedException e) {
 			return null;
 		}

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/IpService.java
Patch:
@@ -39,9 +39,9 @@ private IpInfo findIpInfo(long ip) {
 					ipInfo.setProvince(area.getProvince());
 					ipInfo.setCity(area.getCity());
 				} else {
-					ipInfo.setNation("未知");
-					ipInfo.setProvince("未知");
-					ipInfo.setCity("未知");
+					ipInfo.setNation("其他");
+					ipInfo.setProvince("其他");
+					ipInfo.setCity("其他");
 				}
 
 				Corporation corp = m_corps.get(m_corpIds[mid]);

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/cdn/Handler.java
Patch:
@@ -14,9 +14,11 @@
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.broker.api.page.MonitorEntity;
 import com.dianping.cat.broker.api.page.MonitorManager;
 import com.dianping.cat.broker.api.page.RequestUtils;
+import com.dianping.cat.message.Event;
 
 public class Handler implements PageHandler<Context>, LogEnabled {
 
@@ -72,6 +74,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
+			Cat.logEvent("unknownIp", "cdn", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/Handler.java
Patch:
@@ -72,8 +72,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				Cat.logEvent("Code", "Error", Event.SUCCESS, errorCode + " " + httpStatus);
 			}
 		} else {
-			Cat.logEvent("ip", "miss", Event.SUCCESS, request.getHeader("x-forwarded-for"));
-
+			Cat.logEvent("unknownIp", "single", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-broker/src/test/java/com/dianping/cat/broker/TestServer.java
Patch:
@@ -44,7 +44,7 @@ protected void postConfigure(WebAppContext context) {
    @Test
    public void startWebapp() throws Exception {
       // open the page in the default browser
-      display("/broker-service/api");
+      //display("/broker-service/api");
       waitForAnyKey();
    }
 }

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -94,10 +94,12 @@ public void run() {
 				try {
 					MessageTree tree = m_queue.poll();
 
+					
 					if (tree != null) {
 						sendInternal(tree);
 						tree.setMessage(null);
 					}
+					
 				} catch (Throwable t) {
 					m_logger.error("Error when sending message over TCP socket!", t);
 				}

File: cat-core/src/main/java/com/dianping/cat/config/aggregation/AggregationConfigManager.java
Patch:
@@ -174,7 +174,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					Thread.sleep(10 * 1000L);
+					Thread.sleep(60 * 1000L);
 				} catch (InterruptedException e) {
 					active = false;
 				}

File: cat-core/src/main/java/com/dianping/cat/config/url/UrlPatternConfigManager.java
Patch:
@@ -142,7 +142,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					Thread.sleep(10 * 1000L);
+					Thread.sleep(60 * 1000L);
 				} catch (InterruptedException e) {
 					active = false;
 				}

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketTest.java
Patch:
@@ -26,6 +26,7 @@
 public class LocalMessageBucketTest extends ComponentTestCase {
 
 	private final String m_baseDir = "target/bucket/hdfs/dump/";
+	private final String m_dataDir = "/data/appdatas/cat/";
 
 	public void setup() {
 		String[] files = { "dump", "dump-0", "dump-1", "dump-2", "outbox/dump" };
@@ -34,9 +35,10 @@ public void setup() {
 			new File(m_baseDir + file).delete();
 			new File(m_baseDir + file + ".idx").delete();
 		}
-
+		
 		String tmpDir = System.getProperty("java.io.tmpdir");
 		new File(tmpDir, "cat-Test.mark").delete();
+		new File(m_dataDir, "cat-Test.mark").delete();
 	}
 
 	@Test

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -6,7 +6,6 @@
 import org.unidal.lookup.configuration.AbstractResourceConfigurator;
 import org.unidal.lookup.configuration.Component;
 
-import com.dianping.cat.DomainManager;
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
@@ -51,6 +50,7 @@
 import com.dianping.cat.report.task.transaction.TransactionMerger;
 import com.dianping.cat.report.task.transaction.TransactionReportBuilder;
 import com.dianping.cat.report.task.utilization.UtilizationReportBuilder;
+import com.dianping.cat.service.HostinfoService;
 import com.dianping.cat.system.config.ExceptionConfigManager;
 import com.dianping.cat.system.config.NetGraphConfigManager;
 import com.dianping.cat.system.config.RouterConfigManager;
@@ -101,7 +101,7 @@ public List<Component> defineComponents() {
 		all.add(C(ReportTaskBuilder.class, BugReportBuilder.ID, BugReportBuilder.class).req(ReportServiceManager.class));
 
 		all.add(C(ReportTaskBuilder.class, ServiceReportBuilder.ID, ServiceReportBuilder.class).req(ReportServiceManager.class,
-		      DomainManager.class));
+				HostinfoService.class));
 
 		all.add(C(ReportTaskBuilder.class, MatrixReportBuilder.ID, MatrixReportBuilder.class).req(ReportServiceManager.class));
 
@@ -118,7 +118,7 @@ public List<Component> defineComponents() {
 		all.add(C(ReportTaskBuilder.class, HeavyReportBuilder.ID, HeavyReportBuilder.class).req(ReportServiceManager.class));
 
 		all.add(C(ReportTaskBuilder.class, UtilizationReportBuilder.ID, UtilizationReportBuilder.class).req(
-		      ReportServiceManager.class, TransactionMergeManager.class, ServerConfigManager.class, DomainManager.class));
+		      ReportServiceManager.class, TransactionMergeManager.class, ServerConfigManager.class, HostinfoService.class));
 
 		all.add(C(ReportTaskBuilder.class, DependencyReportBuilder.ID, DependencyReportBuilder.class).req(
 		      ReportServiceManager.class, TopologyGraphBuilder.class, TopologyGraphDao.class));

File: cat-home/src/main/java/com/dianping/cat/report/chart/impl/CachedMetricReportServiceImpl.java
Patch:
@@ -5,8 +5,8 @@
 import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
 
 import org.unidal.lookup.annotation.Inject;
 
@@ -18,7 +18,7 @@
 import com.dianping.cat.report.page.cdn.graph.CdnReportConvertor;
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.system.graph.SystemReportConvertor;
-import com.dianping.cat.report.page.userMonitor.graph.UserMonitorReportConvertor;
+import com.dianping.cat.report.page.web.graph.WebReportConvertor;
 import com.dianping.cat.report.service.ReportServiceManager;
 import com.dianping.cat.service.IpService;
 import com.dianping.cat.service.ModelPeriod;
@@ -109,7 +109,7 @@ public MetricReport queryUserMonitorReport(String product, Map<String, String> p
 			String channel = properties.get("channel");
 			String type = properties.get("type");
 
-			UserMonitorReportConvertor convert = new UserMonitorReportConvertor(type, city, channel);
+			WebReportConvertor convert = new WebReportConvertor(type, city, channel);
 
 			convert.visitMetricReport(report);
 			return convert.getReport();

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Context.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.alert;
 
 import com.dianping.cat.report.ReportContext;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Payload.java
Patch:
@@ -30,7 +30,7 @@ public QueryEntity getQueryEntity1() {
 		if (m_query1 != null && m_query1.length() > 0) {
 			return new QueryEntity(m_query1);
 		} else {
-			return null;
+			return new QueryEntity();
 		}
 	}
 
@@ -41,7 +41,7 @@ public QueryEntity getQueryEntity2() {
 			return null;
 		}
 	}
-	
+
 	@Override
 	public Action getAction() {
 		return m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/Handler.java
Patch:
@@ -15,9 +15,9 @@
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.DomainManager;
 import com.dianping.cat.home.dal.report.Event;
 import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.service.HostinfoService;
 
 public class Handler implements PageHandler<Context> {
 	@Inject
@@ -27,7 +27,7 @@ public class Handler implements PageHandler<Context> {
 	private EventCollectManager m_errorCollectManager;
 
 	@Inject
-	private DomainManager m_domainManager;
+	private HostinfoService m_hostinfoService;
 
 	private SimpleDateFormat m_sdf = new SimpleDateFormat("yyyyMMddHHmmss");
 
@@ -56,7 +56,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		if (type == EventCollectManager.DB_ERROR) {
 			event.setDomain(payload.getDatabase());
 		} else {
-			String domain = m_domainManager.queryDomainByIp(ip);
+			String domain = m_hostinfoService.queryDomainByIp(ip);
 
 			event.setDomain(domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -61,7 +61,7 @@
 import com.dianping.cat.report.page.model.top.LocalTopService;
 import com.dianping.cat.report.page.model.transaction.LocalTransactionService;
 import com.dianping.cat.report.page.system.graph.SystemReportConvertor;
-import com.dianping.cat.report.page.userMonitor.graph.UserMonitorReportConvertor;
+import com.dianping.cat.report.page.web.graph.WebReportConvertor;
 import com.dianping.cat.report.view.StringSortHelper;
 import com.dianping.cat.service.IpService;
 import com.dianping.cat.service.ModelPeriod;
@@ -234,7 +234,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				if (Constants.METRIC_USER_MONITOR.equals(metricType)) {
 					String city = payload.getCity();
 					String channel = payload.getChannel();
-					UserMonitorReportConvertor convert = new UserMonitorReportConvertor(type, city, channel);
+					WebReportConvertor convert = new WebReportConvertor(type, city, channel);
 					MetricReport metricReport = (MetricReport) response.getModel();
 
 					convert.visitMetricReport(metricReport);

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Payload.java
Patch:
@@ -23,7 +23,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_productLine = "All";
 
 	@FieldMeta("type")
-	private String m_type = "system";
+	private String m_type = "paasSystem";
 
 	@FieldMeta("ipAddrs")
 	private String m_ipAddrs = "All";

File: cat-home/src/main/java/com/dianping/cat/report/page/web/Action.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.web;
 
 public enum Action implements org.unidal.web.mvc.Action {
 	VIEW("view");

File: cat-home/src/main/java/com/dianping/cat/report/page/web/CityManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.web;
 
 import java.io.IOException;
 import java.util.ArrayList;

File: cat-home/src/main/java/com/dianping/cat/report/page/web/JspFile.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.web;
 
 public enum JspFile {
-	VIEW("/jsp/report/userMonitor.jsp"),
+	VIEW("/jsp/report/web.jsp"),
 
 	;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/web/JspViewer.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.web;
 
 import org.unidal.web.mvc.view.BaseJspViewer;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/web/Model.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.web;
 
 import java.util.ArrayList;
 import java.util.Collection;

File: cat-home/src/main/java/com/dianping/cat/report/page/web/graph/WebReportConvertor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor.graph;
+package com.dianping.cat.report.page.web.graph;
 
 import org.hsqldb.lib.StringUtil;
 
@@ -11,7 +11,7 @@
 import com.dianping.cat.consumer.metric.model.transform.BaseVisitor;
 import com.site.lookup.util.StringUtils;
 
-public class UserMonitorReportConvertor extends BaseVisitor {
+public class WebReportConvertor extends BaseVisitor {
 
 	private MetricReport m_report;
 
@@ -21,7 +21,7 @@ public class UserMonitorReportConvertor extends BaseVisitor {
 
 	private String m_channel;
 
-	public UserMonitorReportConvertor(String type, String city, String channel) {
+	public WebReportConvertor(String type, String city, String channel) {
 		m_type = type;
 		m_city = city;
 		m_channel = channel;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -16,15 +16,15 @@
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.report.task.alert.AlertConstants;
 import com.dianping.cat.report.task.alert.AlertResultEntity;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.BaseAlert;
 import com.dianping.cat.report.task.alert.MetricType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
 public class BusinessAlert extends BaseAlert implements Task, LogEnabled {
 
-	public static String ID = AlertConstants.BUSINESS;
+	public static String ID = AlertType.Business.getName();
 
 	@Inject
 	protected MetricConfigManager m_metricConfigManager;
@@ -55,7 +55,7 @@ private void processMetricItemConfig(MetricItemConfig config, int minute, Produc
 			String metric = config.getMetricKey();
 			String metricKey = m_metricConfigManager.buildMetricKey(domain, config.getType(), metric);
 			List<AlertResultEntity> alertResults = new ArrayList<AlertResultEntity>();
-			
+
 			if (config.isShowAvg()) {
 				alertResults.addAll(computeAlertInfo(minute, product, metricKey, MetricType.AVG));
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/network/NetworkAlert.java
Patch:
@@ -10,7 +10,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.BaseAlert;
 
 public class NetworkAlert extends BaseAlert implements Task, LogEnabled {
@@ -22,7 +22,7 @@ public void enableLogging(Logger logger) {
 
 	@Override
 	public String getName() {
-		return AlertConstants.NETWORK;
+		return AlertType.Network.getName();
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/BusinessDecorator.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.report.task.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
-public class BusinessDecorator extends DefaultDecorator {
+public class BusinessDecorator extends ProductlineDecorator {
 
-	public static final String ID = AlertConstants.BUSINESS;
+	public static final String ID = AlertType.Business.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/Decorator.java
Patch:
@@ -9,5 +9,7 @@ public interface Decorator {
 	public String generateTitle(AlertEntity alert);
 
 	public String generateContent(AlertEntity alert);
-	
+
+	public String buildContactInfo(String group);
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/NetworkDecorator.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.report.task.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
-public class NetworkDecorator extends DefaultDecorator {
+public class NetworkDecorator extends ProductlineDecorator {
 
-	public static final String ID = AlertConstants.NETWORK;
+	public static final String ID = AlertType.Network.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/SystemDecorator.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.report.task.alert.sender.decorator;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
-public class SystemDecorator extends DefaultDecorator {
+public class SystemDecorator extends ProductlineDecorator {
 
-	public static final String ID = AlertConstants.SYSTEM;
+	public static final String ID = AlertType.System.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/BusinessContactor.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 
 public class BusinessContactor extends ProductlineContactor {
 
-	public static final String ID = AlertConstants.BUSINESS;
+	public static final String ID = AlertType.Business.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/ExceptionContactor.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 
 public class ExceptionContactor extends ProjectContactor {
 
-	public static final String ID = AlertConstants.EXCEPTION;
+	public static final String ID = AlertType.Exception.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/NetworkContactor.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 
 public class NetworkContactor extends ProductlineContactor {
 
-	public static final String ID = AlertConstants.NETWORK;
+	public static final String ID = AlertType.Network.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/SystemContactor.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 
 public class SystemContactor extends ProductlineContactor {
 
-	public static final String ID = AlertConstants.SYSTEM;
+	public static final String ID = AlertType.System.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/ThirdpartyContactor.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.receiver;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 
 public class ThirdpartyContactor extends ProjectContactor {
 
-	public static final String ID = AlertConstants.THIRDPARTY;
+	public static final String ID = AlertType.ThirdParty.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/Sender.java
Patch:
@@ -6,6 +6,6 @@ public interface Sender {
 
 	public String getId();
 
-	public boolean send(AlertMessageEntity message, String alertType);
+	public boolean send(AlertMessageEntity message);
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/spliter/MailSpliter.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.spliter;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.sender.AlertChannel;
 
 public class MailSpliter implements Spliter {
 
-	public static final String ID = AlertConstants.MAIL;
+	public static final String ID = AlertChannel.MAIL.getName();
 
 	@Override
 	public String process(String content) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/spliter/SmsSpliter.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.spliter;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.sender.AlertChannel;
 
 public class SmsSpliter implements Spliter {
 
-	public static final String ID = AlertConstants.SMS;
+	public static final String ID = AlertChannel.SMS.getName();
 
 	@Override
 	public String process(String content) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/spliter/WeixinSpliter.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.task.alert.sender.spliter;
 
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.sender.AlertChannel;
 
 public class WeixinSpliter implements Spliter {
 
-	public static final String ID = AlertConstants.WEIXIN;
+	public static final String ID = AlertChannel.WEIXIN.getName();
 
 	@Override
 	public String process(String content) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/system/SystemAlert.java
Patch:
@@ -10,7 +10,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.report.task.alert.AlertConstants;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.BaseAlert;
 
 public class SystemAlert extends BaseAlert implements Task, LogEnabled {
@@ -22,7 +22,7 @@ public void enableLogging(Logger logger) {
 
 	@Override
 	public String getName() {
-		return AlertConstants.SYSTEM;
+		return AlertType.System.getName();
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -68,8 +68,7 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 
 				if (validate) {
 					configs.addAll(rule.getConfigs());
-					Cat.logEvent("FindRule", getCategoryName(), Event.SUCCESS,
-					      "find rule for " + metricKey + ": " + rule.toString());
+					Cat.logEvent("FindRule:" + getCategoryName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 					break;
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -129,8 +129,7 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 				configs.add(buildDefaultConfig());
 			}
 
-			Cat.logEvent("FindRule", getCategoryName(), Event.SUCCESS,
-			      "find rule for " + metricKey + ": " + rule.toString());
+			Cat.logEvent("FindRule:" + getCategoryName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 			return configs;
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/SigninService.java
Patch:
@@ -22,7 +22,6 @@ public Session signin(SigninContext ctx, Credential credential) {
 			if (session != null) {
 				m_tokenManager.setToken(ctx, token);
 			}
-
 			return session;
 		} else {
 			return null;

File: cat-home/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -25,7 +25,7 @@
 import com.dianping.cat.report.page.transaction.PayloadTest;
 import com.dianping.cat.report.page.transaction.TransactionGraphDataTest;
 import com.dianping.cat.report.page.transaction.TransactionReportFilterTest;
-import com.dianping.cat.report.page.userMonitor.UserMonitorReportConvertorTest;
+import com.dianping.cat.report.page.web.WebReportConvertorTest;
 import com.dianping.cat.report.task.TaskConsumerTest;
 import com.dianping.cat.report.task.TaskHelperTest;
 import com.dianping.cat.report.task.alert.AlertReportBuilderTest;
@@ -137,7 +137,7 @@
 
 SystemReportConvertorTest.class,
 
-UserMonitorReportConvertorTest.class,
+WebReportConvertorTest.class,
 
 MetricIdAndRuleMappingTest.class })
 public class AllTests {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -200,17 +200,17 @@ private void processOneRecord(int cityId, int operatorId, String record) {
 							}
 						}
 					} else {
-						Cat.logEvent("ResponseTooLong", String.valueOf(command), Event.SUCCESS, String.valueOf(responseTime));
+						Cat.logEvent("ResponseTooLong", items[4], Event.SUCCESS, String.valueOf(responseTime));
 					}
-					Cat.logEvent("Command", String.valueOf(command), Event.SUCCESS, null);
+					Cat.logEvent("Command", items[4], Event.SUCCESS, null);
 				} else {
 					Cat.logEvent("CommandNotFound", items[4], Event.SUCCESS, items[4]);
 				}
 			} catch (Exception e) {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("InvalidPar", items[1], Event.SUCCESS, items[1]);
+			Cat.logEvent("InvalidPar", items[4], Event.SUCCESS, items[4]);
 		}
 	}
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -200,17 +200,17 @@ private void processOneRecord(int cityId, int operatorId, String record) {
 							}
 						}
 					} else {
-						Cat.logEvent("ResponseTooLong", String.valueOf(command), Event.SUCCESS, String.valueOf(responseTime));
+						Cat.logEvent("ResponseTooLong", items[4], Event.SUCCESS, String.valueOf(responseTime));
 					}
-					Cat.logEvent("Command", String.valueOf(command), Event.SUCCESS, null);
+					Cat.logEvent("Command", items[4], Event.SUCCESS, null);
 				} else {
 					Cat.logEvent("CommandNotFound", items[4], Event.SUCCESS, items[4]);
 				}
 			} catch (Exception e) {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
-			Cat.logEvent("InvalidPar", items[1], Event.SUCCESS, items[1]);
+			Cat.logEvent("InvalidPar", items[4], Event.SUCCESS, items[4]);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -144,7 +144,7 @@ protected List<AlertResultEntity> computeAlertInfo(int minute, String product, S
 				return m_dataChecker.checkData(value, baseline, conditions);
 			}
 		}
-		return null;
+		return new ArrayList<AlertResultEntity>();
 	}
 
 	protected MetricReport fetchMetricReport(String product, ModelPeriod period) {

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Action.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.report.page.alert;
 
+
 public enum Action implements org.unidal.web.mvc.Action {
 	ALERT("alert");
 
@@ -14,8 +15,9 @@ public static Action getByName(String name, Action defaultAction) {
 			if (action.getName().equals(name)) {
 				return action;
 			}
+			
 		}
-
+		
 		return defaultAction;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -111,7 +111,7 @@ private boolean send(AlertEntity alert) {
 			List<String> receivers = m_contactorManager.queryReceivers(group, channel, type);
 			AlertMessageEntity message = new AlertMessageEntity(group, title, type, content, receivers);
 
-			m_alertEntityService.storeAlert(alert, message);
+			
 
 			if (m_senderManager.sendAlert(channel, message)) {
 				result = true;

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -51,7 +51,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 			Threads.forGroup("Cat").start(taskConsumer);
 		}
 
-		if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
+		//if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
 			BusinessAlert metricAlert = ctx.lookup(BusinessAlert.class);
 			NetworkAlert networkAlert = ctx.lookup(NetworkAlert.class);
 			SystemAlert systemAlert = ctx.lookup(SystemAlert.class);
@@ -67,7 +67,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 			Threads.forGroup("Cat").start(productUpdateTask);
 			Threads.forGroup("Cat").start(thirdPartyAlert);
 			Threads.forGroup("Cat").start(alertBuildingTask);
-		}
+		//}
 		executeAlarmModule(ctx);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -16,15 +16,15 @@
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.message.Transaction;
-import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.AlertResultEntity;
+import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.BaseAlert;
 import com.dianping.cat.report.task.alert.MetricType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
 public class BusinessAlert extends BaseAlert implements Task, LogEnabled {
 
-	public static String ID = AlertType.BUSINESS;
+	public static String ID = AlertType.Business.getName();
 
 	@Inject
 	protected MetricConfigManager m_metricConfigManager;
@@ -55,7 +55,7 @@ private void processMetricItemConfig(MetricItemConfig config, int minute, Produc
 			String metric = config.getMetricKey();
 			String metricKey = m_metricConfigManager.buildMetricKey(domain, config.getType(), metric);
 			List<AlertResultEntity> alertResults = new ArrayList<AlertResultEntity>();
-			
+
 			if (config.isShowAvg()) {
 				alertResults.addAll(computeAlertInfo(minute, product, metricKey, MetricType.AVG));
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/ExceptionAlert.java
Patch:
@@ -56,7 +56,7 @@ private TopMetric buildTopMetric(Date date) {
 	}
 
 	public String getName() {
-		return AlertType.EXCEPTION;
+		return AlertType.Exception.getName();
 	}
 
 	private TopReport queryTopReport(Date start) {
@@ -164,7 +164,7 @@ private void handleFrontEndException(Item frontEndItem) {
 				AlertEntity entity = new AlertEntity();
 
 				entity.setDate(new Date()).setContent(exception.toString()).setLevel(exception.getType());
-				entity.setMetric(metricName).setType(AlertType.FRONT_END_EXCEPTION).setGroup(metricName);
+				entity.setMetric(metricName).setType(AlertType.FrontEndException.getName()).setGroup(metricName);
 				m_sendManager.addAlert(entity);
 			} catch (Exception e) {
 				Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/network/NetworkAlert.java
Patch:
@@ -22,7 +22,7 @@ public void enableLogging(Logger logger) {
 
 	@Override
 	public String getName() {
-		return AlertType.NETWORK;
+		return AlertType.Network.getName();
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/BusinessDecorator.java
Patch:
@@ -5,7 +5,7 @@
 
 public class BusinessDecorator extends ProductlineDecorator {
 
-	public static final String ID = AlertType.BUSINESS;
+	public static final String ID = AlertType.Business.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ExceptionDecorator.java
Patch:
@@ -21,7 +21,7 @@ public class ExceptionDecorator extends ProjectDecorator implements Initializabl
 
 	public Configuration m_configuration;
 
-	public static final String ID = AlertType.EXCEPTION;
+	public static final String ID = AlertType.Exception.getName();
 
 	protected DateFormat m_format = new SimpleDateFormat("yyyyMMddHH");
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -9,7 +9,7 @@
 
 public class FrontEndExceptionDecorator extends ExceptionDecorator {
 
-	public static final String ID = AlertType.FRONT_END_EXCEPTION;
+	public static final String ID = AlertType.FrontEndException.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/NetworkDecorator.java
Patch:
@@ -5,7 +5,7 @@
 
 public class NetworkDecorator extends ProductlineDecorator {
 
-	public static final String ID = AlertType.NETWORK;
+	public static final String ID = AlertType.Network.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/SystemDecorator.java
Patch:
@@ -5,7 +5,7 @@
 
 public class SystemDecorator extends ProductlineDecorator {
 
-	public static final String ID = AlertType.SYSTEM;
+	public static final String ID = AlertType.System.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ThirdpartyDecorator.java
Patch:
@@ -21,7 +21,7 @@ public class ThirdpartyDecorator extends ProjectDecorator implements Initializab
 
 	public Configuration m_configuration;
 
-	public static final String ID = AlertType.THIRDPARTY;
+	public static final String ID = AlertType.ThirdParty.getName();
 
 	private DateFormat m_format = new SimpleDateFormat("yyyyMMddHH");
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/BusinessContactor.java
Patch:
@@ -4,7 +4,7 @@
 
 public class BusinessContactor extends ProductlineContactor {
 
-	public static final String ID = AlertType.BUSINESS;
+	public static final String ID = AlertType.Business.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/ExceptionContactor.java
Patch:
@@ -4,7 +4,7 @@
 
 public class ExceptionContactor extends ProjectContactor {
 
-	public static final String ID = AlertType.EXCEPTION;
+	public static final String ID = AlertType.Exception.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/FrontEndExceptionContactor.java
Patch:
@@ -19,7 +19,7 @@ public class FrontEndExceptionContactor extends DefaultContactor implements Cont
 	@Inject
 	protected AlertConfigManager m_alertConfigManager;
 
-	public static final String ID = AlertType.FRONT_END_EXCEPTION;
+	public static final String ID = AlertType.FrontEndException.getName();
 
 	@Override
 	public String getId() {
@@ -36,7 +36,7 @@ public List<String> queryEmailContactors(String id) {
 			return mailReceivers;
 		} else {
 			mailReceivers.addAll(buildDefaultMailReceivers(receiver));
-			
+
 			AggregationRule rule = m_aggConfigManager.queryAggration(id);
 			if (rule != null) {
 				mailReceivers.addAll(split(rule.getMails()));

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/NetworkContactor.java
Patch:
@@ -4,7 +4,7 @@
 
 public class NetworkContactor extends ProductlineContactor {
 
-	public static final String ID = AlertType.NETWORK;
+	public static final String ID = AlertType.Network.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/SystemContactor.java
Patch:
@@ -4,7 +4,7 @@
 
 public class SystemContactor extends ProductlineContactor {
 
-	public static final String ID = AlertType.SYSTEM;
+	public static final String ID = AlertType.System.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/receiver/ThirdpartyContactor.java
Patch:
@@ -4,7 +4,7 @@
 
 public class ThirdpartyContactor extends ProjectContactor {
 
-	public static final String ID = AlertType.THIRDPARTY;
+	public static final String ID = AlertType.ThirdParty.getName();
 
 	@Override
 	public String getId() {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/system/SystemAlert.java
Patch:
@@ -22,7 +22,7 @@ public void enableLogging(Logger logger) {
 
 	@Override
 	public String getName() {
-		return AlertType.SYSTEM;
+		return AlertType.System.getName();
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/thirdParty/ThirdPartyAlert.java
Patch:
@@ -123,7 +123,7 @@ private Map<String, List<ThirdPartyAlertEntity>> buildDomain2AlertMap(List<Third
 
 	@Override
 	public String getName() {
-		return AlertType.THIRDPARTY;
+		return AlertType.ThirdParty.getName();
 	}
 
 	@Override

File: cat-home/src/test/java/com/dianping/cat/report/alert/SuspendTest.java
Patch:
@@ -19,7 +19,7 @@ public void test() {
 		AlertManager manager = lookup(AlertManager.class);
 		AlertEntity entity = new AlertEntity();
 		entity.setDate(new Date()).setContent("test").setLevel("error");
-		entity.setMetric("testMetric").setType(AlertType.NETWORK).setGroup("testGroup");
+		entity.setMetric("testMetric").setType(AlertType.Network.getName()).setGroup("testGroup");
 
 		try {
 			manager.addAlert(entity);

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -188,7 +188,7 @@ private void processOneRecord(int cityId, int operatorId, String record) {
 
 					int responseTime = appData.getResponseTime();
 
-					if (responseTime < 60 * 1000) {
+					if (responseTime < 60 * 1000 && responseTime >= 0) {
 						boolean success = m_appDataConsumer.enqueue(appData);
 
 						if (!success) {

File: cat-broker/src/test/java/com/dianping/cat/broker/TestServer.java
Patch:
@@ -44,7 +44,7 @@ protected void postConfigure(WebAppContext context) {
    @Test
    public void startWebapp() throws Exception {
       // open the page in the default browser
-      display("/broker-service/api");
+      //display("/broker-service/api");
       waitForAnyKey();
    }
 }

File: cat-broker/src/test/java/com/dianping/cat/broker/TestServer.java
Patch:
@@ -44,7 +44,7 @@ protected void postConfigure(WebAppContext context) {
    @Test
    public void startWebapp() throws Exception {
       // open the page in the default browser
-      display("/broker-service/api");
+      //display("/broker-service/api");
       waitForAnyKey();
    }
 }

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/AppDataQueue.java
Patch:
@@ -5,17 +5,17 @@
 import java.util.concurrent.TimeUnit;
 
 public class AppDataQueue {
-	private BlockingQueue<AppData> m_dataQueue = new LinkedBlockingQueue<AppData>(10000);
+	private BlockingQueue<AppData> m_datas = new LinkedBlockingQueue<AppData>(100000);
 
 	public boolean offer(AppData appData) {
-		return m_dataQueue.offer(appData);
+		return m_datas.offer(appData);
 	}
 
 	public AppData poll() {
 		AppData appData;
 
 		try {
-			appData = m_dataQueue.poll(5, TimeUnit.MICROSECONDS);
+			appData = m_datas.poll(5, TimeUnit.MICROSECONDS);
 		} catch (InterruptedException e) {
 			return null;
 		}

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/cdn/Handler.java
Patch:
@@ -14,9 +14,11 @@
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.broker.api.page.MonitorEntity;
 import com.dianping.cat.broker.api.page.MonitorManager;
 import com.dianping.cat.broker.api.page.RequestUtils;
+import com.dianping.cat.message.Event;
 
 public class Handler implements PageHandler<Context>, LogEnabled {
 
@@ -72,6 +74,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
+			Cat.logEvent("unknownIp", "cdn", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/Handler.java
Patch:
@@ -72,8 +72,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				Cat.logEvent("Code", "Error", Event.SUCCESS, errorCode + " " + httpStatus);
 			}
 		} else {
-			Cat.logEvent("ip", "miss", Event.SUCCESS, request.getHeader("x-forwarded-for"));
-
+			Cat.logEvent("unknownIp", "single", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-core/src/main/java/com/dianping/cat/config/aggregation/AggregationConfigManager.java
Patch:
@@ -174,7 +174,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					Thread.sleep(10 * 1000L);
+					Thread.sleep(60 * 1000L);
 				} catch (InterruptedException e) {
 					active = false;
 				}

File: cat-core/src/main/java/com/dianping/cat/config/app/AppConfigManager.java
Patch:
@@ -246,7 +246,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					Thread.sleep(10 * 1000L);
+					Thread.sleep(60 * 1000L);
 				} catch (InterruptedException e) {
 					active = false;
 				}

File: cat-core/src/main/java/com/dianping/cat/config/url/UrlPatternConfigManager.java
Patch:
@@ -142,7 +142,7 @@ public void run() {
 					Cat.logError(e);
 				}
 				try {
-					Thread.sleep(10 * 1000L);
+					Thread.sleep(60 * 1000L);
 				} catch (InterruptedException e) {
 					active = false;
 				}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -72,7 +72,7 @@ public boolean isSuspend(String alertKey, int suspendMinute) {
 		if (sendedAlert != null) {
 			long duration = System.currentTimeMillis() - sendedAlert.getDate().getTime();
 			if (duration / MILLIS1MINUTE < suspendMinute) {
-				Cat.logEvent("SuspendAlert", alertKey);
+				Cat.logEvent("SuspendAlert", alertKey, Event.SUCCESS, null);
 				return true;
 			}
 		}

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -47,7 +47,7 @@ public class Handler implements PageHandler<Context>, LogEnabled {
 
 	private Logger m_logger;
 
-	private int m_error;
+	private volatile int m_error;
 
 	@Override
 	public void enableLogging(Logger logger) {
@@ -82,6 +82,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			}
 		} else {
 			success = false;
+			Cat.logEvent("unknownIp", "batch", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 
@@ -165,14 +166,13 @@ private void processOneRecord(int cityId, int operatorId, String record) {
 
 		if (items.length == 10) {
 			AppData appData = new AppData();
-			long time = System.currentTimeMillis();
 
 			try {
 				Integer command = m_appConfigManager.getCommands().get(URLDecoder.decode(items[4], "utf-8"));
 
 				if (command != null) {
 					// appData.setTimestamp(Long.parseLong(items[0]));
-					appData.setTimestamp(time);
+					appData.setTimestamp(System.currentTimeMillis());
 					appData.setCommand(command);
 					appData.setNetwork(Integer.parseInt(items[1]));
 					appData.setVersion(Integer.parseInt(items[2]));

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/cdn/Handler.java
Patch:
@@ -14,9 +14,11 @@
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.broker.api.page.MonitorEntity;
 import com.dianping.cat.broker.api.page.MonitorManager;
 import com.dianping.cat.broker.api.page.RequestUtils;
+import com.dianping.cat.message.Event;
 
 public class Handler implements PageHandler<Context>, LogEnabled {
 
@@ -72,6 +74,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				m_logger.error(e.getMessage(), e);
 			}
 		} else {
+			Cat.logEvent("unknownIp", "cdn", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/Handler.java
Patch:
@@ -72,8 +72,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				Cat.logEvent("Code", "Error", Event.SUCCESS, errorCode + " " + httpStatus);
 			}
 		} else {
-			Cat.logEvent("ip", "miss", Event.SUCCESS, request.getHeader("x-forwarded-for"));
-
+			Cat.logEvent("unknownIp", "single", Event.SUCCESS, null);
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
 		response.getWriter().write("OK");

File: cat-broker/src/main/java/com/dianping/cat/broker/api/app/AppDataQueue.java
Patch:
@@ -5,17 +5,17 @@
 import java.util.concurrent.TimeUnit;
 
 public class AppDataQueue {
-	private BlockingQueue<AppData> m_dataQueue = new LinkedBlockingQueue<AppData>(10000);
+	private BlockingQueue<AppData> m_datas = new LinkedBlockingQueue<AppData>(100000);
 
 	public boolean offer(AppData appData) {
-		return m_dataQueue.offer(appData);
+		return m_datas.offer(appData);
 	}
 
 	public AppData poll() {
 		AppData appData;
 
 		try {
-			appData = m_dataQueue.poll(5, TimeUnit.MICROSECONDS);
+			appData = m_datas.poll(5, TimeUnit.MICROSECONDS);
 		} catch (InterruptedException e) {
 			return null;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/AlertManager.java
Patch:
@@ -72,7 +72,7 @@ public boolean isSuspend(String alertKey, int suspendMinute) {
 		if (sendedAlert != null) {
 			long duration = System.currentTimeMillis() - sendedAlert.getDate().getTime();
 			if (duration / MILLIS1MINUTE < suspendMinute) {
-				Cat.logEvent("SuspendAlert", alertKey);
+				Cat.logEvent("SuspendAlert", alertKey, Event.SUCCESS, null);
 				return true;
 			}
 		}

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataService.java
Patch:
@@ -104,7 +104,7 @@ public double[] querySuccessRatio(int commandId, AppDataCommandMap convertedData
 		double[] value = new double[n];
 
 		for (int i = 0; i < n; i++) {
-			value[i] = 1.0;
+			value[i] = 100.0;
 		}
 
 		try {
@@ -121,7 +121,7 @@ public double[] querySuccessRatio(int commandId, AppDataCommandMap convertedData
 					}
 					sum += number;
 				}
-				value[key / 5] = (double) success / sum;
+				value[key / 5] = (double) success / sum * 100;
 			}
 		} catch (Exception e) {
 			Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ExceptionDecorator.java
Patch:
@@ -23,7 +23,7 @@ public class ExceptionDecorator extends ProjectDecorator implements Initializabl
 
 	public static final String ID = AlertType.EXCEPTION;
 
-	protected DateFormat m_dateFormat = new SimpleDateFormat("yyyyMMddHH");
+	protected DateFormat m_format = new SimpleDateFormat("yyyyMMddHH");
 
 	@Override
 	public String getId() {
@@ -58,7 +58,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 
 		map.put("domain", domain);
 		map.put("content", alert.getContent());
-		map.put("date", m_dateFormat.format(alert.getDate()));
+		map.put("date", m_format.format(alert.getDate()));
 		map.put("contactInfo", contactInfo);
 
 		return map;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -31,7 +31,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 
 		map.put("domain", domain);
 		map.put("content", alert.getContent());
-		map.put("date", m_dateFormat.format(alert.getDate()));
+		map.put("date", m_format.format(alert.getDate()));
 		map.put("contactInfo", contactInfo);
 
 		return map;

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataService.java
Patch:
@@ -121,7 +121,7 @@ public double[] querySuccessRatio(int commandId, AppDataCommandMap convertedData
 					}
 					sum += number;
 				}
-				value[key / 5] = (double) success / sum;
+				value[key / 5] = (double) success / sum * 100;
 			}
 		} catch (Exception e) {
 			Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ExceptionDecorator.java
Patch:
@@ -23,7 +23,7 @@ public class ExceptionDecorator extends ProjectDecorator implements Initializabl
 
 	public static final String ID = AlertType.EXCEPTION;
 
-	protected DateFormat m_dateFormat = new SimpleDateFormat("yyyyMMddHH");
+	protected DateFormat m_format = new SimpleDateFormat("yyyyMMddHH");
 
 	@Override
 	public String getId() {
@@ -58,7 +58,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 
 		map.put("domain", domain);
 		map.put("content", alert.getContent());
-		map.put("date", m_dateFormat.format(alert.getDate()));
+		map.put("date", m_format.format(alert.getDate()));
 		map.put("contactInfo", contactInfo);
 
 		return map;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -31,7 +31,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 
 		map.put("domain", domain);
 		map.put("content", alert.getContent());
-		map.put("date", m_dateFormat.format(alert.getDate()));
+		map.put("date", m_format.format(alert.getDate()));
 		map.put("contactInfo", contactInfo);
 
 		return map;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryExecutor.java
Patch:
@@ -60,9 +60,9 @@ public String execute(String domain, Date date, String receiverStr) {
 			String content = m_alertSummaryDecorator.generateHtml(alertSummary);
 			List<String> receivers = builderReceivers(receiverStr);
 
-			AlertMessageEntity message = new AlertMessageEntity(domain, title, content, receivers);
+			AlertMessageEntity message = new AlertMessageEntity(domain, title, "alertSummary", content, receivers);
 
-			m_sendManager.sendAlert(AlertChannel.MAIL, "AlertSummary", message);
+			m_sendManager.sendAlert(AlertChannel.MAIL, message);
 			return content;
 		} catch (Exception e) {
 			Cat.logError("generate alert summary fail:" + domain + " " + date, e);

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -140,9 +140,9 @@ public void run() {
 							String content = renderContent(names, domain);
 							String title = renderTitle(names, domain);
 							List<String> emails = m_scheduledManager.queryEmailsBySchReportId(report.getId());
-							AlertMessageEntity message = new AlertMessageEntity(domain, title, content, emails);
+							AlertMessageEntity message = new AlertMessageEntity(domain, title, "ScheduledJob", content, emails);
 
-							boolean result = m_sendManager.sendAlert(AlertChannel.MAIL, "ScheduledJob", message);
+							boolean result = m_sendManager.sendAlert(AlertChannel.MAIL, message);
 
 							insertMailLog(report.getId(), content, title, result, emails);
 							t.addData(emails.toString());

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Payload.java
Patch:
@@ -23,7 +23,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_productLine = "All";
 
 	@FieldMeta("type")
-	private String m_type = "system";
+	private String m_type = "paasSystem";
 
 	@FieldMeta("ipAddrs")
 	private String m_ipAddrs = "All";

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -218,7 +218,7 @@ protected void process(MessageTree tree) {
 			} else {
 				String oldDomain = info.getDomain();
 
-				if (!oldDomain.equals(domain) && !oldDomain.equals(Constants.CAT)) {
+				if (!domain.equals(oldDomain) && !Constants.CAT.equals(oldDomain)) {
 					// only work on online environment
 					long current = System.currentTimeMillis();
 					Date lastModifiedDate = info.getLastModifiedDate();

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -68,8 +68,7 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 
 				if (validate) {
 					configs.addAll(rule.getConfigs());
-					Cat.logEvent("FindRule", getCategoryName(), Event.SUCCESS,
-					      "find rule for " + metricKey + ": " + rule.toString());
+					Cat.logEvent("FindRule:" + getCategoryName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 					break;
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -129,8 +129,7 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 				configs.add(buildDefaultConfig());
 			}
 
-			Cat.logEvent("FindRule", getCategoryName(), Event.SUCCESS,
-			      "find rule for " + metricKey + ": " + rule.toString());
+			Cat.logEvent("FindRule:" + getCategoryName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 			return configs;
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Payload.java
Patch:
@@ -23,7 +23,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_productLine = "All";
 
 	@FieldMeta("type")
-	private String m_type = "system";
+	private String m_type = "paasSystem";
 
 	@FieldMeta("ipAddrs")
 	private String m_ipAddrs = "All";

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -129,8 +129,7 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 				configs.add(buildDefaultConfig());
 			}
 
-			Cat.logEvent("FindRule", getCategoryName(), Event.SUCCESS,
-			      "find rule for " + metricKey + ": " + rule.toString());
+			Cat.logEvent("FindRule:" + getCategoryName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 			return configs;
 		}
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -218,7 +218,7 @@ protected void process(MessageTree tree) {
 			} else {
 				String oldDomain = info.getDomain();
 
-				if (!oldDomain.equals(domain) && !oldDomain.equals(Constants.CAT)) {
+				if (!domain.equals(oldDomain) && !Constants.CAT.equals(oldDomain)) {
 					// only work on online environment
 					long current = System.currentTimeMillis();
 					Date lastModifiedDate = info.getLastModifiedDate();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/SenderManager.java
Patch:
@@ -33,9 +33,9 @@ public boolean sendAlert(AlertChannel channel, String type, AlertMessageEntity m
 			boolean result = sender.send(message, type);
 
 			if (result) {
-				Cat.logEvent("Alert:" + channelName, type + ":success", Event.SUCCESS, null);
+				Cat.logEvent("Channel:" + channelName, type + ":success", Event.SUCCESS, null);
 			} else {
-				Cat.logEvent("Alert:" + channelName, type + ":fail", Event.SUCCESS, null);
+				Cat.logEvent("Channel:" + channelName, type + ":fail", Event.SUCCESS, null);
 			}
 			m_logger.info("Alert Channel " + channelName + ",content" + message.toString());
 			return result;

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -68,8 +68,7 @@ public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String produc
 
 				if (validate) {
 					configs.addAll(rule.getConfigs());
-					Cat.logEvent("FindRule", getCategoryName(), Event.SUCCESS,
-					      "find rule for " + metricKey + ": " + rule.toString());
+					Cat.logEvent("FindRule:" + getCategoryName(), rule.getId(), Event.SUCCESS, product + "," + metricKey);
 					break;
 				}
 			}

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketTest.java
Patch:
@@ -26,6 +26,7 @@
 public class LocalMessageBucketTest extends ComponentTestCase {
 
 	private final String m_baseDir = "target/bucket/hdfs/dump/";
+	private final String m_dataDir = "/data/appdatas/cat/";
 
 	public void setup() {
 		String[] files = { "dump", "dump-0", "dump-1", "dump-2", "outbox/dump" };
@@ -34,9 +35,10 @@ public void setup() {
 			new File(m_baseDir + file).delete();
 			new File(m_baseDir + file + ".idx").delete();
 		}
-
+		
 		String tmpDir = System.getProperty("java.io.tmpdir");
 		new File(tmpDir, "cat-Test.mark").delete();
+		new File(m_dataDir, "cat-Test.mark").delete();
 	}
 
 	@Test

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -6,7 +6,6 @@
 import org.unidal.lookup.configuration.AbstractResourceConfigurator;
 import org.unidal.lookup.configuration.Component;
 
-import com.dianping.cat.DomainManager;
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
@@ -51,6 +50,7 @@
 import com.dianping.cat.report.task.transaction.TransactionMerger;
 import com.dianping.cat.report.task.transaction.TransactionReportBuilder;
 import com.dianping.cat.report.task.utilization.UtilizationReportBuilder;
+import com.dianping.cat.service.HostinfoService;
 import com.dianping.cat.system.config.ExceptionConfigManager;
 import com.dianping.cat.system.config.NetGraphConfigManager;
 import com.dianping.cat.system.config.RouterConfigManager;
@@ -101,7 +101,7 @@ public List<Component> defineComponents() {
 		all.add(C(ReportTaskBuilder.class, BugReportBuilder.ID, BugReportBuilder.class).req(ReportServiceManager.class));
 
 		all.add(C(ReportTaskBuilder.class, ServiceReportBuilder.ID, ServiceReportBuilder.class).req(ReportServiceManager.class,
-		      DomainManager.class));
+				HostinfoService.class));
 
 		all.add(C(ReportTaskBuilder.class, MatrixReportBuilder.ID, MatrixReportBuilder.class).req(ReportServiceManager.class));
 
@@ -118,7 +118,7 @@ public List<Component> defineComponents() {
 		all.add(C(ReportTaskBuilder.class, HeavyReportBuilder.ID, HeavyReportBuilder.class).req(ReportServiceManager.class));
 
 		all.add(C(ReportTaskBuilder.class, UtilizationReportBuilder.ID, UtilizationReportBuilder.class).req(
-		      ReportServiceManager.class, TransactionMergeManager.class, ServerConfigManager.class, DomainManager.class));
+		      ReportServiceManager.class, TransactionMergeManager.class, ServerConfigManager.class, HostinfoService.class));
 
 		all.add(C(ReportTaskBuilder.class, DependencyReportBuilder.ID, DependencyReportBuilder.class).req(
 		      ReportServiceManager.class, TopologyGraphBuilder.class, TopologyGraphDao.class));

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -53,7 +53,9 @@
 
 com.dianping.cat.report.page.cdn.Handler.class,
 
-com.dianping.cat.report.page.app.Handler.class
+com.dianping.cat.report.page.app.Handler.class,
+
+com.dianping.cat.report.page.alert.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -51,7 +51,9 @@ public enum ReportPage implements Page {
 
    CDN("cdn", "cdn", "Cdn", "Cdn", false),
 
-   APP("app", "app", "App", "App", true);
+   APP("app", "app", "App", "App", true),
+
+   ALERT("alert", "alert", "Alert", "Alert", true);
 
    private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/Handler.java
Patch:
@@ -15,9 +15,9 @@
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.DomainManager;
 import com.dianping.cat.home.dal.report.Event;
 import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.service.HostinfoService;
 
 public class Handler implements PageHandler<Context> {
 	@Inject
@@ -27,7 +27,7 @@ public class Handler implements PageHandler<Context> {
 	private EventCollectManager m_errorCollectManager;
 
 	@Inject
-	private DomainManager m_domainManager;
+	private HostinfoService m_hostinfoService;
 
 	private SimpleDateFormat m_sdf = new SimpleDateFormat("yyyyMMddHHmmss");
 
@@ -56,7 +56,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		if (type == EventCollectManager.DB_ERROR) {
 			event.setDomain(payload.getDatabase());
 		} else {
-			String domain = m_domainManager.queryDomainByIp(ip);
+			String domain = m_hostinfoService.queryDomainByIp(ip);
 
 			event.setDomain(domain);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/BusinessDecorator.java
Patch:
@@ -3,7 +3,7 @@
 import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
-public class BusinessDecorator extends DefaultDecorator {
+public class BusinessDecorator extends ProductlineDecorator {
 
 	public static final String ID = AlertType.BUSINESS;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/Decorator.java
Patch:
@@ -9,5 +9,7 @@ public interface Decorator {
 	public String generateTitle(AlertEntity alert);
 
 	public String generateContent(AlertEntity alert);
-	
+
+	public String buildContactInfo(String group);
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ExceptionDecorator.java
Patch:
@@ -17,7 +17,7 @@
 import freemarker.template.Configuration;
 import freemarker.template.Template;
 
-public class ExceptionDecorator extends DefaultDecorator implements Initializable {
+public class ExceptionDecorator extends ProjectDecorator implements Initializable {
 
 	public Configuration m_configuration;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -38,7 +38,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 	}
 
 	@Override
-	protected String buildContactInfo(String domainName) {
+	public String buildContactInfo(String domainName) {
 		return "";
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/NetworkDecorator.java
Patch:
@@ -3,7 +3,7 @@
 import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
-public class NetworkDecorator extends DefaultDecorator {
+public class NetworkDecorator extends ProductlineDecorator {
 
 	public static final String ID = AlertType.NETWORK;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/SystemDecorator.java
Patch:
@@ -3,7 +3,7 @@
 import com.dianping.cat.report.task.alert.AlertType;
 import com.dianping.cat.report.task.alert.sender.AlertEntity;
 
-public class SystemDecorator extends DefaultDecorator {
+public class SystemDecorator extends ProductlineDecorator {
 
 	public static final String ID = AlertType.SYSTEM;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/ThirdpartyDecorator.java
Patch:
@@ -15,7 +15,7 @@
 import freemarker.template.Configuration;
 import freemarker.template.Template;
 
-public class ThirdpartyDecorator extends DefaultDecorator implements Initializable {
+public class ThirdpartyDecorator extends ProjectDecorator implements Initializable {
 
 	public Configuration m_configuration;
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -87,9 +87,7 @@ private Collection<Component> defineDependencyComponents() {
 		all.add(C(ProjectService.class).req(ProjectDao.class, ServerConfigManager.class));
 		all.add(C(HostinfoService.class).req(HostinfoDao.class, ProjectService.class, ServerConfigManager.class));
 		all.add(C(DatabaseParser.class));
-		all.add(C(MessageAnalyzer.class, ID, DependencyAnalyzer.class).is(PER_LOOKUP)
-		      //
-		      .req(ReportManager.class, ID)
+		all.add(C(MessageAnalyzer.class, ID, DependencyAnalyzer.class).is(PER_LOOKUP).req(ReportManager.class, ID)
 		      .req(ServerConfigManager.class, HostinfoService.class, ProjectService.class, DatabaseParser.class));
 		all.add(C(ReportManager.class, ID, DefaultReportManager.class) //
 		      .req(ReportDelegate.class, ID) //

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketTest.java
Patch:
@@ -26,6 +26,7 @@
 public class LocalMessageBucketTest extends ComponentTestCase {
 
 	private final String m_baseDir = "target/bucket/hdfs/dump/";
+	private final String m_dataDir = "/data/appdatas/cat/";
 
 	public void setup() {
 		String[] files = { "dump", "dump-0", "dump-1", "dump-2", "outbox/dump" };
@@ -34,9 +35,10 @@ public void setup() {
 			new File(m_baseDir + file).delete();
 			new File(m_baseDir + file + ".idx").delete();
 		}
-
+		
 		String tmpDir = System.getProperty("java.io.tmpdir");
 		new File(tmpDir, "cat-Test.mark").delete();
+		new File(m_dataDir, "cat-Test.mark").delete();
 	}
 
 	@Test

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/ExceptionAlert.java
Patch:
@@ -113,7 +113,7 @@ public void run() {
 				if (frontEndItem != null) {
 					handleFrontEndException(frontEndItem);
 				}
-				handleGeneralExceptions(itemList);
+				handleGeneralExceptions(otherItemList);
 
 				t.setStatus(Transaction.SUCCESS);
 			} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/SessionManager.java
Patch:
@@ -19,7 +19,8 @@ public Token authenticate(Credential credential) {
 		try {
 			token = m_LDAPService.authenticate(account, password);
 		} catch (Exception e) {
-			Cat.logError(e);
+			Cat.logEvent("Login", "Login failure, uncorrected password.");
+			return null;
 		}
 
 		if (token != null) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/ExceptionAlert.java
Patch:
@@ -113,7 +113,7 @@ public void run() {
 				if (frontEndItem != null) {
 					handleFrontEndException(frontEndItem);
 				}
-				handleGeneralExceptions(itemList);
+				handleGeneralExceptions(otherItemList);
 
 				t.setStatus(Transaction.SUCCESS);
 			} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/ExceptionAlert.java
Patch:
@@ -113,7 +113,7 @@ public void run() {
 				if (frontEndItem != null) {
 					handleFrontEndException(frontEndItem);
 				}
-				handleGeneralExceptions(itemList);
+				handleGeneralExceptions(otherItemList);
 
 				t.setStatus(Transaction.SUCCESS);
 			} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/report/page/alert/Handler.java
Patch:
@@ -12,6 +12,7 @@
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
 import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.task.alert.sender.AlertChannel;
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 import com.dianping.cat.report.task.alert.sender.sender.SenderManager;
 import com.site.helper.Splitters;
@@ -47,7 +48,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				      payload.getContent(), receivers);
 
 				try {
-					boolean result = m_senderManager.sendAlert(payload.getChannel(), payload.getType(), message);
+					boolean result = m_senderManager.sendAlert(AlertChannel.findByName(payload.getChannel()),
+					      payload.getType(), message);
 					if (result) {
 						setAlertResult(model, 1);
 					} else {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/FrontEndExceptionDecorator.java
Patch:
@@ -38,7 +38,7 @@ protected Map<Object, Object> generateExceptionMap(AlertEntity alert) {
 	}
 
 	@Override
-	protected String buildContactInfo(String domainName) {
+	public String buildContactInfo(String domainName) {
 		return "";
 	}
 

File: cat-agent/src/main/java/com/dianping/cat/agent/monitor/paas/DataBuilder.java
Patch:
@@ -152,11 +152,11 @@ public List<DataEntity> buildData(String id) {
 
 		try {
 			outputs = m_commandUtils.runShell(cmd);
+			
+			return convert2DataEntities(outputs);
 		} catch (Exception e) {
 			Cat.logError(e);
 		}
-		List<DataEntity> dataEntities = convert2DataEntities(outputs);
-
-		return dataEntities;
+		return new ArrayList<DataEntity>();
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/system/config/RouterConfigManager.java
Patch:
@@ -57,10 +57,10 @@ public List<Server> queryServersByDomain(String domain) {
 			Map<Server, Integer> map = new HashMap<Server, Integer>();
 			List<Server> servers = queryEnableServers();
 			int length = servers.size();
-			int index = domain.hashCode() * length;
+			int index = domain.hashCode();
 
 			for (int i = 0; i < 2; i++) {
-				map.put(servers.get((index + 1) % length), 0);
+				map.put(servers.get((index + i) % length), 0);
 			}
 			map.put(queryBackUpServer(), 0);
 

File: cat-home/src/main/java/com/dianping/cat/system/config/RouterConfigManager.java
Patch:
@@ -57,10 +57,10 @@ public List<Server> queryServersByDomain(String domain) {
 			Map<Server, Integer> map = new HashMap<Server, Integer>();
 			List<Server> servers = queryEnableServers();
 			int length = servers.size();
-			int index = domain.hashCode() * length;
+			int index = domain.hashCode();
 
 			for (int i = 0; i < 2; i++) {
-				map.put(servers.get((index + 1) % length), 0);
+				map.put(servers.get((index + i) % length), 0);
 			}
 			map.put(queryBackUpServer(), 0);
 

File: cat-client/src/main/java/com/dianping/cat/configuration/ClientConfigManager.java
Patch:
@@ -159,7 +159,7 @@ public String getServerConfigUrl() {
 			for (Server server : servers) {
 				Integer httpPort = server.getHttpPort();
 
-				if (httpPort == null) {
+				if (httpPort == null || httpPort == 0) {
 					httpPort = 8080;
 				}
 				return String.format("http://%s:%d/cat/s/router?domain=%s", server.getIp(), httpPort, getDomain().getId());

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -36,7 +36,7 @@
 
 DependencyReportMergerTest.class,
 
-ProductLineConfigManagerTest.class,
+ProductLineConfigManagerTest.class
 
 })
 public class AllTests {

File: cat-core/src/main/java/com/dianping/cat/DomainManager.java
Patch:
@@ -69,7 +69,7 @@ public boolean containsDomainInCat(String domain) {
 	public void enableLogging(Logger logger) {
 		m_logger = logger;
 	}
-
+	
 	@Override
 	public void initialize() throws InitializationException {
 		if (!m_manager.isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/sender/SmsSender.java
Patch:
@@ -19,7 +19,7 @@
 public class SmsSender implements Sender, LogEnabled {
 
 	public static final String ID = AlertConstants.SMS;
-
+	
 	private Logger m_logger;
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/system/config/RouterConfigManager.java
Patch:
@@ -57,7 +57,7 @@ public List<Server> queryServersByDomain(String domain) {
 			Map<Server, Integer> map = new HashMap<Server, Integer>();
 			List<Server> servers = queryEnableServers();
 			int length = servers.size();
-			int index = (int) (Math.random() * length);
+			int index = domain.hashCode() * length;
 
 			for (int i = 0; i < 2; i++) {
 				map.put(servers.get((index + 1) % length), 0);

File: cat-home/src/main/java/com/dianping/cat/system/page/router/Handler.java
Patch:
@@ -67,7 +67,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				}
 				model.setContent(str);
 			} else {
-				model.setContent("");
+				List<Server> servers = m_configManager.queryServersByDomain(payload.getDomain());
+
+				model.setContent(buildServerStr(servers));
 			}
 			break;
 		case MODEL:

File: cat-home/src/main/java/com/dianping/cat/system/page/router/JspFile.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.system.page.router;
 
 public enum JspFile {
-	API("/jsp/system/router/router.jsp"),
+	API("/jsp/system/router/api.jsp"),
 	
 	MODEL("/jsp/system/router/router.jsp"),
 

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -87,9 +87,9 @@ public ChannelPipeline getPipeline() {
 		String serverConfig = loadServerConfig();
 
 		if (serverConfig != null) {
-			List<InetSocketAddress> newAddress = parseSocketAddress(serverConfig);
+			List<InetSocketAddress> configedAddresses = parseSocketAddress(serverConfig);
 
-			initChannel(newAddress, serverConfig);
+			initChannel(configedAddresses, serverConfig);
 		} else {
 			initChannel(serverAddresses, null);
 		}

File: cat-home/src/main/java/com/dianping/cat/system/config/RouterConfigManager.java
Patch:
@@ -57,7 +57,7 @@ public List<Server> queryServersByDomain(String domain) {
 			Map<Server, Integer> map = new HashMap<Server, Integer>();
 			List<Server> servers = queryEnableServers();
 			int length = servers.size();
-			int index = (int) (Math.random() * length);
+			int index = domain.hashCode() * length;
 
 			for (int i = 0; i < 2; i++) {
 				map.put(servers.get((index + 1) % length), 0);

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -299,7 +299,7 @@ private Pair<Boolean, String> serverConfigChanged() {
 	private boolean shouldCheckServerConfig(int count) {
 		int duration = 60 * 5;
 
-		if (count % (duration) == 0) {
+		if (count % (duration) == 0 || m_activeIndex == -1) {
 			return true;
 		} else {
 			return false;

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -36,7 +36,7 @@
 
 DependencyReportMergerTest.class,
 
-ProductLineConfigManagerTest.class,
+ProductLineConfigManagerTest.class
 
 })
 public class AllTests {

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -228,7 +228,7 @@ private List<InetSocketAddress> parseSocketAddress(String content) {
 	public void run() {
 		while (m_active) {
 			m_count++;
-			
+
 			if (shouldCheckServerConfig(m_count)) {
 				Pair<Boolean, String> pair = serverConfigChanged();
 
@@ -297,7 +297,7 @@ private Pair<Boolean, String> serverConfigChanged() {
 	}
 
 	private boolean shouldCheckServerConfig(int count) {
-		int duration = 3600;
+		int duration = 60 * 5;
 
 		if (count % (duration) == 0) {
 			return true;

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -95,16 +95,13 @@ public void run() {
 					MessageTree tree = m_queue.poll();
 
 					if (tree != null) {
-						System.out.println("write to====" + future.getChannel().getRemoteAddress());
-						
 						sendInternal(tree);
 						tree.setMessage(null);
 					}
 				} catch (Throwable t) {
 					m_logger.error("Error when sending message over TCP socket!", t);
 				}
 			} else {
-				System.out.println("channel  can't write");
 				try {
 					Thread.sleep(5);
 				} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/system/page/router/Handler.java
Patch:
@@ -74,9 +74,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			if (report != null) {
 				model.setContent(report.toString());
 			}
-			break;
 		}
-		model.setAction(Action.API);
+		model.setAction(action);
 		model.setPage(SystemPage.ROUTER);
 
 		if (!ctx.isProcessStopped()) {

File: cat-client/src/main/java/com/dianping/cat/CatClientModule.java
Patch:
@@ -14,7 +14,6 @@
 import org.unidal.initialization.ModuleContext;
 
 import com.dianping.cat.configuration.ClientConfigManager;
-import com.dianping.cat.configuration.client.entity.ClientConfig;
 import com.dianping.cat.message.internal.MilliSecondTimer;
 import com.dianping.cat.message.io.TransportManager;
 import com.dianping.cat.status.StatusUpdateTask;
@@ -53,8 +52,6 @@ protected void execute(final ModuleContext ctx) throws Exception {
 			Threads.forGroup("Cat").start(statusUpdateTask);
 			LockSupport.parkNanos(10 * 1000 * 1000L); // wait 10 ms
 
-			ClientConfig config = clientConfigManager.getClientConfig();
-
 			// MmapConsumerTask mmapReaderTask = ctx.lookup(MmapConsumerTask.class);
 			// Threads.forGroup("Cat").start(mmapReaderTask);
 		}

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -13,7 +13,6 @@
 import com.dianping.cat.consumer.matrix.MatrixModelTest;
 import com.dianping.cat.consumer.matrix.MatrixReportMergerTest;
 import com.dianping.cat.consumer.metric.MetricAnalyzerTest;
-import com.dianping.cat.consumer.metric.MetricConfigManagerTest;
 import com.dianping.cat.consumer.metric.ProductLineConfigManagerTest;
 
 @RunWith(Suite.class)

File: cat-client/src/main/java/com/dianping/cat/message/io/ChannelManager.java
Patch:
@@ -236,9 +236,7 @@ private boolean isChannelStalled() {
 	}
 
 	private boolean shouldCheckServerConfig(int count) {
-		return true;
-		
-		
+		//return true;
 		 int duration = 3600;
 		
 		 if (count % (duration) == 0) {

File: cat-home/src/main/java/com/dianping/cat/report/baseline/impl/DefaultBaselineService.java
Patch:
@@ -32,7 +32,7 @@ public class DefaultBaselineService implements BaselineService {
 
 		@Override
 		protected boolean removeEldestEntry(Entry<String, Baseline> eldest) {
-			return size() > 1000;
+			return size() > 5000;
 		}
 	};
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -299,7 +299,7 @@ public void run() {
 				long duration = System.currentTimeMillis() - current;
 
 				try {
-					int maxDuration = 15 * 1000;
+					int maxDuration = 60 * 1000;
 					if (duration < maxDuration) {
 						Thread.sleep(maxDuration - duration);
 					}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/decorator/DefaultDecorator.java
Patch:
@@ -17,7 +17,7 @@ public abstract class DefaultDecorator implements Decorator {
 	@Inject
 	protected ProjectDao m_projectDao;
 
-	private DateFormat m_fromat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
+	private DateFormat m_fromat = new SimpleDateFormat("yyyyMMdd");
 
 	protected String buildContactInfo(String domainName) {
 		try {
@@ -38,7 +38,7 @@ protected String buildContactInfo(String domainName) {
 			Cat.logError("build contact info error for doamin: " + domainName, ex);
 		}
 
-		return null;
+		return "";
 	}
 
 	protected String buildExceptionContent(AlertEntity alert) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/dispatcher/Dispatcher.java
Patch:
@@ -3,9 +3,9 @@
 import com.dianping.cat.report.task.alert.sender.AlertMessageEntity;
 
 public interface Dispatcher {
-	
+
 	String getId();
 
-	boolean send(AlertMessageEntity message);
+	boolean send(AlertMessageEntity message, String type);
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/dispatcher/DispatcherManager.java
Patch:
@@ -66,7 +66,7 @@ public boolean send(AlertEntity alert) {
 				m_alertManager.storeAlert(alert, message);
 
 				Dispatcher dispatcher = m_dispatchers.get(channelName);
-				dispatcher.send(message);
+				dispatcher.send(message, type);
 			}
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/ExceptionAlert.java
Patch:
@@ -82,12 +82,12 @@ private TopReport queryTopReport(Date start) {
 
 	@Override
 	public void run() {
+		boolean active = true;
 		try {
 			Thread.sleep(5000);
 		} catch (InterruptedException e) {
-			e.printStackTrace();
+			active = false;
 		}
-		boolean active = true;
 		while (active) {
 			long current = System.currentTimeMillis();
 			int minute = Calendar.getInstance().get(Calendar.MINUTE);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/thirdParty/ThirdPartyAlertTask.java
Patch:
@@ -124,7 +124,7 @@ public ThirdPartyAlertEntity buildAlertEntity(Http http) {
 		String url = http.getUrl();
 		String type = http.getType();
 		String pars = http.getPars();
-		String details = "HTTP URL[" + url + "?" + pars + "] " + type.toUpperCase() + "无法访问";
+		String details = "HTTP URL[" + url + "?" + pars + "] " + type.toUpperCase() + "访问出现异常";
 
 		entity.setDomains(http.getDomains()).setType(type).setDetails(details);
 		return entity;

File: cat-broker/src/test/java/com/dianping/cat/broker/js/ParseTest.java
Patch:
@@ -15,7 +15,7 @@ public void test() {
 		for (int i = 0; i < 1000; i++) {
 			analyzer.parseValue("abc", data);
 		}
-		
+
 		Assert.assertEquals(analyzer.parseValue("aaa", "aaa=1.1"), "1.1");
 		Assert.assertEquals(analyzer.parseValue("aaa", data), "1.1");
 		Assert.assertEquals(analyzer.parseValue("a", data), "1.1");

File: cat-broker/src/test/java/com/dianping/cat/broker/js/ParseTest.java
Patch:
@@ -15,7 +15,7 @@ public void test() {
 		for (int i = 0; i < 1000; i++) {
 			analyzer.parseValue("abc", data);
 		}
-		
+
 		Assert.assertEquals(analyzer.parseValue("aaa", "aaa=1.1"), "1.1");
 		Assert.assertEquals(analyzer.parseValue("aaa", data), "1.1");
 		Assert.assertEquals(analyzer.parseValue("a", data), "1.1");

File: cat-core/src/main/java/com/dianping/cat/config/app/AppDataCommandTableProvider.java
Patch:
@@ -23,7 +23,7 @@ public String getDataSourceName(Map<String, Object> hints) {
 	public String getLogicalTableName() {
 		return m_logicalTableName;
 	}
-
+	
 	@Override
 	public String getPhysicalTableName(Map<String, Object> hints) {
 		AppDataCommand command = (AppDataCommand) hints.get(QueryEngine.HINT_DATA_OBJECT);

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Payload.java
Patch:
@@ -41,7 +41,7 @@ public QueryEntity getQueryEntity2() {
 			return null;
 		}
 	}
-
+	
 	@Override
 	public Action getAction() {
 		return m_action;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -82,6 +82,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.SYSTEM_RULE_CONFIG_UPDATE.getPath();
 		case ALERT_DEFAULT_RECEIVERS:
 			return JspFile.ALERT_DEFAULT_RECEIVERS.getPath();
+		case ALERT_TYPE:
+			return JspFile.ALERT_TYPE.getPath();
 			// Excepton Config
 		case EXCEPTION:
 		case EXCEPTION_THRESHOLD_UPDATE_SUBMIT:
@@ -109,7 +111,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case APP_CONFIG_UPDATE:
 			return JspFile.APP_CONFIG_UPDATE.getPath();
 		}
-		
+
 		throw new RuntimeException("Unknown action: " + action);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/AlertExceptionBuilder.java
Patch:
@@ -41,7 +41,7 @@ private List<AlertException> buildDomainAlertExceptionList(Item item) {
 		double totalWarnLimit = totalLimitPair.getKey();
 		double totalErrorLimit = totalLimitPair.getValue();
 		double totalException = 0;
-		
+
 		for (Entry<String, Double> entry : item.getException().entrySet()) {
 			String exceptionName = entry.getKey();
 
@@ -138,7 +138,7 @@ public String buildContent(String exceptions, String domain, String contactInfo)
 		String time = new SimpleDateFormat("yyyy-MM-dd HH:mm").format(new Date());
 
 		sb.append("[CAT异常告警] [项目: ").append(domain).append("] : ");
-		sb.append(exceptions).append("[时间: ").append(time).append("]");
+		sb.append(exceptions).append("[时间: ").append(time).append("]").append("\n");
 		sb.append(contactInfo);
 
 		return sb.toString();

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorManager.java
Patch:
@@ -156,7 +156,6 @@ private void processOneEntity(MonitorEntity entity) {
 					buildMessage(entity, url, ipInfo);
 				} else {
 					Cat.logEvent("ip", "notFound", Event.SUCCESS, ip);
-					m_logger.error(String.format("can't find ip for %s", ip));
 				}
 				t.setStatus(Transaction.SUCCESS);
 			} catch (Exception e) {

File: cat-core/src/main/java/com/dianping/cat/DomainManager.java
Patch:
@@ -16,6 +16,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.dal.jdbc.DalException;
+import org.unidal.dal.jdbc.DalNotFoundException;
 import org.unidal.helper.Files;
 import org.unidal.helper.Threads;
 import org.unidal.helper.Threads.Task;
@@ -168,6 +169,8 @@ public String queryHostnameByIp(String ip) {
 			} else {
 				return null;
 			}
+		} catch (DalNotFoundException e) {
+			// ignore
 		} catch (DalException e) {
 			Cat.logError(e);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -53,8 +53,7 @@
 
 com.dianping.cat.report.page.cdn.Handler.class,
 
-com.dianping.cat.report.page.app.Handler.class,
-
+com.dianping.cat.report.page.app.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/system/SystemPage.java
Patch:
@@ -5,11 +5,11 @@
 
 public enum SystemPage implements Page {
 
-   ALARM("alarm", "alarm", "Alarm", "Alarm", true),
+   ALARM("alarm", "alarm", "Alarm", "Alarm", false),
 
    LOGIN("login", "login", "Login", "Login", false),
 
-   CONFIG("config", "config", "Config", "Config", true),
+   CONFIG("config", "config", "Config", "Config", false),
 
    PLUGIN("plugin", "plugin", "Plugin", "Plugin", true);
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorManager.java
Patch:
@@ -156,7 +156,6 @@ private void processOneEntity(MonitorEntity entity) {
 					buildMessage(entity, url, ipInfo);
 				} else {
 					Cat.logEvent("ip", "notFound", Event.SUCCESS, ip);
-					m_logger.error(String.format("can't find ip for %s", ip));
 				}
 				t.setStatus(Transaction.SUCCESS);
 			} catch (Exception e) {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -66,9 +66,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		String version = payload.getVersion();
 
 		if (userIp != null) {
-			if (version.equals("1")) {
+			if ("1".equals(version)) {
 				processVersion1(payload, request, userIp);
-			} else if (version.equals("2")) {
+			} else if ("2".equals(version)) {
 				processVersion2(payload, request, userIp);
 			}
 		} else {

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -53,8 +53,7 @@
 
 com.dianping.cat.report.page.cdn.Handler.class,
 
-com.dianping.cat.report.page.app.Handler.class,
-
+com.dianping.cat.report.page.app.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -51,9 +51,7 @@ public enum ReportPage implements Page {
 
    CDN("cdn", "cdn", "Cdn", "Cdn", false),
 
-   APP("app", "app", "App", "App", true),
-
-   SUMMARY("summary", "summary", "Summary", "Summary", true);
+   APP("app", "app", "App", "App", true);
 
    private String m_name;
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -104,8 +104,10 @@ private void processVersion1(Payload payload, HttpServletRequest request, String
 					entity.setErrorCode(errorCode);
 					entity.setIp(userIp);
 
-					if (payload.getVersion().equals("1")) {
+					if ("200".equals(httpStatus)) {
 						entity.setCount(10);
+					} else {
+						entity.setCount(1);
 					}
 					m_manager.offer(entity);
 				}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/graph/MetricGraphCreator.java
Patch:
@@ -270,7 +270,7 @@ private void buildLineChartTitle(List<AlertMetric> alertKeys, LineChart chart, S
 			if (containMetric(alertKeys, metricId)) {
 				chart.setHtmlTitle("<span style='color:red'>" + title + "<br><small>" + contactInfo + "</small></span>");
 			} else {
-				chart.setHtmlTitle(title + "<br><small>" + contactInfo + "</small>");
+				chart.setHtmlTitle(title);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/SmsSender.java
Patch:
@@ -5,7 +5,7 @@
 import com.dianping.cat.Cat;
 
 public class SmsSender extends BaseSender {
-
+	
 	@Override
 	protected void sendLog(String title, String content, List<String> receivers) {
 		StringBuilder builder = new StringBuilder();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryGenerator.java
Patch:
@@ -34,7 +34,7 @@ private com.dianping.cat.home.alert.summary.entity.Alert convertToAlert(Topology
 		alert.setAlertTime(date);
 		alert.setContext(edge.getDes());
 		alert.setMetric(edge.getKey());
-		alert.setType("long call");
+		alert.setType("slow "+edge.getType());
 		alert.setDomain(edge.getSelf());
 
 		return alert;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryVisitor.java
Patch:
@@ -21,7 +21,7 @@ public class AlertSummaryVisitor extends BaseVisitor {
 
 	private List<Map<Object, Object>> m_alertList;
 
-	private DateFormat m_fmt = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
+	private DateFormat m_fmt = new SimpleDateFormat("HH:mm:ss");
 
 	public Map<Object, Object> getResult() {
 		return m_result;

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -21,8 +21,6 @@ public Page[] getSystemPages() {
 	public Page[] getVisiblePages() {
 		return new Page[] {
 
-		ReportPage.HOME,
-
 		ReportPage.METRIC,
 
 		ReportPage.USERMONITOR,

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/graph/MetricGraphCreator.java
Patch:
@@ -270,7 +270,7 @@ private void buildLineChartTitle(List<AlertMetric> alertKeys, LineChart chart, S
 			if (containMetric(alertKeys, metricId)) {
 				chart.setHtmlTitle("<span style='color:red'>" + title + "<br><small>" + contactInfo + "</small></span>");
 			} else {
-				chart.setHtmlTitle(title + "<br><small>" + contactInfo + "</small>");
+				chart.setHtmlTitle(title);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/sender/SmsSender.java
Patch:
@@ -5,7 +5,7 @@
 import com.dianping.cat.Cat;
 
 public class SmsSender extends BaseSender {
-
+	
 	@Override
 	protected void sendLog(String title, String content, List<String> receivers) {
 		StringBuilder builder = new StringBuilder();

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryGenerator.java
Patch:
@@ -34,7 +34,7 @@ private com.dianping.cat.home.alert.summary.entity.Alert convertToAlert(Topology
 		alert.setAlertTime(date);
 		alert.setContext(edge.getDes());
 		alert.setMetric(edge.getKey());
-		alert.setType("long call");
+		alert.setType("slow "+edge.getType());
 		alert.setDomain(edge.getSelf());
 
 		return alert;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryVisitor.java
Patch:
@@ -21,7 +21,7 @@ public class AlertSummaryVisitor extends BaseVisitor {
 
 	private List<Map<Object, Object>> m_alertList;
 
-	private DateFormat m_fmt = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
+	private DateFormat m_fmt = new SimpleDateFormat("HH:mm:ss");
 
 	public Map<Object, Object> getResult() {
 		return m_result;

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -233,10 +233,10 @@ public void setMetricType(String metricType) {
 	}
 
 	public void setTraceMode(boolean traceMode) {
-		Context content = getContext();
+		Context context = getContext();
 
-		if (content != null) {
-			content.setTraceMode(traceMode);
+		if (context != null) {
+			context.setTraceMode(traceMode);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/app/Payload.java
Patch:
@@ -20,7 +20,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_query2;
 
 	@FieldMeta("type")
-	private String m_type = "successRatio";
+	private String m_type = "request";
 
 	public Payload() {
 		super(ReportPage.APP);

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -233,10 +233,10 @@ public void setMetricType(String metricType) {
 	}
 
 	public void setTraceMode(boolean traceMode) {
-		Context content = getContext();
+		Context context = getContext();
 
-		if (content != null) {
-			content.setTraceMode(traceMode);
+		if (context != null) {
+			context.setTraceMode(traceMode);
 		}
 	}
 

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -233,10 +233,10 @@ public void setMetricType(String metricType) {
 	}
 
 	public void setTraceMode(boolean traceMode) {
-		Context content = getContext();
+		Context context = getContext();
 
-		if (content != null) {
-			content.setTraceMode(traceMode);
+		if (context != null) {
+			context.setTraceMode(traceMode);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -284,7 +284,7 @@ private void processMetricItem(int minute, ProductLine productLine, String metri
 				String mailTitle = getAlertConfig().buildMailTitle(productLine.getTitle(), metricTitle);
 				String contactInfo = buildContactInfo(extractDomain(metricKey));
 				alertResult.setContent(alertResult.getContent() + contactInfo);
-				m_alertInfo.addAlertInfo(metricKey, new Date().getTime());
+				m_alertInfo.addAlertInfo(productlineName, metricKey, new Date().getTime());
 
 				storeAlert(productlineName, metricTitle, mailTitle, alertResult);
 				sendAlertInfo(productLine, mailTitle, alertResult.getContent(), alertResult.getAlertType());

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -73,7 +73,7 @@ private void processMetricItemConfig(MetricItemConfig config, int minute, Produc
 				String mailTitle = m_alertConfig.buildMailTitle(productLine.getTitle(), config.getTitle());
 				String contactInfo = buildContactInfo(domain);
 				alertResult.setContent(alertResult.getContent() + contactInfo);
-				m_alertInfo.addAlertInfo(metricKey, new Date().getTime());
+				m_alertInfo.addAlertInfo(productLine.getId(), metricKey, new Date().getTime());
 
 				storeAlert(domain, metric, mailTitle, alertResult);
 				sendAlertInfo(productLine, mailTitle, alertResult.getContent(), alertResult.getAlertType());

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryFTLDecorator.java
Patch:
@@ -27,9 +27,6 @@ public String generateHtml(AlertSummary alertSummary) {
 		Map<Object, Object> dataMap = visitor.getResult();
 		StringWriter sw = new StringWriter(5000);
 
-		System.out.println(dataMap.get("dateStr"));
-		System.out.println(dataMap.get("domain"));
-
 		try {
 			Template t = m_configuration.getTemplate("summary.ftl");
 			t.process(dataMap, sw);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryFTLDecorator.java
Patch:
@@ -16,6 +16,8 @@
 public class AlertSummaryFTLDecorator implements AlertSummaryDecorator, Initializable {
 
 	public Configuration m_configuration;
+	
+	public static final String ID = "AlertSummaryFTLDecorator";
 
 	@Override
 	public String generateHtml(AlertSummary alertSummary) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryStringDecorator.java
Patch:
@@ -10,6 +10,8 @@
 import com.site.lookup.util.StringUtils;
 
 public class AlertSummaryStringDecorator implements AlertSummaryDecorator {
+	
+	public static final String ID = "AlertSummaryDecorator";
 
 	private static final String css = "<style> th, .alert-content { white-space: nowrap; } </style>";
 

File: cat-home/src/main/java/com/dianping/cat/system/tool/DefaultMailImpl.java
Patch:
@@ -48,7 +48,7 @@ public class DefaultMailImpl implements MailSMS, Initializable, LogEnabled {
 
 	private Logger m_logger;
 
-	private static final String WEIXIN_URL = "http://dpoa-monitorapp-web01.beta/app/monitor/cat/push";
+	private static final String WEIXIN_URL = "http://dpoa.api.dianping.com/app/monitor/cat/push";
 
 	private static final String SUCCESS_TEXT = "{\"success\":\"1\"}";
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -53,7 +53,9 @@
 
 com.dianping.cat.report.page.cdn.Handler.class,
 
-com.dianping.cat.report.page.app.Handler.class
+com.dianping.cat.report.page.app.Handler.class,
+
+com.dianping.cat.report.page.summary.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -51,7 +51,9 @@ public enum ReportPage implements Page {
 
    CDN("cdn", "cdn", "Cdn", "Cdn", true),
 
-   APP("app", "app", "App", "App", true);
+   APP("app", "app", "App", "App", true),
+
+   SUMMARY("summary", "summary", "Summary", "Summary", true);
 
    private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryExecutor.java
Patch:
@@ -46,11 +46,10 @@ private List<String> builderReceivers(String str) {
 	}
 
 	public String execute(String domain, Date date, String receiverStr) {
-		String title = buildMailTitle(domain, date);
-
 		try {
 			AlertSummary alertSummary = m_alertSummaryGenerator.generateAlertSummary(domain, date);
 			m_alertSummaryManager.insert(alertSummary);
+			String title = buildMailTitle(domain, date);
 			String content = m_alertSummaryDecorator.generateHtml(alertSummary);
 			List<String> receivers = builderReceivers(receiverStr);
 			m_mailSms.sendEmail(title, content, receivers);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/summary/AlertSummaryGenerator.java
Patch:
@@ -25,7 +25,7 @@ public class AlertSummaryGenerator {
 	@Inject
 	private TopologyGraphManager m_topologyManager;
 
-	// fetch alerts during this period, time unit is ms, default value is 1 hour
+	// fetch alerts during this period, time unit is ms, default value is 5 minnutes
 	private final long DURATION = 5 * 60 * 1000L;
 
 	private com.dianping.cat.home.alert.summary.entity.Alert convertToAlert(TopologyEdge edge, Date date) {

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -15,6 +15,7 @@
 import com.dianping.cat.config.aggregation.AggregationConfigManager;
 import com.dianping.cat.config.aggregation.AggregationHandler;
 import com.dianping.cat.config.aggregation.DefaultAggregationHandler;
+import com.dianping.cat.config.app.AppConfigManager;
 import com.dianping.cat.config.url.DefaultUrlPatternHandler;
 import com.dianping.cat.config.url.UrlPatternConfigManager;
 import com.dianping.cat.config.url.UrlPatternHandler;
@@ -60,6 +61,8 @@ public List<Component> defineComponents() {
 		all.add(C(AggregationHandler.class, DefaultAggregationHandler.class));
 
 		all.add(C(AggregationConfigManager.class).req(AggregationHandler.class, ConfigDao.class));
+	
+		all.add(C(AppConfigManager.class).req( ConfigDao.class));
 
 		all.add(C(UrlPatternHandler.class, DefaultUrlPatternHandler.class));
 

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -154,7 +154,7 @@ public void testEncode() throws Exception {
 		String content = Files.forIO().readFrom(HtmlMessageCodecTest.class.getResourceAsStream("MessageTree.txt"),
 		      "utf-8");
 		Assert.assertEquals(content.trim(), tree.toString().trim());
-		Assert.assertEquals(1237, buf.readableBytes());
+		Assert.assertEquals(1308, buf.readableBytes());
 	}
 
 	@Test

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -51,7 +51,9 @@
 
 com.dianping.cat.report.page.system.Handler.class,
 
-com.dianping.cat.report.page.cdn.Handler.class
+com.dianping.cat.report.page.cdn.Handler.class,
+
+com.dianping.cat.report.page.app.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -49,7 +49,9 @@ public enum ReportPage implements Page {
 
    SYSTEM("system", "system", "System", "System", true),
 
-   CDN("cdn", "cdn", "Cdn", "Cdn", true);
+   CDN("cdn", "cdn", "Cdn", "Cdn", true),
+
+   APP("app", "app", "App", "App", true);
 
    private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -170,7 +170,7 @@ public void initialize() throws InitializationException {
 		}
 	}
 
-	private TopologyGraph queryGraphFromDB(long time) {
+	public TopologyGraph queryGraphFromDB(long time) {
 		try {
 			com.dianping.cat.home.dal.report.TopologyGraph topologyGraph = m_topologyGraphDao.findByPeriod(new Date(time),
 			      TopologyGraphEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DefaultReportService.java
Patch:
@@ -120,6 +120,7 @@ public class DefaultReportService implements ReportService {
 	@Override
 	public boolean insertDailyReport(DailyReport report, byte[] content) {
 		try {
+			report.setContent("");
 			m_dailyReportDao.insert(report);
 
 			int id = report.getId();
@@ -138,6 +139,7 @@ public boolean insertDailyReport(DailyReport report, byte[] content) {
 	@Override
 	public boolean insertHourlyReport(HourlyReport report, byte[] content) {
 		try {
+			report.setContent("");
 			m_hourlyReportDao.insert(report);
 
 			int id = report.getId();

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/BugReportBuilder.java
Patch:
@@ -42,13 +42,14 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 		}
 		DailyReport report = new DailyReport();
 
-		report.setContent(bugReport.toString());
+		report.setContent("");
 		report.setCreationDate(new Date());
 		report.setDomain(domain);
 		report.setIp(NetworkInterfaceManager.INSTANCE.getLocalHostAddress());
 		report.setName(name);
 		report.setPeriod(period);
 		report.setType(1);
+		
 		byte[] binaryContent = DefaultNativeBuilder.build(bugReport);
 		return m_reportService.insertDailyReport(report, binaryContent);
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/event/EventReportBuilder.java
Patch:
@@ -50,10 +50,9 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 
 			buildEventDailyGraph(eventReport);
 
-			String content = eventReport.toString();
 			DailyReport report = new DailyReport();
 
-			report.setContent(content);
+			report.setContent("");
 			report.setCreationDate(new Date());
 			report.setDomain(domain);
 			report.setIp(NetworkInterfaceManager.INSTANCE.getLocalHostAddress());

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportBuilder.java
Patch:
@@ -49,8 +49,8 @@ public class UtilizationReportBuilder implements ReportTaskBuilder {
 	public boolean buildDailyTask(String name, String domain, Date period) {
 		UtilizationReport utilizationReport = queryHourlyReportsByDuration(name, domain, period,
 		      TaskHelper.tomorrowZero(period));
-
 		DailyReport report = new DailyReport();
+		
 		report.setContent("");
 		report.setCreationDate(new Date());
 		report.setDomain(domain);
@@ -76,8 +76,8 @@ public boolean buildHourlyTask(String name, String domain, Date start) {
 			if (m_configManger.validateDomain(domainName)) {
 				TransactionReport transactionReport = m_reportService.queryTransactionReport(domainName, start, end);
 				int size = transactionReport.getMachines().size();
+				
 				utilizationReport.findOrCreateDomain(domainName).setMachineNumber(size);
-
 				transactionReport = m_mergeManager.mergerAllIp(transactionReport, Constants.ALL);
 				transactionVisitor.visitTransactionReport(transactionReport);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -26,7 +26,7 @@ public Page[] getVisiblePages() {
 		ReportPage.METRIC,
 		
 		ReportPage.USERMONITOR,
-
+		
 		ReportPage.TRANSACTION,
 
 		ReportPage.EVENT,

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -93,7 +93,9 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	METRIC_GROUP_CONFIG_UPDATE("metricGroupConfigUpdate"),
 
-	NET_GRAPH_CONFIG_UPDATE("netGraphConfigUpdate");
+	NET_GRAPH_CONFIG_UPDATE("netGraphConfigUpdate"),
+	
+	APP_CONFIG_UPDATE("appConfigUpdate");
 	
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -59,7 +59,9 @@ public enum JspFile {
 
 	METRIC_GROUP_CONFIG_UPDATE("/jsp/system/metricGroup/metricGroupConfig.jsp"),
 	
-	NET_GRAPH_CONFIG_UPDATE("/jsp/system/netGraphConfig/netGraphConfig.jsp");
+	NET_GRAPH_CONFIG_UPDATE("/jsp/system/netGraphConfig/netGraphConfig.jsp"),
+	
+	APP_CONFIG_UPDATE("/jsp/system/appConfig/appConfig.jsp");
 
 	private String m_path;
 

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/AvgLoadAnalyzer.java
Patch:
@@ -113,7 +113,7 @@ private Set<String> queryDomains(Date date) {
 		return m_reportService.queryAllDomainNames(date, new Date(date.getTime() + TimeUtil.ONE_HOUR),
 		      TransactionAnalyzer.ID);
 	}
-
+	
 	public static class MachineInfo {
 
 		private String m_ip;

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/BugReportBuilder.java
Patch:
@@ -42,13 +42,14 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 		}
 		DailyReport report = new DailyReport();
 
-		report.setContent(bugReport.toString());
+		report.setContent("");
 		report.setCreationDate(new Date());
 		report.setDomain(domain);
 		report.setIp(NetworkInterfaceManager.INSTANCE.getLocalHostAddress());
 		report.setName(name);
 		report.setPeriod(period);
 		report.setType(1);
+		
 		byte[] binaryContent = DefaultNativeBuilder.build(bugReport);
 		return m_reportService.insertDailyReport(report, binaryContent);
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/event/EventReportBuilder.java
Patch:
@@ -50,10 +50,9 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 
 			buildEventDailyGraph(eventReport);
 
-			String content = eventReport.toString();
 			DailyReport report = new DailyReport();
 
-			report.setContent(content);
+			report.setContent("");
 			report.setCreationDate(new Date());
 			report.setDomain(domain);
 			report.setIp(NetworkInterfaceManager.INSTANCE.getLocalHostAddress());

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportBuilder.java
Patch:
@@ -49,8 +49,8 @@ public class UtilizationReportBuilder implements ReportTaskBuilder {
 	public boolean buildDailyTask(String name, String domain, Date period) {
 		UtilizationReport utilizationReport = queryHourlyReportsByDuration(name, domain, period,
 		      TaskHelper.tomorrowZero(period));
-
 		DailyReport report = new DailyReport();
+		
 		report.setContent("");
 		report.setCreationDate(new Date());
 		report.setDomain(domain);
@@ -76,8 +76,8 @@ public boolean buildHourlyTask(String name, String domain, Date start) {
 			if (m_configManger.validateDomain(domainName)) {
 				TransactionReport transactionReport = m_reportService.queryTransactionReport(domainName, start, end);
 				int size = transactionReport.getMachines().size();
+				
 				utilizationReport.findOrCreateDomain(domainName).setMachineNumber(size);
-
 				transactionReport = m_mergeManager.mergerAllIp(transactionReport, Constants.ALL);
 				transactionVisitor.visitTransactionReport(transactionReport);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DataChecker.java
Patch:
@@ -2,11 +2,11 @@
 
 import java.util.List;
 
-import org.unidal.tuple.Pair;
+import org.unidal.tuple.Triple;
 
-import com.dianping.cat.home.rule.entity.Config;
+import com.dianping.cat.home.rule.entity.Condition;
 
 public interface DataChecker {
-	public Pair<Boolean, String> checkData(double[] value, double[] baseline, List<Config> configs);
+	public Triple<Boolean, String, String> checkData(double[] value, double[] baseline, List<Condition> conditions);
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/graph/CdnGraphCreator.java
Patch:
@@ -15,7 +15,7 @@
 import com.dianping.cat.report.page.LineChart;
 
 public class CdnGraphCreator extends AbstractGraphCreator {
-	
+
 	private final static String CDN = "cdn";
 
 	private Map<String, LineChart> buildInfoChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
@@ -51,7 +51,7 @@ private Map<String, double[]> fetchData(MetricReport report) {
 
 		for (Entry<String, MetricItem> item : items.entrySet()) {
 			String key = item.getKey();
-			
+
 			if (!data.containsKey(key)) {
 				double[] values = new double[60];
 				for (int i = 0; i < 60; i++)
@@ -87,7 +87,7 @@ public Map<String, double[]> prepareAllData(Date startDate, Date endDate, String
 			MetricReport report = m_metricReportService.queryCdnReport(CDN, properties, new Date(start));
 			Map<String, double[]> currentValues;
 			currentValues = fetchData(report);
-			
+
 			mergeMap(sourceValue, currentValues, totalSize, index);
 			index++;
 		}

File: cat-client/src/main/java/com/dianping/cat/servlet/CdnFilter.java
Patch:
@@ -39,6 +39,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
 				Metric metric = Cat.getProducer().newMetric("cdn", vip + ":" + sourceIp);
 
 				metric.setStatus("C");
+				metric.addData(String.valueOf(1));
 			}
 		} catch (Exception e) {
 			Cat.logError(e);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricAnalyzer.java
Patch:
@@ -100,6 +100,9 @@ private ConfigItem parseValue(String status, String data) {
 		ConfigItem config = new ConfigItem();
 
 		if ("C".equals(status)) {
+			if (StringUtils.isEmpty(data)) {
+				data = "1";
+			}
 			int count = Integer.parseInt(data);
 
 			config.setCount(count);
@@ -122,7 +125,6 @@ private ConfigItem parseValue(String status, String data) {
 
 			config.setCount(Integer.parseInt(datas[0]));
 			config.setValue(Double.parseDouble(datas[1]));
-			config.setShowCount(false);
 			config.setShowSum(true);
 		} else {
 			return null;

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/graph/CdnReportConvertor.java
Patch:
@@ -8,7 +8,6 @@
 import com.dianping.cat.service.IpService.IpInfo;
 
 public class CdnReportConvertor extends BaseVisitor {
-	
 	private IpService m_ipService;
 
 	private MetricReport m_report;

File: cat-home/src/main/java/com/dianping/cat/report/page/cdn/graph/CdnReportConvertor.java
Patch:
@@ -8,6 +8,7 @@
 import com.dianping.cat.service.IpService.IpInfo;
 
 public class CdnReportConvertor extends BaseVisitor {
+	
 	private IpService m_ipService;
 
 	private MetricReport m_report;

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -37,7 +37,6 @@
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.cdn.graph.CdnConfig;
 import com.dianping.cat.report.page.cdn.graph.CdnGraphCreator;
-import com.dianping.cat.report.page.cdn.graph.CdnReportConvertor;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphBuilder;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphConfigManager;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphItemBuilder;
@@ -134,9 +133,8 @@ public List<Component> defineComponents() {
 		all.add(C(CdnGraphCreator.class).req(BaselineService.class, DataExtractor.class,
 				MetricDataFetcher.class, CachedMetricReportService.class, MetricConfigManager.class,
 				ProductLineConfigManager.class, MetricGroupConfigManager.class, AlertInfo.class, CdnConfig.class));
-		all.add(C(CdnReportConvertor.class).req(CdnConfig.class, IpService.class));
 		all.add(C(CachedMetricReportService.class, CachedMetricReportServiceImpl.class).req(ModelService.class,
-		      MetricAnalyzer.ID).req(ReportService.class).req(CdnReportConvertor.class));
+		      MetricAnalyzer.ID).req(ReportService.class).req(CdnConfig.class, IpService.class));
 
 		all.add(C(DataExtractor.class, DataExtractorImpl.class));
 

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -37,7 +37,6 @@
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.cdn.graph.CdnConfig;
 import com.dianping.cat.report.page.cdn.graph.CdnGraphCreator;
-import com.dianping.cat.report.page.cdn.graph.CdnReportConvertor;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphBuilder;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphConfigManager;
 import com.dianping.cat.report.page.dependency.graph.TopologyGraphItemBuilder;
@@ -134,9 +133,8 @@ public List<Component> defineComponents() {
 		all.add(C(CdnGraphCreator.class).req(BaselineService.class, DataExtractor.class,
 				MetricDataFetcher.class, CachedMetricReportService.class, MetricConfigManager.class,
 				ProductLineConfigManager.class, MetricGroupConfigManager.class, AlertInfo.class, CdnConfig.class));
-		all.add(C(CdnReportConvertor.class).req(CdnConfig.class, IpService.class));
 		all.add(C(CachedMetricReportService.class, CachedMetricReportServiceImpl.class).req(ModelService.class,
-		      MetricAnalyzer.ID).req(ReportService.class).req(CdnReportConvertor.class));
+		      MetricAnalyzer.ID).req(ReportService.class).req(CdnConfig.class, IpService.class));
 
 		all.add(C(DataExtractor.class, DataExtractorImpl.class));
 

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -292,4 +292,5 @@ void setContainer(PlexusContainer container) {
 			      + "please make sure the environment was setup correctly!", e);
 		}
 	}
+	
 }

File: cat-home/src/main/java/com/dianping/cat/system/config/ExceptionConfigManager.java
Patch:
@@ -74,11 +74,13 @@ public void initialize() throws InitializationException {
 	public boolean insertExceptionLimit(ExceptionLimit limit) {
 		DomainConfig domainConfig = m_exceptionConfig.findOrCreateDomainConfig(limit.getDomain());
 		domainConfig.getExceptionLimits().put(limit.getId(), limit);
+		
 		return storeConfig();
 	}
 
 	public List<ExceptionLimit> queryAllExceptionLimits() {
 		List<ExceptionLimit> result = new ArrayList<ExceptionLimit>();
+		
 		for (DomainConfig domainConfig : m_exceptionConfig.getDomainConfigs().values()) {
 			result.addAll(domainConfig.getExceptionLimits().values());
 		}
@@ -88,6 +90,7 @@ public List<ExceptionLimit> queryAllExceptionLimits() {
 	public ExceptionLimit queryDomainExceptionLimit(String domain, String exceptionName) {
 		DomainConfig domainConfig = m_exceptionConfig.getDomainConfigs().get(domain);
 		ExceptionLimit result = null;
+		
 		if (domainConfig == null) {
 			domainConfig = m_exceptionConfig.getDomainConfigs().get(DEFAULT_STRING);
 		}

File: cat-home/src/main/java/com/dianping/cat/system/config/ExceptionConfigManager.java
Patch:
@@ -74,11 +74,13 @@ public void initialize() throws InitializationException {
 	public boolean insertExceptionLimit(ExceptionLimit limit) {
 		DomainConfig domainConfig = m_exceptionConfig.findOrCreateDomainConfig(limit.getDomain());
 		domainConfig.getExceptionLimits().put(limit.getId(), limit);
+		
 		return storeConfig();
 	}
 
 	public List<ExceptionLimit> queryAllExceptionLimits() {
 		List<ExceptionLimit> result = new ArrayList<ExceptionLimit>();
+		
 		for (DomainConfig domainConfig : m_exceptionConfig.getDomainConfigs().values()) {
 			result.addAll(domainConfig.getExceptionLimits().values());
 		}
@@ -88,6 +90,7 @@ public List<ExceptionLimit> queryAllExceptionLimits() {
 	public ExceptionLimit queryDomainExceptionLimit(String domain, String exceptionName) {
 		DomainConfig domainConfig = m_exceptionConfig.getDomainConfigs().get(domain);
 		ExceptionLimit result = null;
+		
 		if (domainConfig == null) {
 			domainConfig = m_exceptionConfig.getDomainConfigs().get(DEFAULT_STRING);
 		}

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -23,7 +23,7 @@
 
 public class BusinessRuleConfigManager extends BaseRuleConfigManager implements Initializable {
 
-	private static final String CONFIG_NAME = "businessRuleWithTextAttr";
+	private static final String CONFIG_NAME = "businessRuleConfig";
 
 	public String updateRule(String ruleContent) throws SAXException, IOException {
 		Rule rule = DefaultSaxParser.parseEntity(Rule.class, ruleContent);

File: cat-home/src/main/java/com/dianping/cat/system/config/NetworkRuleConfigManager.java
Patch:
@@ -15,7 +15,7 @@
 
 public class NetworkRuleConfigManager extends BaseRuleConfigManager implements Initializable {
 
-	private static final String CONFIG_NAME = "networkRuleWithTextAttr";
+	private static final String CONFIG_NAME = "networkRuleConfig";
 
 	@Override
    protected String getConfigName() {

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -50,11 +50,11 @@ protected void execute(ModuleContext ctx) throws Exception {
 
 		if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
 			BusinessAlert metricAlert = ctx.lookup(BusinessAlert.class);
-			NetworkAlert swtichAlert = ctx.lookup(NetworkAlert.class);
+			NetworkAlert networkAlert = ctx.lookup(NetworkAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
 			ProjectUpdateTask productUpdateTask = ctx.lookup(ProjectUpdateTask.class);
 
-			Threads.forGroup("Cat").start(swtichAlert);
+			Threads.forGroup("Cat").start(networkAlert);
 			Threads.forGroup("Cat").start(metricAlert);
 			Threads.forGroup("Cat").start(exceptionAlert);
 			Threads.forGroup("Cat").start(productUpdateTask);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DefaultDataChecker.java
Patch:
@@ -62,7 +62,7 @@ private Pair<Boolean, String> checkDataByCondition(double[] value, double[] base
 				if (!subResult.getKey()) {
 					return new Pair<Boolean, String>(false, "");
 				}
-				builder.append(subResult.getValue()).append("\n");
+				builder.append(subResult.getValue()).append("<br/>");
 			} catch (Exception ex) {
 				Cat.logError(condition.toString(), ex);
 				return new Pair<Boolean, String>(false, "");

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/network/NetworkAlert.java
Patch:
@@ -129,12 +129,12 @@ public void run() {
 	@Override
 	protected void sendAlertInfo(ProductLine productLine, String metricTitle, String content) {
 		List<String> emails = m_alertConfig.buildMailReceivers(productLine);
-		// List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
+		List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
 		String title = m_alertConfig.buildMailTitle(productLine, metricTitle);
 
 		m_logger.info(title + " " + content + " " + emails);
 		m_mailSms.sendEmail(title, content, emails);
-		// m_mailSms.sendSms(title + " " + content, content, phones);
+		m_mailSms.sendSms(title + " " + content, content, phones);
 
 		Cat.logEvent("NetworkAlert", productLine.getId(), Event.SUCCESS, title + "  " + content);
 	}

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -89,7 +89,9 @@ protected boolean storeConfig() {
 		return true;
 	}
 
-	public boolean validate(String type, String context, String metricKey) {
+	public boolean validate(String type, String con, String key) {
+		String context = con.trim();
+		String metricKey = key.trim();
 		if (type.equals("id")) {
 			if (context.equals(metricKey)) {
 				return true;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/network/NetworkAlert.java
Patch:
@@ -129,12 +129,12 @@ public void run() {
 	@Override
 	protected void sendAlertInfo(ProductLine productLine, String metricTitle, String content) {
 		List<String> emails = m_alertConfig.buildMailReceivers(productLine);
-		// List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
+		List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
 		String title = m_alertConfig.buildMailTitle(productLine, metricTitle);
 
 		m_logger.info(title + " " + content + " " + emails);
 		m_mailSms.sendEmail(title, content, emails);
-		// m_mailSms.sendSms(title + " " + content, content, phones);
+		m_mailSms.sendSms(title + " " + content, content, phones);
 
 		Cat.logEvent("NetworkAlert", productLine.getId(), Event.SUCCESS, title + "  " + content);
 	}

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -89,7 +89,9 @@ protected boolean storeConfig() {
 		return true;
 	}
 
-	public boolean validate(String type, String context, String metricKey) {
+	public boolean validate(String type, String con, String key) {
+		String context = con.trim();
+		String metricKey = key.trim();
 		if (type.equals("id")) {
 			if (context.equals(metricKey)) {
 				return true;

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphBuilder.java
Patch:
@@ -93,7 +93,6 @@ public NetGraphSet buildGraphSet(NetGraph netGraphTemplate, Map<String, MetricRe
 
 	private NetGraph copyBaseInfoFromTemplate(NetGraph netGraph) {
 		NetGraph to = new NetGraph();
-		
 		for (NetTopology netTopologyA : netGraph.getNetTopologies()) {
 			NetTopology netTopologyB = new NetTopology();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphBuilder.java
Patch:
@@ -93,6 +93,7 @@ public NetGraphSet buildGraphSet(NetGraph netGraphTemplate, Map<String, MetricRe
 
 	private NetGraph copyBaseInfoFromTemplate(NetGraph netGraph) {
 		NetGraph to = new NetGraph();
+		
 		for (NetTopology netTopologyA : netGraph.getNetTopologies()) {
 			NetTopology netTopologyB = new NetTopology();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphBuilder.java
Patch:
@@ -93,7 +93,6 @@ public NetGraphSet buildGraphSet(NetGraph netGraphTemplate, Map<String, MetricRe
 
 	private NetGraph copyBaseInfoFromTemplate(NetGraph netGraph) {
 		NetGraph to = new NetGraph();
-		
 		for (NetTopology netTopologyA : netGraph.getNetTopologies()) {
 			NetTopology netTopologyB = new NetTopology();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphBuilder.java
Patch:
@@ -93,6 +93,7 @@ public NetGraphSet buildGraphSet(NetGraph netGraphTemplate, Map<String, MetricRe
 
 	private NetGraph copyBaseInfoFromTemplate(NetGraph netGraph) {
 		NetGraph to = new NetGraph();
+		
 		for (NetTopology netTopologyA : netGraph.getNetTopologies()) {
 			NetTopology netTopologyB = new NetTopology();
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -50,11 +50,11 @@ protected void execute(ModuleContext ctx) throws Exception {
 
 		if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
 			BusinessAlert metricAlert = ctx.lookup(BusinessAlert.class);
-			NetworkAlert swtichAlert = ctx.lookup(NetworkAlert.class);
+			NetworkAlert networkAlert = ctx.lookup(NetworkAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
 			ProjectUpdateTask productUpdateTask = ctx.lookup(ProjectUpdateTask.class);
 
-			Threads.forGroup("Cat").start(swtichAlert);
+			Threads.forGroup("Cat").start(networkAlert);
 			Threads.forGroup("Cat").start(metricAlert);
 			Threads.forGroup("Cat").start(exceptionAlert);
 			Threads.forGroup("Cat").start(productUpdateTask);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DefaultDataChecker.java
Patch:
@@ -62,7 +62,7 @@ private Pair<Boolean, String> checkDataByCondition(double[] value, double[] base
 				if (!subResult.getKey()) {
 					return new Pair<Boolean, String>(false, "");
 				}
-				builder.append(subResult.getValue()).append("\n");
+				builder.append(subResult.getValue()).append("<br/>");
 			} catch (Exception ex) {
 				Cat.logError(condition.toString(), ex);
 				return new Pair<Boolean, String>(false, "");

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -57,6 +57,7 @@ protected void buildDailyReportInternal(Map<String, MetricReport> reports, Strin
 		MetricItemConfig metricConfig = m_configManager.getMetricConfig().getMetricItemConfigs().get(metricId);
 		String metricDomain = metricConfig.getDomain();
 		String productLine = m_productLineConfigManager.queryProductLineByDomain(metricDomain);
+		
 		for (MetricType type : MetricType.values()) {
 			String key = metricId + ":" + type;
 			BaselineConfig baselineConfig = m_baselineConfigManager.queryBaseLineConfig(key);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -234,7 +234,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 					convert.visitMetricReport(metricReport);
 					((ModelResponse<MetricReport>) response).setModel(convert.getReport());
-
 				} else if (Constants.METRIC_SYSTEM_MONITOR.equals(metricType)) {
 					String ipAddrsStr = payload.getIpAddress();
 					Set<String> ipAddrs = null;
@@ -249,7 +248,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 					
 					convert.visitMetricReport(metricReport);
 					((ModelResponse<MetricReport>) response).setModel(convert.getReport());
-
 				}
 
 			} else if (DependencyAnalyzer.ID.equals(report)) {

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -51,8 +51,8 @@ public void testRule() {
 
 		Assert.assertNotNull(configMap);
 
-		double baseline[] = { 200, 200 };
-		double value[] = { 100, 100 };
+		double baseline[] = { 200, 350 };
+		double value[] = { 100, 50 };
 		Pair<Boolean, String> result = m_check.checkData(value, baseline, configMap.get("demo1"));
 		Assert.assertEquals(result.getKey().booleanValue(), true);
 	}

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -51,8 +51,8 @@ public void testRule() {
 
 		Assert.assertNotNull(configMap);
 
-		double baseline[] = { 200, 200 };
-		double value[] = { 100, 100 };
+		double baseline[] = { 200, 350 };
+		double value[] = { 100, 50 };
 		Pair<Boolean, String> result = m_check.checkData(value, baseline, configMap.get("demo1"));
 		Assert.assertEquals(result.getKey().booleanValue(), true);
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -189,7 +189,7 @@ private void processMetricItemConfig(MetricItemConfig config, int minute, Produc
 			}
 
 			if (alert != null && alert.getKey()) {
-				m_alertInfo.addAlertInfo(config, new Date().getTime());
+				m_alertInfo.addAlertInfo(metricKey, new Date().getTime());
 
 				sendAlertInfo(productLine, config.getTitle(), alert.getValue());
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/network/NetworkAlert.java
Patch:
@@ -13,7 +13,6 @@
 import org.unidal.tuple.Pair;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.metric.model.entity.MetricItem;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
@@ -53,7 +52,7 @@ private void processMetricItem(int minute, ProductLine productLine, String metri
 
 			if (alert != null && alert.getKey()) {
 				String metricTitle = buildMetricTitle(metricKey);
-				m_alertInfo.addAlertInfo(new MetricItemConfig(metricKey), new Date().getTime());
+				m_alertInfo.addAlertInfo(metricKey, new Date().getTime());
 
 				sendAlertInfo(productLine, metricTitle, alert.getValue());
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/BaseRuleConfigManager.java
Patch:
@@ -46,7 +46,7 @@ public boolean insert(String xml) {
 	public List<com.dianping.cat.home.rule.entity.Config> queryConfigs(String metricKey, MetricType type) {
 		List<com.dianping.cat.home.rule.entity.Config> configs = new ArrayList<com.dianping.cat.home.rule.entity.Config>();
 
-		for (Rule rule : m_config.getRules()) {
+		for (Rule rule : m_config.getRules().values()) {
 			List<MetricItem> items = rule.getMetricItems();
 
 			for (MetricItem item : items) {

File: cat-home/src/main/java/com/dianping/cat/system/config/NetworkRuleConfigManager.java
Patch:
@@ -66,7 +66,7 @@ public boolean insert(String xml) {
 	}
 
 	private void setSumTrueWhenAllFalse(MonitorRules config) {
-		for (Rule rule : m_config.getRules()) {
+		for (Rule rule : m_config.getRules().values()) {
 			for (MetricItem item : rule.getMetricItems()) {
 				if (!item.isMonitorAvg() && !item.isMonitorCount() && !item.isMonitorSum()) {
 					item.setMonitorSum(true);

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -505,7 +505,7 @@ private void metricRuleAdd(Payload payload, Model model) {
 	
 	private boolean metricRuleAddSubmit(Payload payload, Model model) {
 		try{
-			String xmlContent = m_businessRuleConfigManager.addOrReplaceRule(payload.getContent());
+			String xmlContent = m_businessRuleConfigManager.updateRule(payload.getContent());
 			return m_businessRuleConfigManager.insert(xmlContent);
 		}catch(Exception ex){
 			return false;

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -38,7 +38,7 @@ private Map<String, List<com.dianping.cat.home.rule.entity.Config>> buildConfigM
 
 		Map<String, List<com.dianping.cat.home.rule.entity.Config>> map = new HashMap<String, List<com.dianping.cat.home.rule.entity.Config>>();
 
-		for (Rule rule : monitorRules.getRules()) {
+		for (Rule rule : monitorRules.getRules().values()) {
 			map.put(rule.getId(), rule.getConfigs());
 		}
 

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -33,7 +33,7 @@ private Map<String, List<com.dianping.cat.home.rule.entity.Config>> buildConfigM
 
 		Map<String, List<com.dianping.cat.home.rule.entity.Config>> map = new HashMap<String, List<com.dianping.cat.home.rule.entity.Config>>();
 
-		for (Rule rule : monitorRules.getRules()) {
+		for (Rule rule : monitorRules.getRules().values()) {
 			map.put(rule.getId(), rule.getConfigs());
 		}
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricConfigManager.java
Patch:
@@ -65,8 +65,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_metricConfig = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_metricConfig = DefaultSaxParser.parse(content);
 			m_modifyTime = config.getModifyDate().getTime();
 		} catch (DalNotFoundException e) {
 			try {
@@ -78,8 +78,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_metricConfig = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_metricConfig = DefaultSaxParser.parse(content);
 				m_modifyTime = new Date().getTime();
 			} catch (Exception ex) {
 				Cat.logError(ex);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/ProductLineConfigManager.java
Patch:
@@ -99,8 +99,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_company = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_company = DefaultSaxParser.parse(content);
 			m_modifyTime = config.getModifyDate().getTime();
 		} catch (DalNotFoundException e) {
 			try {
@@ -112,8 +112,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_company = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_company = DefaultSaxParser.parse(content);
 				m_modifyTime = new Date().getTime();
 			} catch (Exception ex) {
 				Cat.logError(ex);

File: cat-core/src/main/java/com/dianping/cat/config/aggregation/AggregationConfigManager.java
Patch:
@@ -54,8 +54,8 @@ public void initialize() {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_aggregation = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_aggregation = DefaultSaxParser.parse(content);
 			m_modifyTime = config.getModifyDate().getTime();
 		} catch (DalNotFoundException e) {
 			try {
@@ -66,8 +66,8 @@ public void initialize() {
 				config.setName(CONFIG_NAME);
 				config.setContent(content);
 				m_configDao.insert(config);
-				m_aggregation = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_aggregation = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-core/src/main/java/com/dianping/cat/config/url/UrlPatternConfigManager.java
Patch:
@@ -51,10 +51,9 @@ public void initialize() {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_UrlPattern = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_UrlPattern = DefaultSaxParser.parse(content);
 			m_modifyTime = config.getModifyDate().getTime();
-
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -64,8 +63,8 @@ public void initialize() {
 				config.setName(CONFIG_NAME);
 				config.setContent(content);
 				m_configDao.insert(config);
-				m_UrlPattern = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_UrlPattern = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphConfigManager.java
Patch:
@@ -223,8 +223,8 @@ public void initialize() throws InitializationException {
 				Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 				String content = config.getContent();
 
-				m_config = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_config = DefaultSaxParser.parse(content);
 			} catch (DalNotFoundException e) {
 				try {
 					String content = Files.forIO().readFrom(
@@ -235,8 +235,8 @@ public void initialize() throws InitializationException {
 					config.setContent(content);
 					m_configDao.insert(config);
 
-					m_config = DefaultSaxParser.parse(content);
 					m_configId = config.getId();
+					m_config = DefaultSaxParser.parse(content);
 				} catch (Exception ex) {
 					Cat.logError(ex);
 				}

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlert.java
Patch:
@@ -93,10 +93,11 @@ public void run() {
 		}
 	}
 
-	public void sendAlertInfo(ProductLine productLine, MetricItemConfig config, String content) {
+	@Override
+	public void sendAlertInfo(ProductLine productLine, String metricTitle, String content) {
 		List<String> emails = m_alertConfig.buildMailReceivers(productLine);
 		List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
-		String title = m_alertConfig.buildMailTitle(productLine, config.getTitle());
+		String title = m_alertConfig.buildMailTitle(productLine, metricTitle);
 
 		m_logger.info(title + " " + content + " " + emails);
 		m_mailSms.sendEmail(title, content, emails);

File: cat-home/src/main/java/com/dianping/cat/system/config/AlertConfigManager.java
Patch:
@@ -57,8 +57,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_config = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_config = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -69,8 +69,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_config = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_config = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/BugConfigManager.java
Patch:
@@ -51,8 +51,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_bugConfig = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_bugConfig = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -63,8 +63,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_bugConfig = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_bugConfig = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/DomainGroupConfigManager.java
Patch:
@@ -39,8 +39,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_domainGroup = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_domainGroup = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -51,8 +51,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_domainGroup = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_domainGroup = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/ExceptionConfigManager.java
Patch:
@@ -46,8 +46,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_exceptionConfig = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_exceptionConfig = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -58,8 +58,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_exceptionConfig = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_exceptionConfig = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/NetworkRuleConfigManager.java
Patch:
@@ -28,20 +28,20 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_config = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_config = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
-				      this.getClass().getResourceAsStream("/config/default-network-metric-rule-config.xml"), "utf-8");
+				      this.getClass().getResourceAsStream("/config/default-network-metric-rule-config-unit.xml"), "utf-8");
 				Config config = m_configDao.createLocal();
 
 				config.setName(CONFIG_NAME);
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_config = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_config = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -67,8 +67,8 @@ private List<Config> convert(MetricItemConfig metricItemConfig) {
 			decreaseValue = 100;
 		}
 
-		descPerSubcon.setType("DescPer").setText(decreasePercent);
-		descValSubcon.setType("DescVal").setText(decreaseValue);
+		descPerSubcon.setType("DescPer").setText(String.valueOf(decreasePercent));
+		descValSubcon.setType("DescVal").setText(String.valueOf(decreaseValue));
 
 		condition.addSubCondition(descPerSubcon).addSubCondition(descValSubcon);
 		config.addCondition(condition);

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -96,8 +96,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_config = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_config = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -108,8 +108,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_config = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_config = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/NetworkRuleConfigManager.java
Patch:
@@ -28,8 +28,8 @@ public void initialize() throws InitializationException {
 			Config config = m_configDao.findByName(CONFIG_NAME, ConfigEntity.READSET_FULL);
 			String content = config.getContent();
 
-			m_config = DefaultSaxParser.parse(content);
 			m_configId = config.getId();
+			m_config = DefaultSaxParser.parse(content);
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -40,8 +40,8 @@ public void initialize() throws InitializationException {
 				config.setContent(content);
 				m_configDao.insert(config);
 
-				m_config = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
+				m_config = DefaultSaxParser.parse(content);
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -122,7 +122,8 @@ public List<Component> defineComponents() {
 		all.add(C(NetGraphManager.class).req(ServerConfigManager.class, RemoteMetricReportService.class).req(
 		      ReportService.class, NetGraphBuilder.class, AlertInfo.class, NetGraphConfigManager.class));
 
-		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetGraphBuilder.class));
+		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetGraphBuilder.class, 
+				NetGraphConfigManager.class));
 
 		all.add(C(ReportFacade.class)//
 		      .req(TransactionReportBuilder.class, EventReportBuilder.class, ProblemReportBuilder.class,

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -122,7 +122,8 @@ public List<Component> defineComponents() {
 		all.add(C(NetGraphManager.class).req(ServerConfigManager.class, RemoteMetricReportService.class).req(
 		      ReportService.class, NetGraphBuilder.class, AlertInfo.class, NetGraphConfigManager.class));
 
-		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetGraphBuilder.class));
+		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetGraphBuilder.class, 
+				NetGraphConfigManager.class));
 
 		all.add(C(ReportFacade.class)//
 		      .req(TransactionReportBuilder.class, EventReportBuilder.class, ProblemReportBuilder.class,

File: cat-agent/src/main/java/com/dianping/cat/agent/AbstractTask.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.io.BufferedReader;
 import java.io.InputStreamReader;

File: cat-agent/src/main/java/com/dianping/cat/agent/Configuration.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.io.BufferedInputStream;
 import java.io.FileInputStream;

File: cat-agent/src/main/java/com/dianping/cat/agent/NetworkInterfaceManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.net.Inet4Address;
 import java.net.InetAddress;

File: cat-agent/src/main/java/com/dianping/cat/agent/StateTask.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.io.BufferedReader;
 import java.io.File;

File: cat-agent/src/main/java/com/dianping/cat/agent/system/PerformanceTask.java
Patch:
@@ -8,6 +8,9 @@
 import org.hyperic.sigar.SigarException;
 import org.hyperic.sigar.Swap;
 
+import com.dianping.cat.agent.AbstractTask;
+import com.dianping.cat.agent.Configuration;
+
 public class PerformanceTask extends AbstractTask {
 
 	private Sigar m_sigar;

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Payload.java
Patch:
@@ -20,7 +20,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_domain = "Cat";
 
 	@FieldMeta("productLine")
-	private String m_productLine;
+	private String m_productLine = "中间件";
 
 	@FieldMeta("type")
 	private String m_type = "system";

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -396,7 +396,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		case EXCEPTION_EXCLUDE_ADD:
 			List<String> exceptionExcludeList = queryExceptionList();
 
-			exceptionExcludeList.add(ExceptionConfigManager.ALL_STRING);
 			model.setExceptionList(exceptionExcludeList);
 			model.setDomainList(queryDoaminList());
 			break;

File: cat-agent/src/main/java/com/dianping/cat/agent/AbstractTask.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.io.BufferedReader;
 import java.io.InputStreamReader;

File: cat-agent/src/main/java/com/dianping/cat/agent/Configuration.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.io.BufferedInputStream;
 import java.io.FileInputStream;

File: cat-agent/src/main/java/com/dianping/cat/agent/NetworkInterfaceManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.net.Inet4Address;
 import java.net.InetAddress;

File: cat-agent/src/main/java/com/dianping/cat/agent/StateTask.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.agent.system;
+package com.dianping.cat.agent;
 
 import java.io.BufferedReader;
 import java.io.File;

File: cat-agent/src/main/java/com/dianping/cat/agent/system/PerformanceTask.java
Patch:
@@ -8,6 +8,9 @@
 import org.hyperic.sigar.SigarException;
 import org.hyperic.sigar.Swap;
 
+import com.dianping.cat.agent.AbstractTask;
+import com.dianping.cat.agent.Configuration;
+
 public class PerformanceTask extends AbstractTask {
 
 	private Sigar m_sigar;

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphBuilder.java
Patch:
@@ -11,7 +11,6 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.report.task.alert.AlertInfo;
 import com.dianping.cat.consumer.metric.model.entity.MetricItem;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.home.nettopo.entity.Anchor;

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/NetGraphManager.java
Patch:
@@ -20,8 +20,6 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.ServerConfigManager;
-import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
-import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.home.nettopo.entity.NetGraph;

File: cat-home/src/main/java/com/dianping/cat/report/page/system/Payload.java
Patch:
@@ -20,7 +20,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_domain = "Cat";
 
 	@FieldMeta("productLine")
-	private String m_productLine;
+	private String m_productLine = "中间件";
 
 	@FieldMeta("type")
 	private String m_type = "system";

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -396,7 +396,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		case EXCEPTION_EXCLUDE_ADD:
 			List<String> exceptionExcludeList = queryExceptionList();
 
-			exceptionExcludeList.add(ExceptionConfigManager.ALL_STRING);
 			model.setExceptionList(exceptionExcludeList);
 			model.setDomainList(queryDoaminList());
 			break;

File: cat-agent/src/main/java/com/dianping/cat/agent/system/PerformanceTask.java
Patch:
@@ -94,12 +94,12 @@ public void buildDiskUsage() {
 			for (FileSystem fs : fileSystems) {
 				if (fs.getType() == FileSystem.TYPE_LOCAL_DISK) {
 					FileSystemUsage usage = m_sigar.getFileSystemUsage(fs.getDirName());
-					String url = String.format(m_catUrl, System.currentTimeMillis(), m_domain, "system_" + fs.getDirName() + "_usage_" + m_ipAddr,
+					String url = String.format(m_catUrl, System.currentTimeMillis(), m_domain, "system_" + fs.getDirName() + "-usage_" + m_ipAddr,
 					      "avg", String.valueOf(usage.getUsePercent()));
 
 					sendMetric(url);
 					
-					String url2 = String.format(m_catUrl, System.currentTimeMillis(), m_domain, "system_" + fs.getDirName() + "_usage_" + m_ipAddr2,
+					String url2 = String.format(m_catUrl, System.currentTimeMillis(), m_domain, "system_" + fs.getDirName() + "-usage_" + m_ipAddr2,
 					      "avg", String.valueOf(usage.getUsePercent() + 0.2));
 
 					sendMetric(url2);

File: cat-agent/src/main/java/com/dianping/cat/agent/system/SystemAgent.java
Patch:
@@ -12,7 +12,6 @@ public static void main(String args[]) {
 		ExecutorService executorService = Executors.newFixedThreadPool(THREAD_NUM);
 
 		String filePath = System.getProperty("config.file");
-		System.out.println(filePath);
 		Configuration config = new Configuration();
 		config.load(filePath);
 		

File: cat-home/src/main/java/com/dianping/cat/report/chart/impl/CachedMetricReportServiceImpl.java
Patch:
@@ -17,7 +17,7 @@
 import com.dianping.cat.report.chart.CachedMetricReportService;
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.system.graph.SystemReportConvertor;
-import com.dianping.cat.report.page.userMonitor.UserMonitorConvert;
+import com.dianping.cat.report.page.userMonitor.graph.UserMonitorReportConvertor;
 import com.dianping.cat.report.service.ReportService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -104,7 +104,7 @@ public MetricReport queryUserMonitorReport(String product, Map<String, String> p
 			String channel = properties.get("channel");
 			String type = properties.get("type");
 
-			UserMonitorConvert convert = new UserMonitorConvert(type, city, channel);
+			UserMonitorReportConvertor convert = new UserMonitorReportConvertor(type, city, channel);
 
 			convert.visitMetricReport(report);
 			return convert.getReport();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -60,7 +60,7 @@
 import com.dianping.cat.report.page.model.top.LocalTopService;
 import com.dianping.cat.report.page.model.transaction.LocalTransactionService;
 import com.dianping.cat.report.page.system.graph.SystemReportConvertor;
-import com.dianping.cat.report.page.userMonitor.UserMonitorConvert;
+import com.dianping.cat.report.page.userMonitor.graph.UserMonitorReportConvertor;
 import com.dianping.cat.report.view.StringSortHelper;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
@@ -229,7 +229,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				if (Constants.METRIC_USER_MONITOR.equals(metricType)) {
 					String city = payload.getCity();
 					String channel = payload.getChannel();
-					UserMonitorConvert convert = new UserMonitorConvert(type, city, channel);
+					UserMonitorReportConvertor convert = new UserMonitorReportConvertor(type, city, channel);
 					MetricReport metricReport = (MetricReport) response.getModel();
 
 					convert.visitMetricReport(metricReport);

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/graph/UserMonitorReportConvertor.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.userMonitor;
+package com.dianping.cat.report.page.userMonitor.graph;
 
 import org.hsqldb.lib.StringUtil;
 
@@ -11,7 +11,7 @@
 import com.dianping.cat.consumer.metric.model.transform.BaseVisitor;
 import com.site.lookup.util.StringUtils;
 
-public class UserMonitorConvert extends BaseVisitor {
+public class UserMonitorReportConvertor extends BaseVisitor {
 
 	private MetricReport m_report;
 
@@ -21,7 +21,7 @@ public class UserMonitorConvert extends BaseVisitor {
 
 	private String m_channel;
 
-	public UserMonitorConvert(String type, String city, String channel) {
+	public UserMonitorReportConvertor(String type, String city, String channel) {
 		m_type = type;
 		m_city = city;
 		m_channel = channel;

File: cat-home/src/test/java/com/dianping/cat/report/task/alert/AlertReportBuilderTest.java
Patch:
@@ -12,7 +12,7 @@
 public class AlertReportBuilderTest  extends ComponentTestCase {
 	
 	@Test
-	public void testMerge() throws Exception {
+	public void test() throws Exception {
 		String oldXml = Files.forIO().readFrom(getClass().getResourceAsStream("old.xml"), "utf-8");
 		String newXml = Files.forIO().readFrom(getClass().getResourceAsStream("new.xml"), "utf-8");
 		AlertReport reportOld = DefaultSaxParser.parse(oldXml);
@@ -24,7 +24,7 @@ public void testMerge() throws Exception {
 		reportOld.accept(merger);
 		reportNew.accept(merger);
 		
-		Assert.assertEquals("Check the merge result!", expected.replace("\r", ""), merger.getAlertReport().toString()
+		Assert.assertEquals("Check the build result!", expected.replace("\r", ""), merger.getAlertReport().toString()
 		      .replace("\r", ""));
 		Assert.assertEquals("Source report is changed!", newXml.replace("\r", ""), reportNew.toString().replace("\r", ""));
 

File: cat-home/src/test/java/com/dianping/cat/report/task/alert/TopReportVisitorTest.java
Patch:
@@ -19,7 +19,7 @@
 public class TopReportVisitorTest extends ComponentTestCase {
 
 	@Test
-	public void testMerge() throws Exception {
+	public void test() throws Exception {
 
 		String topReportXml = Files.forIO().readFrom(getClass().getResourceAsStream("topReport.xml"), "utf-8");
 		TopReport topReport = com.dianping.cat.consumer.top.model.transform.DefaultSaxParser.parse(topReportXml);
@@ -36,7 +36,7 @@ public void testMerge() throws Exception {
 		alertReport.setEndTime(topReport.getEndTime());
 		visitor.visitTopReport(topReport);
 
-		Assert.assertEquals("Check the merge result!", expectedAlertReportXml.replace("\r", ""), alertReport.toString()
+		Assert.assertEquals("Check the report result!", expectedAlertReportXml.replace("\r", ""), alertReport.toString()
 		      .replace("\r", ""));
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DefaultDataChecker.java
Patch:
@@ -9,7 +9,7 @@
 
 import com.dianping.cat.home.rule.entity.Condition;
 import com.dianping.cat.home.rule.entity.Config;
-import com.dianping.cat.home.rule.entity.Subcondition;
+import com.dianping.cat.home.rule.entity.SubCondition;
 
 public class DefaultDataChecker implements DataChecker {
 
@@ -102,9 +102,9 @@ private Pair<Boolean, String> checkDataByConfig(double[] value, double[] baselin
 	}
 
 	private boolean checkDataByMinute(Condition condition, double value, double baseline) {
-		for (Subcondition subCondition : condition.getSubconditions()) {
+		for (SubCondition subCondition : condition.getSubConditions()) {
 			String ruleType = subCondition.getType();
-			double ruleValue = Double.parseDouble(subCondition.getText());
+			double ruleValue = subCondition.getText();
 			RuleType rule = RuleType.getByTypeId(ruleType);
 
 			if (rule != null) {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DefaultDataChecker.java
Patch:
@@ -9,7 +9,7 @@
 
 import com.dianping.cat.home.rule.entity.Condition;
 import com.dianping.cat.home.rule.entity.Config;
-import com.dianping.cat.home.rule.entity.Subcondition;
+import com.dianping.cat.home.rule.entity.SubCondition;
 
 public class DefaultDataChecker implements DataChecker {
 
@@ -102,9 +102,9 @@ private Pair<Boolean, String> checkDataByConfig(double[] value, double[] baselin
 	}
 
 	private boolean checkDataByMinute(Condition condition, double value, double baseline) {
-		for (Subcondition subCondition : condition.getSubconditions()) {
+		for (SubCondition subCondition : condition.getSubConditions()) {
 			String ruleType = subCondition.getType();
-			double ruleValue = Double.parseDouble(subCondition.getText());
+			double ruleValue = subCondition.getText();
 			RuleType rule = RuleType.getByTypeId(ruleType);
 
 			if (rule != null) {

File: cat-core/src/main/java/com/dianping/cat/ServerConfigManager.java
Patch:
@@ -293,7 +293,7 @@ public boolean isAlertMachine() {
 		if (m_config != null) {
 			String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 
-			//TODO
+			// TODO
 			if ("10.1.6.128".equals(ip)) {
 				return true;
 			} else {

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/BaseAlert.java
Patch:
@@ -19,8 +19,8 @@
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.entity.Segment;
 import com.dianping.cat.helper.TimeUtil;
-import com.dianping.cat.home.monitorrules.entity.Condition;
-import com.dianping.cat.home.monitorrules.entity.Config;
+import com.dianping.cat.home.rule.entity.Condition;
+import com.dianping.cat.home.rule.entity.Config;
 import com.dianping.cat.report.baseline.BaselineService;
 import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DataChecker.java
Patch:
@@ -4,7 +4,7 @@
 
 import org.unidal.tuple.Pair;
 
-import com.dianping.cat.home.monitorrules.entity.Config;
+import com.dianping.cat.home.rule.entity.Config;
 
 public interface DataChecker {
 	public Pair<Boolean, String> checkData(double[] value, double[] baseline, List<Config> configs);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/DefaultDataChecker.java
Patch:
@@ -7,9 +7,9 @@
 
 import org.unidal.tuple.Pair;
 
-import com.dianping.cat.home.monitorrules.entity.Condition;
-import com.dianping.cat.home.monitorrules.entity.Config;
-import com.dianping.cat.home.monitorrules.entity.Subcondition;
+import com.dianping.cat.home.rule.entity.Condition;
+import com.dianping.cat.home.rule.entity.Config;
+import com.dianping.cat.home.rule.entity.Subcondition;
 
 public class DefaultDataChecker implements DataChecker {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/business/BusinessAlertConfig.java
Patch:
@@ -5,7 +5,7 @@
 
 public class BusinessAlertConfig extends BaseAlertConfig {
 
-	private String m_id = "metric";
+	private String m_id = "business";
 
 	public String buildMailTitle(ProductLine productLine, String configTitle) {
 		StringBuilder sb = new StringBuilder();

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -349,9 +349,10 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			break;
 		case ALERT_DEFAULT_RECEIVERS:
 			String alertDefaultReceivers = payload.getContent();
+			String allOnOrOff = payload.getAllOnOrOff();
 			
 			if (!StringUtils.isEmpty(alertDefaultReceivers)) {
-				model.setOpState(m_alertConfigManager.insert(alertDefaultReceivers));
+				model.setOpState(m_alertConfigManager.insert(alertDefaultReceivers, allOnOrOff));
 			} else {
 				model.setOpState(true);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/config/BusinessRuleConfigManager.java
Patch:
@@ -13,7 +13,7 @@
 
 public class BusinessRuleConfigManager extends BaseRuleConfigManager  implements Initializable {
 
-	private static final String CONFIG_NAME = "domainRulesConfig";
+	private static final String CONFIG_NAME = "businessRulesConfig";
 
 	@Override
    protected String getConfigName() {
@@ -31,7 +31,7 @@ public void initialize() throws InitializationException {
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
-				      this.getClass().getResourceAsStream("/config/default-domain-metric-rule-config.xml"), "utf-8");
+				      this.getClass().getResourceAsStream("/config/default-business-metric-rule-config.xml"), "utf-8");
 				Config config = m_configDao.createLocal();
 
 				config.setName(CONFIG_NAME);

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/exception/ExceptionAlertConfig.java
Patch:
@@ -13,7 +13,7 @@ public class ExceptionAlertConfig extends BaseAlertConfig {
 
 	public List<String> buildMailReceivers(Project project) {
 		List<String> mailReceivers = new ArrayList<String>();
-		Receiver receiver = m_manager.getReceiverById(getID());
+		Receiver receiver = m_manager.getReceiverById(getId());
 
 		if (receiver != null && !receiver.isEnable()) {
 			return mailReceivers;
@@ -29,7 +29,7 @@ private List<String> buildProjectMailReceivers(Project project) {
 		return split(project.getEmail());
 	}
 
-	public String getID() {
+	public String getId() {
 		return m_id;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -57,6 +57,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	METRIC_CONFIG_DELETE("metricConfigDelete"),
 	
+	DOMAIN_METRIC_RULE_CONFIG_UPDATE("domainMetricRuleConfigUpdate"),
+
 	METRIC_RULE_CONFIG_UPDATE("metricRuleConfigUpdate"),
 	
 	ALERT_DEFAULT_RECEIVERS("alertDefaultReceivers"),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -31,6 +31,8 @@ public enum JspFile {
 
 	METRIC_CONFIG_LIST("/jsp/system/metric/metricConfigs.jsp"),
 	
+	DOMAIN_METRIC_RULE_CONFIG_UPDATE("/jsp/system/domainMetricRule/domainMetricRuleConfig.jsp"),
+	
 	METRIC_RULE_CONFIG_UPDATE("/jsp/system/metricRule/metricRuleConfig.jsp"),
 
 	ALERT_DEFAULT_RECEIVERS("/jsp/system/defaultReceiver/alertDefaultReceivers.jsp"),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -70,6 +70,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.METRIC_CONFIG_LIST.getPath();
 		case METRIC_CONFIG_DELETE:
 			return JspFile.METRIC_CONFIG_LIST.getPath();
+		case DOMAIN_METRIC_RULE_CONFIG_UPDATE:
+			return JspFile.DOMAIN_METRIC_RULE_CONFIG_UPDATE.getPath();
 		case METRIC_RULE_CONFIG_UPDATE:
 			return JspFile.METRIC_RULE_CONFIG_UPDATE.getPath();
 		case ALERT_DEFAULT_RECEIVERS:

File: cat-home/src/main/java/com/dianping/cat/report/task/alert/metric/MetricAlert.java
Patch:
@@ -189,7 +189,6 @@ protected void processMetricItemConfig(MetricItemConfig config, int minute, Prod
 
 		if (alert != null && alert.getKey()) {
 			m_alertInfo.addAlertInfo(config, new Date().getTime());
-
 			sendAlertInfo(productLine, config, alert.getValue());
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -51,7 +51,7 @@
 import com.dianping.cat.system.config.DomainMetricRuleConfigManager;
 import com.dianping.cat.system.config.ExceptionConfigManager;
 import com.dianping.cat.system.config.MetricGroupConfigManager;
-import com.dianping.cat.system.config.MetricRuleConfigManager;
+import com.dianping.cat.system.config.NetworkMetricRuleConfigManager;
 
 public class Handler implements PageHandler<Context> {
 	@Inject
@@ -91,7 +91,7 @@ public class Handler implements PageHandler<Context> {
 	private DomainMetricRuleConfigManager m_domainMetricRuleConfigManager;
 
 	@Inject
-	private MetricRuleConfigManager m_metricRuleConfigManager;
+	private NetworkMetricRuleConfigManager m_metricRuleConfigManager;
 
 	@Inject
 	private AlertConfigManager m_alertConfigManager;

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.report.task.DefaultTaskConsumer;
 import com.dianping.cat.report.task.exceptionAlert.ExceptionAlert;
 import com.dianping.cat.report.task.metric.MetricAlert;
-import com.dianping.cat.report.task.metric.SwitchAlert;
+import com.dianping.cat.report.task.metric.NetworkAlert;
 import com.dianping.cat.report.task.product.ProjectUpdateTask;
 import com.dianping.cat.report.view.DomainNavManager;
 import com.dianping.cat.system.config.ConfigReloadTask;
@@ -50,7 +50,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 
 		if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
 			MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
-			SwitchAlert swtichAlert = ctx.lookup(SwitchAlert.class);
+			NetworkAlert swtichAlert = ctx.lookup(NetworkAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
 			ProjectUpdateTask productUpdateTask = ctx.lookup(ProjectUpdateTask.class);
 

File: cat-home/src/main/java/com/dianping/cat/report/task/exceptionAlert/ExceptionAlert.java
Patch:
@@ -30,7 +30,6 @@
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.top.TopMetric;
 import com.dianping.cat.report.page.top.TopMetric.Item;
-import com.dianping.cat.report.task.metric.MetricAlertConfig;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
 import com.dianping.cat.system.config.ExceptionConfigManager;
@@ -42,7 +41,7 @@ public class ExceptionAlert implements Task, LogEnabled {
 	private ProjectDao m_projectDao;
 
 	@Inject
-	private MetricAlertConfig m_alertConfig;
+	private ExceptionAlertConfig m_alertConfig;
 
 	@Inject
 	private MailSMS m_mailSms;

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -48,7 +48,7 @@ private Pair<Boolean, String> checkDataByJudge(MetricItemConfig config, double[]
 
 		try {
 			List<Config> configs = convert(config);
-			Pair<Boolean, String> ruleJudgeResult = m_alertConfig.checkData(value, baseline, type, configs);
+			Pair<Boolean, String> ruleJudgeResult = DataChecker.checkData(value, baseline, type, configs);
 
 			if (originResult.getKey() != ruleJudgeResult.getKey()) {
 				String metricKey = m_metricConfigManager.buildMetricKey(config.getDomain(), config.getType(),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -58,6 +58,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	METRIC_CONFIG_DELETE("metricConfigDelete"),
 	
 	METRIC_RULE_CONFIG_UPDATE("metricRuleConfigUpdate"),
+	
+	ALERT_DEFAULT_RECEIVERS("alertDefaultReceivers"),
 
 	EXCEPTION("exception"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -33,6 +33,8 @@ public enum JspFile {
 	
 	METRIC_RULE_CONFIG_UPDATE("/jsp/system/metricRule/metricRuleConfig.jsp"),
 
+	ALERT_DEFAULT_RECEIVERS("/jsp/system/defaultReceiver/alertDefaultReceivers.jsp"),
+	
 	EXCEPTION_THRESHOLD("/jsp/system/exception/exceptionThreshold.jsp"),
 
 	EXCEPTION("/jsp/system/exception/exception.jsp"),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -72,6 +72,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.METRIC_CONFIG_LIST.getPath();
 		case METRIC_RULE_CONFIG_UPDATE:
 			return JspFile.METRIC_RULE_CONFIG_UPDATE.getPath();
+		case ALERT_DEFAULT_RECEIVERS:
+			return JspFile.ALERT_DEFAULT_RECEIVERS.getPath();
 			// Excepton Config
 		case EXCEPTION:
 		case EXCEPTION_THRESHOLD_UPDATE_SUBMIT:

File: cat-home/src/main/java/com/dianping/cat/report/task/exceptionAlert/ExceptionAlert.java
Patch:
@@ -30,7 +30,6 @@
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.top.TopMetric;
 import com.dianping.cat.report.page.top.TopMetric.Item;
-import com.dianping.cat.report.task.metric.MetricAlertConfig;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
 import com.dianping.cat.system.config.ExceptionConfigManager;
@@ -42,7 +41,7 @@ public class ExceptionAlert implements Task, LogEnabled {
 	private ProjectDao m_projectDao;
 
 	@Inject
-	private MetricAlertConfig m_alertConfig;
+	private ExceptionAlertConfig m_alertConfig;
 
 	@Inject
 	private MailSMS m_mailSms;

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -48,7 +48,7 @@ private Pair<Boolean, String> checkDataByJudge(MetricItemConfig config, double[]
 
 		try {
 			List<Config> configs = convert(config);
-			Pair<Boolean, String> ruleJudgeResult = m_alertConfig.checkData(value, baseline, type, configs);
+			Pair<Boolean, String> ruleJudgeResult = DataChecker.checkData(value, baseline, type, configs);
 
 			if (originResult.getKey() != ruleJudgeResult.getKey()) {
 				String metricKey = m_metricConfigManager.buildMetricKey(config.getDomain(), config.getType(),

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/NetworkAlert.java
Patch:
@@ -61,7 +61,7 @@ private Pair<Boolean, String> computeAlertInfo(int minute, String product, Metri
 				value = queryRealData(start, end, metricKey, report, type);
 				baseline = queryBaseLine(start, end, metricKey, new Date(ModelPeriod.CURRENT.getStartTime()), type);
 
-				return m_alertConfig.checkData(value, baseline, type, configs);
+				return DataChecker.checkData(value, baseline, type, configs);
 			}
 		} else if (minute < 0) {
 			MetricReport lastReport = fetchMetricReport(product, ModelPeriod.LAST);
@@ -72,7 +72,7 @@ private Pair<Boolean, String> computeAlertInfo(int minute, String product, Metri
 
 				value = queryRealData(start, end, metricKey, lastReport, type);
 				baseline = queryBaseLine(start, end, metricKey, new Date(ModelPeriod.LAST.getStartTime()), type);
-				return m_alertConfig.checkData(value, baseline, type, configs);
+				return DataChecker.checkData(value, baseline, type, configs);
 			}
 		} else {
 			MetricReport currentReport = fetchMetricReport(product, ModelPeriod.CURRENT);
@@ -92,7 +92,7 @@ private Pair<Boolean, String> computeAlertInfo(int minute, String product, Metri
 
 				value = mergerArray(lastValue, currentValue);
 				baseline = mergerArray(lastBaseline, currentBaseline);
-				return m_alertConfig.checkData(value, baseline, type, configs);
+				return DataChecker.checkData(value, baseline, type, configs);
 			}
 		}
 		return null;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -58,6 +58,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	METRIC_CONFIG_DELETE("metricConfigDelete"),
 	
 	METRIC_RULE_CONFIG_UPDATE("metricRuleConfigUpdate"),
+	
+	ALERT_DEFAULT_RECEIVERS("alertDefaultReceivers"),
 
 	EXCEPTION("exception"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -33,6 +33,8 @@ public enum JspFile {
 	
 	METRIC_RULE_CONFIG_UPDATE("/jsp/system/metricRule/metricRuleConfig.jsp"),
 
+	ALERT_DEFAULT_RECEIVERS("/jsp/system/defaultReceiver/alertDefaultReceivers.jsp"),
+	
 	EXCEPTION_THRESHOLD("/jsp/system/exception/exceptionThreshold.jsp"),
 
 	EXCEPTION("/jsp/system/exception/exception.jsp"),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -72,6 +72,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.METRIC_CONFIG_LIST.getPath();
 		case METRIC_RULE_CONFIG_UPDATE:
 			return JspFile.METRIC_RULE_CONFIG_UPDATE.getPath();
+		case ALERT_DEFAULT_RECEIVERS:
+			return JspFile.ALERT_DEFAULT_RECEIVERS.getPath();
 			// Excepton Config
 		case EXCEPTION:
 		case EXCEPTION_THRESHOLD_UPDATE_SUBMIT:

File: cat-broker/src/main/java/com/dianping/cat/broker/api/ApiModule.java
Patch:
@@ -9,7 +9,9 @@
 
 com.dianping.cat.broker.api.page.single.Handler.class,
 
-com.dianping.cat.broker.api.page.batch.Handler.class
+com.dianping.cat.broker.api.page.batch.Handler.class,
+
+com.dianping.cat.broker.api.page.js.Handler.class
 })
 public class ApiModule extends AbstractModule {
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/ApiPage.java
Patch:
@@ -7,7 +7,9 @@ public enum ApiPage implements Page {
 
    SINGLE("single", "single", "single", "single api", true),
 
-   BATCH("batch", "batch", "batch", "batch api", true);
+   BATCH("batch", "batch", "batch", "batch api", true),
+
+   JS("js", "js", "Js", "Js", true);
 
    private String m_name;
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/js/JspFile.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.page.jsError;
+package com.dianping.cat.broker.api.page.js;
 
 public enum JspFile {
-	VIEW("/jsp/report/jsError.jsp"),
+	VIEW("/jsp/api/js.jsp"),
 
 	;
 

File: cat-broker/src/test/java/com/dianping/cat/broker/js/JsTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.jsError;
+package com.dianping.cat.broker.js;
 
 import java.net.HttpURLConnection;
 import java.net.URL;

File: cat-broker/src/test/java/com/dianping/cat/broker/js/ParseTest.java
Patch:
@@ -1,9 +1,11 @@
-package com.dianping.cat.report.page.jsError;
+package com.dianping.cat.broker.js;
 
 import junit.framework.Assert;
 
 import org.junit.Test;
 
+import com.dianping.cat.broker.api.page.js.Handler;
+
 public class ParseTest {
 
 	@Test

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemAnalyzer.java
Patch:
@@ -51,9 +51,6 @@ public ProblemReport getReport(String domain) {
 
 			report.getDomainNames().addAll(m_reportManager.getDomains(getStartTime()));
 
-			if (Constants.FRONT_END.equals(domain)) {
-				report = m_problemDelegate.rebuildFrontEndReport(report);
-			}
 			return report;
 		} else {
 			Map<String, ProblemReport> reports = m_reportManager.getHourlyReports(getStartTime());

File: cat-core/src/main/java/com/dianping/cat/config/UrlPatternConfigManager.java
Patch:
@@ -55,7 +55,6 @@ public void initialize() {
 			m_configId = config.getId();
 			m_modifyTime = config.getModifyDate().getTime();
 
-			Threads.forGroup("Cat").start(new ConfigReloadTask());
 		} catch (DalNotFoundException e) {
 			try {
 				String content = Files.forIO().readFrom(
@@ -77,6 +76,7 @@ public void initialize() {
 			m_UrlPattern = new UrlPattern();
 		}
 		m_handler.register(queryUrlPatternRules());
+		Threads.forGroup("Cat").start(new ConfigReloadTask());
 	}
 
 	public boolean insertPatternItem(PatternItem rule) {

File: cat-core/src/main/java/com/dianping/cat/config/aggregation/AggregationHandler.java
Patch:
@@ -1,8 +1,8 @@
-package com.dianping.cat.consumer.problem.aggregation;
+package com.dianping.cat.config.aggregation;
 
 import java.util.List;
 
-import com.dianping.cat.consumer.aggreation.model.entity.AggregationRule;
+import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 
 public interface AggregationHandler {
 

File: cat-core/src/main/java/com/dianping/cat/config/aggregation/DefaultAggregationHandler.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.consumer.problem.aggregation;
+package com.dianping.cat.config.aggregation;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -9,7 +9,7 @@
 import com.dianping.cat.config.AggregationMessageFormat;
 import com.dianping.cat.config.CompositeFormat;
 import com.dianping.cat.config.TrieTreeNode;
-import com.dianping.cat.consumer.aggreation.model.entity.AggregationRule;
+import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 
 public class DefaultAggregationHandler implements AggregationHandler {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -35,8 +35,6 @@
 
 com.dianping.cat.report.page.metric.Handler.class,
 
-com.dianping.cat.report.page.jsError.Handler.class,
-
 com.dianping.cat.report.page.dependency.Handler.class,
 
 com.dianping.cat.report.page.externalError.Handler.class,

File: cat-home/src/main/java/com/dianping/cat/system/config/ConfigReloadTask.java
Patch:
@@ -14,7 +14,7 @@ public class ConfigReloadTask implements Task {
 
 	@Inject
 	private MetricConfigManager m_metricConfigManager;
-	
+
 	@Override
 	public String getName() {
 		return "Config-Reload";

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -27,11 +27,11 @@
 import com.dianping.cat.Constants;
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
 import com.dianping.cat.config.UrlPatternConfigManager;
-import com.dianping.cat.consumer.aggreation.model.entity.AggregationRule;
+import com.dianping.cat.config.aggregation.AggregationConfigManager;
+import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.consumer.metric.ProductLineConfigManager;
-import com.dianping.cat.consumer.problem.aggregation.AggregationConfigManager;
 import com.dianping.cat.core.dal.Project;
 import com.dianping.cat.core.dal.ProjectDao;
 import com.dianping.cat.core.dal.ProjectEntity;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java
Patch:
@@ -10,8 +10,8 @@
 import org.unidal.web.mvc.ViewModel;
 
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
+import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.configuration.url.pattern.entity.PatternItem;
-import com.dianping.cat.consumer.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.consumer.company.model.entity.Domain;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.core.dal.Project;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Payload.java
Patch:
@@ -7,8 +7,8 @@
 
 import com.dianping.cat.Constants;
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
+import com.dianping.cat.configuration.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.configuration.url.pattern.entity.PatternItem;
-import com.dianping.cat.consumer.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.core.dal.Project;
 import com.dianping.cat.home.dependency.config.entity.DomainConfig;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -51,19 +51,19 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 				for (String line : lines) {
 					String[] tabs = line.split("\t");
-
+					//timstampTABtargetUrlTABdurationTABhttpCodeTABerrorCodeENTER
 					if (tabs.length == 5) {
 						MonitorEntity entity = new MonitorEntity();
-						String errorCode = tabs[3];
+						String errorCode = tabs[4];
 
 						if (StringUtils.isEmpty(errorCode)) {
 							errorCode = "not-set";
 						}
 						entity.setTimestamp(Long.parseLong(tabs[0]));
 						entity.setTargetUrl(tabs[1]);
 						entity.setDuration(Double.parseDouble(tabs[2]));
+						entity.setHttpStatus(tabs[3]);
 						entity.setErrorCode(errorCode);
-						entity.setHttpStatus(tabs[4]);
 						entity.setIp(userIp);
 
 						if (payload.getVersion().equals("1")) {

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/graph/DefaultUserMonitGraphCreator.java
Patch:
@@ -96,9 +96,6 @@ private Map<String, LineChart> buildInfoChartData(final Map<String, double[]> da
 			double[] value = entry.getValue();
 			LineChart lineChart = new LineChart();
 
-			if (SUCESS_PERCENT.equals(key)) {
-				lineChart.setMinYlable(90);
-			}
 			lineChart.setId(key);
 			lineChart.setTitle(key);
 			lineChart.setStart(startDate);

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/Handler.java
Patch:
@@ -68,7 +68,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 			m_logger.info("unknown http request, x-forwarded-for:" + request.getHeader("x-forwarded-for"));
 		}
-
+		
 		response.getWriter().write("OK");
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/PieChart.java
Patch:
@@ -11,16 +11,16 @@ public class PieChart {
 
 	private List<Item> m_items = new ArrayList<Item>();
 
-	private transient int m_size = 10;
+	private transient int m_size = 30;
 
 	public PieChart setTitle(String title) {
 		m_title = title;
 		return this;
 	}
 
 	public String getTitle() {
-   	return m_title;
-   }
+		return m_title;
+	}
 
 	public void addItems(List<Item> items) {
 		Collections.sort(items, new ItemCompartor());

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -265,6 +265,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			List<String> ips = m_configManager.queryIpByDomainAndGroup(domain, group);
 			
 			report = showSummarizeReport(model, payload);
+			report = filterReportByGroup(report, domain, group);
 			m_historyGraphs.buildGroupTrendGraph(model, payload, ips);
 			buildDistributionChart(model,payload, report);
 			break;

File: cat-home/src/main/java/com/dianping/cat/report/page/PieChart.java
Patch:
@@ -11,16 +11,16 @@ public class PieChart {
 
 	private List<Item> m_items = new ArrayList<Item>();
 
-	private transient int m_size = 10;
+	private transient int m_size = 30;
 
 	public PieChart setTitle(String title) {
 		m_title = title;
 		return this;
 	}
 
 	public String getTitle() {
-   	return m_title;
-   }
+		return m_title;
+	}
 
 	public void addItems(List<Item> items) {
 		Collections.sort(items, new ItemCompartor());

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -33,9 +33,9 @@ public enum JspFile {
 	
 	METRIC_RULE_CONFIG_UPDATE("/jsp/system/metricRule/metricRuleConfig.jsp"),
 
-	EXCEPTION_THRESHOLD("/jsp/system/exception/exceptionThreshold.jsp"),
+	EXCEPTION_THRESHOLD("/jsp/system/exceptionThreshold/exceptionThreshold.jsp"),
 
-	EXCEPTION_THRESHOLD_CONFIG("/jsp/system/exception/exceptionThresholdConfig.jsp"),
+	EXCEPTION_THRESHOLD_CONFIG("/jsp/system/exceptionThreshold/exceptionThresholdConfig.jsp"),
 
 	BUG_CONFIG_UPDATE("/jsp/system/bug/bugConfig.jsp"),
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -52,13 +52,13 @@ protected void execute(ModuleContext ctx) throws Exception {
 			MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
 			SwitchAlert swtichAlert = ctx.lookup(SwitchAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
-			ProjectUpdateTask productUpdateTask = ctx.lookup(ProjectUpdateTask.class);
 
 			Threads.forGroup("Cat").start(swtichAlert);
 			Threads.forGroup("Cat").start(metricAlert);
 			Threads.forGroup("Cat").start(exceptionAlert);
-			Threads.forGroup("Cat").start(productUpdateTask);
 		}
+		ProjectUpdateTask productUpdateTask = ctx.lookup(ProjectUpdateTask.class);
+		Threads.forGroup("Cat").start(productUpdateTask);
 
 		executeAlarmModule(ctx);
 	}

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -15,7 +15,6 @@
 import com.dianping.cat.core.dal.TaskDao;
 import com.dianping.cat.home.dal.report.BaselineDao;
 import com.dianping.cat.home.dal.report.TopologyGraphDao;
-import com.dianping.cat.home.dependency.exceptionExclude.entity.ExceptionExcludeConfig;
 import com.dianping.cat.report.baseline.BaselineConfigManager;
 import com.dianping.cat.report.baseline.BaselineCreator;
 import com.dianping.cat.report.baseline.BaselineService;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -71,8 +71,6 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	BUG_CONFIG_UPDATE("bugConfigUpdate"),
 
-	UTILIZATION_CONFIG_UPDATE("utilizationConfigUpdate"),
-	
 	DOMAIN_GROUP_CONFIG_UPDATE("domainGroupConfigUpdate"),
 	
 	METRIC_GROUP_CONFIG_UPDATE("metricGroupConfigUpdate"),

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -85,8 +85,6 @@ protected String getJspFilePath(Context ctx, Model model) {
 			// Bug
 		case BUG_CONFIG_UPDATE:
 			return JspFile.BUG_CONFIG_UPDATE.getPath();
-		case UTILIZATION_CONFIG_UPDATE:
-			return JspFile.UTILIZATION_CONFIG_UPDATE.getPath();
 		case DOMAIN_GROUP_CONFIG_UPDATE:
 			return JspFile.DOMAIN_GROUP_CONFIG_UPDATE.getPath();
 		case METRIC_GROUP_CONFIG_UPDATE:

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorManager.java
Patch:
@@ -120,7 +120,7 @@ private void processOneEntity(MonitorEntity entity) {
 					if (duration > 0) {
 						logMetric(timestamp, duration, group, city + ":" + channel + ":" + Monitor.AVG);
 					}
-					if (!"200".equals(httpCode) || !StringUtils.isEmpty(errorCode)) {
+					if (!"200".equals(httpCode) || !"200".equals(errorCode)) {
 						logMetric(timestamp, duration, group, city + ":" + channel + ":" + Monitor.ERROR);
 					} else {
 						logMetric(timestamp, duration, group, city + ":" + channel + ":" + Monitor.HIT);

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -1,7 +1,6 @@
 package com.dianping.cat.report.page.transaction;
 
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -51,7 +50,7 @@ public class Model extends AbstractReportModel<Action, Context> {
 
 	private String m_pieChart;
 	
-	private Map<String, String> m_ipToHostname = new HashMap<String, String>();
+	private Map<String, String> m_ipToHostname;
 
 	public Model(Context ctx) {
 		super(ctx);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/ProductLineConfigManager.java
Patch:
@@ -135,9 +135,9 @@ public void buildDefaultDashboard(ProductLine productLine, String domain) {
 
 		if (Constants.BROKER_SERVICE.equals(domain)) {
 			userMonitor = true;
-		} else if (line.startsWith(NETWORK_SWITCH_PREFIX) || line.startsWith(NETWORK_F5_PREFIX)) {
+		} else if (line.toLowerCase().startsWith(NETWORK_SWITCH_PREFIX) || line.toLowerCase().startsWith(NETWORK_F5_PREFIX)) {
 			networkMonitor = true;
-		} else if (line.startsWith(SYSTEM_MONITOR_PREFIX)) {
+		} else if (line.toLowerCase().startsWith(SYSTEM_MONITOR_PREFIX)) {
 			systemMonitor = true;
 		}
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/RequestUtils.java
Patch:
@@ -37,7 +37,7 @@ public String filterXForwardedForIP(String ip) {
 	}
 
 	public String getRemoteIp(HttpServletRequest request) {
-		return filterXForwardedForIP(request.getHeader("x-forwarded-for"));
+		return filterXForwardedForIP(request.getRemoteAddr() + "," + request.getHeader("x-forwarded-for"));
 	}
 
 }
\ No newline at end of file

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -53,8 +53,8 @@ public List<Component> defineComponents() {
 	private Collection<Component> defineMetricComponents() {
 		final List<Component> all = new ArrayList<Component>();
 
-		all.add(C(MetricConfigManager.class).req(ConfigDao.class));
 		all.add(C(ProductLineConfigManager.class).req(ConfigDao.class));
+		all.add(C(MetricConfigManager.class).req(ConfigDao.class, ProductLineConfigManager.class));
 		all.add(C(MessageAnalyzer.class, MetricAnalyzer.ID, MetricAnalyzer.class).is(PER_LOOKUP) //
 		      .req(BucketManager.class, BusinessReportDao.class, MetricConfigManager.class)//
 		      .req(ProductLineConfigManager.class, TaskManager.class));

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -57,7 +57,8 @@ private Period getHeartBeatInfo(Heartbeat heartbeat, long timestamp) {
 		try {
 			info = com.dianping.cat.status.model.transform.DefaultSaxParser.parse(xml);
 		} catch (Exception e) {
-			Cat.getProducer().logEvent("HearbeatAnalyzer", "ErrorXml", "Error", xml);
+			m_logger.error(xml);
+			m_logger.error(e.getMessage(), e);
 			return null;
 		}
 

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -22,9 +22,11 @@ public class Constants {
 	public static final String REPORT_UTILIZATION = "utilization";
 
 	public static final String REPORT_HEAVY = "heavy";
-	
+
 	public static final String REPORT_NET_TOPOLOGY = "NetTopology";
 
 	public static final String REPORT_ALERT = "alert";
 
+	public static final String BROKER_SERVICE = "broker-service";
+
 }

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/UploaderAndCleaner.java
Patch:
@@ -281,7 +281,7 @@ public Direction matches(File base, String path) {
 				}
 
 				try {
-					Thread.sleep(500);
+					Thread.sleep(100);
 				} catch (InterruptedException e) {
 					break;
 				}

File: cat-home/src/main/java/com/dianping/cat/build/ServiceComponentConfigurator.java
Patch:
@@ -168,7 +168,7 @@ public List<Component> defineComponents() {
 		      .req(MessageBucketManager.class, HdfsMessageBucketManager.ID, "m_hdfsBucketManager") //
 		      .req(MessageCodec.class, "html"));
 
-		all.add(C(CachedReportTask.class).req(ReportService.class));
+		all.add(C(CachedReportTask.class).req(ReportService.class, ServerConfigManager.class));
 		return all;
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -24,7 +24,7 @@ public class GraphCreator extends BaseGraphCreator{
 	public Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
 			final Map<String, double[]> dataWithOutFutures) {
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
-		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
+		List<MetricItemConfig> alertItems = m_alertInfo.queryLastestAlarmInfo(5);
 		int step = m_dataExtractor.getStep();
 		
 		for (Entry<String, double[]> entry : dataWithOutFutures.entrySet()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -82,7 +82,7 @@ private Segment buildAllSegmentsInfo(DependencyReport report) {
 	}
 
 	private void buildDependencyDashboard(Model model, Payload payload, Date reportTime) {
-		ProductLinesDashboard dashboardGraph = m_graphManager.buildDashboardGraph(reportTime.getTime());
+		ProductLinesDashboard dashboardGraph = m_graphManager.buildDependencyDashboard(reportTime.getTime());
 		Map<String, List<TopologyNode>> dashboardNodes = dashboardGraph.getNodes();
 
 		for (Entry<String, List<TopologyNode>> entry : dashboardNodes.entrySet()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphBuilder.java
Patch:
@@ -123,7 +123,7 @@ private TopologyNode mergeNode(TopologyNode old, TopologyNode node) {
 	@Override
 	public void visitDependency(Dependency dependency) {
 		String type = dependency.getType();
-		// pigeonServer is no use
+		
 		if (!m_pigeonServices.contains(type)) {
 			TopologyEdge edge = m_itemBuilder.buildEdge(m_domain, dependency);
 			TopologyGraph graph = findOrCreateGraph();

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -20,7 +20,7 @@
 import com.dianping.cat.home.metricAggregation.entity.MetricAggregationGroup;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.chart.AggregationGraphCreator;
-import com.dianping.cat.report.chart.DefaultAggGraphCreator;
+import com.dianping.cat.report.chart.NetworkGraphCreator;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.network.nettopology.NetGraphManager;
@@ -44,7 +44,7 @@ public class Handler implements PageHandler<Context> {
 	private AggregationGraphCreator m_aggregationGraphCreator;
 
 	@Inject
-	private DefaultAggGraphCreator m_defaultAggGraphCreator;
+	private NetworkGraphCreator m_defaultAggGraphCreator;
 
 	@Inject
 	private NetGraphManager m_netGraphManager;

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/CityManager.java
Patch:
@@ -38,8 +38,10 @@ public void initialize() throws InitializationException {
 
 					if (list == null) {
 						list = new ArrayList<City>();
-						list.add(new City(province, ""));
 
+						if (province.length() > 0) {
+							list.add(new City(province, ""));
+						}
 						maps.put(province, list);
 					}
 					list.add(new City(province, city));

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/graph/UserMonitorGraphCreator.java
Patch:
@@ -1,6 +1,7 @@
 package com.dianping.cat.report.page.userMonitor.graph;
 
 import java.util.Date;
+import java.util.List;
 import java.util.Map;
 
 import com.alibaba.cobar.parser.util.Pair;
@@ -9,7 +10,7 @@
 
 public interface UserMonitorGraphCreator {
 
-	public Map<String, LineChart> queryBaseInfo(Date start, Date end, String url, Map<String, String> pars);
+	public Pair<Map<String, LineChart>,List<PieChart>> queryBaseInfo(Date start, Date end, String url, Map<String, String> pars);
 
 	public Pair<LineChart, PieChart> queryErrorInfo(Date startDate, Date endDate, String url, Map<String, String> pars);
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -181,9 +181,8 @@ protected void processMetricItemConfig(MetricItemConfig config, int minute, Prod
 		}
 
 		if (alert != null && alert.getKey()) {
-			config.setId(m_metricConfigManager.buildMetricKey(config.getDomain(), config.getType(), config.getMetricKey()));
-
-			m_alertInfo.addMetric(config, new Date().getTime());
+			m_alertInfo.addAlertInfo(config, new Date().getTime());
+			
 			sendAlertInfo(productLine, config, alert.getValue());
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/SwitchAlert.java
Patch:
@@ -123,8 +123,7 @@ protected void processMetricItemConfig(MetricItemConfig config, int minute, Prod
 		}
 
 		if (alert != null && alert.getKey()) {
-			config.setId(m_metricConfigManager.buildMetricKey(config.getDomain(), config.getType(), config.getMetricKey()));
-			m_alertInfo.addMetric(config, new Date().getTime());
+			m_alertInfo.addAlertInfo(config, new Date().getTime());
 			sendAlertInfo(productLine, config, alert.getValue());
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/system/config/ExceptionThresholdConfigManager.java
Patch:
@@ -98,6 +98,7 @@ public ExceptionLimit queryDomainExceptionLimit(String domain, String exceptionN
 
 	public ExceptionLimit queryDomainTotalLimit(String domain) {
 		ExceptionLimit result = queryDomainExceptionLimit(domain, TOTAL_STRING);
+		
 		if (result == null) {
 			result = queryDomainExceptionLimit(DEFAULT_STRING, TOTAL_STRING);
 		}

File: cat-home/src/test/java/com/dianping/cat/demo/TestCode.java
Patch:
@@ -10,7 +10,6 @@
 
 public class TestCode {
 	
-	
 	public void logError(Throwable able){
 		  Transaction t = Cat.newTransaction("Neocortex", "Error");
 		  

File: cat-home/src/main/java/com/dianping/cat/report/task/product/ProductUpdateTask.java
Patch:
@@ -81,7 +81,7 @@ private Map<String, String> parseInfos(String content) throws Exception {
 		}
 
 		JsonArray emails = object.getJSONArray("project_email");
-		StringBuilder email = new StringBuilder();
+		StringBuilder email = new StringBuilder(256);
 		int length = emails.length();
 
 		if (length > 0) {

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricAnalyzer.java
Patch:
@@ -52,7 +52,7 @@ public class MetricAnalyzer extends AbstractMessageAnalyzer<MetricReport> implem
 	// key is project line,such as tuangou
 	private Map<String, MetricReport> m_reports = new HashMap<String, MetricReport>();
 
-	private static final String METRIC = "metric";
+	private static final String METRIC = "Metric";
 
 	@Override
 	public void doCheckpoint(boolean atEnd) {

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -53,8 +53,8 @@ public List<Component> defineComponents() {
 	private Collection<Component> defineMetricComponents() {
 		final List<Component> all = new ArrayList<Component>();
 
-		all.add(C(MetricConfigManager.class).req(ConfigDao.class));
 		all.add(C(ProductLineConfigManager.class).req(ConfigDao.class));
+		all.add(C(MetricConfigManager.class).req(ConfigDao.class, ProductLineConfigManager.class));
 		all.add(C(MessageAnalyzer.class, MetricAnalyzer.ID, MetricAnalyzer.class).is(PER_LOOKUP) //
 		      .req(BucketManager.class, BusinessReportDao.class, MetricConfigManager.class)//
 		      .req(ProductLineConfigManager.class, TaskManager.class));

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/ProductLineConfigManager.java
Patch:
@@ -23,6 +23,7 @@
 import org.xml.sax.SAXException;
 
 import com.dianping.cat.Cat;
+import com.dianping.cat.Constants;
 import com.dianping.cat.consumer.company.model.entity.Company;
 import com.dianping.cat.consumer.company.model.entity.Domain;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
@@ -132,7 +133,7 @@ public void buildDefaultDashboard(ProductLine productLine, String domain) {
 		boolean networkMonitor = false;
 		boolean systemMonitor = false;
 
-		if ("broker-service".equals(domain)) {
+		if (Constants.BROKER_SERVICE.equals(domain)) {
 			userMonitor = true;
 		} else if (line.startsWith(NETWORK_SWITCH_PREFIX) || line.startsWith(NETWORK_F5_PREFIX)) {
 			networkMonitor = true;

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -22,9 +22,11 @@ public class Constants {
 	public static final String REPORT_UTILIZATION = "utilization";
 
 	public static final String REPORT_HEAVY = "heavy";
-	
+
 	public static final String REPORT_NET_TOPOLOGY = "NetTopology";
 
 	public static final String REPORT_ALERT = "alert";
 
+	public static final String BROKER_SERVICE = "broker-service";
+
 }

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -125,6 +125,8 @@ public List<Component> defineComponents() {
 		all.add(C(DataExtractor.class, DataExtractorImpl.class));
 
 		all.add(C(MetricDataFetcher.class, MetricDataFetcherImpl.class));
+		
+		all.add(C(AlertInfo.class).req(MetricConfigManager.class));
 
 		all.add(C(GraphCreator.class).req(CachedMetricReportService.class, DataExtractor.class, MetricDataFetcher.class)
 		      .req(BaselineService.class, MetricConfigManager.class, ProductLineConfigManager.class,

File: cat-home/src/main/java/com/dianping/cat/report/chart/AggregationGraphCreator.java
Patch:
@@ -65,7 +65,7 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 	      Date endDate, final Map<String, double[]> dataWithOutFutures, MetricAggregation metricAggregation) {
 		MetricAggregationGroup metricAggregationGroup = m_metricAggregationConfigManager.getMetricAggregationConfig()
 		      .findMetricAggregationGroup(m_aggregationGroup);
-		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
+		List<MetricItemConfig> alertItems = m_alertInfo.queryLastestAlarmInfo(5);
 		String type = metricAggregationGroup.getType();
 		int step = m_dataExtractor.getStep();
 		String id = metricAggregation.getId();

File: cat-home/src/main/java/com/dianping/cat/report/chart/DefaultAggGraphCreator.java
Patch:
@@ -38,7 +38,7 @@ public Map<String, LineChart> buildChartData(final Map<String, double[]> datas,
 	      final Map<String, double[]> dataWithOutFutures) {
 		Map<String, List<String>> aggregationKeys = buildLineChartKeys(dataWithOutFutures.keySet());
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
-		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
+		List<MetricItemConfig> alertItems = m_alertInfo.queryLastestAlarmInfo(5);
 		int step = m_dataExtractor.getStep();
 
 		for (Entry<String, List<String>> keyMapEntry : aggregationKeys.entrySet()) {

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -24,7 +24,7 @@ public class GraphCreator extends BaseGraphCreator{
 	public Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
 			final Map<String, double[]> dataWithOutFutures) {
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
-		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
+		List<MetricItemConfig> alertItems = m_alertInfo.queryLastestAlarmInfo(5);
 		int step = m_dataExtractor.getStep();
 		
 		for (Entry<String, double[]> entry : dataWithOutFutures.entrySet()) {

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorManager.java
Patch:
@@ -108,7 +108,7 @@ private void processOneEntity(MonitorEntity entity) {
 
 			if (ipInfo != null) {
 				Transaction t = Cat.newTransaction("Monitor", url);
-				
+
 				try {
 					String city = ipInfo.getProvince() + "-" + ipInfo.getCity();
 					String channel = ipInfo.getChannel();
@@ -123,6 +123,8 @@ private void processOneEntity(MonitorEntity entity) {
 					}
 					if (!"200".equals(httpCode) || !StringUtils.isEmpty(errorCode)) {
 						logMetric(timestamp, duration, group, city + ":" + channel + ":" + Monitor.ERROR);
+					}else{
+						logMetric(timestamp, duration, group, city + ":" + channel + ":" + Monitor.HIT);
 					}
 					if (!StringUtils.isEmpty(httpCode)) {
 						String key = city + ":" + channel + ":" + Monitor.HTTP_STATUS + "|" + httpCode;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/RequestUtils.java
Patch:
@@ -37,7 +37,7 @@ public String filterXForwardedForIP(String ip) {
 	}
 
 	public String getRemoteIp(HttpServletRequest request) {
-		return filterXForwardedForIP(request.getHeader("x-forwarded-for"));
+		return filterXForwardedForIP(request.getRemoteAddr() + "," + request.getHeader("x-forwarded-for"));
 	}
 
 }
\ No newline at end of file

File: cat-core/src/main/java/com/dianping/cat/Monitor.java
Patch:
@@ -3,6 +3,8 @@
 public class Monitor {
 
 	public static final String HIT = "hit";
+	
+	public static final String AVG = "avg";
 
 	public static final String ERROR = "error";
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -82,7 +82,7 @@ private Segment buildAllSegmentsInfo(DependencyReport report) {
 	}
 
 	private void buildDependencyDashboard(Model model, Payload payload, Date reportTime) {
-		ProductLinesDashboard dashboardGraph = m_graphManager.buildDashboardGraph(reportTime.getTime());
+		ProductLinesDashboard dashboardGraph = m_graphManager.buildDependencyDashboard(reportTime.getTime());
 		Map<String, List<TopologyNode>> dashboardNodes = dashboardGraph.getNodes();
 
 		for (Entry<String, List<TopologyNode>> entry : dashboardNodes.entrySet()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphBuilder.java
Patch:
@@ -123,7 +123,7 @@ private TopologyNode mergeNode(TopologyNode old, TopologyNode node) {
 	@Override
 	public void visitDependency(Dependency dependency) {
 		String type = dependency.getType();
-		// pigeonServer is no use
+		
 		if (!m_pigeonServices.contains(type)) {
 			TopologyEdge edge = m_itemBuilder.buildEdge(m_domain, dependency);
 			TopologyGraph graph = findOrCreateGraph();

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -96,7 +96,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 			Metric metric = Cat.getProducer().newMetric(group, key);
 			DefaultMetric defaultMetric = (DefaultMetric) metric;
-			
 			if (defaultMetric != null) {
 				defaultMetric.setTimestamp(time);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Payload.java
Patch:
@@ -123,6 +123,9 @@ public void validate(ActionContext<?> ctx) {
 		if (m_action == null) {
 			m_action = Action.COUNT_API;
 		}
+		if(m_type == null) {
+			m_type = "network";
+		}
 	}
 	
 }

File: cat-home/src/main/java/com/dianping/cat/report/chart/BaseGraphCreator.java
Patch:
@@ -270,8 +270,9 @@ protected Map<String, double[]> removeFutureData(Date endDate, final Map<String,
 			Map<String, double[]> newCurrentValues = new LinkedHashMap<String, double[]>();
 			int step = m_dataExtractor.getStep();
 			
-			if (step <= 0)
+			if (step <= 0){
 				return allCurrentValues;
+			}
 			int minute = Calendar.getInstance().get(Calendar.MINUTE);
 			int removeLength = 60 / step - (minute / step);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/graph/DefaultUserMonitGraphCreator.java
Patch:
@@ -55,7 +55,7 @@ public Pair<LineChart, PieChart> buildErrorChartData(final Map<String, double[]>
 
 	@Override
 	protected Map<String, double[]> buildGraphData(MetricReport metricReport, List<MetricItemConfig> metricConfigs) {
-		return null;
+		throw new RuntimeException("unsupport in user monitor graph!");
 	}
 
 	private Map<String, LineChart> buildInfoChartData(final Map<String, double[]> datas, Date startDate, Date endDate,

File: cat-broker/src/test/java/com/dianping/cat/broker/IpServiceTest.java
Patch:
@@ -10,6 +10,9 @@ public class IpServiceTest extends ComponentTestCase {
 	@Test
 	public void test() throws Exception {
 		IpService service = (IpService) lookup(IpService.class);
+		
+		System.err.println(service.findIpInfoByString("10.10.253.20"));
+		
 
 		for (int i = 0; i < 1000; i++) {
 			String ip = i % 255 + "." + i % 255 + "." + i % 255 + "." + i % 255;

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/Model.java
Patch:
@@ -13,7 +13,7 @@
 
 public class Model extends AbstractReportModel<Action, Context> {
 
-	private List<PatternItem> m_pattermItems;
+	private Collection<PatternItem> m_pattermItems;
 
 	private List<String> m_cities;
 
@@ -72,7 +72,7 @@ public List<LineChart> getLineCharts() {
 		}
 	}
 
-	public List<PatternItem> getPattermItems() {
+	public Collection<PatternItem> getPattermItems() {
 		return m_pattermItems;
 	}
 
@@ -104,7 +104,7 @@ public void setLineCharts(Map<String, LineChart> lineCharts) {
 		m_lineCharts = lineCharts;
 	}
 
-	public void setPattermItems(List<PatternItem> pattermItems) {
+	public void setPattermItems(Collection<PatternItem> pattermItems) {
 		m_pattermItems = pattermItems;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/BaseAlertConfig.java
Patch:
@@ -119,7 +119,7 @@ private boolean judgeByRule(Config ruleConfig, double value, double baseline, in
 				}
 
 				String ruleType = subCondition.getType();
-				int ruleValue = Integer.parseInt(subCondition.getText());
+				double ruleValue = Double.parseDouble(subCondition.getText());
 				RuleType rule = RuleType.getByTypeId(ruleType);
 
 				if (rule == null) {

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/BaseAlert.java
Patch:
@@ -99,7 +99,7 @@ protected void processProductLine(ProductLine productLine) {
 		List<MetricItemConfig> configs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		long current = (System.currentTimeMillis()) / 1000 / 60;
 		int minute = (int) (current % (60)) - DATA_AREADY_MINUTE;
-
+		
 		for (MetricItemConfig config : configs) {
 			try {
 				processMetricItemConfig(config, minute, productLine);

File: cat-home/src/main/java/com/dianping/cat/system/config/MetricRuleConfigManager.java
Patch:
@@ -86,7 +86,7 @@ public List<com.dianping.cat.home.monitorrules.entity.Config> buildConfigs(Strin
 						break;
 					}
 				} else if (type.equals("regex")) {
-					String[] context = metricItem.getText().split(":");
+					String[] context = metricItem.getText().trim().split("\\(s\\)");
 
 					Pattern p = Pattern.compile(context[0]);
 					Matcher m = p.matcher(product);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/BaseAlert.java
Patch:
@@ -99,7 +99,7 @@ protected void processProductLine(ProductLine productLine) {
 		List<MetricItemConfig> configs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		long current = (System.currentTimeMillis()) / 1000 / 60;
 		int minute = (int) (current % (60)) - DATA_AREADY_MINUTE;
-
+		
 		for (MetricItemConfig config : configs) {
 			try {
 				processMetricItemConfig(config, minute, productLine);

File: cat-home/src/main/java/com/dianping/cat/system/config/MetricRuleConfigManager.java
Patch:
@@ -86,7 +86,7 @@ public List<com.dianping.cat.home.monitorrules.entity.Config> buildConfigs(Strin
 						break;
 					}
 				} else if (type.equals("regex")) {
-					String[] context = metricItem.getText().split(":");
+					String[] context = metricItem.getText().trim().split("\\(s\\)");
 
 					Pattern p = Pattern.compile(context[0]);
 					Matcher m = p.matcher(product);

File: cat-core/src/main/java/com/dianping/cat/DomainManager.java
Patch:
@@ -109,9 +109,9 @@ public void initialize() throws InitializationException {
 			try {
 				m_ipDomains.put(UNKNOWN_IP, UNKNOWN_PROJECT);
 				List<Hostinfo> infos = m_hostInfoDao.findAllIp(HostinfoEntity.READSET_FULL);
+				
 				for (Hostinfo info : infos) {
 					m_ipDomains.put(info.getIp(), info.getDomain());
-					m_domainsInCat.add(info.getDomain());
 					m_ipsInCat.put(info.getIp(), info);
 				}
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/ApiModule.java
Patch:
@@ -4,7 +4,7 @@
 import org.unidal.web.mvc.annotation.ModuleMeta;
 import org.unidal.web.mvc.annotation.ModulePagesMeta;
 
-@ModuleMeta(name = "api", defaultInboundAction = "signal", defaultTransition = "default", defaultErrorAction = "default")
+@ModuleMeta(name = "api", defaultInboundAction = "single", defaultTransition = "default", defaultErrorAction = "default")
 @ModulePagesMeta({
 
 com.dianping.cat.broker.api.page.single.Handler.class,

File: cat-broker/src/main/java/com/dianping/cat/broker/api/ApiPage.java
Patch:
@@ -5,7 +5,7 @@
 
 public enum ApiPage implements Page {
 
-   SIGNAL("signal", "signal", "signal", "signal api", true),
+   SINGLE("single", "single", "single", "single api", true),
 
    BATCH("batch", "batch", "batch", "batch api", true);
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/IpService.java
Patch:
@@ -172,7 +172,7 @@ public void initIpTable(String ipFile) {
 		}
 	}
 
-	public class Area {
+	public static class Area {
 		private Integer m_areaId;
 
 		private String m_nation;
@@ -215,7 +215,7 @@ public void setProvince(String province) {
 
 	}
 
-	public class Corporation {
+	public static class Corporation {
 		private Integer m_corporationId;
 
 		private String m_name;
@@ -238,7 +238,7 @@ public void setName(String name) {
 
 	}
 
-	public class IpInfo {
+	public static class IpInfo {
 		private String m_nation;
 
 		private String m_province;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/JspFile.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.broker.api.page.single;
 
 public enum JspFile {
-	VIEW("/jsp/api/signal.jsp"),
+	VIEW("/jsp/api/single.jsp"),
 
 	;
 

File: cat-broker/src/main/java/com/dianping/cat/broker/view/NavigationBar.java
Patch:
@@ -8,7 +8,7 @@ public class NavigationBar {
 	public Page[] getVisiblePages() {
       return new Page[] {
    
-      ApiPage.SIGNAL,
+      ApiPage.SINGLE,
       
       ApiPage.BATCH
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricConfigManager.java
Patch:
@@ -2,13 +2,13 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.Date;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
-import java.util.Set;
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
@@ -119,7 +119,7 @@ public MetricItemConfig queryMetricItemConfig(String id) {
 		return getMetricConfig().findMetricItemConfig(id);
 	}
 
-	public List<MetricItemConfig> queryMetricItemConfigs(Set<String> domains) {
+	public List<MetricItemConfig> queryMetricItemConfigs(Collection<String> domains) {
 		List<MetricItemConfig> configs = new ArrayList<MetricItemConfig>();
 		Map<String, MetricItemConfig> metricConfig = getMetricConfig().getMetricItemConfigs();
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -46,14 +46,14 @@ protected void execute(ModuleContext ctx) throws Exception {
 			Threads.forGroup("Cat").start(domainNavManager);
 			Threads.forGroup("Cat").start(taskConsumer);
 		}
-		
+
 		if (serverConfigManager.isAlertMachine() && !serverConfigManager.isLocalMode()) {
 			MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
-			SwitchAlert switchAlert = ctx.lookup(SwitchAlert.class);
+			SwitchAlert swtichAlert = ctx.lookup(SwitchAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
 
+			Threads.forGroup("Cat").start(swtichAlert);
 			Threads.forGroup("Cat").start(metricAlert);
-			Threads.forGroup("Cat").start(switchAlert);
 			Threads.forGroup("Cat").start(exceptionAlert);
 		}
 		executeAlarmModule(ctx);

File: cat-home/src/main/java/com/dianping/cat/report/chart/AggregationGraphCreator.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.util.Collection;
 import java.util.Date;
-import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
@@ -23,7 +22,7 @@
 import com.dianping.cat.report.task.metric.MetricType;
 import com.dianping.cat.system.config.MetricAggregationConfigManager;
 
-public class AggregationGraphCreator extends GraphCreatorBase {
+public class AggregationGraphCreator extends BaseGraphCreator {
 
 	@Inject
 	private MetricAggregationConfigManager m_metricAggregationConfigManager;
@@ -131,7 +130,7 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 
 	protected boolean isProductLineInGroup(String productLine, List<MetricAggregation> metricAggregations) {
 		List<String> domains = m_productLineConfigManager.queryDomainsByProductLine(productLine);
-		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(new HashSet<String>(domains));
+		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		for(MetricItemConfig metricConfig : metricConfigs){
 			String domain = metricConfig.getDomain();
 			String type = metricConfig.getType();

File: cat-home/src/main/java/com/dianping/cat/report/chart/BaseGraphCreator.java
Patch:
@@ -9,8 +9,8 @@
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
 
 import org.codehaus.plexus.logging.LogEnabled;
 import org.codehaus.plexus.logging.Logger;
@@ -29,7 +29,7 @@
 import com.dianping.cat.report.task.metric.MetricType;
 import com.dianping.cat.system.config.MetricGroupConfigManager;
 
-public abstract class GraphCreatorBase implements LogEnabled {
+public abstract class BaseGraphCreator implements LogEnabled {
 	@Inject
 	protected BaselineService m_baselineService;
 
@@ -233,7 +233,7 @@ protected abstract Map<String, double[]> buildGraphData(MetricReport metricRepor
 	private Map<String, double[]> queryMetricValueByDate(String productLine, long start) {
 		MetricReport metricReport = m_metricReportService.queryMetricReport(productLine, new Date(start));
 		List<String> domains = m_productLineConfigManager.queryDomainsByProductLine(productLine);
-		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(new HashSet<String>(domains));
+		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		
 		Collections.sort(metricConfigs, new Comparator<MetricItemConfig>() {
 			@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -220,9 +220,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			} else if (MetricAnalyzer.ID.equals(report)) {
 				response = m_metricService.invoke(request);
 
-				String type = request.getProperty("type");
-				String city = request.getProperty("city");
-				String channel = request.getProperty("channel");
+				String type = payload.getType();
+				String city =payload.getCity();
+				String channel =payload.getChannel();
 
 				if (type != null) { // for user monitor report
 					UserMonitorConvert convert = new UserMonitorConvert(type, city, channel);

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/Handler.java
Patch:
@@ -75,8 +75,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			url = rules.get(0).getName();
 		}
 
-		 city="江苏";
-		
 		pars.put("type", type);
 		pars.put("channel", channel);
 		pars.put("city", city);

File: cat-home/src/main/java/com/dianping/cat/report/task/exceptionAlert/ExceptionAlert.java
Patch:
@@ -28,7 +28,7 @@
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.top.TopMetric;
 import com.dianping.cat.report.page.top.TopMetric.Item;
-import com.dianping.cat.report.task.metric.AlertConfig;
+import com.dianping.cat.report.task.metric.MetricAlertConfig;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
 import com.dianping.cat.system.config.ExceptionThresholdConfigManager;
@@ -40,7 +40,7 @@ public class ExceptionAlert implements Task, LogEnabled {
 	private ProjectDao m_projectDao;
 
 	@Inject
-	private AlertConfig m_alertConfig;
+	private MetricAlertConfig m_alertConfig;
 
 	@Inject
 	private MailSMS m_mailSms;

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -17,7 +17,6 @@ public static void main(String[] args) throws Exception {
 		server.startServer();
 		server.startWebApp();
 		server.stopServer();
-		System.out.println("h2fly test");
 	}
 
 	@Before

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -15,7 +15,7 @@
 import com.dianping.cat.home.monitorrules.entity.MonitorRules;
 import com.dianping.cat.home.monitorrules.entity.Rule;
 import com.dianping.cat.home.monitorrules.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.metric.AlertConfig;
+import com.dianping.cat.report.task.metric.MetricAlertConfig;
 import com.dianping.cat.report.task.metric.MetricType;
 import com.dianping.cat.report.task.metric.SwitchAlertConfig;
 
@@ -47,7 +47,7 @@ private Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> buil
 
 	@Test
 	public void testRule() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/demo-rule-monitor.xml"));
 
@@ -62,7 +62,7 @@ public void testRule() {
 	
 	@Test
 	public void testCondition() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/demo-rule-monitor.xml"));
 		Pair<Boolean, String> result;

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -44,7 +44,7 @@ private Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> buil
 
 	@Test
 	public void test() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 
 		double baseline[] = { 100, 100 };
@@ -102,7 +102,7 @@ public void test() {
 
 	@Test
 	public void testRule() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/test-rule-monitor.xml"));
 

File: cat-home/src/main/java/com/dianping/cat/report/chart/AggregationGraphCreator.java
Patch:
@@ -22,7 +22,7 @@
 import com.dianping.cat.report.task.metric.MetricType;
 import com.dianping.cat.system.config.MetricAggregationConfigManager;
 
-public class AggregationGraphCreator extends GraphCreatorBase {
+public class AggregationGraphCreator extends BaseGraphCreator {
 
 	@Inject
 	private MetricAggregationConfigManager m_metricAggregationConfigManager;

File: cat-home/src/main/java/com/dianping/cat/report/chart/BaseGraphCreator.java
Patch:
@@ -29,7 +29,7 @@
 import com.dianping.cat.report.task.metric.MetricType;
 import com.dianping.cat.system.config.MetricGroupConfigManager;
 
-public abstract class GraphCreatorBase implements LogEnabled {
+public abstract class BaseGraphCreator implements LogEnabled {
 	@Inject
 	protected BaselineService m_baselineService;
 

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -19,13 +19,12 @@
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.task.metric.MetricType;
 
-public class GraphCreator extends GraphCreatorBase{
+public class GraphCreator extends BaseGraphCreator{
 	
 	public Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
 			final Map<String, double[]> dataWithOutFutures) {
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
 		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
-		
 		int step = m_dataExtractor.getStep();
 		
 		for (Entry<String, double[]> entry : dataWithOutFutures.entrySet()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/graph/DefaultUserMonitGraphCreator.java
Patch:
@@ -14,12 +14,12 @@
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.entity.Segment;
 import com.dianping.cat.helper.TimeUtil;
-import com.dianping.cat.report.chart.GraphCreatorBase;
+import com.dianping.cat.report.chart.BaseGraphCreator;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PieChart;
 import com.dianping.cat.report.page.PieChart.Item;
 
-public class DefaultUserMonitGraphCreator extends GraphCreatorBase implements UserMonitorGraphCreator {
+public class DefaultUserMonitGraphCreator extends BaseGraphCreator implements UserMonitorGraphCreator {
 
 	private static final String COUNT = "访问量";
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricConfigManager.java
Patch:
@@ -9,7 +9,6 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
-import java.util.Set;
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;

File: cat-home/src/main/java/com/dianping/cat/report/task/exceptionAlert/ExceptionAlert.java
Patch:
@@ -28,7 +28,7 @@
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.dianping.cat.report.page.top.TopMetric;
 import com.dianping.cat.report.page.top.TopMetric.Item;
-import com.dianping.cat.report.task.metric.AlertConfig;
+import com.dianping.cat.report.task.metric.MetricAlertConfig;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
 import com.dianping.cat.system.config.ExceptionThresholdConfigManager;
@@ -40,7 +40,7 @@ public class ExceptionAlert implements Task, LogEnabled {
 	private ProjectDao m_projectDao;
 
 	@Inject
-	private AlertConfig m_alertConfig;
+	private MetricAlertConfig m_alertConfig;
 
 	@Inject
 	private MailSMS m_mailSms;

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlertConfig.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.cat.core.dal.Project;
 import com.site.helper.Splitters;
 
-public class AlertConfig {
+public class MetricAlertConfig {
 
 	private DecimalFormat m_df = new DecimalFormat("0.0");
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -15,7 +15,7 @@
 import com.dianping.cat.home.monitorrules.entity.MonitorRules;
 import com.dianping.cat.home.monitorrules.entity.Rule;
 import com.dianping.cat.home.monitorrules.transform.DefaultSaxParser;
-import com.dianping.cat.report.task.metric.AlertConfig;
+import com.dianping.cat.report.task.metric.MetricAlertConfig;
 import com.dianping.cat.report.task.metric.MetricType;
 import com.dianping.cat.report.task.metric.SwitchAlertConfig;
 
@@ -47,7 +47,7 @@ private Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> buil
 
 	@Test
 	public void testRule() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/demo-rule-monitor.xml"));
 
@@ -62,7 +62,7 @@ public void testRule() {
 	
 	@Test
 	public void testCondition() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/demo-rule-monitor.xml"));
 		Pair<Boolean, String> result;

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -44,7 +44,7 @@ private Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> buil
 
 	@Test
 	public void test() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 
 		double baseline[] = { 100, 100 };
@@ -102,7 +102,7 @@ public void test() {
 
 	@Test
 	public void testRule() {
-		AlertConfig alertConfig = new AlertConfig();
+		MetricAlertConfig alertConfig = new MetricAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/test-rule-monitor.xml"));
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricConfigManager.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.Date;
@@ -119,7 +120,7 @@ public MetricItemConfig queryMetricItemConfig(String id) {
 		return getMetricConfig().findMetricItemConfig(id);
 	}
 
-	public List<MetricItemConfig> queryMetricItemConfigs(Set<String> domains) {
+	public List<MetricItemConfig> queryMetricItemConfigs(Collection<String> domains) {
 		List<MetricItemConfig> configs = new ArrayList<MetricItemConfig>();
 		Map<String, MetricItemConfig> metricConfig = getMetricConfig().getMetricItemConfigs();
 

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -52,8 +52,8 @@ protected void execute(ModuleContext ctx) throws Exception {
 			SwitchAlert swtichAlert = ctx.lookup(SwitchAlert.class);
 			ExceptionAlert exceptionAlert = ctx.lookup(ExceptionAlert.class);
 
-			Threads.forGroup("Cat").start(metricAlert);
 			Threads.forGroup("Cat").start(swtichAlert);
+			Threads.forGroup("Cat").start(metricAlert);
 			Threads.forGroup("Cat").start(exceptionAlert);
 		}
 		executeAlarmModule(ctx);

File: cat-home/src/main/java/com/dianping/cat/report/chart/AggregationGraphCreator.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.util.Collection;
 import java.util.Date;
-import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
@@ -131,7 +130,7 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 
 	protected boolean isProductLineInGroup(String productLine, List<MetricAggregation> metricAggregations) {
 		List<String> domains = m_productLineConfigManager.queryDomainsByProductLine(productLine);
-		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(new HashSet<String>(domains));
+		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		for(MetricItemConfig metricConfig : metricConfigs){
 			String domain = metricConfig.getDomain();
 			String type = metricConfig.getType();

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -5,7 +5,6 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.Date;
-import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
@@ -98,7 +97,7 @@ public int compare(MetricItemConfig o1, MetricItemConfig o2) {
 
 	protected boolean isProductLineInGroup(String productLine, List<MetricKeyConfig> configs) {
 		List<String> domains = m_productLineConfigManager.queryDomainsByProductLine(productLine);
-		List<MetricItemConfig> metricConfig = m_metricConfigManager.queryMetricItemConfigs(new HashSet<String>(domains));
+		List<MetricItemConfig> metricConfig = m_metricConfigManager.queryMetricItemConfigs(domains);
 
 		for (MetricKeyConfig metric : configs) {
 			String domain = metric.getMetricDomain();
@@ -140,7 +139,7 @@ public Map<String, LineChart> buildDashboardByGroup(Date start, Date end, String
 	private boolean showInDashboard(String productline) {
 		List<String> domains = m_productLineConfigManager.queryDomainsByProductLine(productline);
 
-		List<MetricItemConfig> configs = m_metricConfigManager.queryMetricItemConfigs(new HashSet<String>(domains));
+		List<MetricItemConfig> configs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		for (MetricItemConfig config : configs) {
 			if (config.isShowAvgDashboard() || config.isShowCountDashboard() || config.isShowSumDashboard()) {
 				return true;

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreatorBase.java
Patch:
@@ -9,8 +9,8 @@
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 import java.util.Map.Entry;
+import java.util.Set;
 
 import org.codehaus.plexus.logging.LogEnabled;
 import org.codehaus.plexus.logging.Logger;
@@ -233,7 +233,7 @@ protected abstract Map<String, double[]> buildGraphData(MetricReport metricRepor
 	private Map<String, double[]> queryMetricValueByDate(String productLine, long start) {
 		MetricReport metricReport = m_metricReportService.queryMetricReport(productLine, new Date(start));
 		List<String> domains = m_productLineConfigManager.queryDomainsByProductLine(productLine);
-		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(new HashSet<String>(domains));
+		List<MetricItemConfig> metricConfigs = m_metricConfigManager.queryMetricItemConfigs(domains);
 		
 		Collections.sort(metricConfigs, new Comparator<MetricItemConfig>() {
 			@Override

File: cat-home/src/main/java/com/dianping/cat/system/config/MetricRuleConfigManager.java
Patch:
@@ -68,7 +68,7 @@ private List<com.dianping.cat.home.monitorrules.entity.Config> getOrBuildRuleLis
 		return configs;
 	}
 
-	public List<com.dianping.cat.home.monitorrules.entity.Config> getConfigs(String product, String domain, String key,
+	public List<com.dianping.cat.home.monitorrules.entity.Config> buildConfigs(String product, String domain, String key,
 	      String metricKey) {
 		List<com.dianping.cat.home.monitorrules.entity.Config> configs = new ArrayList<com.dianping.cat.home.monitorrules.entity.Config>();
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.home.monitorrules.transform.DefaultSaxParser;
 import com.dianping.cat.report.task.metric.AlertConfig;
 import com.dianping.cat.report.task.metric.MetricType;
+import com.dianping.cat.report.task.metric.SwitchAlertConfig;
 
 public class RuleConfigTest {
 
@@ -83,7 +84,7 @@ public void testCondition() {
 
 	@Test
 	public void testMinute() {
-		AlertConfig alertConfig = new AlertConfig();
+		SwitchAlertConfig alertConfig = new SwitchAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/test-minute-monitor.xml"));
 

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/AlertConfigTest.java
Patch:
@@ -154,7 +154,7 @@ public void testRule() {
 
 	@Test
 	public void testMinute() {
-		AlertConfig alertConfig = new AlertConfig();
+		SwitchAlertConfig alertConfig = new SwitchAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/test-minute-monitor.xml"));
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/MonitorManager.java
Patch:
@@ -98,6 +98,7 @@ public boolean offer(MonitorEntity entity) {
 	private void processOneEntity(MonitorEntity entity) {
 		String targetUrl = entity.getTargetUrl();
 
+		System.err.println(entity);
 		if (targetUrl != null) {
 			String url = getFormatUrl(targetUrl);
 

File: cat-broker/src/test/java/com/dianping/cat/broker/PostTest.java
Patch:
@@ -52,15 +52,14 @@ private void read(String url) throws Exception {
 
 	@Test
 	public void test() throws Exception {
-		String url = "http://localhost:2765/broker-service/api/batch";
-
+		String url = "http://localhost:2765/broker-service/api/batch?v=1.0";
 		URLConnection conn = new URL(url).openConnection();
 
 		conn.setDoOutput(true);
 		conn.setDoInput(true);
 		OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());
 
-		String content = "1400037748182\thttp\t300\t200\t300\n1400037748182\thttp\t300\t200\t300\n1400037748182\thttp\t300\t200\t300\n";
+		String content = "&c=1400037748182\\thttp\\t300\\t200\\t300\\n1400037748182\\thttp\\t300\\t200\\t300\\n1400037748182\\thttp\\t300\\t200\\t300\\n";
 		writer.write(content);
 		writer.flush();
 

File: cat-home/src/test/java/com/dianping/cat/report/alert/RuleConfigTest.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.home.monitorrules.transform.DefaultSaxParser;
 import com.dianping.cat.report.task.metric.AlertConfig;
 import com.dianping.cat.report.task.metric.MetricType;
+import com.dianping.cat.report.task.metric.SwitchAlertConfig;
 
 public class RuleConfigTest {
 
@@ -83,7 +84,7 @@ public void testCondition() {
 
 	@Test
 	public void testMinute() {
-		AlertConfig alertConfig = new AlertConfig();
+		SwitchAlertConfig alertConfig = new SwitchAlertConfig();
 		MetricItemConfig config = new MetricItemConfig();
 		Map<String, List<com.dianping.cat.home.monitorrules.entity.Config>> configMap = buildConfigMap(buildMonitorRuleFromFile("/config/test-minute-monitor.xml"));
 

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/IpService.java
Patch:
@@ -172,7 +172,7 @@ public void initIpTable(String ipFile) {
 		}
 	}
 
-	public class Area {
+	public static class Area {
 		private Integer m_areaId;
 
 		private String m_nation;
@@ -215,7 +215,7 @@ public void setProvince(String province) {
 
 	}
 
-	public class Corporation {
+	public static class Corporation {
 		private Integer m_corporationId;
 
 		private String m_name;
@@ -238,7 +238,7 @@ public void setName(String name) {
 
 	}
 
-	public class IpInfo {
+	public static class IpInfo {
 		private String m_nation;
 
 		private String m_province;

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/batch/Handler.java
Patch:
@@ -50,11 +50,11 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 					if (tabs.length == 5) {
 						MonitorEntity entity = new MonitorEntity();
 
-						entity.setTimestamp(Integer.parseInt(tabs[0]));
+						entity.setTimestamp(Long.parseLong(tabs[0]));
 						entity.setTargetUrl(tabs[1]);
 						entity.setDuration(Double.parseDouble(tabs[1]));
 						entity.setErrorCode(tabs[3]);
-						entity.setHttpCode(tabs[4]);
+						entity.setHttpStatus(tabs[4]);
 						entity.setIp(userIp);
 
 						m_manager.offer(entity);

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/Handler.java
Patch:
@@ -28,13 +28,13 @@ public class Handler implements PageHandler<Context> {
 
 	@Override
 	@PayloadMeta(Payload.class)
-	@InboundActionMeta(name = "signal")
+	@InboundActionMeta(name = "single")
 	public void handleInbound(Context ctx) throws ServletException, IOException {
 		// display only, no action here
 	}
 
 	@Override
-	@OutboundActionMeta(name = "signal")
+	@OutboundActionMeta(name = "single")
 	public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Model model = new Model(ctx);
 		Payload payload = ctx.getPayload();
@@ -49,7 +49,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		if (userIp != null) {
 			entity.setDuration(payload.getDuration());
 			entity.setErrorCode(payload.getErrorCode());
-			entity.setHttpCode(payload.getHttpCode());
+			entity.setHttpStatus(payload.getHttpStatus());
 			entity.setIp(userIp);
 			entity.setTargetUrl(payload.getTargetUrl());
 			entity.setTimestamp(payload.getTimestamp());

File: cat-broker/src/main/java/com/dianping/cat/broker/api/page/single/JspFile.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.broker.api.page.single;
 
 public enum JspFile {
-	VIEW("/jsp/api/signal.jsp"),
+	VIEW("/jsp/api/single.jsp"),
 
 	;
 

File: cat-broker/src/test/java/com/dianping/cat/broker/TestServer.java
Patch:
@@ -28,7 +28,7 @@ public void before() throws Exception {
 
    @Override
    protected String getContextPath() {
-      return "/broker-server";
+      return "/broker-service";
    }
 
    @Override
@@ -38,13 +38,13 @@ protected int getServerPort() {
 
    @Override
    protected void postConfigure(WebAppContext context) {
-      context.addFilter(GzipFilter.class, "/monitor/*", Handler.ALL);
+		context.addFilter(GzipFilter.class, "/*", Handler.ALL);
    }
 
    @Test
    public void startWebapp() throws Exception {
       // open the page in the default browser
-      display("/broker-server/monitor");
+      display("/broker-service/api");
       waitForAnyKey();
    }
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -220,9 +220,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			} else if (MetricAnalyzer.ID.equals(report)) {
 				response = m_metricService.invoke(request);
 
-				String type = request.getProperty("type");
-				String city = request.getProperty("city");
-				String channel = request.getProperty("channel");
+				String type = payload.getType();
+				String city =payload.getCity();
+				String channel =payload.getChannel();
 
 				if (type != null) { // for user monitor report
 					UserMonitorConvert convert = new UserMonitorConvert(type, city, channel);

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/Handler.java
Patch:
@@ -75,8 +75,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			url = rules.get(0).getName();
 		}
 
-		 city="江苏";
-		
 		pars.put("type", type);
 		pars.put("channel", channel);
 		pars.put("city", city);

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/Payload.java
Patch:
@@ -21,7 +21,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_url;
 
 	@FieldMeta("city")
-	private String m_city = "北京市";
+	private String m_city = "上海市";
 
 	@FieldMeta("channel")
 	private String m_channel;

File: cat-home/src/main/java/com/dianping/cat/report/page/userMonitor/UserMonitorConvert.java
Patch:
@@ -49,9 +49,9 @@ public void visitMetricItem(MetricItem metricItem) {
 		try {
 			String id = metricItem.getId();
 			String[] temp = id.split(":");
-			String city = temp[0];
-			String channel = temp[1];
-			String info = temp[2];
+			String city = temp[2];
+			String channel = temp[3];
+			String info = temp[4];
 
 			if (validate(city, channel, info)) {
 				MetricItem item = m_report.findOrCreateMetricItem(info);

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -17,7 +17,6 @@ public static void main(String[] args) throws Exception {
 		server.startServer();
 		server.startWebApp();
 		server.stopServer();
-		System.out.println("h2fly test");
 	}
 
 	@Before

File: cat-home/src/main/java/com/dianping/cat/report/chart/impl/CachedMetricReportServiceImpl.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
-import org.unidal.eunit.helper.Files;
+import org.unidal.helper.Files;
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -16,10 +16,10 @@
 public abstract class AbstractReportPayload<A extends Action> implements ActionPayload<ReportPage, A> {
 
 	@FieldMeta("endDate")
-	private String m_customEnd;
+	protected String m_customEnd;
 
 	@FieldMeta("startDate")
-	private String m_customStart;
+	protected String m_customStart;
 
 	@FieldMeta("date")
 	private long m_date;
@@ -168,6 +168,7 @@ public Date getHistoryEndDate() {
 
 	public Date getHistoryStartDate() {
 		if (m_customStart != null) {
+			System.out.println(m_customStart);
 			try {
 				if (m_customStart.length() == 8) {
 					return m_dayFormat.parse(m_customStart);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/AlertConfig.java
Patch:
@@ -249,7 +249,7 @@ private boolean judgeByRule(Config ruleConfig, double value, double baseline, in
 					break;
 				}
 
-				int ruleType = subCondition.getType();
+				String ruleType = subCondition.getType();
 				int ruleValue = Integer.parseInt(subCondition.getText());
 				RuleType rule = RuleType.getByTypeId(ruleType);
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/SwitchAlertConfig.java
Patch:
@@ -242,7 +242,7 @@ private boolean judgeByRule(Config ruleConfig, double value, double baseline, in
 					break;
 				}
 
-				int ruleType = subCondition.getType();
+				String ruleType = subCondition.getType();
 				int ruleValue = Integer.parseInt(subCondition.getText());
 				RuleType rule = RuleType.getByTypeId(ruleType);
 

File: cat-home/src/main/java/com/dianping/cat/report/chart/AggregationGraphCreator.java
Patch:
@@ -67,6 +67,7 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 
 		MetricAggregationGroup metricAggregationGroup = m_metricAggregationConfigManager.getMetricAggregationConfig()
 		      .findMetricAggregationGroup(m_aggregationGroup);
+		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
 		String type = metricAggregationGroup.getType();
 		int step = m_dataExtractor.getStep();
 		String id = metricAggregation.getId();
@@ -88,6 +89,8 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 			String itemKey = domain + ":" + type + ":" + metricAggregationItem.getKey() + ":" + displayType.toUpperCase();
 
 			if (dataWithOutFutures.containsKey(itemKey)) {
+				buildLineChartTitle(alertItems, lineChart, itemKey, title);
+				
 				Map<Long, Double> all = convertToMap(datas.get(itemKey), startDate, 1);
 				Map<Long, Double> current = convertToMap(dataWithOutFutures.get(itemKey), startDate, step);
 				addLastMinuteData(current, all, m_lastMinute, endDate);

File: cat-home/src/main/java/com/dianping/cat/report/chart/AggregationGraphCreator.java
Patch:
@@ -67,6 +67,7 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 
 		MetricAggregationGroup metricAggregationGroup = m_metricAggregationConfigManager.getMetricAggregationConfig()
 		      .findMetricAggregationGroup(m_aggregationGroup);
+		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
 		String type = metricAggregationGroup.getType();
 		int step = m_dataExtractor.getStep();
 		String id = metricAggregation.getId();
@@ -88,6 +89,8 @@ private Pair<String, LineChart> buildAggerationChart(final Map<String, double[]>
 			String itemKey = domain + ":" + type + ":" + metricAggregationItem.getKey() + ":" + displayType.toUpperCase();
 
 			if (dataWithOutFutures.containsKey(itemKey)) {
+				buildLineChartTitle(alertItems, lineChart, itemKey, title);
+				
 				Map<Long, Double> all = convertToMap(datas.get(itemKey), startDate, 1);
 				Map<Long, Double> current = convertToMap(dataWithOutFutures.get(itemKey), startDate, step);
 				addLastMinuteData(current, all, m_lastMinute, endDate);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/Period.java
Patch:
@@ -42,7 +42,7 @@ public class Period {
 	@Inject
 	private Logger m_logger;
 
-	private static int QUEUE_SIZE = 20000;
+	private static int QUEUE_SIZE = 50000;
 
 	public Period(long startTime, long endTime, MessageAnalyzerManager analyzerManager,
 	      ServerStatisticManager serverStateManager, Logger logger) {

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -74,7 +74,7 @@ public class LocalMessageBucketManager extends ContainerHolder implements Messag
 
 	private ConcurrentHashMap<Integer, LinkedBlockingQueue<MessageItem>> m_messageQueues = new ConcurrentHashMap<Integer, LinkedBlockingQueue<MessageItem>>();
 
-	private BlockingQueue<MessageItem> m_retryItems = new LinkedBlockingQueue<MessageItem>();
+	private BlockingQueue<MessageItem> m_retryItems = new LinkedBlockingQueue<MessageItem>(m_messageBlockSize);
 
 	public void archive(long startTime) {
 		String path = m_pathBuilder.getPath(new Date(startTime), "");

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -22,7 +22,7 @@
 
 public class GraphCreator extends GraphCreatorBase{
 	
-	private Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
+	public Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
 			final Map<String, double[]> dataWithOutFutures) {
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
 		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -56,7 +56,7 @@ public class TcpSocketSender implements Task, MessageSender, LogEnabled {
 	private AtomicInteger m_errors = new AtomicInteger();
 
 	private AtomicInteger m_attempts = new AtomicInteger();
-
+	
 	private boolean checkWritable(ChannelFuture future) {
 		boolean isWriteable = false;
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/Period.java
Patch:
@@ -42,7 +42,7 @@ public class Period {
 	@Inject
 	private Logger m_logger;
 
-	private static int QUEUE_SIZE = 60000;
+	private static int QUEUE_SIZE = 20000;
 
 	public Period(long startTime, long endTime, MessageAnalyzerManager analyzerManager,
 	      ServerStatisticManager serverStateManager, Logger logger) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -89,7 +89,6 @@ public TopReport getReport(String domain) {
 					transactionReportVisitor.visitTransactionReport(report);
 				} catch (ConcurrentModificationException ce) {
 					Cat.logEvent("ConcurrentModificationException", name, Event.SUCCESS, null);
-					Cat.logError(ce);
 				}
 			} catch (Exception e) {
 				Cat.logError(e);
@@ -112,7 +111,6 @@ public TopReport getReport(String domain) {
 					problemReportVisitor.visitProblemReport(report);
 				} catch (ConcurrentModificationException ce) {
 					Cat.logEvent("ConcurrentModificationException", name, Event.SUCCESS, null);
-					Cat.logError(e);
 				}
 			} catch (Exception e) {
 				Cat.logError(e);

File: cat-core/src/main/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManager.java
Patch:
@@ -28,7 +28,7 @@ public class DefaultMessageAnalyzerManager extends ContainerHolder implements Me
 	public MessageAnalyzer getAnalyzer(String name, long startTime) {
 		// remove last two hour analyzer
 		try {
-			Map<String, MessageAnalyzer> temp = m_analyzers.remove(startTime - m_duration * 3);
+			Map<String, MessageAnalyzer> temp = m_analyzers.remove(startTime - m_duration * 2);
 
 			if (temp != null) {
 				for (MessageAnalyzer anlyzer : temp.values()) {

File: cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java
Patch:
@@ -11,8 +11,6 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://127.0.0.1:3306/cat", "test", "123", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
-
       defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.report._INDEX.getEntityClasses());
       defineDaoComponents(all, com.dianping.cat.home.dal.report._INDEX.getDaoClasses());
 

File: cat-home/src/main/java/com/dianping/cat/build/UserDatabaseConfigurator.java
Patch:
@@ -11,8 +11,6 @@ final class UserDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceComponent("user", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.8.44:3306/hawk", "hawk", "hawk", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
-
       defineSimpleTableProviderComponents(all, "user", com.dianping.cat.home.dal.user._INDEX.getEntityClasses());
       defineDaoComponents(all, com.dianping.cat.home.dal.user._INDEX.getDaoClasses());
 

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -26,7 +26,9 @@ private Map<String, LineChart> buildChartData(final Map<String, double[]> datas,
 			final Map<String, double[]> dataWithOutFutures) {
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
 		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);
+		
 		int step = m_dataExtractor.getStep();
+		
 		for (Entry<String, double[]> entry : dataWithOutFutures.entrySet()) {
 			String key = entry.getKey();
 			double[] value = entry.getValue();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -85,7 +85,6 @@ public ModelResponse<T> invoke(ModelRequest request) {
 			}
 		} catch (Exception e) {
 			t.setStatus(e);
-			logError(e);
 		} finally {
 			t.complete();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Action.java
Patch:
@@ -2,7 +2,9 @@
 
 public enum Action implements org.unidal.web.mvc.Action {
 	NETTOPOLOGY("view"),
+
 	AGGREGATION("aggregation"),
+
 	METRIC("metric");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/task/exceptionAlert/ExceptionAlert.java
Patch:
@@ -210,7 +210,7 @@ private void sendAlertForDomain(String domain, List<AlertException> exceptions)
 
 		ProductLine productLine = getProductLineByDomain(domain);
 		List<String> emails = m_alertConfig.buildMailReceivers(productLine);
-		List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
+		List<String> phones = m_alertConfig.buildExceptionSMSReceivers(productLine);
 		String title = "[ " + productLine.getId() + ":" + domain + " ] " + "异常警告! [ " + new Date() + " ]";
 		List<String> errorExceptions = new ArrayList<String>();
 		List<String> warnExceptions = new ArrayList<String>();

File: cat-home/src/main/java/com/dianping/cat/report/task/network/NetTopologyReportBuilder.java
Patch:
@@ -41,7 +41,7 @@ public boolean buildHourlyTask(String name, String domain, Date period) {
 
 			reports.put(group, report);
 		}
-		NetGraphSet netGraphSet = m_netGraphBuilder.buildSet(reports);
+		NetGraphSet netGraphSet = m_netGraphBuilder.buildGraphSet(reports);
 		HourlyReport hourlyReport = new HourlyReport();
 
 		hourlyReport.setType(1);

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateShow.java
Patch:
@@ -76,7 +76,7 @@ public List<ProcessDomain> getProcessDomains() {
 			}
 		}
 		if (m_sortType == null) {
-			Collections.sort(domains, new DomainCompartor());
+			Collections.sort(domains, new SizeCompartor());
 		} else if (m_sortType.equals("total")) {
 			Collections.sort(domains, new TotalCompartor());
 		} else if (m_sortType.equals("loss")) {

File: cat-home/src/main/java/com/dianping/cat/report/chart/GraphCreator.java
Patch:
@@ -22,7 +22,7 @@
 
 public class GraphCreator extends GraphCreatorBase{
 	
-	private Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
+	public Map<String, LineChart> buildChartData(final Map<String, double[]> datas, Date startDate, Date endDate,
 			final Map<String, double[]> dataWithOutFutures) {
 		Map<String, LineChart> charts = new LinkedHashMap<String, LineChart>();
 		List<MetricItemConfig> alertItems = m_alertInfo.getLastestAlarm(5);

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -56,7 +56,7 @@ public class TcpSocketSender implements Task, MessageSender, LogEnabled {
 	private AtomicInteger m_errors = new AtomicInteger();
 
 	private AtomicInteger m_attempts = new AtomicInteger();
-
+	
 	private boolean checkWritable(ChannelFuture future) {
 		boolean isWriteable = false;
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -61,7 +61,7 @@ public class TcpSocketReceiver implements LogEnabled {
 
 	private BlockingQueue<ChannelBuffer> m_queue;
 
-	private int m_queueSize = 200000;
+	private int m_queueSize = 150000;
 
 	private volatile int m_errorCount;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.report.page.network;
 
 public enum JspFile {
-	NETWORK("/jsp/report/network/network.jsp"),
+	NETWORK("/jsp/report/network/metric.jsp"),
 	NETTOPOLOGY("/jsp/report/network/nettopology.jsp"),
 	AGGREGATION("/jsp/report/network/aggregation.jsp");
 	

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -9,7 +9,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		Action action = model.getAction();
 
 		switch (action) {
-		case NETWORK:
+		case METRIC:
 			return JspFile.NETWORK.getPath();
 		case AGGREGATION:
 			return JspFile.AGGREGATION.getPath();

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Action.java
Patch:
@@ -25,6 +25,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	
 	ALERT_REPORT_DETAIL("alertDetail"),
 	
+	ALERT_HISTORY_REPORT_DETAIL("historyAlertDetail"),
+	
 	ALERT_HISTORY_REPORT("historyAlert");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Handler.java
Patch:
@@ -85,7 +85,6 @@ private void buildBugInfo(Model model, Payload payload) {
 	private void buildAlertInfo(Model model, Payload payload) {
 		AlertReport alertReport = queryAlertReport(payload);
 		model.setAlertReport(alertReport);
-		
 		List<com.dianping.cat.home.alertReport.entity.Domain> sortedDoamins = buildSortedAlertInfo(alertReport, model);
 		model.setAlertDomains(sortedDoamins);
 	}
@@ -247,6 +246,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			buildAlertInfo(model, payload);
 			break;
 		case ALERT_REPORT_DETAIL:
+		case ALERT_HISTORY_REPORT_DETAIL:
 			builAlertDetails(model, payload);
 			break;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/JspViewer.java
Patch:
@@ -33,6 +33,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case ALERT_REPORT:
 			return JspFile.ALERT_REPORT.getPath();
 		case ALERT_REPORT_DETAIL:
+		case ALERT_HISTORY_REPORT_DETAIL:
 			return JspFile.ALERT_REPORT_DETAIL.getPath();
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/AlertReportService.java
Patch:
@@ -113,7 +113,7 @@ public AlertReport queryHourlyReport(String domain, Date start, Date end) {
 
 		alertReport.setStartTime(start);
 		alertReport.setEndTime(new Date(end.getTime() - 1));
-
+		
 		return alertReport;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -50,6 +50,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	EXCEPTION_THRESHOLDS("exceptionThresholds"),
 
 	EXCEPTION_THRESHOLD_UPDATE("exceptionThresholdUpdate"),
+	
+	EXCEPTION_THRESHOLD_ADD("exceptionThresholdAdd"),
 
 	EXCEPTION_THRESHOLD_UPDATE_SUBMIT("exceptionThresholdUpdateSubmit"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -68,6 +68,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case EXCEPTION_THRESHOLD_DELETE:
 			return JspFile.EXCEPTION_THRESHOLD.getPath();
 		case EXCEPTION_THRESHOLD_UPDATE:
+		case EXCEPTION_THRESHOLD_ADD:
 			return JspFile.EXCEPTION_THRESHOLD_CONFIG.getPath();
 			// Bug
 		case BUG_CONFIG_UPDATE:

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Action.java
Patch:
@@ -1,9 +1,9 @@
 package com.dianping.cat.report.page.network;
 
 public enum Action implements org.unidal.web.mvc.Action {
-	NETWORK("view"),
+	NETTOPOLOGY("view"),
 	AGGREGATION("aggregation"),
-	NETTOPOLOGY("topo");
+	METRIC("metric");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.report.page.network;
 
 public enum JspFile {
-	NETWORK("/jsp/report/network/network.jsp"),
+	NETWORK("/jsp/report/network/metric.jsp"),
 	NETTOPOLOGY("/jsp/report/network/nettopology.jsp"),
 	AGGREGATION("/jsp/report/network/aggregation.jsp");
 	

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -9,7 +9,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		Action action = model.getAction();
 
 		switch (action) {
-		case NETWORK:
+		case METRIC:
 			return JspFile.NETWORK.getPath();
 		case AGGREGATION:
 			return JspFile.AGGREGATION.getPath();

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Action.java
Patch:
@@ -25,6 +25,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	
 	ALERT_REPORT_DETAIL("alertDetail"),
 	
+	ALERT_HISTORY_REPORT_DETAIL("historyAlertDetail"),
+	
 	ALERT_HISTORY_REPORT("historyAlert");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Handler.java
Patch:
@@ -85,7 +85,6 @@ private void buildBugInfo(Model model, Payload payload) {
 	private void buildAlertInfo(Model model, Payload payload) {
 		AlertReport alertReport = queryAlertReport(payload);
 		model.setAlertReport(alertReport);
-		
 		List<com.dianping.cat.home.alertReport.entity.Domain> sortedDoamins = buildSortedAlertInfo(alertReport, model);
 		model.setAlertDomains(sortedDoamins);
 	}
@@ -247,6 +246,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			buildAlertInfo(model, payload);
 			break;
 		case ALERT_REPORT_DETAIL:
+		case ALERT_HISTORY_REPORT_DETAIL:
 			builAlertDetails(model, payload);
 			break;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/JspViewer.java
Patch:
@@ -33,6 +33,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case ALERT_REPORT:
 			return JspFile.ALERT_REPORT.getPath();
 		case ALERT_REPORT_DETAIL:
+		case ALERT_HISTORY_REPORT_DETAIL:
 			return JspFile.ALERT_REPORT_DETAIL.getPath();
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/AlertReportService.java
Patch:
@@ -113,7 +113,7 @@ public AlertReport queryHourlyReport(String domain, Date start, Date end) {
 
 		alertReport.setStartTime(start);
 		alertReport.setEndTime(new Date(end.getTime() - 1));
-
+		
 		return alertReport;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -50,6 +50,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	EXCEPTION_THRESHOLDS("exceptionThresholds"),
 
 	EXCEPTION_THRESHOLD_UPDATE("exceptionThresholdUpdate"),
+	
+	EXCEPTION_THRESHOLD_ADD("exceptionThresholdAdd"),
 
 	EXCEPTION_THRESHOLD_UPDATE_SUBMIT("exceptionThresholdUpdateSubmit"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -68,6 +68,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case EXCEPTION_THRESHOLD_DELETE:
 			return JspFile.EXCEPTION_THRESHOLD.getPath();
 		case EXCEPTION_THRESHOLD_UPDATE:
+		case EXCEPTION_THRESHOLD_ADD:
 			return JspFile.EXCEPTION_THRESHOLD_CONFIG.getPath();
 			// Bug
 		case BUG_CONFIG_UPDATE:

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -89,7 +89,6 @@ public TopReport getReport(String domain) {
 					transactionReportVisitor.visitTransactionReport(report);
 				} catch (ConcurrentModificationException ce) {
 					Cat.logEvent("ConcurrentModificationException", name, Event.SUCCESS, null);
-					Cat.logError(ce);
 				}
 			} catch (Exception e) {
 				Cat.logError(e);
@@ -112,7 +111,6 @@ public TopReport getReport(String domain) {
 					problemReportVisitor.visitProblemReport(report);
 				} catch (ConcurrentModificationException ce) {
 					Cat.logEvent("ConcurrentModificationException", name, Event.SUCCESS, null);
-					Cat.logError(e);
 				}
 			} catch (Exception e) {
 				Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -85,7 +85,6 @@ public ModelResponse<T> invoke(ModelRequest request) {
 			}
 		} catch (Exception e) {
 			t.setStatus(e);
-			logError(e);
 		} finally {
 			t.complete();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Action.java
Patch:
@@ -1,9 +1,9 @@
 package com.dianping.cat.report.page.network;
 
 public enum Action implements org.unidal.web.mvc.Action {
-	NETWORK("view"),
+	NETTOPOLOGY("view"),
 	AGGREGATION("aggregation"),
-	NETTOPOLOGY("topo");
+	METRIC("metric");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.report.page.network;
 
 public enum JspFile {
-	NETWORK("/jsp/report/network/network.jsp"),
+	NETWORK("/jsp/report/network/metric.jsp"),
 	NETTOPOLOGY("/jsp/report/network/nettopology.jsp"),
 	AGGREGATION("/jsp/report/network/aggregation.jsp");
 	

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -9,7 +9,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		Action action = model.getAction();
 
 		switch (action) {
-		case NETWORK:
+		case METRIC:
 			return JspFile.NETWORK.getPath();
 		case AGGREGATION:
 			return JspFile.AGGREGATION.getPath();

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Action.java
Patch:
@@ -25,6 +25,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	
 	ALERT_REPORT_DETAIL("alertDetail"),
 	
+	ALERT_HISTORY_REPORT_DETAIL("historyAlertDetail"),
+	
 	ALERT_HISTORY_REPORT("historyAlert");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Handler.java
Patch:
@@ -84,15 +84,13 @@ private void buildBugInfo(Model model, Payload payload) {
 
 	private void buildAlertInfo(Model model, Payload payload) {
 		AlertReport alertReport = queryAlertReport(payload);
-		System.out.println("1"+alertReport);
 		model.setAlertReport(alertReport);
 		List<com.dianping.cat.home.alertReport.entity.Domain> sortedDoamins = buildSortedAlertInfo(alertReport, model);
 		model.setAlertDomains(sortedDoamins);
 	}
 	
 	private void builAlertDetails(Model model, Payload payload) {
 		AlertReport alertReport = queryAlertReport(payload);
-		System.out.println("2"+alertReport);
 		List<com.dianping.cat.home.alertReport.entity.Exception> sortedExceptions = buildSortedAlertDetails(alertReport,
 		      payload.getDomain());
 
@@ -248,6 +246,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			buildAlertInfo(model, payload);
 			break;
 		case ALERT_REPORT_DETAIL:
+		case ALERT_HISTORY_REPORT_DETAIL:
 			builAlertDetails(model, payload);
 			break;
 		}
@@ -275,7 +274,6 @@ private HeavyReport queryHeavyReport(Payload payload) {
 	
 	private AlertReport queryAlertReport(Payload payload) {
 		Pair<Date, Date> pair = queryStartEndTime(payload);
-		System.out.println(pair);
 		
 		return m_reportService.queryAlertReport(Constants.CAT, pair.getKey(), pair.getValue());
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/JspViewer.java
Patch:
@@ -33,6 +33,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case ALERT_REPORT:
 			return JspFile.ALERT_REPORT.getPath();
 		case ALERT_REPORT_DETAIL:
+		case ALERT_HISTORY_REPORT_DETAIL:
 			return JspFile.ALERT_REPORT_DETAIL.getPath();
 		}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Action.java
Patch:
@@ -50,6 +50,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	EXCEPTION_THRESHOLDS("exceptionThresholds"),
 
 	EXCEPTION_THRESHOLD_UPDATE("exceptionThresholdUpdate"),
+	
+	EXCEPTION_THRESHOLD_ADD("exceptionThresholdAdd"),
 
 	EXCEPTION_THRESHOLD_UPDATE_SUBMIT("exceptionThresholdUpdateSubmit"),
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspViewer.java
Patch:
@@ -68,6 +68,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case EXCEPTION_THRESHOLD_DELETE:
 			return JspFile.EXCEPTION_THRESHOLD.getPath();
 		case EXCEPTION_THRESHOLD_UPDATE:
+		case EXCEPTION_THRESHOLD_ADD:
 			return JspFile.EXCEPTION_THRESHOLD_CONFIG.getPath();
 			// Bug
 		case BUG_CONFIG_UPDATE:

File: cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java
Patch:
@@ -11,8 +11,6 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://127.0.0.1:3306/cat", "test", "123", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
-
       defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.report._INDEX.getEntityClasses());
       defineDaoComponents(all, com.dianping.cat.home.dal.report._INDEX.getDaoClasses());
 

File: cat-home/src/main/java/com/dianping/cat/report/task/exceptionAlert/ExceptionAlert.java
Patch:
@@ -194,7 +194,7 @@ private void sendAlertForDomain(String domain, List<AlertException> exceptions)
 
 		if (productLine != null) {
 			List<String> emails = m_alertConfig.buildMailReceivers(productLine);
-			List<String> phones = m_alertConfig.buildSMSReceivers(productLine);
+			List<String> phones = m_alertConfig.buildExceptionSMSReceivers(productLine);
 			String title = "[ " + productLine.getId() + ":" + domain + " ] " + "exception alert !";
 			List<String> errorExceptions = new ArrayList<String>();
 			List<String> warnExceptions = new ArrayList<String>();

File: cat-home/src/main/java/com/dianping/cat/report/task/network/NetTopologyReportBuilder.java
Patch:
@@ -41,7 +41,7 @@ public boolean buildHourlyTask(String name, String domain, Date period) {
 
 			reports.put(group, report);
 		}
-		NetGraphSet netGraphSet = m_netGraphBuilder.buildSet(reports);
+		NetGraphSet netGraphSet = m_netGraphBuilder.buildGraphSet(reports);
 		HourlyReport hourlyReport = new HourlyReport();
 
 		hourlyReport.setType(1);

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -103,7 +103,6 @@ private void normalize(Model model, Payload payload) {
 		String product = payload.getProduct();
 
 		if (product == null || product.length() == 0) {
-
 			if ((payload.getGroup() == null || payload.getGroup() == "") && !metricAggregationGroups.isEmpty()) {
 				payload.setAction(Action.NETTOPOLOGY.getName());
 			} else {

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -109,8 +109,6 @@ public List<Component> defineComponents() {
 
 		all.add(C(HeavyReportBuilder.class).req(ReportService.class));
 
-		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetGraphManager.class));
-
 		all.add(C(UtilizationReportBuilder.class).req(ReportService.class, TransactionMergeManager.class,
 		      ServerConfigManager.class, DomainManager.class));
 
@@ -122,7 +120,7 @@ public List<Component> defineComponents() {
 		all.add(C(NetGraphManager.class).req(ServerConfigManager.class, RemoteMetricReportService.class).req(
 		      ReportService.class, NetGraphBuilder.class));
 
-		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetTopologyReportBuilder.class));
+		all.add(C(NetTopologyReportBuilder.class).req(ReportService.class, NetGraphBuilder.class));
 
 		all.add(C(ReportFacade.class)//
 		      .req(TransactionReportBuilder.class, EventReportBuilder.class, ProblemReportBuilder.class,

File: cat-core/src/main/java/com/dianping/cat/service/DefaultReportManager.java
Patch:
@@ -58,7 +58,7 @@ public void cleanup() {
 
 		for (long startTime : startTimes) {
 			if (startTime <= threshold) {
-				m_reports.remove(startTime); 
+				m_reports.remove(startTime);
 			}
 		}
 	}
@@ -197,7 +197,7 @@ public void storeHourlyReports(long startTime, StoragePolicy policy) {
 							}
 						}
 					} finally {
-						bucket.close();
+						m_bucketManager.closeBucket(bucket);
 					}
 				}
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucket.java
Patch:
@@ -24,7 +24,6 @@ public class LocalMessageBucket implements MessageBucket {
 	@Inject
 	private MessageCodec m_codec;
 
-	@Inject
 	private File m_baseDir = new File(".");
 
 	private MessageBlockReader m_reader;

File: cat-home/src/main/java/com/dianping/cat/report/view/UrlNav.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.report.view;
 
 public enum UrlNav {
-	SEVEN_DAY_BEFORE("-1d", -24 * 7),
+	SEVEN_DAY_BEFORE("-7d", -24 * 7),
 
 	ONE_DAY_BEFORE("-1d", -24),
 
@@ -15,7 +15,7 @@ public enum UrlNav {
 
 	ONE_DAY_LATER("+1d", 24),
 
-	SEVEN_DAY_LATER("+1d", 24 * 7);
+	SEVEN_DAY_LATER("+7d", 24 * 7);
 
 	private int m_hours;
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -40,6 +40,7 @@ public boolean createHourlyTask(StateReport report) {
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_SERVICE, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_BUG, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_HEAVY, TaskProlicy.ALL);
+		m_taskManager.createTask(startTime, domain, Constants.REPORT_ALERT, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_UTILIZATION, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_NET_TOPOLOGY, TaskProlicy.HOULY);
 		return m_taskManager.createTask(startTime, domain, StateAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -25,4 +25,6 @@ public class Constants {
 	
 	public static final String REPORT_NET_TOPOLOGY = "NetTopology";
 
+	public static final String REPORT_ALERT = "alert";
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -99,16 +99,16 @@ private void normalize(Model model, Payload payload) {
 				metricAggregationGroupList.add(entry.getValue());
 			}
 		}
-		String poduct = payload.getProduct();
 
-		if (poduct == null || poduct.length() == 0) {
+		String product = payload.getProduct();
+
+		if (product == null || product.length() == 0) {
 
 			if ((payload.getGroup() == null || payload.getGroup() == "") && !metricAggregationGroups.isEmpty()) {
 				payload.setAction(Action.NETTOPOLOGY.getName());
 			} else {
 				payload.setAction(Action.AGGREGATION.getName());
 			}
-
 		}
 
 		model.setMetricAggregationGroup(metricAggregationGroupList);

File: cat-home/src/main/java/com/dianping/cat/report/service/ReportService.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.core.dal.HourlyReport;
 import com.dianping.cat.core.dal.MonthlyReport;
 import com.dianping.cat.core.dal.WeeklyReport;
+import com.dianping.cat.home.alertReport.entity.AlertReport;
 import com.dianping.cat.home.bug.entity.BugReport;
 import com.dianping.cat.home.heavy.entity.HeavyReport;
 import com.dianping.cat.home.nettopo.entity.NetGraphSet;
@@ -46,6 +47,8 @@ public interface ReportService {
 	public HeartbeatReport queryHeartbeatReport(String domain, Date start, Date end);
 
 	public HeavyReport queryHeavyReport(String domain, Date start, Date end);
+	
+	public AlertReport queryAlertReport(String domain, Date start, Date end);
 
 	public MatrixReport queryMatrixReport(String domain, Date start, Date end);
 

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/BugReportMerger.java
Patch:
@@ -30,7 +30,7 @@ protected void mergeDomain(Domain old, Domain domain) {
 	@Override
 	protected void mergeExceptionItem(ExceptionItem old, ExceptionItem exceptionItem) {
 		old.setCount(old.getCount() + exceptionItem.getCount());
-		old.getMessages().addAll(exceptionItem.getMessages());
+//		old.getMessages().addAll(exceptionItem.getMessages());
 
 		List<String> oldMessages = old.getMessages();
 		List<String> newMessages = exceptionItem.getMessages();

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/AlertConfig.java
Patch:
@@ -19,8 +19,9 @@ public class AlertConfig {
 	public List<String> buildMailReceivers(ProductLine productLine) {
 		List<String> emails = new ArrayList<String>();
 		String emailList = productLine.getEmail();
-
+		
 		emails.add("yong.you@dianping.com");
+		emails.add("jialin.sun@dianping.com");
 		emails.addAll(Splitters.by(",").noEmptyItem().split(emailList));
 		return emails;
 	}
@@ -38,6 +39,7 @@ public List<String> buildSMSReceivers(ProductLine productLine) {
 
 		phones.add("18616671676");
 		phones.add("13858086694");
+		phones.add("15201789489");
 		return phones;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -156,7 +156,6 @@ public Direction matches(File base, String name) {
 				LocalMessageBucket bucket = m_buckets.get(dataFile);
 
 				if (bucket != null) {
-					// flush the buffer if have data
 					MessageBlock block = bucket.flushBlock();
 
 					if (block != null) {
@@ -282,6 +281,7 @@ public Direction matches(File base, String path) {
 						m_logger.error(e.getMessage(), e);
 					} finally {
 						m_buckets.remove(path);
+						release(bucket);
 					}
 				} else {
 					try {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -40,6 +40,7 @@ public boolean createHourlyTask(StateReport report) {
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_SERVICE, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_BUG, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_HEAVY, TaskProlicy.ALL);
+		m_taskManager.createTask(startTime, domain, Constants.REPORT_ALERT, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_UTILIZATION, TaskProlicy.ALL);
 		return m_taskManager.createTask(startTime, domain, StateAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
 	}

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -22,5 +22,7 @@ public class Constants {
 	public static final String REPORT_UTILIZATION = "utilization";
 
 	public static final String REPORT_HEAVY = "heavy";
+	
+	public static final String REPORT_ALERT = "alert";
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/service/ReportService.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.core.dal.HourlyReport;
 import com.dianping.cat.core.dal.MonthlyReport;
 import com.dianping.cat.core.dal.WeeklyReport;
+import com.dianping.cat.home.alertReport.entity.AlertReport;
 import com.dianping.cat.home.bug.entity.BugReport;
 import com.dianping.cat.home.heavy.entity.HeavyReport;
 import com.dianping.cat.home.service.entity.ServiceReport;
@@ -45,6 +46,8 @@ public interface ReportService {
 	public HeartbeatReport queryHeartbeatReport(String domain, Date start, Date end);
 
 	public HeavyReport queryHeavyReport(String domain, Date start, Date end);
+	
+	public AlertReport queryAlertReport(String domain, Date start, Date end);
 
 	public MatrixReport queryMatrixReport(String domain, Date start, Date end);
 

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/BugReportMerger.java
Patch:
@@ -30,7 +30,7 @@ protected void mergeDomain(Domain old, Domain domain) {
 	@Override
 	protected void mergeExceptionItem(ExceptionItem old, ExceptionItem exceptionItem) {
 		old.setCount(old.getCount() + exceptionItem.getCount());
-		old.getMessages().addAll(exceptionItem.getMessages());
+//		old.getMessages().addAll(exceptionItem.getMessages());
 
 		List<String> oldMessages = old.getMessages();
 		List<String> newMessages = exceptionItem.getMessages();

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/AlertConfig.java
Patch:
@@ -19,8 +19,9 @@ public class AlertConfig {
 	public List<String> buildMailReceivers(ProductLine productLine) {
 		List<String> emails = new ArrayList<String>();
 		String emailList = productLine.getEmail();
-
+		
 		emails.add("yong.you@dianping.com");
+		emails.add("jialin.sun@dianping.com");
 		emails.addAll(Splitters.by(",").noEmptyItem().split(emailList));
 		return emails;
 	}
@@ -38,6 +39,7 @@ public List<String> buildSMSReceivers(ProductLine productLine) {
 
 		phones.add("18616671676");
 		phones.add("13858086694");
+		phones.add("15201789489");
 		return phones;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/service/DefaultReportManager.java
Patch:
@@ -58,7 +58,7 @@ public void cleanup() {
 
 		for (long startTime : startTimes) {
 			if (startTime <= threshold) {
-				m_reports.remove(startTime); 
+				m_reports.remove(startTime);
 			}
 		}
 	}
@@ -197,7 +197,7 @@ public void storeHourlyReports(long startTime, StoragePolicy policy) {
 							}
 						}
 					} finally {
-						bucket.close();
+						m_bucketManager.closeBucket(bucket);
 					}
 				}
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucket.java
Patch:
@@ -24,7 +24,6 @@ public class LocalMessageBucket implements MessageBucket {
 	@Inject
 	private MessageCodec m_codec;
 
-	@Inject
 	private File m_baseDir = new File(".");
 
 	private MessageBlockReader m_reader;

File: cat-home/src/main/java/com/dianping/cat/system/config/ExceptionThresholdConfigManager.java
Patch:
@@ -92,9 +92,6 @@ public ExceptionLimit queryDomainExceptionLimit(String domain, String exceptionN
 		}
 		if (domainConfig != null) {
 			result = domainConfig.getExceptionLimits().get(exceptionName);
-			if(result == null) {
-				result = domainConfig.getExceptionLimits().get(TOTAL_STRING);
-			}
 		}
 		return result;
 	}

File: cat-client/src/main/java/com/dianping/cat/message/internal/AbstractMessage.java
Patch:
@@ -131,6 +131,7 @@ public String toString() {
 		ChannelBuffer buf = ChannelBuffers.dynamicBuffer();
 
 		codec.encodeMessage(this, buf);
+		codec.reset();
 		return buf.toString(Charset.forName("utf-8"));
 	}
 }

File: cat-client/src/main/java/com/dianping/cat/message/spi/internal/DefaultMessageTree.java
Patch:
@@ -33,7 +33,7 @@ public class DefaultMessageTree implements MessageTree {
 	private String m_threadId;
 
 	private String m_threadName;
-	
+
 	@Override
 	public MessageTree copy() {
 		MessageTree tree = new DefaultMessageTree();
@@ -184,6 +184,7 @@ public String toString() {
 
 		codec.encode(this, buf);
 		buf.readInt(); // get rid of length
+		codec.reset();
 		return buf.toString(Charset.forName("utf-8"));
 	}
 }

File: cat-hadoop/src/test/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucketManagerTest.java
Patch:
@@ -69,8 +69,6 @@ public void testReadWrite() throws Exception {
 			localManager.storeMessage(tree,id);
 		}
 
-		localManager.close();
-
 		for (int i = 0; i < num; i++) {
 			String messageId = "source-7f000001-373203-" + i;
 			MessageTree tree = hdfsManager.loadMessage(messageId);

File: cat-home/src/main/java/com/dianping/cat/system/tool/DefaultMailImpl.java
Patch:
@@ -116,8 +116,7 @@ public boolean sendEmailInternal(String title, String content, List<String> emai
 				content = content.replaceAll(",", " ");
 
 				String value = title + "," + content;
-//				URL url = new URL("http://10.1.1.51/mail.v?type=1500&key=title,body&re=yong.you@dianping.com&to=" + email);
-				URL url = new URL("http://10.1.1.51/mail.v?type=1500&key=title,body&re=jialin.sun@dianping.com&to=" + email);
+				URL url = new URL("http://10.1.1.51/mail.v?type=1500&key=title,body&re=yong.you@dianping.com&to=" + email);
 				URLConnection conn = url.openConnection();
 
 				conn.setDoOutput(true);

File: cat-client/src/main/java/com/dianping/cat/message/internal/AbstractMessage.java
Patch:
@@ -131,6 +131,7 @@ public String toString() {
 		ChannelBuffer buf = ChannelBuffers.dynamicBuffer();
 
 		codec.encodeMessage(this, buf);
+		codec.reset();
 		return buf.toString(Charset.forName("utf-8"));
 	}
 }

File: cat-client/src/main/java/com/dianping/cat/message/spi/internal/DefaultMessageTree.java
Patch:
@@ -33,7 +33,7 @@ public class DefaultMessageTree implements MessageTree {
 	private String m_threadId;
 
 	private String m_threadName;
-	
+
 	@Override
 	public MessageTree copy() {
 		MessageTree tree = new DefaultMessageTree();
@@ -184,6 +184,7 @@ public String toString() {
 
 		codec.encode(this, buf);
 		buf.readInt(); // get rid of length
+		codec.reset();
 		return buf.toString(Charset.forName("utf-8"));
 	}
 }

File: cat-hadoop/src/test/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucketManagerTest.java
Patch:
@@ -69,8 +69,6 @@ public void testReadWrite() throws Exception {
 			localManager.storeMessage(tree,id);
 		}
 
-		localManager.close();
-
 		for (int i = 0; i < num; i++) {
 			String messageId = "source-7f000001-373203-" + i;
 			MessageTree tree = hdfsManager.loadMessage(messageId);

File: cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java
Patch:
@@ -100,7 +100,7 @@ public void initialize(String domain) throws IOException {
 			long timestamp = m_byteBuffer.getLong();
 
 			if (timestamp == m_lastTimestamp) { // for same hour
-				m_index = index;
+				m_index = index + 10000;
 			} else {
 				m_index = 0;
 			}

File: cat-client/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -500,7 +500,7 @@ public static class Context {
 
 		private char[] m_data;
 
-		private int max = 16384 * 1024;
+		private int max = 16384 * 512;
 
 		public Context() {
 			m_data = new char[16384];

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -275,8 +275,9 @@ public Direction matches(File base, String path) {
 						t.setStatus(e);
 						Cat.logError(e);
 						m_logger.error(e.getMessage(), e);
+					} finally {
+						m_buckets.remove(path);
 					}
-					m_buckets.remove(path);
 				} else {
 					try {
 						moveFile(path);

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketTest.java
Patch:
@@ -107,7 +107,6 @@ private MessageId buildChannelBuffer(MessageIdFactory factory, MessageCodec code
 		return id;
 	}
 
-	@Test
 	public void testManyReadWrite() throws Exception {
 		setup();
 

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -55,7 +55,7 @@ public class MetricAlert implements Task, LogEnabled {
 
 	private static final long DURATION = TimeUtil.ONE_MINUTE;
 
-	private static final int DATA_CHECK_MINUTE = 2;
+	private static final int DATA_CHECK_MINUTE = 3;
 
 	private static final int DATA_AREADY_MINUTE = 1;
 

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -22,5 +22,7 @@ public class Constants {
 	public static final String REPORT_UTILIZATION = "utilization";
 
 	public static final String REPORT_HEAVY = "heavy";
+	
+	public static final String REPORT_ALERT = "alert";
 
 }

File: cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java
Patch:
@@ -100,7 +100,7 @@ public void initialize(String domain) throws IOException {
 			long timestamp = m_byteBuffer.getLong();
 
 			if (timestamp == m_lastTimestamp) { // for same hour
-				m_index = index;
+				m_index = index + 10000;
 			} else {
 				m_index = 0;
 			}

File: cat-client/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -500,7 +500,7 @@ public static class Context {
 
 		private char[] m_data;
 
-		private int max = 16384 * 1024;
+		private int max = 16384 * 512;
 
 		public Context() {
 			m_data = new char[16384];

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -275,8 +275,9 @@ public Direction matches(File base, String path) {
 						t.setStatus(e);
 						Cat.logError(e);
 						m_logger.error(e.getMessage(), e);
+					} finally {
+						m_buckets.remove(path);
 					}
-					m_buckets.remove(path);
 				} else {
 					try {
 						moveFile(path);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -55,7 +55,7 @@ public class MetricAlert implements Task, LogEnabled {
 
 	private static final long DURATION = TimeUtil.ONE_MINUTE;
 
-	private static final int DATA_CHECK_MINUTE = 2;
+	private static final int DATA_CHECK_MINUTE = 3;
 
 	private static final int DATA_AREADY_MINUTE = 1;
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucket.java
Patch:
@@ -150,7 +150,7 @@ public void setMessageCodec(MessageCodec codec) {
 		m_codec = codec;
 	}
 
-	protected MessageBlock storeMessage(final ChannelBuffer buf, final MessageId id) throws IOException {
+	protected synchronized MessageBlock storeMessage(final ChannelBuffer buf, final MessageId id) throws IOException {
 		int size = buf.readableBytes();
 
 		m_dirty.set(true);

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Payload.java
Patch:
@@ -77,7 +77,7 @@ public boolean isRefresh() {
 	}
 
 	public void setAction(String action) {
-		m_action = Action.getByName(action, Action.NETWORK);
+		m_action = Action.getByName(action, Action.NETTOPOLOGY);
 	}
 
 	public void setFrequency(int frequency) {
@@ -112,7 +112,7 @@ public void setHideNav(boolean hideNav) {
 	@Override
 	public void validate(ActionContext<?> ctx) {
 		if (m_action == null) {
-			m_action = Action.NETWORK;
+			m_action = Action.NETTOPOLOGY;
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/network/nettopology/DomOp.java
Patch:
@@ -8,6 +8,7 @@
 import com.dianping.cat.Cat;
 
 public class DomOp {
+	
 	private Node node;
 	
 	public DomOp(Node node) {

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -417,7 +417,7 @@ private void gzipMessage(MessageItem item, boolean monitor) {
 			Transaction t = null;
 
 			if (monitor) {
-				t = Cat.newTransaction("Gzip", String.valueOf(m_index));
+				t = Cat.newTransaction("Gzip", "Thread-" + m_index);
 				t.setStatus(Transaction.SUCCESS);
 			}
 			try {

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/UploaderAndCleaner.java
Patch:
@@ -83,7 +83,7 @@ private FSDataOutputStream makeHdfsOutputStream(String path) throws IOException
 		try {
 			out = fs.create(file);
 		} catch (AlreadyBeingCreatedException e) {
-			fs.deleteOnExit(file);
+			fs.delete(file, false);
 
 			out = fs.create(file);
 		}

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -425,6 +425,7 @@ private void gzipMessage(MessageItem item) {
 					bucket.setBaseDir(m_baseDir);
 					bucket.initialize(dataFile);
 					m_buckets.putIfAbsent(dataFile, bucket);
+					bucket = m_buckets.get(dataFile);
 				}
 
 				DefaultMessageTree tree = (DefaultMessageTree) item.getTree();

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Payload.java
Patch:
@@ -77,7 +77,7 @@ public boolean isRefresh() {
 	}
 
 	public void setAction(String action) {
-		m_action = Action.getByName(action, Action.NETWORK);
+		m_action = Action.getByName(action, Action.NETTOPOLOGY);
 	}
 
 	public void setFrequency(int frequency) {
@@ -112,7 +112,7 @@ public void setHideNav(boolean hideNav) {
 	@Override
 	public void validate(ActionContext<?> ctx) {
 		if (m_action == null) {
-			m_action = Action.NETWORK;
+			m_action = Action.NETTOPOLOGY;
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Payload.java
Patch:
@@ -77,7 +77,7 @@ public boolean isRefresh() {
 	}
 
 	public void setAction(String action) {
-		m_action = Action.getByName(action, Action.NETTOPOLOGY);
+		m_action = Action.getByName(action, Action.NETWORK);
 	}
 
 	public void setFrequency(int frequency) {
@@ -112,7 +112,7 @@ public void setHideNav(boolean hideNav) {
 	@Override
 	public void validate(ActionContext<?> ctx) {
 		if (m_action == null) {
-			m_action = Action.NETTOPOLOGY;
+			m_action = Action.NETWORK;
 		}
 	}
 }

File: cat-core/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -16,7 +16,6 @@
 import com.dianping.cat.service.ModelRequestTest;
 import com.dianping.cat.service.ModelResponseTest;
 import com.dianping.cat.statistic.ServerStatisticManagerTest;
-import com.dianping.cat.storage.dump.LocalMessageBucketManagerTest;
 import com.dianping.cat.storage.dump.LocalMessageBucketTest;
 import com.dianping.cat.storage.dump.MessageBlockTest;
 import com.dianping.cat.task.TaskManagerTest;
@@ -31,8 +30,6 @@
 /* .storage.dump */
 LocalMessageBucketTest.class,
 
-LocalMessageBucketManagerTest.class,
-
 MessageBlockTest.class,
 
 /* .task */

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -47,7 +47,7 @@ public class Handler implements PageHandler<Context> {
 	private GraphCreator m_graphCreator;
 
 	@Inject
-	private NetGraphManager m_netGraphManager = new NetGraphManager();
+	private NetGraphManager m_netGraphManager;
 
 	@Override
 	@PayloadMeta(Payload.class)

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Payload.java
Patch:
@@ -77,7 +77,7 @@ public boolean isRefresh() {
 	}
 
 	public void setAction(String action) {
-		m_action = Action.getByName(action, Action.NETTOPOLOGY);
+		m_action = Action.getByName(action, Action.NETWORK);
 	}
 
 	public void setFrequency(int frequency) {
@@ -112,7 +112,7 @@ public void setHideNav(boolean hideNav) {
 	@Override
 	public void validate(ActionContext<?> ctx) {
 		if (m_action == null) {
-			m_action = Action.NETTOPOLOGY;
+			m_action = Action.NETWORK;
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -12,7 +12,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case NETWORK:
 			return JspFile.NETWORK.getPath();
 		case AGGREGATION:
-			return JspFile.DASHBOARD.getPath();
+			return JspFile.AGGREGATION.getPath();
 		case NETTOPOLOGY:
 			return JspFile.NETTOPOLOGY.getPath();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum JspFile {
 	NETWORK("/jsp/report/network/network.jsp"),
-	NETTOPOLOGY("/jsp/report/network/nettopology.jsp");
+	NETTOPOLOGY("/jsp/report/network/nettopology.jsp"),
 	AGGREGATION("/jsp/report/network/aggregation.jsp");
 	
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -23,7 +23,6 @@
 import com.dianping.cat.report.chart.GraphCreator;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PayloadNormalizer;
-import com.dianping.cat.report.page.metric.Action;
 import com.dianping.cat.system.config.MetricAggregationConfigManager;
 
 public class Handler implements PageHandler<Context> {
@@ -96,7 +95,7 @@ private void normalize(Model model, Payload payload) {
 		String poduct = payload.getProduct();
 		
 		if (poduct == null || poduct.length() == 0) {
-			payload.setAction(Action.DASHBOARD.getName());
+			payload.setAction(Action.AGGREGATION.getName());
 
 			if (payload.getGroup() == null & !metricAggregationGroups.isEmpty()) {
 				String metricAggregationGroupId = metricAggregationGroupList.get(0).getId();

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum JspFile {
 	NETWORK("/jsp/report/network/network.jsp"),
-	DASHBOARD("/jsp/report/network/dashboard.jsp");
+	AGGREGATION("/jsp/report/network/aggregation.jsp");
 	
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -12,7 +12,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case NETWORK:
 			return JspFile.NETWORK.getPath();
 		case AGGREGATION:
-			return JspFile.DASHBOARD.getPath();
+			return JspFile.AGGREGATION.getPath();
 		}
 
 		throw new RuntimeException("Unknown action: " + action);

File: cat-home/src/main/java/com/dianping/cat/report/page/network/Handler.java
Patch:
@@ -23,7 +23,6 @@
 import com.dianping.cat.report.chart.GraphCreator;
 import com.dianping.cat.report.page.LineChart;
 import com.dianping.cat.report.page.PayloadNormalizer;
-import com.dianping.cat.report.page.metric.Action;
 import com.dianping.cat.system.config.MetricAggregationConfigManager;
 
 public class Handler implements PageHandler<Context> {
@@ -96,7 +95,7 @@ private void normalize(Model model, Payload payload) {
 		String poduct = payload.getProduct();
 		
 		if (poduct == null || poduct.length() == 0) {
-			payload.setAction(Action.DASHBOARD.getName());
+			payload.setAction(Action.AGGREGATION.getName());
 
 			if (payload.getGroup() == null & !metricAggregationGroups.isEmpty()) {
 				String metricAggregationGroupId = metricAggregationGroupList.get(0).getId();

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum JspFile {
 	NETWORK("/jsp/report/network/network.jsp"),
-	DASHBOARD("/jsp/report/network/aggregation.jsp");
+	AGGREGATION("/jsp/report/network/aggregation.jsp");
 	
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
Patch:
@@ -12,7 +12,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 		case NETWORK:
 			return JspFile.NETWORK.getPath();
 		case AGGREGATION:
-			return JspFile.DASHBOARD.getPath();
+			return JspFile.AGGREGATION.getPath();
 		}
 
 		throw new RuntimeException("Unknown action: " + action);

File: cat-home/src/main/java/com/dianping/cat/report/page/network/JspFile.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum JspFile {
 	NETWORK("/jsp/report/network/network.jsp"),
-	DASHBOARD("/jsp/report/network/dashboard.jsp");
+	DASHBOARD("/jsp/report/network/aggregation.jsp");
 	
 	private String m_path;
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -88,7 +88,7 @@ public TopReport getReport(String domain) {
 
 					transactionReportVisitor.visitTransactionReport(report);
 				} catch (ConcurrentModificationException ce) {
-					Cat.logEvent("ConcurrentModificationException", domain, Event.SUCCESS, null);
+					Cat.logEvent("ConcurrentModificationException", name, Event.SUCCESS, null);
 					Cat.logError(ce);
 				}
 			} catch (Exception e) {
@@ -111,7 +111,7 @@ public TopReport getReport(String domain) {
 
 					problemReportVisitor.visitProblemReport(report);
 				} catch (ConcurrentModificationException ce) {
-					Cat.logEvent("ConcurrentModificationException", domain, Event.SUCCESS, null);
+					Cat.logEvent("ConcurrentModificationException", name, Event.SUCCESS, null);
 					Cat.logError(e);
 				}
 			} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/report/chart/MetricDataFetcher.java
Patch:
@@ -9,6 +9,4 @@
 public interface MetricDataFetcher {
 	public Map<String, double[]> buildGraphData(MetricReport report, List<MetricItemConfig> metricConfigs);
 	
-	public Map<String,double[]> buildAllData(MetricReport report);
-
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -96,6 +96,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 			Metric metric = Cat.getProducer().newMetric(group, key);
 			DefaultMetric defaultMetric = (DefaultMetric) metric;
+			
 			if (defaultMetric != null) {
 				defaultMetric.setTimestamp(time);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/AlertInfo.java
Patch:
@@ -10,17 +10,17 @@
 
 public class AlertInfo {
 
-	private ConcurrentHashMap<MetricItemConfig, Long> m_configs = new ConcurrentHashMap<MetricItemConfig, Long>();
+	private ConcurrentHashMap<MetricItemConfig, Long> m_alerts = new ConcurrentHashMap<MetricItemConfig, Long>();
 
 	public void addMetric(MetricItemConfig config, long value) {
-		m_configs.putIfAbsent(config, value);
+		m_alerts.putIfAbsent(config, value);
 	}
 
 	public List<MetricItemConfig> getLastestAlarm(int minute) {
 		List<MetricItemConfig> config = new ArrayList<MetricItemConfig>();
 		long currentTimeMillis = System.currentTimeMillis();
 
-		for (Entry<MetricItemConfig, Long> entry : m_configs.entrySet()) {
+		for (Entry<MetricItemConfig, Long> entry : m_alerts.entrySet()) {
 			Long value = entry.getValue();
 
 			if (currentTimeMillis - value < TimeUtil.ONE_MINUTE * minute) {

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateShow.java
Patch:
@@ -61,7 +61,9 @@ public Map<String, ProcessDomain> getProcessDomainMap() {
 	public List<ProcessDomain> getProcessDomains() {
 		ProcessDomain domain = m_processDomains.get("PhoenixAgent");
 
-		domain.getIps().clear();
+		if (domain != null) {
+			domain.getIps().clear();
+		}
 
 		List<ProcessDomain> temp = new ArrayList<ProcessDomain>(m_processDomains.values());
 		if (m_sortType == null) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -76,7 +76,7 @@ public TopReport getReport(String domain) {
 		for (String name : domains) {
 			try {
 				if (m_serverConfigManager.validateDomain(name) && !name.equals(Constants.ALL)) {
-					TransactionReport report = m_transactionAnalyzer.getReport(name);
+					TransactionReport report = m_transactionAnalyzer.getRawReport(name);
 
 					transactionReportVisitor.visitTransactionReport(report);
 				}

File: cat-home/src/main/java/com/dianping/cat/report/page/monitor/Handler.java
Patch:
@@ -96,6 +96,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 			Metric metric = Cat.getProducer().newMetric(group, key);
 			DefaultMetric defaultMetric = (DefaultMetric) metric;
+			
 			if (defaultMetric != null) {
 				defaultMetric.setTimestamp(time);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/AlertInfo.java
Patch:
@@ -10,17 +10,17 @@
 
 public class AlertInfo {
 
-	private ConcurrentHashMap<MetricItemConfig, Long> m_configs = new ConcurrentHashMap<MetricItemConfig, Long>();
+	private ConcurrentHashMap<MetricItemConfig, Long> m_alerts = new ConcurrentHashMap<MetricItemConfig, Long>();
 
 	public void addMetric(MetricItemConfig config, long value) {
-		m_configs.putIfAbsent(config, value);
+		m_alerts.putIfAbsent(config, value);
 	}
 
 	public List<MetricItemConfig> getLastestAlarm(int minute) {
 		List<MetricItemConfig> config = new ArrayList<MetricItemConfig>();
 		long currentTimeMillis = System.currentTimeMillis();
 
-		for (Entry<MetricItemConfig, Long> entry : m_configs.entrySet()) {
+		for (Entry<MetricItemConfig, Long> entry : m_alerts.entrySet()) {
 			Long value = entry.getValue();
 
 			if (currentTimeMillis - value < TimeUtil.ONE_MINUTE * minute) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -37,7 +37,6 @@ public boolean createHourlyTask(StateReport report) {
 		Date startTime = report.getStartTime();
 		String domain = report.getDomain();
 
-		m_taskManager.createTask(startTime, domain, Constants.REPORT_ABTEST, TaskProlicy.HOULY);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_SERVICE, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_BUG, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_HEAVY, TaskProlicy.ALL);

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -23,6 +23,4 @@ public class Constants {
 
 	public static final String REPORT_HEAVY = "heavy";
 
-	public static final String REPORT_ABTEST = "abtest";
-
 }

File: cat-core/src/main/java/com/dianping/cat/analysis/MessageAnalyzer.java
Patch:
@@ -3,6 +3,8 @@
 import com.dianping.cat.message.spi.MessageQueue;
 
 public interface MessageAnalyzer {
+	public boolean isRawAnalyzer();
+	
 	public void analyze(MessageQueue queue);
 
 	public void destroy();

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -63,7 +63,7 @@ public class TcpSocketReceiver implements LogEnabled {
 
 	private BlockingQueue<ChannelBuffer> m_queue;
 
-	private int m_queueSize = 300000;
+	private int m_queueSize = 100000;
 
 	private volatile int m_errorCount;
 

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -65,6 +65,7 @@ public void close() throws IOException {
 			m_tagToIds.clear();
 			m_writeDataFile.close();
 			m_writeIndexFile.close();
+			m_readDataFile.close();
 		} finally {
 			m_writeLock.unlock();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/HistoricalCrossService.java
Patch:
@@ -53,7 +53,7 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/LocalCrossService.java
Patch:
@@ -49,7 +49,7 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/HistoricalDependencyService.java
Patch:
@@ -54,7 +54,7 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/LocalDependencyService.java
Patch:
@@ -49,7 +49,7 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -54,7 +54,7 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/LocalEventService.java
Patch:
@@ -50,7 +50,7 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/HistoricalHeartbeatService.java
Patch:
@@ -53,7 +53,7 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/LocalHeartbeatService.java
Patch:
@@ -48,7 +48,7 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/HistoricalMatrixService.java
Patch:
@@ -53,7 +53,7 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/LocalMatrixService.java
Patch:
@@ -49,7 +49,7 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -53,7 +53,7 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/LocalMetricService.java
Patch:
@@ -48,7 +48,7 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -54,7 +54,7 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/LocalProblemService.java
Patch:
@@ -50,7 +50,7 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -4,6 +4,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.analysis.AbstractMessageAnalyzer;
 import com.dianping.cat.analysis.MessageAnalyzer;
@@ -69,7 +70,7 @@ public void initialize() throws InitializationException {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = Cat.newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			ModelPeriod period = request.getPeriod();
@@ -86,13 +87,12 @@ public ModelResponse<T> invoke(ModelRequest request) {
 				t.setStatus("NoReportFound");
 			}
 		} catch (Exception e) {
-			logError(e);
+			Cat.logError(e);
 			t.setStatus(e);
 			response.setException(e);
 		} finally {
 			t.complete();
 		}
-
 		return response;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/HistoricalStateService.java
Patch:
@@ -53,7 +53,7 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -48,7 +48,7 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/HistoricalTopService.java
Patch:
@@ -53,7 +53,7 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/LocalTopService.java
Patch:
@@ -48,7 +48,7 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -54,7 +54,7 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -48,7 +48,7 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/AlertConfig.java
Patch:
@@ -54,7 +54,7 @@ public Pair<Boolean, String> checkData(MetricItemConfig config, double[] value,
 			decreasePercent = 50;
 		}
 		if (decreaseValue == 0) {
-			decreaseValue = 50;
+			decreaseValue = 100;
 		}
 
 		for (int i = 0; i < length; i++) {
@@ -77,7 +77,6 @@ public Pair<Boolean, String> checkData(MetricItemConfig config, double[] value,
 		StringBuilder sb = new StringBuilder();
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
 
-		sb.append("[告警类型:").append(type).append("] ");
 		sb.append("[基线值:").append(baselines.toString()).append("] ");
 		sb.append("[实际值:").append(values.toString()).append("] ");
 		sb.append("[下降:").append(m_df.format(percent)).append("%").append("]");

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/RemoteMetricReportService.java
Patch:
@@ -11,6 +11,7 @@
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Semaphore;
 import java.util.concurrent.TimeUnit;
+import java.util.zip.GZIPInputStream;
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
@@ -108,7 +109,6 @@ public void run() {
 						t.setStatus(e);
 					} finally {
 						semaphore.release();
-						Cat.reset();
 					}
 				}
 			});
@@ -147,7 +147,8 @@ public MetricReport invoke(ModelRequest request, Pair<String, Integer> hostPorts
 			t.addData(url.toString());
 
 			InputStream in = Urls.forIO().connectTimeout(300).readTimeout(3000).openStream(url.toExternalForm());
-			String xml = Files.forIO().readFrom(in, "utf-8");
+			GZIPInputStream gzip = new GZIPInputStream(in);
+			String xml = Files.forIO().readFrom(gzip, "utf-8");
 			int len = xml == null ? 0 : xml.length();
 
 			t.addData("length", len);

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -4,8 +4,8 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
-import java.util.HashMap;
 import java.util.HashSet;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
@@ -352,7 +352,7 @@ private boolean metricConfigAddSubmit(Payload payload, Model model) {
 
 	private void metricConfigList(Payload payload, Model model) {
 		Map<String, ProductLine> productLines = m_productLineConfigManger.queryAllProductLines();
-		Map<ProductLine, List<MetricItemConfig>> metricConfigs = new HashMap<ProductLine, List<MetricItemConfig>>();
+		Map<ProductLine, List<MetricItemConfig>> metricConfigs = new LinkedHashMap<ProductLine, List<MetricItemConfig>>();
 		Set<String> exists = new HashSet<String>();
 
 		for (Entry<String, ProductLine> entry : productLines.entrySet()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -4,6 +4,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.analysis.AbstractMessageAnalyzer;
 import com.dianping.cat.analysis.MessageAnalyzer;
@@ -69,7 +70,7 @@ public void initialize() throws InitializationException {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = Cat.newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			ModelPeriod period = request.getPeriod();
@@ -86,13 +87,12 @@ public ModelResponse<T> invoke(ModelRequest request) {
 				t.setStatus("NoReportFound");
 			}
 		} catch (Exception e) {
-			logError(e);
+			Cat.logError(e);
 			t.setStatus(e);
 			response.setException(e);
 		} finally {
 			t.complete();
 		}
-
 		return response;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -83,10 +83,9 @@ public ModelResponse<T> invoke(ModelRequest request) {
 			} else {
 				t.setStatus("NoReport");
 			}
-
 		} catch (Exception e) {
 			t.setStatus(e);
-			response.setException(e);
+			logError(e);
 		} finally {
 			t.complete();
 		}

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -66,7 +66,7 @@ public class LocalMessageBucketManager extends ContainerHolder implements Messag
 
 	private int m_gzipThreads = 13;
 
-	private int m_gzipMessageSize = 5000;
+	private int m_gzipMessageSize = 10000;
 
 	private int m_messageBlockSize = 10000;
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricAnalyzer.java
Patch:
@@ -175,7 +175,7 @@ private ConfigItem parseValue(String status, String data) {
 
 			config.setCount(Integer.parseInt(datas[0]));
 			config.setValue(Double.parseDouble(datas[1]));
-			config.setShowCount(true);
+			config.setShowCount(false);
 			config.setShowSum(true);
 		} else {
 			return null;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -233,7 +233,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 					httpResponse.setContentType("application/xml;charset=utf-8");
 					httpResponse.addHeader("Content-Encoding", "gzip");
 					outputStream.write(compress);
-					outputStream.close();
 				}
 			}
 		} catch (Throwable e) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -66,6 +66,7 @@ public void doCheckpoint(boolean atEnd) {
 			checkpointAsyc(startTime);
 			m_logger.info("Old version domains:" + m_oldVersionDomains);
 			m_logger.info("Error timestamp:" + m_errorTimestampDomains);
+			t.setStatus(Transaction.SUCCESS);
 		} catch (Exception e) {
 			t.setStatus(e);
 		} finally {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -63,7 +63,7 @@ public boolean isRawAnalyzer() {
 	}
 
 	@Override
-	public synchronized TopReport getReport(String domain) {
+	public TopReport getReport(String domain) {
 		Set<String> domains = m_transactionAnalyzer.getDomains();
 		TopReport topReport = new TopReport(Constants.CAT);
 
@@ -96,11 +96,11 @@ public synchronized TopReport getReport(String domain) {
 	protected void process(MessageTree tree) {
 	}
 
-	public synchronized void setProblemAnalyzer(ProblemAnalyzer problemAnalyzer) {
+	public void setProblemAnalyzer(ProblemAnalyzer problemAnalyzer) {
 		m_problemAnalyzer = problemAnalyzer;
 	}
 
-	public synchronized void setTransactionAnalyzer(TransactionAnalyzer transactionAnalyzer) {
+	public void setTransactionAnalyzer(TransactionAnalyzer transactionAnalyzer) {
 		m_transactionAnalyzer = transactionAnalyzer;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/Period.java
Patch:
@@ -146,7 +146,9 @@ public void start() {
 		      df.format(new Date(m_startTime)), df.format(new Date(m_endTime - 1))));
 
 		for (PeriodTask task : m_tasks) {
-			Threads.forGroup("Cat-RealtimeConsumer").start(task);
+			if (task.getAnalyzer().isRawAnalyzer()) {
+				Threads.forGroup("Cat-RealtimeConsumer").start(task);
+			}
 		}
 	}
 }

File: cat-core/src/main/java/com/dianping/cat/analysis/MessageAnalyzer.java
Patch:
@@ -3,6 +3,8 @@
 import com.dianping.cat.message.spi.MessageQueue;
 
 public interface MessageAnalyzer {
+	public boolean isRawAnalyzer();
+	
 	public void analyze(MessageQueue queue);
 
 	public void destroy();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -208,7 +208,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 					String xml = doFilter(payload, dataModel);
 					byte[] compress = compress(xml);
 
-					httpResponse.setContentType("application/xml;charset=UTF-8");
+					httpResponse.setContentType("application/xml;charset=utf-8");
 					httpResponse.addHeader("Content-Encoding", "gzip");
 					outputStream.write(compress);
 					outputStream.close();

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -65,6 +65,7 @@ public void close() throws IOException {
 			m_tagToIds.clear();
 			m_writeDataFile.close();
 			m_writeIndexFile.close();
+			m_readDataFile.close();
 		} finally {
 			m_writeLock.unlock();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/HistoricalCrossService.java
Patch:
@@ -53,7 +53,7 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/LocalCrossService.java
Patch:
@@ -49,7 +49,7 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/HistoricalDependencyService.java
Patch:
@@ -54,7 +54,7 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/LocalDependencyService.java
Patch:
@@ -49,7 +49,7 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -54,7 +54,7 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/LocalEventService.java
Patch:
@@ -50,7 +50,7 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/HistoricalHeartbeatService.java
Patch:
@@ -53,7 +53,7 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/LocalHeartbeatService.java
Patch:
@@ -48,7 +48,7 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/HistoricalMatrixService.java
Patch:
@@ -53,7 +53,7 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/LocalMatrixService.java
Patch:
@@ -49,7 +49,7 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -53,7 +53,7 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/LocalMetricService.java
Patch:
@@ -48,7 +48,7 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -54,7 +54,7 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/LocalProblemService.java
Patch:
@@ -50,7 +50,7 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/HistoricalStateService.java
Patch:
@@ -53,7 +53,7 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -48,7 +48,7 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/HistoricalTopService.java
Patch:
@@ -53,7 +53,7 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/LocalTopService.java
Patch:
@@ -48,7 +48,7 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -54,7 +54,7 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -48,7 +48,7 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				bucket.close();
+				m_bucketManager.closeBucket(bucket);
 			}
 		}
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -37,7 +37,6 @@ public boolean createHourlyTask(StateReport report) {
 		Date startTime = report.getStartTime();
 		String domain = report.getDomain();
 
-		m_taskManager.createTask(startTime, domain, Constants.REPORT_ABTEST, TaskProlicy.HOULY);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_SERVICE, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_BUG, TaskProlicy.ALL);
 		m_taskManager.createTask(startTime, domain, Constants.REPORT_HEAVY, TaskProlicy.ALL);

File: cat-core/src/main/java/com/dianping/cat/Constants.java
Patch:
@@ -23,6 +23,4 @@ public class Constants {
 
 	public static final String REPORT_HEAVY = "heavy";
 
-	public static final String REPORT_ABTEST = "abtest";
-
 }

File: cat-core/src/main/java/com/dianping/cat/analysis/PeriodTask.java
Patch:
@@ -45,7 +45,7 @@ public boolean enqueue(MessageTree tree) {
 			m_queueOverflow++;
 			m_serverStateManager.addMessageTotalLoss(tree.getDomain(), 1);
 
-			if (m_queueOverflow % CatConstants.ERROR_COUNT == 0) {
+			if (m_queueOverflow % (10 * CatConstants.ERROR_COUNT) == 0) {
 				m_logger.warn(m_analyzer.getClass().getSimpleName() + " queue overflow number " + m_queueOverflow);
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -71,7 +71,7 @@ private Pair<Boolean, String> computeAlertInfo(int minute, String product, Metri
 		String metricKey = m_metricConfigManager.buildMetricKey(config.getDomain(), config.getType(),
 		      config.getMetricKey());
 
-		if (minute > DATA_CHECK_MINUTE) {
+		if (minute >= DATA_CHECK_MINUTE - 1) {
 			MetricReport report = fetchMetricReport(product, ModelPeriod.CURRENT);
 
 			if (report != null) {

File: cat-core/src/main/java/com/dianping/cat/analysis/PeriodTask.java
Patch:
@@ -55,6 +55,7 @@ public boolean enqueue(MessageTree tree) {
 	public void finish() {
 		try {
 			m_analyzer.doCheckpoint(true);
+			m_analyzer.destroy();
 		} catch (Exception e) {
 			Cat.logError(e);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseCompositeModelService.java
Patch:
@@ -1,6 +1,7 @@
 package com.dianping.cat.report.page.model.spi.internal;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Semaphore;
@@ -68,7 +69,7 @@ public void initialize() throws InitializationException {
 	@Override
 	public ModelResponse<T> invoke(final ModelRequest request) {
 		int size = m_allServices.size();
-		final List<ModelResponse<T>> responses = new ArrayList<ModelResponse<T>>(size);
+		final List<ModelResponse<T>> responses = Collections.synchronizedList(new ArrayList<ModelResponse<T>>(size));
 		final Semaphore semaphore = new Semaphore(0);
 		final Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
 		int count = 0;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -29,7 +29,7 @@ public abstract class BaseRemoteModelService<T> extends ModelServiceWithCalSuppo
 
 	@Inject
 	private String m_serviceUri = "/cat/r/model";
-
+	
 	public BaseRemoteModelService(String name) {
 		m_name = name;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/impl/DataExtractorImpl.java
Patch:
@@ -1,6 +1,6 @@
 package com.dianping.cat.report.page.metric.chart.impl;
 
-import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Map.Entry;
 
@@ -39,7 +39,7 @@ public double[] extract(double[] values) {
 
 	@Override
 	public Map<String, double[]> extract(Map<String, double[]> values) {
-		Map<String, double[]> result = new HashMap<String, double[]>();
+		Map<String, double[]> result = new LinkedHashMap<String, double[]>();
 
 		for (Entry<String, double[]> entry : values.entrySet()) {
 			result.put(entry.getKey(), extract(entry.getValue()));

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateShow.java
Patch:
@@ -55,6 +55,7 @@ public Map<Long, Message> getMessagesMap() {
 	}
 
 	public List<ProcessDomain> getProcessDomains() {
+		m_processDomains.remove("PhoenixAgent");
 		List<ProcessDomain> temp = new ArrayList<ProcessDomain>(m_processDomains.values());
 		if (m_sortType == null) {
 			Collections.sort(temp, new DomainCompartor());
@@ -84,8 +85,6 @@ private ProcessDomain mergeAll(List<ProcessDomain> domains) {
 	}
 
 	public Map<String, ProcessDomain> getProcessDomainMap() {
-		m_processDomains.remove("PhoenixAgent");
-		
 		return m_processDomains;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/MetricReportService.java
Patch:
@@ -91,7 +91,6 @@ public MetricReport transform(MetricReport report) {
 					seg.setCount(point.getCount());
 					seg.setAvg(point.getAvg());
 					seg.setSum(point.getSum());
-
 					segs.put(seg.getId(), seg);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/Action.java
Patch:
@@ -2,6 +2,7 @@
 
 public enum Action implements org.unidal.web.mvc.Action {
 	INSERT("insert"),
+
 	VIEW("view");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/alteration/JspFile.java
Patch:
@@ -2,6 +2,7 @@
 
 public enum JspFile {
 	INSERT("/jsp/report/alteration/alter_insertResult.jsp"),
+
 	VIEW("/jsp/report/alteration/alter_view.jsp"),
 	;
 

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -32,7 +32,8 @@ protected String getContextPath() {
 
 	@Override
 	protected int getServerPort() {
-		return 2281;
+		//return 2281;
+		return 8080;
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -206,7 +206,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		String name = payload.getName();
 		String ip = payload.getIpAddress();
 
-
 		if (StringUtils.isEmpty(group)) {
 			group = m_configManager.queryDefaultGroup(domain);
 			payload.setGroup(group);

File: cat-home/src/main/java/com/dianping/cat/report/page/event/HistoryGraphs.java
Patch:
@@ -178,7 +178,7 @@ public void buildGroupTrendGraph(Model model, Payload payload, List<String> ips)
 	private List<Map<String, double[]>> buildLineChartData(Date start, Date end, String domain, String type,
 	      String name, String ip, String queryType) {
 		List<Map<String, double[]>> allDatas = new ArrayList<Map<String, double[]>>();
-		
+
 		if (queryType.equalsIgnoreCase("day")) {
 			Map<String, double[]> currentGraph = getGraphDatasForHour(start, end, domain, type, name, ip);
 			Map<String, double[]> lastDayGraph = getGraphDatasForHour(new Date(start.getTime() - TimeUtil.ONE_DAY),
@@ -240,11 +240,11 @@ public void buildTrendGraph(Model model, Payload payload) {
 			step = TimeUtil.ONE_DAY;
 		}
 
-		List<Map<String, double[]>> allDatas = buildLineChartData(start, end, type, name, domain, ip, queryType);
+		List<Map<String, double[]>> allDatas = buildLineChartData(start, end, domain, type, name, ip, queryType);
 
 		LineChart item = buildTotal(allDatas, start, size, step, display, queryType);
-		model.setHitTrend(item.getJsonString());
 
+		model.setHitTrend(item.getJsonString());
 		item = buildFail(allDatas, start, size, step, display, queryType);
 		model.setFailureTrend(item.getJsonString());
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/HistoryGraphs.java
Patch:
@@ -218,7 +218,7 @@ public void buildTrendGraph(Model model, Payload payload) {
 			step = TimeUtil.ONE_DAY;
 		}
 
-		List<Map<String, double[]>> allDatas = buildLineChartData(start, end, queryType, domain, type, name, ip);
+		List<Map<String, double[]>> allDatas = buildLineChartData(start, end, domain, type, name, ip, queryType);
 		LineChart item = buildFail(allDatas, start, step, size, queryType);
 		model.setErrorsTrend(item.getJsonString());
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -239,11 +239,13 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			break;
 		case GRAPHS:
 			report = getEventGraphReport(model, payload);
+			report = m_mergeManager.mergerAllIp(report, ipAddress);
 
 			if (name == null || name.length() == 0) {
 				name = Constants.ALL;
 				report = m_mergeManager.mergerAllName(report, ip, name);
 			}
+			
 			model.setReport(report);
 			buildEventNameGraph(model, report, type, name, ip);
 			break;

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -138,7 +138,7 @@ public void run() {
 							String content = renderContent(names, domain);
 							String title = renderTitle(names, domain);
 							List<String> emails = m_scheduledManager.queryEmailsBySchReportId(report.getId());
-							boolean result = m_mailSms.sendEmail(title, content, emails);
+							boolean result = m_mailSms.sendEmailByGmail(title, content, emails);
 
 							insertMailLog(report.getId(), content, title, result, emails);
 							t.addData(emails.toString());

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/UserReportSubState.java
Patch:
@@ -39,8 +39,9 @@ public int compare(UserReportSubState o1, UserReportSubState o2) {
 
 			if (sub1 != sub2) {
 				return sub2 - sub1;
+			} else {
+				return -1;
 			}
-			return o1.getScheduledReport().getDomain().compareTo(o2.getScheduledReport().getDomain());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/tool/MailSMS.java
Patch:
@@ -5,5 +5,7 @@
 public interface MailSMS {
 
 	public boolean sendEmail(String title, String content, List<String> emails);
+	
+	public boolean sendEmailByGmail(String title,String content,List<String> emails);
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -242,8 +242,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 			if (name == null || name.length() == 0) {
 				name = Constants.ALL;
+				report = m_mergeManager.mergerAllName(report, ip, name);
 			}
-			report = m_mergeManager.mergerAllName(report, ip, name);
 			model.setReport(report);
 			buildEventNameGraph(model, report, type, name, ip);
 			break;

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -179,7 +179,7 @@ private void processProductLine(ProductLine productLine) {
 				alert = computeAlertInfo(minute, product, config, MetricType.SUM);
 			}
 			if (alert != null && alert.getKey()) {
-				String content = alert.getValue() + " [minute:" + (minute + 60) % 60 + " ][ time:"
+				String content = "[ " + alert.getValue() + " ][ minute:" + (minute + 60) % 60 + " ][ time:"
 				      + m_sdf.format(new Date()) + "]";
 
 				sendAlertInfo(productLine, config, content);

File: cat-home/src/main/java/com/dianping/cat/system/tool/DefaultMailImpl.java
Patch:
@@ -93,12 +93,13 @@ public boolean sendEmailByGmail(String title, String content, List<String> email
 	public boolean sendEmail(String title, String content, List<String> emails) {
 		for (String email : emails) {
 			try {
+				title = title.replaceAll(",", " ");
 				content = content.replaceAll(",", " ");
-				
+
 				String value = title + "," + content;
 				URL url = new URL("http://10.1.1.51/mail.v?type=1500&key=title,body&re=yong.you@dianping.com&to=" + email);
 				URLConnection conn = url.openConnection();
-				
+
 				conn.setDoOutput(true);
 				OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());
 

File: cat-home/src/main/java/com/dianping/cat/report/baseline/BaselineConfigManager.java
Patch:
@@ -7,7 +7,7 @@ public class BaselineConfigManager {
 	public BaselineConfig queryBaseLineConfig(String key) {
 		BaselineConfig config = new BaselineConfig();
 		Integer[] days = { -21, -14, -7, 0 };
-		Double[] weights = { 1.0, 1.0, 1.0, 1.0 };
+		Double[] weights = { 1.0, 2.0, 3.0, 4.0 };
 
 		config.setDays(Arrays.asList(days));
 		config.setId(1);

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -186,6 +186,7 @@ private void decodeMessage(ChannelBuffer buf, boolean monitor) {
 			}
 			try {
 				buf.markReaderIndex();
+				
 				// read the size of the message
 				buf.readInt();
 				DefaultMessageTree tree = (DefaultMessageTree) m_codec.decode(buf);

File: cat-home/src/main/java/com/dianping/cat/report/view/DomainNavManager.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.TreeMap;
@@ -116,7 +115,7 @@ public void shutdown() {
 
 	public static class Department {
 
-		private Map<String, ProjectLine> m_projectLines = new HashMap<String, ProjectLine>();
+		private Map<String, ProjectLine> m_projectLines = new TreeMap<String, ProjectLine>();
 
 		public ProjectLine findOrCreatProjectLine(String projectLine) {
 			if (projectLine == null) {

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -323,7 +323,7 @@ public boolean end(DefaultMessageManager manager, Transaction transaction) {
 				Transaction current = m_stack.pop();
 
 				if (transaction == current) {
-					m_validator.validate(m_stack.peek(), current);
+					m_validator.validate(m_stack.isEmpty() ? null : m_stack.peek(), current);
 				} else {
 					while (transaction != current && !m_stack.empty()) {
 						m_validator.validate(m_stack.peek(), current);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -86,8 +86,8 @@ private Machine buildStateInfo(Machine machine) {
 				ProcessDomain processDomain = machine.findOrCreateProcessDomain(domain);
 				Detail detail = processDomain.findOrCreateDetail(start);
 
-				processDomain.setSize(value + processDomain.getTotalLoss());
-				detail.setSize(value + detail.getTotalLoss());
+				processDomain.setSize(value + processDomain.getSize());
+				detail.setSize(value + detail.getSize());
 			}
 
 			long messageTotal = state.getMessageTotal();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -201,6 +201,7 @@ public Period(long startTime, long endTime) {
 
 		public void distribute(MessageTree tree) {
 			m_serverStateManager.addMessageTotal(tree.getDomain(), 1);
+			
 			for (PeriodTask task : m_tasks) {
 				task.enqueue(tree);
 			}

File: cat-core/src/main/java/com/dianping/cat/statistic/ServerStatistic.java
Patch:
@@ -8,7 +8,7 @@
 public class ServerStatistic {
 	private Map<Long, Statistic> m_statistics = new ConcurrentHashMap<Long, Statistic>(100);
 
-	public Statistic findOrCreate(Long time) {
+	public synchronized Statistic findOrCreate(Long time) {
 		Statistic state = m_statistics.get(time);
 
 		if (state == null) {
@@ -92,6 +92,7 @@ public void addMessageTotal(long messageTotal) {
 
 		public void addMessageTotal(String domain, long messageTotal) {
 			AtomicLong value = m_messageTotals.get(domain);
+			
 			if (value != null) {
 				value.addAndGet(messageTotal);
 			} else {

File: cat-core/src/main/java/com/dianping/cat/statistic/ServerStatisticManager.java
Patch:
@@ -62,7 +62,7 @@ public void addProcessDelay(double delay) {
 		getCurrentStatistic().addProcessDelay(delay);
 	}
 
-	public Statistic findState(long time) {
+	public Statistic findOrCreateState(long time) {
 		return m_serverState.findOrCreate(time);
 	}
 

File: cat-core/src/test/java/com/dianping/cat/statistic/ServerStatisticManagerTest.java
Patch:
@@ -58,14 +58,14 @@ public void test() {
 		
 		manager.removeState(time);
 
-		Assert.assertEquals(true, null != manager.findState(time));
+		Assert.assertEquals(true, null != manager.findOrCreateState(time));
 	}
 
 	private Statistic findState(ServerStatisticManager manager, long time) {
-		Statistic state = manager.findState(time);
+		Statistic state = manager.findOrCreateState(time);
 
 		if (state == null) {
-			state = manager.findState(time + 60 * 1000);
+			state = manager.findOrCreateState(time + 60 * 1000);
 		}
 		return state;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Payload.java
Patch:
@@ -25,7 +25,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_test = "-1";
 
 	@FieldMeta("timeRange")
-	private int m_timeRange = 2;
+	private int m_timeRange = 24;
 
 	@FieldMeta("fullScreen")
 	private boolean m_fullScreen = false;

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -296,25 +296,25 @@ public void shutdown() {
 	private static class ExceptionHandler extends SimpleChannelHandler {
 		private Logger m_logger;
 
-		private volatile int m_error;
+		private volatile int m_error = -1;
 
 		public ExceptionHandler(Logger logger) {
 			m_logger = logger;
 		}
 
 		@Override
 		public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {
+			m_error++;
 			if (m_error % 1000 == 0) {
-				m_error++;
 				m_logger.warn("Channel disconnected by remote address: " + e.getChannel().getRemoteAddress());
 				e.getChannel().close();
 			}
 		}
 
 		@Override
 		public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {
+			m_error++;
 			if (m_error % 1000 == 0) {
-				m_error++;
 				m_logger.warn("Channel disconnected by remote address: " + e.getChannel().getRemoteAddress());
 				e.getChannel().close();
 			}

File: cat-client/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -296,25 +296,25 @@ public void shutdown() {
 	private static class ExceptionHandler extends SimpleChannelHandler {
 		private Logger m_logger;
 
-		private volatile int m_error;
+		private volatile int m_error = -1;
 
 		public ExceptionHandler(Logger logger) {
 			m_logger = logger;
 		}
 
 		@Override
 		public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {
+			m_error++;
 			if (m_error % 1000 == 0) {
-				m_error++;
 				m_logger.warn("Channel disconnected by remote address: " + e.getChannel().getRemoteAddress());
 				e.getChannel().close();
 			}
 		}
 
 		@Override
 		public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {
+			m_error++;
 			if (m_error % 1000 == 0) {
-				m_error++;
 				m_logger.warn("Channel disconnected by remote address: " + e.getChannel().getRemoteAddress());
 				e.getChannel().close();
 			}

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -9,8 +9,8 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.helper.Files;
 import org.unidal.lookup.ComponentTestCase;
-import org.unidal.webres.helper.Files;
 
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Heartbeat;

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -9,8 +9,8 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.helper.Files;
 import org.unidal.lookup.ComponentTestCase;
-import org.unidal.webres.helper.Files;
 
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Heartbeat;

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -14,7 +14,6 @@
 import com.dianping.cat.message.spi.core.TcpSocketReceiver;
 import com.dianping.cat.report.service.CachedReportTask;
 import com.dianping.cat.report.task.DefaultTaskConsumer;
-import com.dianping.cat.report.task.metric.MetricAlert;
 import com.dianping.cat.report.view.DomainNavManager;
 import com.dianping.cat.system.config.ConfigReloadTask;
 import com.dianping.cat.system.notify.ScheduledMailTask;
@@ -37,13 +36,11 @@ protected void execute(ModuleContext ctx) throws Exception {
 
 		if (serverConfigManager.isJobMachine() && !serverConfigManager.isLocalMode()) {
 			DefaultTaskConsumer taskConsumer = ctx.lookup(DefaultTaskConsumer.class);
-			MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
 			DomainNavManager domainNavManager = ctx.lookup(DomainNavManager.class);
 			CachedReportTask cachedReportTask = ctx.lookup(CachedReportTask.class);
 
 			Threads.forGroup("Cat").start(cachedReportTask);
 			Threads.forGroup("Cat").start(domainNavManager);
-			Threads.forGroup("Cat").start(metricAlert);
 			Threads.forGroup("Cat").start(taskConsumer);
 		}
 		executeAlarmModule(ctx);

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportBuilder.java
Patch:
@@ -122,6 +122,8 @@ public boolean buildHourlyTask(String name, String domain, Date start) {
 		utilizationReport.setStartTime(start);
 		utilizationReport.setEndTime(end);
 
+		System.out.println(utilizationReport);
+		
 		HourlyReport report = new HourlyReport();
 
 		report.setContent("");

File: cat-home/src/test/java/com/dianping/cat/report/task/utilization/UtilizationBuilderTest.java
Patch:
@@ -5,15 +5,13 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.DomainManager;
 
 public class UtilizationBuilderTest extends ComponentTestCase{
 	
 	@Test
 	public void testHourlyReport() throws Exception{
-		Cat.initialize("192.168.7.43");
 		UtilizationReportBuilder builder = lookup(UtilizationReportBuilder.class);
 		DomainManager manager = lookup(DomainManager.class);
 		

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/browser/BrowserMetaAnalyzer.java
Patch:
@@ -93,7 +93,7 @@ public void process(MessageTree tree) {
 
 					if ("URL".equals(childType) && ("URL.Server".equals(childName) || "ClientInfo".equals(childName))) {
 						String data = (String) child.getData();
-						String agent = parseValue("agent", data);
+						String agent = parseValue("Agent", data);
 
 						if (agent != null) {
 							String domain = tree.getDomain();

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/GraphCreator.java
Patch:
@@ -123,8 +123,6 @@ public double[] convert(double[] value, int removeLength) {
 
 		for (int i = 0; i < newLength; i++) {
 			result[i] = value[i];
-
-			result[i] = Math.random() * 1000;
 		}
 		return result;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportBuilder.java
Patch:
@@ -103,10 +103,10 @@ public boolean buildHourlyTask(String name, String domain, Date start) {
 
 				for (TypeDetailInfo typeInfo : callInfos) {
 					String project = typeInfo.getProjectName();
-					
+
 					if (!validataService(project)) {
 						long failure = typeInfo.getFailureCount();
-						Domain d = utilizationReport.findDomain(project);
+						Domain d = utilizationReport.findOrCreateDomain(project);
 						ApplicationState service = d.findOrCreateApplicationState("PigeonService");
 
 						service.setFailureCount(service.getFailureCount() + failure);

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportBuilder.java
Patch:
@@ -122,6 +122,7 @@ public boolean buildHourlyTask(String name, String domain, Date start) {
 		utilizationReport.setStartTime(start);
 		utilizationReport.setEndTime(end);
 
+		System.out.println(utilizationReport);
 		HourlyReport report = new HourlyReport();
 
 		report.setContent("");

File: cat-core/src/test/java/com/dianping/cat/ServerConfigManagerTest.java
Patch:
@@ -42,7 +42,7 @@ public void test() throws Exception {
 		Assert.assertEquals(false, manager.isJobMachine());
 		Assert.assertEquals(false, manager.isLocalMode());
 		Assert.assertEquals(true, manager.isServerService("Service"));
-		Assert.assertEquals(true, manager.validateDomain("All"));
+		Assert.assertEquals(false, manager.validateDomain("All"));
 		
 		Transaction t = new DefaultTransaction("Service", "piegonService:heartTaskService:heartBeat", null);
 		Assert.assertEquals(true, manager.discardTransaction(t));

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -135,8 +135,8 @@ public void setSortBy(String sortBy) {
 	public void setStartTime(java.util.Date startTime) {
 		m_startTime = startTime;
 	}
-	
-	public String toString(){
+
+	public String toString() {
 		return new Gson().toJson(this);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/impl/DataExtractorImpl.java
Patch:
@@ -19,6 +19,7 @@ public double[] extract(double[] values) {
 		int length = values.length;
 		m_step = intervalCalculate(length);
 		int size = length / m_step;
+
 		if (size * m_step < length) {
 			size++;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Handler.java
Patch:
@@ -333,6 +333,8 @@ public int compare(com.dianping.cat.home.service.entity.Domain d1,
 					}
 				} else if (sortBy.equals("failurePercent")) {
 					return (int) (100000 * d2.getFailurePercent() - 100000 * d1.getFailurePercent());
+				} else if (sortBy.equals("availability")) {
+					return (int) (100000 * d2.getFailurePercent() - 100000 * d1.getFailurePercent());
 				} else {
 					return (int) (d2.getAvg() - d1.getAvg());
 				}

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/browser/BrowserAnalyzer.java
Patch:
@@ -19,8 +19,8 @@ public class BrowserAnalyzer extends AbstractMessageAnalyzer<BrowserReport> {
 	@Inject(ID)
 	private ReportManager<BrowserReport> m_reportManager;
 
-//	@Inject
-//	private UserAgentManager m_userAgentManager;
+	@Inject
+	private UserAgentManager m_userAgentManager;
 
 	// public void removeMapItem(Map<String, Integer> map) {
 	//

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -174,7 +174,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			m_externalInfoBuilder.buildExceptionInfoOnGraph(payload, model, topologyGraph);
 			model.setReportStart(new Date(payload.getDate()));
 			model.setReportEnd(new Date(payload.getDate() + TimeUtil.ONE_HOUR - 1));
-			String build = new DefaultJsonBuilder().buildJson(topologyGraph);
+			String build = new DefaultJsonBuilder().build(topologyGraph);
 			
 			model.setTopologyGraph(build);
 			break;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Model.java
Patch:
@@ -74,7 +74,7 @@ public BugReport getBugReport() {
 	}
 
 	public String getBugs() {
-		return new DefaultJsonBuilder().buildJson(m_bugReport);
+		return new DefaultJsonBuilder().build(m_bugReport);
 	}
 
 	public List<Service> getCacheServices() {

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Handler.java
Patch:
@@ -106,6 +106,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		case MODEL:
 			m_modelHandler.handleOutbound(ctx, model, payload);
 			break;
+		default:
+			break;
 		}
 
 		model.setAction(action);

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/UploaderAndCleaner.java
Patch:
@@ -224,9 +224,10 @@ public Direction matches(File base, String path) {
 				t.addData("file", path);
 
 				FSDataOutputStream fdos = null;
+				FileInputStream fis = null;
 				try {
 					fdos = makeHdfsOutputStream(path);
-					FileInputStream fis = new FileInputStream(file);
+					fis = new FileInputStream(file);
 
 					long start = System.currentTimeMillis();
 
@@ -267,7 +268,7 @@ public Direction matches(File base, String path) {
 				}
 
 				try {
-					Thread.sleep(200);
+					Thread.sleep(500);
 				} catch (InterruptedException e) {
 					break;
 				}

File: abtest-sample/src/main/java/com/dianping/abtest/sample/ABTestSampleServlet.java
Patch:
@@ -24,17 +24,17 @@ public void service(HttpServletRequest request, HttpServletResponse response) th
 		
 		if (m_abtest.isGroupA()) {
 			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index1.jsp");
-			Cat.logMetric("ABTestSample", "page", "index1", "group", "a");
 			rd.forward(request, response);
 		} else {
 			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index2.jsp");
-			Cat.logMetric("ABTestSample", "page", "index2", "group", "");
 			rd.forward(request, response);
 		}
+		
+		Cat.logMetric("ABTest", "view", "index2", "group", "Control");
 	}
 
 	public static enum MyABTestId implements ABTestName {
-		CASE1("SampleTest");
+		CASE1("Sample");
 
 		private String m_id;
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -224,9 +224,9 @@ protected void process(MessageTree tree) {
 			} else if (!info.getDomain().equals(domain)) {
 				// only work on online environment
 				long current = System.currentTimeMillis();
-				long lastModifyTime = info.getLastModifiedDate().getTime();
+				Date lastModifiedDate = info.getLastModifiedDate();
 
-				if (current - lastModifyTime > ONE_HOUR) {
+				if (lastModifiedDate != null && (current - lastModifiedDate.getTime()) > ONE_HOUR) {
 					m_domainManager.update(info.getId(), domain, ip);
 					m_logger.info(String.format("old domain is %s , change ip %s to %s", info.getDomain(), ip, domain));
 				}

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DefaultReportService.java
Patch:
@@ -162,8 +162,8 @@ public boolean insertMonthlyReport(MonthlyReport report, byte[] content) {
 		} catch (Exception e) {
 			Cat.logError(e);
 		}
+		
 		try {
-
 			m_monthlyReportDao.deleteReportByDomainNamePeriod(report);
 			m_monthlyReportDao.insert(report);
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DependencyReportService.java
Patch:
@@ -31,7 +31,7 @@ public DependencyReport makeReport(String domain, Date start, Date end) {
 
 	@Override
 	public DependencyReport queryDailyReport(String domain, Date start, Date end) {
-		throw new RuntimeException("Dependency report don't support daily report");
+		throw new UnsupportedOperationException("Dependency report don't support daily report");
 	}
 
 	private DependencyReport queryFromHourlyBinary(int id, String domain) throws DalException {
@@ -90,12 +90,12 @@ public DependencyReport queryHourlyReport(String domain, Date start, Date end) {
 
 	@Override
 	public DependencyReport queryMonthlyReport(String domain, Date start) {
-		throw new RuntimeException("Dependency report don't support monthly report");
+		throw new UnsupportedOperationException("Dependency report don't support monthly report");
 	}
 
 	@Override
 	public DependencyReport queryWeeklyReport(String domain, Date start) {
-		throw new RuntimeException("Dependency report don't support weekly report");
+		throw new UnsupportedOperationException("Dependency report don't support weekly report");
 	}
 
 }

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Model.java
Patch:
@@ -13,8 +13,9 @@
 import com.dianping.cat.home.dal.abtest.GroupStrategy;
 import com.dianping.cat.report.abtest.entity.AbtestReport;
 import com.dianping.cat.system.SystemPage;
-import com.dianping.cat.system.page.abtest.ListViewModel.AbtestItem;
-import com.dianping.cat.system.page.abtest.ReportHandler.DataSets;
+import com.dianping.cat.system.page.abtest.handler.ListViewModel;
+import com.dianping.cat.system.page.abtest.handler.ListViewModel.AbtestItem;
+import com.dianping.cat.system.page.abtest.handler.ReportHandler.DataSets;
 
 public class Model extends ViewModel<SystemPage, Action, Context> {
 	private String m_domain;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/handler/ListViewModel.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.page.abtest;
+package com.dianping.cat.system.page.abtest.handler;
 
 import java.util.Date;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/AbtestStatus.java
Patch:
@@ -5,7 +5,6 @@
 
 import com.dianping.cat.home.dal.abtest.AbtestRun;
 
-
 public enum AbtestStatus {
 
 	CREATED, READY, RUNNING, TERMINATED, SUSPENDED;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/CaseBuilder.java
Patch:
@@ -15,14 +15,13 @@
 import com.dianping.cat.home.dal.abtest.Abtest;
 import com.dianping.cat.home.dal.abtest.AbtestRun;
 import com.dianping.cat.home.dal.abtest.GroupStrategy;
-import com.dianping.cat.system.page.abtest.GsonBuilderManager;
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
 
 public class CaseBuilder {
 
 	@Inject
-	private GsonBuilderManager m_gsonBuilderManager;
+	private GsonManager m_gsonBuilderManager;
 
 	private Type m_listType = new TypeToken<ArrayList<Condition>>() {
 	}.getType();
@@ -63,7 +62,7 @@ private Case buildCaseFromAbtest(Abtest abtest, GroupStrategy groupStrategy) {
 
 	private Run buildRunFromAbtestRun(AbtestRun abtestRun) {
 		Run run = new Run(abtestRun.getId());
-		Gson gson = m_gsonBuilderManager.getGsonBuilder().create();
+		Gson gson = m_gsonBuilderManager.getGson();
 
 		for (String domain : StringUtils.split(abtestRun.getDomains(), ',')) {
 			run.addDomain(domain);

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/GroupStrategyParser.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.page.abtest;
+package com.dianping.cat.system.page.abtest.util;
 
 import japa.parser.JavaParser;
 import japa.parser.ParseException;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Model.java
Patch:
@@ -13,8 +13,9 @@
 import com.dianping.cat.home.dal.abtest.GroupStrategy;
 import com.dianping.cat.report.abtest.entity.AbtestReport;
 import com.dianping.cat.system.SystemPage;
-import com.dianping.cat.system.page.abtest.ListViewModel.AbtestItem;
-import com.dianping.cat.system.page.abtest.ReportHandler.DataSets;
+import com.dianping.cat.system.page.abtest.handler.ListViewModel;
+import com.dianping.cat.system.page.abtest.handler.ListViewModel.AbtestItem;
+import com.dianping.cat.system.page.abtest.handler.ReportHandler.DataSets;
 
 public class Model extends ViewModel<SystemPage, Action, Context> {
 	private String m_domain;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/handler/ListViewModel.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.page.abtest;
+package com.dianping.cat.system.page.abtest.handler;
 
 import java.util.Date;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/AbtestStatus.java
Patch:
@@ -5,7 +5,6 @@
 
 import com.dianping.cat.home.dal.abtest.AbtestRun;
 
-
 public enum AbtestStatus {
 
 	CREATED, READY, RUNNING, TERMINATED, SUSPENDED;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/CaseBuilder.java
Patch:
@@ -15,14 +15,13 @@
 import com.dianping.cat.home.dal.abtest.Abtest;
 import com.dianping.cat.home.dal.abtest.AbtestRun;
 import com.dianping.cat.home.dal.abtest.GroupStrategy;
-import com.dianping.cat.system.page.abtest.GsonBuilderManager;
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
 
 public class CaseBuilder {
 
 	@Inject
-	private GsonBuilderManager m_gsonBuilderManager;
+	private GsonManager m_gsonBuilderManager;
 
 	private Type m_listType = new TypeToken<ArrayList<Condition>>() {
 	}.getType();
@@ -63,7 +62,7 @@ private Case buildCaseFromAbtest(Abtest abtest, GroupStrategy groupStrategy) {
 
 	private Run buildRunFromAbtestRun(AbtestRun abtestRun) {
 		Run run = new Run(abtestRun.getId());
-		Gson gson = m_gsonBuilderManager.getGsonBuilder().create();
+		Gson gson = m_gsonBuilderManager.getGson();
 
 		for (String domain : StringUtils.split(abtestRun.getDomains(), ',')) {
 			run.addDomain(domain);

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/GroupStrategyParser.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.page.abtest;
+package com.dianping.cat.system.page.abtest.util;
 
 import japa.parser.JavaParser;
 import japa.parser.ParseException;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -224,9 +224,9 @@ protected void process(MessageTree tree) {
 			} else if (!info.getDomain().equals(domain)) {
 				// only work on online environment
 				long current = System.currentTimeMillis();
-				long lastModifyTime = info.getLastModifiedDate().getTime();
+				Date lastModifiedDate = info.getLastModifiedDate();
 
-				if (current - lastModifyTime > ONE_HOUR) {
+				if (lastModifiedDate != null && (current - lastModifiedDate.getTime()) > ONE_HOUR) {
 					m_domainManager.update(info.getId(), domain, ip);
 					m_logger.info(String.format("old domain is %s , change ip %s to %s", info.getDomain(), ip, domain));
 				}

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DefaultReportService.java
Patch:
@@ -162,8 +162,8 @@ public boolean insertMonthlyReport(MonthlyReport report, byte[] content) {
 		} catch (Exception e) {
 			Cat.logError(e);
 		}
+		
 		try {
-
 			m_monthlyReportDao.deleteReportByDomainNamePeriod(report);
 			m_monthlyReportDao.insert(report);
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DependencyReportService.java
Patch:
@@ -31,7 +31,7 @@ public DependencyReport makeReport(String domain, Date start, Date end) {
 
 	@Override
 	public DependencyReport queryDailyReport(String domain, Date start, Date end) {
-		throw new RuntimeException("Dependency report don't support daily report");
+		throw new UnsupportedOperationException("Dependency report don't support daily report");
 	}
 
 	private DependencyReport queryFromHourlyBinary(int id, String domain) throws DalException {
@@ -90,12 +90,12 @@ public DependencyReport queryHourlyReport(String domain, Date start, Date end) {
 
 	@Override
 	public DependencyReport queryMonthlyReport(String domain, Date start) {
-		throw new RuntimeException("Dependency report don't support monthly report");
+		throw new UnsupportedOperationException("Dependency report don't support monthly report");
 	}
 
 	@Override
 	public DependencyReport queryWeeklyReport(String domain, Date start) {
-		throw new RuntimeException("Dependency report don't support weekly report");
+		throw new UnsupportedOperationException("Dependency report don't support weekly report");
 	}
 
 }

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.consumer.advanced.dal.SqltableDao;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.cross.CrossDelegate;
+import com.dianping.cat.consumer.cross.IpConvertManager;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.DependencyDelegate;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
@@ -101,8 +102,9 @@ private Collection<Component> defineCrossComponents() {
 		final List<Component> all = new ArrayList<Component>();
 		final String ID = CrossAnalyzer.ID;
 
+		all.add(C(IpConvertManager.class));
 		all.add(C(MessageAnalyzer.class, ID, CrossAnalyzer.class).is(PER_LOOKUP) //
-		      .req(ReportManager.class, ID).req(ServerConfigManager.class));
+		      .req(ReportManager.class, ID).req(ServerConfigManager.class, IpConvertManager.class));
 		all.add(C(ReportManager.class, ID, DefaultReportManager.class) //
 		      .req(ReportDelegate.class, ID) //
 		      .req(BucketManager.class, HourlyReportDao.class, HourlyReportContentDao.class) //

File: cat-client/src/main/java/com/dianping/cat/status/StatusUpdateTask.java
Patch:
@@ -135,6 +135,7 @@ public void run() {
 					h.complete();
 				}
 				t.setStatus(Message.SUCCESS);
+				
 				String abtestModel = m_repository.getAbtestModel();
 
 				if (abtestModel != null) {

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucket.java
Patch:
@@ -108,6 +108,7 @@ public MessageTree findByIndex(int index) throws IOException {
 			m_codec.decode(buf, tree);
 			return tree;
 		} catch (EOFException e) {
+			e.printStackTrace();
 			return null;
 		}
 	}

File: cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBlockReader.java
Patch:
@@ -27,8 +27,8 @@ public void close() throws IOException {
 	}
 
 	public byte[] readMessage(int index) throws IOException {
-		int blockAddress;
-		int blockOffset;
+		int blockAddress = 0;
+		int blockOffset = 0;
 		byte[] buf;
 
 		synchronized (m_indexFile) {
@@ -48,7 +48,6 @@ public byte[] readMessage(int index) throws IOException {
 
 		try {
 			in.skip(blockOffset);
-
 			int len = in.readInt();
 
 			byte[] data = new byte[len];

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -174,7 +174,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			m_externalInfoBuilder.buildExceptionInfoOnGraph(payload, model, topologyGraph);
 			model.setReportStart(new Date(payload.getDate()));
 			model.setReportEnd(new Date(payload.getDate() + TimeUtil.ONE_HOUR - 1));
-			model.setTopologyGraph(new DefaultJsonBuilder().build(topologyGraph));
+			String build = new DefaultJsonBuilder().buildJson(topologyGraph);
+			
+			model.setTopologyGraph(build);
 			break;
 		case LINE_CHART:
 			DependencyReport dependencyReport = queryDependencyReport(payload);

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Model.java
Patch:
@@ -69,7 +69,7 @@ public BugReport getBugReport() {
 	}
 
 	public String getBugs() {
-		return new DefaultJsonBuilder().build(m_bugReport);
+		return new DefaultJsonBuilder().buildJson(m_bugReport);
 	}
 
 	public List<Service> getCacheServices() {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -85,7 +85,7 @@ private void calculateTps(Payload payload, TransactionReport report) {
 			if (payload != null && report != null) {
 				boolean isCurrent = payload.getPeriod().isCurrent();
 				double seconds;
-				
+
 				if (isCurrent) {
 					seconds = (System.currentTimeMillis() - payload.getCurrentDate()) / (double) 1000;
 				} else {
@@ -175,7 +175,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 		normalize(model, payload);
 		String type = payload.getType();
-
 		switch (payload.getAction()) {
 		case HOURLY_REPORT:
 			showHourlyReport(model, payload);

File: cat-client/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -32,7 +32,7 @@
 MessageTest.class,
 
 /* .abtest */
-TrafficDistributionGroupStrategyTest.class, 
+TrafficDistributionGroupStrategyTest.class,
 
 ABTestCodecTest.class,
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -13,9 +13,6 @@
 import com.dianping.cat.abtest.spi.internal.ABTestCodec;
 import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.CatConsumerAdvancedModule;
-import com.dianping.cat.consumer.advanced.MetricAnalyzer;
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
 import com.dianping.cat.consumer.advanced.dal.BusinessReportDao;
 import com.dianping.cat.consumer.advanced.dal.SqltableDao;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
@@ -24,6 +21,9 @@
 import com.dianping.cat.consumer.dependency.DependencyDelegate;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.consumer.matrix.MatrixDelegate;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.consumer.sql.DatabaseParser;
 import com.dianping.cat.consumer.sql.SqlAnalyzer;
 import com.dianping.cat.consumer.sql.SqlDelegate;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/ProductLineConfigManager.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.consumer.advanced;
+package com.dianping.cat.consumer.metric;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -34,7 +34,7 @@
 public class ProductLineConfigManager implements Initializable, LogEnabled {
 
 	@Inject
-	private ConfigDao m_configDao;
+	protected ConfigDao m_configDao;
 
 	private int m_configId;
 

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/CrossPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class CrossPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		CrossAnalyzer analyzer = lookup(CrossAnalyzer.class);
+		CrossAnalyzer analyzer = (CrossAnalyzer)lookup(MessageAnalyzer.class,CrossAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/DependencyPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class DependencyPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		DependencyAnalyzer analyzer = lookup(DependencyAnalyzer.class);
+		DependencyAnalyzer analyzer = (DependencyAnalyzer)lookup(MessageAnalyzer.class,DependencyAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/EventPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,8 @@ public class EventPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		EventAnalyzer analyzer = lookup(EventAnalyzer.class);
+		EventAnalyzer analyzer = (EventAnalyzer)lookup(MessageAnalyzer.class,EventAnalyzer.ID);
+
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/MatrixPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class MatrixPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		MatrixAnalyzer analyzer = lookup(MatrixAnalyzer.class);
+		MatrixAnalyzer analyzer = (MatrixAnalyzer)lookup(MessageAnalyzer.class,MatrixAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/MetricPerformanceTest.java
Patch:
@@ -3,7 +3,8 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-import com.dianping.cat.consumer.advanced.MetricAnalyzer;
+import com.dianping.cat.analysis.MessageAnalyzer;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
@@ -13,7 +14,7 @@ public class MetricPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		MetricAnalyzer analyzer = lookup(MetricAnalyzer.class);
+		MetricAnalyzer analyzer = (MetricAnalyzer)lookup(MessageAnalyzer.class,MetricAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		System.out.println(tree);

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/SqlPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.sql.SqlAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class SqlPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		SqlAnalyzer analyzer = lookup(SqlAnalyzer.class);
+		SqlAnalyzer analyzer = (SqlAnalyzer) lookup(MessageAnalyzer.class, SqlAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -204,7 +204,6 @@ public void distribute(MessageTree tree) {
 			for (PeriodTask task : m_tasks) {
 				task.enqueue(tree);
 			}
-
 		}
 
 		public void finish() {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/aggregation/AggregationConfigManager.java
Patch:
@@ -18,7 +18,7 @@
 
 public class AggregationConfigManager implements Initializable {
 	@Inject
-	private ConfigDao m_configDao;
+	protected ConfigDao m_configDao;
 	
 	@Inject
 	protected AggregationHandler m_handler;

File: cat-consumer/src/test/java/com/dianping/cat/consumer/state/StateAnalyzerTest.java
Patch:
@@ -36,7 +36,6 @@ public void setUp() throws Exception {
 
 	@Test
 	public void testProcess() throws Exception {
-
 		StateReport report = m_analyzer.getReport(m_domain);
 		
 		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("state_analyzer.xml"), "utf-8");

File: cat-core/src/main/java/com/dianping/cat/statistic/ServerStatisticManager.java
Patch:
@@ -78,8 +78,8 @@ private Statistic getCurrentStatistic() {
 		if (time != m_currentMunite) {
 			synchronized (this) {
 				if (time != m_currentMunite) {
-					m_currentMunite = time;
 					m_currentStatistic = m_serverState.findOrCreate(time);
+					m_currentMunite = time;
 				}
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/build/ABTestComponentConfigurator.java
Patch:
@@ -6,7 +6,7 @@
 import org.unidal.lookup.configuration.AbstractResourceConfigurator;
 import org.unidal.lookup.configuration.Component;
 
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.core.dal.ProjectDao;
 import com.dianping.cat.home.dal.abtest.AbtestDao;
 import com.dianping.cat.home.dal.abtest.AbtestReportDao;

File: cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java
Patch:
@@ -11,9 +11,6 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
 
-		all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://127.0.0.1:3306/cat", "root",
-		      "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
-
 		defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.report._INDEX.getEntityClasses());
 		defineDaoComponents(all, com.dianping.cat.home.dal.report._INDEX.getDaoClasses());
 

File: cat-home/src/main/java/com/dianping/cat/build/ServiceComponentConfigurator.java
Patch:
@@ -12,6 +12,7 @@
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.sql.SqlAnalyzer;
 import com.dianping.cat.consumer.state.StateAnalyzer;
@@ -163,7 +164,7 @@ public List<Component> defineComponents() {
 		      .req(MessageConsumer.class));
 		all.add(C(ModelService.class, "metric-historical", HistoricalMetricService.class) //
 		      .req(BucketManager.class, ReportService.class));
-		all.add(C(ModelService.class, "metric", CompositeMetricService.class) //
+		all.add(C(ModelService.class, MetricAnalyzer.ID, CompositeMetricService.class) //
 		      .req(ServerConfigManager.class) //
 		      .req(ModelService.class, new String[] { "metric-historical" }, "m_services"));
 

File: cat-home/src/main/java/com/dianping/cat/build/UserDatabaseConfigurator.java
Patch:
@@ -11,9 +11,6 @@ final class UserDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
 
-		all.add(defineJdbcDataSourceComponent("user", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.8.44:3306/hawk",
-		      "hawk", "hawk", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
-
 		defineSimpleTableProviderComponents(all, "user", com.dianping.cat.home.dal.user._INDEX.getEntityClasses());
 		defineDaoComponents(all, com.dianping.cat.home.dal.user._INDEX.getDaoClasses());
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -18,14 +18,14 @@
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.DependencyReportMerger;
 import com.dianping.cat.consumer.dependency.model.entity.Dependency;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.entity.Index;
 import com.dianping.cat.consumer.dependency.model.entity.Segment;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.home.dal.report.Event;
 import com.dianping.cat.home.dependency.graph.entity.TopologyEdge;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -21,11 +21,11 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.ServerConfigManager;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
 import com.dianping.cat.consumer.company.model.entity.Domain;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.home.dal.report.TopologyGraphDao;
 import com.dianping.cat.home.dal.report.TopologyGraphEntity;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Model.java
Patch:
@@ -9,8 +9,8 @@
 import org.unidal.web.mvc.view.annotation.EntityMeta;
 import org.unidal.web.mvc.view.annotation.ModelMeta;
 
-import com.dianping.cat.consumer.advanced.MetricAnalyzer;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.home.dal.abtest.Abtest;
 import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.LineChart;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/GraphCreator.java
Patch:
@@ -12,10 +12,10 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
-import com.dianping.cat.consumer.advanced.MetricAnalyzer;
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.helper.Chinese;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -23,6 +23,7 @@
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.problem.model.entity.JavaThread;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
@@ -201,7 +202,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				response = m_stateService.invoke(request);
 			} else if (TopAnalyzer.ID.equals(report)) {
 				response = m_topService.invoke(request);
-			} else if ("metric".equals(report)) {
+			} else if (MetricAnalyzer.ID.equals(report)) {
 				response = m_metricService.invoke(request);
 			} else if (DependencyAnalyzer.ID.equals(report)) {
 				response = m_dependencyService.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/CompositeHeartbeatService.java
Patch:
@@ -22,6 +22,9 @@ protected BaseRemoteModelService<HeartbeatReport> createRemoteService() {
 
 	@Override
 	protected HeartbeatReport merge(ModelRequest request, List<ModelResponse<HeartbeatReport>> responses) {
+		if (responses.size() == 0) {
+			return null;
+		}
 		HeartbeatReportMerger merger = new HeartbeatReportMerger(new HeartbeatReport(request.getDomain()));
 
 		for (ModelResponse<HeartbeatReport> response : responses) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/CompositeMetricService.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.util.List;
 
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.report.page.model.spi.internal.BaseCompositeModelService;
 import com.dianping.cat.report.page.model.spi.internal.BaseRemoteModelService;
@@ -10,7 +11,7 @@
 
 public class CompositeMetricService extends BaseCompositeModelService<MetricReport> {
 	public CompositeMetricService() {
-		super("metric");
+		super(MetricAnalyzer.ID);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -4,6 +4,7 @@
 
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;
@@ -21,7 +22,7 @@ public class HistoricalMetricService extends BaseHistoricalModelService<MetricRe
 	private ReportService m_reportService;
 
 	public HistoricalMetricService() {
-		super("metric");
+		super(MetricAnalyzer.ID);
 	}
 
 	@Override
@@ -46,7 +47,7 @@ private MetricReport getReportFromDatabase(long timestamp, String domain) throws
 	private MetricReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {
 		Bucket<String> bucket = null;
 		try {
-			bucket = m_bucketManager.getReportBucket(timestamp, "metric");
+			bucket = m_bucketManager.getReportBucket(timestamp, MetricAnalyzer.ID);
 			String xml = bucket.findById(domain);
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/LocalMetricService.java
Patch:
@@ -2,6 +2,7 @@
 
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
@@ -15,7 +16,7 @@ public class LocalMetricService extends BaseLocalModelService<MetricReport> {
 	private BucketManager m_bucketManager;
 
 	public LocalMetricService() {
-		super("metric");
+		super(MetricAnalyzer.ID);
 	}
 
 	@Override
@@ -31,7 +32,7 @@ protected MetricReport getReport(ModelRequest request, ModelPeriod period, Strin
 	private MetricReport getReportFromLocalDisk(long timestamp, String domain) throws Exception {
 		Bucket<String> bucket = null;
 		try {
-			bucket = m_bucketManager.getReportBucket(timestamp, "metric");
+			bucket = m_bucketManager.getReportBucket(timestamp, MetricAnalyzer.ID);
 			String xml = bucket.findById(domain);
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/RemoteMetricService.java
Patch:
@@ -4,13 +4,14 @@
 
 import org.xml.sax.SAXException;
 
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.spi.internal.BaseRemoteModelService;
 
 public class RemoteMetricService extends BaseRemoteModelService<MetricReport> {
 	public RemoteMetricService() {
-		super("metric");
+		super(MetricAnalyzer.ID);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/CompositeProblemService.java
Patch:
@@ -22,6 +22,9 @@ protected BaseRemoteModelService<ProblemReport> createRemoteService() {
 
 	@Override
 	protected ProblemReport merge(ModelRequest request, List<ModelResponse<ProblemReport>> responses) {
+		if (responses.size() == 0) {
+			return null;
+		}
 		ProblemReportMerger merger = new ProblemReportMerger(new ProblemReport(request.getDomain()));
 
 		for (ModelResponse<ProblemReport> response : responses) {

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/MetricReportService.java
Patch:
@@ -6,10 +6,10 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.consumer.advanced.MetricAnalyzer;
 import com.dianping.cat.consumer.advanced.dal.BusinessReport;
 import com.dianping.cat.consumer.advanced.dal.BusinessReportDao;
 import com.dianping.cat.consumer.advanced.dal.BusinessReportEntity;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultNativeParser;
 import com.dianping.cat.message.Event;
@@ -51,7 +51,7 @@ public MetricReport queryHourlyReport(String group, Date start, Date end) {
 					reportModel.accept(merger);
 				} catch (Exception e) {
 					Cat.logError(e);
-					Cat.getProducer().logEvent("ErrorXML", "metric", Event.SUCCESS,
+					Cat.getProducer().logEvent("ErrorXML", MetricAnalyzer.ID, Event.SUCCESS,
 					      report.getProductLine() + " " + report.getPeriod() + " " + report.getId());
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/abtest/ABTestReportBuilder.java
Patch:
@@ -13,7 +13,7 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.home.dal.abtest.AbtestReportDao;

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -13,8 +13,8 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.consumer.metric.model.entity.MetricItem;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/spi/ReportFacade.java
Patch:
@@ -13,12 +13,12 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.ReportType;
-import com.dianping.cat.consumer.advanced.MetricAnalyzer;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
 import com.dianping.cat.consumer.sql.SqlAnalyzer;
 import com.dianping.cat.consumer.state.StateAnalyzer;

File: cat-home/src/main/java/com/dianping/cat/system/config/ConfigReloadTask.java
Patch:
@@ -4,8 +4,8 @@
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 
 public class ConfigReloadTask implements Task {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/ReportHandler.java
Patch:
@@ -20,7 +20,7 @@
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
 import com.dianping.cat.home.dal.abtest.Abtest;
 import com.dianping.cat.home.dal.abtest.AbtestDao;
 import com.dianping.cat.home.dal.abtest.AbtestEntity;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -24,10 +24,10 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.Constants;
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
-import com.dianping.cat.consumer.advanced.MetricConfigManager;
-import com.dianping.cat.consumer.advanced.ProductLineConfigManager;
 import com.dianping.cat.consumer.aggreation.model.entity.AggregationRule;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
+import com.dianping.cat.consumer.metric.MetricConfigManager;
+import com.dianping.cat.consumer.metric.ProductLineConfigManager;
 import com.dianping.cat.consumer.problem.aggregation.AggregationConfigManager;
 import com.dianping.cat.core.dal.Project;
 import com.dianping.cat.core.dal.ProjectDao;

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilderTest.java
Patch:
@@ -9,6 +9,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.home.dal.report.Baseline;
 import com.dianping.cat.report.baseline.BaselineConfig;
@@ -71,7 +72,7 @@ public void insertBaseline(Baseline baseline) {
 	public void testBuildDailyReport() throws Exception {
 		MetricBaselineReportBuilder builder = getReportBuilder();
 		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-		builder.buildDailyReportInternal(new HashMap<String, MetricReport>(), "metric", "TuanGouWeb:URL:/index", format.parse("2013-07-01 00:00:00"));
+		builder.buildDailyReportInternal(new HashMap<String, MetricReport>(), MetricAnalyzer.ID, "TuanGouWeb:URL:/index", format.parse("2013-07-01 00:00:00"));
 	}
 
 }

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/metric/MetricAnalyzer.java
Patch:
@@ -260,7 +260,6 @@ private void processMetricOnTransaction(String product, MetricReport report, Tra
 	}
 
 	protected void storeReports(boolean atEnd) {
-		DefaultXmlBuilder builder = new DefaultXmlBuilder(true);
 		Bucket<String> reportBucket = null;
 		Transaction t = Cat.getProducer().newTransaction("Checkpoint", ID);
 
@@ -270,7 +269,7 @@ protected void storeReports(boolean atEnd) {
 
 			for (MetricReport report : m_reports.values()) {
 				try {
-					String xml = builder.buildXml(report);
+					String xml = new DefaultXmlBuilder(true).buildXml(report);
 					String product = report.getProduct();
 
 					reportBucket.storeById(product, xml);

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/CrossPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class CrossPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		CrossAnalyzer analyzer = lookup(CrossAnalyzer.class);
+		CrossAnalyzer analyzer = (CrossAnalyzer)lookup(MessageAnalyzer.class,CrossAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/DependencyPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class DependencyPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		DependencyAnalyzer analyzer = lookup(DependencyAnalyzer.class);
+		DependencyAnalyzer analyzer = (DependencyAnalyzer)lookup(MessageAnalyzer.class,DependencyAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/EventPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.event.EventAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,8 @@ public class EventPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		EventAnalyzer analyzer = lookup(EventAnalyzer.class);
+		EventAnalyzer analyzer = (EventAnalyzer)lookup(MessageAnalyzer.class,EventAnalyzer.ID);
+
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/MatrixPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class MatrixPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		MatrixAnalyzer analyzer = lookup(MatrixAnalyzer.class);
+		MatrixAnalyzer analyzer = (MatrixAnalyzer)lookup(MessageAnalyzer.class,MatrixAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/MetricPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class MetricPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		MetricAnalyzer analyzer = lookup(MetricAnalyzer.class);
+		MetricAnalyzer analyzer = (MetricAnalyzer)lookup(MessageAnalyzer.class,MetricAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		System.out.println(tree);

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/performance/SqlPerformanceTest.java
Patch:
@@ -3,6 +3,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.analysis.MessageAnalyzer;
 import com.dianping.cat.consumer.sql.SqlAnalyzer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
@@ -13,7 +14,7 @@ public class SqlPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {
-		SqlAnalyzer analyzer = lookup(SqlAnalyzer.class);
+		SqlAnalyzer analyzer = (SqlAnalyzer) lookup(MessageAnalyzer.class, SqlAnalyzer.ID);
 		MessageTree tree = buildMessage();
 
 		long current = System.currentTimeMillis();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -204,7 +204,6 @@ public void distribute(MessageTree tree) {
 			for (PeriodTask task : m_tasks) {
 				task.enqueue(tree);
 			}
-
 		}
 
 		public void finish() {

File: cat-core/src/main/java/com/dianping/cat/statistic/ServerStatisticManager.java
Patch:
@@ -78,8 +78,8 @@ private Statistic getCurrentStatistic() {
 		if (time != m_currentMunite) {
 			synchronized (this) {
 				if (time != m_currentMunite) {
-					m_currentMunite = time;
 					m_currentStatistic = m_serverState.findOrCreate(time);
+					m_currentMunite = time;
 				}
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/impl/CachedMetricReportServiceImpl.java
Patch:
@@ -38,9 +38,11 @@ protected boolean removeEldestEntry(Entry<String, MetricReport> eldest) {
 	private MetricReport getReportFromDB(String product, long date) {
 		String key = product + date;
 		MetricReport result = m_metricReports.get(key);
+
 		if (result == null) {
 			Date start = new Date(date);
 			Date end = new Date(date + TimeUtil.ONE_HOUR);
+
 			try {
 				result = m_reportService.queryMetricReport(product, start, end);
 				m_metricReports.put(key, result);
@@ -58,6 +60,7 @@ public MetricReport query(String product, Date start) {
 
 		if (period == ModelPeriod.CURRENT || period == ModelPeriod.LAST) {
 			ModelRequest request = new ModelRequest(product, time);
+
 			if (m_service.isEligable(request)) {
 				ModelResponse<MetricReport> response = m_service.invoke(request);
 				MetricReport report = response.getModel();

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -118,7 +118,6 @@ protected List<AlertInfo> metricAlert(Date date) {
 				if (metricConfig == null) {
 					continue;
 				}
-
 				if (metricConfig.isShowCount()) {
 					alerts.addAll(buildAlertInfo(date, productLine, MetricType.COUNT, item, minute));
 				}

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -148,7 +148,7 @@ private CrossInfo parsePigeonServerTransaction(Transaction t, MessageTree tree)
 					String formatIp = formatIp(name);
 
 					if (formatIp != null && formatIp.length() > 0) {
-						crossInfo.setRemoteAddress(name);
+						crossInfo.setRemoteAddress(formatIp);
 					}
 					break;
 				}

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/metric/MetricConfigManagerTest.java
Patch:
@@ -11,9 +11,9 @@
 import org.unidal.dal.jdbc.Readset;
 import org.unidal.dal.jdbc.Updateset;
 
-import com.dianping.cat.MockLog;
 import com.dianping.cat.advanced.metric.config.entity.MetricConfig;
 import com.dianping.cat.advanced.metric.config.entity.MetricItemConfig;
+import com.dianping.cat.consumer.MockLog;
 import com.dianping.cat.consumer.metric.MetricAnalyzer.ConfigItem;
 import com.dianping.cat.core.config.Config;
 import com.dianping.cat.core.config.ConfigDao;

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/metric/ProductLineConfigManagerTest.java
Patch:
@@ -12,7 +12,7 @@
 import org.unidal.dal.jdbc.Readset;
 import org.unidal.dal.jdbc.Updateset;
 
-import com.dianping.cat.MockLog;
+import com.dianping.cat.consumer.MockLog;
 import com.dianping.cat.consumer.company.model.entity.Company;
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
 import com.dianping.cat.core.config.Config;

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/DumpAnalyzerTest.java
Patch:
@@ -6,7 +6,7 @@
 
 import org.junit.Test;
 
-import com.dianping.cat.MockLog;
+import com.dianping.cat.consumer.MockLog;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.DefaultTransaction;
 import com.dianping.cat.message.internal.MessageId;

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/dependency/DependencyAnalyzerTest.java
Patch:
@@ -69,8 +69,8 @@ protected MessageTree generateMessageTree(int i) {
 		DefaultEvent event;
 
 		if (i % 3 == 0) {
-			t = new DefaultTransaction("URL", "Cat-Test-Call", null);
-			event = new DefaultEvent("Call", "192.168.1.0:3000:class:method1", null);
+			t = new DefaultTransaction("Call", "Cat-Test-Call", null);
+			event = new DefaultEvent("Exception", "192.168.1.0:3000:class:method1", null);
 		} else if (i % 3 == 1) {
 			t = new DefaultTransaction("PigeonCall", "Cat-Test-Call", null);
 			event = new DefaultEvent("PigeonCall.server", "192.168.1.2:3000:class:method2", null);

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -146,15 +146,15 @@ public static void logError(Throwable cause) {
 	public static void logEvent(String type, String name) {
 		Cat.getProducer().logEvent(type, name);
 	}
-	
+
 	public static void logTrace(String type, String name) {
 		Cat.getProducer().logTrace(type, name);
 	}
 
 	public static void logEvent(String type, String name, String status, String nameValuePairs) {
 		Cat.getProducer().logEvent(type, name, status, nameValuePairs);
 	}
-	
+
 	public static void logTrace(String type, String name, String status, String nameValuePairs) {
 		Cat.getProducer().logTrace(type, name, status, nameValuePairs);
 	}

File: cat-client/src/main/java/com/dianping/cat/CatClientModule.java
Patch:
@@ -64,7 +64,7 @@ protected void execute(final ModuleContext ctx) throws Exception {
 
 			MmapConsumerTask mmapReaderTask = ctx.lookup(MmapConsumerTask.class);
 			Threads.forGroup("Cat").start(mmapReaderTask);
-			
+
 			ABTestManager.initialize();
 		}
 	}

File: cat-client/src/main/java/com/dianping/cat/CatConstants.java
Patch:
@@ -12,7 +12,7 @@ public class CatConstants {
 	 * Cat instrument attribute names
 	 */
 	public static final String CAT_STATE = "cat-state";
-	
+
 	public static final String CAT_PAGE_URI = "cat-page-uri";
 
 	/**
@@ -69,7 +69,7 @@ public class CatConstants {
 	public static final String TYPE_URL_FORWARD = "URL.Forward";
 
 	public static final String TYPE_ACTION = "Action";
-	
+
 	public static final String TYPE_METRIC = "metricType";
 
 	public static final int ERROR_COUNT = 100;

File: cat-client/src/main/java/com/dianping/cat/configuration/NetworkInterfaceManager.java
Patch:
@@ -63,7 +63,7 @@ private void load() {
 
 			m_local = local;
 		} catch (SocketException e) {
-			e.printStackTrace();
+			//ignore it
 		}
 	}
 }

File: cat-client/src/main/java/com/dianping/cat/message/MessageProducer.java
Patch:
@@ -161,9 +161,9 @@ public interface MessageProducer {
 	 * Log an trace in one shot with SUCCESS status.
 	 * 
 	 * @param type
-	 *           event type
+	 *           trace type
 	 * @param name
-	 *           event name
+	 *           trace name
 	 */
 	public void logTrace(String type, String name);
 

File: cat-client/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -117,10 +117,10 @@ protected void setTraceMode(HttpServletRequest req) {
 				String paraMode = req.getParameter(traceMode);
 				String headMode = req.getHeader(traceMode);
 
-				if (("true").equals(paraMode)) {
+				if ("true".equals(paraMode)) {
 					Cat.getManager().setTraceMode(true);
 				}
-				if (headMode != null && ("true").equals(headMode)) {
+				if ("true".equals(headMode)) {
 					Cat.getManager().setTraceMode(true);
 				}
 			}

File: cat-client/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -20,7 +20,6 @@
 import com.dianping.cat.message.internal.MillisSecondTimerTest;
 import com.dianping.cat.message.internal.MockMessageBuilderTest;
 import com.dianping.cat.message.spi.codec.PlainTextMessageCodecTest;
-import com.dianping.cat.message.spi.internal.DefaultMessagePathBuilderTest;
 import com.dianping.cat.servlet.CatFilterTest;
 
 @RunWith(Suite.class)
@@ -59,8 +58,6 @@
 
 MillisSecondTimerTest.class,
 
-DefaultMessagePathBuilderTest.class,
-
 MockMessageBuilderTest.class,
 
 /* .spi.codec */

File: cat-client/src/test/java/com/dianping/cat/message/io/TcpSocketSenderTest.java
Patch:
@@ -23,10 +23,10 @@
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 @RunWith(JUnit4.class)
-public class TcpSocketHierarchyTest extends ComponentTestCase {
+public class TcpSocketSenderTest extends ComponentTestCase {
 	@Test
 	public void test() throws Exception {
-		TcpSocketSender sender = (TcpSocketSender) lookup(MessageSender.class, "tcp-socket-hierarchy");
+		TcpSocketSender sender = (TcpSocketSender) lookup(MessageSender.class, TcpSocketSender.ID);
 		List<InetSocketAddress> addresses = getServerAddresses();
 		StringBuilder result = new StringBuilder();
 		ServerBootstrap bootstrap = createServerBootstrap(result);

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.consumer.advanced.MetricAnalyzerTest;
-import com.dianping.cat.consumer.browser.BrowserReportMergerTest;
 import com.dianping.cat.consumer.cross.CrossAnalyzerTest;
 import com.dianping.cat.consumer.cross.CrossInfoTest;
 import com.dianping.cat.consumer.cross.CrossReportMergerTest;
@@ -34,8 +33,6 @@
 
 DatabaseParserTest.class,
 
-BrowserReportMergerTest.class,
-
 CrossAnalyzerTest.class,
 
 SqlAnalyzerTest.class,

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/sql/SqlParsersTest.java
Patch:
@@ -26,4 +26,5 @@ public void testParseTables() {
 		checkTables("select r.id,r.name,r.des from resource r where r.id in "
 		      + "(select resource_id from resource_role where role_id=?)", "resource", "resource_role");
 	}
+	
 }

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/DefaultProblemHandler.java
Patch:
@@ -84,7 +84,6 @@ private void processTransaction(Machine machine, Transaction transaction, Messag
 	}
 
 	private void processHeartbeat(Machine machine, Heartbeat heartbeat, MessageTree tree) {
-		// String type = ProblemType.HEARTBEAT.getName();
 		String type = heartbeat.getType().toLowerCase();
 		String status = heartbeat.getName();
 		Entry entry = findOrCreateEntry(machine, type, status);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -86,11 +86,11 @@ protected void process(MessageTree tree) {
 		// do nothing
 	}
 
-	public void setProblemAnalyzer(ProblemAnalyzer problemAnalyzer) {
+	public synchronized void setProblemAnalyzer(ProblemAnalyzer problemAnalyzer) {
 		m_problemAnalyzer = problemAnalyzer;
 	}
 
-	public void setTransactionAnalyzer(TransactionAnalyzer transactionAnalyzer) {
+	public synchronized void setTransactionAnalyzer(TransactionAnalyzer transactionAnalyzer) {
 		m_transactionAnalyzer = transactionAnalyzer;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -193,7 +193,7 @@ protected void processTypeAndName(Transaction t, TransactionType type, Transacti
 		}
 
 		// update statistics
-		Integer allDuration = new Integer((int) duration);
+		Integer allDuration = (int) duration;
 
 		name.setMax(Math.max(name.getMax(), duration));
 		name.setMin(Math.min(name.getMin(), duration));

File: cat-core/src/main/java/com/dianping/cat/ServerConfigManager.java
Patch:
@@ -189,7 +189,7 @@ public Map<String, Domain> getLongConfigDomains() {
 				return longConfig.getDomains();
 			}
 		}
-		
+
 		return Collections.emptyMap();
 	}
 
@@ -326,5 +326,5 @@ private long toLong(String str, long defaultValue) {
 	public boolean validateDomain(String domain) {
 		return !domain.equals("PhoenixAgent") && !domain.equals(Constants.FRONT_END);
 	}
-	
+
 }

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -12,7 +12,6 @@
 import com.dianping.cat.ServerConfigManager;
 import com.dianping.cat.analysis.DefaultMessageAnalyzerManager;
 import com.dianping.cat.analysis.MessageAnalyzerManager;
-import com.dianping.cat.configuration.ClientConfigManager;
 import com.dianping.cat.core.dal.HostinfoDao;
 import com.dianping.cat.core.dal.ProjectDao;
 import com.dianping.cat.core.dal.TaskDao;
@@ -43,8 +42,7 @@ public List<Component> defineComponents() {
 		all.add(C(ServerConfigManager.class));
 		all.add(C(ServerStatisticManager.class));
 
-		all.add(C(MessagePathBuilder.class, DefaultMessagePathBuilder.class) //
-		      .req(ClientConfigManager.class));
+		all.add(C(MessagePathBuilder.class, DefaultMessagePathBuilder.class));
 
 		all.add(C(MessageAnalyzerManager.class, DefaultMessageAnalyzerManager.class));
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/WaterfallMessageCodec.java
Patch:
@@ -100,8 +100,7 @@ protected int encodeFooter(MessageTree tree, ChannelBuffer buf) {
 		b.tag2("svg");
 		sb.append("</td></tr>");
 
-		int count = helper.write(buf, sb.toString());
-		return count;
+		return helper.write(buf, sb.toString());
 	}
 
 	protected int encodeHeader(MessageTree tree, ChannelBuffer buf, Ruler ruler) {

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -77,7 +77,7 @@ public class LocalMessageBucketManager extends ContainerHolder implements Messag
 
 	private int m_gzipThreads = 10;
 
-	private BlockingQueue<MessageBlock> m_messageBlocks = new LinkedBlockingQueue<MessageBlock>(10000);
+	private BlockingQueue<MessageBlock> m_messageBlocks = new LinkedBlockingQueue<MessageBlock>(100000);
 
 	private Map<Integer, LinkedBlockingQueue<MessageItem>> m_messageQueues = new ConcurrentHashMap<Integer, LinkedBlockingQueue<MessageItem>>();
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBlockReader.java
Patch:
@@ -32,7 +32,7 @@ public byte[] readMessage(int index) throws IOException {
 		byte[] buf;
 
 		synchronized (m_indexFile) {
-			m_indexFile.seek(index * 6);
+			m_indexFile.seek(index * 6L);
 			blockAddress = m_indexFile.readInt();
 			blockOffset = m_indexFile.readShort() & 0xFFFF;
 		}
@@ -48,9 +48,9 @@ public byte[] readMessage(int index) throws IOException {
 
 		try {
 			in.skip(blockOffset);
-			
+
 			int len = in.readInt();
-			
+
 			byte[] data = new byte[len];
 
 			in.readFully(data);

File: cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBlockWriter.java
Patch:
@@ -35,7 +35,7 @@ public synchronized void writeBlock(MessageBlock block) throws IOException {
 			int seq = block.getIndex(i);
 			int size = block.getSize(i);
 
-			m_indexFile.seek(seq * 6);
+			m_indexFile.seek(seq * 6L);
 			m_indexFile.writeInt(m_blockAddress);
 			m_indexFile.writeShort(blockSize);
 			blockSize += size;

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/FileSystemManager.java
Patch:
@@ -117,7 +117,6 @@ public void initialize() throws InitializationException {
 				SecurityUtil.login(m_config, "dfs.cat.keytab.file", "dfs.cat.kerberos.principal");
 			} catch (IOException e) {
 				Cat.logError(e);
-				//throw new InitializationException("init FileSystemManager fail", e);
 			}
 		} else {
 			m_config = new Configuration();

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucket.java
Patch:
@@ -13,6 +13,7 @@
 import org.jboss.netty.buffer.ChannelBuffers;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageCodec;
 import com.dianping.cat.message.spi.MessageTree;
@@ -56,7 +57,7 @@ public MessageTree findByIndex(int index) throws IOException {
 			m_lastAccessTime = System.currentTimeMillis();
 			return tree;
 		} catch (EOFException e) {
-			System.out.println(e);
+			Cat.logError(e);
 			return null;
 		}
 	}
@@ -102,7 +103,7 @@ public byte[] readMessage(int index) throws IOException {
 			byte[] buf;
 
 			synchronized (m_indexFile) {
-				m_indexFile.seek(index * 6);
+				m_indexFile.seek(index * 6L);
 				blockAddress = m_indexFile.readInt();
 				blockOffset = m_indexFile.readShort() & 0xFFFF;
 			}

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -25,7 +25,7 @@ public class CatHomeModule extends AbstractModule {
 	@Override
 	protected void execute(ModuleContext ctx) throws Exception {
 		ServerConfigManager serverConfigManager = ctx.lookup(ServerConfigManager.class);
-		
+
 		ctx.lookup(MessageConsumer.class);
 		if (!serverConfigManager.isLocalMode()) {
 			ConfigReloadTask configReloadTask = ctx.lookup(ConfigReloadTask.class);
@@ -34,13 +34,13 @@ protected void execute(ModuleContext ctx) throws Exception {
 			Threads.forGroup("Cat").start(configReloadTask);
 			Threads.forGroup("Cat").start(uploader);
 		}
-		
+
 		if (serverConfigManager.isJobMachine() && !serverConfigManager.isLocalMode()) {
 			DefaultTaskConsumer taskConsumer = ctx.lookup(DefaultTaskConsumer.class);
 			MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
 			DomainNavManager domainNavManager = ctx.lookup(DomainNavManager.class);
 			CachedReportTask cachedReportTask = ctx.lookup(CachedReportTask.class);
-		
+
 			Threads.forGroup("Cat").start(cachedReportTask);
 			Threads.forGroup("Cat").start(domainNavManager);
 			Threads.forGroup("Cat").start(metricAlert);

File: cat-home/src/main/java/com/dianping/cat/build/ABTestComponentConfigurator.java
Patch:
@@ -43,7 +43,7 @@ public List<Component> defineComponents() {
 		all.add(C(ABTestService.class, ABTestServiceImpl.class).req(AbtestDao.class).req(AbtestRunDao.class)
 		      .req(GroupStrategyDao.class).req(ProjectDao.class).req(CaseBuilder.class)
 		      .config(E("refreshTimeInSeconds").value("60")));
-		
+
 		all.add(C(CaseBuilder.class).req(GsonBuilderManager.class));
 
 		return all;

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -43,8 +43,7 @@
 
 com.dianping.cat.report.page.externalError.Handler.class,
 
-com.dianping.cat.report.page.statistics.Handler.class
-})
+com.dianping.cat.report.page.statistics.Handler.class })
 public class ReportModule extends AbstractModule {
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportModel.java
Patch:
@@ -90,8 +90,9 @@ public String getDisplayHour() {
 		int hour = cal.get(Calendar.HOUR_OF_DAY);
 		if (hour < 10) {
 			return "0" + Integer.toString(hour);
-		} else
+		} else {
 			return Integer.toString(hour);
+		}
 	}
 
 	// required by report tag

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -223,7 +223,7 @@ public void setDate(String date) {
 		} else {
 			try {
 				Date temp = null;
-				if (date != null && date.length() == 10) {
+				if (date.length() == 10) {
 					temp = m_hourlyFormat.parse(date);
 				} else {
 					temp = m_dayFormat.parse(date);

File: cat-home/src/main/java/com/dianping/cat/report/page/BaseHistoryGraphs.java
Patch:
@@ -18,7 +18,7 @@ protected List<String> buildSubTitle(Date date, int size, long step, String quer
 			result.add(buildSingalTitle(new Date(date.getTime() - 7 * TimeUtil.ONE_DAY), size, step));
 		} else if (queryType.equals("week")) {
 			result.add(buildSingalTitle(date, size, step));
-			result.add(buildSingalTitle(new Date(date.getTime() - 7*TimeUtil.ONE_DAY), size, step));
+			result.add(buildSingalTitle(new Date(date.getTime() - 7 * TimeUtil.ONE_DAY), size, step));
 		} else if (queryType.equals("month")) {
 			result.add(buildSingalTitle(date, size, step));
 		}
@@ -30,8 +30,7 @@ private String buildSingalTitle(Date date, int size, long step) {
 		SimpleDateFormat to = new SimpleDateFormat("MM-dd");
 		StringBuilder sb = new StringBuilder();
 
-		sb.append(from.format(date)).append("~")
-		      .append(to.format(new Date(date.getTime() + step * size)));
+		sb.append(from.format(date)).append("~").append(to.format(new Date(date.getTime() + step * size)));
 		return sb.toString();
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Action.java
Patch:
@@ -1,8 +1,8 @@
 package com.dianping.cat.report.page.cache;
 
 public enum Action implements org.unidal.web.mvc.Action {
-	HISTORY_REPORT("history"), 
-	
+	HISTORY_REPORT("history"),
+
 	HOURLY_REPORT("view");
 
 	public static Action getByName(String name, Action defaultAction) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -61,7 +61,7 @@ public void addNewNameItem(TransactionName transactionName, EventName eventName)
 	public void addNewTypeItem(TransactionType transactionType, EventType eventType) {
 		String key = transactionType.getId();
 		CacheTypeItem item = m_typeItems.get(key);
-		
+
 		if (item == null) {
 			item = new CacheTypeItem();
 			item.setType(transactionType);

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/JspFile.java
Patch:
@@ -1,8 +1,8 @@
 package com.dianping.cat.report.page.cache;
 
 public enum JspFile {
-	HISTORY_REPORT("/jsp/report/cache/cacheHistory.jsp"), 
-	
+	HISTORY_REPORT("/jsp/report/cache/cacheHistory.jsp"),
+
 	HOURLY_REPORT("/jsp/report/cache/cache.jsp"),
 
 	;

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Action.java
Patch:
@@ -12,7 +12,7 @@ public enum Action implements org.unidal.web.mvc.Action {
 	HISTORY_METHOD("historyMethod"),
 
 	HISTORY_PROJECT("history"),
-	
+
 	METHOD_QUERY("query");
 
 	public static Action getByName(String name, Action defaultAction) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/JspFile.java
Patch:
@@ -12,7 +12,7 @@ public enum JspFile {
 	HISTORY_METHOD("/jsp/report/cross/crossHistoryMethod.jsp"),
 
 	HISTORY_PROJECT("/jsp/report/cross/crossHistoryProject.jsp"),
-	
+
 	METHOD_QUERY("/jsp/report/cross/crossMethodQuery.jsp");
 
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Model.java
Patch:
@@ -143,6 +143,5 @@ public void setReport(CrossReport report) {
 	public void setServiceSort(String serviceSort) {
 		m_serviceSort = serviceSort;
 	}
-	
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Payload.java
Patch:
@@ -14,7 +14,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private Action m_action;
 
 	@FieldMeta("callSort")
-	private String m_callSort ="avg";
+	private String m_callSort = "avg";
 
 	private ReportPage m_page;
 
@@ -25,7 +25,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_remoteIp;
 
 	@FieldMeta("serviceSort")
-	private String m_serviceSort ="avg";
+	private String m_serviceSort = "avg";
 
 	@FieldMeta("queryName")
 	private String m_queryName;
@@ -103,7 +103,7 @@ public void setProjectName(String projectName) {
 	public void setQueryName(String queryName) {
 		m_queryName = queryName;
 	}
-	
+
 	public void setRemoteIp(String remoteIp) {
 		m_remoteIp = remoteIp;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/TypeDetailInfo.java
Patch:
@@ -83,8 +83,8 @@ public void mergeType(Type type) {
 			m_tps = m_totalCount / (double) m_seconds;
 		}
 	}
-	
-	public void mergeTypeDetailInfo(TypeDetailInfo type){
+
+	public void mergeTypeDetailInfo(TypeDetailInfo type) {
 		m_totalCount += type.getTotalCount();
 		m_failureCount += type.getFailureCount();
 		m_sum += type.getSum();

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/JspFile.java
Patch:
@@ -6,7 +6,7 @@ public enum JspFile {
 	TOPOLOGY("/jsp/report/dependency/dependencyTopologyGraph.jsp"),
 
 	DASHBOARD("/jsp/report/dependency/dependencyDashboard.jsp"),
-	
+
 	PRODUCT_LINE("/jsp/report/dependency/dependencyProductLine.jsp"),
 
 	;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/dashboard/ProductLinesDashboard.java
Patch:
@@ -20,7 +20,7 @@ public class ProductLinesDashboard {
 	public String toJson() {
 		String str = new Gson().toJson(this);
 		str = str.replaceAll("\"m_", "\"");
-		
+
 		return str;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphBuilder.java
Patch:
@@ -135,7 +135,7 @@ public void visitDependency(Dependency dependency) {
 				TopologyNode nodeOld = graph.findTopologyNode(target);
 
 				graph.getNodes().put(target, mergeNode(nodeOld, m_itemBuilder.createDatabaseNode(target)));
-			}else if("Cache".equals(type)){
+			} else if ("Cache".equals(type)) {
 				String target = dependency.getTarget();
 				TopologyNode nodeOld = graph.findTopologyNode(target);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Model.java
Patch:
@@ -38,7 +38,7 @@ public class Model extends AbstractReportModel<Action, Context> {
 	private EventReport m_report;
 
 	private String m_type;
-	
+
 	private String m_pieChart;
 
 	public Model(Context ctx) {

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/EventCollectManager.java
Patch:
@@ -111,7 +111,6 @@ public List<Event> queryEvents(String domain, Date date) {
 		long current = System.currentTimeMillis();
 
 		if (current - date.getTime() < TimeUtil.ONE_HOUR * 2) {
-			// return queryEventsByDB(domain, date, 10);
 			return queryEventsByMemory(domain, date, 10);
 		} else {
 			return queryEventsByDB(domain, date, 10);

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Action.java
Patch:
@@ -1,10 +1,10 @@
 package com.dianping.cat.report.page.heartbeat;
 
 public enum Action implements org.unidal.web.mvc.Action {
-	HISTORY("history"), 
-	
+	HISTORY("history"),
+
 	VIEW("view"),
-	
+
 	PART_HISTORY("historyPart");
 
 	public static Action getByName(String name, Action defaultAction) {

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/DisplayHeartbeat.java
Patch:
@@ -249,7 +249,7 @@ public String getDisksGraph() {
 					if (ds.size() > i) {
 						Disk disk = ds.get(i);
 
-						values[minute] = disk.getFree() / K / K / K;
+						values[minute] = disk.getFree() * 1.0 / K / K / K;
 					}
 				}
 
@@ -276,7 +276,7 @@ public List<double[]> getDiskValues() {
 					int minute = period.getMinute();
 					Disk disk = period.getDisks().get(i);
 
-					values[minute] = disk.getFree() / K / K / K;
+					values[minute] = disk.getFree() * 1.0 / K / K / K;
 				}
 				result.add(values);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -175,7 +175,6 @@ private DisplayHeartbeat showReport(Model model, Payload payload) {
 				String displayIp = getIpAddress(report, payload);
 
 				payload.setRealIp(displayIp);
-				// model.setIpAddress(ip);
 				return new DisplayHeartbeat(m_builder).display(report, displayIp);
 			}
 		} catch (Throwable e) {

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/JspFile.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum JspFile {
 	HISTORY("/jsp/report/heartbeat/heartbeatHistoryGraph.jsp"),
-	
+
 	PART_HISTORY("/jsp/report/heartbeat/heartbeatPartHistoryGraph.jsp"),
 
 	VIEW("/jsp/report/heartbeat/heartbeat.jsp");

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Handler.java
Patch:
@@ -55,8 +55,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			} else {
 				file = "unknown";
 			}
-		} 
-		
+		}
+
 		int index = file.indexOf('?');
 		if (index > -1) {
 			file = file.substring(0, index);

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Model.java
Patch:
@@ -5,9 +5,9 @@
 import com.dianping.cat.report.ReportPage;
 
 public class Model extends ViewModel<ReportPage, Action, Context> {
-	
+
 	private String m_status;
-	
+
 	public Model(Context ctx) {
 		super(ctx);
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Action.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum Action implements org.unidal.web.mvc.Action {
 	METRIC("view"),
-	
+
 	DASHBOARD("dashboard");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -71,7 +71,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 	private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.METRIC);
 		String poduct = payload.getProduct();
-		
+
 		if (poduct == null || poduct.length() == 0) {
 			payload.setAction(Action.DASHBOARD.getName());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/JspFile.java
Patch:
@@ -2,9 +2,8 @@
 
 public enum JspFile {
 	METRIC("/jsp/report/metric/metric.jsp"),
-	
-	DASHBOARD("/jsp/report/metric/dashboard.jsp"),
-	;
+
+	DASHBOARD("/jsp/report/metric/dashboard.jsp"), ;
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Range.java
Patch:
@@ -9,8 +9,7 @@ public enum Range {
 
 	ONE_DAY("24小时", 24),
 
-	TWO_DAY("48小时", 48),
-	;
+	TWO_DAY("48小时", 48), ;
 
 	private String m_title;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/CachedMetricReportService.java
Patch:
@@ -5,7 +5,7 @@
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 
 public interface CachedMetricReportService {
-	
-	public MetricReport query(String product,Date date);
+
+	public MetricReport query(String product, Date date);
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/chart/impl/CachedMetricReportServiceImpl.java
Patch:
@@ -61,7 +61,7 @@ public MetricReport query(String product, Date start) {
 			if (m_service.isEligable(request)) {
 				ModelResponse<MetricReport> response = m_service.invoke(request);
 				MetricReport report = response.getModel();
-				
+
 				return report;
 			} else {
 				throw new RuntimeException("Internal error: no eligable metric service registered for " + request + "!");

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/HistoricalCrossService.java
Patch:
@@ -52,7 +52,9 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/LocalCrossService.java
Patch:
@@ -38,7 +38,9 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/HistoricalDependencyService.java
Patch:
@@ -53,7 +53,9 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -53,7 +53,9 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/HistoricalHeartbeatService.java
Patch:
@@ -52,7 +52,9 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/HistoricalMessageService.java
Patch:
@@ -87,7 +87,7 @@ protected String toString(ModelRequest request, MessageTree tree) {
 		} catch (Exception e) {
 			// ignore it
 		}
-		
+
 		return null;
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/HistoricalMatrixService.java
Patch:
@@ -52,7 +52,9 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/LocalMatrixService.java
Patch:
@@ -38,7 +38,9 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -51,7 +51,9 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -53,7 +53,9 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -86,7 +86,6 @@ public ModelResponse<T> invoke(ModelRequest request) {
 				t.setStatus("NoReportFound");
 			}
 		} catch (Exception e) {
-			e.printStackTrace();
 			logError(e);
 			t.setStatus(e);
 			response.setException(e);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/sql/HistoricalSqlService.java
Patch:
@@ -52,7 +52,9 @@ private SqlReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/HistoricalStateService.java
Patch:
@@ -52,7 +52,9 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -37,7 +37,9 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/HistoricalTopService.java
Patch:
@@ -52,7 +52,9 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/LocalTopService.java
Patch:
@@ -37,7 +37,9 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/CompositeTransactionService.java
Patch:
@@ -26,7 +26,7 @@ protected TransactionReport merge(ModelRequest request, List<ModelResponse<Trans
 			return null;
 		}
 		TransactionReportMerger merger = new TransactionReportMerger(new TransactionReport(request.getDomain()));
-		
+
 		for (ModelResponse<TransactionReport> response : responses) {
 			if (response != null) {
 				TransactionReport model = response.getModel();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -53,7 +53,9 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -37,7 +37,9 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Action.java
Patch:
@@ -6,7 +6,7 @@ public enum Action implements org.unidal.web.mvc.Action {
 	GROUP("group"),
 
 	HOUR_GRAPH("hourlyGraph"),
-	
+
 	HISTORY("history"),
 
 	HISTORY_GRAPH("historyGraph"),

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/GroupLevelInfo.java
Patch:
@@ -120,7 +120,7 @@ public static class GroupStatistics {
 		public GroupStatistics(int lastMinute) {
 			for (int i = 0; i <= lastMinute; i++) {
 
-				m_statistics.put(new Integer(i), new TreeSet<String>());
+				m_statistics.put(i, new TreeSet<String>());
 			}
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/JspFile.java
Patch:
@@ -7,7 +7,7 @@ public enum JspFile {
 	DETAIL("/jsp/report/problem/problemDetail.jsp"),
 
 	GROUP("/jsp/report/problem/problemGroup.jsp"),
-	
+
 	HOUR_GRAPH("/jsp/report/problem/problemHourlyGraphs.jsp"),
 
 	HISTORY("/jsp/report/problem/problemHistoryReport.jsp"),

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Model.java
Patch:
@@ -14,7 +14,7 @@
 
 @ModelMeta(ProblemAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
-	
+
 	@EntityMeta
 	private ProblemStatistics m_allStatistics;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Payload.java
Patch:
@@ -47,7 +47,7 @@ public Payload() {
 		super(ReportPage.PROBLEM);
 	}
 
-	public String getQueryString(){
+	public String getQueryString() {
 		StringBuilder sb = new StringBuilder();
 
 		sb.append("&urlThreshold=").append(m_urlThreshold);
@@ -57,6 +57,7 @@ public String getQueryString(){
 		sb.append("&callThreshold=").append(m_callThreshold);
 		return sb.toString();
 	}
+
 	@Override
 	public Action getAction() {
 		return m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/ThreadLevelInfo.java
Patch:
@@ -237,7 +237,7 @@ public static class TheadStatistics {
 
 		public TheadStatistics(int lastMinute) {
 			for (int i = 0; i <= lastMinute; i++) {
-				m_statistics.put(new Integer(i), new TreeSet<String>());
+				m_statistics.put(i, new TreeSet<String>());
 			}
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/Handler.java
Patch:
@@ -137,7 +137,7 @@ private String buildPieChart(List<Table> tables) {
 		List<Item> items = new ArrayList<Item>();
 
 		for (Table table : tables) {
-			if(!table.getId().equals("All")){
+			if (!table.getId().equals("All")) {
 				items.add(new Item().setTitle(table.getId()).setNumber(table.getTotalCount()));
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/JspFile.java
Patch:
@@ -1,8 +1,8 @@
 package com.dianping.cat.report.page.sql;
 
 public enum JspFile {
-	HOURLY_REPORT("/jsp/report/sql/sql.jsp"), 
-	
+	HOURLY_REPORT("/jsp/report/sql/sql.jsp"),
+
 	HISTORY_REPORT("/jsp/report/sql/sqlHistory.jsp");
 
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Action.java
Patch:
@@ -2,11 +2,11 @@
 
 public enum Action implements org.unidal.web.mvc.Action {
 	HOURLY("view"),
-	
+
 	HISTORY("history"),
-	
+
 	GRAPH("graph"),
-	
+
 	HISTORY_GRAPH("historyGraph");
 
 	public static Action getByName(String name, Action defaultAction) {

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java
Patch:
@@ -46,7 +46,7 @@ public StateReport getHistoryReport(Payload payload) {
 		String domain = CAT;
 		Date start = payload.getHistoryStartDate();
 		Date end = payload.getHistoryEndDate();
-		
+
 		return m_reportService.queryStateReport(domain, start, end);
 	}
 
@@ -119,14 +119,13 @@ private void normalize(Model model, Payload payload) {
 		model.setPage(ReportPage.STATE);
 		String ip = payload.getIpAddress();
 		Action action = payload.getAction();
-		
+
 		if (action == Action.HOURLY || action == Action.HISTORY) {
 			if (!CAT.equalsIgnoreCase(payload.getDomain()) || StringUtils.isEmpty(ip)) {
 				payload.setIpAddress(Constants.ALL);
 			}
 		}
 		m_normalizePayload.normalize(model, payload);
 	}
-	
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Payload.java
Patch:
@@ -14,7 +14,7 @@ public class Payload extends AbstractReportPayload<Action> {
 
 	@FieldMeta("sort")
 	private String m_sortBy = "avg";
-	
+
 	@FieldMeta("tab")
 	private String m_tab = "tab1";
 

File: cat-home/src/main/java/com/dianping/cat/report/page/top/Handler.java
Patch:
@@ -35,7 +35,7 @@ public class Handler implements PageHandler<Context> {
 
 	@Inject
 	private PayloadNormalizer m_normalizePayload;
-	
+
 	@Inject
 	private ExceptionThresholdConfigManager m_configManager;
 
@@ -76,10 +76,10 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 		if (!payload.getPeriod().isCurrent()) {
 			minuteCount = 60;
-		}else{
+		} else {
 			minuteCount = payload.getMinuteCounts();
 		}
-		TopMetric displayTop = new TopMetric(minuteCount, payload.getTopCounts(),m_configManager);
+		TopMetric displayTop = new TopMetric(minuteCount, payload.getTopCounts(), m_configManager);
 
 		displayTop.visitTopReport(report);
 		model.setTopReport(report);

File: cat-home/src/main/java/com/dianping/cat/report/page/top/TopMetric.java
Patch:
@@ -162,7 +162,7 @@ public static class Item {
 
 		private double m_value;
 
-		private int m_alert ;
+		private int m_alert;
 
 		private ExceptionThresholdConfigManager m_configManager;
 
@@ -245,8 +245,8 @@ public void setValue(double value) {
 				}
 			}
 			if (errorLimit > 0 && value > errorLimit) {
-				m_alert =2;
-			}else if (warningLimit > 0 && value > warningLimit) {
+				m_alert = 2;
+			} else if (warningLimit > 0 && value > warningLimit) {
 				m_alert = 1;
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -42,7 +42,7 @@ public class Model extends AbstractReportModel<Action, Context> {
 	private String m_responseTrend;
 
 	private String m_type;
-	
+
 	private String m_pieChart;
 
 	public Model(Context ctx) {
@@ -85,7 +85,7 @@ public List<String> getDomains() {
 			return StringSortHelper.sortDomain(domainNames);
 		}
 	}
-	
+
 	public String getErrorTrend() {
 		return m_errorTrend;
 	}
@@ -197,5 +197,5 @@ public void setResponseTrend(String responseTrend) {
 	public void setType(String type) {
 		m_type = type;
 	}
-	
+
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/TransactionMergeManager.java
Patch:
@@ -14,7 +14,7 @@ public TransactionReport mergerAll(TransactionReport report, String ipAddress, S
 	public TransactionReport mergerAllIp(TransactionReport report, String ipAddress) {
 		if (Constants.ALL.equalsIgnoreCase(ipAddress)) {
 			MergeAllMachine all = new MergeAllMachine();
-			
+
 			all.visitTransactionReport(report);
 			report = all.getReport();
 		}
@@ -24,7 +24,7 @@ public TransactionReport mergerAllIp(TransactionReport report, String ipAddress)
 	private TransactionReport mergerAllName(TransactionReport report, String allName) {
 		if (Constants.ALL.equalsIgnoreCase(allName)) {
 			MergeAllName all = new MergeAllName();
-			
+
 			all.visitTransactionReport(report);
 			report = all.getReport();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/service/AbstractReportService.java
Patch:
@@ -26,10 +26,10 @@ public abstract class AbstractReportService<T> {
 
 	@Inject
 	protected HourlyReportDao m_hourlyReportDao;
-	
+
 	@Inject
 	protected HourlyReportContentDao m_hourlyReportContentDao;
-	
+
 	@Inject
 	protected DailyReportDao m_dailyReportDao;
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/BugReportService.java
Patch:
@@ -176,7 +176,7 @@ public BugReport queryWeeklyReport(String domain, Date start) {
 			WeeklyReport entity = m_weeklyReportDao.findReportByDomainNamePeriod(start, domain, Constants.REPORT_BUG,
 			      WeeklyReportEntity.READSET_FULL);
 			String content = entity.getContent();
-			
+
 			if (content != null && content.length() > 0) {
 				return com.dianping.cat.home.bug.transform.DefaultSaxParser.parse(content);
 			} else {

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/CrossReportService.java
Patch:
@@ -95,8 +95,7 @@ public CrossReport queryDailyReport(String domain, Date start, Date end) {
 				String xml = report.getContent();
 
 				if (xml != null && xml.length() > 0) {
-					CrossReport reportModel = com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser
-					      .parse(xml);
+					CrossReport reportModel = com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser.parse(xml);
 					reportModel.accept(merger);
 				} else {
 					CrossReport reportModel = queryFromDailyBinary(report.getId(), domain);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/EventReportService.java
Patch:
@@ -95,8 +95,7 @@ public EventReport queryDailyReport(String domain, Date start, Date end) {
 				String xml = report.getContent();
 
 				if (xml != null && xml.length() > 0) {
-					EventReport reportModel = com.dianping.cat.consumer.event.model.transform.DefaultSaxParser
-					      .parse(xml);
+					EventReport reportModel = com.dianping.cat.consumer.event.model.transform.DefaultSaxParser.parse(xml);
 					reportModel.accept(merger);
 				} else {
 					EventReport reportModel = queryFromDailyBinary(report.getId(), domain);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/HeavyReportService.java
Patch:
@@ -176,7 +176,7 @@ public HeavyReport queryWeeklyReport(String domain, Date start) {
 			WeeklyReport entity = m_weeklyReportDao.findReportByDomainNamePeriod(start, domain, Constants.REPORT_HEAVY,
 			      WeeklyReportEntity.READSET_FULL);
 			String content = entity.getContent();
-			
+
 			if (content != null && content.length() > 0) {
 				return com.dianping.cat.home.heavy.transform.DefaultSaxParser.parse(content);
 			} else {

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/MatrixReportService.java
Patch:
@@ -95,8 +95,7 @@ public MatrixReport queryDailyReport(String domain, Date start, Date end) {
 				String xml = report.getContent();
 
 				if (xml != null && xml.length() > 0) {
-					MatrixReport reportModel = com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser
-					      .parse(xml);
+					MatrixReport reportModel = com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser.parse(xml);
 					reportModel.accept(merger);
 				} else {
 					MatrixReport reportModel = queryFromDailyBinary(report.getId(), domain);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/ServiceReportService.java
Patch:
@@ -155,8 +155,8 @@ public ServiceReport queryHourlyReport(String domain, Date start, Date end) {
 	@Override
 	public ServiceReport queryMonthlyReport(String domain, Date start) {
 		try {
-			MonthlyReport entity = m_monthlyReportDao.findReportByDomainNamePeriod(start, domain, Constants.REPORT_SERVICE,
-			      MonthlyReportEntity.READSET_FULL);
+			MonthlyReport entity = m_monthlyReportDao.findReportByDomainNamePeriod(start, domain,
+			      Constants.REPORT_SERVICE, MonthlyReportEntity.READSET_FULL);
 			String content = entity.getContent();
 
 			if (content != null && content.length() > 0) {
@@ -176,7 +176,7 @@ public ServiceReport queryWeeklyReport(String domain, Date start) {
 			WeeklyReport entity = m_weeklyReportDao.findReportByDomainNamePeriod(start, domain, Constants.REPORT_SERVICE,
 			      WeeklyReportEntity.READSET_FULL);
 			String content = entity.getContent();
-			
+
 			if (content != null && content.length() > 0) {
 				return com.dianping.cat.home.service.transform.DefaultSaxParser.parse(content);
 			} else {

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/StateReportService.java
Patch:
@@ -94,8 +94,7 @@ public StateReport queryDailyReport(String domain, Date start, Date end) {
 				String xml = report.getContent();
 
 				if (xml != null && xml.length() > 0) {
-					StateReport reportModel = com.dianping.cat.consumer.state.model.transform.DefaultSaxParser
-					      .parse(xml);
+					StateReport reportModel = com.dianping.cat.consumer.state.model.transform.DefaultSaxParser.parse(xml);
 					reportModel.accept(merger);
 				} else {
 					StateReport reportModel = queryFromDailyBinary(report.getId(), domain);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/TopReportService.java
Patch:
@@ -64,8 +64,7 @@ public TopReport queryHourlyReport(String domain, Date start, Date end) {
 
 					try {
 						if (xml != null && xml.length() > 0) {
-							TopReport reportModel = com.dianping.cat.consumer.top.model.transform.DefaultSaxParser
-							      .parse(xml);
+							TopReport reportModel = com.dianping.cat.consumer.top.model.transform.DefaultSaxParser.parse(xml);
 							reportModel.accept(merger);
 						} else {
 							TopReport reportModel = queryFromHourlyBinary(report.getId(), domain);

File: cat-home/src/main/java/com/dianping/cat/report/task/DefaultTaskConsumer.java
Patch:
@@ -31,7 +31,6 @@ protected Task findDoingTask(String ip) {
 		try {
 			task = m_taskDao.findByStatusConsumer(STATUS_DOING, ip, TaskEntity.READSET_FULL);
 		} catch (DalException e) {
-			// Cat.logError(e);
 		}
 		return task;
 	}
@@ -42,7 +41,6 @@ protected Task findTodoTask() {
 		try {
 			task = m_taskDao.findByStatusConsumer(STATUS_TODO, null, TaskEntity.READSET_FULL);
 		} catch (DalException e) {
-			// Cat.logError(e);
 		}
 		return task;
 	}
@@ -59,7 +57,7 @@ protected boolean processTask(Task doing) {
 
 		t.addData(doing.toString());
 		try {
-			result =  m_reportFacade.builderReport(doing);
+			result = m_reportFacade.builderReport(doing);
 			t.setStatus(Transaction.SUCCESS);
 		} catch (Exception e) {
 			Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskConsumer.java
Patch:
@@ -71,8 +71,8 @@ public void run() {
 							}
 						}
 					} catch (Throwable e) {
-						Cat.logError(task.toString(),e);
-					} 
+						Cat.logError(task.toString(), e);
+					}
 				} else {
 					taskNotFoundDuration();
 				}

File: cat-home/src/main/java/com/dianping/cat/report/task/cross/CrossReportBuilder.java
Patch:
@@ -37,7 +37,7 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 		report.setPeriod(period);
 		report.setType(1);
 		byte[] binaryContent = DefaultNativeBuilder.build(crossReport);
-		return m_reportService.insertDailyReport(report,binaryContent);
+		return m_reportService.insertDailyReport(report, binaryContent);
 	}
 
 	@Override
@@ -58,7 +58,7 @@ public boolean buildMonthlyTask(String name, String domain, Date period) {
 		report.setPeriod(period);
 		report.setType(1);
 		byte[] binaryContent = DefaultNativeBuilder.build(crossReport);
-		return m_reportService.insertMonthlyReport(report,binaryContent);
+		return m_reportService.insertMonthlyReport(report, binaryContent);
 	}
 
 	@Override
@@ -75,7 +75,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 		report.setPeriod(period);
 		report.setType(1);
 		byte[] binaryContent = DefaultNativeBuilder.build(crossReport);
-		return m_reportService.insertWeeklyReport(report,binaryContent);
+		return m_reportService.insertWeeklyReport(report, binaryContent);
 	}
 
 	private CrossReport queryDailyReportsByDuration(String domain, Date start, Date end) {

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatGraphCreator.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.GraphLine;
 
-public class HeartbeatGraphCreator  {
+public class HeartbeatGraphCreator {
 
 	private void cacheHeartbeatColumn(Map<String, GraphLine> detailCache, int minute, Number value, String key) {
 		GraphLine detailLine = detailCache.get(key);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -175,9 +175,6 @@ private List<AlertInfo> buildAlertInfo(Date date, String productLine, MetricType
 		double[] baseline = m_baselineService.queryHourlyBaseline(METRIC, baseLineKey, date);
 		if (baseline != null) {
 			double[] realDatas = m_parser.buildHourlyData(item, type);
-			if (realDatas == null) {
-				return result;
-			}
 			BaselineConfig baselineConfig = m_baselineConfigManager.queryBaseLineConfig(baseLineKey);
 			List<Integer> minutes = checkData(baseline, realDatas, minute, baselineConfig);
 			for (int resultMinuteInHour : minutes) {

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -94,8 +94,6 @@ protected void buildDailyReportInternal(Map<String, MetricReport> reports, Strin
 					MetricItem reportItem = report.findMetricItem(metricId);
 
 					if (reportItem == null) {
-						//m_logger.warn(String.format("no %s metric item found where computing baseline, %s", metricId,
-						//     reportPeriod.toString()));
 						reportItem = new MetricItem(metricId);
 					}
 					metricItems.add(reportItem);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricType.java
Patch:
@@ -1,5 +1,5 @@
 package com.dianping.cat.report.task.metric;
 
-public enum MetricType{
+public enum MetricType {
 	COUNT, AVG, SUM
 };

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemDailyGraphCreator.java
Patch:
@@ -61,14 +61,14 @@ private void buildMachineDetail(int count, MachineInfo info) {
 		Integer name = info.getNameCount().get(m_currentType + "\t" + m_currentName);
 
 		if (type == null) {
-			type = new Integer(count);
+			type = count;
 		} else {
 			type = type + count;
 		}
 		info.getTypesCount().put(m_currentType, type);
 
 		if (name == null) {
-			name = new Integer(count);
+			name = count;
 		} else {
 			name = name + count;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemGraphCreator.java
Patch:
@@ -18,7 +18,7 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.GraphLine;
 
-public class ProblemGraphCreator{
+public class ProblemGraphCreator {
 
 	public List<Graph> splitReportToGraphs(Date reportPeriod, String reportDomain, String reportName,
 	      ProblemReport report) {

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemMerger.java
Patch:
@@ -25,8 +25,7 @@ private ProblemReport merge(String reportDomain, List<ProblemReport> reports, bo
 			report.accept(merger);
 		}
 
-		ProblemReport problemReport = merger.getProblemReport();
-		return problemReport;
+		return merger.getProblemReport();
 	}
 
 	public ProblemReport mergeForDaily(String reportDomain, List<ProblemReport> reports, Set<String> domains) {

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemReportBuilder.java
Patch:
@@ -68,7 +68,6 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 	}
 
 	private List<Graph> buildHourlyGraphs(String name, String domain, Date period) throws DalException {
-		List<Graph> graphs = new ArrayList<Graph>();
 		List<ProblemReport> reports = new ArrayList<ProblemReport>();
 		long startTime = period.getTime();
 		ProblemReport report = m_reportService.queryProblemReport(domain, new Date(startTime), new Date(startTime
@@ -77,8 +76,7 @@ private List<Graph> buildHourlyGraphs(String name, String domain, Date period) t
 		reports.add(report);
 		ProblemReport problemReport = m_problemMerger.mergeForGraph(domain, reports);
 
-		graphs = m_problemGraphCreator.splitReportToGraphs(period, domain, name, problemReport);
-		return graphs;
+		return m_problemGraphCreator.splitReportToGraphs(period, domain, name, problemReport);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/sql/SqlReportBuilder.java
Patch:
@@ -42,7 +42,7 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 		report.setPeriod(period);
 		report.setType(1);
 		byte[] binaryContent = DefaultNativeBuilder.build(sqlReport);
-		return m_reportService.insertDailyReport(report,binaryContent);
+		return m_reportService.insertDailyReport(report, binaryContent);
 	}
 
 	@Override
@@ -63,7 +63,7 @@ public boolean buildMonthlyTask(String name, String domain, Date period) {
 		report.setPeriod(period);
 		report.setType(1);
 		byte[] binaryContent = DefaultNativeBuilder.build(sqlReport);
-		return m_reportService.insertMonthlyReport(report,binaryContent);
+		return m_reportService.insertMonthlyReport(report, binaryContent);
 	}
 
 	@Override
@@ -79,7 +79,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 		report.setPeriod(period);
 		report.setType(1);
 		byte[] binaryContent = DefaultNativeBuilder.build(sqlReport);
-		return m_reportService.insertWeeklyReport(report,binaryContent);
+		return m_reportService.insertWeeklyReport(report, binaryContent);
 	}
 
 	private SqlReport queryDailyReportsByDuration(String domain, Date start, Date end) {

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionMerger.java
Patch:
@@ -52,8 +52,7 @@ public TransactionReport mergeForGraph(String reportDomain, List<TransactionRepo
 		TransactionReport transactionReport = merge(reportDomain, reports, false);
 		TransactionReportMerger merger = new TransactionReportMerger(new TransactionReport(reportDomain));
 		TransactionReport all = merge(reportDomain, reports, false);
-		com.dianping.cat.consumer.transaction.model.entity.Machine allMachines = merger
-		      .mergesForAllMachine(all);
+		com.dianping.cat.consumer.transaction.model.entity.Machine allMachines = merger.mergesForAllMachine(all);
 		transactionReport.addMachine(allMachines);
 		transactionReport.getIps().add("All");
 

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionReportBuilder.java
Patch:
@@ -88,16 +88,14 @@ private void buildDailyTransactionGraph(TransactionReport report) {
 	}
 
 	private List<Graph> buildHourlyGraphs(String name, String domain, Date period) throws DalException {
-		List<Graph> graphs = new ArrayList<Graph>();
 		List<TransactionReport> reports = new ArrayList<TransactionReport>();
 		long startTime = period.getTime();
 		TransactionReport report = m_reportService.queryTransactionReport(domain, new Date(startTime), new Date(startTime
 		      + TimeUtil.ONE_HOUR));
 
 		reports.add(report);
 		TransactionReport transactionReport = m_transactionMerger.mergeForGraph(domain, reports);
-		graphs = m_transactionGraphCreator.splitReportToGraphs(period, domain, name, transactionReport);
-		return graphs;
+		return m_transactionGraphCreator.splitReportToGraphs(period, domain, name, transactionReport);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/TransactionReportVisitor.java
Patch:
@@ -37,7 +37,7 @@ public void visitTransactionReport(TransactionReport transactionReport) {
 	public void visitType(TransactionType type) {
 		String key = type.getId();
 		Domain domain = m_report.findOrCreateDomain(m_domain);
-		
+
 		if (key.indexOf("URL") >= 0) {
 			domain.setUrlCount(type.getTotalCount());
 			domain.setUrlResponseTime(type.getAvg());

File: cat-home/src/main/java/com/dianping/cat/report/task/utilization/UtilizationReportMerger.java
Patch:
@@ -9,12 +9,11 @@ public class UtilizationReportMerger extends DefaultMerger {
 	public UtilizationReportMerger(UtilizationReport utilizationReport) {
 		super(utilizationReport);
 	}
-	
-	
+
 	@Override
 	public void visitUtilizationReport(UtilizationReport utilizationReport) {
 		UtilizationReport oldReport = getUtilizationReport();
-		
+
 		oldReport.setDomain(utilizationReport.getDomain());
 		oldReport.setStartTime(utilizationReport.getStartTime());
 		oldReport.setEndTime(utilizationReport.getEndTime());

File: cat-home/src/main/java/com/dianping/cat/report/view/HistoryNav.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.report.view;
 
 public enum HistoryNav {
-	
+
 	MONTH("month", "-1m", "+1m"),
 
 	WEEK("week", "-1w", "+1w"),

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -46,7 +46,7 @@ public Page[] getVisiblePages() {
 		ReportPage.DEPENDENCY,
 
 		ReportPage.STATE,
-		
+
 		ReportPage.STATISTICS,
 
 		ReportPage.LOGVIEW,

File: cat-home/src/main/java/com/dianping/cat/system/SystemContext.java
Patch:
@@ -27,7 +27,7 @@ public class SystemContext<T extends ActionPayload<? extends Page, ? extends Act
 	public DpAdminLogin getSigninMember() {
 		return m_signinMember;
 	}
-	
+
 	public void setSigninMember(DpAdminLogin signinMember) {
 		m_signinMember = signinMember;
 	}

File: cat-home/src/main/java/com/dianping/cat/system/SystemModule.java
Patch:
@@ -15,8 +15,7 @@
 
 com.dianping.cat.system.page.abtest.Handler.class,
 
-com.dianping.cat.system.page.plugin.Handler.class
-})
+com.dianping.cat.system.page.plugin.Handler.class })
 public class SystemModule extends AbstractModule {
 
 }

File: cat-home/src/main/java/com/dianping/cat/system/config/ConfigReloadTask.java
Patch:
@@ -14,7 +14,7 @@ public class ConfigReloadTask implements Task {
 
 	@Inject
 	private MetricConfigManager m_metricConfigManager;
-	
+
 	@Override
 	public String getName() {
 		return "Config-Reload";

File: cat-home/src/main/java/com/dianping/cat/system/config/UtilizationConfigManager.java
Patch:
@@ -38,7 +38,7 @@ public boolean insert(String xml) {
 			return false;
 		}
 	}
-	
+
 	private boolean storeConfig() {
 		synchronized (this) {
 			try {

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -114,18 +114,18 @@ public void run() {
 		while (active) {
 			try {
 				MailRecord mailRecord = null;
+				long lastSendMailTime = 0;
 				try {
 					mailRecord = m_mailRecordDao.findLastReportRecord(MailRecordEntity.READSET_FULL);
+					lastSendMailTime = mailRecord.getCreationDate().getTime();
 				} catch (DalNotFoundException e) {
 				} catch (Exception e) {
 					Cat.logError(e);
 				}
-
-				long lastSendMailTime = mailRecord.getCreationDate().getTime();
 				long currentDay = TimeUtil.getCurrentDay().getTime();
 				Calendar cal = Calendar.getInstance();
 
-				if ((mailRecord == null || lastSendMailTime < currentDay) && cal.get(Calendar.HOUR_OF_DAY) >= 2) {
+				if (lastSendMailTime < currentDay && cal.get(Calendar.HOUR_OF_DAY) >= 2) {
 					List<ScheduledReport> reports = m_scheduledManager.queryScheduledReports();
 
 					m_logger.info("Send daily report starting! size :" + reports.size());

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Handler.java
Patch:
@@ -177,7 +177,6 @@ private String getJavaFragement(AbtestRun run) {
 			t.process(root, sw);
 		} catch (Exception e) {
 			Cat.logError(e);
-			e.printStackTrace();
 		}
 		return sw.toString();
 	}
@@ -317,7 +316,7 @@ private void handleStatusChangeAction(Context ctx) {
 							m_abtestRunDao.updateByPK(run, AbtestRunEntity.UPDATESET_STATUS);
 							m_service.setModified();
 						} else {
-							error.addArgument(id, String.format("Abtest %d has been already suspended!", id));
+							error.addArgument(id, String.format("Abtest %s has been already suspended!", id));
 						}
 					} else if (payload.getDisableAbtest() == 1) {
 						// resume abtest
@@ -326,7 +325,7 @@ private void handleStatusChangeAction(Context ctx) {
 							m_abtestRunDao.updateByPK(run, AbtestRunEntity.UPDATESET_STATUS);
 							m_service.setModified();
 						} else {
-							error.addArgument(id, String.format("Abtest %d has been already active!", id));
+							error.addArgument(id, String.format("Abtest %s has been already active!", id));
 						}
 					}
 				} catch (Throwable e) {

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspFile.java
Patch:
@@ -13,9 +13,9 @@ public enum JspFile {
 	MODEL("/jsp/system/abtest/abtestModel.jsp"),
 
 	AJAX("/jsp/system/abtest/abtestAjax.jsp"),
-	
+
 	ABTEST_CACULATOR("/jsp/system/abtest/abtestCaculator.jsp");
-	
+
 	private String m_path;
 
 	private JspFile(String path) {

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/ReportHandler.java
Patch:
@@ -359,7 +359,6 @@ public int compare(Goal o1, Goal o2) {
 			payload.setEndDate2(query.getEndTime());
 		} catch (Exception e) {
 			Cat.logError(e);
-			e.printStackTrace();
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/advisor/DefaultABTestAdvisor.java
Patch:
@@ -32,7 +32,7 @@ public List<ABTestAdvice> offer(double actualCTR, double expectedCTR) {
 				int days = (sizePerGroup * 2) % m_pv == 0 ? (sizePerGroup * 2) / m_pv : (sizePerGroup * 2) / m_pv + 1;
 
 				advice.setDays(days);
-			} 
+			}
 
 			advices.add(advice);
 		} while (increaseCtr < expectedCTR);

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/conditions/URLScriptProvider.java
Patch:
@@ -73,7 +73,7 @@ private String marcherByCaseInsens(String expectedUrl) {
 			} else {
 				subUrl = expectedUrl.substring(0, pos);
 			}
-			
+
 			return String.format("%s.toLowerCase().startsWith(\"%s\".toLowerCase())", m_actual, subUrl);
 		} else {
 			return "false";
@@ -91,7 +91,7 @@ private String marcherByCaseSens(String expectedUrl) {
 			} else {
 				subUrl = expectedUrl.substring(0, pos);
 			}
-			
+
 			return String.format("%s.startsWith(\"%s\")", m_actual, subUrl);
 		} else {
 			return "false";

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/AbtestStatus.java
Patch:
@@ -51,7 +51,6 @@ public static AbtestStatus calculateStatus(AbtestRun run, Date now) {
 							return AbtestStatus.RUNNING;
 						}
 					}
-
 				}
 			} else {
 				if (endDate != null) {

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/CaseBuilder.java
Patch:
@@ -40,7 +40,7 @@ public Case build(Abtest abtest, AbtestRun abtestRun, GroupStrategy groupStrateg
 
 			return case_;
 		} else {
-			throw new NullPointerException("Cannot builder case due to the abtest , abtestRun or groupStrategy is null");
+			throw new RuntimeException("Cannot builder case due to the abtest , abtestRun or groupStrategy is null");
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/JspFile.java
Patch:
@@ -8,15 +8,15 @@ public enum JspFile {
 	EXCEPTION_ALARM_RULE_DELETE("/jsp/system/alarm/alarmExceptionRules.jsp"),
 
 	EXCEPTION_ALARM_RULE_LIST("/jsp/system/alarm/alarmExceptionRules.jsp"),
-	
+
 	EXCEPTION_ALARM_RULE_SUB("/jsp/system/alarm/alarmOpState.jsp"),
 
 	SCHEDULED_REPORT_ADD("/jsp/system/alarm/scheduledReportAdd.jsp"),
 
 	SCHEDULED_REPORT_ADD_SUBMIT("/jsp/system/alarm/alarmOpState.jsp"),
 
 	SCHEDULED_REPORT_DELETE("/jsp/system/alarm/scheduledReports.jsp"),
-	
+
 	SCHEDULED_REPORT_LIST("/jsp/system/alarm/scheduledReports.jsp"),
 
 	SCHEDULED_REPORT_SUB("/jsp/system/alarm/alarmOpState.jsp"),

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/RecordManager.java
Patch:
@@ -44,7 +44,8 @@ public void queryUserReportRecords(Model model, int userId) {
 				ScheduledReportSubscription scheduledReportSubscription = scheduledReportSubscriptions.get(i);
 				ruleIds[i] = scheduledReportSubscription.getScheduledReportId();
 			}
-			List<MailRecord> mails = m_mailRecordDao.findReportRecordByRuleId(ruleIds, MailRecordEntity.READSET_ALL_EXCLUDE_CONTENT);
+			List<MailRecord> mails = m_mailRecordDao.findReportRecordByRuleId(ruleIds,
+			      MailRecordEntity.READSET_ALL_EXCLUDE_CONTENT);
 			model.setMailRecords(mails);
 		} catch (DalNotFoundException e) {
 		} catch (DalException e) {

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/UserReportSubState.java
Patch:
@@ -29,14 +29,14 @@ public void setScheduledReport(ScheduledReport scheduledReport) {
 	public void setSubscriberState(int subscriberState) {
 		m_subscriberState = subscriberState;
 	}
-	
+
 	public static class UserReportSubStateCompartor implements Comparator<UserReportSubState> {
 
 		@Override
 		public int compare(UserReportSubState o1, UserReportSubState o2) {
 			int sub1 = o1.getSubscriberState();
 			int sub2 = o2.getSubscriberState();
-			
+
 			if (sub1 != sub2) {
 				return sub2 - sub1;
 			}

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -63,7 +63,7 @@ public class Handler implements PageHandler<Context> {
 
 	@Inject
 	private ExceptionThresholdConfigManager m_exceptionConfigManager;
-	
+
 	@Inject
 	private UtilizationConfigManager m_utilizationConfigManager;
 
@@ -245,7 +245,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		case METRIC_CONFIG_ADD_OR_UPDATE:
 			metricConfigAdd(payload, model);
 			model.setProductLines(m_productLineConfigManger.queryProductLines());
-			
+
 			ProductLine productLine = m_productLineConfigManger.queryProductLines().get(payload.getProductLineName());
 			if (productLine != null) {
 				model.setProductLineToDomains(productLine.getDomains());

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -151,7 +151,6 @@ private void logAccess(Context ctx, DpAdminLogin member) {
 		} else {
 			sb.append(actionUri);
 		}
-		// m_logger.info(sb.toString());
 	}
 
 	private void redirect(Context ctx, Payload payload) {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/Session.java
Patch:
@@ -13,4 +13,4 @@ public Session(DpAdminLogin member) {
 	public DpAdminLogin getMember() {
 		return m_member;
 	}
- }
+}

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/SessionManager.java
Patch:
@@ -15,7 +15,7 @@ public class SessionManager implements ISessionManager<Session, Token, Credentia
 	private DpAdminLoginDao m_memberDao;
 
 	private Token loginByLoginName(String account, String password) {
-		String base = new String("0000000");
+		String base = "0000000";
 		int length = account.length();
 		int offset = 7 - length;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/SigninService.java
Patch:
@@ -1,6 +1,5 @@
 package com.dianping.cat.system.page.login.service;
 
-
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.system.page.login.spi.ISigninService;

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/Token.java
Patch:
@@ -8,7 +8,7 @@ public class Token implements IToken {
 	private int m_memberId;
 
 	private String m_realName;
-	
+
 	public static final String TOKEN = "ct";
 
 	public Token(int memberId, String realName) {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/TokenManager.java
Patch:
@@ -1,6 +1,5 @@
 package com.dianping.cat.system.page.login.service;
 
-
 import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.system.page.login.spi.ITokenManager;

File: cat-client/src/main/java/com/dianping/cat/message/MessageProducer.java
Patch:
@@ -161,9 +161,9 @@ public interface MessageProducer {
 	 * Log an trace in one shot with SUCCESS status.
 	 * 
 	 * @param type
-	 *           event type
+	 *           trace type
 	 * @param name
-	 *           event name
+	 *           trace name
 	 */
 	public void logTrace(String type, String name);
 

File: cat-client/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -117,10 +117,10 @@ protected void setTraceMode(HttpServletRequest req) {
 				String paraMode = req.getParameter(traceMode);
 				String headMode = req.getHeader(traceMode);
 
-				if (("true").equals(paraMode)) {
+				if ("true".equals(paraMode)) {
 					Cat.getManager().setTraceMode(true);
 				}
-				if (("true").equals(headMode)) {
+				if ("true".equals(headMode)) {
 					Cat.getManager().setTraceMode(true);
 				}
 			}

File: cat-client/src/test/java/com/dianping/cat/message/io/TcpSocketSenderTest.java
Patch:
@@ -23,7 +23,7 @@
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 @RunWith(JUnit4.class)
-public class TcpSocketTest extends ComponentTestCase {
+public class TcpSocketSenderTest extends ComponentTestCase {
 	@Test
 	public void test() throws Exception {
 		TcpSocketSender sender = (TcpSocketSender) lookup(MessageSender.class, TcpSocketSender.ID);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -86,11 +86,11 @@ protected void process(MessageTree tree) {
 		// do nothing
 	}
 
-	public void setProblemAnalyzer(ProblemAnalyzer problemAnalyzer) {
+	public synchronized void setProblemAnalyzer(ProblemAnalyzer problemAnalyzer) {
 		m_problemAnalyzer = problemAnalyzer;
 	}
 
-	public void setTransactionAnalyzer(TransactionAnalyzer transactionAnalyzer) {
+	public synchronized void setTransactionAnalyzer(TransactionAnalyzer transactionAnalyzer) {
 		m_transactionAnalyzer = transactionAnalyzer;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBlockReader.java
Patch:
@@ -32,7 +32,7 @@ public byte[] readMessage(int index) throws IOException {
 		byte[] buf;
 
 		synchronized (m_indexFile) {
-			m_indexFile.seek(index * 6);
+			m_indexFile.seek(index * 6L);
 			blockAddress = m_indexFile.readInt();
 			blockOffset = m_indexFile.readShort() & 0xFFFF;
 		}
@@ -48,9 +48,9 @@ public byte[] readMessage(int index) throws IOException {
 
 		try {
 			in.skip(blockOffset);
-			
+
 			int len = in.readInt();
-			
+
 			byte[] data = new byte[len];
 
 			in.readFully(data);

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucket.java
Patch:
@@ -103,7 +103,7 @@ public byte[] readMessage(int index) throws IOException {
 			byte[] buf;
 
 			synchronized (m_indexFile) {
-				m_indexFile.seek(index * 6);
+				m_indexFile.seek(index * 6L);
 				blockAddress = m_indexFile.readInt();
 				blockOffset = m_indexFile.readShort() & 0xFFFF;
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/HistoricalStateService.java
Patch:
@@ -53,9 +53,7 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
 			if (bucket != null) {
-				if (bucket != null) {
-					bucket.close();
-				}
+				bucket.close();
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateGraphs.java
Patch:
@@ -70,7 +70,7 @@ private double[] getDataFromHourlyDetail(StateReport report, long start, int siz
 				if(datas == null){
 					continue;
 				}
-				Detail detail = datas.get(i * 60 * 1000 + start);
+				Detail detail = datas.get(i * 60 * 1000L + start);
 				if(detail == null){
 					continue;
 				}

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -114,14 +114,14 @@ public void run() {
 		while (active) {
 			try {
 				MailRecord mailRecord = null;
+				long lastSendMailTime = 0;
 				try {
 					mailRecord = m_mailRecordDao.findLastReportRecord(MailRecordEntity.READSET_FULL);
+					lastSendMailTime = mailRecord.getCreationDate().getTime();
 				} catch (DalNotFoundException e) {
 				} catch (Exception e) {
 					Cat.logError(e);
 				}
-
-				long lastSendMailTime = mailRecord.getCreationDate().getTime();
 				long currentDay = TimeUtil.getCurrentDay().getTime();
 				Calendar cal = Calendar.getInstance();
 

File: cat-client/src/main/java/com/dianping/cat/status/StatusInfoCollector.java
Patch:
@@ -199,7 +199,6 @@ public void visitRuntime(RuntimeInfo runtime) {
 
 		runtime.setStartTime(bean.getStartTime());
 		runtime.setUpTime(bean.getUptime());
-		// runtime.setJavaClasspath(System.getProperty("java.class.path"));
 		runtime.setJavaClasspath(m_jars);
 		runtime.setJavaVersion(System.getProperty("java.version"));
 		runtime.setUserDir(System.getProperty("user.dir"));

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/DefaultProblemHandler.java
Patch:
@@ -84,7 +84,6 @@ private void processTransaction(Machine machine, Transaction transaction, Messag
 	}
 
 	private void processHeartbeat(Machine machine, Heartbeat heartbeat, MessageTree tree) {
-		// String type = ProblemType.HEARTBEAT.getName();
 		String type = heartbeat.getType().toLowerCase();
 		String status = heartbeat.getName();
 		Entry entry = findOrCreateEntry(machine, type, status);

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/FileSystemManager.java
Patch:
@@ -117,7 +117,6 @@ public void initialize() throws InitializationException {
 				SecurityUtil.login(m_config, "dfs.cat.keytab.file", "dfs.cat.kerberos.principal");
 			} catch (IOException e) {
 				Cat.logError(e);
-				//throw new InitializationException("init FileSystemManager fail", e);
 			}
 		} else {
 			m_config = new Configuration();

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/EventCollectManager.java
Patch:
@@ -111,7 +111,6 @@ public List<Event> queryEvents(String domain, Date date) {
 		long current = System.currentTimeMillis();
 
 		if (current - date.getTime() < TimeUtil.ONE_HOUR * 2) {
-			// return queryEventsByDB(domain, date, 10);
 			return queryEventsByMemory(domain, date, 10);
 		} else {
 			return queryEventsByDB(domain, date, 10);

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -175,7 +175,6 @@ private DisplayHeartbeat showReport(Model model, Payload payload) {
 				String displayIp = getIpAddress(report, payload);
 
 				payload.setRealIp(displayIp);
-				// model.setIpAddress(ip);
 				return new DisplayHeartbeat(m_builder).display(report, displayIp);
 			}
 		} catch (Throwable e) {

File: cat-home/src/main/java/com/dianping/cat/report/task/DefaultTaskConsumer.java
Patch:
@@ -31,7 +31,6 @@ protected Task findDoingTask(String ip) {
 		try {
 			task = m_taskDao.findByStatusConsumer(STATUS_DOING, ip, TaskEntity.READSET_FULL);
 		} catch (DalException e) {
-			// Cat.logError(e);
 		}
 		return task;
 	}
@@ -42,7 +41,6 @@ protected Task findTodoTask() {
 		try {
 			task = m_taskDao.findByStatusConsumer(STATUS_TODO, null, TaskEntity.READSET_FULL);
 		} catch (DalException e) {
-			// Cat.logError(e);
 		}
 		return task;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -94,8 +94,6 @@ protected void buildDailyReportInternal(Map<String, MetricReport> reports, Strin
 					MetricItem reportItem = report.findMetricItem(metricId);
 
 					if (reportItem == null) {
-						//m_logger.warn(String.format("no %s metric item found where computing baseline, %s", metricId,
-						//     reportPeriod.toString()));
 						reportItem = new MetricItem(metricId);
 					}
 					metricItems.add(reportItem);

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -151,7 +151,6 @@ private void logAccess(Context ctx, DpAdminLogin member) {
 		} else {
 			sb.append(actionUri);
 		}
-		// m_logger.info(sb.toString());
 	}
 
 	private void redirect(Context ctx, Payload payload) {

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/WaterfallMessageCodec.java
Patch:
@@ -100,8 +100,7 @@ protected int encodeFooter(MessageTree tree, ChannelBuffer buf) {
 		b.tag2("svg");
 		sb.append("</td></tr>");
 
-		int count = helper.write(buf, sb.toString());
-		return count;
+		return helper.write(buf, sb.toString());
 	}
 
 	protected int encodeHeader(MessageTree tree, ChannelBuffer buf, Ruler ruler) {

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/DisplayHeartbeat.java
Patch:
@@ -276,7 +276,7 @@ public List<double[]> getDiskValues() {
 					int minute = period.getMinute();
 					Disk disk = period.getDisks().get(i);
 
-					values[minute] = disk.getFree() / K / K / K;
+					values[minute] = disk.getFree() * 1.0 / K / K / K;
 				}
 				result.add(values);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/HistoryGraphs.java
Patch:
@@ -118,8 +118,7 @@ public Map<String, double[]> getHeartBeatData(Model model, Payload payload) {
 		} catch (DalException e) {
 			Cat.logError(e);
 		}
-		Map<String, double[]> result = buildHeartbeatDatas(start, end, graphs);
-		return result;
+		return buildHeartbeatDatas(start, end, graphs);
 	}
 
 	public Map<String, double[]> getHeartBeatDatesEveryMinute(Map<String, String[]> heartBeats, final int size) {

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemDailyGraphCreator.java
Patch:
@@ -68,7 +68,7 @@ private void buildMachineDetail(int count, MachineInfo info) {
 		info.getTypesCount().put(m_currentType, type);
 
 		if (name == null) {
-			name = new Integer(count);
+			name = count;
 		} else {
 			name = name + count;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemMerger.java
Patch:
@@ -25,8 +25,7 @@ private ProblemReport merge(String reportDomain, List<ProblemReport> reports, bo
 			report.accept(merger);
 		}
 
-		ProblemReport problemReport = merger.getProblemReport();
-		return problemReport;
+		return merger.getProblemReport();
 	}
 
 	public ProblemReport mergeForDaily(String reportDomain, List<ProblemReport> reports, Set<String> domains) {

File: cat-client/src/main/java/com/dianping/cat/configuration/NetworkInterfaceManager.java
Patch:
@@ -63,7 +63,7 @@ private void load() {
 
 			m_local = local;
 		} catch (SocketException e) {
-			e.printStackTrace();
+			//ignore it
 		}
 	}
 }

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MetricConfigManager.java
Patch:
@@ -175,8 +175,6 @@ private boolean storeConfig() {
 				config.setName(CONFIG_NAME);
 				config.setContent(getMetricConfig().toString());
 				m_configDao.updateByPK(config, ConfigEntity.UPDATESET_FULL);
-				
-				System.out.println(config.getContent());
 			} catch (Exception e) {
 				Cat.logError(e);
 				return false;

File: cat-core/src/main/java/com/dianping/cat/storage/DefaultBucketManager.java
Patch:
@@ -24,8 +24,6 @@ protected Bucket<?> createBucket(Class<?> type, Date timestamp, String name, Str
 			bucket.initialize(type, name, timestamp);
 			return bucket;
 		} catch (RuntimeException e) {
-			e.printStackTrace();
-
 			throw e;
 		}
 	}

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucket.java
Patch:
@@ -13,6 +13,7 @@
 import org.jboss.netty.buffer.ChannelBuffers;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageCodec;
 import com.dianping.cat.message.spi.MessageTree;
@@ -56,7 +57,7 @@ public MessageTree findByIndex(int index) throws IOException {
 			m_lastAccessTime = System.currentTimeMillis();
 			return tree;
 		} catch (EOFException e) {
-			System.out.println(e);
+			Cat.logError(e);
 			return null;
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -86,7 +86,6 @@ public ModelResponse<T> invoke(ModelRequest request) {
 				t.setStatus("NoReportFound");
 			}
 		} catch (Exception e) {
-			e.printStackTrace();
 			logError(e);
 			t.setStatus(e);
 			response.setException(e);

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/HistoryGraphs.java
Patch:
@@ -269,8 +269,7 @@ private Map<String, double[]> getGraphDatasFromDaily(Date start, Date end, Model
 				graphs.add(graph);
 			} catch (DalNotFoundException e) {
 			} catch (Exception e) {
-				e.printStackTrace();
-				// Cat.logError(e);
+				Cat.logError(e);
 			}
 		}
 		Map<String, double[]> result = buildGraphDatasForDaily(start, end, type, name, graphs);

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Handler.java
Patch:
@@ -177,7 +177,6 @@ private String getJavaFragement(AbtestRun run) {
 			t.process(root, sw);
 		} catch (Exception e) {
 			Cat.logError(e);
-			e.printStackTrace();
 		}
 		return sw.toString();
 	}

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/ReportHandler.java
Patch:
@@ -359,7 +359,6 @@ public int compare(Goal o1, Goal o2) {
 			payload.setEndDate2(query.getEndTime());
 		} catch (Exception e) {
 			Cat.logError(e);
-			e.printStackTrace();
 		}
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -230,7 +230,7 @@ protected void process(MessageTree tree) {
 
 					if (current - lastModifyTime > ONE_HOUR) {
 						m_domainManager.update(ipInfo.getId(), domain, ip);
-						m_logger.info(String.format("change ip %s to domain %", ipInfo.getIp(), domain));
+						m_logger.info(String.format("change ip %s to domain %s", ipInfo.getIp(), domain));
 					}
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/DisplayHeartbeat.java
Patch:
@@ -249,7 +249,7 @@ public String getDisksGraph() {
 					if (ds.size() > i) {
 						Disk disk = ds.get(i);
 
-						values[minute] = disk.getFree() / K / K / K;
+						values[minute] = disk.getFree() * 1.0 / K / K / K;
 					}
 				}
 

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -125,7 +125,7 @@ public void run() {
 				long currentDay = TimeUtil.getCurrentDay().getTime();
 				Calendar cal = Calendar.getInstance();
 
-				if ((mailRecord == null || lastSendMailTime < currentDay) && cal.get(Calendar.HOUR_OF_DAY) >= 2) {
+				if (lastSendMailTime < currentDay && cal.get(Calendar.HOUR_OF_DAY) >= 2) {
 					List<ScheduledReport> reports = m_scheduledManager.queryScheduledReports();
 
 					m_logger.info("Send daily report starting! size :" + reports.size());

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Handler.java
Patch:
@@ -317,7 +317,7 @@ private void handleStatusChangeAction(Context ctx) {
 							m_abtestRunDao.updateByPK(run, AbtestRunEntity.UPDATESET_STATUS);
 							m_service.setModified();
 						} else {
-							error.addArgument(id, String.format("Abtest %d has been already suspended!", id));
+							error.addArgument(id, String.format("Abtest %s has been already suspended!", id));
 						}
 					} else if (payload.getDisableAbtest() == 1) {
 						// resume abtest
@@ -326,7 +326,7 @@ private void handleStatusChangeAction(Context ctx) {
 							m_abtestRunDao.updateByPK(run, AbtestRunEntity.UPDATESET_STATUS);
 							m_service.setModified();
 						} else {
-							error.addArgument(id, String.format("Abtest %d has been already active!", id));
+							error.addArgument(id, String.format("Abtest %s has been already active!", id));
 						}
 					}
 				} catch (Throwable e) {

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/util/AbtestStatus.java
Patch:
@@ -51,7 +51,6 @@ public static AbtestStatus calculateStatus(AbtestRun run, Date now) {
 							return AbtestStatus.RUNNING;
 						}
 					}
-
 				}
 			} else {
 				if (endDate != null) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -193,7 +193,7 @@ protected void processTypeAndName(Transaction t, TransactionType type, Transacti
 		}
 
 		// update statistics
-		Integer allDuration = new Integer((int) duration);
+		Integer allDuration = (int) duration;
 
 		name.setMax(Math.max(name.getMax(), duration));
 		name.setMin(Math.min(name.getMin(), duration));

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/ProblemInfoVisitor.java
Patch:
@@ -27,7 +27,7 @@ public void visitEntry(Entry entry) {
 		int count = 0;
 		String type = entry.getType();
 		String state = entry.getStatus();
-		
+
 		for (Duration duration : entry.getDurations().values()) {
 			count += duration.getCount();
 		}
@@ -38,7 +38,7 @@ public void visitEntry(Entry entry) {
 			if (temp == null) {
 				m_errors.put(state, count);
 			} else {
-				m_errors.put(state, new Integer(temp + count));
+				m_errors.put(state, temp + count);
 			}
 		}
 	}
@@ -63,7 +63,7 @@ public int compare(java.util.Map.Entry<String, Integer> arg0, java.util.Map.Entr
 			}
 		};
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
-		
+
 		if (m_errors.size() > 0) {
 			sb.append(GraphConstrant.LINE).append(GraphConstrant.ENTER);
 			sb.append("<span style='color:red'>").append(Chinese.EXCEPTION_INFO).append("（");

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/GroupLevelInfo.java
Patch:
@@ -120,7 +120,7 @@ public static class GroupStatistics {
 		public GroupStatistics(int lastMinute) {
 			for (int i = 0; i <= lastMinute; i++) {
 
-				m_statistics.put(new Integer(i), new TreeSet<String>());
+				m_statistics.put(i, new TreeSet<String>());
 			}
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/ThreadLevelInfo.java
Patch:
@@ -237,7 +237,7 @@ public static class TheadStatistics {
 
 		public TheadStatistics(int lastMinute) {
 			for (int i = 0; i <= lastMinute; i++) {
-				m_statistics.put(new Integer(i), new TreeSet<String>());
+				m_statistics.put(i, new TreeSet<String>());
 			}
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemDailyGraphCreator.java
Patch:
@@ -61,7 +61,7 @@ private void buildMachineDetail(int count, MachineInfo info) {
 		Integer name = info.getNameCount().get(m_currentType + "\t" + m_currentName);
 
 		if (type == null) {
-			type = new Integer(count);
+			type = count;
 		} else {
 			type = type + count;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/HistoricalCrossService.java
Patch:
@@ -52,7 +52,9 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/LocalCrossService.java
Patch:
@@ -38,7 +38,9 @@ private CrossReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/HistoricalDependencyService.java
Patch:
@@ -53,7 +53,9 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/LocalDependencyService.java
Patch:
@@ -38,7 +38,9 @@ private DependencyReport getReportFromLocalDisk(long timestamp, String domain) t
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -53,7 +53,9 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/LocalEventService.java
Patch:
@@ -38,7 +38,9 @@ private EventReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/HistoricalHeartbeatService.java
Patch:
@@ -52,7 +52,9 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/LocalHeartbeatService.java
Patch:
@@ -37,7 +37,9 @@ private HeartbeatReport getReportFromLocalDisk(long timestamp, String domain) th
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/HistoricalMatrixService.java
Patch:
@@ -52,7 +52,9 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/LocalMatrixService.java
Patch:
@@ -38,7 +38,9 @@ private MatrixReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -51,7 +51,9 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/LocalMetricService.java
Patch:
@@ -36,7 +36,9 @@ private MetricReport getReportFromLocalDisk(long timestamp, String domain) throw
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -53,7 +53,9 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/LocalProblemService.java
Patch:
@@ -39,7 +39,9 @@ private ProblemReport getReportFromLocalDisk(long timestamp, String domain) thro
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/sql/HistoricalSqlService.java
Patch:
@@ -52,7 +52,9 @@ private SqlReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/sql/LocalSqlService.java
Patch:
@@ -37,7 +37,9 @@ private SqlReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/LocalStateService.java
Patch:
@@ -37,7 +37,9 @@ private StateReport getReportFromLocalDisk(long timestamp, String domain) throws
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/HistoricalTopService.java
Patch:
@@ -52,7 +52,9 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/LocalTopService.java
Patch:
@@ -37,7 +37,9 @@ private TopReport getReportFromLocalDisk(long timestamp, String domain) throws E
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -53,7 +53,9 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -37,7 +37,9 @@ private TransactionReport getReportFromLocalDisk(long timestamp, String domain)
 
 			return xml == null ? null : DefaultSaxParser.parse(xml);
 		} finally {
-			bucket.close();
+			if (bucket != null) {
+				bucket.close();
+			}
 		}
 	}
 }

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -101,11 +101,10 @@ protected void process(MessageTree tree) {
 					Integer size = m_errorTimestampDomains.get(domain);
 
 					if (size == null) {
-						size = 1;
+						m_errorTimestampDomains.put(domain, size);
 					} else {
-						size++;
+						m_errorTimestampDomains.put(domain, size + 1);
 					}
-					m_errorTimestampDomains.put(domain, size);
 				}
 			} catch (IOException e) {
 				m_logger.error("Error when dumping to local file system, version 2!", e);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateAnalyzer.java
Patch:
@@ -184,9 +184,8 @@ public void enableLogging(Logger logger) {
 
 	@Override
 	public StateReport getReport(String domain) {
-		StateReport report = new StateReport(domain);
-
-		report = new StateReport(Constants.CAT);
+		StateReport report = new StateReport(Constants.CAT);
+		
 		report.setStartTime(new Date(m_startTime));
 		report.setEndTime(new Date(m_startTime + MINUTE * 60 - 1));
 		report.getMachines().clear();

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatReportBuilder.java
Patch:
@@ -58,10 +58,8 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 	}
 
 	private List<Graph> qeueryHourlyGraphs(String name, String domain, Date period) throws DalException {
-		List<Graph> graphs = new ArrayList<Graph>();
 		HeartbeatReport transactionReport = m_reportService.queryHeartbeatReport(domain, period,
 		      new Date(period.getTime() + TimeUtil.ONE_HOUR));
-		graphs = m_heartbeatGraphCreator.splitReportToGraphs(period, domain, name, transactionReport);
-		return graphs;
+		return m_heartbeatGraphCreator.splitReportToGraphs(period, domain, name, transactionReport);
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemReportBuilder.java
Patch:
@@ -68,7 +68,6 @@ public boolean buildDailyTask(String name, String domain, Date period) {
 	}
 
 	private List<Graph> buildHourlyGraphs(String name, String domain, Date period) throws DalException {
-		List<Graph> graphs = new ArrayList<Graph>();
 		List<ProblemReport> reports = new ArrayList<ProblemReport>();
 		long startTime = period.getTime();
 		ProblemReport report = m_reportService.queryProblemReport(domain, new Date(startTime), new Date(startTime
@@ -77,8 +76,7 @@ private List<Graph> buildHourlyGraphs(String name, String domain, Date period) t
 		reports.add(report);
 		ProblemReport problemReport = m_problemMerger.mergeForGraph(domain, reports);
 
-		graphs = m_problemGraphCreator.splitReportToGraphs(period, domain, name, problemReport);
-		return graphs;
+		return m_problemGraphCreator.splitReportToGraphs(period, domain, name, problemReport);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionReportBuilder.java
Patch:
@@ -88,16 +88,14 @@ private void buildDailyTransactionGraph(TransactionReport report) {
 	}
 
 	private List<Graph> buildHourlyGraphs(String name, String domain, Date period) throws DalException {
-		List<Graph> graphs = new ArrayList<Graph>();
 		List<TransactionReport> reports = new ArrayList<TransactionReport>();
 		long startTime = period.getTime();
 		TransactionReport report = m_reportService.queryTransactionReport(domain, new Date(startTime), new Date(startTime
 		      + TimeUtil.ONE_HOUR));
 
 		reports.add(report);
 		TransactionReport transactionReport = m_transactionMerger.mergeForGraph(domain, reports);
-		graphs = m_transactionGraphCreator.splitReportToGraphs(period, domain, name, transactionReport);
-		return graphs;
+		return m_transactionGraphCreator.splitReportToGraphs(period, domain, name, transactionReport);
 	}
 
 	@Override

File: cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java
Patch:
@@ -92,8 +92,6 @@ public void initialize(String domain) throws IOException {
 		String tmpDir = System.getProperty("java.io.tmpdir");
 		File mark = new File(tmpDir, "cat-" + domain + ".mark");
 
-		//System.out.println("Message id mark file: " + mark.getCanonicalPath());
-
 		m_markFile = new RandomAccessFile(mark, "rw");
 		m_byteBuffer = m_markFile.getChannel().map(MapMode.READ_WRITE, 0, 20);
 

File: cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java
Patch:
@@ -92,7 +92,7 @@ public void initialize(String domain) throws IOException {
 		String tmpDir = System.getProperty("java.io.tmpdir");
 		File mark = new File(tmpDir, "cat-" + domain + ".mark");
 
-		System.out.println("Message id mark file: " + mark.getCanonicalPath());
+		//System.out.println("Message id mark file: " + mark.getCanonicalPath());
 
 		m_markFile = new RandomAccessFile(mark, "rw");
 		m_byteBuffer = m_markFile.getChannel().map(MapMode.READ_WRITE, 0, 20);

File: cat-client/src/test/java/com/dianping/cat/abtest/spi/internal/ABTestCodecTest.java
Patch:
@@ -9,7 +9,7 @@
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
-public class ABTestContextManagerTest extends ComponentTestCase {
+public class ABTestCodecTest extends ComponentTestCase {
 	@Test
 	public void testCodec() throws Exception {
 		check("1=ab:A|cd:B&2=ab:A|cd:B", "1=ab:A|cd:B&2=ab:A|cd:B");

File: cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemReportAllBuilderTest.java
Patch:
@@ -24,6 +24,6 @@ public void test() throws Exception{
 		builder.visitProblemReport(reportOld);
 		builder.visitProblemReport(reportNew);
 		
-		Assert.assertEquals(expected, report.toString());
+		Assert.assertEquals(expected.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 }

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -43,8 +43,6 @@ private DefaultMessageTree buildMessageTree() {
 		Cat.logMetricForDuration("logMetricForDuration", 100);
 		Cat.logMetricForSum("logMetricForSum", 100);
 		Cat.logMetricForSum("logMetricForSum", 100, 100);
-		Cat.logError(new RuntimeException());
-		Cat.logError("message", new RuntimeException());
 		Cat.logEvent("RemoteLink", "Call", Message.SUCCESS, "Cat-0a010680-384736-2061");
 		Cat.logEvent("EventType", "EventName");
 		Cat.logHeartbeat("logHeartbeat", "logHeartbeat", Message.SUCCESS, null);
@@ -146,14 +144,16 @@ public void testEncode() throws Exception {
 		String messageId = "Cat-0a010680-384736-2061";
 		String parentMessageId = "Cat-0a010680-384736-2062";
 
+		tree.setHostName("localhost-cat");
+		tree.setIpAddress("192.168.1.1");
 		tree.setRootMessageId(messageId);
 		tree.setParentMessageId(parentMessageId);
 		codec.encode(tree, buf);
 
 		String content = Files.forIO().readFrom(HtmlMessageCodecTest.class.getResourceAsStream("MessageTree.txt"),
 		      "utf-8");
 		Assert.assertEquals(content.trim(), tree.toString().trim());
-		Assert.assertEquals(6795, buf.readableBytes());
+		Assert.assertEquals(1929, buf.readableBytes());
 	}
 
 	@Test

File: cat-core/src/test/java/com/dianping/cat/storage/StringBucketTestCase.java
Patch:
@@ -15,7 +15,7 @@
 
 public abstract class StringBucketTestCase extends ComponentTestCase {
 
-	protected final static int threadNum = 10;// notice: max 9, for creating asc order id bellow
+	protected final static int threadNum = 200;// notice: max 9, for creating asc order id bellow
 
 	protected final static int timesPerThread = 1000; // notice: must be powers 10, fro creating asc order id bellow
 

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketManagerTest.java
Patch:
@@ -5,7 +5,6 @@
 import org.jboss.netty.buffer.ChannelBuffer;
 import org.jboss.netty.buffer.ChannelBuffers;
 import org.junit.Assert;
-import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -21,7 +20,6 @@
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
 @RunWith(JUnit4.class)
-@Ignore
 public class LocalMessageBucketManagerTest extends ComponentTestCase {
 	private DefaultMessageTree newMessageTree(String id, int i, long timestamp) {
 		DefaultMessageTree tree = new DefaultMessageTree();

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -144,14 +144,16 @@ public void testEncode() throws Exception {
 		String messageId = "Cat-0a010680-384736-2061";
 		String parentMessageId = "Cat-0a010680-384736-2062";
 
+		tree.setHostName("localhost-cat");
+		tree.setIpAddress("192.168.1.1");
 		tree.setRootMessageId(messageId);
 		tree.setParentMessageId(parentMessageId);
 		codec.encode(tree, buf);
 
 		String content = Files.forIO().readFrom(HtmlMessageCodecTest.class.getResourceAsStream("MessageTree.txt"),
 		      "utf-8");
 		Assert.assertEquals(content.trim(), tree.toString().trim());
-		Assert.assertEquals(1946, buf.readableBytes());
+		Assert.assertEquals(1929, buf.readableBytes());
 	}
 
 	@Test

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketTest.java
Patch:
@@ -8,6 +8,7 @@
 import org.jboss.netty.buffer.ChannelBuffers;
 import org.junit.Assert;
 import org.junit.BeforeClass;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -22,6 +23,7 @@
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
       
 @RunWith(JUnit4.class)
+@Ignore
 public class LocalMessageBucketTest extends ComponentTestCase {
 	@BeforeClass
 	public static void beforeClass() {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/problem/ProblemReportAllBuilderTest.java
Patch:
@@ -24,6 +24,6 @@ public void test() throws Exception{
 		builder.visitProblemReport(reportOld);
 		builder.visitProblemReport(reportNew);
 		
-		Assert.assertEquals(expected, report.toString());
+		Assert.assertEquals(expected.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 }

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -151,7 +151,7 @@ public void testEncode() throws Exception {
 		String content = Files.forIO().readFrom(HtmlMessageCodecTest.class.getResourceAsStream("MessageTree.txt"),
 		      "utf-8");
 		Assert.assertEquals(content.trim(), tree.toString().trim());
-		Assert.assertEquals(6795, buf.readableBytes());
+		Assert.assertEquals(1946, buf.readableBytes());
 	}
 
 	@Test

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -43,8 +43,6 @@ private DefaultMessageTree buildMessageTree() {
 		Cat.logMetricForDuration("logMetricForDuration", 100);
 		Cat.logMetricForSum("logMetricForSum", 100);
 		Cat.logMetricForSum("logMetricForSum", 100, 100);
-		Cat.logError(new RuntimeException());
-		Cat.logError("message", new RuntimeException());
 		Cat.logEvent("RemoteLink", "Call", Message.SUCCESS, "Cat-0a010680-384736-2061");
 		Cat.logEvent("EventType", "EventName");
 		Cat.logHeartbeat("logHeartbeat", "logHeartbeat", Message.SUCCESS, null);

File: cat-core/src/test/java/com/dianping/cat/analysis/PeriodTaskTest.java
Patch:
@@ -37,7 +37,7 @@ public void test() throws Exception {
 
 		Assert.assertEquals(size, analyzer.m_count);
 		Assert.assertEquals(analyzer, task.getAnalyzer());
-		Assert.assertEquals("MockAnalyzer-2", task.getName());
+		Assert.assertEquals(true, task.getName().startsWith("MockAnalyzer"));
 		task.shutdown();
 	}
 

File: cat-core/src/test/java/com/dianping/cat/message/spi/core/HtmlMessageCodecTest.java
Patch:
@@ -153,7 +153,7 @@ public void testEncode() throws Exception {
 		String content = Files.forIO().readFrom(HtmlMessageCodecTest.class.getResourceAsStream("MessageTree.txt"),
 		      "utf-8");
 		Assert.assertEquals(content.trim(), tree.toString().trim());
-		Assert.assertEquals(6797, buf.readableBytes());
+		Assert.assertEquals(6795, buf.readableBytes());
 	}
 
 	@Test

File: cat-core/src/test/java/com/dianping/cat/service/ModelRequestTest.java
Patch:
@@ -18,7 +18,7 @@ public void test() {
 
 		Assert.assertEquals(ModelPeriod.CURRENT, request.getPeriod());
 		Assert.assertEquals(str, request.getProperty(str));
-		Assert.assertEquals("{test=test}", request.getProperties());
+		Assert.assertEquals("{test=test}", request.getProperties().toString());
 		Assert.assertEquals(start, request.getStartTime());
 		Assert.assertEquals(domain, request.getDomain());
 		Assert.assertEquals("ModelRequest[domain=Cat, period=CURRENT, properties={test=test}]", request.toString());

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -49,7 +49,7 @@ public List<Component> defineComponents() {
 		all.add(C(MessageAnalyzerManager.class, DefaultMessageAnalyzerManager.class));
 
 		all.add(C(TcpSocketReceiver.class).req(ServerConfigManager.class).req(ServerStatisticManager.class)
-		      .req(MessageCodec.class, PlainTextMessageCodec.ID));
+		      .req(MessageCodec.class, PlainTextMessageCodec.ID).req(MessageHandler.class));
 
 		all.add(C(MessageHandler.class, DefaultMessageHandler.class));
 

File: cat-core/src/test/java/com/dianping/cat/analysis/DefaultMessageAnalyzerManagerTest.java
Patch:
@@ -29,6 +29,5 @@ public void test() throws Exception {
 		Assert.assertEquals(1, analyzer1.m_count);
 		Assert.assertEquals(2, analyzer2.m_count);
 		Assert.assertEquals(3, analyzer3.m_count);
-		
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/system/notify/render/EventRender.java
Patch:
@@ -50,10 +50,10 @@ public EventRender(Date date, String domain, int day) {
 		m_totalDays = day;
 
 		String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
-		if (ip.startsWith("10.")) {
-			m_host = Chinese.ONLINE;
-		} else {
+		if (ip.startsWith("192.")) {
 			m_host = Chinese.OFFLINE;
+		} else {
+			m_host = Chinese.ONLINE;
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/notify/render/ProblemRender.java
Patch:
@@ -41,10 +41,10 @@ public ProblemRender(Date date, String domain) {
 		m_dateStr = m_sdf.format(date);
 
 		String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
-		if (ip.startsWith("10.")) {
-			m_host = Chinese.ONLINE;
-		} else {
+		if (ip.startsWith("192.")) {
 			m_host = Chinese.OFFLINE;
+		} else {
+			m_host = Chinese.ONLINE;
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/notify/render/TransactionRender.java
Patch:
@@ -47,10 +47,10 @@ public TransactionRender(Date date, String domain, int day) {
 		m_totalDays = day;
 
 		String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
-		if (ip.startsWith("10.")) {
-			m_host = Chinese.ONLINE;
-		} else {
+		if (ip.startsWith("192.")) {
 			m_host = Chinese.OFFLINE;
+		} else {
+			m_host = Chinese.ONLINE;
 		}
 	}
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/DefaultMessagePathBuilder.java
Patch:
@@ -4,6 +4,7 @@
 import java.io.IOException;
 import java.text.MessageFormat;
 import java.util.Date;
+import java.util.Locale;
 
 import org.codehaus.plexus.logging.LogEnabled;
 import org.codehaus.plexus.logging.Logger;
@@ -29,7 +30,7 @@ public void enableLogging(Logger logger) {
 
 	@Override
 	public String getHdfsPath(String messageId) {
-		MessageFormat format = new MessageFormat("{0,date,yyyyMMdd}/{0,date,HH}/{1}/{0,date,mm}-{2}");
+		MessageFormat format = new MessageFormat("{0,date,yyyyMMdd}/{0,date,HH}/{1}/{0,date,mm}-{2}", Locale.getDefault());
 
 		try {
 			MessageId id = MessageId.parse(messageId);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MetricConfigManager.java
Patch:
@@ -4,6 +4,7 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
+import java.util.Date;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
@@ -84,7 +85,7 @@ public void initialize() throws InitializationException {
 
 				m_metricConfig = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
-				m_modifyTime = config.getModifyDate().getTime();
+				m_modifyTime = new Date().getTime();
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/ProductLineConfigManager.java
Patch:
@@ -4,6 +4,7 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.List;
@@ -84,7 +85,7 @@ public void initialize() throws InitializationException {
 
 				m_company = DefaultSaxParser.parse(content);
 				m_configId = config.getId();
-				m_modifyTime = config.getModifyDate().getTime();
+				m_modifyTime = new Date().getTime();
 			} catch (Exception ex) {
 				Cat.logError(ex);
 			}

File: cat-client/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -229,9 +229,7 @@ protected void logRequestClientInfo(HttpServletRequest req, String type) {
 				if (ipForwarded == null) {
 					ip = req.getRemoteAddr();
 				} else {
-					String ips[] = ipForwarded.split(",");
-
-					ip = ips[ips.length - 1].trim();
+					ip = ipForwarded;
 				}
 
 				sb.append("RemoteIP=").append(ip);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilder.java
Patch:
@@ -48,7 +48,7 @@ public class MetricBaselineReportBuilder implements ReportTaskBuilder, LogEnable
 	@Inject
 	protected MetricPointParser m_parser;
 
-	private Logger m_logger;
+	protected Logger m_logger;
 
 	private static final int POINT_NUMBER = 60 * 24;
 
@@ -94,8 +94,8 @@ protected void buildDailyReportInternal(Map<String, MetricReport> reports, Strin
 					MetricItem reportItem = report.findMetricItem(metricId);
 
 					if (reportItem == null) {
-						m_logger.warn(String.format("no %s metric item found where computing baseline, %s", metricId,
-						      reportPeriod.toString()));
+						//m_logger.warn(String.format("no %s metric item found where computing baseline, %s", metricId,
+						//     reportPeriod.toString()));
 						reportItem = new MetricItem(metricId);
 					}
 					metricItems.add(reportItem);

File: cat-client/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -246,7 +246,7 @@ static class Context {
 
 		private long m_totalDurationInMicros; // for truncate message
 
-		private boolean m_traceMode;
+		private boolean m_traceMode = false;
 
 		public Context(String domain, String hostName, String ipAddress, ClientConfigManager configManager) {
 			m_tree = new DefaultMessageTree();

File: cat-client/src/main/java/com/dianping/cat/log4j/CatAppender.java
Patch:
@@ -18,7 +18,7 @@
 public class CatAppender extends AppenderSkeleton {
 	@Override
 	protected void append(LoggingEvent event) {
-		boolean isTraceMode = Cat.getManager().isTraceMode();
+		boolean isTraceMode = Cat.getManager().hasContext();
 		Level level = event.getLevel();
 
 		if (level.isGreaterOrEqual(Level.ERROR)) {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/state/StateAnalyzerTest.java
Patch:
@@ -24,8 +24,9 @@ public class StateAnalyzerTest extends ComponentTestCase {
 	@Before
 	public void setUp() throws Exception {
 		super.setUp();
+		TimeZone.setDefault(TimeZone.getTimeZone("Asia/Shanghai"));  
+		
 		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm:ss:SS");
-		sdf.setTimeZone(TimeZone.getTimeZone("Asia/Shanghai"));
 		Date date = sdf.parse("20120101 00:00:00:00");
 
 		m_analyzer = (StateAnalyzer) lookup(MessageAnalyzer.class, StateAnalyzer.ID);

File: cat-consumer/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -17,6 +17,7 @@
 import com.dianping.cat.consumer.problem.ProblemReportAggregationTest;
 import com.dianping.cat.consumer.problem.ProblemReportTest;
 import com.dianping.cat.consumer.state.StateAnalyzerTest;
+import com.dianping.cat.consumer.top.TopAnalyzerTest;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzerTest;
 import com.dianping.cat.consumer.transaction.TransactionReportFilterTest;
 import com.dianping.cat.consumer.transaction.TransactionReportMergerTest;
@@ -57,6 +58,7 @@
 StateAnalyzerTest.class,
 
 /* top */
+TopAnalyzerTest.class,
 
 /* problem */
 ProblemReportAggregationTest.class,

File: cat-consumer/src/test/java/com/dianping/cat/consumer/state/StateAnalyzerTest.java
Patch:
@@ -25,8 +25,8 @@ public class StateAnalyzerTest extends ComponentTestCase {
 	@Before
 	public void setUp() throws Exception {
 		super.setUp();
-		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm");
-		Date date = sdf.parse("20120101 00:00");
+		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm:ss");
+		Date date = sdf.parse("20120101 00:00:00");
 
 		m_analyzer = (StateAnalyzer) lookup(MessageAnalyzer.class, StateAnalyzer.ID);
 		m_analyzer.initialize(date.getTime(), Constants.HOUR, Constants.MINUTE * 5);

File: cat-consumer/src/test/java/com/dianping/cat/consumer/state/StateAnalyzerTest.java
Patch:
@@ -44,6 +44,9 @@ public void testProcess() throws Exception {
 		}
 		
 		String expected = Files.forIO().readFrom(getClass().getResourceAsStream("state_analyzer.xml"), "utf-8");
+		
+		System.out.println(expected);
+		
 		Assert.assertEquals(expected.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 }

File: cat-client/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -115,7 +115,7 @@ public void handle(Context ctx) throws IOException, ServletException {
 			protected void setTraceMode(HttpServletRequest req) {
 				String mode = req.getParameter("X-CAT-TRACE-MODE");
 
-				if (mode.equals("true")) {
+				if (("true").equals(mode)) {
 					Cat.getManager().setTraceMode(true);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/system/tool/DefaultGMailImpl.java
Patch:
@@ -65,12 +65,12 @@ public boolean sendEmail(String title, String content, List<String> emails) {
 				if (content != null) {
 					email.setHtmlMsg(content);
 				}
-				if (emails != null) {
+				if (emails != null && emails.size() > 0) {
 					for (String to : emails) {
 						email.addTo(to);
 					}
+					email.send();
 				}
-				email.send();
 				return true;
 			} catch (EmailException e) {
 				Cat.logError(e);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -345,7 +345,7 @@ public void run() {
 						} else if (value > 0) {
 							startPeriod(value);
 						} else {
-							endPeriod(value);
+							endPeriod(-value);
 						}
 					} catch (Throwable e) {
 						Cat.logError(e);

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/HtmlMessageCodec.java
Patch:
@@ -5,6 +5,7 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.List;
+import java.util.TimeZone;
 import java.util.concurrent.ArrayBlockingQueue;
 import java.util.concurrent.BlockingQueue;
 
@@ -449,6 +450,7 @@ public String format(long timestamp) {
 
 			if (format == null) {
 				format = new SimpleDateFormat(DATE_PATTERN);
+				format.setTimeZone(TimeZone.getTimeZone("GMT+8"));
 			}
 
 			try {
@@ -465,6 +467,7 @@ public long parse(String str) {
 
 			if (format == null) {
 				format = new SimpleDateFormat(DATE_PATTERN);
+				format.setTimeZone(TimeZone.getTimeZone("GMT+8"));
 			}
 
 			try {

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/HtmlMessageCodec.java
Patch:
@@ -5,6 +5,7 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.List;
+import java.util.TimeZone;
 import java.util.concurrent.ArrayBlockingQueue;
 import java.util.concurrent.BlockingQueue;
 
@@ -449,6 +450,7 @@ public String format(long timestamp) {
 
 			if (format == null) {
 				format = new SimpleDateFormat(DATE_PATTERN);
+				format.setTimeZone(TimeZone.getTimeZone("GMT+8"));
 			}
 
 			try {
@@ -465,6 +467,7 @@ public long parse(String str) {
 
 			if (format == null) {
 				format = new SimpleDateFormat(DATE_PATTERN);
+				format.setTimeZone(TimeZone.getTimeZone("GMT+8"));
 			}
 
 			try {

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/BugReportBuilder.java
Patch:
@@ -135,7 +135,7 @@ public boolean buildWeeklyTask(String name, String domain, Date period) {
 	private BugReport queryDailyReportsByDuration(String domain, Date start, Date end) {
 		long startTime = start.getTime();
 		long endTime = end.getTime();
-		BugReportMerger merger = new BugReportMerger(new BugReport(domain));
+		HistoryBugReportMerger merger = new HistoryBugReportMerger(new BugReport(domain));
 
 		for (; startTime < endTime; startTime += TimeUtil.ONE_DAY) {
 			try {

File: cat-core/src/main/java/com/dianping/cat/service/DefaultReportManager.java
Patch:
@@ -226,7 +226,6 @@ public void storeHourlyReports(long startTime, StoragePolicy policy) {
 
 							content.setReportId(id);
 							content.setContent(binaryContent);
-
 							m_reportContentDao.insert(content);
 							m_reportDelegate.createHourlyTask(report);
 						} catch (Throwable e) {

File: cat-client/src/main/java/com/dianping/cat/CatConstants.java
Patch:
@@ -69,6 +69,8 @@ public class CatConstants {
 	public static final String TYPE_URL_FORWARD = "URL.Forward";
 
 	public static final String TYPE_ACTION = "Action";
+	
+	public static final String TYPE_METRIC = "metricType";
 
 	public static final int ERROR_COUNT = 100;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Model.java
Patch:
@@ -11,6 +11,7 @@
 import org.unidal.web.mvc.view.annotation.ModelMeta;
 
 import com.dianping.cat.consumer.company.model.entity.ProductLine;
+import com.dianping.cat.consumer.dependency.DependencyAnalyzer;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.entity.Segment;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
@@ -20,8 +21,9 @@
 import com.dianping.cat.report.page.top.TopMetric;
 import com.dianping.cat.report.view.StringSortHelper;
 
-@ModelMeta("dependecy")
+@ModelMeta(DependencyAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
+	
 	@EntityMeta
 	private DependencyReport m_report;
 
@@ -57,7 +59,6 @@ public class Model extends AbstractReportModel<Action, Context> {
 
 	private TopReport m_topReport;
 
-
 	public List<ProductLine> getProductLines() {
    	return m_productLines;
    }

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -136,7 +136,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			List<LineChart> allCharts = new ArrayList<LineChart>();
 			for (ProductLine productLine : productLines) {
 
-				metricDisplay = buildMetricsByProduct(date, productLine.getId(), payload.getTest(), false);
+				metricDisplay = buildMetricsByProduct(date, productLine.getId(), payload.getTest(), true);
 
 				List<LineChart> charts = metricDisplay.getLineCharts();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -14,8 +14,10 @@
 
 @ModelMeta(TransactionAnalyzer.ID)
 public class Model extends AbstractReportModel<Action, Context> {
+	@EntityMeta
 	private DisplayNames m_displayNameReport;
 
+	@EntityMeta
 	private DisplayTypes m_displayTypeReport;
 
 	private String m_errorTrend;

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/RecordManager.java
Patch:
@@ -26,7 +26,7 @@ public void queryAlarmRecordDetail(Payload payload, Model model) {
 		int id = payload.getAlarmRecordId();
 
 		try {
-			MailRecord record = m_mailRecordDao.findByPK(id, MailRecordEntity.READSET_ALL_EXCLUDE_CONTENT);
+			MailRecord record = m_mailRecordDao.findByPK(id, MailRecordEntity.READSET_FULL);
 			model.setMailRecord(record);
 		} catch (DalException e) {
 			Cat.logError(e);
@@ -44,7 +44,7 @@ public void queryUserReportRecords(Model model, int userId) {
 				ScheduledReportSubscription scheduledReportSubscription = scheduledReportSubscriptions.get(i);
 				ruleIds[i] = scheduledReportSubscription.getScheduledReportId();
 			}
-			List<MailRecord> mails = m_mailRecordDao.findReportRecordByRuleId(ruleIds, MailRecordEntity.READSET_FULL);
+			List<MailRecord> mails = m_mailRecordDao.findReportRecordByRuleId(ruleIds, MailRecordEntity.READSET_ALL_EXCLUDE_CONTENT);
 			model.setMailRecords(mails);
 		} catch (DalNotFoundException e) {
 		} catch (DalException e) {

File: cat-home/src/main/java/com/dianping/cat/system/tool/DefaultGMailImpl.java
Patch:
@@ -60,7 +60,7 @@ public boolean sendEmail(String title, String content, List<String> emails) {
 				HtmlEmail email = createHtmlEmail();
 
 				email.setSubject(title);
-				email.setFrom("CAT");
+				email.setFrom("CAT@dianping.com");
 
 				if (content != null) {
 					email.setHtmlMsg(content);

File: cat-home/src/test/java/com/dianping/cat/system/tool/DefaultGmailTest.java
Patch:
@@ -18,7 +18,8 @@ public void test() throws Exception {
 		emails.add("yong.you@dianping.com");
 		emails.add("youyong205@126.com");
 
-		boolean result = mailsms.sendEmail("ts", "ts", emails);
+		boolean result = mailsms.sendEmail("title", "content", emails);
+		
 		Assert.assertEquals(true, result);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Handler.java
Patch:
@@ -34,7 +34,6 @@
 import com.dianping.cat.abtest.model.entity.GroupstrategyDescriptor;
 import com.dianping.cat.abtest.model.entity.Run;
 import com.dianping.cat.core.dal.Project;
-import com.dianping.cat.home.abtest.ScriptFragementTest;
 import com.dianping.cat.home.dal.abtest.Abtest;
 import com.dianping.cat.home.dal.abtest.AbtestDao;
 import com.dianping.cat.home.dal.abtest.AbtestEntity;
@@ -352,7 +351,7 @@ public void initialize() throws InitializationException {
 		m_configuration = new Configuration();
 		m_configuration.setDefaultEncoding("UTF-8");
 		try {
-			m_configuration.setClassForTemplateLoading(ScriptFragementTest.class, "/freemaker");
+			m_configuration.setClassForTemplateLoading(Handler.class, "/freemaker");
 		} catch (Exception e) {
 			Cat.logError(e);
 		}

File: cat-client/src/main/java/com/dianping/cat/abtest/repository/HttpABTestEntityRepository.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.io.InputStream;
 import java.util.Collections;
-import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
@@ -44,9 +43,9 @@ public class HttpABTestEntityRepository extends ContainerHolder implements ABTes
 
 	private Set<String> m_activeRuns = Collections.newSetFromMap(new ConcurrentHashMap<String, Boolean>());
 
-	private Map<Integer, ABTestGroupStrategy> m_strategies = new HashMap<Integer, ABTestGroupStrategy>();
+	private Map<Integer, ABTestGroupStrategy> m_strategies = new ConcurrentHashMap<Integer, ABTestGroupStrategy>();
 
-	private HashMap<Integer, Invocable> m_invokeMap = new HashMap<Integer, Invocable>();
+	private Map<Integer, Invocable> m_invokeMap = new ConcurrentHashMap<Integer, Invocable>();
 
 	private FieldInjectUtil m_fieldInjector = new FieldInjectUtil();
 

File: cat-client/src/main/java/com/dianping/cat/abtest/repository/HttpABTestEntityRepository.java
Patch:
@@ -81,7 +81,6 @@ private void refresh() {
 				// switch the entities
 				m_entities = visitor.getEntities();
 				m_activeRuns = visitor.getActiveRuns();
-
 				m_abtestModel = abtest.toString();
 				break;
 			} catch (Throwable e) {

File: cat-client/src/main/java/com/dianping/cat/abtest/repository/ABTestEntityRepository.java
Patch:
@@ -9,4 +9,6 @@ public interface ABTestEntityRepository {
 	public Map<String, ABTestEntity> getCurrentEntities();
 	
 	public Set<String> getActiveRuns(); 
+	
+	public String getAbtestModel();
 }

File: cat-client/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -8,6 +8,7 @@
 import org.unidal.lookup.configuration.Component;
 
 import com.dianping.cat.CatClientModule;
+import com.dianping.cat.abtest.repository.ABTestEntityRepository;
 import com.dianping.cat.agent.MmapConsumerTask;
 import com.dianping.cat.configuration.ClientConfigManager;
 import com.dianping.cat.message.MessageProducer;
@@ -56,7 +57,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(MessageStatistics.class, DefaultMessageStatistics.class));
 		all.add(C(StatusUpdateTask.class) //
-		      .req(MessageStatistics.class, ClientConfigManager.class));
+		      .req(MessageStatistics.class, ClientConfigManager.class, ABTestEntityRepository.class));
 
 		all.add(C(MmapConsumerTask.class) //
 		      .req(ClientConfigManager.class, MessageManager.class));

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -60,7 +60,7 @@ protected void loadReports() {
 	}
 
 	public CrossInfo parseCorssTransaction(Transaction t, MessageTree tree) {
-		if (m_serverConfigManager.shouldDiscard(t)) {
+		if (m_serverConfigManager.discardTransaction(t)) {
 			return null;
 		} else {
 			String type = t.getType();

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/dependency/DependencyAnalyzer.java
Patch:
@@ -169,7 +169,7 @@ private void processSqlTransaction(DependencyReport report, Transaction t) {
 	}
 
 	private void processTransaction(DependencyReport report, MessageTree tree, Transaction t) {
-		if (m_serverConfigManager.shouldDiscard(t)) {
+		if (m_serverConfigManager.discardTransaction(t)) {
 			return;
 		} else {
 			processTransactionType(report, t);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixAnalyzer.java
Patch:
@@ -65,7 +65,7 @@ public void process(MessageTree tree) {
 		if (message instanceof Transaction) {
 			String messageType = message.getType();
 
-			if (m_serverConfigManager.shouldDiscard((Transaction) message)) {
+			if (m_serverConfigManager.discardTransaction((Transaction) message)) {
 				return;
 			}
 			if (messageType.equals("URL") || messageType.equals("Service") || messageType.equals("PigeonService")) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -142,7 +142,7 @@ private void processNameGraph(Transaction t, TransactionName name, int min, doub
 	}
 
 	protected void processTransaction(TransactionReport report, MessageTree tree, Transaction t) {
-		if (m_serverConfigManager.shouldDiscard(t)) {
+		if (m_serverConfigManager.discardTransaction(t)) {
 			return;
 		} else {
 			String ip = tree.getIpAddress();

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayNames.java
Patch:
@@ -138,6 +138,9 @@ public int compare(TransactionNameModel m1, TransactionNameModel m2) {
 			if (m_sorted.equals("95line")) {
 				return (int) (m2.getDetail().getLine95Value() * 100 - m1.getDetail().getLine95Value() * 100);
 			}
+			if (m_sorted.equals("99line")) {
+				return (int) (m2.getDetail().getLine99Value() * 100 - m1.getDetail().getLine99Value() * 100);
+			}
 			return 0;
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayTypes.java
Patch:
@@ -75,6 +75,9 @@ public int compare(TransactionTypeModel m1, TransactionTypeModel m2) {
 			if (m_sorted.equals("95line")) {
 				return (int) (m2.getDetail().getLine95Value() * 100 - m1.getDetail().getLine95Value() * 100);
 			}
+			if (m_sorted.equals("99line")) {
+				return (int) (m2.getDetail().getLine99Value() * 100 - m1.getDetail().getLine99Value() * 100);
+			}
 			return 0;
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -162,7 +162,7 @@ public Date getHistoryEndDate() {
 		} else {
 			temp = m_date + (TimeUtil.ONE_HOUR * 24);
 		}
-		cal.setTimeInMillis(temp);
+		cal.setTimeInMillis(temp-1);
 		return cal.getTime();
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java
Patch:
@@ -46,7 +46,7 @@ public StateReport getHistoryReport(Payload payload) {
 		String domain = CAT;
 		Date start = payload.getHistoryStartDate();
 		Date end = payload.getHistoryEndDate();
-
+		
 		return m_reportService.queryStateReport(domain, start, end);
 	}
 

File: cat-client/src/main/java/com/dianping/cat/abtest/spi/internal/conditions/ABTestCondition.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.abtest.conditions;
+package com.dianping.cat.abtest.spi.internal.conditions;
 
 import javax.servlet.http.HttpServletRequest;
 

File: cat-home/src/main/java/com/dianping/cat/build/ABTestComponentConfigurator.java
Patch:
@@ -6,6 +6,7 @@
 import org.unidal.lookup.configuration.AbstractResourceConfigurator;
 import org.unidal.lookup.configuration.Component;
 
+import com.dianping.cat.consumer.advanced.MetricConfigManager;
 import com.dianping.cat.core.dal.ProjectDao;
 import com.dianping.cat.home.dal.abtest.AbtestDao;
 import com.dianping.cat.home.dal.abtest.AbtestReportDao;
@@ -35,7 +36,8 @@ public List<Component> defineComponents() {
 
 		all.add(C(ListViewHandler.class).req(AbtestDao.class).req(AbtestRunDao.class).config(E("pageSize").value("10")));
 
-		all.add(C(ReportHandler.class).req(AbtestDao.class).req(AbtestRunDao.class).req(AbtestReportDao.class));
+		all.add(C(ReportHandler.class).req(AbtestDao.class).req(AbtestRunDao.class).req(AbtestReportDao.class)
+		      .req(MetricConfigManager.class));
 
 		all.add(C(ABTestService.class, ABTestServiceImpl.class).req(AbtestDao.class).req(AbtestRunDao.class)
 		      .req(GroupStrategyDao.class).req(ProjectDao.class).req(GsonBuilderManager.class)

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Action.java
Patch:
@@ -19,9 +19,7 @@ public enum Action implements org.unidal.web.mvc.Action {
 	
 	AJAX_PARSEGROUPSTRATEGY("ajax_parseGs"),
 	
-	ABTEST_CACULATOR("caculator"),
-	
-	SCRIPT_FRAGEMENT("script");
+	ABTEST_CACULATOR("caculator");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspFile.java
Patch:
@@ -14,10 +14,8 @@ public enum JspFile {
 
 	AJAX("/jsp/system/abtest/abtestAjax.jsp"),
 	
-	ABTEST_CACULATOR("/jsp/system/abtest/abtestCaculator.jsp"),
+	ABTEST_CACULATOR("/jsp/system/abtest/abtestCaculator.jsp");
 	
-	SCRIPT_FRAGEMENT("/jsp/system/abtest/scriptFragement.jsp");
-
 	private String m_path;
 
 	private JspFile(String path) {

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspViewer.java
Patch:
@@ -30,9 +30,6 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.MODEL.getPath();
 		case ABTEST_CACULATOR:
 			return JspFile.ABTEST_CACULATOR.getPath();
-		case SCRIPT_FRAGEMENT:
-			return JspFile.SCRIPT_FRAGEMENT.getPath();
-
 		}
 
 		throw new RuntimeException("Unknown action: " + action);

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/conditions/ScriptProvider.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.abtest.conditions;
+package com.dianping.cat.system.page.abtest.conditions;
 
 import java.util.List;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/conditions/URLScriptProvider.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.system.abtest.conditions;
+package com.dianping.cat.system.page.abtest.conditions;
 
 import java.util.ArrayList;
 import java.util.List;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/service/ABTestService.java
Patch:
@@ -22,6 +22,8 @@ public interface ABTestService {
 	
 	public AbtestRun getAbtestRunById(int id);
 	
+	public List<AbtestRun> getAbtestRunByStatus(AbtestStatus status);
+	
 	public List<GroupStrategy> getAllGroupStrategies();
 	
 	public Map<String, List<Project>> getAllProjects();

File: cat-home/src/test/java/com/dianping/cat/home/abtest/ScriptFragementTest.java
Patch:
@@ -11,7 +11,7 @@
 import com.dianping.cat.Cat;
 import com.dianping.cat.abtest.model.entity.Condition;
 import com.dianping.cat.abtest.model.entity.Run;
-import com.dianping.cat.system.abtest.conditions.URLScriptProvider;
+import com.dianping.cat.system.page.abtest.conditions.URLScriptProvider;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;

File: cat-home/src/test/java/com/dianping/cat/home/abtest/conditions/TrafficFilter.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.Random;
 import javax.servlet.http.HttpServletRequest;
 
-import com.dianping.cat.abtest.conditions.ABTestCondition;
+import com.dianping.cat.abtest.spi.internal.conditions.ABTestCondition;
 
 public class TrafficFilter {
 	private Condition1 m_condition1 = new Condition1();

File: cat-home/src/test/java/com/dianping/cat/report/task/abtest/ReportHandlerTest.java
Patch:
@@ -26,7 +26,7 @@ public void printJson() throws Exception {
 		String goal = "order";
 		String period = "hour";
 
-		AbtestReport report = handler.buildReport(query, goal, period);
+		AbtestReport report = handler.buildReport(query, goal, period, null);
 		
 		System.out.println(report);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Payload.java
Patch:
@@ -14,7 +14,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private Action m_action;
 
 	@FieldMeta("callSort")
-	private String m_callSort;
+	private String m_callSort ="avg";
 
 	private ReportPage m_page;
 
@@ -25,7 +25,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String m_remoteIp;
 
 	@FieldMeta("serviceSort")
-	private String m_serviceSort;
+	private String m_serviceSort ="avg";
 
 	@FieldMeta("queryName")
 	private String m_queryName;

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -376,6 +376,7 @@ public void storeMessage(final MessageTree tree, final MessageId id) throws IOEx
 			double amount = totalSize - lastTotalSize;
 			m_lastTotalSizes.put(domain, totalSize);
 			m_serverStateManager.addMessageSize(domain, amount);
+			m_serverStateManager.addMessageSize(amount);
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/UtilizationReportService.java
Patch:
@@ -23,6 +23,7 @@
 import com.dianping.cat.message.Event;
 import com.dianping.cat.report.service.AbstractReportService;
 import com.dianping.cat.report.task.utilization.UtilizationReportMerger;
+import com.dianping.cat.service.ReportConstants;
 
 public class UtilizationReportService extends AbstractReportService<UtilizationReport> {
 
@@ -49,14 +50,13 @@ public UtilizationReport queryDailyReport(String domain, Date start, Date end) {
 		UtilizationReportMerger merger = new UtilizationReportMerger(new UtilizationReport(domain));
 		long startTime = start.getTime();
 		long endTime = end.getTime();
-		String name = "utilization";
+		String name = ReportConstants.REPORT_UTILIZATION;
 
 		for (; startTime < endTime; startTime = startTime + TimeUtil.ONE_DAY) {
 			try {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
 				String xml = report.getContent();
-				
 				UtilizationReport reportModel = com.dianping.cat.home.utilization.transform.DefaultSaxParser.parse(xml);
 				reportModel.accept(merger);
 			} catch (Exception e) {

File: cat-home/src/test/java/com/dianping/cat/report/task/utilization/UtilizationBuilderTest.java
Patch:
@@ -18,7 +18,7 @@ public void testHourlyReport() throws Exception{
 		DomainManager manager = lookup(DomainManager.class);
 		
 		manager.initialize();
-		builder.buildHourlyTask("utilization",CatString.CAT, new SimpleDateFormat("yyyyMMddHH").parse("2013082505"));
+		builder.buildHourlyTask("utilization",CatString.CAT, new SimpleDateFormat("yyyyMMddHH").parse("2013082617"));
 	}
 	
 	@Test
@@ -27,7 +27,7 @@ public void testDailyReport() throws Exception{
 		DomainManager manager = lookup(DomainManager.class);
 		
 		manager.initialize();
-		builder.buildDailyTask("utilization", CatString.CAT, new SimpleDateFormat("yyyyMMdd").parse("20130825"));
+		builder.buildDailyTask("utilization", CatString.CAT, new SimpleDateFormat("yyyyMMdd").parse("20130826"));
 	}
 
 	@Test

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixReportMerger.java
Patch:
@@ -25,7 +25,6 @@ protected void mergeMatrix(Matrix old, Matrix matrix) {
 
 	@Override
 	protected void mergeRatio(Ratio old, Ratio ratio) {
-		old.setUrl(ratio.getUrl());
 		old.setTotalCount(old.getTotalCount() + ratio.getTotalCount());
 		old.setTotalTime(old.getTotalTime() + ratio.getTotalTime());
 		if (old.getMin() == 0) {
@@ -36,6 +35,7 @@ protected void mergeRatio(Ratio old, Ratio ratio) {
 		}
 		if (ratio.getMax() > old.getMax()) {
 			old.setMax(ratio.getMax());
+			old.setUrl(ratio.getUrl());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -43,7 +43,7 @@
 
 com.dianping.cat.report.page.externalError.Handler.class,
 
-com.dianping.cat.report.page.bug.Handler.class
+com.dianping.cat.report.page.statistics.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -41,7 +41,7 @@ public enum ReportPage implements Page {
 
    EXTERNALERROR("externalError", "externalError", "externalError", "ExternalError", true),
 
-   BUG("bug", "bug", "Statistics", "Bug", true);
+   STATISTICS("statistics", "statistics", "Statistics", "Statistics", true);
 
    private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Action.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 public enum Action implements org.unidal.web.mvc.Action {
 	BUG_HISTORY_REPORT("historyBug"),

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Context.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 import com.dianping.cat.report.ReportContext;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/ErrorStatis.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 import java.util.HashMap;
 import java.util.Map;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/JspFile.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 public enum JspFile {
 	HOURLY_REPORT("/jsp/report/bug/bug.jsp"),

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/JspViewer.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Model.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 import java.util.ArrayList;
 import java.util.Collection;

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/Payload.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
@@ -27,7 +27,7 @@ public void setTab(String tab) {
 	}
 
 	public Payload() {
-		super(ReportPage.BUG);
+		super(ReportPage.STATISTICS);
 	}
 
 	@Override
@@ -50,7 +50,7 @@ public void setAction(String action) {
 
 	@Override
 	public void setPage(String page) {
-		m_page = ReportPage.getByName(page, ReportPage.BUG);
+		m_page = ReportPage.getByName(page, ReportPage.STATISTICS);
 	}
 
 	public void setSortBy(String sortBy) {

File: cat-home/src/main/java/com/dianping/cat/report/page/statistics/UtilizationReportScore.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.bug;
+package com.dianping.cat.report.page.statistics;
 
 import com.dianping.cat.home.utilization.config.entity.UtilizationConfig;
 import com.dianping.cat.home.utilization.entity.Domain;

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/UtilizationReportService.java
Patch:
@@ -56,7 +56,7 @@ public UtilizationReport queryDailyReport(String domain, Date start, Date end) {
 				DailyReport report = m_dailyReportDao.findByDomainNamePeriod(domain, name, new Date(startTime),
 				      DailyReportEntity.READSET_FULL);
 				String xml = report.getContent();
-				System.out.println(xml);
+				
 				UtilizationReport reportModel = com.dianping.cat.home.utilization.transform.DefaultSaxParser.parse(xml);
 				reportModel.accept(merger);
 			} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -47,7 +47,7 @@ public Page[] getVisiblePages() {
 
 		ReportPage.STATE,
 		
-		ReportPage.BUG,
+		ReportPage.STATISTICS,
 
 		ReportPage.LOGVIEW,
 

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java
Patch:
@@ -86,7 +86,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		switch (action) {
 		case HOURLY:
 			report = getHourlyReport(payload);
-			System.out.println(report);
 			break;
 		case HISTORY:
 			report = getHistoryReport(payload);

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Handler.java
Patch:
@@ -84,8 +84,8 @@ private String parseHost() {
 			List<Message> messages = t.getChildren();
 
 			for (Message temp : messages) {
-				String type = temp.getType();
-				if (type.equals("URL.Server") || type.equals("ClientInfo")) {
+				String name = temp.getName();
+				if (name.equals("URL.Server") || name.equals("ClientInfo")) {
 					m_data = temp.getData().toString();
 					m_referer = parseValue("Referer", m_data);
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixAnalyzer.java
Patch:
@@ -92,11 +92,11 @@ public void process(MessageTree tree) {
 					}
 					if (real.getMax() < count) {
 						real.setMax(count);
+						real.setUrl(tree.getMessageId());
 					}
 					real.setTotalCount(real.getTotalCount() + count);
 					real.setTotalTime(real.getTotalTime() + time);
 				}
-				// the message is required by some matrixs
 				if (matrix.getUrl() == null) {
 					matrix.setUrl(tree.getMessageId());
 				}

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixDelegate.java
Patch:
@@ -28,6 +28,8 @@ public void beforeSave(Map<String, MatrixReport> reports) {
 
 			domainNames.clear();
 			domainNames.addAll(reports.keySet());
+
+			new MatrixReportFilter().visitMatrixReport(report);
 		}
 	}
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixReportMerger.java
Patch:
@@ -25,6 +25,7 @@ protected void mergeMatrix(Matrix old, Matrix matrix) {
 
 	@Override
 	protected void mergeRatio(Ratio old, Ratio ratio) {
+		old.setUrl(ratio.getUrl());
 		old.setTotalCount(old.getTotalCount() + ratio.getTotalCount());
 		old.setTotalTime(old.getTotalTime() + ratio.getTotalTime());
 		if (old.getMin() == 0) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -31,6 +31,7 @@ public String buildXml(StateReport report) {
 
 	@Override
 	public boolean createHourlyTask(StateReport report) {
+		m_taskManager.createTask(report.getStartTime(), report.getDomain(), "service", TaskProlicy.ALL);
 		m_taskManager.createTask(report.getStartTime(), report.getDomain(), "bug", TaskProlicy.ALL);
 		return m_taskManager.createTask(report.getStartTime(), report.getDomain(), StateAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionReportMerger.java
Patch:
@@ -49,8 +49,6 @@ public void mergeName(TransactionName old, TransactionName other) {
 		old.setSum(old.getSum() + other.getSum());
 		old.setSum2(old.getSum2() + other.getSum2());
 
-
-
 		if (old.getTotalCount() > 0) {
 			old.setFailPercent(old.getFailCount() * 100.0 / old.getTotalCount());
 			old.setAvg(old.getSum() / old.getTotalCount());

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -41,7 +41,7 @@ public enum ReportPage implements Page {
 
    EXTERNALERROR("externalError", "externalError", "externalError", "ExternalError", true),
 
-   BUG("bug", "bug", "Bug", "Bug", true);
+   BUG("bug", "bug", "Statistics", "Bug", true);
 
    private String m_name;
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixAnalyzer.java
Patch:
@@ -97,7 +97,6 @@ public void process(MessageTree tree) {
 					real.setTotalCount(real.getTotalCount() + count);
 					real.setTotalTime(real.getTotalTime() + time);
 				}
-				// the message is required by some matrixs
 				if (matrix.getUrl() == null) {
 					matrix.setUrl(tree.getMessageId());
 				}

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/DisplayMatrix.java
Patch:
@@ -201,7 +201,6 @@ public void setBaseInfo(Matrix matrix) {
 		}
 
 		public void setCacheInfo(Matrix matrix) {
-
 			Ratio ratio = matrix.getRatios().get("Cache");
 			if (ratio == null) {
 				return;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixAnalyzer.java
Patch:
@@ -92,6 +92,7 @@ public void process(MessageTree tree) {
 					}
 					if (real.getMax() < count) {
 						real.setMax(count);
+						real.setUrl(tree.getMessageId());
 					}
 					real.setTotalCount(real.getTotalCount() + count);
 					real.setTotalTime(real.getTotalTime() + time);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixDelegate.java
Patch:
@@ -28,6 +28,8 @@ public void beforeSave(Map<String, MatrixReport> reports) {
 
 			domainNames.clear();
 			domainNames.addAll(reports.keySet());
+
+			new MatrixReportFilter().visitMatrixReport(report);
 		}
 	}
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/matrix/MatrixReportMerger.java
Patch:
@@ -25,6 +25,7 @@ protected void mergeMatrix(Matrix old, Matrix matrix) {
 
 	@Override
 	protected void mergeRatio(Ratio old, Ratio ratio) {
+		old.setUrl(ratio.getUrl());
 		old.setTotalCount(old.getTotalCount() + ratio.getTotalCount());
 		old.setTotalTime(old.getTotalTime() + ratio.getTotalTime());
 		if (old.getMin() == 0) {

File: cat-home/src/main/java/com/dianping/cat/report/page/bug/JspFile.java
Patch:
@@ -6,7 +6,7 @@ public enum JspFile {
 	HISTORY_REPORT("/jsp/report/bug/bugHistory.jsp"), 
 	
 	HTTP_JSON("/jsp/report/bug/bugApi.jsp"), 
-
+	
 	;
 
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/bug/Model.java
Patch:
@@ -54,4 +54,5 @@ public String getDomain() {
 	public Collection<String> getDomains() {
 		return new ArrayList<String>();
 	}
+	
 }

File: cat-client/src/main/java/com/dianping/cat/abtest/repository/HttpABTestEntityRepository.java
Patch:
@@ -72,7 +72,7 @@ private void refresh() {
 			Transaction t = Cat.newTransaction("ABTest", url);
 
 			try {
-				InputStream inputStream = Urls.forIO().connectTimeout(100).readTimeout(100).openStream(url);
+				InputStream inputStream = Urls.forIO().connectTimeout(300).readTimeout(2000).openStream(url);
 				String content = Files.forIO().readFrom(inputStream, "utf-8");
 				AbtestModel abtest = DefaultSaxParser.parse(content);
 				ABTestVisitor visitor = new ABTestVisitor(m_domain);

File: cat-client/src/test/java/com/dianping/cat/CatEnvironmentTest.java
Patch:
@@ -63,7 +63,6 @@ public void testWithNoExistGlobalConfigInitialize() throws InterruptedException
 	@Test
 	public void testJobTest() throws Exception{
 		Cat.initialize("192.168.7.70","192.168.7.71");
-		
 		Transaction t = Cat.newTransaction("TestType", "TestName");
 
 		t.addData("data here");

File: cat-client/src/test/java/com/dianping/cat/message/internal/MessageIdFactoryTest.java
Patch:
@@ -156,5 +156,6 @@ void toHexString(StringBuilder sb, long value) {
 			offset++;
 			len--;
 		}
+		
 	}
 }

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/advanced/DatabaseParserTest.java
Patch:
@@ -6,7 +6,7 @@
 
 import com.dianping.cat.consumer.sql.DatabaseParser;
 
-public class DatabaseAnalyzerTest {
+public class DatabaseParserTest {
 	@Test
 	public void testParseDatabaseName() {
 		String mysql = "jdbc:mysql://127.0.0.1:3306/cat";

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -255,7 +255,7 @@ public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent event) {
 
 			event.getChannel().close();
 		}
-
+		
 		@Override
 		public void messageReceived(ChannelHandlerContext ctx, MessageEvent event) {
 			ChannelBuffer buf = (ChannelBuffer) event.getMessage();

File: cat-core/src/main/java/com/dianping/cat/service/ReportService.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.service;
 
-
 public interface ReportService<T> {
+
 	public T getHouylyReport(ModelRequest request);
 
 	public T getDailyReport(ModelRequest request);

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -109,7 +109,6 @@ public void archive(long startTime) {
 		}
 	}
 
-	@Override
 	public void close() throws IOException {
 		synchronized (m_buckets) {
 			for (LocalMessageBucket bucket : m_buckets.values()) {
@@ -580,7 +579,7 @@ public void run() {
 					long current = System.currentTimeMillis() / 1000 / 60;
 					int min = (int) (current % (60));
 
-					// make system is 0-10 min is not busy
+					// make system 0-10 min is not busy
 					if (min > 10) {
 						moveOldMessages();
 					}

File: cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBucketManager.java
Patch:
@@ -6,8 +6,6 @@
 import com.dianping.cat.message.spi.MessageTree;
 
 public interface MessageBucketManager {
-	public void close() throws IOException;
-
 	public MessageTree loadMessage(String messageId) throws IOException;
 
 	public void storeMessage(MessageTree tree,MessageId id) throws IOException;

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketManagerTest.java
Patch:
@@ -87,8 +87,6 @@ public void testReadWrite() throws Exception {
 			Assert.assertNotNull("Message " + i + " not found.", tree);
 			Assert.assertEquals(messageId, tree.getMessageId());
 		}
-
-		manager.close();
 	}
 
 	static class MockMessageIdFactory extends MessageIdFactory {

File: cat-hadoop/src/test/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucketManagerTest.java
Patch:
@@ -78,8 +78,6 @@ public void testReadWrite() throws Exception {
 			Assert.assertNotNull("Message " + i + " not found.", tree);
 			Assert.assertEquals(messageId, tree.getMessageId());
 		}
-
-		hdfsManager.close();
 	}
 
 	static class MockMessageIdFactory extends MessageIdFactory {

File: cat-home/src/main/java/com/dianping/cat/report/page/bug/Action.java
Patch:
@@ -5,7 +5,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	
 	HOURLY_REPORT("view"), 
 	
-	HTTP_JSON("json");
+	HTTP_JSON("json")
+	;
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/DisplayNames.java
Patch:
@@ -16,7 +16,7 @@ public class DisplayNames {
 	private List<EventNameModel> m_results = new ArrayList<EventNameModel>();
 
 	public DisplayNames display(String sorted, String type, String ip, EventReport report) {
-		Map<String, EventType> types = report.getMachines().get(ip).getTypes();
+		Map<String, EventType> types = report.findOrCreateMachine(ip).getTypes();
 		EventName all = new EventName("TOTAL");
 		all.setTotalPercent(1);
 		if (types != null) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayNames.java
Patch:
@@ -19,7 +19,7 @@ public DisplayNames() {
 	}
 
 	public DisplayNames display(String sorted, String type, String ip, TransactionReport report, String queryName) {
-		Map<String, TransactionType> types = report.getMachines().get(ip).getTypes();
+		Map<String, TransactionType> types = report.findOrCreateMachine(ip).getTypes();
 		TransactionName all = new TransactionName("TOTAL");
 		all.setTotalPercent(1);
 		if (types != null) {

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -14,8 +14,6 @@
 
 CrossInfoTest.class,
 
-DatabaseParserTest.class,
-
 MatrixModelTest.class,
 
 SqlParsersTest.class,

File: cat-client/src/main/java/com/dianping/cat/abtest/repository/HttpABTestEntityRepository.java
Patch:
@@ -72,7 +72,7 @@ private void refresh() {
 			Transaction t = Cat.newTransaction("ABTest", url);
 
 			try {
-				InputStream inputStream = Urls.forIO().connectTimeout(100).readTimeout(100).openStream(url);
+				InputStream inputStream = Urls.forIO().connectTimeout(300).readTimeout(2000).openStream(url);
 				String content = Files.forIO().readFrom(inputStream, "utf-8");
 				AbtestModel abtest = DefaultSaxParser.parse(content);
 				ABTestVisitor visitor = new ABTestVisitor(m_domain);

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -5,7 +5,7 @@
 import org.junit.runners.Suite.SuiteClasses;
 
 import com.dianping.cat.consumer.advanced.CrossInfoTest;
-import com.dianping.cat.consumer.advanced.DatabaseAnalyzerTest;
+import com.dianping.cat.consumer.advanced.DatabaseParserTest;
 import com.dianping.cat.consumer.advanced.MatrixModelTest;
 import com.dianping.cat.consumer.advanced.SqlParsersTest;
 
@@ -14,13 +14,13 @@
 
 CrossInfoTest.class,
 
-DatabaseAnalyzerTest.class,
+DatabaseParserTest.class,
 
 MatrixModelTest.class,
 
 SqlParsersTest.class,
 
-DatabaseAnalyzerTest.class
+DatabaseParserTest.class
 
 })
 public class AllTests {

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/advanced/DatabaseParserTest.java
Patch:
@@ -6,7 +6,7 @@
 
 import com.dianping.cat.consumer.sql.DatabaseParser;
 
-public class DatabaseAnalyzerTest {
+public class DatabaseParserTest {
 	@Test
 	public void testParseDatabaseName() {
 		String mysql = "jdbc:mysql://127.0.0.1:3306/cat";

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HdfsMessageBucketManager.java
Patch:
@@ -125,7 +125,8 @@ public boolean accept(Path p) {
 	            	}
 	            }
             } catch (Exception e) {
-            	//ingore
+            	t.setStatus(e);
+            	Cat.logError(e);
             }
 			}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/DisplayNames.java
Patch:
@@ -16,7 +16,7 @@ public class DisplayNames {
 	private List<EventNameModel> m_results = new ArrayList<EventNameModel>();
 
 	public DisplayNames display(String sorted, String type, String ip, EventReport report) {
-		Map<String, EventType> types = report.getMachines().get(ip).getTypes();
+		Map<String, EventType> types = report.findOrCreateMachine(ip).getTypes();
 		EventName all = new EventName("TOTAL");
 		all.setTotalPercent(1);
 		if (types != null) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayNames.java
Patch:
@@ -19,7 +19,7 @@ public DisplayNames() {
 	}
 
 	public DisplayNames display(String sorted, String type, String ip, TransactionReport report, String queryName) {
-		Map<String, TransactionType> types = report.getMachines().get(ip).getTypes();
+		Map<String, TransactionType> types = report.findOrCreateMachine(ip).getTypes();
 		TransactionName all = new TransactionName("TOTAL");
 		all.setTotalPercent(1);
 		if (types != null) {

File: cat-client/src/test/java/com/dianping/cat/CatEnvironmentTest.java
Patch:
@@ -63,7 +63,6 @@ public void testWithNoExistGlobalConfigInitialize() throws InterruptedException
 	@Test
 	public void testJobTest() throws Exception{
 		Cat.initialize("192.168.7.70","192.168.7.71");
-		
 		Transaction t = Cat.newTransaction("TestType", "TestName");
 
 		t.addData("data here");

File: cat-core/src/main/java/com/dianping/cat/message/spi/core/TcpSocketReceiver.java
Patch:
@@ -255,7 +255,7 @@ public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent event) {
 
 			event.getChannel().close();
 		}
-
+		
 		@Override
 		public void messageReceived(ChannelHandlerContext ctx, MessageEvent event) {
 			ChannelBuffer buf = (ChannelBuffer) event.getMessage();

File: cat-core/src/main/java/com/dianping/cat/service/ReportService.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.service;
 
-
 public interface ReportService<T> {
+
 	public T getHouylyReport(ModelRequest request);
 
 	public T getDailyReport(ModelRequest request);

File: cat-home/src/main/java/com/dianping/cat/report/page/bug/Action.java
Patch:
@@ -5,7 +5,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 	
 	HOURLY_REPORT("view"), 
 	
-	HTTP_JSON("json");
+	HTTP_JSON("json")
+	;
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/bug/Handler.java
Patch:
@@ -99,7 +99,6 @@ private BugReport queryBugReport(Payload payload) {
 		Date start = null;
 		Date end = null;
 		if (payload.getAction() == Action.HOURLY_REPORT) {
-
 			if (payload.getPeriod().isCurrent()) {
 				start = new Date(payload.getDate() - TimeUtil.ONE_HOUR);
 				end = new Date(start.getTime()+ TimeUtil.ONE_HOUR);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -5,6 +5,7 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.CountDownLatch;
@@ -173,7 +174,7 @@ public Period(long startTime, long endTime) {
 			m_endTime = endTime;
 			m_tasks = new ArrayList<PeriodTask>(names.size());
 
-			Map<String, MessageAnalyzer> analyzers = new HashMap<String, MessageAnalyzer>();
+			Map<String, MessageAnalyzer> analyzers = new LinkedHashMap<String, MessageAnalyzer>();
 
 			for (String name : names) {
 				MessageAnalyzer analyzer = m_analyzerManager.getAnalyzer(name, startTime);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/state/StateDelegate.java
Patch:
@@ -31,7 +31,7 @@ public String buildXml(StateReport report) {
 
 	@Override
 	public boolean createHourlyTask(StateReport report) {
-		m_taskManager.createTask(report.getStartTime(), report.getDomain(), "bug", TaskProlicy.ALL_EXCLUED_HOURLY);
+		m_taskManager.createTask(report.getStartTime(), report.getDomain(), "bug", TaskProlicy.ALL);
 		return m_taskManager.createTask(report.getStartTime(), report.getDomain(), StateAnalyzer.ID, TaskProlicy.ALL_EXCLUED_HOURLY);
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/bug/Handler.java
Patch:
@@ -78,7 +78,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 
 		Map<String, ErrorStatis> errors = visitor.getErrors();
 		errors = sortErrorStatis(errors);
-		System.out.println(errors.size()+"=======");
 		model.setBugReport(bugReport);
 		model.setErrorStatis(errors);
 		model.setPage(ReportPage.BUG);

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/ProblemReportVisitor.java
Patch:
@@ -40,7 +40,7 @@ public void visitDuration(Duration duration) {
 	public void visitEntry(Entry entry) {
 		String type = entry.getType();
 
-		if (ProblemType.ERROR.equals(type)) {
+		if (ProblemType.ERROR.getName().equals(type)) {
 			m_exception = entry.getStatus();
 			super.visitEntry(entry);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/BugReportMerger.java
Patch:
@@ -23,6 +23,7 @@ protected void mergeBugReport(BugReport old, BugReport bugReport) {
 
 	@Override
 	protected void mergeDomain(Domain old, Domain domain) {
+		old.setProblemUrl(domain.getProblemUrl());
 		super.mergeDomain(old, domain);
 	}
 
@@ -32,11 +33,10 @@ protected void mergeExceptionItem(ExceptionItem old, ExceptionItem exceptionItem
 		old.getMessages().addAll(exceptionItem.getMessages());
 
 		List<String> oldMessages = old.getMessages();
-		
+
 		if (oldMessages.size() > 10) {
 			oldMessages = oldMessages.subList(0, 10);
 		}
-
 	}
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/task/bug/ProblemReportVisitor.java
Patch:
@@ -28,7 +28,7 @@ public void visitDuration(Duration duration) {
 		Domain domainInfo = m_report.findOrCreateDomain(m_currentDomain);
 		ExceptionItem target = domainInfo.findOrCreateExceptionItem(m_exception);
 		List<String> oldMessages = target.getMessages();
-
+		
 		target.setCount(target.getCount() + count);
 		oldMessages.addAll(messages);
 		if (oldMessages.size() > 10) {

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -46,6 +46,8 @@ public Page[] getVisiblePages() {
 		ReportPage.DEPENDENCY,
 
 		ReportPage.STATE,
+		
+		ReportPage.BUG,
 
 		ReportPage.LOGVIEW,
 

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/ExceptionAnalyzer.java
Patch:
@@ -10,6 +10,7 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.problem.model.entity.Duration;
 import com.dianping.cat.consumer.problem.model.entity.Entry;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
@@ -80,7 +81,7 @@ public Project findByDomain(String domain) {
 		try {
 			return m_projectDao.findByDomain(domain, ProjectEntity.READSET_FULL);
 		} catch (DalException e) {
-			e.printStackTrace();
+			Cat.logError(e);
 		}
 		return null;
 	}
@@ -115,7 +116,6 @@ public Map<String, Integer> getErrors() {
 		public void setErrors(Map<String, Integer> errors) {
 			m_errors = errors;
 		}
-
 	}
 
 	public class Visitor extends BaseVisitor {

File: cat-home/src/main/java/com/dianping/cat/system/page/plugin/Handler.java
Patch:
@@ -98,7 +98,7 @@ private void downloadChromeExtension(Context ctx) throws IOException {
 			ZipOutputStream zos = new ZipOutputStream(res.getOutputStream());
 			res.setContentType("application/x-zip-compressed");
 			res.addHeader("Content-Disposition", "attachment;filename=cat.zip");
-			addResourceFiles(zos, "/chrome", "manifest.json", "cat.png", "cat.js");
+			addResourceFiles(zos, "/chrome/cat", "manifest.json", "cat.png", "cat.js");
 			zos.close();
 		} else {
 			InputStream is = getClass().getResourceAsStream("/chrome/cat.crx");

File: cat-home/src/main/java/com/dianping/cat/system/page/plugin/Handler.java
Patch:
@@ -98,7 +98,7 @@ private void downloadChromeExtension(Context ctx) throws IOException {
 			ZipOutputStream zos = new ZipOutputStream(res.getOutputStream());
 			res.setContentType("application/x-zip-compressed");
 			res.addHeader("Content-Disposition", "attachment;filename=cat.zip");
-			addResourceFiles(zos, "/chrome", "manifest.json", "cat.png", "cat.js");
+			addResourceFiles(zos, "/chrome/cat", "manifest.json", "cat.png", "cat.js");
 			zos.close();
 		} else {
 			InputStream is = getClass().getResourceAsStream("/chrome/cat.crx");

File: cat-client/src/test/java/com/dianping/cat/message/MessageTest.java
Patch:
@@ -231,7 +231,7 @@ private void encodeEvent(Event e, ChannelBuffer buf) {
 			m_sb.append(' ').append(e.getName());
 			m_sb.append(' ').append(e.getStatus());
 
-			if (!e.getType().equals("RemoteCall")) {
+			if (!e.getType().equals("RemoteCall") && !e.getType().equals("TruncatedTransaction")) {
 				m_sb.append(' ').append(e.getData());
 			}
 

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import org.unidal.dal.jdbc.datasource.JdbcDataSourceConfigurationManager;
+import org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptorManager;
 import org.unidal.initialization.DefaultModuleManager;
 import org.unidal.initialization.Module;
 import org.unidal.initialization.ModuleManager;
@@ -83,7 +83,7 @@ public List<Component> defineComponents() {
 		all.addAll(new ServiceComponentConfigurator().defineComponents());
 
 		// database
-		all.add(C(JdbcDataSourceConfigurationManager.class) //
+		all.add(C(JdbcDataSourceDescriptorManager.class) //
 		      .config(E("datasourceFile").value("/data/appdatas/cat/datasources.xml")));
 		all.addAll(new CatDatabaseConfigurator().defineComponents());
 		all.addAll(new UserDatabaseConfigurator().defineComponents());

File: cat-client/src/test/java/com/dianping/cat/message/MessageTest.java
Patch:
@@ -231,7 +231,7 @@ private void encodeEvent(Event e, ChannelBuffer buf) {
 			m_sb.append(' ').append(e.getName());
 			m_sb.append(' ').append(e.getStatus());
 
-			if (!e.getType().equals("RemoteCall")) {
+			if (!e.getType().equals("RemoteCall") && !e.getType().equals("TruncatedTransaction")) {
 				m_sb.append(' ').append(e.getData());
 			}
 

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import org.unidal.dal.jdbc.datasource.JdbcDataSourceConfigurationManager;
+import org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptorManager;
 import org.unidal.initialization.DefaultModuleManager;
 import org.unidal.initialization.Module;
 import org.unidal.initialization.ModuleManager;
@@ -83,7 +83,7 @@ public List<Component> defineComponents() {
 		all.addAll(new ServiceComponentConfigurator().defineComponents());
 
 		// database
-		all.add(C(JdbcDataSourceConfigurationManager.class) //
+		all.add(C(JdbcDataSourceDescriptorManager.class) //
 		      .config(E("datasourceFile").value("/data/appdatas/cat/datasources.xml")));
 		all.addAll(new CatDatabaseConfigurator().defineComponents());
 		all.addAll(new UserDatabaseConfigurator().defineComponents());

File: cat-home/src/main/java/com/dianping/cat/report/baseline/BaselineConfigManager.java
Patch:
@@ -14,7 +14,7 @@ public BaselineConfig queryBaseLineConfig(String key) {
 		config.setKey(key);
 		config.setLowerLimit(0.2);
 		config.setMinValue(100);
-		config.setTargetDate(1);
+		config.setTargetDate(7);
 		config.setUpperLimit(5);
 		config.setWeights(Arrays.asList(weights));
 		return config;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -9,6 +9,7 @@
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.tuple.Pair;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.analysis.AbstractMessageAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.Duration;
 import com.dianping.cat.consumer.transaction.model.entity.Range;
@@ -51,9 +52,9 @@ private Pair<Boolean, Long> checkForTruncatedMessage(MessageTree tree, Transacti
 					try {
 						long delta = Long.parseLong(last.getData().toString());
 
-						pair.setValue(t.getDurationInMicros() + delta);
+						pair.setValue(delta);
 					} catch (Exception e) {
-						// ignore it
+						Cat.logError(e);
 					}
 				}
 			}

File: cat-client/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java
Patch:
@@ -45,10 +45,9 @@ public String getNextId() {
 			}
 
 			index = m_index++;
+			saveMark();
 		}
-
-		saveMark();
-
+		
 		StringBuilder sb = new StringBuilder(m_domain.length() + 32);
 
 		sb.append(m_domain);

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/MetricDisplay.java
Patch:
@@ -265,9 +265,9 @@ public void generateDailyLineCharts() {
 	 private double avgOfArray(double[]values, int j){
 		 double result = 0;
 		 int size = 0;
-		 for(int i = j; i < j+INTERVAL; j++){
-			 if(values[j] >= 0){
-				 result +=values[j];
+		 for(int i = j; i < j+INTERVAL; i++){
+			 if(values[i] >= 0){
+				 result +=values[i];
 				 size ++;
 			 }
 		 }

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -10,6 +10,7 @@
 import com.dianping.cat.consumer.CatConsumerAdvancedModule;
 import com.dianping.cat.consumer.CatConsumerModule;
 import com.dianping.cat.consumer.problem.aggregation.AggregationConfigManager;
+import com.dianping.cat.hadoop.hdfs.DumpUploader;
 import com.dianping.cat.message.spi.core.MessageConsumer;
 import com.dianping.cat.message.spi.core.TcpSocketReceiver;
 import com.dianping.cat.report.task.DefaultTaskConsumer;
@@ -29,7 +30,7 @@ public class CatHomeModule extends AbstractModule {
 	@Override
 	protected void execute(ModuleContext ctx) throws Exception {
 		ServerConfigManager serverConfigManager = ctx.lookup(ServerConfigManager.class);
-
+		ctx.lookup(DumpUploader.class);
 		ctx.lookup(MessageConsumer.class);
 		ctx.lookup(DomainNavManager.class);
 		ctx.lookup(AggregationConfigManager.class);

File: cat-client/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -113,7 +113,7 @@ static void log(String severity, String message) {
 	}
 
 	public static void logError(String message, Throwable cause) {
-		Cat.getProducer().logError(new Throwable(message, cause));
+		Cat.getProducer().logError(message, cause);
 	}
 
 	public static void logError(Throwable cause) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -57,7 +57,8 @@ public static void main(String[] args) {
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
 
-		all.add(C(DomainManager.class).req(ServerConfigManager.class, HostinfoDao.class));
+		all.add(C(DomainManager.class).//
+		      req(ServerConfigManager.class, ProjectDao.class, HostinfoDao.class));
 
 		all.add(C(MessageConsumer.class, RealtimeConsumer.class) //
 		      .req(MessageAnalyzerManager.class, ServerStatisticManager.class));
@@ -142,7 +143,7 @@ private Collection<Component> defineStateComponents() {
 		final String ID = StateAnalyzer.ID;
 
 		all.add(C(MessageAnalyzer.class, ID, StateAnalyzer.class).is(PER_LOOKUP) //
-		      .req(ReportManager.class, ID).req(ProjectDao.class, DomainManager.class, ServerStatisticManager.class));
+		      .req(ReportManager.class, ID).req(DomainManager.class, ServerStatisticManager.class));
 		all.add(C(ReportManager.class, ID, DefaultReportManager.class) //
 		      .req(ReportDelegate.class, ID) //
 		      .req(BucketManager.class, HourlyReportDao.class) //

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Payload.java
Patch:
@@ -22,7 +22,7 @@ public class Payload extends AbstractReportPayload<Action> {
 	private String productLine;
 	
 	@FieldMeta("count")
-	private int m_minuteCounts = 10;
+	private int m_minuteCounts = 8;
 
 	@FieldMeta("frequency")
 	private int m_frequency = 10;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -77,7 +77,7 @@ public ProductLinesDashboard buildDashboardGraph(long time) {
 			Map<String, ProductLine> groups = m_productLineConfigManger.queryProductLines();
 
 			for (Entry<String, ProductLine> entry : groups.entrySet()) {
-				String groupName = entry.getKey();
+				String realName = entry.getValue().getTitle();
 				boolean isDashboard = entry.getValue().getDashboard();
 
 				if (isDashboard) {
@@ -88,7 +88,7 @@ public ProductLinesDashboard buildDashboardGraph(long time) {
 
 						m_allDomains.add(nodeName);
 						if (node != null) {
-							dashboardGraph.addNode(groupName, m_graphBuilder.cloneNode(node));
+							dashboardGraph.addNode(realName, m_graphBuilder.cloneNode(node));
 						}
 					}
 				}

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -51,7 +51,6 @@ private MetricReport getReport(Payload payload) {
 		if (m_service.isEligable(request)) {
 			ModelResponse<MetricReport> response = m_service.invoke(request);
 			MetricReport report = response.getModel();
-			System.out.println(report);
 			return report;
 		} else {
 			throw new RuntimeException("Internal error: no eligable metric service registered for " + request + "!");
@@ -82,8 +81,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			}
 			String product = payload.getProduct();
 			List<String> domains = m_productLineConfigManager.queryProductLineDomains(product);
-			List<MetricItemConfig> domainSet = m_configManager.queryMetricItemConfigs(new HashSet<String>(domains));
-			MetricDisplay display = new MetricDisplay(domainSet, test, startTime);
+			List<MetricItemConfig> configs = m_configManager.queryMetricItemConfigs(new HashSet<String>(domains));
+			MetricDisplay display = new MetricDisplay(configs, test, startTime);
 
 			display.setAbtest(m_abtestService);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/MetricDisplay.java
Patch:
@@ -55,17 +55,17 @@ public MetricDisplay(List<MetricItemConfig> configs, String abtest, Date start)
 
 		for (MetricItemConfig config : configs) {
 			if (config.isShowSum()) {
-				String key = config.getMetricKey() + SUM;
+				String key = config.getId() + SUM;
 
 				m_lineCharts.put(key, creatLineChart(config.getTitle() + CatString.Suffix_SUM));
 			}
 			if (config.isShowCount()) {
-				String key = config.getMetricKey() + COUNT;
+				String key = config.getId() + COUNT;
 
 				m_lineCharts.put(key, creatLineChart(config.getTitle() + CatString.Suffix_COUNT));
 			}
 			if (config.isShowAvg()) {
-				String key = config.getMetricKey() + AVG;
+				String key = config.getId() + AVG;
 
 				m_lineCharts.put(key, creatLineChart(config.getTitle() + CatString.Suffix_AVG));
 			}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatDelegate.java
Patch:
@@ -38,7 +38,7 @@ public String buildXml(HeartbeatReport report) {
 
 	@Override
 	public boolean createHourlyTask(HeartbeatReport report) {
-		return m_taskManager.createTask(report.getStartTime(), report.getDomain(), "event", TaskProlicy.HOULY);
+		return m_taskManager.createTask(report.getStartTime(), report.getDomain(), HeartbeatAnalyzer.ID, TaskProlicy.HOULY);
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionMerger.java
Patch:
@@ -51,9 +51,9 @@ public TransactionReport mergeForDaily(String reportDomain, List<TransactionRepo
 	public TransactionReport mergeForGraph(String reportDomain, List<TransactionReport> reports) {
 		TransactionReport transactionReport = merge(reportDomain, reports, false);
 		TransactionReportMerger merger = new TransactionReportMerger(new TransactionReport(reportDomain));
-		TransactionReport transactionReport2 = merge(reportDomain, reports, false);
+		TransactionReport all = merge(reportDomain, reports, false);
 		com.dianping.cat.consumer.transaction.model.entity.Machine allMachines = merger
-		      .mergesForAllMachine(transactionReport2);
+		      .mergesForAllMachine(all);
 		transactionReport.addMachine(allMachines);
 		transactionReport.getIps().add("All");
 

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -62,7 +62,7 @@ private long getSleepTime() {
 		Calendar cal = Calendar.getInstance();
 
 		cal.add(Calendar.DAY_OF_MONTH, 1);
-		cal.set(Calendar.HOUR_OF_DAY, 1);
+		cal.set(Calendar.HOUR_OF_DAY, 3);
 		cal.set(Calendar.MINUTE, 0);
 		cal.set(Calendar.SECOND, 0);
 		cal.set(Calendar.MILLISECOND, 0);

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/DependencyHourlyBuilder.java
Patch:
@@ -16,6 +16,6 @@ public void test() throws Exception{
 		DependencyReportBuilder builder = (DependencyReportBuilder)lookup(DependencyReportBuilder.class);
 		Date date = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse("2013-06-13 10:00");
 		
-		builder.buildHourReport("dependency", "Cat", date);
+		builder.buildHourlyTask("dependency", "Cat", date);
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/TransactionReportBuilderTest.java
Patch:
@@ -33,7 +33,7 @@ public void test() {
 		Date reportPeriod = cal.getTime();
 		
 		System.out.println(reportPeriod);
-		m_builder.buildWeeklyReport("transaction", "Cat", reportPeriod);
+		m_builder.buildWeeklyTask("transaction", "Cat", reportPeriod);
 	}
 
 }

File: cat-home/src/test/java/com/dianping/cat/report/task/metric/MetricBaselineReportBuilderTest.java
Patch:
@@ -46,7 +46,7 @@ public void insertBaseline(Baseline baseline) {
 	public void testBuildDailyReport() throws Exception{
 		MetricBaselineReportBuilder builder = getReportBuilder();
 		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-		builder.buildDailyReport("metirc", "TuanGouWeb:URL:/index", format.parse("2013-07-01 00:00:00"));
+		builder.buildDailyTask("metirc", "TuanGouWeb:URL:/index", format.parse("2013-07-01 00:00:00"));
 	}
 
 }

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -34,11 +34,11 @@ protected void execute(ModuleContext ctx) throws Exception {
 		ctx.lookup(AggregationConfigManager.class);
 
 		if (serverConfigManager.isJobMachine() && !serverConfigManager.isLocalMode()) {
+			// MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
+			// Threads.forGroup("Cat").start(metricAlert);
 			DefaultTaskConsumer taskConsumer = ctx.lookup(DefaultTaskConsumer.class);
-         //MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
-         
+
 			Threads.forGroup("Cat").start(taskConsumer);
-			//Threads.forGroup("Cat").start(metricAlert);
 		}
 
 		executeAlarmModule(ctx);

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -95,6 +95,7 @@ public void run() {
 				t.setStatus(Transaction.SUCCESS);
 			} catch (Exception e) {
 				t.setStatus(e);
+				Cat.logError(e);
 			} finally {
 				t.complete();
 			}

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -22,7 +22,6 @@
 
 DatabaseAnalyzerTest.class
 
-
 })
 public class AllTests {
 

File: cat-core/src/test/java/com/dianping/cat/AllTests.java
Patch:
@@ -8,7 +8,7 @@
 import com.dianping.cat.storage.dump.LocalMessageBucketManagerTest;
 import com.dianping.cat.storage.dump.LocalMessageBucketTest;
 import com.dianping.cat.storage.report.LocalReportBucketTest;
-import com.dianping.cat.task.TaskManager;
+import com.dianping.cat.task.TaskManagerTest;
 
 @RunWith(Suite.class)
 @SuiteClasses({
@@ -23,7 +23,7 @@
 
 LocalMessageBucketManagerTest.class,
 
-TaskManager.class
+TaskManagerTest.class
 
 })
 public class AllTests {

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MetricAnalyzer.java
Patch:
@@ -54,7 +54,7 @@ public class MetricAnalyzer extends AbstractMessageAnalyzer<MetricReport> implem
 
 	// key is project line,such as tuangou
 	private Map<String, MetricReport> m_reports = new HashMap<String, MetricReport>();
-
+	
 	@Override
 	public void doCheckpoint(boolean atEnd) {
 		storeReports(atEnd);

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MetricConfigManager.java
Patch:
@@ -181,5 +181,5 @@ private boolean storeConfig() {
 		}
 		return true;
 	}
-
+	
 }

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -35,8 +35,10 @@ protected void execute(ModuleContext ctx) throws Exception {
 
 		if (serverConfigManager.isJobMachine() && !serverConfigManager.isLocalMode()) {
 			DefaultTaskConsumer taskConsumer = ctx.lookup(DefaultTaskConsumer.class);
-
+         //MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
+         
 			Threads.forGroup("Cat").start(taskConsumer);
+			//Threads.forGroup("Cat").start(metricAlert);
 		}
 
 		executeAlarmModule(ctx);

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -48,7 +48,7 @@ public List<Component> defineComponents() {
 		      .req(ValueTranslater.class));
 
 		all.add(C(PayloadNormalizer.class).req(ServerConfigManager.class));
-
+		
 		all.add(C(StateGraphs.class, StateGraphs.class).//
 		      req(ReportService.class));
 

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayNames.java
Patch:
@@ -82,6 +82,7 @@ private void mergeName(TransactionName old, TransactionName other) {
 		old.setSum(old.getSum() + other.getSum());
 		old.setSum2(old.getSum2() + other.getSum2());
 		old.setLine95Value(0);
+		old.setLine99Value(0);
 		if (old.getTotalCount() > 0) {
 			old.setFailPercent(old.getFailCount() * 100.0 / old.getTotalCount());
 			old.setAvg(old.getSum() / old.getTotalCount());

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/DisplayTypes.java
Patch:
@@ -19,9 +19,6 @@ public class DisplayTypes {
 
 	private List<TransactionTypeModel> m_results = new ArrayList<TransactionTypeModel>();
 
-	public DisplayTypes() {
-	}
-
 	public DisplayTypes display(String sorted, String ip, TransactionReport report) {
 		Machine machine = report.getMachines().get(ip);
 		if (machine == null) {

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -12,6 +12,7 @@
 import com.dianping.cat.consumer.core.aggregation.AggregationConfigManager;
 import com.dianping.cat.message.spi.core.MessageConsumer;
 import com.dianping.cat.message.spi.core.TcpSocketReceiver;
+import com.dianping.cat.report.task.metric.MetricAlert;
 import com.dianping.cat.report.task.thread.DefaultTaskConsumer;
 import com.dianping.cat.report.task.thread.TaskProducer;
 import com.dianping.cat.report.view.DomainNavManager;
@@ -37,7 +38,8 @@ protected void execute(ModuleContext ctx) throws Exception {
 		if (serverConfigManager.isJobMachine() && !serverConfigManager.isLocalMode()) {
 			DefaultTaskConsumer taskConsumer = ctx.lookup(DefaultTaskConsumer.class);
 			TaskProducer dailyTaskProducer = ctx.lookup(TaskProducer.class);
-
+			@SuppressWarnings("unused")
+         MetricAlert metricAlert = ctx.lookup(MetricAlert.class);
 			Threads.forGroup("Cat").start(taskConsumer);
 			Threads.forGroup("Cat").start(dailyTaskProducer);
 		}

File: cat-home/src/main/java/com/dianping/cat/build/TaskComponentConfigurator.java
Patch:
@@ -87,7 +87,6 @@ public List<Component> defineComponents() {
 		      .req(MetricConfigManager.class,ProductLineConfigManager.class)//
 		      .req(BaselineCreator.class,BaselineService.class,BaselineConfigManager.class));
 		
-
 		all.add(C(MetricAlert.class)
 				.req(com.dianping.cat.report.service.ReportService.class,ServerConfigManager.class)//
 		      .req(MetricConfigManager.class,ProductLineConfigManager.class)//

File: cat-home/src/main/java/com/dianping/cat/report/task/metric/MetricAlert.java
Patch:
@@ -55,6 +55,8 @@ public class MetricAlert implements Initializable, LogEnabled  {
 
 	@Override
 	public void initialize() throws InitializationException {
+		System.out.println("metric alert start");
+		m_logger.info("metric alert start");
 		if (!m_manager.isLocalMode() && m_manager.isJobMachine()) {
 			Threads.forGroup("Cat").start(new Redo());
 		}

File: cat-core/src/main/java/com/dianping/cat/service/DefaultReportManager.java
Patch:
@@ -136,6 +136,7 @@ public Map<String, T> loadHourlyReports(long startTime, StoragePolicy policy) {
 			}
 
 			m_reportDelegate.afterLoad(reports);
+			t.setStatus(Message.SUCCESS);
 		} catch (Throwable e) {
 			t.setStatus(e);
 			Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/Handler.java
Patch:
@@ -17,7 +17,6 @@
 import com.dianping.cat.message.spi.core.MessagePathBuilder;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
 
@@ -35,8 +34,7 @@ private String getLogView(String messageId, boolean waterfall) {
 		try {
 			if (messageId != null) {
 				MessageId id = MessageId.parse(messageId);
-				ModelPeriod period = ModelPeriod.getByTime(id.getTimestamp());
-				ModelRequest request = new ModelRequest(id.getDomain(), period.getStartTime()) //
+				ModelRequest request = new ModelRequest(id.getDomain(), id.getTimestamp()) //
 				      .setProperty("messageId", messageId) //
 				      .setProperty("waterfall", String.valueOf(waterfall))
 				      .setProperty("timestamp", String.valueOf(id.getTimestamp()));

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -33,9 +33,9 @@ public class TransactionAnalyzer extends AbstractMessageAnalyzer<TransactionRepo
 	@Override
 	public void doCheckpoint(boolean atEnd) {
 		if (atEnd && !isLocalMode()) {
-			m_reportManager.storeHourlyReports(getStartTime(), StoragePolicy.FILE);
-		} else {
 			m_reportManager.storeHourlyReports(getStartTime(), StoragePolicy.FILE_AND_DB);
+		} else {
+			m_reportManager.storeHourlyReports(getStartTime(), StoragePolicy.FILE);
 		}
 	}
 

File: cat-core/src/main/java/com/dianping/cat/service/ModelPeriod.java
Patch:
@@ -38,8 +38,6 @@ public long getStartTime() {
 		switch (this) {
 		case CURRENT :
 			return current;
-		case FUTURE:
-			return current;
 		case LAST:
 			return current - ReportConstants.HOUR;
 		default:

File: cat-home/src/main/java/com/dianping/cat/report/page/dashboard/Handler.java
Patch:
@@ -234,7 +234,7 @@ private Map<String, String> getBaseInfoByDomianAndIp(String domain, String ip) {
 	}
 
 	private EventReport getEventHourlyReport(String domain, String ip, String type) {
-		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT) //
+		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT.getStartTime()) //
 		      .setProperty("ip", ip);
 		if (!StringUtils.isEmpty(type)) {
 			request.setProperty("type", type);
@@ -252,7 +252,7 @@ private EventReport getEventHourlyReport(String domain, String ip, String type)
 	}
 
 	private ProblemReport getProblemHourlyReport(String domain, String ip) {
-		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT) //
+		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT.getStartTime()) //
 		      .setProperty("type", "view");
 		if (!ip.equalsIgnoreCase(Payload.ALL)) {
 			request.setProperty("ip", ip);
@@ -269,7 +269,7 @@ private ProblemReport getProblemHourlyReport(String domain, String ip) {
 	}
 
 	private TransactionReport getTransactionHourlyReport(String domain, String ip, String type) {
-		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT) //
+		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT.getStartTime()) //
 		      .setProperty("ip", ip);
 		if (!StringUtils.isEmpty(type)) {
 			request.setProperty("type", type);

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/ExternalInfoBuilder.java
Patch:
@@ -209,7 +209,7 @@ public Map<String, List<Event>> queryDependencyEvent(Map<String, List<String>> d
 
 	private ProblemReport queryProblemReport(Payload payload, String domain) {
 		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
+		ModelRequest request = new ModelRequest(domain, payload.getDate()) //
 		      .setProperty("date", date).setProperty("type", "view");
 		if (m_problemservice.isEligable(request)) {
 			ModelResponse<ProblemReport> response = m_problemservice.invoke(request);
@@ -223,7 +223,7 @@ private ProblemReport queryProblemReport(Payload payload, String domain) {
 	private TopReport queryTopReport(Payload payload) {
 		String domain = CatString.CAT;
 		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
+		ModelRequest request = new ModelRequest(domain, payload.getDate()) //
 		      .setProperty("date", date);
 
 		if (m_topService.isEligable(request)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -282,9 +282,7 @@ private Map<String, List<String>> parseDependencies(TopologyGraph graph) {
 
 	private DependencyReport queryDependencyReport(Payload payload) {
 		String domain = payload.getDomain();
-		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
-		      .setProperty("date", date);
+		ModelRequest request = new ModelRequest(domain, payload.getDate());
 
 		if (m_dependencyService.isEligable(request)) {
 			ModelResponse<DependencyReport> response = m_dependencyService.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java
Patch:
@@ -260,7 +260,7 @@ private List<DependencyReport> fetchReport(Collection<String> domains) {
 			try {
 				for (String temp : domains) {
 					try {
-						ModelRequest request = new ModelRequest(temp, ModelPeriod.CURRENT).setProperty("date",
+						ModelRequest request = new ModelRequest(temp, ModelPeriod.CURRENT.getStartTime()).setProperty("date",
 						      String.valueOf(currentHour));
 						if (m_service.isEligable(request)) {
 							ModelResponse<DependencyReport> response = m_service.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/Handler.java
Patch:
@@ -36,7 +36,7 @@ private String getLogView(String messageId, boolean waterfall) {
 			if (messageId != null) {
 				MessageId id = MessageId.parse(messageId);
 				ModelPeriod period = ModelPeriod.getByTime(id.getTimestamp());
-				ModelRequest request = new ModelRequest(id.getDomain(), period) //
+				ModelRequest request = new ModelRequest(id.getDomain(), period.getStartTime()) //
 				      .setProperty("messageId", messageId) //
 				      .setProperty("waterfall", String.valueOf(waterfall))
 				      .setProperty("timestamp", String.valueOf(id.getTimestamp()));

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Handler.java
Patch:
@@ -37,10 +37,8 @@ public class Handler implements PageHandler<Context> {
 
 	private MatrixReport getHourlyReport(Payload payload) {
 		String domain = payload.getDomain();
-		String date = String.valueOf(payload.getDate());
 		String ipAddress = payload.getIpAddress();
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
-		      .setProperty("date", date) //
+		ModelRequest request = new ModelRequest(domain, payload.getDate()) //
 		      .setProperty("ip", ipAddress);
 
 		if (m_service.isEligable(request)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -47,9 +47,7 @@ public class Handler implements PageHandler<Context> {
 
 	private MetricReport getReport(Payload payload) {
 		String product = payload.getProduct();
-		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(product, payload.getPeriod()) //
-		      .setProperty("date", date);
+		ModelRequest request = new ModelRequest(product, payload.getDate());
 		if (m_service.isEligable(request)) {
 			ModelResponse<MetricReport> response = m_service.invoke(request);
 			MetricReport report = response.getModel();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -45,6 +45,7 @@
 import com.dianping.cat.report.page.model.top.LocalTopService;
 import com.dianping.cat.report.page.model.transaction.LocalTransactionService;
 import com.dianping.cat.report.view.StringSortHelper;
+import com.dianping.cat.service.ModelPeriod;
 import com.dianping.cat.service.ModelRequest;
 import com.dianping.cat.service.ModelResponse;
 
@@ -152,7 +153,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		try {
 			String report = payload.getReport();
 			String domain = payload.getDomain();
-			ModelRequest request = new ModelRequest(domain, payload.getPeriod());
+			ModelPeriod period = payload.getPeriod();
+			ModelRequest request = new ModelRequest(domain, period.getStartTime());
 			ModelResponse<?> response = null;
 
 			if ("transaction".equals(report)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/cross/HistoricalCrossService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalCrossService() {
 	@Override
 	protected CrossReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		CrossReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/dependency/HistoricalDependencyService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalDependencyService() {
 	@Override
 	protected DependencyReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		DependencyReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalEventService() {
 	@Override
 	protected EventReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		EventReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/heartbeat/HistoricalHeartbeatService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalHeartbeatService() {
 	@Override
 	protected HeartbeatReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		HeartbeatReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/HistoricalMatrixService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalMatrixService() {
 	@Override
 	protected MatrixReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		MatrixReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/metric/HistoricalMetricService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalMetricService() {
 	@Override
 	protected MetricReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		MetricReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalProblemService() {
 	@Override
 	protected ProblemReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		ProblemReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/sql/HistoricalSqlService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalSqlService() {
 	@Override
 	protected SqlReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		SqlReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/state/HistoricalStateService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalStateService() {
 	@Override
 	protected StateReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		StateReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/HistoricalTopService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalTopService() {
 	@Override
 	protected TopReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		TopReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -27,7 +27,7 @@ public HistoricalTransactionService() {
 	@Override
 	protected TransactionReport buildModel(ModelRequest request) throws Exception {
 		String domain = request.getDomain();
-		long date = Long.parseLong(request.getProperty("date"));
+		long date = request.getStartTime();
 		TransactionReport report;
 
 		if (isLocalMode()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -88,9 +88,8 @@ private ProblemReport buildFrontEndByRule(ProblemReport report) {
 
 	private ProblemReport getHourlyReportInternal(Payload payload, String type) {
 		String domain = payload.getDomain();
-		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
-		      .setProperty("date", date).setProperty("type", type);
+		ModelRequest request = new ModelRequest(domain, payload.getDate()) //
+		     .setProperty("type", type);
 		if (!CatString.ALL.equals(payload.getIpAddress())) {
 			request.setProperty("ip", payload.getIpAddress());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/Handler.java
Patch:
@@ -43,9 +43,7 @@ public class Handler implements PageHandler<Context> {
 
 	private SqlReport getHourlyReport(Payload payload) {
 		String domain = payload.getDomain();
-		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
-		      .setProperty("date", date) //
+		ModelRequest request = new ModelRequest(domain, payload.getDate()) //
 		      .setProperty("database", payload.getDatabase());
 
 		if (m_service.isEligable(request)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java
Patch:
@@ -52,9 +52,7 @@ public StateReport getHistoryReport(Payload payload) {
 	private StateReport getHourlyReport(Payload payload) {
 		// only for cat
 		String domain = CAT;
-		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
-		      .setProperty("date", date)//
+		ModelRequest request = new ModelRequest(domain, payload.getDate()) //
 		      .setProperty("ip", payload.getIpAddress());
 
 		if (m_service.isEligable(request)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/top/Handler.java
Patch:
@@ -36,9 +36,7 @@ public class Handler implements PageHandler<Context> {
 
 	private TopReport getReport(Payload payload) {
 		String domain = CatString.CAT;
-		String date = String.valueOf(payload.getDate());
-		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
-		      .setProperty("date", date);
+		ModelRequest request = new ModelRequest(domain, payload.getDate());
 
 		if (m_service.isEligable(request)) {
 			ModelResponse<TopReport> response = m_service.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/system/alarm/AlarmRuleCreator.java
Patch:
@@ -49,7 +49,7 @@ public class AlarmRuleCreator implements Task {
 	 */
 	private Set<String> getAllDomains() throws DalException {
 		String domain = CatString.CAT;
-		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT)//
+		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT.getStartTime())//
 		      .setProperty("ip", CatString.ALL);
 
 		if (m_service.isEligable(request)) {

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/DBAAnalyzer.java
Patch:
@@ -28,8 +28,8 @@ public class DBAAnalyzer extends ComponentTestCase {
 	@Test
 	public void test() throws Exception {
 		MonthlyReportDao dao = lookup(MonthlyReportDao.class);
-		Date date = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse("2013-05-01 00:00");
-		MonthlyReport monthreport = dao.findReportByDomainNamePeriod(date, "All", "Transaction",
+		Date date = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse("2013-06-01 00:00");
+		MonthlyReport monthreport = dao.findReportByDomainNamePeriod(date, "All", "transaction",
 		      MonthlyReportEntity.READSET_FULL);
 		String content = monthreport.getContent();
 		TransactionReport report = DefaultSaxParser.parse(content);

File: cat-home/src/test/java/com/dianping/cat/report/page/model/event/EventModelServiceTest.java
Patch:
@@ -30,7 +30,7 @@ public void testLookup() throws Exception {
 	@Test
 	public void testLocal() throws Exception {
 		LocalEventService local = (LocalEventService) lookup(ModelService.class, "event-local");
-		ModelResponse<?> response = local.invoke(new ModelRequest("Cat", ModelPeriod.CURRENT));
+		ModelResponse<?> response = local.invoke(new ModelRequest("Cat", ModelPeriod.CURRENT.getStartTime()));
 
 		Assert.assertEquals(true, response != null);
 	}

File: cat-home/src/test/java/com/dianping/cat/report/page/model/transaction/TransactionModelServiceTest.java
Patch:
@@ -23,7 +23,7 @@ public void testLookup() throws Exception {
 	@Test
 	public void testLocal() throws Exception {
 		LocalTransactionService local = (LocalTransactionService) lookup(ModelService.class, "transaction-local");
-		ModelResponse<?> response = local.invoke(new ModelRequest("Cat", ModelPeriod.CURRENT));
+		ModelResponse<?> response = local.invoke(new ModelRequest("Cat", ModelPeriod.CURRENT.getStartTime()));
 
 		Assert.assertEquals(true, response != null);
 	}

File: cat-core/src/main/java/com/dianping/cat/service/ModelPeriod.java
Patch:
@@ -36,7 +36,9 @@ public long getStartTime() {
 		current -= current % ReportConstants.HOUR;
 
 		switch (this) {
-		case CURRENT:
+		case CURRENT :
+			return current;
+		case FUTURE:
 			return current;
 		case LAST:
 			return current - ReportConstants.HOUR;

File: cat-hadoop/src/test/java/com/dianping/cat/hadoop/AllTests.java
Patch:
@@ -4,14 +4,11 @@
 import org.junit.runners.Suite;
 import org.junit.runners.Suite.SuiteClasses;
 
-import com.dianping.cat.hadoop.hdfs.FileSystemManagerTest;
 import com.dianping.cat.hadoop.hdfs.HdfsMessageBucketManagerTest;
 
 @RunWith(Suite.class)
 @SuiteClasses({
 
-FileSystemManagerTest.class,
-
 HdfsMessageBucketManagerTest.class
 
 })

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionReportMerger.java
Patch:
@@ -44,8 +44,10 @@ public void mergeName(TransactionName old, TransactionName other) {
 
 		if (totalCountSum > 0) {
 			double line95Values = old.getLine95Value() * old.getTotalCount() + other.getLine95Value() * other.getTotalCount();
-
+			double line99Values = old.getLine99Value() * old.getTotalCount() + other.getLine99Value() * other.getTotalCount();
+			
 			old.setLine95Value(line95Values / totalCountSum);
+			old.setLine99Value(line99Values / totalCountSum);
 		}
 
 		if (old.getTotalCount() > 0) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -56,7 +56,7 @@ public TransactionReport getReport(String domain) {
 
 	@Override
 	protected void loadReports() {
-		// m_reports = m_reportManager.loadReports(getStartTime());
+		m_reports = m_reportManager.loadHourlyReports(getStartTime(), StoragePolicy.FILE);
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/report/model/ModelPeriod.java
Patch:
@@ -41,6 +41,8 @@ public long getStartTime() {
 			return current;
 		case LAST:
 			return current - ReportConstants.HOUR;
+		default:
+			break;
 		}
 
 		throw new RuntimeException("Internal error: can't getStartTime() for historical or future period!");

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MetricConfigManager.java
Patch:
@@ -104,15 +104,15 @@ public boolean insertIfNotExist(String domain, String type, String metricKey, Co
 			return true;
 		} else {
 			config = new MetricItemConfig();
+			
+			config.setId(key);
 			config.setDomain(domain);
 			config.setType(type);
 			config.setMetricKey(metricKey);
-			config.setId(key);
 			config.setTitle(item.getTitle());
 			config.setShowAvg(item.isShowAvg());
 			config.setShowCount(item.isShowCount());
 			config.setShowSum(item.isShowSum());
-
 			return insertMetricItemConfig(config);
 		}
 	}
@@ -155,7 +155,7 @@ public void refreshMetricConfig() throws DalException, SAXException, IOException
 		if (modifyTime > m_modifyTime) {
 			String content = config.getContent();
 
-			synchronized (getMetricConfig()) {
+			synchronized (m_metricConfig) {
 				m_metricConfig = DefaultSaxParser.parse(content);
 			}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/GraphConstrant.java
Patch:
@@ -5,6 +5,8 @@ public class GraphConstrant {
 
 	public static final String DATABASE = "database";
 
+	public static final String CACHE = "cache";
+
 	public static int OK = 1;
 
 	public static int WARN = 2;

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/EventCollectManager.java
Patch:
@@ -161,6 +161,7 @@ public void run() {
 						String domain = error.getDomain();
 
 						findOrCreateEvents(minute, domain).add(error);
+						m_events.remove(minute - TimeUtil.ONE_HOUR * 3);
 					}
 				} catch (InterruptedException e) {
 					active = false;

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/MetricDisplay.java
Patch:
@@ -1,7 +1,6 @@
 package com.dianping.cat.report.page.metric;
 
 import java.util.ArrayList;
-import java.util.Collection;
 import java.util.Date;
 import java.util.HashMap;
 import java.util.LinkedHashMap;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/LineGraphBuilder.java
Patch:
@@ -8,7 +8,6 @@
 import java.util.Map.Entry;
 import java.util.Set;
 import java.util.TreeSet;
-import java.util.concurrent.ConcurrentHashMap;
 
 import com.dianping.cat.consumer.dependency.model.entity.Dependency;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
@@ -20,7 +19,7 @@
 
 public class LineGraphBuilder extends BaseVisitor {
 
-	public Map<String, Map<String, Item>> m_dependencies = new ConcurrentHashMap<String, Map<String, Item>>();
+	public Map<String, Map<String, Item>> m_dependencies = new HashMap<String, Map<String, Item>>();
 
 	private static final String TOTAL_COUNT = "TotalCount";
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/MetricDisplay.java
Patch:
@@ -46,8 +46,8 @@ public List<LineChart> getLineCharts() {
 		return new ArrayList<LineChart>(m_lineCharts.values());
 	}
 
-	public Collection<com.dianping.cat.home.dal.abtest.Abtest> getAbtests() {
-		return m_abtests.values();
+	public Map<Integer,com.dianping.cat.home.dal.abtest.Abtest> getAbtests() {
+		return m_abtests;
 	}
 
 	public MetricDisplay(List<MetricItemConfig> configs, String abtest, Date start) {

File: cat-core/src/main/java/com/dianping/cat/build/ABTestComponentConfigurator.java
Patch:
@@ -17,7 +17,7 @@
 import com.dianping.cat.configuration.ClientConfigManager;
 import com.dianping.cat.message.spi.MessageManager;
 
-class ABTestComponentConfigurator extends AbstractResourceConfigurator {
+public class ABTestComponentConfigurator extends AbstractResourceConfigurator {
 	@Override
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -17,12 +17,12 @@
 import com.dianping.cat.consumer.advanced.MetricConfigManager;
 import com.dianping.cat.consumer.core.ProductLineConfigManager;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
-import com.dianping.cat.home.dal.abtest.AbtestDao;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.PayloadNormalizer;
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
+import com.dianping.cat.system.page.abtest.service.ABTestService;
 
 public class Handler implements PageHandler<Context> {
 	@Inject
@@ -41,7 +41,7 @@ public class Handler implements PageHandler<Context> {
 	private ProductLineConfigManager m_productLineConfigManager;
 	
 	@Inject
-	private AbtestDao m_abtestDao;
+	private ABTestService m_abtestService;
 	
 	private static final String TUAN = "TuanGou";
 
@@ -88,7 +88,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			MetricDisplay display = new MetricDisplay(domainSet,
 			      test, startTime);
 			
-			display.setAbtest(m_abtestDao);
+			display.setAbtest(m_abtestService);
 			
 			display.visitMetricReport(report);
 			model.setDisplay(display);

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/service/ABTestService.java
Patch:
@@ -1,6 +1,8 @@
 package com.dianping.cat.system.page.abtest.service;
 
+import com.dianping.cat.home.dal.abtest.Abtest;
+
 public interface ABTestService {
 
-	public String getABTestNameByRunId(int id);
+	public Abtest getABTestNameByRunId(int id);
 }

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -81,7 +81,7 @@ public void initialize() {
 		bootstrap.setPipelineFactory(new ChannelPipelineFactory() {
 			@Override
 			public ChannelPipeline getPipeline() {
-				return Channels.pipeline(new MyHandler());
+				return Channels.pipeline(new ExceptionHandler());
 			}
 		});
 
@@ -240,7 +240,7 @@ public void shutdown() {
 		m_active = false;
 	}
 
-	class MyHandler extends SimpleChannelHandler {
+	class ExceptionHandler extends SimpleChannelHandler {
 		@Override
 		public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {
 			m_logger.warn("Channel disconnected by remote address: " + e.getChannel().getRemoteAddress());

File: cat-core/src/test/java/com/dianping/cat/status/StatusInfoCollectorTest.java
Patch:
@@ -9,7 +9,7 @@ public class StatusInfoCollectorTest {
 	public void test() {
 		StatusInfo status = new StatusInfo();
 
-		status.accept(new StatusInfoCollector(null));
+		status.accept(new StatusInfoCollector(null,null));
 
 		System.out.println(status);
 	}

File: cat-home/src/test/java/com/dianping/cat/report/page/dependency/DependencyReportMergerTest.java
Patch:
@@ -23,7 +23,7 @@ public void testDependencyReportMerge() throws Exception {
 		reportOld.accept(merger);
 		reportNew.accept(merger);
 
-		Assert.assertEquals("Check the merge result!", merger.getDependencyReport().toString(), result.toString());
+		Assert.assertEquals("Check the merge result!", result.toString(), merger.getDependencyReport().toString());
 	}
 
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -50,6 +50,7 @@ private MetricReport getReport(Payload payload) {
 			ModelResponse<MetricReport> response = m_service.invoke(request);
 			MetricReport report = response.getModel();
 
+			System.out.println(report);
 			return report;
 		} else {
 			throw new RuntimeException("Internal error: no eligable metric service registered for " + request + "!");

File: cat-core/src/main/java/com/dianping/cat/abtest/ABTest.java
Patch:
@@ -3,6 +3,8 @@
 public interface ABTest {
 	public ABTestName getTestName();
 
+	public boolean isActive();
+
 	public boolean isDefaultGroup();
 
 	public boolean isGroupA();
@@ -16,5 +18,4 @@ public interface ABTest {
 	public boolean isGroupE();
 
 	public boolean isGroup(String name);
-	
 }

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/HeartbeatAnalyzer.java
Patch:
@@ -227,7 +227,9 @@ private int processTransaction(HeartbeatReport report, MessageTree tree, Transac
 
 				count += processTransaction(report, tree, temp);
 			} else if (message instanceof Heartbeat) {
-				count += processHeartbeat(report, (Heartbeat) message, tree);
+				if (message.getType().equals("heartbeat")) {
+					count += processHeartbeat(report, (Heartbeat) message, tree);
+				}
 			}
 		}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/problem/DefaultProblemHandler.java
Patch:
@@ -98,7 +98,8 @@ private int processTransaction(Machine machine, Transaction transaction, Message
 	}
 
 	private int processHeartbeat(Machine machine, Heartbeat heartbeat, MessageTree tree) {
-		String type = ProblemType.HEARTBEAT.getName();
+		//String type = ProblemType.HEARTBEAT.getName();
+		String type = heartbeat.getType().toLowerCase();
 		String status = heartbeat.getName();
 		Entry entry = findOrCreateEntry(machine, type, status);
 

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContext.java
Patch:
@@ -25,10 +25,11 @@ public class DefaultABTestContext implements ABTestContext {
 
 	private ABTestGroupStrategy m_groupStrategy;
 	
-	private Map<String, String> m_cookielets = new ConcurrentHashMap<String, String>();
+	private Map<String, String> m_cookielets;
 
 	public DefaultABTestContext(ABTestEntity entity) {
 		m_entity = entity;
+		m_cookielets = new ConcurrentHashMap<String, String>();
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/build/WebComponentConfigurator.java
Patch:
@@ -3,12 +3,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.dianping.cat.report.ReportModule;
-import com.dianping.cat.system.SystemModule;
-
 import org.unidal.lookup.configuration.Component;
 import org.unidal.web.configuration.AbstractWebComponentsConfigurator;
 
+import com.dianping.cat.report.ReportModule;
+import com.dianping.cat.system.SystemModule;
+
 class WebComponentConfigurator extends AbstractWebComponentsConfigurator {
 	@SuppressWarnings("unchecked")
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/HistoricalMessageService.java
Patch:
@@ -6,7 +6,6 @@
 import org.jboss.netty.buffer.ChannelBuffers;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dianping.cat.hadoop.hdfs.HdfsMessageBucketManager;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageCodec;
@@ -17,6 +16,7 @@
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.storage.dump.LocalMessageBucketManager;
 import com.dianping.cat.storage.dump.MessageBucketManager;
+import com.dianping.cat.hadoop.hdfs.HdfsMessageBucketManager;
 
 public class HistoricalMessageService extends BaseLocalModelService<String> {
 	@Inject(LocalMessageBucketManager.ID)

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.system.page.abtest;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.system.SystemPage;
+
 public class JspViewer extends BaseJspViewer<SystemPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/ABTestEntityManager.java
Patch:
@@ -1,6 +1,7 @@
 package com.dianping.cat.abtest.spi.internal;
 
 import java.util.List;
+import java.util.Set;
 
 import com.dianping.cat.abtest.ABTestName;
 import com.dianping.cat.abtest.spi.ABTestEntity;
@@ -10,4 +11,6 @@ public interface ABTestEntityManager {
 	public ABTestEntity getEntity(ABTestName name);
 
 	public List<ABTestEntity> getEntityList();
+	
+	public Set<String> getActiveRun();
 }

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/ABTestEntityManager.java
Patch:
@@ -1,6 +1,7 @@
 package com.dianping.cat.abtest.spi.internal;
 
 import java.util.List;
+import java.util.Set;
 
 import com.dianping.cat.abtest.ABTestName;
 import com.dianping.cat.abtest.spi.ABTestEntity;
@@ -10,4 +11,6 @@ public interface ABTestEntityManager {
 	public ABTestEntity getEntity(ABTestName name);
 
 	public List<ABTestEntity> getEntityList();
+	
+	public Set<String> getActiveRun();
 }

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/ABTestContext.java
Patch:
@@ -10,9 +10,9 @@ public interface ABTestContext {
 
 	public String getGroupName();
 
-	public void setGroupName(String groupName);
-
 	public HttpServletRequest getHttpServletRequest();
-	
+
 	public HttpServletResponse getHttpServletResponse();
+
+	public void setGroupName(String groupName);
 }

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/ABTestGroupStrategy.java
Patch:
@@ -2,4 +2,6 @@
 
 public interface ABTestGroupStrategy {
 	public void apply(ABTestContext ctx);
+	
+	public void init(ABTestEntity entity);
 }
\ No newline at end of file

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContextManager.java
Patch:
@@ -151,15 +151,15 @@ public void setup(HttpServletRequest request, HttpServletResponse response) {
 				String value = map.get(key);
 
 				if (value == null) {
-					ctx.setup(request, response);
-					ctx.initialize(new Date());
+					ctx.setup(request, response, new Date());
 
 					String groupName = ctx.getGroupName();
 
-					if (groupName != null && groupName.length() > 0) {
+					if (groupName != null) {
 						result.put(key, groupName);
 					}
 				} else {
+					ctx.setGroupName(value);
 					result.put(key, value);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -225,7 +225,8 @@ private void setDefaultThreshold(Model model, Payload payload) {
 		Domain d = domains.get(payload.getDomain());
 
 		if (d != null) {
-			int longUrlTime = d.getUrlThreshold();
+			int longUrlTime = d.getUrlThreshold() == null ? m_manager.getLongUrlDefaultThreshold() : d.getUrlThreshold()
+			      .intValue();
 
 			if (payload.getRealLongTime() == 0) {
 				payload.setLongTime(longUrlTime);

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/ABTestContext.java
Patch:
@@ -10,9 +10,9 @@ public interface ABTestContext {
 
 	public String getGroupName();
 
-	public void setGroupName(String groupName);
-
 	public HttpServletRequest getHttpServletRequest();
-	
+
 	public HttpServletResponse getHttpServletResponse();
+
+	public void setGroupName(String groupName);
 }

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/ABTestGroupStrategy.java
Patch:
@@ -2,4 +2,6 @@
 
 public interface ABTestGroupStrategy {
 	public void apply(ABTestContext ctx);
+	
+	public void init(ABTestEntity entity);
 }
\ No newline at end of file

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContextManager.java
Patch:
@@ -151,15 +151,15 @@ public void setup(HttpServletRequest request, HttpServletResponse response) {
 				String value = map.get(key);
 
 				if (value == null) {
-					ctx.setup(request, response);
-					ctx.initialize(new Date());
+					ctx.setup(request, response, new Date());
 
 					String groupName = ctx.getGroupName();
 
-					if (groupName != null && groupName.length() > 0) {
+					if (groupName != null) {
 						result.put(key, groupName);
 					}
 				} else {
+					ctx.setGroupName(value);
 					result.put(key, value);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -225,7 +225,8 @@ private void setDefaultThreshold(Model model, Payload payload) {
 		Domain d = domains.get(payload.getDomain());
 
 		if (d != null) {
-			int longUrlTime = d.getUrlThreshold();
+			int longUrlTime = d.getUrlThreshold() == null ? m_manager.getLongUrlDefaultThreshold() : d.getUrlThreshold()
+			      .intValue();
 
 			if (payload.getRealLongTime() == 0) {
 				payload.setLongTime(longUrlTime);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/aggregation/AggregationHandler.java
Patch:
@@ -13,7 +13,7 @@ public interface AggregationHandler {
 	 *           page type and domain to rule List Map
 	 */
 	public void register(List<AggregationRule> rules);
-
+	
 	/**
 	 * parse input to output use aggregation rule
 	 * 

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -77,7 +77,7 @@ public List<Component> defineComponents() {
 		all.add(C(TopologyGraphBuilder.class).req(TopologyGraphItemBuilder.class).is(PER_LOOKUP));
 		
 		all.add(C(TopologyGraphManager.class).req(TopologyGraphBuilder.class, ServerConfigManager.class) //
-		      .req(ProductLineConfigManager.class, TopologyGraphDao.class)//
+		      .req(ProductLineConfigManager.class, TopologyGraphDao.class,DomainNavManager.class)//
 		      .req(ModelService.class, "dependency"));
 
 		// report serivce

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -46,6 +46,7 @@ public abstract class AbstractReportPayload<A extends Action> implements ActionP
 	private SimpleDateFormat m_dayFormat = new SimpleDateFormat("yyyyMMdd");
 
 	private ReportPage m_defaultPage;
+	
 
 	public AbstractReportPayload(ReportPage defaultPage) {
 		m_defaultPage = defaultPage;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Model.java
Patch:
@@ -13,8 +13,8 @@
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.entity.Segment;
 import com.dianping.cat.consumer.top.model.entity.TopReport;
+import com.dianping.cat.home.company.entity.ProductLine;
 import com.dianping.cat.home.dal.report.Event;
-import com.dianping.cat.home.dependency.config.entity.ProductLine;
 import com.dianping.cat.report.page.AbstractReportModel;
 import com.dianping.cat.report.page.dependency.dashboard.ProductLinesDashboard;
 import com.dianping.cat.report.page.top.TopMetric;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphBuilder.java
Patch:
@@ -16,8 +16,8 @@
 import com.dianping.cat.consumer.dependency.model.transform.BaseVisitor;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.home.dependency.graph.entity.TopologyEdge;
-import com.dianping.cat.home.dependency.graph.entity.TopologyNode;
 import com.dianping.cat.home.dependency.graph.entity.TopologyGraph;
+import com.dianping.cat.home.dependency.graph.entity.TopologyNode;
 
 public class TopologyGraphBuilder extends BaseVisitor {
 

File: cat-home/src/main/java/com/dianping/cat/report/view/DomainNavManager.java
Patch:
@@ -33,9 +33,6 @@ public class DomainNavManager implements Initializable {
 	// key is domain
 	private static Map<String, Project> m_projects = new ConcurrentHashMap<String, Project>();
 
-	// key is product line
-	private static Map<String, Map<String, Project>> m_productLines = new ConcurrentHashMap<String, Map<String, Project>>();
-
 	public static final String DEFAULT = "Default";
 
 	public static Collection<String> getDomains() {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/JspFile.java
Patch:
@@ -17,9 +17,9 @@ public enum JspFile {
 
 	TOPOLOGY_GRAPH_EDGE_CONFIG_LIST("/jsp/system/topology/topologyGraphEdgeConfigs.jsp"), 
 	
-	TOPOLOGY_GRAPH_PRODUCT_LINE("/jsp/system/topology/topologyProductLines.jsp"), 
+	TOPOLOGY_GRAPH_PRODUCT_LINE("/jsp/system/productLine/topologyProductLines.jsp"), 
 	
-	TOPOLOGY_GRAPH_PRODUCT_ADD_OR_UPDATE("/jsp/system/topology/topologyProductLineAdd.jsp"),
+	TOPOLOGY_GRAPH_PRODUCT_ADD_OR_UPDATE("/jsp/system/productLine/topologyProductLineAdd.jsp"),
 	
 	;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java
Patch:
@@ -10,11 +10,11 @@
 
 import com.dianping.cat.consumer.core.dal.Project;
 import com.dianping.cat.helper.CatString;
+import com.dianping.cat.home.company.entity.ProductLine;
 import com.dianping.cat.home.dal.report.AggregationRule;
 import com.dianping.cat.home.dependency.config.entity.DomainConfig;
 import com.dianping.cat.home.dependency.config.entity.EdgeConfig;
 import com.dianping.cat.home.dependency.config.entity.NodeConfig;
-import com.dianping.cat.home.dependency.config.entity.ProductLine;
 import com.dianping.cat.home.dependency.config.entity.TopologyGraphConfig;
 import com.dianping.cat.system.SystemPage;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Payload.java
Patch:
@@ -6,10 +6,10 @@
 import org.unidal.web.mvc.payload.annotation.ObjectMeta;
 
 import com.dianping.cat.consumer.core.dal.Project;
+import com.dianping.cat.home.company.entity.ProductLine;
 import com.dianping.cat.home.dal.report.AggregationRule;
 import com.dianping.cat.home.dependency.config.entity.DomainConfig;
 import com.dianping.cat.home.dependency.config.entity.EdgeConfig;
-import com.dianping.cat.home.dependency.config.entity.ProductLine;
 import com.dianping.cat.system.SystemPage;
 
 public class Payload implements ActionPayload<SystemPage, Action> {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -2,15 +2,16 @@
 
 import junit.framework.Assert;
 
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
-import com.dianping.cat.consumer.transaction.TransactionReportUrlFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 
+@Ignore
 public class TransactionReportFilterTest {
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportMessageAnalyzerTest.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.consumer.transaction;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.MessageAnalyzerManager;
-import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
@@ -14,6 +14,7 @@
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
+@Ignore
 public class TransactionReportMessageAnalyzerTest extends ComponentTestCase {
 	@Test
 	public void testCommonGenerate() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.dianping.cat.consumer.transaction;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultXmlBuilder;
 
+@Ignore
 public class TransactionReportTest {
 	@Test
 	public void testXml() throws Exception {

File: cat-home/src/test/java/com/dianping/cat/report/page/model/TransactionReportFilterTest.java
Patch:
@@ -23,6 +23,6 @@ public void test() throws Exception {
 		TransactionReportFilter f2 = new TransactionReportFilter("URL", null, null);
 		String expected2 = Files.forIO().readFrom(getClass().getResourceAsStream("transaction-name.xml"), "utf-8");
 
-		Assert.assertEquals(expected2.replaceAll("\\s*", ""), f2.buildXml(report).replaceAll("\\s*", ""));
+		Assert.assertEquals(expected2.replaceAll("\r", ""), f2.buildXml(report).replaceAll("\r", ""));
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/report/task/transaction/TransactionDailyGraphMergerTest.java
Patch:
@@ -38,15 +38,15 @@ public void testForMergerDaily() throws Exception {
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerDaily.xml"), "utf-8");
 		//Assert.assertEquals(expeted, report.toString());
 
-		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
+		Assert.assertEquals(expeted.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 
 	@Test
 	public void testForMegerGraph() throws Exception {
 		TransactionReport report = m_meger.mergeForGraph(m_reportDomain, reports);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerGraph.xml"), "utf-8");
 		//Assert.assertEquals(expeted, report.toString());
-		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
+		Assert.assertEquals(expeted.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 
 	private Report creatReport() {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -2,15 +2,16 @@
 
 import junit.framework.Assert;
 
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
-import com.dianping.cat.consumer.transaction.TransactionReportUrlFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 
+@Ignore
 public class TransactionReportFilterTest {
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportMessageAnalyzerTest.java
Patch:
@@ -1,11 +1,11 @@
 package com.dianping.cat.consumer.transaction;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.MessageAnalyzerManager;
-import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
@@ -14,6 +14,7 @@
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
+@Ignore
 public class TransactionReportMessageAnalyzerTest extends ComponentTestCase {
 	@Test
 	public void testCommonGenerate() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.dianping.cat.consumer.transaction;
 
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.unidal.helper.Files;
 
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultXmlBuilder;
 
+@Ignore
 public class TransactionReportTest {
 	@Test
 	public void testXml() throws Exception {

File: cat-home/src/test/java/com/dianping/cat/report/page/model/TransactionReportFilterTest.java
Patch:
@@ -23,6 +23,6 @@ public void test() throws Exception {
 		TransactionReportFilter f2 = new TransactionReportFilter("URL", null, null);
 		String expected2 = Files.forIO().readFrom(getClass().getResourceAsStream("transaction-name.xml"), "utf-8");
 
-		Assert.assertEquals(expected2.replaceAll("\\s*", ""), f2.buildXml(report).replaceAll("\\s*", ""));
+		Assert.assertEquals(expected2.replaceAll("\r", ""), f2.buildXml(report).replaceAll("\r", ""));
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/report/task/transaction/TransactionDailyGraphMergerTest.java
Patch:
@@ -38,15 +38,15 @@ public void testForMergerDaily() throws Exception {
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerDaily.xml"), "utf-8");
 		//Assert.assertEquals(expeted, report.toString());
 
-		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
+		Assert.assertEquals(expeted.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 
 	@Test
 	public void testForMegerGraph() throws Exception {
 		TransactionReport report = m_meger.mergeForGraph(m_reportDomain, reports);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerGraph.xml"), "utf-8");
 		//Assert.assertEquals(expeted, report.toString());
-		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
+		Assert.assertEquals(expeted.replaceAll("\r", ""), report.toString().replaceAll("\r", ""));
 	}
 
 	private Report creatReport() {

File: cat-home/src/test/java/com/dianping/cat/system/alarm/template/ThresholdRuleTest.java
Patch:
@@ -56,7 +56,8 @@ public void testAddData() throws Exception {
 
 		Pair<Boolean, ThresholdAlarmMeta> temp = m_rule.addData(entity, AlertInfo.EXCEPTION);
 		
-		Assert.assertNotNull(temp);
+		System.out.println(temp);
+		Assert.assertNull(temp);
 	}
 
 	@Test

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -350,7 +350,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			buildExternalErrorOnGraph(topologyGraph, buildZabbixHeader(payload, model), externalErrors);
 			buildExceptionInfoOnGraph(payload, model, topologyGraph);
 			model.setReportStart(new Date(payload.getDate()));
-			model.setReportEnd(new Date(payload.getDate()  - 1));
+			model.setReportEnd(new Date(payload.getDate() + TimeUtil.ONE_HOUR - 1));
 			model.setTopologyGraph(new DefaultJsonBuilder().buildJson(topologyGraph));
 			break;
 		case LINE_CHART:
@@ -374,7 +374,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			}
 			buildTopErrorInfo(payload, model);
 			model.setReportStart(new Date(payload.getDate()));
-			model.setReportEnd(new Date(payload.getDate()  - 1));
+			model.setReportEnd(new Date(payload.getDate() + TimeUtil.ONE_HOUR - 1));
 			model.setDashboardGraph(dashboardGraph.toJson());
 			model.setDashboardGraphData(dashboardGraph);
 			break;
@@ -393,7 +393,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				buildNodeExceptionInfo(node, model, payload);
 			}
 			model.setReportStart(new Date(payload.getDate()));
-			model.setReportEnd(new Date(payload.getDate() + TimeUtil.ONE_MINUTE - 1));
+			model.setReportEnd(new Date(payload.getDate() + TimeUtil.ONE_HOUR - 1));
 			model.setProductLineGraph(productLineGraph.toJson());
 			model.setProductLines(new ArrayList<ProductLine>(m_graphConfigManager.queryProductLines().values()));
 			break;

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/DisplayMatrix.java
Patch:
@@ -141,7 +141,7 @@ public int getCount() {
 		}
 
 		public String getName() {
-			return m_name;
+			return String.valueOf(m_name);
 		}
 
 		public double getSqlAvg() {
@@ -165,7 +165,7 @@ public double getSqlTimePercent() {
 		}
 
 		public String getType() {
-			return m_type;
+			return String.valueOf(m_type);
 		}
 
 		public String getUrl() {

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -41,7 +41,7 @@ protected void execute(ModuleContext ctx) throws Exception {
 			Threads.forGroup("Cat").start(dailyTaskProducer);
 		}
 
-		//executeAbtestModule(ctx);
+		executeAbtestModule(ctx);
 		executeAlarmModule(ctx);
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -226,7 +226,9 @@ private int processTransaction(HeartbeatReport report, MessageTree tree, Transac
 
 				count += processTransaction(report, tree, temp);
 			} else if (message instanceof Heartbeat) {
-				count += processHeartbeat(report, (Heartbeat) message, tree);
+				if (message.getType().equals("heartbeat")) {
+					count += processHeartbeat(report, (Heartbeat) message, tree);
+				}
 			}
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java
Patch:
@@ -169,6 +169,7 @@ private void buildHourlyReport(DependencyReport report, Model model, Payload pay
 	private TopologyGraph buildHourlyTopologyGraph(Model model, Payload payload) {
 		long time = payload.getDate() + TimeUtil.ONE_MINUTE * computeMinute(payload);
 		String domain = payload.getDomain();
+		
 		return m_graphManager.buildGraphByDomainTime(domain, time);
 	}
 
@@ -183,7 +184,6 @@ private String buildProblemInfo(String domain, Payload payload) {
 
 		visitor.visitProblemReport(report);
 		String result = visitor.buildResult();
-		System.out.println(result);
 		return result;
 	}
 
@@ -216,7 +216,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		normalize(model, payload);
 
 		Action action = payload.getAction();
-
 		DependencyReport report = queryDependencyReport(payload);
 		switch (action) {
 		case GRAPH:
@@ -333,6 +332,7 @@ private ProblemReport queryProblemReport(Payload payload, String domain) {
 		String date = String.valueOf(payload.getDate());
 		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
 		      .setProperty("date", date);
+		System.out.println(request);
 		if (m_problemservice.isEligable(request)) {
 			ModelResponse<ProblemReport> response = m_problemservice.invoke(request);
 

File: abtest-sample/src/main/java/com/dianping/abtest/sample/ABTestSampleServlet.java
Patch:
@@ -20,18 +20,18 @@ public class ABTestSampleServlet extends HttpServlet {
 	@Override
 	public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 		if (m_abtest.isGroupA()) {
-			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index2.jsp");
+			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index1.jsp");
 			rd.forward(request, response);
 			// Cat.logMetric(...);
 		} else {
-			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index1.jsp");
+			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index2.jsp");
 			rd.forward(request, response);
 			// Cat.logMetric(...);
 		}
 	}
 
 	public static enum MyABTestId implements ABTestId {
-		CASE1(2);
+		CASE1(11);
 
 		private int m_id;
 

File: abtest-sample/src/main/java/com/dianping/abtest/sample/IPDistributionStrategy.java
Patch:
@@ -52,7 +52,7 @@ public String getRemoteAddr(HttpServletRequest req) {
 		}
 		if (StringUtils.isEmpty(ip) || "unknown".equalsIgnoreCase(ip)) {
 			ip = req.getRemoteAddr();
-			if(ip.equals("127.0.0.1") && ip.startsWith("0:0:0:0:0:0:0:1")){
+			if(ip.equals("127.0.0.1") || ip.startsWith("0:0:0:0:0:0:0:1")){
 				ip = IPUtils.getFirstNoLoopbackIP4Address();
 			}
 		}

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContextManager.java
Patch:
@@ -38,7 +38,6 @@ public ABTestContext getContext(ABTestId testId) {
 			ABTestEntity entity = m_entityManager.getEntity(testId);
 
 			ctx = createContext(entity, entry.getHttpServletRequest());
-
 			map.put(id, ctx);
 		}
 

File: abtest-sample/src/main/java/com/dianping/abtest/sample/ABTestSampleServlet.java
Patch:
@@ -20,18 +20,18 @@ public class ABTestSampleServlet extends HttpServlet {
 	@Override
 	public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 		if (m_abtest.isGroupA()) {
-			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index2.jsp");
+			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index1.jsp");
 			rd.forward(request, response);
 			// Cat.logMetric(...);
 		} else {
-			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index1.jsp");
+			RequestDispatcher rd = getServletContext().getRequestDispatcher("/index2.jsp");
 			rd.forward(request, response);
 			// Cat.logMetric(...);
 		}
 	}
 
 	public static enum MyABTestId implements ABTestId {
-		CASE1(2);
+		CASE1(11);
 
 		private int m_id;
 

File: abtest-sample/src/main/java/com/dianping/abtest/sample/IPDistributionStrategy.java
Patch:
@@ -52,7 +52,7 @@ public String getRemoteAddr(HttpServletRequest req) {
 		}
 		if (StringUtils.isEmpty(ip) || "unknown".equalsIgnoreCase(ip)) {
 			ip = req.getRemoteAddr();
-			if(ip.equals("127.0.0.1") && ip.startsWith("0:0:0:0:0:0:0:1")){
+			if(ip.equals("127.0.0.1") || ip.startsWith("0:0:0:0:0:0:0:1")){
 				ip = IPUtils.getFirstNoLoopbackIP4Address();
 			}
 		}

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContextManager.java
Patch:
@@ -38,7 +38,6 @@ public ABTestContext getContext(ABTestId testId) {
 			ABTestEntity entity = m_entityManager.getEntity(testId);
 
 			ctx = createContext(entity, entry.getHttpServletRequest());
-
 			map.put(id, ctx);
 		}
 

File: abtest-sample/src/main/java/com/dianping/abtest/sample/IPDistributionStrategy.java
Patch:
@@ -52,7 +52,7 @@ public String getRemoteAddr(HttpServletRequest req) {
 		}
 		if (StringUtils.isEmpty(ip) || "unknown".equalsIgnoreCase(ip)) {
 			ip = req.getRemoteAddr();
-			if(ip.equals("127.0.0.1")){
+			if(ip.equals("127.0.0.1") && ip.startsWith("0:0:0:0:0:0:0:1")){
 				ip = IPUtils.getFirstNoLoopbackIP4Address();
 			}
 		}

File: abtest-sample/src/main/java/com/dianping/abtest/sample/IPDistributionStrategy.java
Patch:
@@ -52,7 +52,7 @@ public String getRemoteAddr(HttpServletRequest req) {
 		}
 		if (StringUtils.isEmpty(ip) || "unknown".equalsIgnoreCase(ip)) {
 			ip = req.getRemoteAddr();
-			if(ip.equals("127.0.0.1")){
+			if(ip.equals("127.0.0.1") && ip.startsWith("0:0:0:0:0:0:0:1")){
 				ip = IPUtils.getFirstNoLoopbackIP4Address();
 			}
 		}

File: cat-core/src/test/java/com/dianping/cat/abtest/spi/internal/ABTestEntityManagerTest.java
Patch:
@@ -10,7 +10,7 @@
 
 import com.dianping.cat.abtest.spi.ABTestEntity;
 
-public class DefaultABTestEntityManagerTest extends ComponentTestCase {
+public class ABTestEntityManagerTest extends ComponentTestCase {
 
 	private static final String PATTERN = "yyyy-MM-dd hh:mm:ss";
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/MetricDisplay.java
Patch:
@@ -148,9 +148,6 @@ public GraphItem(Date start, String title, String key) {
 			this.title = title;
 			this.key = key;
 
-			for (int i = 0; i < SIZE; i++) {
-				value[i] = -1;
-			}
 			values.add(value);
 			subTitles.add(title);
 		}

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/DomainManager.java
Patch:
@@ -21,11 +21,11 @@
 import org.unidal.webres.json.JsonArray;
 import org.unidal.webres.json.JsonObject;
 
-import com.dainping.cat.consumer.core.dal.Hostinfo;
-import com.dainping.cat.consumer.core.dal.HostinfoDao;
-import com.dainping.cat.consumer.core.dal.HostinfoEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
+import com.dianping.cat.consumer.core.dal.Hostinfo;
+import com.dianping.cat.consumer.core.dal.HostinfoDao;
+import com.dianping.cat.consumer.core.dal.HostinfoEntity;
 
 public class DomainManager implements Initializable, LogEnabled {
 

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/CrossAnalyzer.java
Patch:
@@ -10,11 +10,11 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.cross.model.entity.Local;
 import com.dianping.cat.consumer.cross.model.entity.Name;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/DatabaseAnalyzer.java
Patch:
@@ -10,11 +10,11 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.consumer.database.model.entity.DatabaseReport;
 import com.dianping.cat.consumer.database.model.entity.Domain;
 import com.dianping.cat.consumer.database.model.entity.Method;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/DependencyAnalyzer.java
Patch:
@@ -12,12 +12,12 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
 import com.dianping.cat.consumer.DomainManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.consumer.dependency.model.entity.Dependency;
 import com.dianping.cat.consumer.dependency.model.entity.DependencyReport;
 import com.dianping.cat.consumer.dependency.model.entity.Index;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MatrixAnalyzer.java
Patch:
@@ -11,11 +11,11 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.consumer.matrix.model.entity.Matrix;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.consumer.matrix.model.entity.Ratio;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MetricAnalyzer.java
Patch:
@@ -10,13 +10,13 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.advanced.dal.BusinessReport;
-import com.dainping.cat.consumer.advanced.dal.BusinessReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.CatConstants;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
 import com.dianping.cat.consumer.advanced.BussinessConfigManager.BusinessConfig;
+import com.dianping.cat.consumer.advanced.dal.BusinessReport;
+import com.dianping.cat.consumer.advanced.dal.BusinessReportDao;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.entity.Point;
 import com.dianping.cat.consumer.metric.model.transform.DefaultNativeBuilder;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/SqlAnalyzer.java
Patch:
@@ -11,11 +11,11 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.consumer.sql.SqlParseManager;
 import com.dianping.cat.consumer.sql.model.entity.Database;
 import com.dianping.cat.consumer.sql.model.entity.Method;

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/build/CatAdvancedDatabaseConfigurator.java
Patch:
@@ -14,8 +14,8 @@ public List<Component> defineComponents() {
       all.add(defineJdbcDataSourceConfigurationManagerComponent("datasources.xml"));
       all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.7.43:3306/cat", "dpcom_cat", "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
-      defineSimpleTableProviderComponents(all, "cat", com.dainping.cat.consumer.advanced.dal._INDEX.getEntityClasses());
-      defineDaoComponents(all, com.dainping.cat.consumer.advanced.dal._INDEX.getDaoClasses());
+      defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.consumer.advanced.dal._INDEX.getEntityClasses());
+      defineDaoComponents(all, com.dianping.cat.consumer.advanced.dal._INDEX.getDaoClasses());
 
       return all;
    }

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/sql/SqlParseManager.java
Patch:
@@ -9,10 +9,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.advanced.dal.Sqltable;
-import com.dainping.cat.consumer.advanced.dal.SqltableDao;
-import com.dainping.cat.consumer.advanced.dal.SqltableEntity;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.advanced.dal.Sqltable;
+import com.dianping.cat.consumer.advanced.dal.SqltableDao;
+import com.dianping.cat.consumer.advanced.dal.SqltableEntity;
 
 public class SqlParseManager {
 	@Inject

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/CatCoreDatabaseConfigurator.java
Patch:
@@ -13,8 +13,8 @@ public List<Component> defineComponents() {
 
       all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.7.43:3306/cat", "dpcom_cat", "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
-      defineSimpleTableProviderComponents(all, "cat", com.dainping.cat.consumer.core.dal._INDEX.getEntityClasses());
-      defineDaoComponents(all, com.dainping.cat.consumer.core.dal._INDEX.getDaoClasses());
+      defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.consumer.core.dal._INDEX.getEntityClasses());
+      defineDaoComponents(all, com.dianping.cat.consumer.core.dal._INDEX.getDaoClasses());
 
       return all;
    }

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/TopAnalyzer.java
Patch:
@@ -10,11 +10,11 @@
 import org.codehaus.plexus.logging.Logger;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.AbstractMessageAnalyzer;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
 import com.dianping.cat.consumer.problem.model.entity.Entry;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.entity.Segment;

File: cat-home/src/main/java/com/dianping/cat/build/WebComponentConfigurator.java
Patch:
@@ -3,12 +3,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.dianping.cat.report.ReportModule;
-import com.dianping.cat.system.SystemModule;
-
 import org.unidal.lookup.configuration.Component;
 import org.unidal.web.configuration.AbstractWebComponentsConfigurator;
 
+import com.dianping.cat.report.ReportModule;
+import com.dianping.cat.system.SystemModule;
+
 class WebComponentConfigurator extends AbstractWebComponentsConfigurator {
 	@SuppressWarnings("unchecked")
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportModel.java
Patch:
@@ -10,7 +10,7 @@
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ViewModel;
 
-import com.dainping.cat.consumer.core.dal.Project;
+import com.dianping.cat.consumer.core.dal.Project;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.view.DomainNavManager;
 import com.dianping.cat.report.view.DomainNavManager.Department;

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/DependencyGraphBuilder.java
Patch:
@@ -28,7 +28,7 @@ private Node mergeNode(Node old, Node node) {
 			if (old.getStatus() > old.getStatus()) {
 				old.setStatus(old.getStatus());
 			}
-			old.setWeight(old.getWeight() + node.getWeight());
+			old.setWeight(old.getWeight());
 			old.setDes(old.getDes() + node.getDes());
 			if (!StringUtil.isEmpty(node.getLink())) {
 				old.setLink(node.getLink());

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.dependency;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dependency/LineGraphBuilder.java
Patch:
@@ -135,7 +135,7 @@ public void visitSegment(Segment segment) {
 		long count = segment.getExceptionCount();
 
 		m_currentMinute = segment.getId();
-		Item item = findOrCreateItem("count", "exception");
+		Item item = findOrCreateItem(ERROR_COUNT, "exception");
 
 		item.setValue(m_currentMinute, count);
 		super.visitSegment(segment);

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.externalError;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/Model.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.externalError;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ViewModel;
 
+import com.dianping.cat.report.ReportPage;
+
 public class Model extends ViewModel<ReportPage, Action, Context> {
 	public Model(Context ctx) {
 		super(ctx);

File: cat-home/src/main/java/com/dianping/cat/report/task/cross/CrossMerger.java
Patch:
@@ -4,8 +4,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.cross.CrossReportMerger;

File: cat-home/src/main/java/com/dianping/cat/report/task/cross/CrossReportBuilder.java
Patch:
@@ -8,10 +8,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/database/DatabaseMerger.java
Patch:
@@ -4,8 +4,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.database.model.entity.DatabaseReport;
 import com.dianping.cat.consumer.database.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.CatString;

File: cat-home/src/main/java/com/dianping/cat/report/task/database/DatabaseReportBuilder.java
Patch:
@@ -8,10 +8,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.database.model.entity.DatabaseReport;
 import com.dianping.cat.consumer.database.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/event/EventMerger.java
Patch:
@@ -7,8 +7,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.Machine;
 import com.dianping.cat.consumer.event.model.transform.DefaultSaxParser;

File: cat-home/src/main/java/com/dianping/cat/report/task/event/EventReportBuilder.java
Patch:
@@ -9,10 +9,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/health/HealthReportBuilder.java
Patch:
@@ -11,10 +11,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.health.model.entity.HealthReport;
 import com.dianping.cat.consumer.health.model.transform.DefaultXmlBuilder;

File: cat-home/src/main/java/com/dianping/cat/report/task/health/HealthServiceCollector.java
Patch:
@@ -11,11 +11,11 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.DomainManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.cross.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.CatString;

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatMerger.java
Patch:
@@ -6,8 +6,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.heartbeat.HeartbeatReportMerger;

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatReportBuilder.java
Patch:
@@ -8,10 +8,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.heartbeat.model.entity.HeartbeatReport;
 import com.dianping.cat.consumer.heartbeat.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/matrix/MatrixMerger.java
Patch:
@@ -4,9 +4,9 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.advanced.MatrixReportFilter;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.matrix.MatrixReportMerger;

File: cat-home/src/main/java/com/dianping/cat/report/task/matrix/MatrixReportBuilder.java
Patch:
@@ -8,10 +8,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.matrix.model.entity.MatrixReport;
 import com.dianping.cat.consumer.matrix.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemMerger.java
Patch:
@@ -7,8 +7,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.problem.ProblemReportMerger;

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemReportBuilder.java
Patch:
@@ -9,10 +9,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/spi/AbstractReportBuilder.java
Patch:
@@ -9,10 +9,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.home.dal.report.DailygraphDao;
 import com.dianping.cat.home.dal.report.DailyreportDao;
 import com.dianping.cat.home.dal.report.GraphDao;

File: cat-home/src/main/java/com/dianping/cat/report/task/spi/ReportFacade.java
Patch:
@@ -10,8 +10,8 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Task;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Task;
 import com.dianping.cat.report.task.cross.CrossReportBuilder;
 import com.dianping.cat.report.task.database.DatabaseReportBuilder;
 import com.dianping.cat.report.task.event.EventReportBuilder;

File: cat-home/src/main/java/com/dianping/cat/report/task/spi/ReportMerger.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.Report;
 
 public interface ReportMerger<E> {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/sql/SqlMerger.java
Patch:
@@ -4,8 +4,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.sql.model.entity.SqlReport;
 import com.dianping.cat.consumer.sql.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.CatString;

File: cat-home/src/main/java/com/dianping/cat/report/task/sql/SqlReportBuilder.java
Patch:
@@ -8,10 +8,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.sql.model.entity.SqlReport;
 import com.dianping.cat.consumer.sql.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/state/StateMerger.java
Patch:
@@ -4,8 +4,8 @@
 import java.util.List;
 import java.util.Set;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.state.model.entity.Machine;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
 import com.dianping.cat.consumer.state.model.transform.DefaultSaxParser;

File: cat-home/src/main/java/com/dianping/cat/report/task/state/StateReportBuilder.java
Patch:
@@ -8,10 +8,10 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
 import com.dianping.cat.consumer.state.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/task/thread/DefaultTaskConsumer.java
Patch:
@@ -9,11 +9,11 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Task;
-import com.dainping.cat.consumer.core.dal.TaskDao;
-import com.dainping.cat.consumer.core.dal.TaskEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Task;
+import com.dianping.cat.consumer.core.dal.TaskDao;
+import com.dianping.cat.consumer.core.dal.TaskEntity;
 import com.dianping.cat.report.task.spi.ReportFacade;
 
 public class DefaultTaskConsumer extends TaskConsumer {

File: cat-home/src/main/java/com/dianping/cat/report/task/thread/TaskConsumer.java
Patch:
@@ -1,8 +1,8 @@
 package com.dianping.cat.report.task.thread;
 
-import com.dainping.cat.consumer.core.dal.Task;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
+import com.dianping.cat.consumer.core.dal.Task;
 
 public abstract class TaskConsumer implements org.unidal.helper.Threads.Task {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionMerger.java
Patch:
@@ -10,9 +10,9 @@
 import org.codehaus.plexus.logging.LogEnabled;
 import org.codehaus.plexus.logging.Logger;
 
-import com.dainping.cat.consumer.core.dal.Report;
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.core.TransactionReportUrlFilter;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.transaction.TransactionReportMerger;

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionReportBuilder.java
Patch:
@@ -11,11 +11,11 @@
 import org.unidal.dal.jdbc.DalException;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.consumer.core.TransactionReportUrlFilter;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;

File: cat-home/src/main/java/com/dianping/cat/report/view/DomainNavManager.java
Patch:
@@ -15,11 +15,11 @@
 import org.unidal.helper.Threads.Task;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Project;
-import com.dainping.cat.consumer.core.dal.ProjectDao;
-import com.dainping.cat.consumer.core.dal.ProjectEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
+import com.dianping.cat.consumer.core.dal.Project;
+import com.dianping.cat.consumer.core.dal.ProjectDao;
+import com.dianping.cat.consumer.core.dal.ProjectEntity;
 import com.dianping.cat.helper.TimeUtil;
 
 public class DomainNavManager implements Initializable {

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Handler.java
Patch:
@@ -15,10 +15,10 @@
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
-import com.dainping.cat.consumer.core.dal.Project;
-import com.dainping.cat.consumer.core.dal.ProjectDao;
-import com.dainping.cat.consumer.core.dal.ProjectEntity;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Project;
+import com.dianping.cat.consumer.core.dal.ProjectDao;
+import com.dianping.cat.consumer.core.dal.ProjectEntity;
 import com.dianping.cat.home.dal.report.AggregationRule;
 import com.dianping.cat.home.dal.report.AggregationRuleDao;
 import com.dianping.cat.home.dal.report.AggregationRuleEntity;

File: cat-home/src/main/java/com/dianping/cat/system/page/config/Model.java
Patch:
@@ -5,7 +5,7 @@
 
 import org.unidal.web.mvc.ViewModel;
 
-import com.dainping.cat.consumer.core.dal.Project;
+import com.dianping.cat.consumer.core.dal.Project;
 import com.dianping.cat.home.dal.report.AggregationRule;
 import com.dianping.cat.system.SystemPage;
 

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/UrlTransactionBugTest.java
Patch:
@@ -11,10 +11,10 @@
 import org.unidal.lookup.ComponentTestCase;
 import org.unidal.lookup.annotation.Inject;
 
-import com.dainping.cat.consumer.core.dal.Report;
-import com.dainping.cat.consumer.core.dal.ReportDao;
-import com.dainping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.Cat;
+import com.dianping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.ReportDao;
+import com.dianping.cat.consumer.core.dal.ReportEntity;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;

File: cat-home/src/test/java/com/dianping/cat/report/page/metric/MetricDaoTest.java
Patch:
@@ -9,9 +9,9 @@
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.webres.helper.Files;
 
-import com.dainping.cat.consumer.advanced.dal.BusinessReport;
-import com.dainping.cat.consumer.advanced.dal.BusinessReportDao;
-import com.dainping.cat.consumer.advanced.dal.BusinessReportEntity;
+import com.dianping.cat.consumer.advanced.dal.BusinessReport;
+import com.dianping.cat.consumer.advanced.dal.BusinessReportDao;
+import com.dianping.cat.consumer.advanced.dal.BusinessReportEntity;
 import com.dianping.cat.consumer.metric.model.entity.MetricReport;
 import com.dianping.cat.consumer.metric.model.transform.DefaultNativeBuilder;
 import com.dianping.cat.consumer.metric.model.transform.DefaultNativeParser;

File: cat-home/src/test/java/com/dianping/cat/report/task/TaskConsumerTest.java
Patch:
@@ -8,7 +8,7 @@
 
 import org.junit.Test;
 
-import com.dainping.cat.consumer.core.dal.Task;
+import com.dianping.cat.consumer.core.dal.Task;
 import com.dianping.cat.report.task.thread.TaskConsumer;
 
 public class TaskConsumerTest {

File: cat-home/src/test/java/com/dianping/cat/report/task/event/EventDailyGraphMergerTest.java
Patch:
@@ -11,7 +11,7 @@
 import org.junit.Test;
 import org.unidal.webres.helper.Files;
 
-import com.dainping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 
 public class EventDailyGraphMergerTest {

File: cat-home/src/test/java/com/dianping/cat/report/task/problem/ProblemDailyGraphMergerTest.java
Patch:
@@ -11,7 +11,7 @@
 import org.junit.Test;
 import org.unidal.webres.helper.Files;
 
-import com.dainping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 
 public class ProblemDailyGraphMergerTest {

File: cat-home/src/test/java/com/dianping/cat/report/task/transaction/TransactionDailyGraphMergerTest.java
Patch:
@@ -11,7 +11,7 @@
 import org.junit.Test;
 import org.unidal.webres.helper.Files;
 
-import com.dainping.cat.consumer.core.dal.Report;
+import com.dianping.cat.consumer.core.dal.Report;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 
 public class TransactionDailyGraphMergerTest {

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/EventCollectManager.java
Patch:
@@ -43,7 +43,7 @@ public class EventCollectManager implements Initializable, LogEnabled {
 
 	public List<Event> queryEvents(String domain, Date date) {
 		Date start = new Date(date.getTime() - TimeUtil.ONE_MINUTE * 3);
-		Date end = date;
+		Date end = new Date(date.getTime() + TimeUtil.ONE_MINUTE);
 
 		try {
 			return m_eventDao.findByDomainTime(domain, start, end, EventEntity.READSET_FULL);

File: cat-home/src/main/java/com/dianping/cat/report/page/externalError/Handler.java
Patch:
@@ -29,7 +29,7 @@ public class Handler implements PageHandler<Context> {
 	@Inject
 	private DomainManager m_domainManager;
 
-	private SimpleDateFormat m_sdf = new SimpleDateFormat("yyyyMMddHH:mm:ss");
+	private SimpleDateFormat m_sdf = new SimpleDateFormat("yyyyMMddHHmmss");
 
 	@Override
 	@PayloadMeta(Payload.class)

File: cat-home/src/test/java/com/dianping/cat/report/page/dependency/DependencyReportMergerTest.java
Patch:
@@ -60,7 +60,7 @@ public void testSendError() {
 	}
 
 	private String buildUrl(int i) {
-		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHH:mm:ss");
+		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
 		String ip = "192.168.7.70";
 		String title = "ZabbixError";
 		String database = "cat";

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Action.java
Patch:
@@ -3,12 +3,10 @@
 public enum Action implements org.unidal.web.mvc.Action {
 	VIEW("view"),
 	
-	DOCREATE("doCreate"),
+	CREATE("create"),
 	
 	DETAIL("detail"),
 	
-	LIST("list"),
-	
 	REPORT("report");
 
 	private String m_name;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspFile.java
Patch:
@@ -1,13 +1,12 @@
 package com.dianping.cat.system.page.abtest;
 
 public enum JspFile {
-	VIEW("/jsp/system/abtest.jsp"),
 	
-	DOCREATE("/jsp/system/abtest.jsp"),
+	CREATE("/jsp/system/abtestCreate.jsp"),
 	
 	DETAIL("/jsp/system/abtestDetail.jsp"),
 	
-	LIST("/jsp/system/abtestAllTest.jsp"),
+	VIEW("/jsp/system/abtestAllTest.jsp"),
 	
 	REPORT("/jsp/system/abtestReport.jsp")
 	;

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -45,7 +45,9 @@
 
 com.dianping.cat.report.page.jsError.Handler.class,
 
-com.dianping.cat.report.page.dependency.Handler.class
+com.dianping.cat.report.page.dependency.Handler.class,
+
+com.dianping.cat.report.page.zabbixError.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -43,7 +43,9 @@ public enum ReportPage implements Page {
 
    JSERROR("jsError", "jsError", "JsError", "jsError", true),
 
-   DEPENDENCY("dependency", "dependency", "Dependency", "Dependency", true);
+   DEPENDENCY("dependency", "dependency", "Dependency", "Dependency", true),
+
+   ZABBIXERROR("zabbixError", "zabbixError", "ZabbixError", "ZabbixError", true);
 
    private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Model.java
Patch:
@@ -26,7 +26,7 @@ public Action getDefaultAction() {
 
 	@Override
 	public String getDomain() {
-		return "Cat";
+		return getDisplayDomain();
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/top/Handler.java
Patch:
@@ -12,6 +12,7 @@
 import org.unidal.web.mvc.annotation.PayloadMeta;
 
 import com.dianping.cat.consumer.top.model.entity.TopReport;
+import com.dianping.cat.helper.CatString;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.page.PayloadNormalizer;
@@ -35,7 +36,7 @@ public class Handler implements PageHandler<Context> {
 	private PayloadNormalizer m_normalizePayload;
 
 	private TopReport getReport(Payload payload) {
-		String domain = payload.getDomain();
+		String domain = CatString.CAT;
 		String date = String.valueOf(payload.getDate());
 		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
 		      .setProperty("date", date);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/database/DatabaseReportMerger.java
Patch:
@@ -31,7 +31,6 @@ protected void mergeMethod(Method old, Method method) {
 		old.setFailPercent(old.getFailCount() / (double) old.getTotalCount());
 		old.setSum(old.getSum() + method.getSum());
 		old.setAvg(old.getSum() / (double) old.getTotalCount());
-
 		old.getSqlNames().addAll(method.getSqlNames());
 	}
 
@@ -77,7 +76,6 @@ public void visitDatabaseReport(DatabaseReport databaseReport) {
 		if (m_allDomain) {
 			old.getDomainNames().remove(CatString.ALL);
 		}
-
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/model/database/HistoricalDatabaseService.java
Patch:
@@ -27,7 +27,6 @@ public HistoricalDatabaseService() {
 	@Override
 	protected DatabaseReport buildModel(ModelRequest request) throws Exception {
 		String database = request.getProperty("database");
-
 		long date = Long.parseLong(request.getProperty("date"));
 		DatabaseReport report;
 
@@ -36,7 +35,6 @@ protected DatabaseReport buildModel(ModelRequest request) throws Exception {
 		} else {
 			report = getReportFromDatabase(date, database);
 		}
-
 		return report;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/HourlyReportServiceImpl.java
Patch:
@@ -152,7 +152,9 @@ public DatabaseReport queryDatabaseReport(String database, Date start, Date end)
 		databaseReport.setStartTime(start);
 		databaseReport.setEndTime(end);
 
-		Set<String> domains = queryAllDomainNames(start, end, "database");
+		Set<String> domains = queryAllDatabaseNames(start, end, "database");
+		
+		System.out.println(domains);
 		databaseReport.getDomainNames().addAll(domains);
 		return databaseReport;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Handler.java
Patch:
@@ -113,11 +113,11 @@ private void normalize(Model model, Payload payload) {
 		if (StringUtils.isEmpty(payload.getDatabase())) {
 			payload.setDatabase("cat");
 		}
-		if (!CatString.ALL.equalsIgnoreCase(payload.getDomain())) {
-			model.setDisplayDomain(payload.getDomain());
-			model.setDomain(payload.getDomain());
+		if(StringUtils.isEmpty(payload.getDomain())){
+			payload.setDomain(CatString.ALL);
 		}
 		model.setDatabase(payload.getDatabase());
+		model.setDomain(payload.getDomain());
 		model.setPage(ReportPage.DATABASE);
 		m_normalizePayload.normalize(model, payload);
 	}

File: cat-core/src/test/java/com/dianping/cat/abtest/demo/roundrobin/ABTestServerConfigurator.java
Patch:
@@ -6,13 +6,16 @@
 import org.unidal.lookup.configuration.AbstractResourceConfigurator;
 import org.unidal.lookup.configuration.Component;
 
+import com.dianping.cat.abtest.spi.ABTestEntityManager;
 import com.dianping.cat.abtest.spi.ABTestGroupStrategy;
+import com.dianping.cat.abtest.spi.internal.DefaultABTestEntityManager;
 
 public class ABTestServerConfigurator extends AbstractResourceConfigurator {
 	@Override
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
 
+		all.add(C(ABTestEntityManager.class, DefaultABTestEntityManager.class));
 		all.add(C(ABTestGroupStrategy.class, "roundrobin", RoundRobinGroupStrategy.class));
 
 		return all;

File: cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java
Patch:
@@ -19,6 +19,9 @@ public List<Component> defineComponents() {
       defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.alarm._INDEX.getEntityClasses());
       defineDaoComponents(all, com.dianping.cat.home.dal.alarm._INDEX.getDaoClasses());
 
+      defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.abtest._INDEX.getEntityClasses());
+      defineDaoComponents(all, com.dianping.cat.home.dal.abtest._INDEX.getDaoClasses());
+
       return all;
    }
 }

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -16,6 +16,7 @@
 import com.dainping.cat.consumer.dal.report.TaskDao;
 import com.dianping.cat.CatHomeModule;
 import com.dianping.cat.configuration.ServerConfigManager;
+import com.dianping.cat.home.dal.abtest.AbtestDao;
 import com.dianping.cat.home.dal.report.DailygraphDao;
 import com.dianping.cat.home.dal.report.DailyreportDao;
 import com.dianping.cat.home.dal.report.GraphDao;
@@ -206,6 +207,8 @@ public List<Component> defineComponents() {
 
 		// for alarm module
 		all.addAll(new AlarmComponentConfigurator().defineComponents());
+		
+		// for abtest module
 		return all;
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/Action.java
Patch:
@@ -3,7 +3,7 @@
 public enum Action implements org.unidal.web.mvc.Action {
 	VIEW("view"),
 	
-	ALLTESTVIEW("list"),
+	LIST("list"),
 	
 	REPORT("report");
 

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspFile.java
Patch:
@@ -3,7 +3,7 @@
 public enum JspFile {
 	VIEW("/jsp/system/abtest.jsp"),
 
-	ALLTESTVIEW("/jsp/system/abtestAllTest.jsp"),
+	LIST("/jsp/system/abtestAllTest.jsp"),
 	
 	REPORT("/jsp/system/abtestReport.jsp")
 	;

File: cat-home/src/main/java/com/dianping/cat/system/page/abtest/JspViewer.java
Patch:
@@ -11,8 +11,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 		switch (action) {
 		case VIEW:
 			return JspFile.VIEW.getPath();
-		case ALLTESTVIEW:
-			return JspFile.ALLTESTVIEW.getPath();
+		case LIST:
+			return JspFile.LIST.getPath();
 		case REPORT:
 			return JspFile.REPORT.getPath();
 		}

File: cat-consumer-advanced/src/main/java/com/dianping/cat/consumer/advanced/MatrixAnalyzer.java
Patch:
@@ -186,10 +186,10 @@ private void storeReports(boolean atEnd) {
 			for (MatrixReport report : m_reports.values()) {
 				try {
 					try {
-						report.accept(new MatrixReportFilter(50));
+						report.accept(new MatrixReportFilter());
 					} catch (Exception e) {
 						// ConcurrentModificationException
-						report.accept(new MatrixReportFilter(50));
+						report.accept(new MatrixReportFilter());
 					}
 					Set<String> domainNames = report.getDomainNames();
 					domainNames.clear();
@@ -216,7 +216,7 @@ private void storeReports(boolean atEnd) {
 
 				for (MatrixReport report : m_reports.values()) {
 					try {
-						report.accept(new MatrixReportFilter(50));
+						report.accept(new MatrixReportFilter());
 						Report r = m_reportDao.createLocal();
 						String xml = builder.buildXml(report);
 						String domain = report.getDomain();

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/AllTests.java
Patch:
@@ -6,7 +6,6 @@
 
 import com.dianping.cat.consumer.advanced.CrossInfoTest;
 import com.dianping.cat.consumer.advanced.DatabaseAnalyzerTest;
-import com.dianping.cat.consumer.advanced.IpReportTest;
 import com.dianping.cat.consumer.advanced.MatrixModelTest;
 import com.dianping.cat.consumer.advanced.MetricAnalyzerTest;
 import com.dianping.cat.consumer.advanced.SqlParsersTest;
@@ -18,8 +17,6 @@
 
 DatabaseAnalyzerTest.class,
 
-IpReportTest.class,
-
 MatrixModelTest.class,
 
 SqlParsersTest.class,

File: cat-consumer-advanced/src/test/java/com/dianping/cat/consumer/advanced/MatrixModelTest.java
Patch:
@@ -13,7 +13,7 @@ public class MatrixModelTest {
 	public void testModel() throws Exception {
 		String source = Files.forIO().readFrom(getClass().getResourceAsStream("matrix.xml"), "utf-8");
 		MatrixReport report = DefaultSaxParser.parse(source);
-		MatrixReportFilter f1 = new MatrixReportFilter(1);
+		MatrixReportFilter f1 = new MatrixReportFilter();
 
 		report.accept(f1);
 		String expected1 = Files.forIO().readFrom(getClass().getResourceAsStream("matrix-result.xml"), "utf-8");

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -59,7 +59,7 @@ public class RealtimeConsumer extends ContainerHolder implements MessageConsumer
 
 	private long m_networkError;
 
-	private static int QUEUE_SIZE = 500000;
+	private static int QUEUE_SIZE = 300000;
 
 	@Override
 	public void consume(MessageTree tree) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/TransactionAnalyzer.java
Patch:
@@ -241,7 +241,8 @@ int processTransaction(TransactionReport report, MessageTree tree, Transaction t
 
 		// update statistics
 		double duration = t.getDurationInMicros() / 1000d;
-		Integer allDuration = new Integer((int) duration);
+		// make all duration numbers less
+		Integer allDuration = new Integer(((int) duration) / 4 * 4);
 
 		name.setMax(Math.max(name.getMax(), duration));
 		name.setMin(Math.min(name.getMin(), duration));

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/problem/DefaultProblemHandler.java
Patch:
@@ -17,7 +17,7 @@
 
 public class DefaultProblemHandler extends ProblemHandler {
 	public static final String ID = "default-problem";
-	
+
 	@Inject
 	private Set<String> m_errorTypes;
 
@@ -66,8 +66,8 @@ private int processTransaction(Machine machine, Transaction transaction, Message
 
 			if (m_failureTypes.contains(type)) {
 				type = transaction.getType();
-				//make it march for alarm
-				if (type.equals("PigeonCall")) {
+				// make it march for alarm
+				if (type.equals("PigeonCall") || type.equals("Call")) {
 					type = "call";
 				}
 				status = transaction.getName();

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketReceiver.java
Patch:
@@ -64,7 +64,7 @@ public class TcpSocketReceiver implements LogEnabled {
 
 	private BlockingQueue<ChannelBuffer> m_queue;
 
-	private int m_queueSize = 500000;
+	private int m_queueSize = 300000;
 
 	private volatile int m_errorCount;
 
@@ -268,8 +268,8 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent event) {
 					m_serverStateManager.addMessageTotalLoss(CatConstants.ERROR_COUNT);
 
 					if (m_errorCount % (CatConstants.ERROR_COUNT * 100) == 0) {
-						m_logger.warn("The server can't process the tree! overflow : " + m_errorCount + ",current queue size:"
-						      + m_queue.size());
+						m_logger.warn("The server can't process the tree! overflow : " + m_errorCount
+						      + ",current queue size:" + m_queue.size());
 					}
 				}
 			} else {

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/FileSystemManager.java
Patch:
@@ -13,6 +13,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
 
 public class FileSystemManager implements Initializable {
@@ -116,7 +117,8 @@ public void initialize() throws InitializationException {
 				m_config = getHdfsConfiguration();
 				SecurityUtil.login(m_config, "dfs.cat.keytab.file", "dfs.cat.kerberos.principal");
 			} catch (IOException e) {
-				throw new InitializationException("init FileSystemManager fail", e);
+				Cat.logError(e);
+				//throw new InitializationException("init FileSystemManager fail", e);
 			}
 		} else {
 			m_config = new Configuration();

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Action.java
Patch:
@@ -1,7 +1,9 @@
 package com.dianping.cat.report.page.cache;
 
 public enum Action implements org.unidal.web.mvc.Action {
-	HISTORY_REPORT("history"), HOURLY_REPORT("view");
+	HISTORY_REPORT("history"), 
+	
+	HOURLY_REPORT("view");
 
 	public static Action getByName(String name, Action defaultAction) {
 		for (Action action : Action.values()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/CacheReport.java
Patch:
@@ -37,7 +37,6 @@ public class CacheReport {
 
 	public void addNewNameItem(TransactionName transactionName, EventName eventName) {
 		String key = transactionName.getId();
-
 		CacheNameItem item = m_nameItems.get(key);
 		CacheNameItem all = m_nameItems.get(ALL);
 
@@ -62,6 +61,7 @@ public void addNewNameItem(TransactionName transactionName, EventName eventName)
 	public void addNewTypeItem(TransactionType transactionType, EventType eventType) {
 		String key = transactionType.getId();
 		CacheTypeItem item = m_typeItems.get(key);
+		
 		if (item == null) {
 			item = new CacheTypeItem();
 			item.setType(transactionType);

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/JspFile.java
Patch:
@@ -1,7 +1,9 @@
 package com.dianping.cat.report.page.cache;
 
 public enum JspFile {
-	HISTORY_REPORT("/jsp/report/cacheHistory.jsp"), HOURLY_REPORT("/jsp/report/cache.jsp"),
+	HISTORY_REPORT("/jsp/report/cacheHistory.jsp"), 
+	
+	HOURLY_REPORT("/jsp/report/cache.jsp"),
 
 	;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/MergeAllName.java
Patch:
@@ -56,7 +56,7 @@ public void visitName(EventName name) {
 		m_merger.mergeName(temp, name);
 		
 		EventName all = m_report.findOrCreateMachine(m_currentIp).findOrCreateType(m_currentType)
-		      .findOrCreateName(CatString.ALL_NAME);
+		      .findOrCreateName(CatString.ALL);
 		m_merger.mergeName(all, name);
 
 		m_merger.mergeName(temp, name);
@@ -72,7 +72,7 @@ public void visitRange(Range range) {
 		m_merger.mergeRange(temp, range);
 		
 		Range all = m_report.findOrCreateMachine(m_currentIp).findOrCreateType(m_currentType)
-		      .findOrCreateName(CatString.ALL_NAME).findOrCreateRange(m_currentRange);
+		      .findOrCreateName(CatString.ALL).findOrCreateRange(m_currentRange);
 
 		m_merger.mergeRange(all, range);
 		super.visitRange(range);

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/HistoryGraphs.java
Patch:
@@ -240,6 +240,7 @@ else if (queryType.equalsIgnoreCase("system")) {
 			      .getJsonString());
 		} else if (queryType.equalsIgnoreCase("disk")) {
 			List<HistoryGraphItem> diskInfo = getDiskInfo(graphData, start, size);
+		
 			model.setDisks(diskInfo.size());
 			model.setDiskHistoryGraph(new Gson().toJson(diskInfo));
 		} else if (queryType.equalsIgnoreCase("cat")) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/database/CompositeDatabaseService.java
Patch:
@@ -27,7 +27,7 @@ protected DatabaseReport merge(ModelRequest request, List<ModelResponse<Database
 		DatabaseReportMerger merger = new DatabaseReportMerger(new DatabaseReport(request.getProperty("database")));
 		String domain = request.getDomain();
 
-		if (domain.equals(CatString.ALL_Domain)) {
+		if (domain.equals(CatString.ALL)) {
 			merger.setAllDomain(true);
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/EventReportMerger.java
Patch:
@@ -45,10 +45,10 @@ public void mergeRange(Range old, Range range) {
 	}
 
 	public Machine mergesForAllMachine(EventReport report) {
-		Machine machine = new Machine(CatString.ALL_IP);
+		Machine machine = new Machine(CatString.ALL);
 
 		for (Machine m : report.getMachines().values()) {
-			if (!m.getIp().equals(CatString.ALL_IP)) {
+			if (!m.getIp().equals(CatString.ALL)) {
 				visitMachineChildren(machine, m);
 			}
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/sql/CompositeSqlService.java
Patch:
@@ -26,7 +26,7 @@ protected SqlReport merge(ModelRequest request, List<ModelResponse<SqlReport>> r
 		}
 		SqlReportMerger merger = new SqlReportMerger(new SqlReport(request.getDomain()));
 		String datebase = request.getProperty("database");
-		if (CatString.ALL_Database.equals(datebase)) {
+		if (CatString.ALL.equals(datebase)) {
 			merger.setAllDatabase(true);
 		}
 		for (ModelResponse<SqlReport> response : responses) {

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/JspFile.java
Patch:
@@ -1,7 +1,9 @@
 package com.dianping.cat.report.page.sql;
 
 public enum JspFile {
-	HOURLY_REPORT("/jsp/report/sql.jsp"), HISTORY_REPORT("/jsp/report/sqlHistory.jsp");
+	HOURLY_REPORT("/jsp/report/sql.jsp"), 
+	
+	HISTORY_REPORT("/jsp/report/sqlHistory.jsp");
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/MergeAllName.java
Patch:
@@ -39,7 +39,7 @@ public void visitDuration(Duration duration) {
 		m_merger.mergeDuration(temp, duration);
 		
 		Duration all = m_report.findOrCreateMachine(m_currentIp).findOrCreateType(m_currentType)
-		      .findOrCreateName(CatString.ALL_NAME).findOrCreateDuration(m_currentDuration);
+		      .findOrCreateName(CatString.ALL).findOrCreateDuration(m_currentDuration);
 
 		m_merger.mergeDuration(all, duration);
 
@@ -62,7 +62,7 @@ public void visitName(TransactionName name) {
 		m_merger.mergeName(temp, name);
 		
 		TransactionName all = m_report.findOrCreateMachine(m_currentIp).findOrCreateType(m_currentType)
-		      .findOrCreateName(CatString.ALL_NAME);
+		      .findOrCreateName(CatString.ALL);
 		m_merger.mergeName(all, name);
 
 		m_merger.mergeName(temp, name);
@@ -78,7 +78,7 @@ public void visitRange(Range range) {
 		m_merger.mergeRange(temp, range);
 		
 		Range all = m_report.findOrCreateMachine(m_currentIp).findOrCreateType(m_currentType)
-		      .findOrCreateName(CatString.ALL_NAME).findOrCreateRange(m_currentRange);
+		      .findOrCreateName(CatString.ALL).findOrCreateRange(m_currentRange);
 
 		m_merger.mergeRange(all, range);
 		super.visitRange(range);

File: cat-home/src/main/java/com/dianping/cat/report/task/health/HealthServiceCollector.java
Patch:
@@ -74,7 +74,7 @@ public synchronized void buildCrossInfo(long time) {
 				ProjectInfo projectInfo = new ProjectInfo(TimeUtil.ONE_HOUR);
 
 				projectInfo.setDomainManager(m_domainManager);
-				projectInfo.setClientIp(CatString.ALL_IP);
+				projectInfo.setClientIp(CatString.ALL);
 				projectInfo.visitCrossReport(report);
 
 				Collection<TypeDetailInfo> calls = projectInfo.getCallProjectsInfo();

File: cat-home/src/main/java/com/dianping/cat/report/task/matrix/MatrixMerger.java
Patch:
@@ -36,7 +36,7 @@ public MatrixReport mergeForDaily(String reportDomain, List<Report> reports, Set
 		matrixReport.setStartTime(TaskHelper.todayZero(date));
 		matrixReport.setEndTime(end);
 
-		new MatrixReportFilter(500).visitMatrixReport(matrixReport);
+		new MatrixReportFilter().visitMatrixReport(matrixReport);
 		return matrixReport;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/AlarmRuleCreator.java
Patch:
@@ -50,7 +50,7 @@ public class AlarmRuleCreator implements Task {
 	private Set<String> getAllDomains() throws DalException {
 		String domain = CatString.CAT;
 		ModelRequest request = new ModelRequest(domain, ModelPeriod.CURRENT)//
-		      .setProperty("ip", CatString.ALL_IP);
+		      .setProperty("ip", CatString.ALL);
 
 		if (m_service.isEligable(request)) {
 			ModelResponse<EventReport> response = m_service.invoke(request);

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ServiceDataListener.java
Patch:
@@ -52,7 +52,8 @@ public void onEvent(Event event) {
 				try {
 					ThresholdAlertEvent alertEvent = new ThresholdAlertEvent(alarmMeta);
 
-					Cat.getProducer().logEvent("ServiceAlarm", "Domain", Message.SUCCESS, alarmMeta.getRuleId() + "");
+					Cat.getProducer().logEvent("ServiceAlarm", "Domain", Message.SUCCESS,
+					      String.valueOf(alarmMeta.getRuleId()));
 					m_dispatcher.dispatch(alertEvent);
 					t.setStatus(Transaction.SUCCESS);
 					t.setStatus("Alarm");

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/template/ThresholdAlarmMeta.java
Patch:
@@ -89,8 +89,8 @@ public ThresholdAlarmMeta setType(String type) {
 
 	@Override
 	public String toString() {
-		return "ThresholdAlarmMeta [m_baseUrl=" + m_baseUrl + ", m_date=" + m_date + ", m_domain=" + m_domain
-		      + ", m_duration=" + m_duration + ", m_realCount=" + m_realCount + ", m_ruleId=" + m_ruleId + ", m_type="
+		return "ThresholdAlarmMeta [baseUrl=" + m_baseUrl + ", date=" + m_date + ", domain=" + m_domain
+		      + ", duration=" + m_duration + ", realCount=" + m_realCount + ", ruleId=" + m_ruleId + ", type="
 		      + m_type + "]";
 	}
 

File: cat-home/src/main/java/com/dianping/cat/system/notify/render/TransactionRender.java
Patch:
@@ -91,7 +91,7 @@ public void visitTransactionReport(TransactionReport transactionReport) {
 
 	@Override
 	public void visitType(TransactionType type) {
-		if (m_currentIp.equals(CatString.ALL_IP)) {
+		if (m_currentIp.equals(CatString.ALL)) {
 			Type temp = new Type();
 
 			type.setTps(type.getTotalCount() * 1000d / TimeUtil.ONE_DAY / m_totalDays);

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/RuleManager.java
Patch:
@@ -117,6 +117,7 @@ public List<String> queryUserMailsByRuleId(int alarmRuleId) {
 					DpAdminLogin entity = m_dpAdminLoginDao.findByPK(userId, DpAdminLoginEntity.READSET_FULL);
 					mails.add(entity.getEmail());
 				} catch (Exception e) {
+					Cat.logError(e);
 				}
 			}
 		} catch (DalNotFoundException e) {
@@ -140,6 +141,7 @@ public List<String> queryUserPhonesByRuleId(int alarmRuleId) {
 					DpAdminLogin entity = m_dpAdminLoginDao.findByPK(userId, DpAdminLoginEntity.READSET_FULL);
 					phones.add(entity.getMobileNo());
 				} catch (Exception e) {
+					Cat.logError(e);
 				}
 			}
 		} catch (DalNotFoundException e) {
@@ -220,7 +222,7 @@ public void ruleUpdate(Payload payload, Model model) {
 		try {
 			AlarmRule alarmRule = m_alarmRuleDao.findByPK(id, AlarmRuleEntity.READSET_FULL);
 			model.setAlarmRule(alarmRule);
-			
+
 			int templatedId = alarmRule.getTemplateId();
 			AlarmTemplate template = m_alarmTemplateDao.findByPK(templatedId, AlarmTemplateEntity.READSET_FULL);
 			model.setAlarmTemplate(template);

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/ScheduledManager.java
Patch:
@@ -41,6 +41,7 @@ public List<String> queryEmailsBySchReportId(int scheduledReportId) throws DalEx
 				DpAdminLogin login = m_loginDao.findByPK(subscription.getUserId(), DpAdminLoginEntity.READSET_FULL);
 				emails.add(login.getEmail());
 			} catch (Exception e) {
+				Cat.logError(e);
 			}
 		}
 		return emails;

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/ArchMonthAnalyzer.java
Patch:
@@ -92,7 +92,7 @@ private void processOneDay(Date date, Set<String> domains) {
 				      DailyreportEntity.READSET_FULL);
 
 				TransactionReport transactionReport = DefaultSaxParser.parse(report.getContent());
-				Machine machine = transactionReport.findOrCreateMachine(CatString.ALL_IP);
+				Machine machine = transactionReport.findOrCreateMachine(CatString.ALL);
 
 				Indicator indicator = indicators.get(date.getTime());
 				if (indicator == null) {

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/ArchTransactionAnalyzer.java
Patch:
@@ -98,7 +98,7 @@ private void processOneDomain(Date start, Date end, String domain) {
 				      DailyreportEntity.READSET_FULL);
 				TransactionReport report = DefaultSaxParser.parse(dailyreport.getContent());
 
-				info.reset(report.findMachine(CatString.ALL_IP));
+				info.reset(report.findMachine(CatString.ALL));
 			} catch (DalNotFoundException e) {
 			} catch (Exception e) {
 				e.printStackTrace();

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/ArchYearAnalyzer.java
Patch:
@@ -108,7 +108,7 @@ public Indicator(String date) {
 		}
 
 		public void accept(TransactionReport report) {
-			Machine machine = report.findOrCreateMachine(CatString.ALL_IP);
+			Machine machine = report.findOrCreateMachine(CatString.ALL);
 			Collection<TransactionType> types = machine.getTypes().values();
 			for (TransactionType type : types) {
 				String name = type.getId();

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/CatMonthAnalyzer.java
Patch:
@@ -55,7 +55,7 @@ public void test() {
 					TransactionReport report = com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser
 					      .parse(dailyreport.getContent());
 
-					Machine machine = report.findOrCreateMachine(CatString.ALL_IP);
+					Machine machine = report.findOrCreateMachine(CatString.ALL);
 					
 					TransactionType type =machine.findOrCreateType("URL");
 					

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/TuanGouMonthAnalyzer.java
Patch:
@@ -332,7 +332,7 @@ public void build() throws Exception{
 		TransactionReport transactionReport = meger.getTransactionReport();
 		System.out.println(transactionReport);
 		
-		Machine machine = transactionReport.findMachine(CatString.ALL_IP);
+		Machine machine = transactionReport.findMachine(CatString.ALL);
 		TransactionType type = machine.getTypes().get("URL");
 		
 		for(TransactionName name :type.getNames().values()){

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/TransactionAnalyzer.java
Patch:
@@ -242,7 +242,7 @@ int processTransaction(TransactionReport report, MessageTree tree, Transaction t
 		// update statistics
 		double duration = t.getDurationInMicros() / 1000d;
 		// make all duration numbers less
-		Integer allDuration = new Integer((int) duration * 4 / 4);
+		Integer allDuration = new Integer(((int) duration) / 4 * 4);
 
 		name.setMax(Math.max(name.getMax(), duration));
 		name.setMin(Math.min(name.getMin(), duration));

File: cat-consumer/src/main/java/com/dianping/cat/consumer/core/problem/DefaultProblemHandler.java
Patch:
@@ -17,7 +17,7 @@
 
 public class DefaultProblemHandler extends ProblemHandler {
 	public static final String ID = "default-problem";
-	
+
 	@Inject
 	private Set<String> m_errorTypes;
 
@@ -66,8 +66,8 @@ private int processTransaction(Machine machine, Transaction transaction, Message
 
 			if (m_failureTypes.contains(type)) {
 				type = transaction.getType();
-				//make it march for alarm
-				if (type.equals("PigeonCall")) {
+				// make it march for alarm
+				if (type.equals("PigeonCall") || type.equals("Call")) {
 					type = "call";
 				}
 				status = transaction.getName();

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/HistoryGraphs.java
Patch:
@@ -240,6 +240,7 @@ else if (queryType.equalsIgnoreCase("system")) {
 			      .getJsonString());
 		} else if (queryType.equalsIgnoreCase("disk")) {
 			List<HistoryGraphItem> diskInfo = getDiskInfo(graphData, start, size);
+		
 			model.setDisks(diskInfo.size());
 			model.setDiskHistoryGraph(new Gson().toJson(diskInfo));
 		} else if (queryType.equalsIgnoreCase("cat")) {

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -100,7 +100,7 @@ protected Message decodeLine(ChannelBuffer buf, DefaultTransaction parent, Stack
 		BufferHelper helper = m_bufferHelper;
 		byte identifier = buf.readByte();
 		String timestamp = helper.read(buf, TAB);
-		String type = helper.read(buf, TAB);
+		String type = helper.readRaw(buf, TAB);
 		String name = helper.readRaw(buf, TAB);
 
 		if (identifier == 't') {
@@ -285,7 +285,7 @@ protected int encodeLine(Message message, ChannelBuffer buf, char type, Policy p
 		}
 
 		count += helper.write(buf, TAB);
-		count += helper.write(buf, message.getType());
+		count += helper.writeRaw(buf, message.getType());
 		count += helper.write(buf, TAB);
 		count += helper.writeRaw(buf, message.getName());
 		count += helper.write(buf, TAB);

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/DomainManager.java
Patch:
@@ -43,6 +43,8 @@ public class DomainManager implements Initializable, LogEnabled {
 
 	private Logger m_logger;
 
+	private static final String UNKNOWN_IP = "UnknownIp";
+
 	private static final String UNKNOWN_PROJECT = "UnknownProject";
 
 	private static final String CMDB_URL = "http://cmdb.dp/cmdb/device/s?q=%s&fl=app&tidy=true";
@@ -70,7 +72,7 @@ public String getDomainByIp(String ip) {
 	public void initialize() throws InitializationException {
 		if (!m_manager.isLocalMode()) {
 			try {
-				m_ipDomains.put("UnknownIp", "UnknownProject");
+				m_ipDomains.put(UNKNOWN_IP, UNKNOWN_PROJECT);
 
 				List<Hostinfo> infos = m_hostInfoDao.findAllIp(HostinfoEntity.READSET_FULL);
 				for (Hostinfo info : infos) {

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/RuleManager.java
Patch:
@@ -117,6 +117,7 @@ public List<String> queryUserMailsByRuleId(int alarmRuleId) {
 					DpAdminLogin entity = m_dpAdminLoginDao.findByPK(userId, DpAdminLoginEntity.READSET_FULL);
 					mails.add(entity.getEmail());
 				} catch (Exception e) {
+					Cat.logError(e);
 				}
 			}
 		} catch (DalNotFoundException e) {
@@ -140,6 +141,7 @@ public List<String> queryUserPhonesByRuleId(int alarmRuleId) {
 					DpAdminLogin entity = m_dpAdminLoginDao.findByPK(userId, DpAdminLoginEntity.READSET_FULL);
 					phones.add(entity.getMobileNo());
 				} catch (Exception e) {
+					Cat.logError(e);
 				}
 			}
 		} catch (DalNotFoundException e) {
@@ -220,7 +222,7 @@ public void ruleUpdate(Payload payload, Model model) {
 		try {
 			AlarmRule alarmRule = m_alarmRuleDao.findByPK(id, AlarmRuleEntity.READSET_FULL);
 			model.setAlarmRule(alarmRule);
-			
+
 			int templatedId = alarmRule.getTemplateId();
 			AlarmTemplate template = m_alarmTemplateDao.findByPK(templatedId, AlarmTemplateEntity.READSET_FULL);
 			model.setAlarmTemplate(template);

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/FileSystemManager.java
Patch:
@@ -13,6 +13,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
 
 public class FileSystemManager implements Initializable {
@@ -116,7 +117,8 @@ public void initialize() throws InitializationException {
 				m_config = getHdfsConfiguration();
 				SecurityUtil.login(m_config, "dfs.cat.keytab.file", "dfs.cat.kerberos.principal");
 			} catch (IOException e) {
-				throw new InitializationException("init FileSystemManager fail", e);
+				Cat.logError(e);
+				//throw new InitializationException("init FileSystemManager fail", e);
 			}
 		} else {
 			m_config = new Configuration();

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/ThresholdRuleManager.java
Patch:
@@ -53,7 +53,6 @@ public class ThresholdRuleManager implements Initializable {
 	private ThresholdRule addExceptionRule(AlarmRule rule, ThresholdTemplate template) {
 		String domain = rule.getDomain();
 		ThresholdRule thresholdRule = new ThresholdRule(rule.getId(), domain, template);
-
 		ArrayList<ThresholdRule> rules = m_exceptionRules.get(domain);
 
 		if (rules == null) {
@@ -70,7 +69,6 @@ private ThresholdRule addExceptionRule(AlarmRule rule, ThresholdTemplate templat
 	private ThresholdRule addServiceRule(AlarmRule rule, ThresholdTemplate template) {
 		String domain = rule.getDomain();
 		ThresholdRule thresholdRule = new ThresholdRule(rule.getId(), domain, template);
-
 		ArrayList<ThresholdRule> rules = m_serviceRules.get(domain);
 
 		if (rules == null) {

File: cat-core/src/main/java/com/dianping/cat/configuration/ClientConfigReloader.java
Patch:
@@ -103,7 +103,7 @@ public void run() {
 							}
 						}
 					}
-				} catch (Exception e) {
+				} catch (Throwable e) {
 					e.printStackTrace();
 				}
 				Thread.sleep(2000L);

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -406,7 +406,7 @@ public MessageGzip(BlockingQueue<MessageItem> messageQueue, int index) {
 		@Override
 		public void run() {
 			try {
-				while (true) {
+				while (true) { 
 					MessageItem item = m_messageQueue.poll(5, TimeUnit.MILLISECONDS);
 
 					if (item != null) {
@@ -459,7 +459,7 @@ private void gzipMessage(MessageItem item, boolean monitor) {
 				if (t != null) {
 					t.setStatus(Message.SUCCESS);
 				}
-			} catch (Exception e) {
+			} catch (Throwable e) {
 				Cat.logError(e);
 				if (t != null) {
 					t.setStatus(e);

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -63,10 +63,11 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		String channel = payload.getChannel();
 
 		if (report != null) {
-			MetricDisplay display = new MetricDisplay(buildTuanGouMetricConfig(channel),channel, report.getStartTime());
+			MetricDisplay display = new MetricDisplay(buildTuanGouMetricConfig(channel), channel, report.getStartTime());
 
 			display.visitMetricReport(report);
 			model.setDisplay(display);
+			model.setChannels(display.getAllChannel());
 			model.setReport(report);
 		}
 		m_jspViewer.view(ctx, model);

File: cat-home/src/main/java/com/dianping/cat/system/alarm/AlarmTask.java
Patch:
@@ -47,7 +47,7 @@ public void run() {
 			try {
 				processExceptionRule();
 				processServiceRule();
-			} catch (Exception e) {
+			} catch (Throwable e) {
 				Cat.logError(e);
 			}
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/alert/AlertManager.java
Patch:
@@ -121,7 +121,7 @@ public void run() {
 							active = false;
 						}
 					}
-				} catch (Exception e) {
+				} catch (Throwable e) {
 					Cat.logError(e);
 				}
 			}

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -153,7 +153,7 @@ public void run() {
 				} else {
 					Cat.getProducer().logEvent("ScheduledReport", "SendNot", Event.SUCCESS, null);
 				}
-			} catch (Exception e) {
+			} catch (Throwable e) {
 				Cat.logError(e);
 			}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -63,10 +63,11 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		String channel = payload.getChannel();
 
 		if (report != null) {
-			MetricDisplay display = new MetricDisplay(buildTuanGouMetricConfig(channel),channel, report.getStartTime());
+			MetricDisplay display = new MetricDisplay(buildTuanGouMetricConfig(channel), channel, report.getStartTime());
 
 			display.visitMetricReport(report);
 			model.setDisplay(display);
+			model.setChannels(display.getAllChannel());
 			model.setReport(report);
 		}
 		m_jspViewer.view(ctx, model);

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -100,7 +100,7 @@ protected Message decodeLine(ChannelBuffer buf, DefaultTransaction parent, Stack
 		BufferHelper helper = m_bufferHelper;
 		byte identifier = buf.readByte();
 		String timestamp = helper.read(buf, TAB);
-		String type = helper.read(buf, TAB);
+		String type = helper.readRaw(buf, TAB);
 		String name = helper.readRaw(buf, TAB);
 
 		if (identifier == 't') {
@@ -285,7 +285,7 @@ protected int encodeLine(Message message, ChannelBuffer buf, char type, Policy p
 		}
 
 		count += helper.write(buf, TAB);
-		count += helper.write(buf, message.getType());
+		count += helper.writeRaw(buf, message.getType());
 		count += helper.write(buf, TAB);
 		count += helper.writeRaw(buf, message.getName());
 		count += helper.write(buf, TAB);

File: cat-home/src/main/java/com/dianping/cat/report/page/metric/Handler.java
Patch:
@@ -103,6 +103,7 @@ private void normalize(Model model, Payload payload) {
 		model.setLongDate(payload.getDate());
 		model.setDisplayDomain(payload.getDomain());
 		model.setDomain(payload.getDomain());
+		model.setGroup(payload.getGroup());
 	}
 
 	public class MetricTitle {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/handler/DefaultProblemHandler.java
Patch:
@@ -63,7 +63,7 @@ private int processTransaction(Machine machine, Transaction transaction, Message
 			String status = "";
 
 			if (m_failureTypes.contains(type)) {
-				type = transaction.getType().toLowerCase();
+				type = transaction.getType();
 				//make it march for alarm
 				if (type.equals("PigeonCall")) {
 					type = "call";

File: cat-core/src/main/java/com/dianping/cat/message/io/DefaultTransportManager.java
Patch:
@@ -49,7 +49,7 @@ public void initialize() throws InitializationException {
 			}
 
 			m_logger.info("Remote CAT servers: " + addresses);
-
+			
 			if (addresses.isEmpty()) {
 				throw new RuntimeException("All servers in configuration are disabled!\r\n" + servers);
 			} else if (addresses.size() == 1) {

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -241,7 +241,7 @@ public Direction matches(File base, String path) {
 
 		if (paths.size() > 0) {
 			String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
-			Transaction t = Cat.newTransaction("System", "Dump" + "-" + ip);
+			Transaction t = Cat.newTransaction("System", "Move" + "-" + ip);
 			t.setStatus(Message.SUCCESS);
 
 			for (String path : paths) {
@@ -254,7 +254,7 @@ public Direction matches(File base, String path) {
 						bucket.close();
 						bucket.archive();
 
-						Cat.getProducer().logEvent("Dump", "Outbox.Normal", Message.SUCCESS, loginfo);
+						Cat.getProducer().logEvent("Move", "Outbox.Normal", Message.SUCCESS, loginfo);
 					} catch (Exception e) {
 						t.setStatus(e);
 						Cat.logError(e);
@@ -268,7 +268,7 @@ public Direction matches(File base, String path) {
 						moveFile(path);
 						moveFile(path + ".idx");
 
-						Cat.getProducer().logEvent("Dump", "Outbox.Abnormal", Message.SUCCESS, loginfo);
+						Cat.getProducer().logEvent("Move", "Outbox.Abnormal", Message.SUCCESS, loginfo);
 					} catch (Exception e) {
 						t.setStatus(e);
 						Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ServiceDataListener.java
Patch:
@@ -55,6 +55,7 @@ public void onEvent(Event event) {
 					Cat.getProducer().logEvent("ServiceAlarm", "Domain", Message.SUCCESS, alarmMeta.getRuleId() + "");
 					m_dispatcher.dispatch(alertEvent);
 					t.setStatus(Transaction.SUCCESS);
+					t.setStatus("Alarm");
 				} catch (Exception e) {
 					t.setStatus(e);
 				} finally {

File: cat-home/src/main/java/com/dianping/cat/system/tool/MailSMSImpl.java
Patch:
@@ -65,6 +65,7 @@ public boolean sendEmail(String title, String content, List<String> emails) {
 					try {
 						m_mailService.send(DEFAULT_EMAIL_TYPE, mail, title, content);
 						sendResult = true;
+						m_logger.info("CAT send email to! " + mail + " title:" + title);
 					} catch (Exception e) {
 						Cat.logError(e);
 					}

File: cat-home/src/test/java/com/dianping/cat/demo/TestMaxMessage.java
Patch:
@@ -14,14 +14,15 @@ public class TestMaxMessage {
 
 	@Test
 	public void testSend() throws Exception {
-		for (int i = 0; i < 100; i++) {
+		for (int i = 0; i < 10000; i++) {
 			Transaction t = Cat.getProducer().newTransaction("CatTest", "CatTest" + i % 10);
 			t.setStatus(Message.SUCCESS);
 			Cat.getProducer().newEvent("Cache.kvdb", "Method" + i % 10 + ":missed");
+			Cat.logError(new NullPointerException());
 			t.addData("key and value");
 			t.complete();
 		}
-		Thread.sleep(10 * 100);
+		Thread.sleep(10 * 1000);
 	}
 
 	@Test

File: cat-home/src/test/java/com/dianping/cat/demo/TestSendMessage.java
Patch:
@@ -11,7 +11,7 @@ public class TestSendMessage {
 
 	@Test
 	public void sendException() throws Exception {
-		for (int i = 0; i < 100; i++) {
+		for (int i = 0; i < 10; i++) {
 			Cat.getProducer().logError(new OutOfMemoryError());
 			Cat.getProducer().logError(new NullPointerException());
 		}

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContextManager.java
Patch:
@@ -1,6 +1,7 @@
 package com.dianping.cat.abtest.spi.internal;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -67,6 +68,7 @@ public List<ABTestContext> getContexts() {
 
 			List<ABTestEntity> entities = m_entityManager.getEntityList();
 			Map<Integer, DefaultABTestContext> ctxMap = m_threadLocal.get().getContextMap();
+			Date now = new Date();
 
 			for (ABTestEntity entity : entities) {
 				Entry entry = m_threadLocal.get();
@@ -79,7 +81,7 @@ public List<ABTestContext> getContexts() {
 					ctxMap.put(id, ctx);
 				}
 
-				ctx.getGroupName();// Make sure GroupName is calculated (if GroupName is null, this will trigger GroupName to be calculated)
+				ctx.initialize(now);
 				ctxList.add(ctx);
 			}
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -49,7 +49,7 @@
 
 com.dianping.cat.report.page.metric.Handler.class,
 
-com.dianping.cat.report.page.pushError.Handler.class
+com.dianping.cat.report.page.jsError.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -47,7 +47,7 @@ public enum ReportPage implements Page {
 
    METRIC("metric", "metric", "Metric", "Metric", true),
 
-   PUSHERROR("pushError", "pushError", "PushError", "PushError", true);
+   JSERROR("jsError", "jsError", "JsError", "jsError", true);
 
    private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Action.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 public enum Action implements org.unidal.web.mvc.Action {
 	VIEW("view");

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Context.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 import com.dianping.cat.report.ReportContext;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/JspFile.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 public enum JspFile {
-	VIEW("/jsp/report/pushError.jsp"),
+	VIEW("/jsp/report/jsError.jsp"),
 
 	;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/JspViewer.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Model.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ViewModel;

File: cat-home/src/main/java/com/dianping/cat/report/page/jsError/Payload.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ActionContext;
@@ -45,7 +45,7 @@ public ReportPage getPage() {
 
    @Override
    public void setPage(String page) {
-      m_page = ReportPage.getByName(page, ReportPage.PUSHERROR);
+      m_page = ReportPage.getByName(page, ReportPage.JSERROR);
    }
    
    public long getTimestamp() {

File: cat-home/src/test/java/com/dianping/cat/report/page/jsError/JsTest.java
Patch:
@@ -1,12 +1,12 @@
-package com.dianping.cat.report.page.pushError;
+package com.dianping.cat.report.page.jsError;
 
 import java.net.HttpURLConnection;
 import java.net.URL;
 import java.net.URLConnection;
 
 import org.junit.Test;
 
-public class PushErrorTest {
+public class JsTest {
 
 	@Test
 	public void test() throws Exception {
@@ -25,7 +25,7 @@ public void test() throws Exception {
 
 	private String buildUrl() {
 		StringBuilder sb = new StringBuilder(128);
-		sb.append("http://127.0.0.1:2281/cat/r/pushError?");
+		sb.append("http://127.0.0.1:2281/cat/r/jsError?");
 		sb.append("error=testError1");
 		sb.append("&host=t.dianping.com");
 		sb.append("&file=testFile");

File: cat-core/src/main/java/com/dianping/cat/abtest/spi/internal/DefaultABTestContext.java
Patch:
@@ -30,7 +30,7 @@ public DefaultABTestContext(ABTestEntity entity) {
 	public String getGroupName() {
 		if (m_entity.isEligible(new Date())) {
 			if (!m_applied) {
-				Transaction t = Cat.newTransaction("GroupStrategy", m_entity.getGroupStrategy());
+				Transaction t = Cat.newTransaction("GroupStrategy", m_entity.getGroupStrategyName());
 
 				try {
 					m_groupStrategy.apply(this);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.util.Collections;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
@@ -56,7 +57,9 @@ public void doCheckpoint(boolean atEnd) {
 			@Override
 			public void run() {
 				try {
+					m_logger.info("Dump analyer starting archive!" + new Date(m_startTime));
 					m_bucketManager.archive(m_startTime);
+					m_logger.info("Dump analyer end archive!");
 				} catch (Exception e) {
 					Cat.logError(e);
 				}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/DumpAnalyzerTest.java
Patch:
@@ -18,11 +18,9 @@ public class DumpAnalyzerTest extends ComponentTestCase {
 	public void test() throws Exception {
 		AnalyzerFactory factory = lookup(AnalyzerFactory.class);
 		long now = 1334041324150L;
-		DefaultMessageQueue queue = new DefaultMessageQueue();
 		int num = 1000000;
+		DefaultMessageQueue queue = new DefaultMessageQueue(num);
 
-		queue.setSize(num);
-		queue.initialize();
 
 		for (int i = 0; i < num; i++) {
 			queue.offer(newMessageTree(i, now + i * 10L));

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketHierarchySender.java
Patch:
@@ -35,12 +35,11 @@ public class TcpSocketHierarchySender implements Task, MessageSender, LogEnabled
 	@Inject
 	private MessageCodec m_codec;
 
-	@Inject
-	private MessageQueue m_queue;
-
 	@Inject
 	private MessageStatistics m_statistics;
 
+	private MessageQueue m_queue = new DefaultMessageQueue(10000);
+
 	private List<InetSocketAddress> m_serverAddresses;
 
 	private ChannelManager m_manager;

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucket.java
Patch:
@@ -121,7 +121,7 @@ protected MessageBlock flushBlock() throws IOException {
 		boolean b = m_dirty.get();
 
 		if (b) {
-			synchronized (this) {
+			synchronized (m_out) {
 				m_out.close();
 				byte[] data = m_buf.toByteArray();
 

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketTest.java
Patch:
@@ -21,7 +21,7 @@
 import com.dianping.cat.message.spi.codec.EscapingBufferWriter;
 import com.dianping.cat.message.spi.codec.PlainTextMessageCodec;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
-
+      
 @RunWith(JUnit4.class)
 @Ignore
 public class LocalMessageBucketTest extends ComponentTestCase {

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -47,7 +47,9 @@
 
 com.dianping.cat.report.page.top.Handler.class,
 
-com.dianping.cat.report.page.metric.Handler.class
+com.dianping.cat.report.page.metric.Handler.class,
+
+com.dianping.cat.report.page.pushError.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -45,7 +45,9 @@ public enum ReportPage implements Page {
 
    TOP("top", "top", "Top", "Top", true),
 
-   METRIC("metric", "metric", "Metric", "Metric", true);
+   METRIC("metric", "metric", "Metric", "Metric", true),
+
+   PUSHERROR("pushError", "pushError", "PushError", "PushError", true);
 
    private String m_name;
 

File: cat-job/src/main/java/com/dianping/cat/job/joblet/ConversionJoblet.java
Patch:
@@ -57,8 +57,7 @@ public void map(JobletContext context, MessageTreeWritable treeWritable) throws
 
 		try {
 			tree.setMessageId(m_factory.getNextId());
-			MessageId id = MessageId.parse(tree.getMessageId());
-			m_bucket.store(tree, id);
+			MessageId.parse(tree.getMessageId());
 		} catch (Exception e) {
 			System.out.println(e);
 		}

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -47,7 +47,9 @@
 
 com.dianping.cat.report.page.top.Handler.class,
 
-com.dianping.cat.report.page.metric.Handler.class
+com.dianping.cat.report.page.metric.Handler.class,
+
+com.dianping.cat.report.page.pushError.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -45,7 +45,9 @@ public enum ReportPage implements Page {
 
    TOP("top", "top", "Top", "Top", true),
 
-   METRIC("metric", "metric", "Metric", "Metric", true);
+   METRIC("metric", "metric", "Metric", "Metric", true),
+
+   PUSHERROR("pushError", "pushError", "PushError", "PushError", true);
 
    private String m_name;
 

File: cat-job/src/main/java/com/dianping/cat/job/joblet/ConversionJoblet.java
Patch:
@@ -57,8 +57,7 @@ public void map(JobletContext context, MessageTreeWritable treeWritable) throws
 
 		try {
 			tree.setMessageId(m_factory.getNextId());
-			MessageId id = MessageId.parse(tree.getMessageId());
-			m_bucket.store(tree, id);
+			MessageId.parse(tree.getMessageId());
 		} catch (Exception e) {
 			System.out.println(e);
 		}

File: cat-core/src/main/java/com/dianping/cat/storage/dump/MessageBucket.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.io.IOException;
 
-import com.dianping.cat.message.internal.MessageId;
 import com.dianping.cat.message.spi.MessageTree;
 
 public interface MessageBucket {
@@ -16,5 +15,4 @@ public interface MessageBucket {
 
 	public void initialize(String dataFile) throws IOException;
 
-	public MessageBlock store(MessageTree tree, MessageId id) throws IOException;
 }

File: cat-core/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -180,6 +180,9 @@ public static void reset() {
 	public static void setup(String sessionToken) {
 		MessageManager manager = s_instance.m_manager;
 
+		if (manager == null) {
+			Cat.getProducer();
+		}
 		manager.setup();
 		manager.getThreadLocalMessageTree().setSessionToken(sessionToken);
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/handler/Handler.java
Patch:
@@ -15,14 +15,16 @@ public abstract class Handler {
 
 	public abstract int handle(Machine machine, MessageTree tree);
 
-	protected Entry findOrCreatEntry(Machine machine, String type, String status) {
+	// TODO fix performance issue
+	protected Entry findOrCreateEntry(Machine machine, String type, String status) {
 		List<Entry> entries = machine.getEntries();
 
 		for (Entry entry : entries) {
 			if (entry.getType().equals(type) && entry.getStatus().equals(status)) {
 				return entry;
 			}
 		}
+
 		Entry entry = new Entry();
 
 		entry.setStatus(status);

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/TransactionPerformanceTest.java
Patch:
@@ -17,7 +17,7 @@ public void test() {
 
 		long current = System.currentTimeMillis();
 
-		long size = 100000000;
+		long size = 10000000000l;
 		for (int i = 0; i < size; i++) {
 			analyzer.process(tree);
 		}

File: cat-core/src/main/java/com/dianping/cat/message/internal/MockMessageBuilder.java
Patch:
@@ -164,7 +164,7 @@ public void setTimestampInMicros(long timestampInMicros) {
 		}
 	}
 
-	protected static class EventHolder extends AbstractMessageHolder {
+	public static class EventHolder extends AbstractMessageHolder {
 		private DefaultEvent m_event;
 
 		public EventHolder(String type, String name) {

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemGraphCreator.java
Patch:
@@ -39,7 +39,7 @@ public List<Graph> splitReportToGraphs(Date reportPeriod, String reportDomain, S
 			graph.setName(reportName);
 			graph.setPeriod(reportPeriod);
 			graph.setType(3);
-			com.dianping.cat.consumer.problem.model.entity.Machine machine = report.getMachines().get(ip);
+			com.dianping.cat.consumer.problem.model.entity.Machine machine = report.findOrCreateMachine(ip);
 
 			for (com.dianping.cat.consumer.problem.model.entity.Entry entry : machine.getEntries()) {
 				Map<String, JavaThread> threads = entry.getThreads();

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/CrossPerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.cross.CrossAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class CrossPerformanceTest extends CatTestCase {
+public class CrossPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/DatabasePerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.database.DatabaseAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class DatabasePerformanceTest extends CatTestCase {
+public class DatabasePerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/EventPerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.event.EventAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class EventPerformanceTest extends CatTestCase {
+public class EventPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/MatrixPerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.matrix.MatrixAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class MatrixPerformanceTest extends CatTestCase {
+public class MatrixPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/MetricPerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.metric.MetricAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class MetricPerformanceTest extends CatTestCase {
+public class MetricPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/ProblemPerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.problem.ProblemAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class ProblemPerformanceTest extends CatTestCase {
+public class ProblemPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/performance/SqlPerformanceTest.java
Patch:
@@ -1,15 +1,15 @@
 package com.dianping.cat.consumer.performance;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.consumer.sql.SqlAnalyzer;
-import com.dianping.cat.message.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.internal.MockMessageBuilder;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.message.spi.internal.DefaultMessageTree;
 
-public class SqlPerformanceTest extends CatTestCase {
+public class SqlPerformanceTest extends ComponentTestCase {
 
 	@Test
 	public void test() throws Exception {

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketReceiver.java
Patch:
@@ -64,7 +64,7 @@ public class TcpSocketReceiver implements LogEnabled {
 
 	private BlockingQueue<ChannelBuffer> m_queue;
 
-	private int m_queueSize = 100000;
+	private int m_queueSize = 500000;
 
 	private int m_errorCount;
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/metric/MetricDaoTest.java
Patch:
@@ -79,6 +79,6 @@ public void test2() throws Exception {
 		report.setCreationDate(new Date());
 
 		m_reportDao.insert(report);
-
 	}
+	
 }

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/HourlyReportServiceImpl.java
Patch:
@@ -457,7 +457,7 @@ public MetricReport queryMetricReport(String group, Date start, Date end) {
 
 				try {
 					MetricReport reportModel = DefaultNativeParser.parse(content);
-					
+					System.out.println(reportModel);
 					reportModel.accept(merger);
 				} catch (Exception e) {
 					Cat.logError(e);

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/ReportServiceImpl.java
Patch:
@@ -421,7 +421,7 @@ public MetricReport queryMetricReport(String group, Date start, Date end) {
 		if (type == s_hourly) {
 			return m_hourlyReportService.queryMetricReport(group, start, end);
 		} else {
-			throw new RuntimeException("unexcepted query type");
+			throw new RuntimeException("unexcepted query type in metric report!");
 		}
 	}
 }

File: cat-home/src/test/java/com/dianping/cat/demo/TestBusinessMessage.java
Patch:
@@ -14,6 +14,7 @@ public void test() throws Exception{
 			for (int i = 0; i < 1000; i++) {
 				Transaction t = Cat.newTransaction("URL", "/index");
 				Cat.logMetric("order", "quantity" , i);
+				
 				t.complete();
 			}
 			for (int i = 0; i < 1000; i++) {
@@ -23,7 +24,7 @@ public void test() throws Exception{
 				t.complete();
 			}
 			for (int i = 0; i < 1000; i++) {
-				Transaction t = Cat.newTransaction("URL", "/pay");
+				Transaction t = Cat.newTransaction("URL", "/order/submitOrder");
 				Cat.logMetric("payment.success", "amount" , i);
 				
 				t.complete();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/CatDatabaseConfigurator.java
Patch:
@@ -11,7 +11,6 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceConfigurationManagerComponent("datasources.xml"));
       all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.7.43:3306/cat", "dpcom_cat", "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
       defineSimpleTableProviderComponents(all, "cat", com.dainping.cat.consumer.dal.report._INDEX.getEntityClasses());

File: cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java
Patch:
@@ -11,7 +11,7 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://127.0.0.1:3306/cat", "root", "", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
+      all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://127.0.0.1:3306/cat", "root", "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
       defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.report._INDEX.getEntityClasses());
       defineDaoComponents(all, com.dianping.cat.home.dal.report._INDEX.getDaoClasses());

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -261,7 +261,7 @@ int processTransaction(TransactionReport report, MessageTree tree, Transaction t
 		type.findOrCreateAllDuration(allDuration).incCount();
 
 		double d = t.getDurationInMicros() / 1000d;
-		long current = System.currentTimeMillis() / 1000 / 60;
+		long current = t.getTimestamp() / 1000 / 60;
 		int min = (int) (current % (60));
 
 		processNameGraph(t, name, min, d);

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Handler.java
Patch:
@@ -90,11 +90,11 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			break;
 		case GRAPH:
 			report = getHourlyReport(payload);
-			item = m_stateGraphs.buildHistoryGraph(report,payload.getDomain(), payload.getHistoryStartDate(),
+			item = m_stateGraphs.buildGraph(report,payload.getDomain(), payload.getHistoryStartDate(),
 			      payload.getHistoryEndDate(), "graph", key, payload.getIpAddress());
 			break;
 		case HISTORY_GRAPH:
-			item = m_stateGraphs.buildHistoryGraph(null,payload.getDomain(), payload.getHistoryStartDate(),
+			item = m_stateGraphs.buildGraph(null,payload.getDomain(), payload.getHistoryStartDate(),
 			      payload.getHistoryEndDate(), "historyGraph", key, payload.getIpAddress());
 			break;
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateGraphs.java
Patch:
@@ -18,7 +18,7 @@ public class StateGraphs {
 	@Inject
 	private ReportService m_reportService;
 
-	public HistoryGraphItem buildHistoryGraph(StateReport report, String domain, Date start, Date end,
+	public HistoryGraphItem buildGraph(StateReport report, String domain, Date start, Date end,
 	      String reportType, String key, String ip) {
 		if (reportType.equalsIgnoreCase("graph")) {
 			return getHourlyGraph(report, domain, start, end, key, ip);
@@ -47,8 +47,8 @@ private HistoryGraphItem getDailyGraph(String domain, Date start, Date end, Stri
 
 	private HistoryGraphItem getHourlyGraph(StateReport report, String domain, Date start, Date end, String key,
 	      String ip) {
-
 		HistoryGraphItem item = new HistoryGraphItem();
+		
 		item.setStart(start).setSize(60).setTitles(key).setStep(TimeUtil.ONE_MINUTE);
 		item.addValue(getDataFromHourlyDetail(report, start.getTime(), 60, key, ip));
 		return item;

File: cat-home/src/main/java/com/dianping/cat/report/page/state/StateShow.java
Patch:
@@ -79,8 +79,8 @@ public void visitMachine(Machine machine) {
 		}
 		if (m_ip.equals(CatString.ALL_IP) || m_ip.equalsIgnoreCase(ip)) {
 			m_total = mergerMachine(m_total, machine);
+			super.visitMachine(machine);
 		}
-		super.visitMachine(machine);
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemType.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum ProblemType {
 	ERROR("error"),
-
+	
 	FAILURE("failure"),
 
 	HEARTBEAT("heartbeat"),

File: cat-core/src/main/java/com/dianping/cat/message/internal/MilliSecondTimer.java
Patch:
@@ -9,7 +9,7 @@ public class MilliSecondTimer {
 	private static long m_baseTime;
 
 	private static long m_startNanoTime;
-
+	
 	public static void initialize() {
 		String os = System.getProperty("os.name");
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/AbstractMessageAnalyzer.java
Patch:
@@ -23,6 +23,8 @@ public abstract class AbstractMessageAnalyzer<R> extends ContainerHolder impleme
 
 	private volatile boolean m_active = true;
 
+	protected static final String ALL = "All";
+
 	@Override
 	public void analyze(MessageQueue queue) {
 		while (!isTimeout() && isActive()) {
@@ -86,7 +88,7 @@ protected boolean shouldDiscard(Transaction t) {
 		// pigeon default heartbeat is no use
 		String type = t.getType();
 		String name = t.getName();
-		
+
 		if ((("Service").equals(type) || ("PigeonService").equals(type))
 		      && (("piegonService:heartTaskService:heartBeat").equals(name)
 		            || ("piegonService:heartTaskService:heartBeat()").equals(name) || ("pigeon:HeartBeatService:null")

File: cat-home/src/main/java/com/dianping/cat/build/AlarmComponentConfigurator.java
Patch:
@@ -3,6 +3,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import org.unidal.lookup.configuration.AbstractResourceConfigurator;
+import org.unidal.lookup.configuration.Component;
+
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.home.dal.alarm.AlarmRuleDao;
 import com.dianping.cat.home.dal.alarm.AlarmTemplateDao;
@@ -30,8 +33,6 @@
 import com.dianping.cat.system.page.alarm.ScheduledManager;
 import com.dianping.cat.system.tool.MailSMS;
 import com.dianping.cat.system.tool.MailSMSImpl;
-import org.unidal.lookup.configuration.AbstractResourceConfigurator;
-import org.unidal.lookup.configuration.Component;
 
 public class AlarmComponentConfigurator extends AbstractResourceConfigurator {
 

File: cat-home/src/main/java/com/dianping/cat/build/WebComponentConfigurator.java
Patch:
@@ -3,11 +3,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.dianping.cat.report.ReportModule;
-import com.dianping.cat.system.SystemModule;
 import org.unidal.lookup.configuration.Component;
 import org.unidal.web.configuration.AbstractWebComponentsConfigurator;
 
+import com.dianping.cat.report.ReportModule;
+import com.dianping.cat.system.SystemModule;
+
 class WebComponentConfigurator extends AbstractWebComponentsConfigurator {
 	@SuppressWarnings("unchecked")
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.cache;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.cache;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Action.java
Patch:
@@ -11,7 +11,9 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	HISTORY_METHOD("historyMethod"),
 
-	HISTORY_PROJECT("history");
+	HISTORY_PROJECT("history"),
+	
+	METHOD_QUERY("query");
 
 	public static Action getByName(String name, Action defaultAction) {
 		for (Action action : Action.values()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/JspFile.java
Patch:
@@ -11,7 +11,9 @@ public enum JspFile {
 
 	HISTORY_METHOD("/jsp/report/crossHistoryMethod.jsp"),
 
-	HISTORY_PROJECT("/jsp/report/crossHistoryProject.jsp");
+	HISTORY_PROJECT("/jsp/report/crossHistoryProject.jsp"),
+	
+	METHOD_QUERY("/jsp/report/crossMethodQuery.jsp");
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dashboard/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.dashboard;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dashboard/Model.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.dashboard;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ViewModel;
 
+import com.dianping.cat.report.ReportPage;
+
 public class Model extends ViewModel<ReportPage, Action, Context> {
 	private String m_data;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/dashboard/Payload.java
Patch:
@@ -1,12 +1,12 @@
 package com.dianping.cat.report.page.dashboard;
 
 import org.apache.commons.lang.StringUtils;
-
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+
 public class Payload implements ActionPayload<ReportPage, Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/database/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.database;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.database;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	private ReportPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/DisplayNames.java
Patch:
@@ -7,12 +7,13 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
+import org.unidal.lookup.util.StringUtils;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.event.model.entity.EventName;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.event.model.entity.Machine;
-import org.unidal.lookup.util.StringUtils;
 
 public class DisplayNames {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/DisplayTypes.java
Patch:
@@ -9,11 +9,12 @@
 import java.util.Map.Entry;
 import java.util.Set;
 
+import org.unidal.lookup.util.StringUtils;
+
 import com.dianping.cat.CatConstants;
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.event.model.entity.Machine;
-import org.unidal.lookup.util.StringUtils;
 
 public class DisplayTypes {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/HistoryGraphs.java
Patch:
@@ -197,7 +197,6 @@ public void buildTrendGraph(Model model, Payload payload) {
 		model.setFailureTrend(item.getJsonString());
 	}
 	
-
 	private Map<String, double[]> getGraphDatasFromDaily(Date start, Date end, Model model, Payload payload) {
 		String domain = model.getDomain();
 		String type = payload.getType();

File: cat-home/src/main/java/com/dianping/cat/report/page/event/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.event;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.event;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/health/HistoryGraphs.java
Patch:
@@ -4,11 +4,12 @@
 import java.util.Date;
 import java.util.List;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.consumer.health.model.entity.HealthReport;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.report.page.HistoryGraphItem;
 import com.dianping.cat.report.service.ReportService;
-import org.unidal.lookup.annotation.Inject;
 
 public class HistoryGraphs {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/health/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.health;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/health/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.health;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/DisplayHeartbeat.java
Patch:
@@ -192,7 +192,7 @@ public String getCatMessageSizeGraph() {
 	}
 
 	public String getCatThreadGraph() {
-		return m_builder.build(new HeartbeatPayload(4, "Cat Thread", "Minute", "Count", m_catThreads));
+		return m_builder.build(new HeartbeatPayload(1, "Cat Thread", "Minute", "Count", m_catThreads));
 	}
 
 	public double[] getCatThreads() {
@@ -293,7 +293,7 @@ public String getHeapUsageGraph() {
 	}
 
 	public String getHttpTheadGraph() {
-		return m_builder.build(new HeartbeatPayload(3, "HTTP Thread", "Minute", "Count", m_httpThreads));
+		return m_builder.build(new HeartbeatPayload(0, "HTTP Thread", "Minute", "Count", m_httpThreads));
 	}
 
 	public double[] getHttpThreads() {
@@ -341,7 +341,7 @@ public List<Period> getPeriods() {
 	}
 
 	public String getPigeonTheadGraph() {
-		return m_builder.build(new HeartbeatPayload(5, "Pigeon Thread", "Minute", "Count", m_pigeonThreads));
+		return m_builder.build(new HeartbeatPayload(2, "Pigeon Thread", "Minute", "Count", m_pigeonThreads));
 	}
 
 	public double[] getPigeonThreads() {

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/JspFile.java
Patch:
@@ -2,6 +2,8 @@
 
 public enum JspFile {
 	HISTORY("/jsp/report/heartbeatHistoryGraph.jsp"),
+	
+	PART_HISTORY("/jsp/report/heartbeatPartHistoryGraph.jsp"),
 
 	MOBILE("/jsp/report/heartbeat_mobile.jsp"),
 

File: cat-home/src/main/java/com/dianping/cat/report/page/heatmap/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.heatmap;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/heatmap/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.heatmap;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/home/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.home;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.home;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.ip;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.ip;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.logview;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/Payload.java
Patch:
@@ -2,12 +2,13 @@
 
 import java.util.Arrays;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 import org.unidal.web.mvc.payload.annotation.PathMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action = Action.VIEW;

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.matrix;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.matrix;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.model;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Model.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.model;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.ViewModel;
 
+import com.dianping.cat.report.ReportPage;
+
 public class Model extends ViewModel<ReportPage, Action, Context> {
 	private Throwable m_exception;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Payload.java
Patch:
@@ -2,13 +2,14 @@
 
 import java.util.Arrays;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.model.spi.ModelPeriod;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 import org.unidal.web.mvc.payload.annotation.PathMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.model.spi.ModelPeriod;
+
 public class Payload implements ActionPayload<ReportPage, Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/ip/LocalIpService.java
Patch:
@@ -1,13 +1,14 @@
 package com.dianping.cat.report.page.model.ip;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.consumer.ip.model.entity.IpReport;
 import com.dianping.cat.consumer.ip.model.transform.DefaultSaxParser;
 import com.dianping.cat.report.page.model.spi.ModelPeriod;
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.storage.Bucket;
 import com.dianping.cat.storage.BucketManager;
-import org.unidal.lookup.annotation.Inject;
 
 public class LocalIpService extends BaseLocalModelService<IpReport> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/HistoricalMessageService.java
Patch:
@@ -4,6 +4,7 @@
 
 import org.jboss.netty.buffer.ChannelBuffer;
 import org.jboss.netty.buffer.ChannelBuffers;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.hadoop.hdfs.HdfsMessageBucketManager;
 import com.dianping.cat.message.Transaction;
@@ -16,7 +17,6 @@
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.storage.dump.LocalMessageBucketManager;
 import com.dianping.cat.storage.dump.MessageBucketManager;
-import org.unidal.lookup.annotation.Inject;
 
 public class HistoricalMessageService extends BaseLocalModelService<String> {
 	@Inject(LocalMessageBucketManager.ID)

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/LocalMessageService.java
Patch:
@@ -4,6 +4,7 @@
 
 import org.jboss.netty.buffer.ChannelBuffer;
 import org.jboss.netty.buffer.ChannelBuffers;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.internal.MessageId;
@@ -14,7 +15,6 @@
 import com.dianping.cat.report.page.model.spi.internal.BaseLocalModelService;
 import com.dianping.cat.storage.dump.LocalMessageBucketManager;
 import com.dianping.cat.storage.dump.MessageBucketManager;
-import org.unidal.lookup.annotation.Inject;
 
 public class LocalMessageService extends BaseLocalModelService<String> {
 	@Inject(LocalMessageBucketManager.ID)

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseCompositeModelService.java
Patch:
@@ -8,6 +8,9 @@
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
+import org.unidal.helper.Splitters;
+import org.unidal.helper.Threads;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
@@ -16,9 +19,6 @@
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import org.unidal.helper.Splitters;
-import org.unidal.helper.Threads;
-import org.unidal.lookup.annotation.Inject;
 
 public abstract class BaseCompositeModelService<T> extends ModelServiceWithCalSupport implements ModelService<T>,
       Initializable {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -2,6 +2,7 @@
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.consumer.RealtimeConsumer;
@@ -14,7 +15,6 @@
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import org.unidal.lookup.annotation.Inject;
 
 public abstract class BaseLocalModelService<T> extends ModelServiceWithCalSupport implements ModelService<T>,
       Initializable {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -5,6 +5,8 @@
 import java.net.URL;
 import java.util.Map.Entry;
 
+import org.unidal.helper.Files;
+import org.unidal.lookup.annotation.Inject;
 import org.xml.sax.SAXException;
 
 import com.dianping.cat.message.Message;
@@ -13,8 +15,6 @@
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import org.unidal.helper.Files;
-import org.unidal.lookup.annotation.Inject;
 
 public abstract class BaseRemoteModelService<T> extends ModelServiceWithCalSupport implements ModelService<T> {
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/ModelServiceWithCalSupport.java
Patch:
@@ -3,11 +3,12 @@
 import java.io.PrintWriter;
 import java.io.StringWriter;
 
+import org.unidal.lookup.ContainerHolder;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.message.internal.DefaultMessageProducer;
-import org.unidal.lookup.ContainerHolder;
 
 public abstract class ModelServiceWithCalSupport extends ContainerHolder {
 	private Transaction m_current;

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Action.java
Patch:
@@ -5,6 +5,8 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	GROUP("group"),
 
+	HOUR_GRAPH("hourlyGraph"),
+	
 	HISTORY("history"),
 
 	HISTORY_GRAPH("historyGraph"),

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/DetailStatistics.java
Patch:
@@ -7,14 +7,15 @@
 import java.util.Map;
 import java.util.TreeMap;
 
+import org.unidal.lookup.util.StringUtils;
+
 import com.dianping.cat.consumer.problem.model.entity.Entry;
 import com.dianping.cat.consumer.problem.model.entity.JavaThread;
 import com.dianping.cat.consumer.problem.model.entity.Machine;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
 import com.dianping.cat.consumer.problem.model.transform.BaseVisitor;
 import com.dianping.cat.helper.MapUtils;
-import org.unidal.lookup.util.StringUtils;
 
 public class DetailStatistics extends BaseVisitor {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/JspFile.java
Patch:
@@ -7,6 +7,8 @@ public enum JspFile {
 	DETAIL("/jsp/report/problemDetail.jsp"),
 
 	GROUP("/jsp/report/problemGroup.jsp"),
+	
+	HOUR_GRAPH("/jsp/report/problemHourlyGraphs.jsp"),
 
 	HISTORY("/jsp/report/problemHistoryReport.jsp"),
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.problem;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.sql;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.sql;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 
 	@FieldMeta("op")

File: cat-home/src/main/java/com/dianping/cat/report/page/state/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.state;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/state/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.state;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 
 	private ReportPage m_page;

File: cat-home/src/main/java/com/dianping/cat/report/page/task/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.task;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/task/Model.java
Patch:
@@ -4,11 +4,12 @@
 import java.util.Date;
 import java.util.List;
 
+import org.unidal.web.mvc.ViewModel;
+
 import com.dainping.cat.consumer.dal.report.Task;
 import com.dianping.cat.report.ReportPage;
 import com.dianping.cat.report.view.StringSortHelper;
 import com.dianping.cat.report.view.TaskUrlNav;
-import org.unidal.web.mvc.ViewModel;
 
 public class Model extends ViewModel<ReportPage, Action, Context> {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.report.page.transaction;
 
-import com.dianping.cat.report.ReportPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.report.ReportPage;
+
 public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.report.page.transaction;
 
-import com.dianping.cat.report.ReportPage;
-import com.dianping.cat.report.page.AbstractReportPayload;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.report.ReportPage;
+import com.dianping.cat.report.page.AbstractReportPayload;
+
 public class Payload extends AbstractReportPayload<Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/XmlViewer.java
Patch:
@@ -6,9 +6,10 @@
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServletResponse;
 
+import org.unidal.web.mvc.view.Viewer;
+
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.report.ReportPage;
-import org.unidal.web.mvc.view.Viewer;
 
 public class XmlViewer implements Viewer<ReportPage, Action, Context, Model> {
 	public void view(Context ctx, Model model) throws ServletException, IOException {

File: cat-home/src/main/java/com/dianping/cat/report/service/HourlyReportService.java
Patch:
@@ -12,6 +12,7 @@
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.sql.model.entity.SqlReport;
 import com.dianping.cat.consumer.state.model.entity.StateReport;
+import com.dianping.cat.consumer.top.model.entity.TopReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 
 public interface HourlyReportService {
@@ -38,4 +39,6 @@ public interface HourlyReportService {
 	public HealthReport queryHealthReport(String domain, Date start, Date end);
 	
 	public StateReport queryStateReport(String domain,Date start,Date end);
+	
+	public TopReport queryTopReport(String domain,Date start,Date end);
 }

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/DailyReportServiceImpl.java
Patch:
@@ -3,6 +3,8 @@
 import java.util.Date;
 import java.util.List;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.database.model.entity.DatabaseReport;
@@ -29,7 +31,6 @@
 import com.dianping.cat.report.page.model.transaction.TransactionReportMerger;
 import com.dianping.cat.report.service.DailyReportService;
 import com.dianping.cat.report.task.health.HealthReportMerger;
-import org.unidal.lookup.annotation.Inject;
 
 public class DailyReportServiceImpl implements DailyReportService {
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/MonthReportServiceImpl.java
Patch:
@@ -2,6 +2,8 @@
 
 import java.util.Date;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.database.model.entity.DatabaseReport;
@@ -17,7 +19,6 @@
 import com.dianping.cat.home.dal.report.MonthreportDao;
 import com.dianping.cat.home.dal.report.MonthreportEntity;
 import com.dianping.cat.report.service.MonthReportService;
-import org.unidal.lookup.annotation.Inject;
 
 public class MonthReportServiceImpl implements MonthReportService {
 

File: cat-home/src/main/java/com/dianping/cat/report/service/impl/WeeklyReportServiceImpl.java
Patch:
@@ -2,6 +2,8 @@
 
 import java.util.Date;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
 import com.dianping.cat.consumer.database.model.entity.DatabaseReport;
@@ -17,7 +19,6 @@
 import com.dianping.cat.home.dal.report.WeeklyreportDao;
 import com.dianping.cat.home.dal.report.WeeklyreportEntity;
 import com.dianping.cat.report.service.WeeklyReportService;
-import org.unidal.lookup.annotation.Inject;
 
 public class WeeklyReportServiceImpl implements WeeklyReportService {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/cross/CrossReportBuilder.java
Patch:
@@ -5,6 +5,9 @@
 import java.util.List;
 import java.util.Set;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
 import com.dianping.cat.Cat;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.AbstractReportBuilder;
 import com.dianping.cat.report.task.spi.ReportBuilder;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class CrossReportBuilder extends AbstractReportBuilder implements ReportBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/database/DatabaseReportBuilder.java
Patch:
@@ -5,6 +5,9 @@
 import java.util.List;
 import java.util.Set;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
 import com.dianping.cat.Cat;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.AbstractReportBuilder;
 import com.dianping.cat.report.task.spi.ReportBuilder;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class DatabaseReportBuilder extends AbstractReportBuilder implements ReportBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/health/HealthServiceCollector.java
Patch:
@@ -8,6 +8,9 @@
 import java.util.Map;
 import java.util.Set;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportDao;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.page.cross.display.ProjectInfo;
 import com.dianping.cat.report.page.cross.display.TypeDetailInfo;
 import com.dianping.cat.report.page.model.cross.CrossReportMerger;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class HealthServiceCollector {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/heartbeat/HeartbeatReportBuilder.java
Patch:
@@ -5,6 +5,9 @@
 import java.util.Date;
 import java.util.List;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
 import com.dianping.cat.Cat;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.page.model.heartbeat.HeartbeatReportMerger;
 import com.dianping.cat.report.task.spi.AbstractReportBuilder;
 import com.dianping.cat.report.task.spi.ReportBuilder;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class HeartbeatReportBuilder extends AbstractReportBuilder implements ReportBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/matrix/MatrixReportBuilder.java
Patch:
@@ -5,6 +5,9 @@
 import java.util.List;
 import java.util.Set;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
 import com.dianping.cat.Cat;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.AbstractReportBuilder;
 import com.dianping.cat.report.task.spi.ReportBuilder;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class MatrixReportBuilder extends AbstractReportBuilder implements ReportBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/sql/SqlReportBuilder.java
Patch:
@@ -5,6 +5,9 @@
 import java.util.List;
 import java.util.Set;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
 import com.dianping.cat.Cat;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.AbstractReportBuilder;
 import com.dianping.cat.report.task.spi.ReportBuilder;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class SqlReportBuilder extends AbstractReportBuilder implements ReportBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/state/StateReportBuilder.java
Patch:
@@ -5,6 +5,9 @@
 import java.util.List;
 import java.util.Set;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Report;
 import com.dainping.cat.consumer.dal.report.ReportEntity;
 import com.dianping.cat.Cat;
@@ -20,8 +23,6 @@
 import com.dianping.cat.report.task.TaskHelper;
 import com.dianping.cat.report.task.spi.AbstractReportBuilder;
 import com.dianping.cat.report.task.spi.ReportBuilder;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class StateReportBuilder extends AbstractReportBuilder implements ReportBuilder {
 

File: cat-home/src/main/java/com/dianping/cat/report/task/thread/DefaultTaskConsumer.java
Patch:
@@ -6,14 +6,15 @@
 import java.util.Date;
 import java.util.concurrent.locks.LockSupport;
 
+import org.unidal.dal.jdbc.DalException;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dainping.cat.consumer.dal.report.Task;
 import com.dainping.cat.consumer.dal.report.TaskDao;
 import com.dainping.cat.consumer.dal.report.TaskEntity;
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.report.task.spi.ReportFacade;
-import org.unidal.dal.jdbc.DalException;
-import org.unidal.lookup.annotation.Inject;
 
 public class DefaultTaskConsumer extends TaskConsumer {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/AlarmTask.java
Patch:
@@ -2,6 +2,9 @@
 
 import java.util.List;
 
+import org.unidal.helper.Threads.Task;
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Event;
 import com.dianping.cat.message.Transaction;
@@ -12,8 +15,6 @@
 import com.dianping.cat.system.alarm.threshold.event.ExceptionDataEvent;
 import com.dianping.cat.system.alarm.threshold.event.ServiceDataEvent;
 import com.dianping.cat.system.event.EventDispatcher;
-import org.unidal.helper.Threads.Task;
-import org.unidal.lookup.annotation.Inject;
 
 public class AlarmTask implements Task {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/alert/AlertManager.java
Patch:
@@ -7,15 +7,15 @@
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
+import org.unidal.helper.Threads;
+import org.unidal.helper.Threads.Task;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.home.dal.alarm.MailRecord;
 import com.dianping.cat.home.dal.alarm.MailRecordDao;
 import com.dianping.cat.system.tool.MailSMS;
-import org.unidal.helper.Threads;
-import org.unidal.helper.Threads.Task;
-import org.unidal.lookup.annotation.Inject;
 
 public class AlertManager implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/connector/impl/ThresholdConnector.java
Patch:
@@ -6,12 +6,13 @@
 import java.util.Date;
 import java.util.Map;
 
+import org.unidal.helper.Files;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.system.alarm.connector.Connector;
 import com.dianping.cat.system.alarm.threshold.ThresholdDataEntity;
 import com.google.gson.Gson;
 import com.google.gson.reflect.TypeToken;
-import org.unidal.helper.Files;
 
 public class ThresholdConnector implements Connector {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/ThresholdRuleManager.java
Patch:
@@ -10,6 +10,9 @@
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
+import org.unidal.helper.Threads;
+import org.unidal.helper.Threads.Task;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
@@ -25,9 +28,6 @@
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.system.alarm.alert.AlertInfo;
 import com.dianping.cat.system.alarm.threshold.template.ThresholdTemplateMerger;
-import org.unidal.helper.Threads;
-import org.unidal.helper.Threads.Task;
-import org.unidal.lookup.annotation.Inject;
 
 public class ThresholdRuleManager implements Initializable {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ExceptionDataListener.java
Patch:
@@ -2,6 +2,8 @@
 
 import java.util.List;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.system.alarm.alert.AlertInfo;
@@ -15,7 +17,6 @@
 import com.dianping.cat.system.event.EventDispatcher;
 import com.dianping.cat.system.event.EventListener;
 import com.dianping.cat.system.event.EventType;
-import org.unidal.lookup.annotation.Inject;
 
 public class ExceptionDataListener implements EventListener {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ServiceDataListener.java
Patch:
@@ -2,6 +2,8 @@
 
 import java.util.List;
 
+import org.unidal.lookup.annotation.Inject;
+
 import com.dianping.cat.Cat;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
@@ -16,7 +18,6 @@
 import com.dianping.cat.system.event.EventDispatcher;
 import com.dianping.cat.system.event.EventListener;
 import com.dianping.cat.system.event.EventType;
-import org.unidal.lookup.annotation.Inject;
 
 public class ServiceDataListener implements EventListener {
 

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ThresholdAlertListener.java
Patch:
@@ -9,6 +9,7 @@
 
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.helper.CatString;
@@ -23,7 +24,6 @@
 import com.dianping.cat.system.event.EventType;
 import com.dianping.cat.system.notify.ReportRenderImpl;
 import com.dianping.cat.system.page.alarm.RuleManager;
-import org.unidal.lookup.annotation.Inject;
 
 import freemarker.template.Configuration;
 import freemarker.template.Template;
@@ -70,7 +70,7 @@ private String buildEmailAlarmContent(ThresholdAlarmMeta meta) {
 		root.put("count", meta.getRealCount());
 		root.put("domain", meta.getDomain());
 		root.put("date", meta.getDate());
-		root.put("url", buildProblemUrl(meta.getBaseUrl(), meta.getDomain(), meta.getDate()));
+		root.put("url", buildProblemUrl(meta.getBaseShowUrl(), meta.getDomain(), meta.getDate()));
 
 		try {
 			String type = meta.getType();

File: cat-home/src/main/java/com/dianping/cat/system/event/DefaultEventDispatcher.java
Patch:
@@ -2,9 +2,10 @@
 
 import java.util.List;
 
-import com.dianping.cat.Cat;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.Cat;
+
 public class DefaultEventDispatcher implements EventDispatcher {
 	@Inject
 	private EventListenerRegistry m_registry;

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/Handler.java
Patch:
@@ -4,15 +4,16 @@
 
 import javax.servlet.ServletException;
 
-import com.dainping.cat.home.dal.user.DpAdminLogin;
-import com.dianping.cat.system.SystemPage;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.web.mvc.PageHandler;
 import org.unidal.web.mvc.annotation.InboundActionMeta;
 import org.unidal.web.mvc.annotation.OutboundActionMeta;
 import org.unidal.web.mvc.annotation.PayloadMeta;
 import org.unidal.web.mvc.annotation.PreInboundActionMeta;
 
+import com.dainping.cat.home.dal.user.DpAdminLogin;
+import com.dianping.cat.system.SystemPage;
+
 public class Handler implements PageHandler<Context> {
 	public static final String FAIL = "Fail";
 

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.system.page.alarm;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.system.SystemPage;
+
 public class JspViewer extends BaseJspViewer<SystemPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/Model.java
Patch:
@@ -2,12 +2,13 @@
 
 import java.util.List;
 
+import org.unidal.web.mvc.ViewModel;
+
 import com.dianping.cat.home.dal.alarm.AlarmRule;
 import com.dianping.cat.home.dal.alarm.AlarmTemplate;
 import com.dianping.cat.home.dal.alarm.MailRecord;
 import com.dianping.cat.home.dal.alarm.ScheduledReport;
 import com.dianping.cat.system.SystemPage;
-import org.unidal.web.mvc.ViewModel;
 
 public class Model extends ViewModel<SystemPage, Action, Context> {
 	private AlarmRule m_alarmRule;

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.system.page.alarm;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.system.SystemPage;
+
 public class Payload implements ActionPayload<SystemPage, Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -78,7 +78,6 @@ public void handleInbound(Context ctx) throws ServletException, IOException {
 				if (parent instanceof SystemContext) {
 					SystemContext<?> context = (SystemContext<?>) parent;
 					DpAdminLogin member = session.getMember();
-
 					context.setSigninMember(member);
 					logAccess(ctx, member);
 					return;

File: cat-home/src/main/java/com/dianping/cat/system/page/login/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.system.page.login;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.system.SystemPage;
+
 public class JspViewer extends BaseJspViewer<SystemPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Model.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.system.page.login;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.ViewModel;
 
+import com.dianping.cat.system.SystemPage;
+
 public class Model extends ViewModel<SystemPage, Action, Context> {
 	public Model(Context ctx) {
 		super(ctx);

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.system.page.login;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.system.SystemPage;
+
 public class Payload implements ActionPayload<SystemPage, Action> {
 	private SystemPage m_page;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/SigninService.java
Patch:
@@ -1,9 +1,10 @@
 package com.dianping.cat.system.page.login.service;
 
 
-import com.dianping.cat.system.page.login.spi.ISigninService;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.system.page.login.spi.ISigninService;
+
 public class SigninService implements ISigninService<SigninContext, Credential, Session> {
 
 	@Inject

File: cat-home/src/main/java/com/dianping/cat/system/page/login/service/TokenManager.java
Patch:
@@ -1,9 +1,10 @@
 package com.dianping.cat.system.page.login.service;
 
 
-import com.dianping.cat.system.page.login.spi.ITokenManager;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.system.page.login.spi.ITokenManager;
+
 public class TokenManager implements ITokenManager<SigninContext, Token> {
 	@Inject
 	private CookieManager m_cookieManager;

File: cat-home/src/main/java/com/dianping/cat/system/page/project/JspViewer.java
Patch:
@@ -1,8 +1,9 @@
 package com.dianping.cat.system.page.project;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.view.BaseJspViewer;
 
+import com.dianping.cat.system.SystemPage;
+
 public class JspViewer extends BaseJspViewer<SystemPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {

File: cat-home/src/main/java/com/dianping/cat/system/page/project/Model.java
Patch:
@@ -3,9 +3,10 @@
 import java.util.Collections;
 import java.util.List;
 
+import org.unidal.web.mvc.ViewModel;
+
 import com.dainping.cat.consumer.dal.report.Project;
 import com.dianping.cat.system.SystemPage;
-import org.unidal.web.mvc.ViewModel;
 
 public class Model extends ViewModel<SystemPage, Action, Context> {
 	

File: cat-home/src/main/java/com/dianping/cat/system/page/project/Payload.java
Patch:
@@ -1,10 +1,11 @@
 package com.dianping.cat.system.page.project;
 
-import com.dianping.cat.system.SystemPage;
 import org.unidal.web.mvc.ActionContext;
 import org.unidal.web.mvc.ActionPayload;
 import org.unidal.web.mvc.payload.annotation.FieldMeta;
 
+import com.dianping.cat.system.SystemPage;
+
 public class Payload implements ActionPayload<SystemPage, Action> {
 	@FieldMeta("op")
 	private Action m_action;

File: cat-home/src/main/java/com/dianping/cat/system/tool/MailSMSImpl.java
Patch:
@@ -11,13 +11,13 @@
 import org.springframework.beans.BeansException;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.support.ClassPathXmlApplicationContext;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.mailremote.remote.MailService;
 import com.dianping.sms.biz.SMSService;
 import com.dianping.sms.biz.SMSType;
-import org.unidal.lookup.annotation.Inject;
 
 public class MailSMSImpl implements MailSMS, Initializable, LogEnabled {
 

File: cat-home/src/test/java/com/dianping/cat/ModuleInitializerTest.java
Patch:
@@ -3,7 +3,6 @@
 import java.io.File;
 
 import org.junit.Test;
-
 import org.unidal.initialization.DefaultModuleContext;
 import org.unidal.initialization.Module;
 import org.unidal.initialization.ModuleContext;

File: cat-home/src/test/java/com/dianping/cat/TestHttp.java
Patch:
@@ -12,7 +12,6 @@
 import org.junit.Test;
 import org.mortbay.jetty.Server;
 import org.mortbay.jetty.webapp.WebAppContext;
-
 import org.unidal.helper.Files;
 
 public class TestHttp {

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -7,7 +7,6 @@
 import org.mortbay.jetty.Handler;
 import org.mortbay.jetty.webapp.WebAppContext;
 import org.mortbay.servlet.GzipFilter;
-
 import org.unidal.test.jetty.JettyServer;
 
 @RunWith(JUnit4.class)

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/TransactionReportBuilderTest.java
Patch:
@@ -7,11 +7,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
-
-import com.dianping.cat.report.task.transaction.TransactionReportBuilder;
 import org.unidal.lookup.ComponentTestCase;
 import org.unidal.lookup.annotation.Inject;
 
+import com.dianping.cat.report.task.transaction.TransactionReportBuilder;
+
 @RunWith(JUnit4.class)
 public class TransactionReportBuilderTest extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/TuanGouMonthAnalyzer.java
Patch:
@@ -10,6 +10,8 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.lookup.ComponentTestCase;
+import org.unidal.lookup.annotation.Inject;
 
 import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.cross.model.entity.CrossReport;
@@ -30,8 +32,6 @@
 import com.dianping.cat.report.page.model.cross.CrossReportMerger;
 import com.dianping.cat.report.page.model.transaction.TransactionReportMerger;
 import com.dianping.cat.report.task.health.HealthReportMerger;
-import org.unidal.lookup.ComponentTestCase;
-import org.unidal.lookup.annotation.Inject;
 
 @RunWith(JUnit4.class)
 public class TuanGouMonthAnalyzer extends ComponentTestCase {

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/UrlTransactionBugTest.java
Patch:
@@ -7,6 +7,7 @@
 
 import org.junit.Before;
 import org.junit.Test;
+import org.unidal.helper.Files;
 import org.unidal.lookup.ComponentTestCase;
 import org.unidal.lookup.annotation.Inject;
 
@@ -20,7 +21,6 @@
 import com.dianping.cat.consumer.transaction.model.transform.DefaultSaxParser;
 import com.dianping.cat.helper.TimeUtil;
 import com.dianping.cat.home.dal.report.DailyreportDao;
-import com.site.helper.Files;
 
 public class UrlTransactionBugTest extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/report/graph/ValueTranslaterTest.java
Patch:
@@ -5,7 +5,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
-
 import org.unidal.lookup.ComponentTestCase;
 
 @RunWith(JUnit4.class)

File: cat-home/src/test/java/com/dianping/cat/report/page/event/EventGraphDataTest.java
Patch:
@@ -11,9 +11,9 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.helper.Files;
 
 import com.dianping.cat.home.dal.report.Graph;
-import org.unidal.helper.Files;
 
 @RunWith(JUnit4.class)
 public class EventGraphDataTest {

File: cat-home/src/test/java/com/dianping/cat/report/page/heartbeat/HeartbeatGraphDataTest.java
Patch:
@@ -12,11 +12,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
-
-import com.dianping.cat.home.dal.report.Graph;
 import org.unidal.helper.Files;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.home.dal.report.Graph;
+
 @RunWith(JUnit4.class)
 public class HeartbeatGraphDataTest extends ComponentTestCase {
 	@Test

File: cat-home/src/test/java/com/dianping/cat/report/page/model/EventReportFilterTest.java
Patch:
@@ -3,11 +3,11 @@
 import junit.framework.Assert;
 
 import org.junit.Test;
+import org.unidal.helper.Files;
 
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.transform.DefaultDomParser;
 import com.dianping.cat.report.page.model.Handler.EventReportFilter;
-import org.unidal.helper.Files;
 
 public class EventReportFilterTest {
 	@Test

File: cat-home/src/test/java/com/dianping/cat/report/page/model/TransactionReportFilterTest.java
Patch:
@@ -3,11 +3,11 @@
 import junit.framework.Assert;
 
 import org.junit.Test;
+import org.unidal.helper.Files;
 
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultDomParser;
 import com.dianping.cat.report.page.model.Handler.TransactionReportFilter;
-import org.unidal.helper.Files;
 
 public class TransactionReportFilterTest {
 	@Test

File: cat-home/src/test/java/com/dianping/cat/report/page/model/event/EventModelServiceTest.java
Patch:
@@ -5,11 +5,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import org.unidal.lookup.ComponentTestCase;
 
 @RunWith(JUnit4.class)
 public class EventModelServiceTest extends ComponentTestCase {

File: cat-home/src/test/java/com/dianping/cat/report/page/model/transaction/TransactionModelServiceTest.java
Patch:
@@ -5,11 +5,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.lookup.ComponentTestCase;
 
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
-import org.unidal.lookup.ComponentTestCase;
 
 @RunWith(JUnit4.class)
 public class TransactionModelServiceTest extends ComponentTestCase {

File: cat-home/src/test/java/com/dianping/cat/report/page/problem/ProblemGraphDataTest.java
Patch:
@@ -12,9 +12,9 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
+import org.unidal.helper.Files;
 
 import com.dianping.cat.home.dal.report.Graph;
-import org.unidal.helper.Files;
 
 @RunWith(JUnit4.class)
 public class ProblemGraphDataTest {
@@ -37,7 +37,7 @@ public void testBuildGraphDatasByType() throws IOException {
 			Date addtime = new Date(time);
 			graphs.add(creatGraph(addtime));
 		}
-		Map<String, double[]> graphDatas = handler.buildGraphDatas(start, end, "heartbeat", "", graphs);
+		Map<String, double[]> graphDatas = handler.buildGraphDatasFromHour(start, end, "heartbeat", "", graphs);
 		double[] errors = graphDatas.get("errors");
 		double[] expectErrors = new double[errors.length];
 		for (int i = 0; i < expectErrors.length; i++) {
@@ -60,7 +60,7 @@ public void testBuildGraphDatasByTypeAndName() throws IOException {
 			Date addtime = new Date(time);
 			graphs.add(creatGraph(addtime));
 		}
-		Map<String, double[]> graphDatas = handler.buildGraphDatas(start, end, "long-url", "/addcheckin.bin", graphs);
+		Map<String, double[]> graphDatas = handler.buildGraphDatasFromHour(start, end, "long-url", "/addcheckin.bin", graphs);
 		double[] errors = graphDatas.get("errors");
 		double[] expectErrors = new double[errors.length];
 		for (int i = 2; i < expectErrors.length; i = i + 60) {

File: cat-home/src/test/java/com/dianping/cat/report/task/TestTaskProducer.java
Patch:
@@ -8,11 +8,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
-
-import com.dianping.cat.report.task.thread.TaskProducer;
 import org.unidal.helper.Threads;
 import org.unidal.lookup.ComponentTestCase;
 
+import com.dianping.cat.report.task.thread.TaskProducer;
+
 @RunWith(JUnit4.class)
 public class TestTaskProducer extends ComponentTestCase {
 

File: cat-home/src/test/java/com/dianping/cat/system/alarm/template/ThresholdRuleTest.java
Patch:
@@ -14,8 +14,8 @@
 import com.dianping.cat.home.template.entity.ThresholdTemplate;
 import com.dianping.cat.home.template.transform.DefaultDomParser;
 import com.dianping.cat.system.alarm.alert.AlertInfo;
-import com.dianping.cat.system.alarm.threshold.ThresholdRule;
 import com.dianping.cat.system.alarm.threshold.ThresholdDataEntity;
+import com.dianping.cat.system.alarm.threshold.ThresholdRule;
 import com.dianping.cat.system.alarm.threshold.template.ThresholdAlarmMeta;
 
 public class ThresholdRuleTest {

File: cat-home/src/test/java/com/dianping/cat/system/notify/RenderTest.java
Patch:
@@ -3,13 +3,13 @@
 import junit.framework.Assert;
 
 import org.junit.Test;
+import org.unidal.lookup.ComponentTestCase;
 import org.unidal.webres.helper.Files;
 
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultDomParser;
-import org.unidal.lookup.ComponentTestCase;
 
 public class RenderTest extends ComponentTestCase {
 

File: cat-home/src/main/java/com/dianping/cat/report/page/top/Handler.java
Patch:
@@ -44,7 +44,7 @@ private TopReport getReport(Payload payload) {
 			ModelResponse<TopReport> response = m_service.invoke(request);
 			TopReport report = response.getModel();
 
-			if (report == null) {
+			if (report == null || report.getDomains().size() == 0) {
 				report = m_reportService.queryTopReport(domain, new Date(payload.getDate()), new Date(payload.getDate()
 				      + TimeUtil.ONE_HOUR));
 			}

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Handler.java
Patch:
@@ -222,7 +222,7 @@ private TransactionReport getHourlyTransactionReport(Payload payload) {
 			TransactionReport report = merger.getTransactionReport();
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "transaction");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "transaction");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Handler.java
Patch:
@@ -59,7 +59,7 @@ private CrossReport getHourlyReport(Payload payload) {
 			
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "cross");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "cross");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/database/Handler.java
Patch:
@@ -49,7 +49,7 @@ private DatabaseReport getHourlyReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDatabaseNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "database");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "database");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -141,7 +141,7 @@ private EventReport getReport(Payload payload) {
 			
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "event");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "event");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -102,7 +102,7 @@ private HeartbeatReport getReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "heartbeat");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "heartbeat");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Handler.java
Patch:
@@ -50,7 +50,7 @@ private MatrixReport getHourlyReport(Payload payload) {
 			
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "matrix");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "matrix");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -79,7 +79,7 @@ private ProblemReport getHourlyReport(Payload payload, String type) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "problem");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "problem");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/Handler.java
Patch:
@@ -54,7 +54,7 @@ private SqlReport getHourlyReport(Payload payload) {
 			
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "sql");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "sql");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -139,7 +139,7 @@ private TransactionReport getHourlyReport(Payload payload) {
 
 			if (payload.getPeriod().isLast()) {
 				Set<String> domains = m_reportService.queryAllDomainNames(new Date(payload.getDate()),
-				      new Date(payload.getDate() + TimeUtil.ONE_DAY), "transaction");
+				      new Date(payload.getDate() + TimeUtil.ONE_HOUR), "transaction");
 				Set<String> domainNames = report.getDomainNames();
 
 				domainNames.addAll(domains);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemType.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum ProblemType {
 	ERROR("error"),
-
+	
 	FAILURE("failure"),
 
 	HEARTBEAT("heartbeat"),

File: cat-consumer/src/main/java/com/dianping/cat/consumer/top/TopAnalyzer.java
Patch:
@@ -314,11 +314,11 @@ public void visitSegment(Segment segment) {
 			if ("error".equals(m_type)) {
 				com.dianping.cat.consumer.top.model.entity.Segment temp = m_report.findOrCreateDomain(m_domain)
 				      .findOrCreateSegment(id);
-				temp.setError(count);
+				temp.setError(temp.getError() + count);
 			} else if ("call".equals(m_type)) {
 				com.dianping.cat.consumer.top.model.entity.Segment temp = m_report.findOrCreateDomain(m_domain)
 				      .findOrCreateSegment(id);
-				temp.setCallError(count);
+				temp.setCallError(temp.getCallError() + count);
 			}
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/top/TopReportMerger.java
Patch:
@@ -19,6 +19,8 @@ protected void mergeDomain(Domain old, Domain domain) {
 	@Override
 	protected void mergeSegment(Segment old, Segment segment) {
 		old.setError(old.getError() + segment.getError());
+		old.setCallError(old.getCallError() + segment.getCallError());
+		
 		old.setCache(old.getCache() + segment.getCache());
 		old.setCacheSum(old.getCacheSum() + segment.getCacheSum());
 		if (old.getCache() > 0) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Action.java
Patch:
@@ -11,7 +11,9 @@ public enum Action implements org.unidal.web.mvc.Action {
 
 	HISTORY_METHOD("historyMethod"),
 
-	HISTORY_PROJECT("history");
+	HISTORY_PROJECT("history"),
+	
+	METHOD_QUERY("query");
 
 	public static Action getByName(String name, Action defaultAction) {
 		for (Action action : Action.values()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/JspFile.java
Patch:
@@ -11,7 +11,9 @@ public enum JspFile {
 
 	HISTORY_METHOD("/jsp/report/crossHistoryMethod.jsp"),
 
-	HISTORY_PROJECT("/jsp/report/crossHistoryProject.jsp");
+	HISTORY_PROJECT("/jsp/report/crossHistoryProject.jsp"),
+	
+	METHOD_QUERY("/jsp/report/crossMethodQuery.jsp");
 
 	private String m_path;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/JspViewer.java
Patch:
@@ -22,6 +22,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 			return JspFile.HISTORY_METHOD.getPath();
 		case HISTORY_PROJECT:
 			return JspFile.HISTORY_PROJECT.getPath();
+		case METHOD_QUERY:
+			return JspFile.METHOD_QUERY.getPath();
 		}
 
 		throw new RuntimeException("Unknown action: " + action);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemAnalyzer.java
Patch:
@@ -52,8 +52,8 @@ private ProblemReport buildTotalProblemReport() {
 
 		try {
 	      for (ProblemReport temp : m_reports.values()) {
-	      	temp.getIps().add(temp.getDomain());
-	      	temp.getDomainNames().add(temp.getDomain());
+	      	report.getIps().add(temp.getDomain());
+	      	report.getDomainNames().add(temp.getDomain());
 	      	visitor.visitProblemReport(temp);
 	      }
       } catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/CatHomeModule.java
Patch:
@@ -38,9 +38,9 @@ protected void execute(ModuleContext ctx) throws Exception {
 		DefaultTaskConsumer taskConsumer = ctx.lookup(DefaultTaskConsumer.class);
 		TaskProducer dailyTaskProducer = ctx.lookup(TaskProducer.class);
 
+		Threads.forGroup("Cat").start(taskConsumer);
 		if (serverConfigManager.isJobMachine() && !serverConfigManager.isLocalMode()) {
 			Threads.forGroup("Cat").start(dailyTaskProducer);
-			Threads.forGroup("Cat").start(taskConsumer);
 		}
 
 		executeAlarmModule(ctx);

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemReportBuilder.java
Patch:
@@ -104,9 +104,9 @@ private List<Graph> getHourlyReport(String reportName, String reportDomain, Date
 		List<Graph> graphs = new ArrayList<Graph>();
 		List<Report> reports = m_reportDao.findAllByPeriodDomainName(reportPeriod, reportDomain, reportName,
 		      ReportEntity.READSET_FULL);
-		ProblemReport transactionReport = m_problemMerger.mergeForGraph(reportDomain, reports);
+		ProblemReport problemReport = m_problemMerger.mergeForGraph(reportDomain, reports);
 		
-		graphs = m_problemGraphCreator.splitReportToGraphs(reportPeriod, reportDomain, reportName, transactionReport);
+		graphs = m_problemGraphCreator.splitReportToGraphs(reportPeriod, reportDomain, reportName, problemReport);
 		return graphs;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/HistoryGraphs.java
Patch:
@@ -203,13 +203,13 @@ private Map<String, double[]> getGraphDatasFromDaily(Date start, Date end, Model
 		String type = payload.getType();
 		String name = payload.getName();
 		String ip = model.getIpAddress();
-		String queryIp = "All".equals(ip) == true ? "all" : ip;
+		String queryIp = "All".equalsIgnoreCase(ip) == true ? "All" : ip;
 		List<Dailygraph> graphs = new ArrayList<Dailygraph>();
 
 		for (long startLong = start.getTime(); startLong < end.getTime(); startLong = startLong + TimeUtil.ONE_DAY) {
 			try {
 				Dailygraph graph = m_dailyGraphDao.findSingalByDomainNameIpDuration(new Date(startLong), queryIp, domain,
-				      name, DailygraphEntity.READSET_FULL);
+				      "event", DailygraphEntity.READSET_FULL);
 				graphs.add(graph);
 			} catch (DalNotFoundException e) {
 			} catch (Exception e) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/HistoryGraphs.java
Patch:
@@ -247,7 +247,7 @@ private Map<String, double[]> getGraphDatasFromDaily(Date start, Date end, Model
 		String type = payload.getType();
 		String name = payload.getName();
 		String ip = model.getIpAddress();
-		String queryIp = "All".equals(ip) == true ? "all" : ip;
+		String queryIp = "All".equalsIgnoreCase(ip) == true ? "All" : ip;
 		List<Dailygraph> graphs = new ArrayList<Dailygraph>();
 
 		for (long startLong = start.getTime(); startLong < end.getTime(); startLong = startLong + TimeUtil.ONE_DAY) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/database/DatabaseAnalyzer.java
Patch:
@@ -104,6 +104,7 @@ public String getDataBaseName(String url) {
 			}
 		}
 
+		m_logger.error("Error connection url:"+url);
 		return "Unknown";
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -133,10 +133,11 @@ protected void process(MessageTree tree) {
 			Integer size = m_oldVersionDomains.get(domain);
 
 			if (size == null) {
-				m_oldVersionDomains.put(domain, new Integer(1));
+				size = 1;
 			} else {
 				size++;
 			}
+			m_oldVersionDomains.put(domain, size);
 		}
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/sql/SqlAnalyzer.java
Patch:
@@ -103,6 +103,7 @@ private String getDataBaseName(String url) {
 			}
 		}
 
+		m_logger.error("Error connection url:"+url);
 		return "Unknown";
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpUploader.java
Patch:
@@ -183,7 +183,9 @@ public Direction matches(File base, String path) {
 						m_logger.error(String.format("Uploading file(%s) to HDFS(%s) failed!", file, path), e);
 					} finally {
 						try {
-							fdos.close();
+							if (fdos != null) {
+								fdos.close();
+							}
 						} catch (IOException e) {
 							Cat.logError(e);
 						}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -90,7 +90,7 @@ private Period getHeartBeatInfo(Heartbeat heartbeat, long timestamp) {
 		try {
 			info = new com.dianping.cat.status.model.transform.DefaultDomParser().parse(xml);
 		} catch (Exception e) {
-			m_logger.error(e.getMessage(), e);
+			m_logger.error("Error when parse status info in heartbeat analyzer." + xml, e);
 			Cat.getProducer().logEvent("HearbeatAnalyzer", "ErrorXml", "Error", xml);
 			return null;
 		}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -36,7 +36,7 @@ public void test() throws Exception {
 
 		int newSize = newReport.findMachine("10.1.77.193").findType("URL").getNames().size();
 
-		Assert.assertEquals(201, newSize);
+		Assert.assertEquals(199, newSize);
 
 		String url = "/topic/341739¬g&quot;";
 

File: cat-core/src/main/java/com/dianping/cat/configuration/ServerConfigManager.java
Patch:
@@ -209,7 +209,6 @@ public void initialize(File configFile) throws Exception {
 			m_logger.warn("CAT server is running in LOCAL mode! No HDFS or MySQL will be accessed!");
 		}
 
-		// Threads.forGroup("Cat").start(new ServerConfigReloader(configFile));
 	}
 
 	public boolean isInitialized() {

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketManagerTest.java
Patch:
@@ -75,6 +75,8 @@ public void testReadWrite() throws Exception {
 		}
 
 		Thread.yield();
+		
+		Thread.sleep(3000);
 
 		manager.loadMessage("source-7f000001-373203-1");
 		

File: cat-hadoop/src/test/java/com/dianping/cat/hadoop/sql/SqlJobDataProduceTest.java
Patch:
@@ -61,7 +61,7 @@ public void test() throws Exception {
 
 					DefaultTransaction sqlInternalTran = (DefaultTransaction) sqlTran;
 					sqlInternalTran.setDurationInMillis((long) Math.pow(2, j % 12));
-					if (j % 2 == 1) {
+					if (j % 2 != 0) {
 						sqlTran.setStatus(Message.SUCCESS);
 					} else {
 						sqlTran.setStatus("Error");

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/Handler.java
Patch:
@@ -88,9 +88,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		String logView = getLogView(messageId, payload.isWaterfall());
 
 		if (logView == null || logView.length() == 0) {
-			Cat.getProducer().logEvent("Logview", "Success", Event.SUCCESS, null);
-		} else {
 			Cat.getProducer().logEvent("Logview", "Fail", Event.SUCCESS, null);
+		} else {
+			Cat.getProducer().logEvent("Logview", "Success", Event.SUCCESS, null);
 		}
 		
 		switch (payload.getAction()) {

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/ThresholdRuleManager.java
Patch:
@@ -196,7 +196,7 @@ private void initalizeServiceRule() {
 	}
 
 	private ThresholdTemplate mergerTemplate(ThresholdTemplate baseTemplate, String newContent) {
-		if (newContent == null || newContent.length() > 0) {
+		if (newContent != null && newContent.trim().length() > 0) {
 			try {
 				ThresholdTemplate newTemplate = DefaultSaxParser.parse(newContent);
 				ThresholdTemplateMerger merger = new ThresholdTemplateMerger(new ThresholdTemplate());
@@ -237,7 +237,7 @@ private void refreshExceptionRules() {
 						ThresholdTemplate template = mergerTemplate(baseTemplate, newContent);
 						ThresholdRule rule = addExceptionRule(alarmRule, template);
 						m_exceptionModifyTimes.put(alarmRule.getId(), alarmRule.getModifyDate());
-						
+
 						Cat.getProducer().logEvent(ALARM_RULE, "ExceptionAdd", Event.SUCCESS, rule.toString());
 					} else {
 						Date modifyDate = alarmRule.getModifyDate();

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/JspFile.java
Patch:
@@ -29,7 +29,7 @@ public enum JspFile {
 
 	EXCEPTION_ALARM_RULE_LIST("/jsp/system/alarmExceptionRules.jsp"),
 	
-	EXCEPTION_ALARM_RULE_SUB("/jsp/system/alarmExceptionRules.jsp"),
+	EXCEPTION_ALARM_RULE_SUB("/jsp/system/alarmOpState.jsp"),
 
 	SCHEDULED_REPORT_ADD("/jsp/system/scheduledReportAdd.jsp"),
 
@@ -39,7 +39,7 @@ public enum JspFile {
 	
 	SCHEDULED_REPORT_LIST("/jsp/system/scheduledReports.jsp"),
 
-	SCHEDULED_REPORT_SUB("/jsp/system/scheduledReports.jsp"),
+	SCHEDULED_REPORT_SUB("/jsp/system/alarmOpState.jsp"),
 
 	SCHEDULED_REPORT_UPDATE("/jsp/system/scheduledReportUpdate.jsp"),
 
@@ -49,7 +49,7 @@ public enum JspFile {
 
 	SERVICE_ALARM_RULE_LIST("/jsp/system/alarmServiceRules.jsp"),
 
-	SERVICE_ALARM_RULE_SUB("/jsp/system/alarmServiceRules.jsp")
+	SERVICE_ALARM_RULE_SUB("/jsp/system/alarmOpState.jsp")
 
 	;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/RuleManager.java
Patch:
@@ -188,7 +188,7 @@ public void ruleDelete(Payload payload) {
 		}
 	}
 
-	public void ruleSub(Payload payload, int loginId) {
+	public boolean ruleSub(Payload payload, int loginId) {
 		int subState = payload.getUserSubState();
 		int alarmRuleId = payload.getAlarmRuleId();
 
@@ -207,7 +207,9 @@ public void ruleSub(Payload payload, int loginId) {
 			}
 		} catch (DalException e) {
 			Cat.logError(e);
+			return false;
 		}
+		return true;
 	}
 
 	public void ruleUpdate(Payload payload, Model model) {

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/ScheduledManager.java
Patch:
@@ -113,7 +113,7 @@ public void scheduledReportDelete(Payload payload) {
 		}
 	}
 
-	public void scheduledReportSub(Payload payload, int loginId) {
+	public boolean scheduledReportSub(Payload payload, int loginId) {
 		int subState = payload.getUserSubState();
 		int scheduledReportId = payload.getScheduledReportId();
 
@@ -132,7 +132,9 @@ public void scheduledReportSub(Payload payload, int loginId) {
 			}
 		} catch (DalException e) {
 			Cat.logError(e);
+			return false;
 		}
+		return true;
 	}
 
 	public void scheduledReportUpdate(Payload payload, Model model) {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -59,7 +59,8 @@ public void handleInbound(Context ctx) throws ServletException, IOException {
 					return;
 				}
 			} else {
-				ctx.addError(new ErrorObject("biz.login.input").addArgument("account", account).addArgument("password", password));
+				ctx.addError(new ErrorObject("biz.login.input").addArgument("account", account).addArgument("password",
+				      password));
 			}
 		} else if (action == Action.LOGOUT) {
 			SigninContext sc = createSigninContext(ctx);

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/MachineMonthAnalyzer.java
Patch:
@@ -114,7 +114,7 @@ public DomainInfo find(Date date) {
 		}
 
 		public DomainInfo findOrCreatDomain(Date date) {
-			DomainInfo info = m_infos.get(date);
+			DomainInfo info = m_infos.get(date.getTime());
 			if (info == null) {
 				info = new DomainInfo();
 				m_infos.put(date.getTime(), info);

File: cat-home/src/test/java/com/dianping/cat/report/task/transaction/TransactionDailyGraphMergerTest.java
Patch:
@@ -36,6 +36,7 @@ public void setUp() {
 	public void testForMergerDaily() throws Exception {
 		TransactionReport report = m_meger.mergeForDaily(m_reportDomain, reports, m_domains);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerDaily.xml"), "utf-8");
+		//Assert.assertEquals(expeted, report.toString());
 
 		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
 	}
@@ -44,7 +45,7 @@ public void testForMergerDaily() throws Exception {
 	public void testForMegerGraph() throws Exception {
 		TransactionReport report = m_meger.mergeForGraph(m_reportDomain, reports);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerGraph.xml"), "utf-8");
-
+		//Assert.assertEquals(expeted, report.toString());
 		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
 	}
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -36,7 +36,7 @@ public void test() throws Exception {
 
 		int newSize = newReport.findMachine("10.1.77.193").findType("URL").getNames().size();
 
-		Assert.assertEquals(201, newSize);
+		Assert.assertEquals(199, newSize);
 
 		String url = "/topic/341739¬g&quot;";
 

File: cat-core/src/test/java/com/dianping/cat/storage/dump/LocalMessageBucketManagerTest.java
Patch:
@@ -75,6 +75,8 @@ public void testReadWrite() throws Exception {
 		}
 
 		Thread.yield();
+		
+		Thread.sleep(3000);
 
 		manager.loadMessage("source-7f000001-373203-1");
 		

File: cat-home/src/test/java/com/dianping/cat/report/task/transaction/TransactionDailyGraphMergerTest.java
Patch:
@@ -36,6 +36,7 @@ public void setUp() {
 	public void testForMergerDaily() throws Exception {
 		TransactionReport report = m_meger.mergeForDaily(m_reportDomain, reports, m_domains);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerDaily.xml"), "utf-8");
+		//Assert.assertEquals(expeted, report.toString());
 
 		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
 	}
@@ -44,7 +45,7 @@ public void testForMergerDaily() throws Exception {
 	public void testForMegerGraph() throws Exception {
 		TransactionReport report = m_meger.mergeForGraph(m_reportDomain, reports);
 		String expeted = Files.forIO().readFrom(getClass().getResourceAsStream("TransactionMergerGraph.xml"), "utf-8");
-
+		//Assert.assertEquals(expeted, report.toString());
 		Assert.assertEquals(expeted.replaceAll("\\s*", ""), report.toString().replaceAll("\\s*", ""));
 	}
 

File: cat-core/src/main/java/com/dianping/cat/configuration/ServerConfigManager.java
Patch:
@@ -209,7 +209,6 @@ public void initialize(File configFile) throws Exception {
 			m_logger.warn("CAT server is running in LOCAL mode! No HDFS or MySQL will be accessed!");
 		}
 
-		// Threads.forGroup("Cat").start(new ServerConfigReloader(configFile));
 	}
 
 	public boolean isInitialized() {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpUploader.java
Patch:
@@ -183,7 +183,9 @@ public Direction matches(File base, String path) {
 						m_logger.error(String.format("Uploading file(%s) to HDFS(%s) failed!", file, path), e);
 					} finally {
 						try {
-							fdos.close();
+							if (fdos != null) {
+								fdos.close();
+							}
 						} catch (IOException e) {
 							Cat.logError(e);
 						}

File: cat-hadoop/src/test/java/com/dianping/cat/hadoop/sql/SqlJobDataProduceTest.java
Patch:
@@ -61,7 +61,7 @@ public void test() throws Exception {
 
 					DefaultTransaction sqlInternalTran = (DefaultTransaction) sqlTran;
 					sqlInternalTran.setDurationInMillis((long) Math.pow(2, j % 12));
-					if (j % 2 == 1) {
+					if (j % 2 != 0) {
 						sqlTran.setStatus(Message.SUCCESS);
 					} else {
 						sqlTran.setStatus("Error");

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/ThresholdRuleManager.java
Patch:
@@ -196,7 +196,7 @@ private void initalizeServiceRule() {
 	}
 
 	private ThresholdTemplate mergerTemplate(ThresholdTemplate baseTemplate, String newContent) {
-		if (newContent == null || newContent.length() > 0) {
+		if (newContent != null && newContent.trim().length() > 0) {
 			try {
 				ThresholdTemplate newTemplate = DefaultSaxParser.parse(newContent);
 				ThresholdTemplateMerger merger = new ThresholdTemplateMerger(new ThresholdTemplate());
@@ -237,7 +237,7 @@ private void refreshExceptionRules() {
 						ThresholdTemplate template = mergerTemplate(baseTemplate, newContent);
 						ThresholdRule rule = addExceptionRule(alarmRule, template);
 						m_exceptionModifyTimes.put(alarmRule.getId(), alarmRule.getModifyDate());
-						
+
 						Cat.getProducer().logEvent(ALARM_RULE, "ExceptionAdd", Event.SUCCESS, rule.toString());
 					} else {
 						Date modifyDate = alarmRule.getModifyDate();

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/MachineMonthAnalyzer.java
Patch:
@@ -114,7 +114,7 @@ public DomainInfo find(Date date) {
 		}
 
 		public DomainInfo findOrCreatDomain(Date date) {
-			DomainInfo info = m_infos.get(date);
+			DomainInfo info = m_infos.get(date.getTime());
 			if (info == null) {
 				info = new DomainInfo();
 				m_infos.put(date.getTime(), info);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -93,6 +93,8 @@ public void consume(MessageTree tree) {
 		} else {
 			long now = System.currentTimeMillis();
 			SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd HH:mm:ss");
+
+			m_serverStateManager.addNetworkTimeError(1);
 			// ensure not output too much, and then run out of disk
 			if (now - m_lastTime > 1000L) {
 				m_lastTime = now;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -101,7 +101,8 @@ public List<Component> defineComponents() {
 		all.add(C(DumpAnalyzer.class).is(PER_LOOKUP) //
 		      .req(ServerConfigManager.class) //
 		      .req(DumpUploader.class)//
-		      .req(MessageBucketManager.class, LocalMessageBucketManager.ID));
+		      .req(MessageBucketManager.class, LocalMessageBucketManager.ID)
+		      .req(ServerStateManager.class));
 
 		all.add(C(DumpUploader.class) //
 		      .req(ServerConfigManager.class, FileSystemManager.class));

File: cat-core/src/main/java/com/dianping/cat/CatCoreModule.java
Patch:
@@ -7,7 +7,7 @@
 import org.jboss.netty.util.ThreadNameDeterminer;
 import org.jboss.netty.util.ThreadRenamingRunnable;
 import org.unidal.helper.Threads;
-import org.unidal.helper.Threads.AbstractThreadListener;
+import org.unidal.helper.Threads.DefaultThreadListener;
 import org.unidal.initialization.AbstractModule;
 import org.unidal.initialization.DefaultModuleContext;
 import org.unidal.initialization.Module;
@@ -67,7 +67,7 @@ public Module[] getDependencies(ModuleContext ctx) {
 		return null; // no dependencies
 	}
 
-	public final class CatThreadListener extends AbstractThreadListener {
+	public final class CatThreadListener extends DefaultThreadListener {
 		private final ModuleContext m_ctx;
 
 		private CatThreadListener(ModuleContext ctx) {

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -59,7 +59,7 @@ public void handleInbound(Context ctx) throws ServletException, IOException {
 					return;
 				}
 			} else {
-				ctx.addError(new ErrorObject("biz.login.input").setArguments("account", account, "password", password));
+				ctx.addError(new ErrorObject("biz.login.input").addArgument("account", account).addArgument("password", password));
 			}
 		} else if (action == Action.LOGOUT) {
 			SigninContext sc = createSigninContext(ctx);

File: cat-home/src/main/java/com/dianping/cat/system/page/login/Handler.java
Patch:
@@ -59,7 +59,7 @@ public void handleInbound(Context ctx) throws ServletException, IOException {
 					return;
 				}
 			} else {
-				ctx.addError(new ErrorObject("biz.login.input").setArguments("account", account, "password", password));
+				ctx.addError(new ErrorObject("biz.login.input").addArgument("account", account).addArgument("password", password));
 			}
 		} else if (action == Action.LOGOUT) {
 			SigninContext sc = createSigninContext(ctx);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -115,9 +115,9 @@ protected void process(MessageTree tree) {
 				if (duration == 0 || duration == HOUR || duration == -HOUR) {
 					m_bucketManager.storeMessage(tree, id);
 				} else {
-					m_logger.error("error timestamp,meesageId:" + tree.getMessageId() + ",id parse time "
-					      + m_sdf.format(new Date(idTime)) + " " + id.getIpAddress() + " ,message tree timestamp:"
-					      + m_sdf.format(new Date(time)) + " " + tree.getIpAddress() + " duration hours:" + duration);
+					m_logger.error("timestamp:" + tree.getMessageId() + ",id timestamp " + m_sdf.format(new Date(idTime))
+					      + " " + id.getIpAddress() + " ,tree timestamp:" + m_sdf.format(new Date(time)) + " "
+					      + tree.getIpAddress() + " duration:" + duration);
 				}
 			} catch (IOException e) {
 				m_logger.error("Error when dumping to local file system, version 2!", e);

File: cat-home/src/main/java/com/dianping/cat/report/page/health/HistoryGraphs.java
Patch:
@@ -18,8 +18,9 @@ public class HistoryGraphs {
 	public HistoryGraphItem buildHistoryGraph(String domain, Date start, Date end, String reportType, String key) {
 		if (reportType.equalsIgnoreCase("day")) {
 			return getDateFromHourlyReport(domain, start, end, key);
+		} else {
+			return getDateFromDailyReport(domain, start, end, key);
 		}
-		return getDateFromDailyReport(domain, start, end, key);
 	}
 
 	private HistoryGraphItem getDateFromDailyReport(String domain, Date start, Date end, String key) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/HistoryGraphs.java
Patch:
@@ -14,6 +14,8 @@
 import com.dianping.cat.report.page.HistoryGraphItem;
 import com.dianping.cat.report.page.transaction.Handler.DetailOrder;
 import com.dianping.cat.report.page.transaction.Handler.SummaryOrder;
+
+import org.unidal.dal.jdbc.DalNotFoundException;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.lookup.util.StringUtils;
 
@@ -138,6 +140,7 @@ public Map<String, double[]> getGraphDatas(Model model, Payload payload) {
 				Graph graph = m_graphDao.findSingalByDomainNameIpDuration(new Date(startLong), queryIp, domain,
 				      "transaction", GraphEntity.READSET_FULL);
 				graphs.add(graph);
+			} catch (DalNotFoundException e) {
 			} catch (Exception e) {
 				Cat.logError(e);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionGraphCreator.java
Patch:
@@ -113,7 +113,7 @@ public List<Graph> splitReportToGraphs(Date reportPeriod, String reportDomain, S
 			graph.setPeriod(reportPeriod);
 			graph.setType(3);
 			graph.setCreationDate(creationDate);
-			Machine machine = report.getMachines().get(ip);
+			Machine machine = report.findOrCreateMachine(ip);
 			Map<String, TransactionType> types = machine.getTypes();
 			StringBuilder detailBuilder = new StringBuilder();
 			StringBuilder summaryBuilder = new StringBuilder();

File: cat-home/src/main/java/com/dianping/cat/system/alarm/AlarmRuleCreator.java
Patch:
@@ -162,7 +162,6 @@ public void run() {
 					}
 					t.complete();
 				}
-
 			} catch (Exception e) {
 				Cat.logError(e);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/alarm/alert/AlertManager.java
Patch:
@@ -50,8 +50,8 @@ private void insert(AlertInfo info, int type, boolean sendResult) {
 		record.setTitle(info.getTitle());
 		record.setRuleId(info.getRuleId());
 		record.setReceivers(info.getMails().toString());
-		if (sendResult) {
 
+		if (sendResult) {
 			record.setStatus(1);
 		} else {
 			record.setStatus(0);
@@ -95,7 +95,7 @@ public void run() {
 						} else if (alertType == AlertInfo.SMS_TYPE) {
 							List<String> phones = entity.getPhones();
 
-							sendResult = m_mailSms.sendSMS(content, phones);
+							sendResult = m_mailSms.sendSMS(title + " " + content, phones);
 						}
 
 						if (alarmType.equals(AlertInfo.EXCEPTION)) {

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ThresholdAlertListener.java
Patch:
@@ -154,14 +154,13 @@ public void onEvent(Event event) {
 				}
 				if (type.equalsIgnoreCase(AlertInfo.SMS)) {
 					List<String> emails = m_ruleManager.queryUserMailsByRuleId(meta.getRuleId());
-					AlertInfo emailsInfo = buildAlertInfo(meta, title, content, ruleType, emails);
+					AlertInfo emailsInfo = buildAlertInfo(meta, title + "[SMS]", content, ruleType, emails);
 
 					emailsInfo.setAlertType(AlertInfo.EMAIL_TYPE);
 					m_alertManager.addAlarmInfo(emailsInfo);
-					
 
 					List<String> address = m_ruleManager.queryUserPhonesByRuleId(meta.getRuleId());
-					AlertInfo info = buildAlertInfo(meta, title, title, ruleType, address);
+					AlertInfo info = buildAlertInfo(meta, title, content, ruleType, address);
 
 					info.setAlertType(AlertInfo.SMS_TYPE);
 					m_alertManager.addAlarmInfo(info);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -115,9 +115,9 @@ protected void process(MessageTree tree) {
 				if (duration == 0 || duration == HOUR || duration == -HOUR) {
 					m_bucketManager.storeMessage(tree, id);
 				} else {
-					m_logger.error("error timestamp,meesageId:" + tree.getMessageId() + ",id parse time "
-					      + m_sdf.format(new Date(idTime)) + " " + id.getIpAddress() + " ,message tree timestamp:"
-					      + m_sdf.format(new Date(time)) + " " + tree.getIpAddress() + " duration hours:" + duration);
+					m_logger.error("timestamp:" + tree.getMessageId() + ",id timestamp " + m_sdf.format(new Date(idTime))
+					      + " " + id.getIpAddress() + " ,tree timestamp:" + m_sdf.format(new Date(time)) + " "
+					      + tree.getIpAddress() + " duration:" + duration);
 				}
 			} catch (IOException e) {
 				m_logger.error("Error when dumping to local file system, version 2!", e);

File: cat-home/src/main/java/com/dianping/cat/report/page/health/HistoryGraphs.java
Patch:
@@ -18,8 +18,9 @@ public class HistoryGraphs {
 	public HistoryGraphItem buildHistoryGraph(String domain, Date start, Date end, String reportType, String key) {
 		if (reportType.equalsIgnoreCase("day")) {
 			return getDateFromHourlyReport(domain, start, end, key);
+		} else {
+			return getDateFromDailyReport(domain, start, end, key);
 		}
-		return getDateFromDailyReport(domain, start, end, key);
 	}
 
 	private HistoryGraphItem getDateFromDailyReport(String domain, Date start, Date end, String key) {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/HistoryGraphs.java
Patch:
@@ -14,6 +14,8 @@
 import com.dianping.cat.report.page.HistoryGraphItem;
 import com.dianping.cat.report.page.transaction.Handler.DetailOrder;
 import com.dianping.cat.report.page.transaction.Handler.SummaryOrder;
+
+import org.unidal.dal.jdbc.DalNotFoundException;
 import org.unidal.lookup.annotation.Inject;
 import org.unidal.lookup.util.StringUtils;
 
@@ -138,6 +140,7 @@ public Map<String, double[]> getGraphDatas(Model model, Payload payload) {
 				Graph graph = m_graphDao.findSingalByDomainNameIpDuration(new Date(startLong), queryIp, domain,
 				      "transaction", GraphEntity.READSET_FULL);
 				graphs.add(graph);
+			} catch (DalNotFoundException e) {
 			} catch (Exception e) {
 				Cat.logError(e);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/task/transaction/TransactionGraphCreator.java
Patch:
@@ -113,7 +113,7 @@ public List<Graph> splitReportToGraphs(Date reportPeriod, String reportDomain, S
 			graph.setPeriod(reportPeriod);
 			graph.setType(3);
 			graph.setCreationDate(creationDate);
-			Machine machine = report.getMachines().get(ip);
+			Machine machine = report.findOrCreateMachine(ip);
 			Map<String, TransactionType> types = machine.getTypes();
 			StringBuilder detailBuilder = new StringBuilder();
 			StringBuilder summaryBuilder = new StringBuilder();

File: cat-home/src/main/java/com/dianping/cat/system/alarm/AlarmRuleCreator.java
Patch:
@@ -162,7 +162,6 @@ public void run() {
 					}
 					t.complete();
 				}
-
 			} catch (Exception e) {
 				Cat.logError(e);
 			}

File: cat-home/src/main/java/com/dianping/cat/system/alarm/alert/AlertManager.java
Patch:
@@ -50,8 +50,8 @@ private void insert(AlertInfo info, int type, boolean sendResult) {
 		record.setTitle(info.getTitle());
 		record.setRuleId(info.getRuleId());
 		record.setReceivers(info.getMails().toString());
-		if (sendResult) {
 
+		if (sendResult) {
 			record.setStatus(1);
 		} else {
 			record.setStatus(0);
@@ -95,7 +95,7 @@ public void run() {
 						} else if (alertType == AlertInfo.SMS_TYPE) {
 							List<String> phones = entity.getPhones();
 
-							sendResult = m_mailSms.sendSMS(content, phones);
+							sendResult = m_mailSms.sendSMS(title + " " + content, phones);
 						}
 
 						if (alarmType.equals(AlertInfo.EXCEPTION)) {

File: cat-home/src/main/java/com/dianping/cat/system/alarm/threshold/listener/ThresholdAlertListener.java
Patch:
@@ -154,14 +154,13 @@ public void onEvent(Event event) {
 				}
 				if (type.equalsIgnoreCase(AlertInfo.SMS)) {
 					List<String> emails = m_ruleManager.queryUserMailsByRuleId(meta.getRuleId());
-					AlertInfo emailsInfo = buildAlertInfo(meta, title, content, ruleType, emails);
+					AlertInfo emailsInfo = buildAlertInfo(meta, title + "[SMS]", content, ruleType, emails);
 
 					emailsInfo.setAlertType(AlertInfo.EMAIL_TYPE);
 					m_alertManager.addAlarmInfo(emailsInfo);
-					
 
 					List<String> address = m_ruleManager.queryUserPhonesByRuleId(meta.getRuleId());
-					AlertInfo info = buildAlertInfo(meta, title, title, ruleType, address);
+					AlertInfo info = buildAlertInfo(meta, title, content, ruleType, address);
 
 					info.setAlertType(AlertInfo.SMS_TYPE);
 					m_alertManager.addAlarmInfo(info);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/cross/CrossAnalyzer.java
Patch:
@@ -149,7 +149,7 @@ public boolean isIp(String ip) {
 		// }
 		// } catch (Exception e) {
 		// //ignore
-		// }
+		// } 
 		try {
 			char first = ip.charAt(0);
 			char next = ip.charAt(1);

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -130,7 +130,7 @@ void closeIdleBuckets() throws IOException {
 			for (Map.Entry<String, LocalMessageBucket> e : m_buckets.entrySet()) {
 				LocalMessageBucket bucket = e.getValue();
 
-				if (now - bucket.getLastAccessTime() > 2 * hour) {
+				if (now - bucket.getLastAccessTime() > 4 * hour) {
 					Cat.getProducer().logEvent("Bucket", "Close.Abnormal", Event.SUCCESS, e.getKey());
 					m_logger.warn("close bucket abnormal " + e.getKey());
 					bucket.close();

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -247,7 +247,7 @@ private void moveOldMessages() {
 			@Override
 			public Direction matches(File base, String path) {
 				if (new File(base, path).isFile()) {
-					if (path.indexOf(".idx") == 0 && shouldMove(path)) {
+					if (path.indexOf(".idx") == -1 && shouldMove(path)) {
 						paths.add(path);
 					}
 				}
@@ -516,8 +516,8 @@ public void run() {
 							}
 						}
 						m_success++;
-						if (m_success % 10000 == 0) {
-							m_logger.info("Block Dump lazy " + m_messageBlocks.size());
+						if (m_success % 1000 == 0) {
+							m_logger.info("block queue size " + m_messageBlocks.size());
 						}
 					}
 				}

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -150,8 +150,7 @@ public void run() {
 						t.complete();
 					}
 				} else {
-					Event t = Cat.newEvent("ScheduledReport", "SendNot");
-					t.setStatus(Event.SUCCESS);
+					Cat.getProducer().logEvent("ScheduledReport", "SendNot", Event.SUCCESS, null);
 				}
 			} catch (Exception e) {
 				Cat.logError(e);
@@ -163,7 +162,6 @@ public void run() {
 				active = false;
 			}
 		}
-
 	}
 
 	@Override

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -38,7 +38,7 @@ public void test() throws Exception {
 
 		Assert.assertEquals(201, newSize);
 
-		String url = "/topic/341739¬g&quot;";
+		String url = "/topic/341739¬g&quot;";
 
 		size = url.length();
 		for (int i = 0; i < size; i++) {

File: cat-home/src/main/java/com/dianping/cat/report/page/dashboard/Handler.java
Patch:
@@ -191,6 +191,9 @@ private Map<String, String> getBaseInfoByDomianAndIp(String domain, String ip) {
 
 		TransactionReport transactionReport = getTransactionHourlyReport(domain, ip, null);
 
+		if(transactionReport==null){
+			return data;
+		}
 		Machine transactionMachine = transactionReport.getMachines().get(ip);
 		if (transactionMachine != null) {
 			Collection<TransactionType> types = transactionMachine.getTypes().values();

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketReceiver.java
Patch:
@@ -240,11 +240,11 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent event) {
 			} else {
 				m_process++;
 				int flag = m_process % CatConstants.SUCCESS_COUNT;
-				
+
 				if (flag == 0) {
 					m_serverStateManager.addMessageTotal(CatConstants.SUCCESS_COUNT);
 
-					if (flag % CatConstants.SUCCESS_COUNT == 0) {
+					if (m_process % (CatConstants.SUCCESS_COUNT * 1000) == 0) {
 						m_logger.info("The server processes message number " + m_process);
 					}
 				}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/handler/LongExecutionHandler.java
Patch:
@@ -23,7 +23,7 @@ public class LongExecutionHandler extends Handler implements Initializable {
 
 	private int m_defaultCacheThreshold = 10;
 
-	private int[] m_defaultLongServiceDuration = { 50, 100, 200 };
+	private int[] m_defaultLongServiceDuration = { 50, 200, 1000, 2000,5000 };
 
 	private int[] m_defaultLongSqlDuration = { 100, 500, 1000, 2000 };
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -3,11 +3,10 @@
 import junit.framework.Assert;
 
 import org.junit.Test;
+import org.unidal.helper.Files;
 
-import com.dianping.cat.consumer.transaction.TransactionAnalyzer.TransactionReportFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultDomParser;
-import org.unidal.helper.Files;
 
 public class TransactionReportFilterTest {
 	@Test
@@ -16,7 +15,7 @@ public void test() throws Exception {
 		String source = Files.forIO().readFrom(getClass().getResourceAsStream("transaction.xml"), "utf-8");
 		TransactionReport report = parser.parse(source);
 
-		TransactionReportFilter f1 = new TransactionReportFilter(1);
+		TransactionReportUrlFilter f1 = new TransactionReportUrlFilter();
 		String expected1 = Files.forIO().readFrom(getClass().getResourceAsStream("transactionFilter.xml"), "utf-8");
 		report.accept(f1);
 

File: cat-core/src/main/java/com/dianping/cat/storage/dump/LocalMessageBucketManager.java
Patch:
@@ -367,7 +367,7 @@ private void logState(final MessageTree tree) {
 			      - ((Transaction) message).getDurationInMillis();
 			m_serverStateManager.addProcessDelay(delay);
 		}
-		if (m_total % (CatConstants.SUCCESS_COUNT * 10) == 0) {
+		if (m_total % (CatConstants.SUCCESS_COUNT * 1000) == 0) {
 			m_logger.info("Dump message number: " + m_total + " Size:" + m_totalSize * 1.0 / 1024 / 1024 / 1024 + "GB");
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Handler.java
Patch:
@@ -148,8 +148,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			hostInfo.visitCrossReport(hostReport);
 			model.setReport(hostReport);
 			model.setHostInfo(hostInfo);
-			
-			
 			break;
 		case HOURLY_METHOD:
 			CrossReport methodReport = getHourlyReport(payload);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/TransactionReportMerger.java
Patch:
@@ -199,6 +199,7 @@ public void visitTransactionReport(TransactionReport transactionReport) {
 		report.getIps().addAll(transactionReport.getIps());
 	}
 
+
 	@Override
 	public void visitType(TransactionType type) {
 		if (!m_allName || m_allName && m_type.equals(type.getId())) {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportFilterTest.java
Patch:
@@ -3,11 +3,10 @@
 import junit.framework.Assert;
 
 import org.junit.Test;
+import org.unidal.helper.Files;
 
-import com.dianping.cat.consumer.transaction.TransactionAnalyzer.TransactionReportFilter;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.transform.DefaultDomParser;
-import org.unidal.helper.Files;
 
 public class TransactionReportFilterTest {
 	@Test
@@ -16,7 +15,7 @@ public void test() throws Exception {
 		String source = Files.forIO().readFrom(getClass().getResourceAsStream("transaction.xml"), "utf-8");
 		TransactionReport report = parser.parse(source);
 
-		TransactionReportFilter f1 = new TransactionReportFilter(1);
+		TransactionReportUrlFilter f1 = new TransactionReportUrlFilter();
 		String expected1 = Files.forIO().readFrom(getClass().getResourceAsStream("transactionFilter.xml"), "utf-8");
 		report.accept(f1);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/TransactionReportMerger.java
Patch:
@@ -199,6 +199,7 @@ public void visitTransactionReport(TransactionReport transactionReport) {
 		report.getIps().addAll(transactionReport.getIps());
 	}
 
+
 	@Override
 	public void visitType(TransactionType type) {
 		if (!m_allName || m_allName && m_type.equals(type.getId())) {

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -304,6 +304,9 @@ private ProblemReport showSummarizeReport(Model model, Payload payload) {
 		Date end = payload.getHistoryEndDate();
 		ProblemReport problemReport = m_reportService.queryProblemReport(domain, start, end);
 		
+		if(problemReport==null){
+			
+		}
 		return problemReport;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/service/MonthReportCache.java
Patch:
@@ -110,7 +110,7 @@ private void reload() {
 			Date start = TimeUtil.getCurrentMonth();
 			Date end = TimeUtil.getCurrentDay();
 			m_end = end.getTime();
-
+			
 			Set<String> domains = m_hourReportService.queryAllDomainNames(start, end, "transaction");
 
 			for (String domain : domains) {

File: cat-home/src/test/java/com/dianping/cat/report/analyzer/ArchMonthAnalyzer.java
Patch:
@@ -32,7 +32,6 @@
 import com.dianping.cat.home.dal.report.DailyreportDao;
 import com.dianping.cat.home.dal.report.DailyreportEntity;
 import com.dianping.cat.report.task.thread.TaskProducer;
-import com.site.helper.Threads;
 
 @RunWith(JUnit4.class)
 public class ArchMonthAnalyzer extends ComponentTestCase {

File: cat-home/src/main/java/com/dianping/cat/report/service/MonthReportCache.java
Patch:
@@ -116,7 +116,7 @@ private void reload() {
 				m_healthReports.put(domain, m_dailyReportService.queryHealthReport(domain, start, end));
 			}
 
-			Set<String> databases = m_hourReportService.queryAllDatabaseNames(start, start, "database");
+			Set<String> databases = m_hourReportService.queryAllDatabaseNames(start, end, "database");
 
 			for (String database : databases) {
 				m_databaseRepors.put(database, m_dailyReportService.queryDatabaseReport(database, start, end));

File: cat-home/src/main/java/com/dianping/cat/system/alarm/connector/impl/ThresholdConnector.java
Patch:
@@ -16,6 +16,7 @@
 
 public class ThresholdConnector implements Connector {
 
+	public static long index = 1000;
 	@Override
 	public ThresholdDataEntity fetchAlarmData(String url) {
 		Cat.getProducer().logEvent("System", "AlarmUrl", Event.SUCCESS, url);
@@ -50,6 +51,8 @@ private ThresholdDataEntity parseContent(String content) {
 			data.setCount(Long.parseLong(count));
 
 		}
+		index +=100;
+		data.setCount(index );
 
 		String timestamp = obj.get("timestamp");
 		if (timestamp != null) {

File: cat-home/src/main/java/com/dianping/cat/system/notify/ScheduledMailTask.java
Patch:
@@ -67,7 +67,7 @@ private void insertMailLog(int reportId, String content, String title, boolean r
 		entity.setTitle(title);
 		entity.setContent(content);
 		entity.setRuleId(reportId);
-		entity.setType(2);
+		entity.setType(1);
 		entity.setReceivers(emails.toString());
 		if (result) {
 			entity.setStatus(0);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -92,6 +92,7 @@ private Period getHeartBeatInfo(Heartbeat heartbeat, long timestamp) {
 			info = new com.dianping.cat.status.model.transform.DefaultDomParser().parse(xml);
 		} catch (Exception e) {
 			Cat.logError(e);
+			Cat.getProducer().logEvent("HearbeatAnalyzer", "ErrorXml", "Error", xml);
 			return null;
 		}
 

File: cat-home/src/test/java/com/dianping/cat/demo/TestSendMessage.java
Patch:
@@ -13,6 +13,7 @@ public class TestSendMessage {
 	public void sendException() throws Exception {
 		for (int i = 0; i < 100; i++) {
 			Cat.getProducer().logError(new OutOfMemoryError());
+			Cat.getProducer().logError(new NullPointerException());
 		}
 		Thread.sleep(1000);
 	}

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/WaterfallMessageCodec.java
Patch:
@@ -169,7 +169,7 @@ protected int encodeRuler(ChannelBuffer buf, Locator locator, Ruler ruler) {
 		XmlBuilder b = new XmlBuilder();
 		StringBuilder sb = b.getResult();
 		PathBuilder p = new PathBuilder();
-		int height = 600;
+		int height = ruler.getHeight();
 
 		b.tag1("g", "id", "ruler", "font-size", "12", "text-anchor", "middle", "stroke", "black", "stroke-width", "1");
 

File: cat-home/src/main/java/com/dianping/cat/report/task/database/DatabaseReportBuilder.java
Patch:
@@ -34,10 +34,10 @@ public boolean buildDailyReport(String reportName, String reportDomain, Date rep
 
 	private Dailyreport getDailyReport(String reportName, String reportDatabase, Date reportPeriod) throws DalException {
 		Date endDate = TaskHelper.tomorrowZero(reportPeriod);
-		Set<String> databaseSet = getDatabases(reportPeriod, endDate);
+		Set<String> databases = getDatabases(reportPeriod, endDate);
 		List<Report> reports = m_reportDao.findDatabaseAllByDomainNameDuration(reportPeriod, endDate, reportDatabase,
 		      reportName, ReportEntity.READSET_FULL);
-		String content = m_databaseMerger.mergeForDaily(reportDatabase, reports, databaseSet).toString();
+		String content = m_databaseMerger.mergeForDaily(reportDatabase, reports, databases).toString();
 
 		Dailyreport report = m_dailyReportDao.createLocal();
 		report.setContent(content);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/CatDatabaseConfigurator.java
Patch:
@@ -11,7 +11,6 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceConfigurationManagerComponent("datasources.xml"));
       all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.7.43:3306/cat", "dpcom_cat", "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
       defineSimpleTableProviderComponents(all, "cat", com.dainping.cat.consumer.dal.report._INDEX.getEntityClasses());

File: cat-home/src/main/java/com/dianping/cat/build/CatDatabaseConfigurator.java
Patch:
@@ -11,7 +11,6 @@ final class CatDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceConfigurationManagerComponent("datasources.xml"));
       all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.7.43:3306/cat", "dpcom_cat", "password", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
       defineSimpleTableProviderComponents(all, "cat", com.dianping.cat.home.dal.report._INDEX.getEntityClasses());

File: cat-home/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -47,6 +47,7 @@
 import com.dianping.cat.report.task.transaction.TransactionGraphCreator;
 import com.dianping.cat.report.task.transaction.TransactionMerger;
 import com.dianping.cat.report.task.transaction.TransactionReportBuilder;
+import com.site.dal.jdbc.datasource.JdbcDataSourceConfigurationManager;
 import com.site.initialization.DefaultModuleManager;
 import com.site.initialization.Module;
 import com.site.initialization.ModuleManager;
@@ -140,6 +141,7 @@ public List<Component> defineComponents() {
 		all.addAll(new ServiceComponentConfigurator().defineComponents());
 
 		// database
+		all.add(C(JdbcDataSourceConfigurationManager.class).config(E("datasourceFile").value("/data/appdatas/cat/datasources.xml")));
 		all.addAll(new CatDatabaseConfigurator().defineComponents());
 		all.addAll(new UserDatabaseConfigurator().defineComponents());
 

File: cat-home/src/main/java/com/dianping/cat/build/UserDatabaseConfigurator.java
Patch:
@@ -11,7 +11,6 @@ final class UserDatabaseConfigurator extends AbstractJdbcResourceConfigurator {
    public List<Component> defineComponents() {
       List<Component> all = new ArrayList<Component>();
 
-      all.add(defineJdbcDataSourceConfigurationManagerComponent("datasources.xml"));
       all.add(defineJdbcDataSourceComponent("user", "com.mysql.jdbc.Driver", "jdbc:mysql://192.168.8.44:3306/hawk", "hawk", "hawk", "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 
       defineSimpleTableProviderComponents(all, "user", com.dainping.cat.home.dal.user._INDEX.getEntityClasses());

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -99,7 +99,7 @@ protected Message decodeLine(ChannelBuffer buf, DefaultTransaction parent, Stack
 		byte identifier = buf.readByte();
 		String timestamp = helper.read(buf, TAB);
 		String type = helper.read(buf, TAB);
-		String name = helper.read(buf, TAB);
+		String name = helper.readRaw(buf, TAB);
 
 		if (identifier == 'E') {
 			DefaultEvent event = new DefaultEvent(type, name);
@@ -267,7 +267,7 @@ protected int encodeLine(Message message, ChannelBuffer buf, char type, Policy p
 		count += helper.write(buf, TAB);
 		count += helper.write(buf, message.getType());
 		count += helper.write(buf, TAB);
-		count += helper.write(buf, message.getName());
+		count += helper.writeRaw(buf, message.getName());
 		count += helper.write(buf, TAB);
 
 		if (policy != Policy.WITHOUT_STATUS) {

File: cat-home/src/main/java/com/dianping/cat/build/WebComponentConfigurator.java
Patch:
@@ -4,6 +4,8 @@
 import java.util.List;
 
 import com.dianping.cat.report.ReportModule;
+import com.dianping.cat.system.SystemModule;
+
 import com.site.lookup.configuration.Component;
 import com.site.web.configuration.AbstractWebComponentsConfigurator;
 
@@ -13,7 +15,7 @@ class WebComponentConfigurator extends AbstractWebComponentsConfigurator {
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
 
-		defineModuleRegistry(all, ReportModule.class, ReportModule.class);
+		defineModuleRegistry(all, ReportModule.class, ReportModule.class, SystemModule.class);
 
 		return all;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -41,8 +41,7 @@
 
 com.dianping.cat.report.page.cache.Handler.class,
 
-com.dianping.cat.report.page.database.Handler.class,
-
+com.dianping.cat.report.page.database.Handler.class
 })
 public class ReportModule extends AbstractModule {
 

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/Action.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.dog.alarm.page.home;
+package com.dianping.cat.system.page.alarm;
 
 public enum Action implements com.site.web.mvc.Action {
 	VIEW("view");

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/JspFile.java
Patch:
@@ -1,7 +1,7 @@
-package com.dianping.dog.alarm.page.home;
+package com.dianping.cat.system.page.alarm;
 
 public enum JspFile {
-	VIEW("/jsp/alarm/home.jsp"),
+	VIEW("/jsp/system/alarm.jsp"),
 
 	;
 

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/JspViewer.java
Patch:
@@ -1,9 +1,9 @@
-package com.dianping.dog.alarm.page.home;
+package com.dianping.cat.system.page.alarm;
 
-import com.dianping.dog.alarm.AlarmPage;
+import com.dianping.cat.system.SystemPage;
 import com.site.web.mvc.view.BaseJspViewer;
 
-public class JspViewer extends BaseJspViewer<AlarmPage, Action, Context, Model> {
+public class JspViewer extends BaseJspViewer<SystemPage, Action, Context, Model> {
 	@Override
 	protected String getJspFilePath(Context ctx, Model model) {
 		Action action = model.getAction();

File: cat-home/src/main/java/com/dianping/cat/system/page/alarm/Model.java
Patch:
@@ -1,9 +1,9 @@
-package com.dianping.dog.alarm.page.home;
+package com.dianping.cat.system.page.alarm;
 
-import com.dianping.dog.alarm.AlarmPage;
+import com.dianping.cat.system.SystemPage;
 import com.site.web.mvc.ViewModel;
 
-public class Model extends ViewModel<AlarmPage, Action, Context> {
+public class Model extends ViewModel<SystemPage, Action, Context> {
 	public Model(Context ctx) {
 		super(ctx);
 	}

File: bee-engine/src/main/java/com/dianping/bee/engine/QueryService.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.sql.SQLException;
 
-
 public interface QueryService {
 	public RowSet query(String sql, Object... params) throws SQLException;
 

File: bee-engine/src/main/java/com/dianping/bee/engine/build/ComponentsConfigurator.java
Patch:
@@ -79,7 +79,7 @@ public List<Component> defineComponents() {
 		all.add(C(TableHelper.class) //
 		      .req(TableProviderManager.class));
 
-		all.add(C(RowContext.class, DefaultRowContext.class));
+		all.add(C(RowContext.class, DefaultRowContext.class).is(PER_LOOKUP));
 		all.add(C(SingleTableStatement.class).is(PER_LOOKUP)//
 		      .req(RowContext.class));
 		all.add(C(SingleTableRowFilter.class).is(PER_LOOKUP));
@@ -146,8 +146,7 @@ private void defineLogicalEvaluators(List<Component> all) {
 		all.add(C(Evaluator.class, ComparisionEqualsEvaluator.ID, ComparisionEqualsEvaluator.class));
 		all.add(C(Evaluator.class, ComparisionIsEvaluator.ID, ComparisionIsEvaluator.class));
 		all.add(C(Evaluator.class, ComparisionGreaterThanEvaluator.ID, ComparisionGreaterThanEvaluator.class));
-		all.add(C(Evaluator.class, ComparisionGreaterThanOrEqualsEvaluator.ID,
-		      ComparisionGreaterThanOrEqualsEvaluator.class));
+		all.add(C(Evaluator.class, ComparisionGreaterThanOrEqualsEvaluator.ID, ComparisionGreaterThanOrEqualsEvaluator.class));
 		all.add(C(Evaluator.class, ComparisionLessThanEvaluator.ID, ComparisionLessThanEvaluator.class));
 		all.add(C(Evaluator.class, ComparisionLessThanOrEqualsEvaluator.ID, ComparisionLessThanOrEqualsEvaluator.class));
 

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/DefaultRowListener.java
Patch:
@@ -87,7 +87,7 @@ public void onEnd(RowContext ctx) {
 
 				if (field.isAggregator(ctx)) {
 					m_values[i] = field.getAggregatedValue();
-					field.reset();
+					field.reset(ctx);
 				}
 
 				cells[i] = new DefaultCell(field, m_values[i]);

File: bee-engine/src/main/java/com/dianping/bee/server/SimpleServerConnectionFactory.java
Patch:
@@ -35,9 +35,7 @@ public class SimpleServerConnectionFactory extends FrontendConnectionFactory {
 	protected FrontendConnection getConnection(SocketChannel channel) {
 		LOGGER.info("getConnection : " + channel);
 		SimpleServerConnection c = new SimpleServerConnection(channel);
-		FrontendQueryHandler queryHandler = getQueryHandler(c); // TODO use
-		                                                        // another one for
-		                                                        // test
+		FrontendQueryHandler queryHandler = getQueryHandler(c); 
 
 		c.setSessionManager(getSessionManager());
 		c.setQueryHandler(queryHandler);

File: cat-core/src/main/java/com/dianping/cat/build/CodecComponentConfigurator.java
Patch:
@@ -4,7 +4,6 @@
 import java.util.List;
 
 import com.dianping.cat.message.spi.MessageCodec;
-import com.dianping.cat.message.spi.MessagePathBuilder;
 import com.dianping.cat.message.spi.codec.BufferWriter;
 import com.dianping.cat.message.spi.codec.EscapingBufferWriter;
 import com.dianping.cat.message.spi.codec.HtmlEncodingBufferWriter;
@@ -24,7 +23,6 @@ public List<Component> defineComponents() {
 		all.add(C(MessageCodec.class, PlainTextMessageCodec.ID, PlainTextMessageCodec.class) //
 		      .req(BufferWriter.class, EscapingBufferWriter.ID));
 		all.add(C(MessageCodec.class, HtmlMessageCodec.ID, HtmlMessageCodec.class) //
-		      .req(MessagePathBuilder.class) //
 		      .req(BufferWriter.class, HtmlEncodingBufferWriter.ID));
 
 		return all;

File: bee-engine/src/main/java/com/dianping/bee/engine/evaluator/function/CountEvaluator.java
Patch:
@@ -4,15 +4,15 @@
 import com.dianping.bee.engine.evaluator.AbstractEvaluator;
 import com.dianping.bee.engine.spi.RowContext;
 
-public class CountEvaluator extends AbstractEvaluator<Count, Long> {
+public class CountEvaluator extends AbstractEvaluator<Count, Number> {
 	public static final String ID = Count.class.getName();
 
 	private long m_count;
 
 	@Override
-	public Long evaluate(RowContext ctx, Count expr) {
+	public Number evaluate(RowContext ctx, Count expr) {
 		m_count++;
-		return 0L;
+		return 0;
 	}
 
 	@Override

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/Statement.java
Patch:
@@ -9,6 +9,8 @@ public interface Statement {
 	public int getColumnSize();
 
 	public RowSet query();
-	
+
+	public String getSQL();
+
 	public IndexMeta getIndexMeta();
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/DefaultRowListener.java
Patch:
@@ -35,7 +35,7 @@ public RowSet getRowSet() {
 	@Override
 	public void onRow(RowContext ctx) {
 		if (m_filter != null && !m_filter.filter(ctx)) {
- 			return;
+			return;
 		}
 
 		int len = m_fields.length;
@@ -87,6 +87,7 @@ public void onEnd(RowContext ctx) {
 
 				if (field.isAggregator(ctx)) {
 					m_values[i] = field.getAggregatedValue();
+					field.reset();
 				}
 
 				cells[i] = new DefaultCell(field, m_values[i]);

File: bee-engine/src/test/java/com/dianping/bee/engine/TestServer.java
Patch:
@@ -12,13 +12,12 @@
  * accordance with the terms of the license agreement you entered into
  * with dianping.com.
  */
-package com.dianping.bee.jdbc;
+package com.dianping.bee.engine;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
 
-import com.dianping.bee.engine.TestEnvConfigurator;
 import com.dianping.bee.server.SimpleServer;
 import com.site.lookup.ComponentTestCase;
 

File: dog-home/src/main/java/com/dianping/dog/alarm/parser/ProblemDataParser.java
Patch:
@@ -32,8 +32,8 @@ public <String> RowData parse(ConnectEntity conEntity,String context) {
    public RowData mergeRowData(RowData newData, RowData oldData) {
 		RowData rowData = newData.copy();
 		rowData.setTimeStamp(newData.getTimeStamp());
-		long nTotalCount = newData.getData("totalCount");
-		long oTotalCount = oldData.getData("totalCount");
+		long nTotalCount = (Long)newData.getData("totalCount");
+		long oTotalCount = (Long)oldData.getData("totalCount");
 		rowData.addData("totalCount", nTotalCount - oTotalCount);
 		return rowData;
    } 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/logview/LogviewUploader.java
Patch:
@@ -3,7 +3,6 @@
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
@@ -136,8 +135,7 @@ private void upload(long timestamp, LocalLogviewBucket bucket) throws DalExcepti
 
 		MessageProducer cat = Cat.getProducer();
 		String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
-		String ts = new SimpleDateFormat("mmss").format(new Date());
-		Transaction root = cat.newTransaction("System", "Logview-" + ip + "-" + ts);
+		Transaction root = cat.newTransaction("System", "Logview-" + ip);
 		int count = 0;
 
 		root.addData("logview", bucket.getLogicalPath());

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -103,6 +103,7 @@ public long getCurrentDate() {
 	public long getCurrentStartDay() {
 		long timestamp = System.currentTimeMillis();
 		Calendar cal = Calendar.getInstance();
+
 		cal.setTime(new Date(timestamp));
 		cal.set(Calendar.HOUR_OF_DAY, 0);
 		return cal.getTimeInMillis();
@@ -252,6 +253,7 @@ public void setYesterdayDefault() {
 		if ("day".equals(m_reportType)) {
 			Calendar today = Calendar.getInstance();
 			long current = getCurrentDate();
+
 			today.setTimeInMillis(current);
 			today.set(Calendar.HOUR_OF_DAY, 0);
 			if (m_date == today.getTimeInMillis()) {

File: cat-home/src/main/java/com/dianping/cat/report/page/health/Handler.java
Patch:
@@ -131,6 +131,7 @@ public void normalize(Model model, Payload payload) {
 		} else {
 			model.setLongDate(payload.getDate());
 		}
+		
 		if (action == Action.HISTORY_REPORT) {
 			String type = payload.getReportType();
 			if (type == null || type.length() == 0) {

File: cat-home/src/main/java/com/dianping/cat/report/task/health/HealthReportBuilder.java
Patch:
@@ -73,7 +73,7 @@ public boolean buildDailyReport(String reportName, String reportDomain, Date rep
 		report.setName(reportName);
 		report.setPeriod(reportPeriod);
 		report.setType(1);
-		return false;
+		return true;
 	}
 
 	private HealthReport buildHealthHourlyReport(String reportDomain, Date reportPeriod) throws DalException,
@@ -103,10 +103,9 @@ public boolean buildHourReport(String reportName, String reportDomain, Date repo
 
 			Report r = m_reportDao.createLocal();
 			String xml = builder.buildXml(report);
-			String domain = report.getDomain();
 
 			r.setName("health");
-			r.setDomain(domain);
+			r.setDomain(reportDomain);
 			r.setPeriod(reportPeriod);
 			r.setIp(ip);
 			r.setType(1);

File: cat-home/src/main/java/com/dianping/cat/report/task/health/HealthServiceCollector.java
Patch:
@@ -66,6 +66,7 @@ private void addCallinfo(TypeDetailInfo info) {
 
 	public synchronized void buildCrossInfo(long time) {
 		if (m_timestamp != time) {
+			m_timestamp = time;
 			m_serviceInfos.clear();
 			Set<String> domains = queryAllDomains(new Date(time));
 			for (String domain : domains) {

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/DefaultRowListener.java
Patch:
@@ -34,8 +34,8 @@ public RowSet getRowSet() {
 
 	@Override
 	public void onRow(RowContext ctx) {
-		if (m_filter == null || m_filter.filter(ctx)) {
-			return;
+		if (m_filter != null && !m_filter.filter(ctx)) {
+ 			return;
 		}
 
 		int len = m_fields.length;

File: bee-engine/src/test/java/com/dianping/bee/engine/AllTests.java
Patch:
@@ -13,7 +13,9 @@
 
 QueryServiceTest.class,
 
-EvaluatorTest.class,
+LogicEvaluatorTest.class,
+
+FunctionEvaluatorTest.class,
 
 SqlParsersTest.class,
 

File: bee-engine/src/test/java/com/dianping/bee/engine/QueryServiceTest.java
Patch:
@@ -17,18 +17,18 @@ protected String getCustomConfigurationName() {
 	@Test
 	public void testStatement() throws Exception {
 		String database = "cat";
-		String sql = "select type, sum(failures),sum(1) from transaction where domain='MobileApi' and starttime='20120822'";
+		String sql = "select type, failures from transaction where domain='MobileApi' and starttime='20120822'";
 		QueryService service = lookup(QueryService.class);
 		service.use(database);
 		RowSet rs = service.query(sql);
-System.out.println(rs);
+		System.out.println(rs);
 		Assert.assertEquals(5, rs.getRowSize());
 	}
 
 	@Test
 	public void testPreparedStatement() throws Exception {
 		String database = "cat";
-		String sql = "select type, sum(failures) from transaction where domain=? and starttime=?";
+		String sql = "select type, failures from transaction where domain=? and starttime=?";
 		QueryService service = lookup(QueryService.class);
 		service.use(database);
 		RowSet rs = service.query(sql, "MobileApi", "20120822");

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/SelectHandler.java
Patch:
@@ -154,7 +154,9 @@ private void selectStatement(ServerConnection c, String sql) throws SQLSyntaxErr
 
 		ctx.writeEOF();
 
-		for (int rowIndex = 0; rowIndex < rowset.getRowSize(); rowIndex++) {
+		int rows = rowset.getRowSize();
+		
+		for (int rowIndex = 0; rowIndex < rows; rowIndex++) {
 			Row row = rowset.getRow(rowIndex);
 			ctx.writeRow(row);
 		}

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/SingleTableStatement.java
Patch:
@@ -67,12 +67,14 @@ public RowSet query() {
 		ctx.setAttributes(m_attributes);
 
 		try {
+			ctx.beforeQuery();
 			index.query(ctx);
 
 			return listener.getRowSet();
 		} catch (Exception e) {
 			throw new RuntimeException(e);
 		} finally {
+			ctx.afterQuery();
 			release(index);
 		}
 	}

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/SingleTableStatementBuilder.java
Patch:
@@ -13,7 +13,6 @@
 import com.alibaba.cobar.parser.ast.expression.comparison.ComparisionEqualsExpression;
 import com.alibaba.cobar.parser.ast.expression.primary.Identifier;
 import com.alibaba.cobar.parser.ast.expression.primary.Wildcard;
-import com.alibaba.cobar.parser.ast.expression.primary.function.FunctionExpression;
 import com.alibaba.cobar.parser.ast.expression.primary.literal.LiteralNumber;
 import com.alibaba.cobar.parser.ast.expression.primary.literal.LiteralString;
 import com.alibaba.cobar.parser.ast.fragment.tableref.TableRefFactor;

File: bee-engine/src/main/java/com/dianping/bee/server/mysql/ColumnsIndexer.java
Patch:
@@ -138,6 +138,6 @@ private void applyRow(RowContext ctx, DatabaseProvider database, TableProvider t
 			}
 		}
 
-		ctx.apply();
+		ctx.applyRow();
 	}
 }

File: bee-engine/src/main/java/com/dianping/bee/server/mysql/SchemataIndexer.java
Patch:
@@ -62,6 +62,6 @@ private void applyRow(RowContext ctx, DatabaseProvider database) {
 			}
 		}
 
-		ctx.apply();
+		ctx.applyRow();
 	}
 }

File: bee-engine/src/main/java/com/dianping/bee/server/mysql/TablesIndexer.java
Patch:
@@ -112,6 +112,6 @@ private void applyRow(RowContext ctx, DatabaseProvider database, TableProvider t
 			}
 		}
 
-		ctx.apply();
+		ctx.applyRow();
 	}
 }

File: bee-engine/src/test/java/com/dianping/bee/jdbc/AllJDBCTests.java
Patch:
@@ -40,12 +40,12 @@
 
 InformationSchemaTest.class,
 
-DCLtatementTest.class,
+DCLStatementTest.class,
 
 JDBCMetaTest.class
 
 })
-public class AllInOneJDBCTests {
+public class AllJDBCTests {
 	private static SimpleServer server;
 
 	@AfterClass

File: bee-engine/src/test/java/com/dianping/bee/jdbc/DCLStatementTest.java
Patch:
@@ -25,7 +25,7 @@
 /**
  * @author <a href="mailto:yiming.liu@dianping.com">Yiming Liu</a>
  */
-public class DCLtatementTest {
+public class DCLStatementTest {
 
 	@Test
 	public void testDesc() throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException {

File: bee-engine/src/test/java/com/dianping/bee/testdb/TransactionIndexer.java
Patch:
@@ -80,7 +80,7 @@ private void applyRow(RowContext ctx, Object[] row) {
 			}
 		}
 
-		ctx.apply();
+		ctx.applyRow();
 	}
 
 	static class TransactionSampleData {
@@ -106,9 +106,9 @@ static class TransactionSampleData {
 						if (typeName.equals("String")) {
 							sampleData[i][j] = RandomStringUtils.randomAlphabetic(5);
 						} else if (columns[j].getType().getSimpleName().equals("Integer")) {
-							sampleData[i][j] = RandomStringUtils.randomNumeric(3);
+							sampleData[i][j] = Integer.parseInt(RandomStringUtils.randomNumeric(3));
 						} else if (columns[j].getType().getSimpleName().equals("Long")) {
-							sampleData[i][j] = RandomStringUtils.randomNumeric(6);
+							sampleData[i][j] = Long.parseLong(RandomStringUtils.randomNumeric(6));
 						} else {
 							sampleData[i][j] = RandomStringUtils.randomAlphanumeric(5);
 						}

File: cat-data/src/main/java/com/dianping/cat/data/transaction/TransactionIndexer.java
Patch:
@@ -84,7 +84,7 @@ private void applyRow(RowContext ctx, TransactionReport report, Machine machine,
 			}
 		}
 
-		ctx.apply();
+		ctx.applyRow();
 	}
 
 	private TransactionReport getHourlyReport(RowContext ctx) throws IOException, SAXException {

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/SelectField.java
Patch:
@@ -43,7 +43,7 @@ private String asString(Expression expr) {
 	@SuppressWarnings("unchecked")
 	public Object evaluate(RowContext ctx, int colIndex) {
 		if (m_column != null) {
-			return ctx.getColumn(colIndex);
+			return ctx.getValue(colIndex);
 		} else if (m_expr != null) {
 			Evaluator<Expression, Object> evaluator = (Evaluator<Expression, Object>) ctx.getEvaluator(m_expr.getClass().getName());
 			Object value = evaluator.evaluate(ctx, m_expr);

File: bee-engine/src/main/java/com/dianping/bee/engine/evaluator/Evaluator.java
Patch:
@@ -5,4 +5,6 @@
 
 public interface Evaluator<S extends Expression, T> {
 	public T evaluate(RowContext ctx, S expr);
+
+	public Class<?> getResultType(S expr);
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/helper/SqlWildcard.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * @author <a href="mailto:yiming.liu@dianping.com">Yiming Liu</a>
  */
-public class SQLRegex {
+public class SqlWildcard {
 
 	/**
 	 * Support ? and %

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/DescHandler.java
Patch:
@@ -9,6 +9,7 @@
 import com.alibaba.cobar.Fields;
 import com.alibaba.cobar.config.model.SchemaConfig;
 import com.alibaba.cobar.server.ServerConnection;
+import com.dianping.bee.engine.helper.SqlParsers;
 import com.dianping.bee.engine.helper.TypeUtils;
 import com.dianping.bee.engine.spi.ColumnMeta;
 import com.dianping.bee.engine.spi.TableProvider;
@@ -24,7 +25,7 @@ public class DescHandler extends AbstractHandler {
 
 	@Override
 	protected void handle(ServerConnection c, List<String> parts) {
-		String tableName = unescape(parts.get(0));
+		String tableName = SqlParsers.forEscape().unescape(parts.get(0));
 		LOGGER.info("DESC : " + tableName);
 
 		String db = c.getSchema();

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/UseHandler.java
Patch:
@@ -8,14 +8,15 @@
 import com.alibaba.cobar.ErrorCode;
 import com.alibaba.cobar.net.handler.FrontendPrivileges;
 import com.alibaba.cobar.server.ServerConnection;
+import com.dianping.bee.engine.helper.SqlParsers;
 
 public class UseHandler extends AbstractHandler {
 
 	private static final Logger LOGGER = Logger.getLogger(UseHandler.class);
 
 	@Override
 	protected void handle(ServerConnection c, List<String> parts) {
-		String schema = unescape(parts.get(0));
+		String schema = SqlParsers.forEscape().unescape(parts.get(0));
 		LOGGER.info("use : " + schema);
 		// 检查schema的有效性
 		FrontendPrivileges privileges = c.getPrivileges();

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/SelectField.java
Patch:
@@ -21,9 +21,9 @@ public SelectField(ColumnMeta column, String name) {
 		m_type = column.getType();
 	}
 
-	public SelectField(Expression expr, String alias) {
+	public SelectField(Expression expr, String alias, Class<?> type) {
 		m_expr = expr;
-		m_type = String.class; // TODO fix it
+		m_type = type;
 
 		if (alias != null) {
 			m_name = alias;

File: bee-engine/src/test/java/com/dianping/bee/engine/EvaluatorTest.java
Patch:
@@ -28,7 +28,7 @@
 public class EvaluatorTest extends ComponentTestCase {
 
 	protected String getCustomConfigurationName() {
-		return TestEnvConfig.class.getName().replace('.', '/') + ".xml";
+		return TestEnvConfigurator.class.getName().replace('.', '/') + ".xml";
 	}
 
 	@Test

File: bee-engine/src/test/java/com/dianping/bee/engine/ExceptionTest.java
Patch:
@@ -29,7 +29,7 @@
 @RunWith(JUnit4.class)
 public class ExceptionTest extends ComponentTestCase {
 	protected String getCustomConfigurationName() {
-		return TestEnvConfig.class.getName().replace('.', '/') + ".xml";
+		return TestEnvConfigurator.class.getName().replace('.', '/') + ".xml";
 	}
 
 	@Test

File: bee-engine/src/test/java/com/dianping/bee/engine/QueryServiceTest.java
Patch:
@@ -11,7 +11,7 @@
 public class QueryServiceTest extends ComponentTestCase {
 
 	protected String getCustomConfigurationName() {
-		return TestEnvConfig.class.getName().replace('.', '/') + ".xml";
+		return TestEnvConfigurator.class.getName().replace('.', '/') + ".xml";
 	}
 
 	@Test

File: bee-engine/src/test/java/com/dianping/bee/engine/TestEnvConfigurator.java
Patch:
@@ -11,9 +11,9 @@
 import com.site.lookup.configuration.AbstractResourceConfigurator;
 import com.site.lookup.configuration.Component;
 
-public class TestEnvConfig extends AbstractResourceConfigurator {
+public class TestEnvConfigurator extends AbstractResourceConfigurator {
 	public static void main(String[] args) {
-		generatePlexusComponentsXmlFile(new TestEnvConfig());
+		generatePlexusComponentsXmlFile(new TestEnvConfigurator());
 	}
 
 	@Override
@@ -29,6 +29,6 @@ public List<Component> defineComponents() {
 
 	@Override
 	protected File getConfigurationFile() {
-		return new File("src/test/resources/" + TestEnvConfig.class.getName().replace('.', '/') + ".xml");
+		return new File("src/test/resources/" + TestEnvConfigurator.class.getName().replace('.', '/') + ".xml");
 	}
 }

File: bee-engine/src/test/java/com/dianping/bee/engine/helper/SQLWildcardTest.java
Patch:
@@ -37,7 +37,7 @@ public void testLikes() {
 	}
 
 	private void checkLike(String str, String pattern, boolean expected) {
-		boolean actual = SQLRegex.like(str, pattern);
+		boolean actual = SqlWildcard.like(str, pattern);
 		Assert.assertEquals(expected, actual);
 	}
 }

File: bee-engine/src/test/java/com/dianping/bee/jdbc/AllInOneJDBCTests.java
Patch:
@@ -23,7 +23,7 @@
 import org.junit.runners.Suite;
 import org.junit.runners.Suite.SuiteClasses;
 
-import com.dianping.bee.engine.TestEnvConfig;
+import com.dianping.bee.engine.TestEnvConfigurator;
 import com.dianping.bee.mysql.InformationSchemaTest;
 import com.dianping.bee.server.SimpleServer;
 import com.site.lookup.ContainerLoader;
@@ -64,7 +64,7 @@ public static void before() throws Exception {
 
 	private static ContainerConfiguration getConfiguration() {
 		ContainerConfiguration configuration = new DefaultContainerConfiguration().setName("test");
-		String resource = TestEnvConfig.class.getName().replace('.', '/') + ".xml";
+		String resource = TestEnvConfigurator.class.getName().replace('.', '/') + ".xml";
 
 		configuration.setContainerConfiguration(resource);
 		return configuration;

File: bee-engine/src/test/java/com/dianping/bee/jdbc/TestServer.java
Patch:
@@ -18,7 +18,7 @@
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
 
-import com.dianping.bee.engine.TestEnvConfig;
+import com.dianping.bee.engine.TestEnvConfigurator;
 import com.dianping.bee.server.SimpleServer;
 import com.site.lookup.ComponentTestCase;
 
@@ -29,7 +29,7 @@
 public class TestServer extends ComponentTestCase {
 
 	protected String getCustomConfigurationName() {
-		return TestEnvConfig.class.getName().replace('.', '/') + ".xml";
+		return TestEnvConfigurator.class.getName().replace('.', '/') + ".xml";
 	}
 
 	@Test

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -10,6 +10,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.message.internal.MessageId;
@@ -48,7 +49,8 @@ public void doCheckpoint(boolean atEnd) {
 			try {
 				m_bucketManager.archive(m_startTime);
 			} catch (IOException e) {
-				e.printStackTrace();
+				Cat.logError(e);
+				m_logger.error("Error when archvie the dump bucket!", e);
 			}
 		}
 	}

File: dog-home/src/main/java/com/dianping/dog/alarm/problem/ProblemEvent.java
Patch:
@@ -46,12 +46,12 @@ public String getName() {
 
 	@Override
 	public long getTotalCount() {
-		return rowData.getData("totalCount");
+		return (Long)rowData.getData("totalCount");
 	}
 
 	@Override
 	public long getFailCount() {
-		return rowData.getData("failCount");
+		return (Long)rowData.getData("failCount");
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/sql/SqlAnalyzer.java
Patch:
@@ -109,8 +109,7 @@ protected void process(MessageTree tree) {
 
 			m_reports.put(domain, report);
 		}
-
-		report.addDomain(domain);
+		report.addDomainName(domain);
 
 		if (message instanceof Transaction) {
 			processTransaction(report, tree, (Transaction) message);

File: cat-home/src/main/java/com/dianping/cat/report/task/sql/SqlMerger.java
Patch:
@@ -19,9 +19,9 @@ public SqlReport mergeForDaily(String reportDomain, List<Report> reports, Set<St
 		SqlReportMerger merger = new SqlReportMerger(new SqlReport(reportDomain));
 		for (Report report : reports) {
 			String xml = report.getContent();
-			SqlReport model;
+			System.out.println(xml);
 			try {
-				model = DefaultSaxParser.parse(xml);
+				SqlReport model = DefaultSaxParser.parse(xml);
 				model.accept(merger);
 			} catch (Exception e) {
 				Cat.logError(e);

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/PreparedStatement.java
Patch:
@@ -14,14 +14,15 @@
  */
 package com.dianping.bee.engine.spi;
 
+import com.dianping.bee.engine.spi.meta.ColumnMeta;
 
 /**
  * @author <a href="mailto:yiming.liu@dianping.com">Yiming Liu</a>
  */
 public interface PreparedStatement extends Statement {
-	public int getParameterSize();
+	public ColumnMeta getParameterMeta(int paramIndex);
 
-	public void setParameterSize(int size);
+	public int getParameterSize();
 
 	public void setParameter(int index, Object param);
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/SingleTableStatement.java
Patch:
@@ -2,9 +2,9 @@
 
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.TreeMap;
 
 import com.dianping.bee.engine.spi.Statement;
 import com.dianping.bee.engine.spi.index.Index;
@@ -25,7 +25,7 @@ public class SingleTableStatement extends ContainerHolder implements Statement {
 
 	private int m_parameterSize;
 
-	private Map<ColumnMeta, Integer> m_allColumns = new TreeMap<ColumnMeta, Integer>();
+	private Map<ColumnMeta, Integer> m_allColumns = new LinkedHashMap<ColumnMeta, Integer>();
 
 	private Map<String, List<Object>> m_attributes = new HashMap<String, List<Object>>();
 

File: cat-data/src/main/java/com/dianping/cat/data/transaction/TransactionIndexer.java
Patch:
@@ -88,7 +88,7 @@ private void applyRow(RowContext ctx, TransactionReport report, Machine machine,
 	}
 
 	private TransactionReport getHourlyReport(RowContext ctx) throws IOException, SAXException {
-		String domain = ctx.getFirstAttribute("domain", null);
+		String domain = ctx.getFirstAttribute("domain", "Cat");
 		String date = ctx.getFirstAttribute("starttime", "");
 		String ip = ctx.getFirstAttribute("ip", "All");
 		URL url = new URL(String.format("http://localhost:2281/cat/r/t?domain=%s&date=%s&ip=%s&xml=true", domain, date, ip));

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/SingleTableStatement.java
Patch:
@@ -2,9 +2,9 @@
 
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.TreeMap;
 
 import com.dianping.bee.engine.spi.Statement;
 import com.dianping.bee.engine.spi.index.Index;
@@ -25,7 +25,7 @@ public class SingleTableStatement extends ContainerHolder implements Statement {
 
 	private int m_parameterSize;
 
-	private Map<ColumnMeta, Integer> m_allColumns = new TreeMap<ColumnMeta, Integer>();
+	private Map<ColumnMeta, Integer> m_allColumns = new LinkedHashMap<ColumnMeta, Integer>();
 
 	private Map<String, List<Object>> m_attributes = new HashMap<String, List<Object>>();
 

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/row/RowContext.java
Patch:
@@ -16,6 +16,8 @@ public interface RowContext {
 
 	public <T> T getFirstAttribute(String name, T defaultValue);
 
+	public <T> T getFirstAttribute(int attrIndex, T defaultValue);
+	
 	public <T> T getValue(int colIndex);
 
 	public <T> T getValue(String columnName);

File: bee-engine/src/main/java/com/dianping/bee/engine/build/ComponentsConfigurator.java
Patch:
@@ -16,7 +16,7 @@
 import com.dianping.bee.engine.spi.internal.DefaultStatementManager;
 import com.dianping.bee.engine.spi.internal.DefaultTableProviderManager;
 import com.dianping.bee.engine.spi.internal.SingleTableStatement;
-import com.dianping.bee.engine.spi.internal.SingleTableStatementVisitor;
+import com.dianping.bee.engine.spi.internal.SingleTableStatementBuilder;
 import com.dianping.bee.engine.spi.internal.TableHelper;
 import com.dianping.bee.engine.spi.session.DefaultSessionManager;
 import com.dianping.bee.engine.spi.session.SessionManager;
@@ -46,7 +46,7 @@ public List<Component> defineComponents() {
 		all.add(C(TableHelper.class) //
 		      .req(TableProviderManager.class));
 
-		all.add(C(SingleTableStatementVisitor.class).is(PER_LOOKUP) //
+		all.add(C(SingleTableStatementBuilder.class).is(PER_LOOKUP) //
 		      .req(TableHelper.class, SingleTableStatement.class));
 
 		defineHandlers(all);

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/TableProvider.java
Patch:
@@ -7,6 +7,8 @@
 public interface TableProvider {
 	public ColumnMeta[] getColumns();
 
+	public IndexMeta getDefaultIndex();
+
 	public IndexMeta[] getIndexes();
 
 	public String getName();

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/AbstractCommandHandler.java
Patch:
@@ -120,7 +120,7 @@ public void writeRow(Row row) {
 			for (int cellIndex = 0; cellIndex < row.getColumnSize(); cellIndex++) {
 				Cell cell = row.getCell(cellIndex);
 				ColumnMeta column = cell.getMeta();
-				String value = String.valueOf(cell.getValue());
+				String value = cell.getValue() == null ? null : String.valueOf(cell.getValue());
 				switch (TypeUtils.convertJavaTypeToFieldType(column.getType())) {
 				case Fields.FIELD_TYPE_STRING:
 					packet.add(StringUtil.encode(value, m_charset));

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/internal/SelectHandler.java
Patch:
@@ -124,7 +124,6 @@ private void selectStatement(ServerConnection c, String sql) throws SQLSyntaxErr
 		}
 
 		Statement stmt = m_manager.build(sql);
-
 		RowSet rowset = stmt.query();
 
 		CommandContext ctx = new CommandContext(c);

File: bee-engine/src/test/java/com/dianping/bee/jdbc/PreparedStatementTest.java
Patch:
@@ -70,7 +70,7 @@ private void displayResultSet(ResultSet rs) throws SQLException {
 			System.out.print(columnName + "\t");
 		}
 		System.out.println();
-		rs.first();
+		rs.beforeFirst();
 		while (rs.next()) {
 			for (int column = 1; column <= columns; column++) {
 				System.out.print(rs.getString(column) + "\t");

File: cat-data/src/main/java/com/dianping/cat/data/transaction/TransactionIndex.java
Patch:
@@ -5,8 +5,8 @@
 import com.dianping.bee.engine.spi.meta.IndexMeta;
 
 public class TransactionIndex extends AbstractIndexMeta<TransactionColumn> implements IndexMeta {
-	public static final TransactionIndex IDX_STARTTIME_DOMAIN = new TransactionIndex(TransactionColumn.StartTime, false,
-	      TransactionColumn.Domain, true);
+	public static final TransactionIndex IDX_STARTTIME_DOMAIN = new TransactionIndex(TransactionColumn.Domain, true,
+	      TransactionColumn.StartTime, false);
 
 	private TransactionIndex(Object... args) {
 		super(args);

File: cat-data/src/test/java/com/dianping/cat/data/TransactionTest.java
Patch:
@@ -54,8 +54,9 @@ private void displayResultSet(ResultSet rs) throws SQLException {
 		}
 
 		System.out.println();
-		rs.first();
 
+		rs.beforeFirst();
+		
 		while (rs.next()) {
 			for (int column = 1; column <= columns; column++) {
 				System.out.print(rs.getString(column) + "\t");

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/internal/SelectHandler.java
Patch:
@@ -95,7 +95,7 @@ private void selectCurrentDatabase(ServerConnection c) {
 	 */
 	private void selectSession(ServerConnection c, String sessionVariable) {
 		CommandContext ctx = new CommandContext(c);
-		String[] names = { "sessionVariable" };
+		String[] names = { sessionVariable };
 
 		ctx.writeHeader(names.length);
 
@@ -128,7 +128,7 @@ private void selectStatement(ServerConnection c, String sql) throws SQLSyntaxErr
 		RowSet rowset = stmt.query();
 
 		CommandContext ctx = new CommandContext(c);
-		String[] names = new String[rowset.getColumns()];
+		String[] names = new String[rowset.getColumnSize()];
 		for (int colIndex = 0; colIndex < names.length; colIndex++) {
 			names[colIndex] = rowset.getColumn(colIndex).getName();
 		}
@@ -141,7 +141,7 @@ private void selectStatement(ServerConnection c, String sql) throws SQLSyntaxErr
 
 		ctx.writeEOF();
 
-		for (int rowIndex = 0; rowIndex < rowset.getRows(); rowIndex++) {
+		for (int rowIndex = 0; rowIndex < rowset.getRowSize(); rowIndex++) {
 			Row row = rowset.getRow(rowIndex);
 			ctx.writeRow(row);
 		}

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/meta/Row.java
Patch:
@@ -4,5 +4,5 @@
 public interface Row {
 	public Cell getCell(int colIndex);
 	
-	public int getCells();
+	public int getColumnSize();
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/meta/RowSet.java
Patch:
@@ -11,9 +11,9 @@ public interface RowSet {
 
 	public ColumnMeta getColumn(int colIndex);
 
-	public int getColumns();
+	public int getColumnSize();
 
 	public Row getRow(int rowIndex);
 
-	public int getRows();
+	public int getRowSize();
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/meta/internal/DefaultRow.java
Patch:
@@ -34,7 +34,7 @@ public Cell getCell(int colIndex) {
 	}
 
 	@Override
-	public int getCells() {
+	public int getColumnSize() {
 		return m_cells.length;
 	}
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/meta/internal/DefaultRowSet.java
Patch:
@@ -64,7 +64,7 @@ public ColumnMeta getColumn(int colIndex) {
 	}
 
 	@Override
-	public int getColumns() {
+	public int getColumnSize() {
 		return m_columnMetas.length;
 	}
 
@@ -78,7 +78,7 @@ public Row getRow(int rowIndex) {
 	}
 
 	@Override
-	public int getRows() {
+	public int getRowSize() {
 		return m_rows.size();
 	}
 }

File: bee-engine/src/test/java/com/dianping/bee/engine/spi/SpiTest.java
Patch:
@@ -23,7 +23,7 @@ public void sample() throws Exception {
 	
 	private void display(RowSet rowset) {
 		StringBuilder sb = new StringBuilder(1024);
-		int cols = rowset.getColumns();
+		int cols = rowset.getColumnSize();
 
 		for (int i = 0; i < cols; i++) {
 			ColumnMeta column = rowset.getColumn(i);
@@ -33,7 +33,7 @@ private void display(RowSet rowset) {
 
 		sb.append('\n');
 
-		int rows = rowset.getRows();
+		int rows = rowset.getRowSize();
 
 		for (int i = 0; i < rows; i++) {
 			Row row = rowset.getRow(i);

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/internal/SelectHandler.java
Patch:
@@ -35,6 +35,7 @@
 import com.dianping.bee.engine.spi.meta.Row;
 import com.dianping.bee.engine.spi.meta.RowSet;
 import com.dianping.bee.engine.spi.meta.internal.TypeUtils;
+import com.site.helper.Joiners;
 import com.site.lookup.annotation.Inject;
 
 /**
@@ -61,7 +62,8 @@ protected void handle(ServerConnection c, List<String> parts) {
 			selectSession(c, first.substring("@@SESSION.".length()));
 		} else {
 			try {
-				selectStatement(c, first);
+				String stmt = "select " + Joiners.by(' ').join(parts);
+				selectStatement(c, stmt);
 			} catch (SQLSyntaxErrorException e) {
 				error(c, ErrorCode.ER_SYNTAX_ERROR, e.getMessage());
 			}

File: bee-engine/src/main/java/com/dianping/bee/server/SimpleServerQueryHandler.java
Patch:
@@ -43,7 +43,7 @@ public void query(String sql) {
 		case SimpleServerParse.SET:
 			SetHandler.handle(sql, c, rs >>> 8);
 			break;
-		case SimpleServerParse.DESC:
+		case SimpleServerParse.DESC: // New added
 			m_descHandler.handle(sql, c, rs >>> 8);
 			break;
 		case SimpleServerParse.SHOW:

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/handler/internal/DescHandler.java
Patch:
@@ -12,8 +12,10 @@
 import com.dianping.bee.engine.spi.handler.AbstractCommandHandler;
 import com.dianping.bee.engine.spi.meta.ColumnMeta;
 import com.dianping.bee.engine.spi.meta.internal.TypeUtils;
+import com.site.lookup.annotation.Inject;
 
 public class DescHandler extends AbstractCommandHandler {
+	@Inject
 	private TableProviderManager m_manager;
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/cache/Handler.java
Patch:
@@ -377,6 +377,9 @@ private void normalize(Model model, Payload payload) {
 			}
 			model.setReportType(payload.getReportType());
 			payload.computeStartDate();
+			if (!payload.isToday()) {
+				payload.setYesterdayDefault();
+			}
 			model.setLongDate(payload.getDate());
 			model.setCustomDate(payload.getHistoryStartDate(), payload.getHistoryEndDate());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/Handler.java
Patch:
@@ -271,6 +271,9 @@ public void normalize(Model model, Payload payload) {
 			}
 			model.setReportType(payload.getReportType());
 			payload.computeStartDate();
+			if (!payload.isToday()) {
+				payload.setYesterdayDefault();
+			}
 			model.setLongDate(payload.getDate());
 			model.setCustomDate(payload.getHistoryStartDate(), payload.getHistoryEndDate());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -236,7 +236,9 @@ public void normalize(Model model, Payload payload) {
 			}
 			model.setReportType(payload.getReportType());
 			payload.computeStartDate();
-			//payload.setYesterdayDefault();
+			if (!payload.isToday()) {
+				payload.setYesterdayDefault();
+			}
 			model.setLongDate(payload.getDate());
 			model.setCustomDate(payload.getHistoryStartDate(), payload.getHistoryEndDate());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Handler.java
Patch:
@@ -173,6 +173,9 @@ public void normalize(Model model, Payload payload) {
 			}
 			model.setReportType(payload.getReportType());
 			payload.computeStartDate();
+			if (!payload.isToday()) {
+				payload.setYesterdayDefault();
+			}
 			model.setLongDate(payload.getDate());
 			model.setCustomDate(payload.getHistoryStartDate(), payload.getHistoryEndDate());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/monthreport/Handler.java
Patch:
@@ -81,9 +81,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 				model.setReport(report);
 				model.setReportLast(reportLast);
 				model.setReportLastTwo(reportLastTwo);
-
-				model.setReportLast(report);
-				model.setReportLastTwo(report);
 				break;
 			case ALL:
 				List<MonthReport> reports = new ArrayList<MonthReport>();

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -228,6 +228,9 @@ public void normalize(Model model, Payload payload) {
 			}
 			model.setReportType(payload.getReportType());
 			payload.computeStartDate();
+			if (!payload.isToday()) {
+				payload.setYesterdayDefault();
+			}
 			model.setLongDate(payload.getDate());
 			model.setCustomDate(payload.getHistoryStartDate(), payload.getHistoryEndDate());
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -254,6 +254,9 @@ public void normalize(Model model, Payload payload) {
 			}
 			model.setReportType(payload.getReportType());
 			payload.computeStartDate();
+			if (!payload.isToday()) {
+				payload.setYesterdayDefault();
+			}
 			model.setLongDate(payload.getDate());
 			model.setCustomDate(payload.getHistoryStartDate(), payload.getHistoryEndDate());
 		}

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/DatabaseProvider.java
Patch:
@@ -5,5 +5,4 @@ public interface DatabaseProvider {
 
 	public TableProvider[] getTables();
 	
-	public TableProvider getTable(String tableName);
 }
\ No newline at end of file

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/DefaultSingleTableStatement.java
Patch:
@@ -65,7 +65,9 @@ public RowSet query() {
 		// Query By Index
 		RowSet providerRowSet = m_table.queryByIndex(m_index, m_selectColumns);
 		// Filter
-		providerRowSet.filter(m_rowFilter);
+		if (providerRowSet != null) {
+			providerRowSet.filter(m_rowFilter);
+		}
 		// Build select columns
 		RowSet returnRowSet = buildReturnRowSet(providerRowSet);
 		return returnRowSet;

File: bee-engine/src/main/java/com/dianping/bee/server/SimpleServerConnectionFactory.java
Patch:
@@ -29,7 +29,6 @@ protected FrontendConnection getConnection(SocketChannel channel) {
 		c.setTxIsolation(Isolations.REPEATED_READ);
 		c.setSession(new BlockingSession(c));
 		c.setSession2(new NonBlockingSession(c));
-
 		return c;
 	}
 

File: bee-engine/src/main/java/com/dianping/bee/server/SimpleServer.java
Patch:
@@ -39,7 +39,7 @@ public void startup() throws IOException {
 
 		// startup connector
 		NIOConnector connector = new NIOConnector("BeeConnector");
-		
+
 		connector.setProcessors(processors);
 		connector.start();
 

File: bee-engine/src/main/java/com/dianping/bee/server/SimpleServer.java
Patch:
@@ -10,6 +10,7 @@
 import com.alibaba.cobar.net.NIOProcessor;
 import com.site.helper.Threads;
 import com.site.helper.Threads.Task;
+import com.site.lookup.ContainerLoader;
 import com.site.lookup.annotation.Inject;
 
 public class SimpleServer implements LogEnabled {
@@ -46,6 +47,7 @@ public void startup() throws IOException {
 		SimpleServerConnectionFactory sf = new SimpleServerConnectionFactory();
 
 		sf.setIdleTimeout(3600 * 1000L); // one hour
+		sf.setContainer(ContainerLoader.getDefaultContainer());
 
 		NIOAcceptor server = new NIOAcceptor("BeeServer", m_port, sf);
 

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/StatementManager.java
Patch:
@@ -3,5 +3,5 @@
 import java.sql.SQLSyntaxErrorException;
 
 public interface StatementManager {
-	public Statement parse(String sql) throws SQLSyntaxErrorException;
+	public Statement build(String sql) throws SQLSyntaxErrorException;
 }

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/DefaultRowFilter.java
Patch:
@@ -21,6 +21,7 @@ public void setExpression(Expression expr) {
 
 	public String toString() {
 		MySQLOutputASTVisitor visitor = new MySQLOutputASTVisitor(new StringBuilder());
+		
 		m_expr.accept(visitor);
 		return visitor.getSql();
 	}

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/internal/DefaultStatementManager.java
Patch:
@@ -14,7 +14,7 @@ public class DefaultStatementManager extends ContainerHolder implements Statemen
 	private Map<String, Statement> m_statements = new HashMap<String, Statement>();
 
 	@Override
-	public Statement parse(String sql) throws SQLSyntaxErrorException {
+	public Statement build(String sql) throws SQLSyntaxErrorException {
 		Statement statement = m_statements.get(sql);
 
 		if (statement == null) {

File: bee-engine/src/main/java/com/dianping/bee/engine/spi/meta/ColumnMeta.java
Patch:
@@ -2,6 +2,8 @@
 
 public interface ColumnMeta {
 	public String getName();
-	
+
 	public Class<?> getType();
+
+	public int getCobarType();
 }

File: bee-engine/src/test/java/com/dianping/bee/engine/spi/SpiTest.java
Patch:
@@ -12,8 +12,7 @@ public class SpiTest extends ComponentTestCase {
 	@Test
 	public void sample() throws Exception {
 		StatementManager statementManager = lookup(StatementManager.class);
-		Statement stmt = statementManager
-		      .parse("select type, sum(failures) from transaction where domain=? and starttime=?");
+		Statement stmt = statementManager.build("select type, sum(failures) from transaction where domain=? and starttime=?");
 		RowSet rowset = stmt.query();
 
 		display(rowset);

File: cat-home/src/test/java/com/dianping/cat/demo/TestSendMessage.java
Patch:
@@ -65,15 +65,15 @@ public void sendPigeonClientTransaction() throws Exception {
 	public void sendPigeonServerTransaction() throws Exception {
 		for (int i = 0; i < 100; i++) {
 			Transaction t = Cat.getProducer().newTransaction("PigeonService", "Method6");
-			Cat.getProducer().newEvent("PigeonCall.client", "192.168.7.77");
+			Cat.getProducer().newEvent("PigeonService.client", "192.168.7.77");
 			t.addData("key and value");
 
 			Thread.sleep(1);
 			t.complete();
 		}
 		for (int i = 0; i < 200; i++) {
 			Transaction t = Cat.getProducer().newTransaction("PigeonService", "Method8");
-			Cat.getProducer().newEvent("PigeonCall.client", "192.168.7.20");
+			Cat.getProducer().newEvent("PigeonService.client", "192.168.7.20");
 			t.addData("key and value");
 
 			Thread.sleep(1);
@@ -82,7 +82,7 @@ public void sendPigeonServerTransaction() throws Exception {
 
 		for (int i = 0; i < 300; i++) {
 			Transaction t = Cat.getProducer().newTransaction("PigeonService", "Method5");
-			Cat.getProducer().newEvent("PigeonCall.client", "192.168.7.231");
+			Cat.getProducer().newEvent("PigeonService.client", "192.168.7.231");
 			t.addData("key and value");
 
 			Thread.sleep(1);

File: cat-home/src/test/java/com/dianping/cat/report/page/transaction/PayloadTest.java
Patch:
@@ -200,6 +200,6 @@ public void testHistoryMonthNav() {
 	}
 	
 	private Date adjustEndDate(Date date){
-		return new Date(date.getTime()+1000);
+		return new Date(date.getTime());
 	}
 }

File: cat-consumer/src/test/java/com/dianping/cat/consumer/cross/ParseCrossInfoTest.java
Patch:
@@ -46,7 +46,7 @@ public void testParsePigeonServerTransaction() {
 		Assert.assertEquals(info.getLocalAddress(), "192.168.0.1");
 		Assert.assertEquals(info.getRemoteAddress(), "192.168.7.70");
 
-		Message message = new DefaultEvent("PigeonCall.client", "192.168.7.71", null);
+		Message message = new DefaultEvent("PigeonService.client", "192.168.7.71", null);
 		t.addChild(message);
 
 		info = analyzer.parseCorssTransaction(t, tree);
@@ -65,7 +65,7 @@ public void testParsePigeonServerTransactionWithPort(){
 		MessageTree tree = buildMockMessageTree();
 		CrossInfo info = analyzer.parseCorssTransaction(t, tree);
 
-		Message message = new DefaultEvent("PigeonCall.client", "192.168.7.71:29987", null);
+		Message message = new DefaultEvent("PigeonService.client", "192.168.7.71:29987", null);
 		t.addChild(message);
 
 		info = analyzer.parseCorssTransaction(t, tree);

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/TypeDetailInfo.java
Patch:
@@ -76,8 +76,8 @@ public void mergeType(Type type) {
 		m_sum += type.getSum();
 
 		if (m_totalCount > 0) {
-			m_avg = m_sum / m_totalCount;
-			m_failurePercent = m_failureCount / m_totalCount;
+			m_avg = m_sum /  (double)m_totalCount;
+			m_failurePercent = (double)m_failureCount /  (double)m_totalCount;
 		}
 		if (m_seconds > 0) {
 			m_tps = m_totalCount / (double)m_seconds;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemType.java
Patch:
@@ -9,8 +9,10 @@ public enum ProblemType {
 
 	LONG_SQL("long-sql"),
 	
-	LONG_URL("long-url");
+	LONG_URL("long-url"),
 
+	LONG_SERVICE("long-service");
+	
 	private String m_name;
 
 	private ProblemType(String name) {

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/build/DatabaseConfigurator.java
Patch:
@@ -12,6 +12,8 @@ public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
 
 		all.add(defineJdbcDataSourceConfigurationManagerComponent("/data/appdatas/cat/datasources.xml"));
+		
+		//Hack for hadoop jobs
 		all.add(defineJdbcDataSourceComponent("cat", "com.mysql.jdbc.Driver", "jdbc:mysql://10.1.1.220:3306/cat", "dpcom_cat", "dp!@jWLcFDfEX",
 		      "<![CDATA[useUnicode=true&autoReconnect=true]]>"));
 

File: cat-home/src/main/java/com/dianping/cat/report/ReportPage.java
Patch:
@@ -27,11 +27,11 @@ public enum ReportPage implements Page {
 
    DASHBOARD("dashboard", "dashboard", "Dashboard", "Dashboard", false),
 
-   TASK("task", "task", "Task", "Task", true),
+   TASK("task", "task", "Task", "Task", false),
 
    MATRIX("matrix", "matrix", "Matrix", "Matrix", true),
 
-   MONTHREPORT("monthreport", "monthreport", "Monthreport", "Monthreport", true),
+   MONTHREPORT("monthreport", "monthreport", "Monthreport", "Monthreport", false),
 
    CROSS("cross", "cross", "Cross", "Cross", true);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -148,10 +148,10 @@ public Date getHistoryEndDate() {
 		} else {
 			temp = m_date + (ONE_HOUR * 24);
 		}
-		cal.setTimeInMillis(temp);
+		cal.setTimeInMillis(temp -1000);
 		return cal.getTime();
 	}
-
+	
 	public Date getHistoryStartDate() {
 		if (m_customStart != null) {
 			try {
@@ -161,7 +161,7 @@ public Date getHistoryStartDate() {
 		}
 		return new Date(m_date);
 	}
-
+	
 	public String getIpAddress() {
 		return m_ipAddress;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/TypeCompartor.java
Patch:
@@ -35,10 +35,10 @@ public int compare(TypeDetailInfo m1, TypeDetailInfo m2) {
 			return (int) (m2.getFailureCount() - m1.getFailureCount());
 		}
 		if (m_sorted.equals("failurePercent")) {
-			return (int) (m2.getFailurePercent() * 100 - m1.getFailurePercent() * 100);
+			return (int) (m2.getFailurePercent() * 1000 - m1.getFailurePercent() * 1000);
 		}
 		if (m_sorted.equals("avg")) {
-			return (int) (m2.getAvg() * 100 - m1.getAvg() * 100);
+			return (int) (m2.getAvg() * 1000 - m1.getAvg() * 1000);
 		}
 		return 0;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/DailyTaskProducer.java
Patch:
@@ -130,6 +130,7 @@ public void initialize() throws InitializationException {
 		m_dailyReportNameSet.add("transaction");
 		m_dailyReportNameSet.add("problem");
 		m_dailyReportNameSet.add("matrix");
+		m_dailyReportNameSet.add("cross");
 	}
 
 	@Override

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -14,7 +14,7 @@
 public class TestServer extends JettyServer {
    public static void main(String[] args) throws Exception {
       TestServer server = new TestServer();
-
+      System.setProperty("devMode", "true");
       server.startServer();
       server.startWebApp();
       server.stopServer();

File: cat-notify/src/main/java/com/dianping/cat/notify/dao/ibatisimpl/DailyReportDaoImp.java
Patch:
@@ -48,7 +48,8 @@ public List<DailyReport> findSendMailReportDomainDuration(Date startDate,
 		return (List) baseDao.executeQueryForList("DailyReport.selectSendMailReport", map);
 	}
 
-	@Override
+	@SuppressWarnings({ "unchecked", "rawtypes" })
+   @Override
    public List<String> findDistinctReportDomain(Date startDate, Date endDate, int type)
          throws Exception {
 		Map<String,Object> map=new HashMap<String,Object>();

File: cat-notify/src/main/java/com/dianping/cat/notify/report/AbstractReportCreater.java
Patch:
@@ -234,7 +234,7 @@ protected List<TransactionRenderDO> getTransactionRenderDoList(TimeSpan timeSpan
 	      TransactionReport transactionReport, String domain, boolean isWeek) {
 		String urlType = "day";
 		if (isWeek) {
-			urlType = "weak";
+			urlType = "week";
 		}
 		com.dianping.cat.consumer.transaction.model.entity.Machine machine = transactionReport
 		      .findMachine(ReportConstants.ALL_IP);
@@ -279,7 +279,7 @@ public int compare(TransactionType o1, TransactionType o2) {
 	public List<EventRenderDO> getEventRenderDoList(TimeSpan timeSpan, EventReport report, String domain, boolean isWeek) {
 		String urlType = "day";
 		if (isWeek) {
-			urlType = "weak";
+			urlType = "week";
 		}
 		com.dianping.cat.consumer.event.model.entity.Machine machine = report.findMachine(ReportConstants.ALL_IP);
 		if (machine == null) {
@@ -324,7 +324,7 @@ protected List<ProblemRenderDO> getProblemRenderDoList(TimeSpan timeSpan, Proble
 	      boolean isWeek) {
 		String urlType = "day";
 		if (isWeek) {
-			urlType = "weak";
+			urlType = "week";
 		}
 		List<ProblemRenderDO> pRenderDoList = new ArrayList<ProblemRenderDO>();
 		ProblemStatistics problemStatistics = new ProblemStatistics();

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/NameCompartor.java
Patch:
@@ -29,10 +29,10 @@ public int compare(NameDetailInfo m1, NameDetailInfo m2) {
 			return (int) (m2.getFailureCount() - m1.getFailureCount());
 		}
 		if (m_sorted.equals("failurePercent")) {
-			return (int) (m2.getFailurePercent() * 100 - m1.getFailurePercent() * 100);
+			return (int) (m2.getFailurePercent() * 1000 - m1.getFailurePercent() * 1000);
 		}
 		if (m_sorted.equals("avg")) {
-			return (int) (m2.getAvg() * 100 - m1.getAvg() * 100);
+			return (int) (m2.getAvg() * 1000 - m1.getAvg() * 1000);
 		}
 		return 0;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/cross/display/TypeCompartor.java
Patch:
@@ -35,10 +35,10 @@ public int compare(TypeDetailInfo m1, TypeDetailInfo m2) {
 			return (int) (m2.getFailureCount() - m1.getFailureCount());
 		}
 		if (m_sorted.equals("failurePercent")) {
-			return (int) (m2.getFailurePercent() * 100 - m1.getFailurePercent() * 100);
+			return (int) (m2.getFailurePercent() * 1000 - m1.getFailurePercent() * 1000);
 		}
 		if (m_sorted.equals("avg")) {
-			return (int) (m2.getAvg() * 100 - m1.getAvg() * 100);
+			return (int) (m2.getAvg() * 1000 - m1.getAvg() * 1000);
 		}
 		return 0;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/matrix/Action.java
Patch:
@@ -1,6 +1,9 @@
 package com.dianping.cat.report.page.matrix;
 
 public enum Action implements com.site.web.mvc.Action {
+	
+	HISTORY_REPORT("history"),
+	
 	HOURLY_REPORT("view");
 
 	public static Action getByName(String name, Action defaultAction) {

File: cat-home/src/main/java/com/dianping/cat/report/task/DailyTaskProducer.java
Patch:
@@ -129,6 +129,7 @@ public void initialize() throws InitializationException {
 		m_dailyReportNameSet.add("event");
 		m_dailyReportNameSet.add("transaction");
 		m_dailyReportNameSet.add("problem");
+		m_dailyReportNameSet.add("matrix");
 	}
 
 	@Override

File: cat-notify/src/main/java/com/dianping/cat/notify/report/DailyReportCreater.java
Patch:
@@ -75,7 +75,7 @@ public int compare(TransactionType o1, TransactionType o2) {
 		});
 
 		for (TransactionType transactionType : typeList) {
-			String trendViewUrl = super.getTrendsViewUrl("e", domain,timeSpan.getEndMicros(), "day", transactionType.getId(),"查看趋势图");
+			String trendViewUrl = super.getTrendsViewUrl("t", domain,timeSpan.getEndMicros(), "day", transactionType.getId(),"查看趋势图");
 			transactionType.setSuccessMessageUrl(trendViewUrl);
 			DecimalFormat df = new DecimalFormat("#.##");
 			transactionType.setAvg(new Double(df.format(transactionType.getAvg())));

File: cat-notify/src/main/java/com/dianping/cat/notify/report/WeaklyReportCreater.java
Patch:
@@ -72,7 +72,7 @@ public int compare(TransactionType o1, TransactionType o2) {
 		});
 		
 		for(TransactionType transactionType : typeList){
-			String trendViewUrl = getTrendsViewUrl("e", domain, timeSpan.getEndMicros(), "week", transactionType.getId(), "查看趋势图");
+			String trendViewUrl = getTrendsViewUrl("t", domain, timeSpan.getEndMicros(), "week", transactionType.getId(), "查看趋势图");
 			transactionType.setSuccessMessageUrl(trendViewUrl);
 			DecimalFormat df = new DecimalFormat("#.##");
 			transactionType.setAvg(new Double(df.format(transactionType.getAvg())));

File: cat-notify/src/main/java/com/dianping/cat/notify/CatNotifyServer.java
Patch:
@@ -22,7 +22,7 @@ public static void main(String[] args) {
 		ScheduleJobRunner runner = (ScheduleJobRunner) application.getBean("scheduleJobRunner");
 		
 		runner.start();
-		System.out.println("==========CatMailServer init Spring===========");
+		System.out.println("==========CatNotifyServer init Spring===========");
 	}
 
 	static void initLoggerConfig() {

File: cat-notify/src/main/java/com/dianping/cat/notify/report/DailyReportCreater.java
Patch:
@@ -88,7 +88,7 @@ public int compare(TransactionType o1, TransactionType o2) {
 
 		String currentUrl = getCurrentViewUrl("t", domain,
 				timeSpan.getEndMicros());
-		params.put("title", "Event Report " + currentUrl);
+		params.put("title", "Transaction Report " + currentUrl);
 
 		long preWeakLastDay = period - TimeUtil.DAY_MICROS * 7;
 		long preWeakDay = period - TimeUtil.DAY_MICROS * 6;

File: cat-home/src/main/java/com/dianping/cat/report/page/AbstractReportPayload.java
Patch:
@@ -53,12 +53,12 @@ public void computeStartDate() {
 		cal.setTimeInMillis(m_date);
 		cal.set(Calendar.HOUR_OF_DAY, 0);
 		m_date = cal.getTimeInMillis();
-		int weekOfDay = cal.get(Calendar.DAY_OF_WEEK);
 
 		if ("month".equals(m_reportType)) {
 			cal.set(Calendar.DATE, 1);
 			m_date = cal.getTimeInMillis();
 		} else if ("week".equals(m_reportType)) {
+			int weekOfDay = cal.get(Calendar.DAY_OF_WEEK) % 7;
 			m_date = m_date - (ONE_HOUR) * (weekOfDay % 7) * 24;
 			if (m_date > System.currentTimeMillis()) {
 				m_date = m_date - 7 * 24 * ONE_HOUR;

File: cat-home/src/test/java/com/dianping/cat/report/page/transaction/PayloadTest.java
Patch:
@@ -124,7 +124,7 @@ public void testHistoryWeekNav() {
 		cal.set(Calendar.HOUR_OF_DAY, 0);
 		temp = cal.getTimeInMillis();
 
-		int weekOfDay = cal.get(Calendar.DAY_OF_WEEK);
+		int weekOfDay = cal.get(Calendar.DAY_OF_WEEK) % 7;
 		temp = temp - 24 * (weekOfDay) * ONE_HOUR;
 		if (temp > System.currentTimeMillis()) {
 			temp = temp - 7 * ONE_DAY;

File: cat-notify/src/main/java/com/dianping/cat/notify/job/SendReportMailJob.java
Patch:
@@ -67,7 +67,7 @@ public void doJob(long timestamp) {
 		}
 	}
 
-	private boolean sendBySubscriber_bak(long timestamp, boolean handwork,
+	public boolean sendBySubscriber_bak(long timestamp, boolean handwork,
 			Subscriber subscriber) {
 		String emailTitle = String.format("Cat monitor reports of [%s]",
 				subscriber.getDomain());

File: cat-notify/src/main/java/com/dianping/cat/notify/report/DailyReportCreater.java
Patch:
@@ -12,8 +12,6 @@
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.consumer.event.model.entity.EventType;
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
-import com.dianping.cat.consumer.transaction.model.entity.Machine;
-import com.dianping.cat.consumer.transaction.model.entity.TransactionName;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.consumer.transaction.model.entity.TransactionType;
 import com.dianping.cat.notify.job.ProblemStatistics;
@@ -27,7 +25,7 @@ public class DailyReportCreater extends AbstractReportCreater {
 	public boolean isNeedToCreate(long timestamp) {
 		int hour = TimeUtil.getHourOfDay(timestamp);
 		/* create report at 01:00:00 */
-		if (hour != 14) {
+		if (hour != 1) {
 			return false;
 		}
 

File: cat-notify/src/main/java/com/dianping/cat/notify/report/WeaklyReportCreater.java
Patch:
@@ -24,7 +24,7 @@ public boolean isNeedToCreate(long timestamp) {
 		int dayOfWeak = TimeUtil.getDayOfWeak(timestamp);
 		int hour = TimeUtil.getHourOfDay(timestamp);
 		/* create report at 00:00:00 of every saturday */
-		if (dayOfWeak != 6 || hour != 14) {
+		if (dayOfWeak != 7 || hour != 1) {
 			return false;
 		}
 		long currentTime = System.currentTimeMillis();

File: cat-core/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -73,7 +73,7 @@ protected String getOriginalUrl(ServletRequest request) {
 		return ((HttpServletRequest) request).getRequestURI();
 	}
 
-	private String getSessionIdFromCookie(HttpServletRequest req) {
+	protected String getSessionIdFromCookie(HttpServletRequest req) {
 		Cookie[] cookies = req.getCookies();
 
 		if (cookies != null) {

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/ProblemStatistics.java
Patch:
@@ -53,6 +53,7 @@ public ProblemStatistics setIp(String ip) {
 	}
 
 	public ProblemStatistics setUrlThreshold(int urlThreshold) {
+		System.out.println("UrlThreshold:"+urlThreshold);
 		m_urlThreshold = urlThreshold;
 		return this;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/task/DailyTaskProducer.java
Patch:
@@ -60,7 +60,7 @@ public void run() {
 		Date today = TaskHelper.todayZero(now);
 		Date tomorrow = TaskHelper.tomorrowZero(now);
 		DailyTask dailyTask = new DailyTask(today, tomorrow);
-		// schedule a task:next day's 00:04
+		// schedule a task at next day 00:09
 		Date startDateOfNextTask = TaskHelper.startDateOfNextTask(now, 1);
 		long delay = startDateOfNextTask.getTime() - now.getTime();
 		service.scheduleAtFixedRate(dailyTask, delay, PERIOD, TimeUnit.MILLISECONDS);
@@ -119,7 +119,7 @@ private void getDomainAndNameSet(Set<String> domainSet,Set<String> nameSet,Date
 		}
 
 		if (domainNames == null || domainNames.size() == 0) {
-			return; // no hourly report
+			return;
 		}
 		
 		for (Report domainName : domainNames) {

File: cat-home/src/main/java/com/dianping/cat/report/task/DefaultTaskConsumer.java
Patch:
@@ -22,9 +22,6 @@ public class DefaultTaskConsumer extends TaskConsumer {
 	@Inject
 	private CatReportFacade reportFacade;
 
-	public DefaultTaskConsumer() {
-	}
-
 	@Override
 	protected Task findDoingTask(String ip) {
 		Task task = null;

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskHelper.java
Patch:
@@ -155,7 +155,7 @@ public static Date startDateOfNextTask(Date currentDate,int step) {
 		}
 
 		newCalendar.set(Calendar.HOUR_OF_DAY, 0);
-		newCalendar.set(Calendar.MINUTE, 15);
+		newCalendar.set(Calendar.MINUTE, 9);
 		newCalendar.set(Calendar.SECOND, 0);
 
 		return newCalendar.getTime();

File: cat-home/src/main/java/com/dianping/cat/report/task/problem/ProblemGraphCreator.java
Patch:
@@ -25,9 +25,8 @@ public class ProblemGraphCreator implements GraphCreator<ProblemReport> {
 	public List<Graph> splitReportToGraphs(Date reportPeriod, String reportDomain, String reportName,
 	      ProblemReport report) {
 		Set<String> ips = report.getIps();
-		List<Graph> graphs = new ArrayList<Graph>(ips.size() + 1); // all and
-		                                                           // every
-		                                                           // machine
+		List<Graph> graphs = new ArrayList<Graph>(ips.size() + 1); 
+		
 		Map<String, GraphLine> allDetailCache = new TreeMap<String, GraphLine>();
 		Map<String, GraphLine> allSummaryCache = new TreeMap<String, GraphLine>();
 

File: cat-home/src/test/java/com/dianping/cat/report/task/ProblemGraphCreatorTest.java
Patch:
@@ -26,8 +26,8 @@ public void test() throws Exception{
 		
 		Assert.assertEquals(2, graphs.size());
 		for(Graph graph:graphs){
-			Assert.assertEquals(summary, graph.getSummaryContent());
-			Assert.assertEquals(detail, graph.getDetailContent());
+			Assert.assertEquals(summary.replaceAll("\\s*",""), graph.getSummaryContent().replaceAll("\\s*",""));
+			Assert.assertEquals(detail.replaceAll("\\s*",""), graph.getDetailContent().replaceAll("\\s*",""));
 		}
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/task/Handler.java
Patch:
@@ -48,6 +48,7 @@ public void handleInbound(Context ctx) throws ServletException, IOException {
 	public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Model model = new Model(ctx);
 		Payload payload = ctx.getPayload();
+		model.setAction(payload.getAction());
 
 		switch (payload.getAction()) {
 		case VIEW:
@@ -57,7 +58,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			redoTask(payload, model);
 			break;
 		}
-		model.setAction(Action.VIEW);
 		model.setPage(ReportPage.TASK);
 
 		m_jspViewer.view(ctx, model);

File: cat-home/src/main/java/com/dianping/cat/report/page/task/JspFile.java
Patch:
@@ -3,6 +3,7 @@
 public enum JspFile {
 	VIEW("/jsp/report/task.jsp"),
 
+	REDO("/jsp/report/taskRedo.jsp")
 	;
 
 	private String m_path;

File: cat-home/src/main/java/com/dianping/cat/report/page/task/JspViewer.java
Patch:
@@ -11,6 +11,8 @@ protected String getJspFilePath(Context ctx, Model model) {
 		switch (action) {
 		case VIEW:
 			return JspFile.VIEW.getPath();
+		case REDO:
+			return JspFile.REDO.getPath();
 		}
 
 		throw new RuntimeException("Unknown action: " + action);

File: cat-home/src/main/java/com/dianping/cat/report/page/task/Payload.java
Patch:
@@ -120,6 +120,9 @@ public void setAction(String action) {
 
 	@Override
 	public Action getAction() {
+		if(m_action==null){
+			m_action = Action.VIEW;
+		}
 		return m_action;
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/DailyTaskProducer.java
Patch:
@@ -69,7 +69,7 @@ public void run() {
 
 	private class DailyTask implements Runnable {
 
-		String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
+		private String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 
 		private Date start;
 
@@ -137,6 +137,7 @@ public void initialize() throws InitializationException {
 		Date now=new Date();
 		Date todayZero=TaskHelper.todayZero(now);
 		Date yesterday=TaskHelper.yesterdayZero(now);
+		
 		if (!isYesterdayTaskGenerated(now,todayZero, yesterday)) {
 			DailyTask dailyTask = new DailyTask(yesterday, todayZero);
 			long startOfTask  = TaskHelper.startDateOfNextTask(now, 0).getTime();

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskConsumer.java
Patch:
@@ -11,6 +11,7 @@
 import com.dianping.cat.message.Transaction;
 
 public abstract class TaskConsumer implements Runnable {
+
 	private static final int MAX_TODO_RETRY_TIMES = 3;
 
 	public static final int STATUS_TODO = 1;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpAnalyzer.java
Patch:
@@ -98,6 +98,7 @@ protected void process(MessageTree tree) {
 				channel.write(tree);
 			}
 		} catch (Exception e) {
+			//TODO
 			m_logger.error("Error when dumping to local file system!", e);
 		}
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpUploader.java
Patch:
@@ -79,7 +79,7 @@ public void start() {
 		}
 	}
 
-	private long sleepPeriod = 1000;
+	private long sleepPeriod = 1000L * 60;
 
 	public void setSleepPeriod(long period) {
 		this.sleepPeriod = period;
@@ -107,7 +107,7 @@ public void run() {
 						upload();
 					}
 				} catch (Exception e) {
-					m_logger.warn("Error when dumping message to HDFS. " +e.getMessage());
+					m_logger.warn("Error when dumping message to HDFS. " + e.getMessage());
 				}
 
 				try {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java
Patch:
@@ -242,7 +242,7 @@ private void storeMessage(MessageTree tree) {
 			RemoteIdChannel m_channel = m_manager.openChannel(m_remoteIdPath, m_startTime);
 			m_channel.write(tree);
       } catch (Exception e) {
-	      e.printStackTrace();
+			m_logger.error("Error when storing message info to remote file!", e);
       }
 		
 		String messageId = tree.getMessageId();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemAnalyzer.java
Patch:
@@ -182,7 +182,7 @@ private void storeMessage(MessageTree tree) {
 			RemoteIdChannel m_channel = m_manager.openChannel(m_remoteIdPath, m_startTime);
 			m_channel.write(tree);
       } catch (Exception e) {
-	      e.printStackTrace();
+			m_logger.error("Error when storing message info to remote file!", e);
       }
 		
 		String messageId = tree.getMessageId();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/remote/RemoteIdUploader.java
Patch:
@@ -76,7 +76,7 @@ public void start() {
 		}
 	}
 
-	private long sleepPeriod = 10000L;
+	private long sleepPeriod = 1000L * 60;
 
 	public void setSleepPeriod(long period) {
 		this.sleepPeriod = period;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -332,7 +332,7 @@ private void storeMessage(MessageTree tree) {
 			RemoteIdChannel m_channel = m_manager.openChannel(m_remoteIdPath, m_startTime);
 			m_channel.write(tree);
 		} catch (Exception e) {
-			e.printStackTrace();
+			m_logger.error("Error when storing message info to remote file!", e);
 		}
 
 		String messageId = tree.getMessageId();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/matrix/MatrixReportMerger.java
Patch:
@@ -22,7 +22,6 @@ protected void mergeMatrix(Matrix old, Matrix matrix) {
 
 	@Override
 	protected void mergeRatio(Ratio old, Ratio ratio) {
-		old.setCount(old.getCount() + ratio.getCount());
 		old.setTotalCount(old.getTotalCount() + ratio.getTotalCount());
 		old.setTotalTime(old.getTotalTime() + ratio.getTotalTime());
 		if (old.getMin() == 0) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/remote/RemoteIdChannel.java
Patch:
@@ -82,7 +82,7 @@ public void write(MessageTree tree) throws IOException {
 		booWrap.boo = true; // default success
 		doTransactionChilds(remoteIds, t, booWrap);
 
-		StringBuilder sb = new StringBuilder((remoteIds.size() + 1) * remoteIds.get(0).length() + 32);
+		StringBuilder sb = new StringBuilder((remoteIds.size() + 1) * 32);
 		if (booWrap.boo) {
 			sb.append('0');
 		} else {

File: cat-core/src/main/java/com/dianping/cat/storage/BucketManager.java
Patch:
@@ -1,11 +1,14 @@
 package com.dianping.cat.storage;
 
 import java.io.IOException;
+import java.util.List;
 
 import com.dianping.cat.message.spi.MessageTree;
 
 public interface BucketManager {
 	public void closeBucket(Bucket<?> bucket);
+	
+	public List<Bucket<MessageTree>> getLogviewBuckets(long timestamp,String excludeDomain) throws IOException;
 
 	public Bucket<MessageTree> getLogviewBucket(long timestamp, String domain) throws IOException;
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/remote/RemoteIdAnalyzer.java
Patch:
@@ -37,7 +37,7 @@ public class RemoteIdAnalyzer extends AbstractMessageAnalyzer<Object> implements
 	@Inject
 	private RemoteIdChannelManager m_manager;
 
-	private Logger m_logger;
+	private static Logger m_logger;
 
 	private boolean m_localMode = true;
 

File: cat-home/src/main/java/com/dianping/cat/report/task/ProblemMerger.java
Patch:
@@ -22,7 +22,7 @@ public class ProblemMerger implements ReportMerger<ProblemReport> {
 
 	@Override
 	public ProblemReport merge(String reportDomain, List<Report> reports) {
-		ProblemReportMerger merger = new ProblemReportMerger(new ProblemReport(reportDomain));
+		ProblemReportMerger merger = new HistoryProblemReportMerger(new ProblemReport(reportDomain));
 
 		for (Report report : reports) {
 			String xml = report.getContent();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/remote/RemoteIdChannel.java
Patch:
@@ -73,6 +73,7 @@ public void moveTo(File anotherBase) throws IOException {
 	public void write(MessageTree tree) throws IOException {
 		List<String> remoteIds = new ArrayList<String>();
 		Transaction t = (Transaction) tree.getMessage();
+		
 		doTransactionChilds(remoteIds, t);
 
 		if (remoteIds.size() == 0) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/remote/RemoteIdChannelManager.java
Patch:
@@ -87,7 +87,7 @@ public void initialize() throws InitializationException {
 		m_baseDir = configManager.getHdfsLocalBaseDir("dump");
 	}
 
-	private RemoteIdChannel makeChannel(String key, String path, boolean forceNew, long startTime) throws IOException {
+	private RemoteIdChannel makeChannel(String key, String path, long startTime) throws IOException {
 		RemoteIdChannel channel = new RemoteIdChannel(new File(m_baseDir, "draft"), path, startTime);
 
 		m_logger.info(String.format("new RemoteIdChannel %s", path));
@@ -104,7 +104,7 @@ public RemoteIdChannel openChannel(String path, long startTime) throws IOExcepti
 				channel = m_channels.get(path);
 
 				if (channel == null) {
-					channel = makeChannel(path, path, false, startTime);
+					channel = makeChannel(path, path, startTime);
 				}
 			}
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -29,6 +29,7 @@
 import com.dianping.cat.consumer.problem.handler.LongSqlHandler;
 import com.dianping.cat.consumer.problem.handler.LongUrlHandler;
 import com.dianping.cat.consumer.remote.RemoteIdAnalyzer;
+import com.dianping.cat.consumer.remote.RemoteIdChannelManager;
 import com.dianping.cat.consumer.remote.RemoteIdUploader;
 import com.dianping.cat.consumer.transaction.TransactionAnalyzer;
 import com.dianping.cat.hadoop.dal.LogviewDao;
@@ -92,7 +93,8 @@ public List<Component> defineComponents() {
 				.req(DumpUploader.class, DumpChannelManager.class));
 		all.add(C(RemoteIdAnalyzer.class).is(PER_LOOKUP) //
 				.req(ServerConfigManager.class, MessagePathBuilder.class) //
-				.req(RemoteIdUploader.class));	
+				.req(RemoteIdUploader.class, RemoteIdChannelManager.class));	
+		all.add(C(RemoteIdChannelManager.class));
 
 		all.add(C(DumpChannel.class));
 		all.add(C(DumpChannelManager.class) //

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskHelper.java
Patch:
@@ -14,12 +14,11 @@ public class TaskHelper {
 
 	public static Date nextTaskTime() {
 		Calendar cal = Calendar.getInstance();
-		int min = cal.get(Calendar.MINUTE);
 		final int startFindMin = 10;
 		cal.set(Calendar.MINUTE, startFindMin);
 		cal.set(Calendar.SECOND, 0);
 		cal.set(Calendar.MILLISECOND, 0);
-		if (min >= startFindMin) {
+		if (cal.get(Calendar.MINUTE) >= startFindMin) {
 			cal.add(Calendar.HOUR, 1);// timeout, waiting for next hour
 		}
 		return cal.getTime();

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskConsumer.java
Patch:
@@ -30,7 +30,7 @@ public abstract class TaskConsumer implements Runnable {
 	public void run() {
 		String localIp = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 		findtask: while (running) {
-			LockSupport.parkNanos(2L * 1000 * 1000 * 1000);
+			LockSupport.parkNanos(2L * 1000 * 1000 * 1000); // sleeping between tasks
 			Task task = findDoingTask(localIp); // find doing task
 			if (task == null) {
 				task = findTodoTask(); // find todo task

File: cat-core/src/main/java/com/dianping/cat/message/internal/AbstractMessage.java
Patch:
@@ -22,8 +22,8 @@ public abstract class AbstractMessage implements Message {
 	private boolean m_completed;
 
 	public AbstractMessage(String type, String name) {
-		m_type = type;
-		m_name = name;
+		m_type = String.valueOf(type);
+		m_name = String.valueOf(name);
 		m_timestampInMicros = MilliSecondTimer.currentTimeMicros();
 	}
 

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -221,7 +221,7 @@ public void setup() {
 	}
 
 	boolean shouldThrottle(MessageTree tree) {
-		if (tree.getMessage() != null && tree.getMessage().getName().equals("Heartbeat")) {
+		if (tree.getMessage() != null && "Heartbeat".equals(tree.getMessage().getName())) {
 			return false;
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/task/TaskHelper.java
Patch:
@@ -60,7 +60,7 @@ public static String join(int[] array, char separator, int startIndex, int endIn
 		bufSize *= 4;
 		StringBuilder buf = new StringBuilder(bufSize);
 
-		for (int i = startIndex; i < endIndex; i++) {
+		for (int i = startIndex; i <= endIndex; i++) {
 			buf.append(array[i]);
 			if (i < endIndex) {
 				buf.append(separator);

File: cat-core/src/main/java/com/dianping/cat/message/spi/internal/DefaultMessageHandler.java
Patch:
@@ -46,7 +46,7 @@ public void handle(MessageTree tree) {
 
 			try {
 				consumer.consume(tree);
-			} catch (Exception e) {
+			} catch (Throwable e) {
 				m_logger.error("Error when consuming message in " + consumer + "! tree: " + tree, e);
 			}
 		}

File: cat-core/src/main/java/com/dianping/cat/status/StatusInfoCollector.java
Patch:
@@ -120,9 +120,11 @@ public void visitMemory(MemoryInfo memory) {
 		memory.setNonHeapUsage(bean.getNonHeapMemoryUsage().getUsed());
 
 		List<GarbageCollectorMXBean> beans = ManagementFactory.getGarbageCollectorMXBeans();
+
 		for (GarbageCollectorMXBean mxbean : beans) {
 			if (mxbean.isValid()) {
 				GcInfo gc = new GcInfo();
+
 				gc.setName(mxbean.getName());
 				gc.setCount(mxbean.getCollectionCount());
 				gc.setTime(mxbean.getCollectionTime());
@@ -148,7 +150,7 @@ public void visitOs(OsInfo os) {
 
 		os.setArch(bean.getArch());
 		os.setName(bean.getName());
-		os.setVersion(bean.getName());
+		os.setVersion(bean.getVersion());
 		os.setAvailableProcessors(bean.getAvailableProcessors());
 		os.setSystemLoadAverage(bean.getSystemLoadAverage());
 

File: cat-home/src/main/java/com/dianping/cat/report/task/DefaultTaskConsumer.java
Patch:
@@ -150,7 +150,7 @@ protected void mergeReport(Task task) {
 			m_logger.info("no daily report");
 		}
 
-		m_logger.info(String.format("start merge %s report %s in %s: ", reportDomain, reportName, reportPeriod));
+		m_logger.info(String.format("start merge %s report:%s from %s to %s: ", reportName, reportDomain, yesterdayZero, todayZero));
 
 		String content = null;
 		try {
@@ -228,7 +228,7 @@ protected boolean processTask(Task doing) {
 
 			if (graphs != null) {
 				for (Graph graph : graphs) {
-					this.graphDao.insertOrUpdate(graph); // use mysql unique index and insert on duplicate
+					this.graphDao.insert(graph); // use mysql unique index and insert on duplicate
 				}
 			}
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/internal/DefaultMessageTree.java
Patch:
@@ -166,7 +166,7 @@ public void setThreadName(String threadName) {
 	@Override
 	public String toString() {
 		PlainTextMessageCodec codec = new PlainTextMessageCodec();
-		ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8096);
+		ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8192);
 
 		codec.encode(this, buf);
 		buf.readInt(); // get rid of length

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/HistoricalLogViewService.java
Patch:
@@ -58,7 +58,7 @@ protected String buildModel(ModelRequest request) throws Exception {
 		}
 
 		if (tree != null) {
-			ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8096);
+			ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8192);
 
 			m_codec.encode(tree, buf);
 			buf.readInt(); // get rid of length

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/LocalLogViewService.java
Patch:
@@ -56,7 +56,7 @@ protected String getReport(ModelRequest request, ModelPeriod period, String doma
 		}
 
 		if (tree != null) {
-			ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8096);
+			ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8192);
 
 			m_codec.encode(tree, buf);
 			buf.readInt(); // get rid of length

File: cat-home/src/test/java/com/dianping/cat/report/task/TaskConsumerTest.java
Patch:
@@ -40,7 +40,7 @@ protected void taskNotFoundDuration() {
 		}
 
 		@Override
-		protected void mergeReport() {
+		protected void mergeReport(Task task) {
 			replayer.add(6);
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/historyReport/Handler.java
Patch:
@@ -48,7 +48,9 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		Date end = new Date();
 		String domain = payload.getDomain();
 
+		model.setPage(payload.getPage());
 		model.setAction(payload.getAction());
+
 		try {
 			start = sdf.parse(payload.getStartDate());
 			end = sdf.parse(payload.getEndDate());

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -374,6 +374,7 @@ private void storeReports(boolean atEnd) {
 					task.setReportPeriod(period);
 					task.setStatus(1); // status todo
 					m_taskDao.insert(task);
+					m_logger.info("insert transaction task:" + task.toString());
 				}
 			}
 

File: cat-home/src/test/java/com/dianping/cat/report/task/TaskConsumerTest.java
Patch:
@@ -63,7 +63,7 @@ protected boolean processTask(Task doing) {
 		}
 
 		@Override
-		protected void taskRetryDuration() {
+		protected void taskRetryDuration(Task task, int retryTimes) {
 			replayer.add(11);
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseCompositeModelService.java
Patch:
@@ -77,6 +77,7 @@ public ModelResponse<T> invoke(final ModelRequest request) {
 
 		t.setStatus(Message.SUCCESS);
 		t.addData("request", request);
+		t.addData("thread",Thread.currentThread());
 
 		for (final ModelService<T> service : m_allServices) {
 			if (!service.isEligable(request)) {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseHistoricalModelService.java
Patch:
@@ -37,6 +37,7 @@ public void initialize() throws InitializationException {
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
 		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
+		t.addData("thread",Thread.currentThread());
 
 		try {
 			T model = buildModel(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/CompositeEventService.java
Patch:
@@ -33,7 +33,9 @@ protected EventReport merge(ModelRequest request, List<ModelResponse<EventReport
 		}
 		for (ModelResponse<EventReport> response : responses) {
 			EventReport model = response.getModel();
-			model.accept(merger);
+			if (model != null) {
+				model.accept(merger);
+			}
 		}
 
 		EventReport report = merger.getEventReport();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/CompositeTransactionService.java
Patch:
@@ -35,7 +35,9 @@ protected TransactionReport merge(ModelRequest request, List<ModelResponse<Trans
 		for (ModelResponse<TransactionReport> response : responses) {
 			if (response != null) {
 				TransactionReport model = response.getModel();
-				model.accept(merger);
+				if (model != null) {
+					model.accept(merger);
+				}
 			}
 		}
 

File: cat-core/src/main/java/com/dianping/cat/storage/message/LocalLogviewBucket.java
Patch:
@@ -141,7 +141,7 @@ public Meta getMeta(String id) {
 				ChannelBuffer buf = ChannelBuffers.wrappedBuffer(bytes);
 				MessageTree data = m_codec.decode(buf);
 
-				return new Meta(data.getMessageId(), data.getThreadId(), offset, num);
+				return new Meta(data.getMessageId(), data.getThreadId(), offset + 1 + String.valueOf(num).length(), num);
 			} catch (Exception e) {
 				m_logger.error(String.format("Error when reading file(%s)!", m_logicalPath), e);
 			} finally {

File: cat-core/src/test/java/com/dianping/cat/storage/MesageTreeBucketTestCase.java
Patch:
@@ -18,9 +18,9 @@
 
 public abstract class MesageTreeBucketTestCase extends ComponentTestCase {
 
-	protected final static int threadNum = 10;// notice: max 9, for creating asc order id bellow
+	protected final static int threadNum = 10;// notes: max 9, for creating asc order id bellow
 
-	protected final static int timesPerThread = 1000; // notice: must be powers 10, fro creating asc order id bellow
+	protected final static int timesPerThread = 100; // notes: must be powers 10, for creating asc order id bellow
 
 	protected ExecutorService pool = null;
 

File: cat-core/src/test/java/com/dianping/cat/storage/message/LocalLogviewBucketTest.java
Patch:
@@ -14,7 +14,6 @@
 
 @RunWith(JUnit4.class)
 public class LocalLogviewBucketTest extends MesageTreeBucketTestCase {
-
 	@SuppressWarnings("unchecked")
 	protected Bucket<MessageTree> createBucket() throws Exception, IOException {
 		Bucket<MessageTree> bucket = lookup(Bucket.class, MessageTree.class.getName() + "-logview");

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseCompositeModelService.java
Patch:
@@ -91,6 +91,8 @@ public ModelResponse<T> invoke(final ModelRequest request) {
 			s_threadPool.submit(new Runnable() {
 				@Override
 				public void run() {
+					Cat.setup("model-service");
+					
 					try {
 						ModelResponse<T> response = service.invoke(request);
 
@@ -104,6 +106,7 @@ public void run() {
 						t.setStatus(e);
 					} finally {
 						semaphore.release();
+						Cat.reset();
 					}
 				}
 			});

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -36,7 +36,7 @@ public class DefaultMessageManager extends ContainerHolder implements MessageMan
 
 	// we don't use static modifier since MessageManager is a singleton in
 	// production actually
-	private InheritableThreadLocal<Context> m_context = new InheritableThreadLocal<Context>() {
+	private ThreadLocal<Context> m_context = new ThreadLocal<Context>() {
 		@Override
 		protected Context initialValue() {
 			return null;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -182,6 +182,7 @@ public Period(long startTime, long endTime) {
 				MessageQueue queue = lookup(MessageQueue.class);
 				PeriodTask task = new PeriodTask(m_factory, analyzer, queue, startTime);
 
+				task.enableLogging(m_logger);
 				m_tasks.add(task);
 			}
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -266,7 +266,6 @@ private void storeReports(boolean atEnd) {
 				String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 
 				for (TransactionReport report : m_reports.values()) {
-
 					Report r = m_reportDao.createLocal();
 					String xml = builder.buildXml(report);
 					String domain = report.getDomain();

File: cat-core/src/main/java/com/dianping/cat/storage/message/LocalLogviewBucket.java
Patch:
@@ -111,7 +111,7 @@ public MessageTree findById(String id) throws IOException {
 
 				return data;
 			} catch (Exception e) {
-				m_logger.error(String.format("Error when reading file(%s)!", m_readDataFile), e);
+				m_logger.error(String.format("Error when reading file(%s)!", m_logicalPath), e);
 			} finally {
 				m_readLock.unlock();
 			}
@@ -143,7 +143,7 @@ public Meta getMeta(String id) {
 
 				return new Meta(data.getMessageId(), data.getThreadId(), offset, num);
 			} catch (Exception e) {
-				m_logger.error(String.format("Error when reading file(%s)!", m_readDataFile), e);
+				m_logger.error(String.format("Error when reading file(%s)!", m_logicalPath), e);
 			} finally {
 				m_readLock.unlock();
 			}

File: cat-home/src/main/java/com/dianping/cat/report/graph/ValueTranslater.java
Patch:
@@ -1,7 +1,7 @@
 package com.dianping.cat.report.graph;
 
 public interface ValueTranslater {
-	public int getMaxValue(double[] values);
+	public double getMaxValue(double[] values);
 	
-	public int[] translate(int height, int maxValue, double[] values);
+	public int[] translate(int height, double maxValue, double[] values);
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/Handler.java
Patch:
@@ -112,6 +112,7 @@ private void showReport(Model model, Payload payload) {
 			model.setIpAddress(ip);
 
 			DisplayHeartbeat displayHeartbeat = new DisplayHeartbeat(m_builder);
+			
 			model.setResult(displayHeartbeat.display(report, ip));
 			model.setActiveThreadGraph(displayHeartbeat.getActiceThreadGraph());
 			model.setDaemonThreadGraph(displayHeartbeat.getDeamonThreadGraph());
@@ -126,8 +127,8 @@ private void showReport(Model model, Payload payload) {
 			model.setOldGcCountGraph(displayHeartbeat.getOldGcCountGraph());
 			model.setHeapUsageGraph(displayHeartbeat.getHeapUsageGraph());
 			model.setNoneHeapUsageGraph(displayHeartbeat.getNoneHeapUsageGraph());
-			model.setDiskFreeGraph(displayHeartbeat.getDiskFreeGraph());
-			model.setDiskUseableGraph(displayHeartbeat.getDiskUseableGraph());
+			model.setDisks(displayHeartbeat.getDisks());
+			model.setDisksGraph(displayHeartbeat.getDisksGraph());
 			model.setSystemLoadAverageGraph(displayHeartbeat.getSystemLoadAverageGraph());
 			model.setMemoryFreeGraph(displayHeartbeat.getMemoryFreeGraph());
 		} catch (Throwable e) {

File: cat-core/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -153,6 +153,8 @@ static ClientConfig loadClientConfig(File configFile) {
 		// do validation
 		if (clientConfig != null) {
 			clientConfig.accept(new ClientConfigValidator());
+		} else if (globalConfig != null) { // for test purpose
+			return globalConfig;
 		}
 
 		return clientConfig;

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -192,7 +192,7 @@ private void sendInternal(MessageTree tree) {
 		}
 
 		if (m_future != null && m_future.getChannel().isOpen()) {
-			ChannelBuffer buf = ChannelBuffers.dynamicBuffer(10 * 1024); // 10K
+			ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8 * 1024); // 8K
 
 			m_codec.encode(tree, buf);
 

File: cat-core/src/test/java/com/dianping/cat/storage/MesageTreeBucketTestCase.java
Patch:
@@ -143,6 +143,7 @@ public void run() {
 						DefaultMessageTree mt = new DefaultMessageTree();
 						mt.setMessageId(id);
 						Assert.assertTrue(bucket.storeById(id, mt));
+						
 						MessageTree target = bucket.findById(id);
 						Assert.assertEquals(id, target.getMessageId());
 					} catch (Throwable e) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemAnalyzer.java
Patch:
@@ -215,7 +215,7 @@ private void storeReports(boolean atEnd) {
 					String xml = builder.buildXml(report);
 					String domain = report.getDomain();
 
-					r.setName("event");
+					r.setName("problem");
 					r.setDomain(domain);
 					r.setPeriod(period);
 					r.setIp(ip);

File: cat-core/src/main/java/com/dianping/cat/status/StatusInfoCollector.java
Patch:
@@ -137,6 +137,7 @@ public void visitMemory(MemoryInfo memory) {
 		MemoryMXBean bean = ManagementFactory.getMemoryMXBean();
 		Runtime runtime = Runtime.getRuntime();
 
+		memory.setMax(runtime.maxMemory());
 		memory.setTotal(runtime.totalMemory());
 		memory.setFree(runtime.freeMemory());
 		memory.setHeapUsage(bean.getHeapMemoryUsage().getUsed());

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/location/IPSeekerManager.java
Patch:
@@ -17,7 +17,7 @@ public static synchronized String getLocation(String ip) {
 		String area = loc.getArea();
 		String country = loc.getCountry();
 
-		if (area.isEmpty() && country.isEmpty()) {
+		if (area.trim().isEmpty() && country.trim().isEmpty()) {
 			return "";
 		} else {
 			return area + "@" + country;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/logview/LogviewUploader.java
Patch:
@@ -167,7 +167,8 @@ private void uploadIndex(List<String> ids, long timestamp, LocalLogviewBucket bu
 		int len = ids.size();
 		List<Logview> logviews = new ArrayList<Logview>();
 		Date date = new Date(timestamp);
-		String path = bucket.getLogicalPath();
+		String ipAddress = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
+		String path = bucket.getLogicalPath() +  "-" + ipAddress;
 
 		for (int i = 0; i < len; i++) {
 			String id = ids.get(i);

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/Handler.java
Patch:
@@ -137,7 +137,7 @@ public int compare(DisplayModel m1, DisplayModel m2) {
 		if (displayModels.size() > 100) {
 			List<DisplayModel> topModels = new ArrayList<Model.DisplayModel>(100);
 
-			Collections.copy(displayModels.subList(0, 100), topModels);
+			Collections.copy(topModels, displayModels.subList(0, 100));
 			return topModels;
 		} else {
 			return displayModels;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpChannelManager.java
Patch:
@@ -41,7 +41,7 @@ public void closeAllChannels() {
 
 	public void closeAllChannels(long startTime) {
 		for (DumpChannel channel : m_channels.values()) {
-			if (channel.getStartTime() == startTime) {
+			if (channel.getStartTime() <= startTime) {
 				closeChannel(channel);
 			}
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/heartbeat/HeartbeatAnalyzer.java
Patch:
@@ -25,7 +25,7 @@
 import com.dianping.cat.message.spi.AbstractMessageAnalyzer;
 import com.dianping.cat.message.spi.MessageTree;
 import com.dianping.cat.status.model.entity.StatusInfo;
-import com.dianping.cat.status.model.entity.ThreadInfo;
+import com.dianping.cat.status.model.entity.ThreadsInfo;
 import com.dianping.cat.storage.Bucket;
 import com.dianping.cat.storage.BucketManager;
 import com.site.lookup.annotation.Inject;
@@ -177,7 +177,7 @@ private void setHeartBeatInfo(Period period, Heartbeat heartbeat) {
 		String xml = (String) heartbeat.getData();
 		try {
 			StatusInfo info = new com.dianping.cat.status.model.transform.DefaultXmlParser().parse(xml);
-			ThreadInfo thread = info.getThread();
+			ThreadsInfo thread = info.getThread();
 			period.setThreadCount(thread.getCount());
 			period.setDaemonCount(thread.getDaemonCount());
 			period.setTotalStartedCount((int) thread.getTotalStartedCount());

File: cat-consumer/src/main/java/com/dianping/cat/consumer/logview/LogviewUploader.java
Patch:
@@ -18,6 +18,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
+import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.hadoop.dal.Logview;
 import com.dianping.cat.hadoop.dal.LogviewDao;
@@ -143,8 +144,8 @@ private void uploadData(String logicalPath) {
 
 			try {
 				FileSystem fs = m_fileSystemManager.getFileSystem("logview", sb);
-
-				path = new Path(sb.toString(), logicalPath);
+				String ipAddress = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
+				path = new Path(sb.toString(), logicalPath + "-" + ipAddress);
 
 				FileInputStream fis = new FileInputStream(file);
 				FSDataOutputStream fdos = fs.create(path);

File: cat-consumer/src/test/java/com/dianping/cat/consumer/logview/LogviewUploaderTest.java
Patch:
@@ -31,6 +31,7 @@ public void test() throws Exception {
 
 		bucket.flush();
 		uploader.addBucket(timestamp, domain);
+		
 	}
 
 	private DefaultMessageTree newMessageTree(int i, long timestamp) {

File: cat-core/src/main/java/com/dianping/cat/message/spi/MessagePathBuilder.java
Patch:
@@ -11,6 +11,8 @@ public interface MessagePathBuilder {
 	public String getLogViewPath(String messageId);
 
 	public String getMessagePath(String domain, Date timestamp);
+	
+	public String getLogViewPath(String domain, Date timestamp);
 
 	public String getReportPath(String name, Date timestamp);
 }

File: cat-core/src/main/java/com/dianping/cat/storage/message/LocalLogviewBucket.java
Patch:
@@ -253,7 +253,7 @@ public void initialize(Class<?> type, String domain, Date timestamp) throws IOEx
 		m_writeLock = new ReentrantLock();
 		m_readLock = new ReentrantLock();
 
-		String logicalPath = m_pathBuilder.getMessagePath(domain, timestamp);
+		String logicalPath = m_pathBuilder.getLogViewPath(domain, timestamp);
 
 		File dataFile = new File(m_baseDir, logicalPath);
 		File indexFile = new File(m_baseDir, logicalPath + ".idx");

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketReceiver.java
Patch:
@@ -69,8 +69,8 @@ public void initialize() {
 
 		m_queue = new LinkedBlockingQueue<ChannelBuffer>();
 
-		ExecutorService bossExecutor = Threads.forPool().getFixedThreadPool("TcpSocketReceiver-Boss", 20);
-		ExecutorService workerExecutor = Threads.forPool().getFixedThreadPool("TcpSocketReceiver-Worker", 20);
+		ExecutorService bossExecutor = Threads.forPool().getCachedThreadPool("TcpSocketReceiver-Boss");
+		ExecutorService workerExecutor = Threads.forPool().getCachedThreadPool("TcpSocketReceiver-Worker");
 		ChannelFactory factory = new NioServerSocketChannelFactory(bossExecutor, workerExecutor);
 		ServerBootstrap bootstrap = new ServerBootstrap(factory);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/home/Action.java
Patch:
@@ -3,7 +3,9 @@
 public enum Action implements com.site.web.mvc.Action {
 	VIEW("view"),
 
-	CHECKPOINT("checkpoint");
+	CHECKPOINT("checkpoint"),
+	
+	THREAD_DUMP("threadDump");
 
 	private String m_name;
 

File: cat-home/src/main/java/com/dianping/cat/report/page/home/JspViewer.java
Patch:
@@ -10,6 +10,7 @@ protected String getJspFilePath(Context ctx, Model model) {
 
 		switch (action) {
 		case VIEW:
+		case THREAD_DUMP:
 			return JspFile.VIEW.getPath();
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/LocalEventService.java
Patch:
@@ -22,8 +22,9 @@ protected EventReport getReport(ModelRequest request, ModelPeriod period, String
 		EventReport report = super.getReport(request, period, domain);
 
 		if (report == null && period.isLast()) {
-			long date = Long.parseLong(request.getProperty("date"));
-
+			long current = System.currentTimeMillis();
+			long hour = 60 * 60 * 1000;
+			long date = current - current % (hour) - hour;
 			report = getLocalReport(date, domain);
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/LocalProblemService.java
Patch:
@@ -22,8 +22,9 @@ protected ProblemReport getReport(ModelRequest request, ModelPeriod period, Stri
 		ProblemReport report = super.getReport(request, period, domain);
 
 		if (report == null && period.isLast()) {
-			long date = Long.parseLong(request.getProperty("date"));
-
+			long current = System.currentTimeMillis();
+			long hour = 60 * 60 * 1000;
+			long date = current - current % (hour) - hour;
 			report = getLocalReport(date, domain);
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/LocalTransactionService.java
Patch:
@@ -22,8 +22,9 @@ protected TransactionReport getReport(ModelRequest request, ModelPeriod period,
 		TransactionReport report = super.getReport(request, period, domain);
 
 		if (report == null && period.isLast()) {
-			long date = Long.parseLong(request.getProperty("date"));
-
+			long current = System.currentTimeMillis();
+			long hour = 60 * 60 * 1000;
+			long date = current - current % (hour) - hour;
 			report = getLocalReport(date, domain);
 		}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/EventNameAggregator.java
Patch:
@@ -10,7 +10,7 @@ public class EventNameAggregator extends DefaultMerger {
 	public EventNameAggregator(EventReport eventReport) {
 		super(eventReport);
 	}
-
+	
 	@Override
 	protected void mergeName(EventName old, EventName other) {
 		old.setTotalCount(old.getTotalCount() + other.getTotalCount());

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/ProblemReportMerger.java
Patch:
@@ -8,10 +8,12 @@ public ProblemReportMerger(ProblemReport problemReport) {
 	   super(problemReport);
    }
 
+	
 	@Override
    public void visitProblemReport(ProblemReport problemReport) {
 	   super.visitProblemReport(problemReport);
 	   
 	   getProblemReport().getIps().addAll(problemReport.getIps());
+	   getProblemReport().getDomainNames().addAll(problemReport.getDomainNames());
    }
 }

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -195,9 +195,8 @@ public void initialize(Class<?> type, String name, Date timestamp) throws IOExce
 	}
 
 	protected void loadIndexes(File indexFile) throws IOException {
-		m_writeLock.lock();
-
 		BufferedReader reader = null;
+		m_writeLock.lock();
 		try {
 			reader = new BufferedReader(new FileReader(indexFile));
 			StringSplitter splitter = Splitters.by('\t');
@@ -223,10 +222,10 @@ protected void loadIndexes(File indexFile) throws IOException {
 				}
 			}
 		} finally {
+			m_writeLock.unlock();
 			if (reader != null) {
 				reader.close();
 			}
-			m_writeLock.unlock();
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/build/ServiceComponentConfigurator.java
Patch:
@@ -73,7 +73,7 @@ public List<Component> defineComponents() {
 		      .req(BucketManager.class, LogviewDao.class, InputChannelManager.class) //
 		      .req(MessageCodec.class, "html"));
 		all.add(C(ModelService.class, "logview", CompositeLogViewService.class) //
-		      .req(ModelService.class, new String[] { "logview-local", "logview-historical" }, "m_services"));
+		      .req(ModelService.class, new String[] { "logview-historical" }, "m_services"));
 
 		return all;
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/Handler.java
Patch:
@@ -93,6 +93,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			} else if ("problem".equals(report)) {
 				response = m_problemService.invoke(request);
 			} else if ("logview".equals(report)) {
+				request.setProperty("messageId", payload.getMessageId());
 				response = m_logviewService.invoke(request);
 			} else {
 				throw new RuntimeException("Unsupported report: " + report + "!");

File: cat-core/src/main/java/com/dianping/cat/message/internal/AbstractMessage.java
Patch:
@@ -13,7 +13,7 @@ public abstract class AbstractMessage implements Message {
 
 	private String m_name;
 
-	private String m_status;
+	private String m_status = "unset";
 
 	private long m_timestampInMicros;
 

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageProducer.java
Patch:
@@ -130,6 +130,7 @@ public Transaction newTransaction(Transaction parent, String type, String name)
 			DefaultTransaction transaction = new DefaultTransaction(type, name, m_manager);
 
 			parent.addChild(transaction);
+			transaction.setStandalone(false);
 			return transaction;
 		} else {
 			return NullMessage.TRANSACTION;

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseHistoricalModelService.java
Patch:
@@ -3,7 +3,6 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
-import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.configuration.server.entity.ServerConfig;
 import com.dianping.cat.message.Message;
@@ -41,7 +40,7 @@ public void initialize() throws InitializationException {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			T model = buildModel(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -3,7 +3,6 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
-import com.dianping.cat.Cat;
 import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.configuration.server.entity.ServerConfig;
 import com.dianping.cat.consumer.RealtimeConsumer;
@@ -73,7 +72,7 @@ public void initialize() throws InitializationException {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			T report = getReport(request, request.getPeriod(), request.getDomain());

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -7,7 +7,6 @@
 
 import org.xml.sax.SAXException;
 
-import com.dianping.cat.Cat;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.page.model.spi.ModelPeriod;
@@ -58,7 +57,7 @@ public String getName() {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			URL url = buildUrl(request);

File: cat-hadoop/src/test/java/com/dianping/cat/job/sql/SqlJobDataProduceTest.java
Patch:
@@ -4,7 +4,6 @@
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
 
-import com.dianping.cat.hadoop.hdfs.HdfsMessageStorage;
 import com.dianping.cat.job.hdfs.CatTestCase;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.MessageProducer;
@@ -82,6 +81,5 @@ public void test() throws Exception {
 				storage.store(tree);
 			}
 		}
-		((HdfsMessageStorage) storage).dispose();
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -53,6 +53,7 @@ private EventName getAggregatedEventName(Payload payload) {
 		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
 		      .setProperty("date", date) //
 		      .setProperty("type", type) //
+		      .setProperty("name", "*") //
 		      .setProperty("all", "true");
 		ModelResponse<EventReport> response = m_service.invoke(request);
 		EventReport report = response.getModel();

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -54,6 +54,7 @@ private TransactionName getAggregatedTransactionName(Payload payload) {
 		ModelRequest request = new ModelRequest(domain, payload.getPeriod()) //
 		      .setProperty("date", date) //
 		      .setProperty("type", type) //
+		      .setProperty("name", "*") //
 		      .setProperty("all", "true");
 		ModelResponse<TransactionReport> response = m_service.invoke(request);
 		TransactionReport report = response.getModel();

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/CompositeProblemService.java
Patch:
@@ -3,7 +3,6 @@
 import java.util.List;
 
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
-import com.dianping.cat.consumer.problem.model.transform.DefaultMerger;
 import com.dianping.cat.report.page.model.spi.ModelRequest;
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.internal.BaseCompositeModelService;
@@ -21,15 +20,15 @@ protected BaseRemoteModelService<ProblemReport> createRemoteService() {
 
 	@Override
 	protected ProblemReport merge(ModelRequest request, List<ModelResponse<ProblemReport>> responses) {
-		DefaultMerger merger = null;
+		ProblemReportMerger merger = null;
 
 		for (ModelResponse<ProblemReport> response : responses) {
 			if (response != null) {
 				ProblemReport model = response.getModel();
 
 				if (model != null) {
 					if (merger == null) {
-						merger = new DefaultMerger(model);
+						merger = new ProblemReportMerger(model);
 					} else {
 						model.accept(merger);
 					}

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodec.java
Patch:
@@ -150,7 +150,7 @@ protected Message decodeLine(ChannelBuffer buf, DefaultTransaction parent, Stack
 
 			long d = Long.parseLong(duration.substring(0, duration.length() - 2));
 
-			if (tree.getDomain().equals("MobileApi")) { //TODO remove it after MobileApi upgrade
+			if ("MobileApi".equals(tree.getDomain())) { //TODO remove it after MobileApi upgrade
 				transaction.setDurationInMillis(d);
 			} else {
 				transaction.setDurationInMicros(d);
@@ -173,7 +173,7 @@ protected Message decodeLine(ChannelBuffer buf, DefaultTransaction parent, Stack
 
 			long d = Long.parseLong(duration.substring(0, duration.length() - 2));
 
-			if (tree.getDomain().equals("MobileApi")) {  //TODO remove it after MobileApi upgrade
+			if ("MobileApi".equals(tree.getDomain())) {  //TODO remove it after MobileApi upgrade
 				parent.setDurationInMillis(d);
 			} else {
 				parent.setDurationInMicros(d);

File: cat-core/src/test/java/com/dianping/cat/storage/message/LocalLogviewBucketTest.java
Patch:
@@ -21,11 +21,11 @@ protected Bucket<MessageTree> createBucket() throws Exception, IOException {
 		bucket.initialize(null, "cat", new Date());
 		return bucket;
 	}
-	
+
 	@After
 	public void tearDown() throws Exception {
 		super.tearDown();
-		String m_baseDir = "target/bucket";
+		String m_baseDir = ((LocalLogviewBucket) this.bucket).getBaseDir();
 		String logicalPath = ((LocalLogviewBucket) this.bucket).getLogicalPath();
 		new File(m_baseDir, logicalPath).delete();
 		new File(m_baseDir, logicalPath + ".idx").delete();

File: cat-core/src/test/java/com/dianping/cat/storage/report/LocalReportBucketTest.java
Patch:
@@ -21,7 +21,7 @@ protected Bucket<String> createBucket() throws Exception, IOException {
 	@After
 	public void tearDown() throws Exception {
 		super.tearDown();
-		String m_baseDir = "target/bucket";
+		String m_baseDir = ((LocalReportBucket) this.bucket).getBaseDir();
 		String logicalPath = ((LocalReportBucket) this.bucket).getLogicalPath();
 		new File(m_baseDir, logicalPath).delete();
 		new File(m_baseDir, logicalPath + ".idx").delete();

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -147,7 +147,8 @@ public void initialize() throws InitializationException {
 
 			uploadThread.setName("LogviewUploader");
 			uploadThread.start();
-			System.out.println("LogviewUploader started.");
+
+			m_logger.info("LogviewUploader started.");
 		}
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpUploader.java
Patch:
@@ -71,6 +71,7 @@ public void start() {
 		if (!m_job.isAlive()) {
 			m_job.setName("DumpUploader");
 			m_job.start();
+			m_logger.info("DumpUploader started.");
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -14,7 +14,6 @@
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.site.lookup.annotation.Inject;
-import com.site.lookup.util.StringUtils;
 import com.site.web.mvc.PageHandler;
 import com.site.web.mvc.annotation.InboundActionMeta;
 import com.site.web.mvc.annotation.OutboundActionMeta;

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -14,7 +14,6 @@
 import com.dianping.cat.report.page.model.spi.ModelResponse;
 import com.dianping.cat.report.page.model.spi.ModelService;
 import com.site.lookup.annotation.Inject;
-import com.site.lookup.util.StringUtils;
 import com.site.web.mvc.PageHandler;
 import com.site.web.mvc.annotation.InboundActionMeta;
 import com.site.web.mvc.annotation.OutboundActionMeta;
@@ -106,7 +105,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			model.setIpAddress("All");
 			report = getAllIpReport(payload);
 			model.setReport(report);
-			model.setAllStatistics(new ProblemStatistics().displayAllIp(report));
+			model.setLongDate(payload.getDate());
+			model.setAllStatistics(new ProblemStatistics().displayAllIp(report,payload));
 		} else {
 			switch (payload.getAction()) {
 			case GROUP:

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/ProblemStatistics.java
Patch:
@@ -49,7 +49,9 @@ public String getUrl() {
 		return sb.toString();
 	}
 
-	public ProblemStatistics displayAllIp(ProblemReport report) {
+	public ProblemStatistics displayAllIp(ProblemReport report,Payload payload) {
+		m_threshold = payload.getLongTime();
+
 		if (report == null) {
 			return null;
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -79,7 +79,8 @@ public List<Component> defineComponents() {
 		      .req(MessageCodec.class, "plain-text"));
 
 		all.add(C(LogviewUploader.class) //
-		      .req(ServerConfigManager.class, BucketManager.class, LogviewDao.class));
+		      .req(ServerConfigManager.class, FileSystemManager.class) //
+		      .req(BucketManager.class, LogviewDao.class));
 		all.add(C(DumpUploader.class) //
 		      .req(ServerConfigManager.class, FileSystemManager.class));
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/DumpUploaderSample.java
Patch:
@@ -45,9 +45,7 @@ public void testUpload() throws Exception {
 
 		analyzer.doCheckpoint(true);
 
-		DumpUploader uploader = lookup(DumpUploader.class);
-
-		uploader.upload();
+		Thread.sleep(30 * 1000);
 	}
 
 	private DefaultMessageTree newMessageTree(int i, long timestamp) {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/dump/DumpUploaderSample.java
Patch:
@@ -17,7 +17,7 @@
 import com.site.lookup.ComponentTestCase;
 
 @RunWith(JUnit4.class)
-public class DumpUploaderTest extends ComponentTestCase {
+public class DumpUploaderSample extends ComponentTestCase {
 	@Before
 	public void before() throws Exception {
 		ServerConfigManager manager = lookup(ServerConfigManager.class);
@@ -28,7 +28,7 @@ public void before() throws Exception {
 	@Test
 	public void testUpload() throws Exception {
 		AnalyzerFactory factory = lookup(AnalyzerFactory.class);
-		long now = 1334041324150L;
+		long now = System.currentTimeMillis();
 		DefaultMessageQueue queue = new DefaultMessageQueue();
 		int num = 10000;
 

File: cat-core/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -87,7 +87,7 @@ protected void logRequestClientInfo(MessageProducer cat, HttpServletRequest req)
 			ip = ips[ips.length - 1].trim();
 		}
 
-		sb.append("RemoteIp=").append(ip);
+		sb.append("RemoteIP=").append(ip);
 		sb.append("&VirtualIP=").append(req.getRemoteAddr());
 		sb.append("&Server=").append(req.getServerName());
 		sb.append("&Referer=").append(req.getHeader("referer"));

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -209,7 +209,7 @@ public void finish() {
 		}
 
 		private void uploadLogviewBuckets(Set<String> domains) {
-			// TODO
+			
 		}
 
 		private void flushLogviewBuckets(Set<String> domains) {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/dump/DumpChannelManager.java
Patch:
@@ -28,7 +28,7 @@ public class DumpChannelManager extends ContainerHolder implements Initializable
 
 	private Map<String, Integer> m_indexes = new HashMap<String, Integer>();
 
-	private long m_maxSize = DEFAULT_MAX_SIZE / 1024 * 16;
+	private long m_maxSize = DEFAULT_MAX_SIZE;
 
 	private long m_lastChunkAdjust = 100 * 1024L; // 100K
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -127,7 +127,7 @@ public MessageAnalyzer getLastAnalyzer(String name) {
 		long lastStartTime = m_periodManager.getCurrentStartTime() - m_duration;
 		Period period = m_periodManager.findPeriod(lastStartTime);
 
-		return period.getAnalyzer(name);
+		return period == null ? null : period.getAnalyzer(name);
 	}
 
 	@Override

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -169,7 +169,7 @@ int processTransaction(TransactionReport report, MessageTree tree, Transaction t
 			}
 
 			// update statistics
-			long duration = t.getDurationInMillis();
+			double duration = t.getDurationInMicros() / 1000d;
 
 			name.setMax(Math.max(name.getMax(), duration));
 			name.setMin(Math.min(name.getMin(), duration));
@@ -196,7 +196,7 @@ int processTransaction(TransactionReport report, MessageTree tree, Transaction t
 	}
 
 	private void processTransactionGrpah(TransactionName name, Transaction t) {
-		long d = t.getDurationInMillis();
+		double d = t.getDurationInMicros() / 1000d;
 		Calendar cal = Calendar.getInstance();
 		cal.setTimeInMillis(t.getTimestamp());
 		int min = cal.get(Calendar.MINUTE);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/event/HistoricalEventService.java
Patch:
@@ -42,9 +42,8 @@ protected EventReport buildModel(ModelRequest request) throws Exception {
 	private EventReport getLocalReport(long timestamp, String domain) throws Exception {
 		Bucket<String> bucket = m_bucketManager.getReportBucket(timestamp, "event");
 		String xml = bucket.findById(domain);
-		DefaultXmlParser parser = new DefaultXmlParser();
 
-		return parser.parse(xml);
+		return xml == null ? null : new DefaultXmlParser().parse(xml);
 	}
 
 	private EventReport getRemoteReport(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/ip/HistoricalIpService.java
Patch:
@@ -42,9 +42,8 @@ protected IpReport buildModel(ModelRequest request) throws Exception {
 	private IpReport getLocalReport(long timestamp, String domain) throws Exception {
 		Bucket<String> bucket = m_bucketManager.getReportBucket(timestamp, "ip");
 		String xml = bucket.findById(domain);
-		DefaultXmlParser parser = new DefaultXmlParser();
 
-		return parser.parse(xml);
+		return xml == null ? null : new DefaultXmlParser().parse(xml);
 	}
 
 	private IpReport getRemoteReport(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HistoricalProblemService.java
Patch:
@@ -43,9 +43,8 @@ protected ProblemReport buildModel(ModelRequest request) throws Exception {
 	private ProblemReport getLocalReport(long timestamp, String domain) throws Exception {
 		Bucket<String> bucket = m_bucketManager.getReportBucket(timestamp, "problem");
 		String xml = bucket.findById(domain);
-		DefaultXmlParser parser = new DefaultXmlParser();
 
-		return parser.parse(xml);
+		return xml == null ? null : new DefaultXmlParser().parse(xml);
 	}
 
 	private ProblemReport getRemoteReport(long timestamp, String domain) throws Exception {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HistoricalTransactionService.java
Patch:
@@ -42,9 +42,8 @@ protected TransactionReport buildModel(ModelRequest request) throws Exception {
 	private TransactionReport getLocalReport(long timestamp, String domain) throws Exception {
 		Bucket<String> bucket = m_bucketManager.getReportBucket(timestamp, "transaction");
 		String xml = bucket.findById(domain);
-		DefaultXmlParser parser = new DefaultXmlParser();
 
-		return parser.parse(xml);
+		return xml == null ? null : new DefaultXmlParser().parse(xml);
 	}
 
 	private TransactionReport getRemoteReport(long timestamp, String domain) throws Exception {

File: cat-core/src/main/java/com/dianping/cat/message/spi/AbstractMessageAnalyzer.java
Patch:
@@ -48,7 +48,7 @@ public void doCheckpoint(boolean atEnd) {
 		// override it
 	}
 
-	protected List<String> getSortedDomains(Set<String> domains) {
+	protected List<String> sortDomains(Set<String> domains) {
 		List<String> sortedDomains = new ArrayList<String>(domains);
 
 		Collections.sort(sortedDomains, new Comparator<String>() {

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Handler.java
Patch:
@@ -55,7 +55,7 @@ private EventName getAggregatedEventName(Payload payload) {
 		      .setProperty("all", "true");
 		ModelResponse<EventReport> response = m_service.invoke(request);
 		EventReport report = response.getModel();
-		EventType t = report.findType(type);
+		EventType t = report == null ? null : report.findType(type);
 
 		if (t != null) {
 			EventName all = t.findName("ALL");
@@ -218,7 +218,7 @@ public int getDisplayWidth() {
 
 		@Override
 		public String getIdPrefix() {
-			return m_name.getId() + "-" + super.getIdPrefix();
+			return m_name.getId() + "_" + super.getIdPrefix();
 		}
 
 		protected EventName getEventName() {

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -56,7 +56,7 @@ private TransactionName getAggregatedTransactionName(Payload payload) {
 		      .setProperty("all", "true");
 		ModelResponse<TransactionReport> response = m_service.invoke(request);
 		TransactionReport report = response.getModel();
-		TransactionType t = report.findType(type);
+		TransactionType t = report == null ? null : report.findType(type);
 
 		if (t != null) {
 			TransactionName all = t.findName("ALL");
@@ -224,7 +224,7 @@ public int getDisplayWidth() {
 
 		@Override
 		public String getIdPrefix() {
-			return m_name.getId() + "-" + super.getIdPrefix();
+			return m_name.getId() + "_" + super.getIdPrefix();
 		}
 
 		protected TransactionName getTransactionName() {

File: cat-core/src/main/java/com/dianping/cat/message/io/DefaultMessageQueue.java
Patch:
@@ -22,7 +22,7 @@ public void initialize() throws InitializationException {
 		if (m_size > 0) {
 			m_queue = new LinkedBlockingQueue<MessageTree>(m_size);
 		} else {
-			m_queue = new LinkedBlockingQueue<MessageTree>(1000);
+			m_queue = new LinkedBlockingQueue<MessageTree>(10000);
 		}
 	}
 

File: cat-core/src/main/java/com/dianping/cat/message/spi/MessageAnalyzer.java
Patch:
@@ -1,9 +1,7 @@
 package com.dianping.cat.message.spi;
 
-import java.io.IOException;
-
 public interface MessageAnalyzer {
 	public void analyze(MessageQueue queue);
 
-	public void doCheckpoint() throws IOException;
+	public void doCheckpoint(boolean atEnd);
 }

File: cat-consumer/src/main/java/com/dianping/cat/consumer/build/ComponentsConfigurator.java
Patch:
@@ -6,6 +6,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import com.dianping.cat.configuration.ServerConfigManager;
 import com.dianping.cat.consumer.AnalyzerFactory;
 import com.dianping.cat.consumer.DefaultAnalyzerFactory;
 import com.dianping.cat.consumer.RealtimeConsumer;
@@ -40,7 +41,7 @@ public List<Component> defineComponents() {
 		      .config(E("failureType").value(failureTypes)));
 
 		all.add(C(Handler.class, LONG_URL.getName(), LongUrlHandler.class) //
-		      .config(E("threshold").value("1000")));
+				.req(ServerConfigManager.class));
 
 		all.add(C(ProblemAnalyzer.class).is(PER_LOOKUP) //
 		      .req(Handler.class, new String[] { FAILURE.getName(), LONG_URL.getName() }, "m_handlers") //

File: cat-core/src/main/java/com/dianping/cat/configuration/ClientConfigValidator.java
Patch:
@@ -9,7 +9,7 @@ public class ClientConfigValidator extends DefaultValidator {
 	private ClientConfig m_config;
 
 	private String getLocalAddress() {
-		return LocalIP.getAddress();
+		return NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 	}
 
 	@Override

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -192,8 +192,7 @@ public void reset() {
 		Context ctx = m_context.get();
 
 		if (ctx != null) {
-			ctx.m_stack = null;
-			ctx.m_tree = null;
+			ctx.m_stack.clear();
 		}
 
 		m_context.remove();
@@ -266,7 +265,7 @@ public void end(DefaultMessageManager manager, Transaction transaction) {
 					validateTransaction(current);
 				} else {
 					while (transaction != current && !m_stack.empty()) {
-						validateTransaction(current);
+						// validateTransaction(current);
 
 						current = m_stack.pop();
 					}

File: cat-core/src/main/java/com/dianping/cat/message/internal/MessageIdFactory.java
Patch:
@@ -2,7 +2,7 @@
 
 import java.util.List;
 
-import com.dianping.cat.configuration.LocalIP;
+import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.site.helper.Splitters;
 
 public class MessageIdFactory {
@@ -48,7 +48,7 @@ public void initialize(String domain) {
 		m_domain = domain;
 
 		if (m_ipAddress == null) {
-			String ip = LocalIP.getAddress();
+			String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 			List<String> items = Splitters.by(".").noEmptyItem().split(ip);
 			byte[] bytes = new byte[4];
 			

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/HtmlMessageCodec.java
Patch:
@@ -226,7 +226,7 @@ protected int encodeLogViewLink(Message message, ChannelBuffer buf, int level, L
 		return count;
 	}
 
-	public int encodeMessage(Message message, ChannelBuffer buf, int level, LineCounter counter) {
+	protected int encodeMessage(Message message, ChannelBuffer buf, int level, LineCounter counter) {
 		if (message instanceof Event) {
 			String type = message.getType();
 

File: cat-core/src/main/java/com/dianping/cat/storage/message/LocalMessageBucket.java
Patch:
@@ -90,7 +90,7 @@ public void initialize(Class<?> type, String domain, Date timestamp) throws IOEx
 		dataFile.getParentFile().mkdirs();
 
 		m_logicalPath = logicalPath;
-		m_writeDataFile = new BufferedOutputStream(new FileOutputStream(dataFile), 8192);
+		m_writeDataFile = new BufferedOutputStream(new FileOutputStream(dataFile, true), 8192);
 	}
 
 	public void setBaseDir(String baseDir) {

File: cat-core/src/main/java/com/dianping/cat/storage/report/LocalReportBucket.java
Patch:
@@ -174,8 +174,9 @@ public void initialize(Class<?> type, String name, Date timestamp) throws IOExce
 		dataFile.getParentFile().mkdirs();
 
 		m_logicalPath = logicalPath;
-		m_writeDataFile = new BufferedOutputStream(new FileOutputStream(dataFile), 8192);
-		m_writeIndexFile = new BufferedOutputStream(new FileOutputStream(indexFile), 8192);
+		m_writeDataFile = new BufferedOutputStream(new FileOutputStream(dataFile, true), 8192);
+		m_writeIndexFile = new BufferedOutputStream(new FileOutputStream(indexFile, true), 8192);
+		m_writeDataFileLength = dataFile.length();
 		m_readDataFile = new RandomAccessFile(dataFile, "r");
 	}
 

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HdfsMessageStorage.java
Patch:
@@ -12,7 +12,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
-import com.dianping.cat.configuration.LocalIP;
+import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.message.spi.MessagePathBuilder;
 import com.dianping.cat.message.spi.MessageStorage;
 import com.dianping.cat.message.spi.MessageTree;
@@ -92,7 +92,7 @@ public void append(MessageTree tree) {
 		private void handle(MessageTree tree) {
 			try {
 				String tmp = m_builder.getMessagePath(tree.getDomain(), new Date(tree.getMessage().getTimestamp()));
-				String ipAddress = LocalIP.getAddress();
+				String ipAddress = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 				String path = tmp + "-" + ipAddress;
 				OutputChannel channel = m_manager.openChannel("dump", path, false);
 				int length = channel.write(tree);

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/storage/RemoteMessageBucket.java
Patch:
@@ -15,7 +15,7 @@
 import org.codehaus.plexus.logging.Logger;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.configuration.LocalIP;
+import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.hadoop.dal.Logview;
 import com.dianping.cat.hadoop.dal.LogviewDao;
 import com.dianping.cat.hadoop.dal.LogviewEntity;
@@ -135,7 +135,7 @@ public Collection<String> getIds() {
 
 	@Override
 	public void initialize(Class<?> type, String name, Date timestamp) throws IOException {
-		String ipAddress = LocalIP.getAddress();
+		String ipAddress = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
 		String logicalPath = m_pathBuilder.getMessagePath(name, timestamp);
 
 		m_path = logicalPath + "-" + ipAddress + "-" + System.currentTimeMillis();

File: cat-hadoop/src/main/java/com/dianping/cat/hadoop/storage/RemoteStringBucket.java
Patch:
@@ -11,7 +11,7 @@
 import org.codehaus.plexus.logging.Logger;
 
 import com.dianping.cat.Cat;
-import com.dianping.cat.configuration.LocalIP;
+import com.dianping.cat.configuration.NetworkInterfaceManager;
 import com.dianping.cat.hadoop.dal.Report;
 import com.dianping.cat.hadoop.dal.ReportDao;
 import com.dianping.cat.hadoop.dal.ReportEntity;
@@ -108,7 +108,7 @@ public boolean storeById(String domain, String data) throws IOException {
 		report.setType(1);
 		report.setContent(data);
 		report.setPeriod(m_period);
-		report.setIp(LocalIP.getAddress());
+		report.setIp(NetworkInterfaceManager.INSTANCE.getLocalHostAddress());
 
 		t.setStatus(Message.SUCCESS);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseHistoricalModelService.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.report.page.model.spi.internal;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
 import com.dianping.cat.report.page.model.spi.ModelRequest;
@@ -22,7 +23,7 @@ public String getName() {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			T model = buildModel(request);
@@ -50,8 +51,7 @@ public String toString() {
 		StringBuilder sb = new StringBuilder(64);
 
 		sb.append(getClass().getSimpleName()).append('[');
-		sb.append("name=").append(m_name);
-		sb.append(']');
+		sb.append("name=").append(m_name).append(']');
 
 		return sb.toString();
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.report.page.model.spi.internal;
 
+import com.dianping.cat.Cat;
 import com.dianping.cat.consumer.RealtimeConsumer;
 import com.dianping.cat.message.Message;
 import com.dianping.cat.message.Transaction;
@@ -55,7 +56,7 @@ protected T getReport(ModelRequest request, ModelPeriod period, String domain) t
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
+		Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			T report = getReport(request, request.getPeriod(), request.getDomain());

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -106,9 +106,11 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		HttpSession session = ctx.getHttpServletRequest().getSession();
 		String sessionDomain = (String) session.getAttribute("domain");
 		String sessionDate = (String) session.getAttribute("date");
+
 		if (StringUtils.isEmpty(payload.getDomain()) && sessionDomain != null) {
 			payload.setDomain(sessionDomain);
 		}
+
 		if (payload.getRealDate() == 0 && sessionDate != null) {
 			payload.setDate(sessionDate);
 		}
@@ -125,6 +127,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			showGraphs(model, payload);
 			break;
 		}
+
 		// reset session
 		session.setAttribute("domain", model.getDomain());
 		session.setAttribute("date", model.getDate());

File: cat-job/src/main/java/com/dianping/cat/job/build/ComponentsConfigurator.java
Patch:
@@ -50,6 +50,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(OutputChannelManager.class, "dump", DefaultOutputChannelManager.class) //
 				.req(MessagePathBuilder.class) //
+				.req(HdfsConfig.class) //
 				.config(E("type").value("dump")) //
 				.config(E("baseDir").value("dump")));
 		all.add(C(MessageStorage.class, "hdfs", HdfsMessageStorage.class) //

File: cat-job/src/main/java/com/dianping/cat/job/hdfs/OutputChannelManager.java
Patch:
@@ -10,6 +10,8 @@ public interface OutputChannelManager {
 	public void closeAllChannels();
 
 	public void closeChannel(OutputChannel channel);
+	
+	public void setServerUri(String serverUri);
 
 	public OutputChannel openChannel(MessageTree tree, boolean forceNew) throws IOException;
 

File: cat-job/src/main/java/com/dianping/cat/job/hdfs/HdfsMessageStorage.java
Patch:
@@ -1,7 +1,6 @@
 package com.dianping.cat.job.hdfs;
 
 import java.io.IOException;
-import java.net.InetAddress;
 import java.util.Date;
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.LinkedBlockingQueue;
@@ -13,6 +12,7 @@
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.Initializable;
 import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;
 
+import com.dianping.cat.configuration.LocalIP;
 import com.dianping.cat.message.spi.MessagePathBuilder;
 import com.dianping.cat.message.spi.MessageStorage;
 import com.dianping.cat.message.spi.MessageTree;
@@ -90,7 +90,7 @@ public void append(MessageTree tree) {
 		private void handle(MessageTree tree) {
 			try {
 				String tmp = m_builder.getMessagePath(tree.getDomain(), new Date(tree.getMessage().getTimestamp()));
-				String ipAddress = InetAddress.getLocalHost().getHostAddress();
+				String ipAddress = LocalIP.getAddress();
 				String path = tmp + "-" + ipAddress;
 				OutputChannel channel = m_manager.openChannel(path, false);
 				int length = channel.write(tree);

File: cat-job/src/main/java/com/dianping/cat/job/storage/RemoteStringBucket.java
Patch:
@@ -11,6 +11,7 @@
 import org.codehaus.plexus.logging.Logger;
 
 import com.dianping.cat.Cat;
+import com.dianping.cat.configuration.LocalIP;
 import com.dianping.cat.job.sql.dal.Report;
 import com.dianping.cat.job.sql.dal.ReportDao;
 import com.dianping.cat.job.sql.dal.ReportEntity;
@@ -110,6 +111,7 @@ public boolean storeById(String domain, String data) throws IOException {
 		report.setType(1);
 		report.setContent(data);
 		report.setPeriod(m_period);
+		report.setIp(LocalIP.getAddress());
 
 		t.setStatus(Message.SUCCESS);
 

File: cat-job/src/test/java/com/dianping/cat/job/hdfs/CatTestCase.java
Patch:
@@ -1,5 +1,7 @@
 package com.dianping.cat.job.hdfs;
 
+import java.io.File;
+
 import org.junit.After;
 import org.junit.Before;
 
@@ -10,6 +12,7 @@ public abstract class CatTestCase extends ComponentTestCase {
 	@Before
 	public void before() throws Exception {
 		Cat.initialize(getContainer(), null);
+		
 		Cat.setup(null);
 	}
 

File: cat-core/src/test/java/com/dianping/cat/message/CatPerformanceTest.java
Patch:
@@ -105,6 +105,7 @@ public void test() {
 	}
 
 	@Test
+	@Ignore
 	public void testManyThread() throws IOException {
 		System.out.println("press any key to continue...");
 		System.in.read();

File: cat-core/src/test/java/com/dianping/cat/message/internal/MessageProducerTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import junit.framework.Assert;
 
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -16,10 +17,12 @@
 @RunWith(JUnit4.class)
 public class MessageProducerTest extends CatTestCase {
 	@Test
+	@Ignore
 	public void testNormal() throws Exception {
 		MessageProducer producer = lookup(MessageProducer.class);
 		InMemoryQueue queue = lookup(InMemoryQueue.class);
 		Transaction t = producer.newTransaction("URL", "MyPage");
+		
 
 		try {
 			// do your business here

File: cat-core/src/test/java/com/dianping/cat/message/spi/codec/HtmlMessageCodecTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.jboss.netty.buffer.ChannelBuffer;
 import org.jboss.netty.buffer.ChannelBuffers;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -127,6 +128,7 @@ public void testHeartbeat() throws Exception {
 	}
 
 	@Test
+	@Ignore
 	public void testMessageTree() throws Exception {
 		DefaultMessageTree tree = newMessageTree();
 		long timestamp = 1325489621987L;

File: cat-core/src/test/java/com/dianping/cat/storage/BucketConcurrentTest.java
Patch:
@@ -10,6 +10,7 @@
 import junit.framework.Assert;
 
 import org.junit.BeforeClass;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -19,6 +20,7 @@
 import com.site.lookup.ComponentTestCase;
 
 @RunWith(JUnit4.class)
+@Ignore
 public class BucketConcurrentTest extends ComponentTestCase {
 	@BeforeClass
 	public static void beforeClass() {

File: cat-job/src/test/java/com/dianping/cat/job/sql/SqlJobDataProduceTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.dianping.cat.job.sql;
 
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
@@ -18,6 +19,7 @@
 @RunWith(JUnit4.class)
 public class SqlJobDataProduceTest extends CatTestCase {
 	@Test
+	@Ignore
 	public void test() throws Exception {
 		MessageStorage storage = lookup(MessageStorage.class, "hdfs");
 		MessageProducer producer = lookup(MessageProducer.class);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/handler/FailureHandler.java
Patch:
@@ -42,7 +42,7 @@ private int processMessage(Segment segment, Message message, MessageTree tree) {
 			if (segment.findEntry(messageId) == null) {
 				Entry entry = new Entry(messageId);
 
-				entry.setStatus(message.getStatus());
+				entry.setStatus(message.getName());
 				entry.setType(ProblemType.ERROR.getName());
 
 				if (message instanceof Transaction) {

File: cat-core/src/main/java/com/dianping/cat/storage/Bucket.java
Patch:
@@ -3,6 +3,7 @@
 import java.io.IOException;
 import java.util.Collection;
 import java.util.Date;
+import java.util.List;
 
 public interface Bucket<T> {
 	public void close() throws IOException;
@@ -30,4 +31,6 @@ public interface Bucket<T> {
 	 * @throws IOException
 	 */
 	public boolean storeById(String id, T data) throws IOException;
+
+	List<String> findAllById(String id) throws IOException;
 }

File: cat-core/src/test/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodecTest.java
Patch:
@@ -81,6 +81,7 @@ private DefaultMessageTree newMessageTree() {
 		tree.setParentMessageId("parentMessageId");
 		tree.setRootMessageId("rootMessageId");
 		tree.setSessionToken("sessionToken");
+		tree.setThreadGroupName("threadGroupName");
 		tree.setThreadId("threadId");
 		tree.setThreadName("threadName");
 
@@ -129,7 +130,7 @@ public void testHeartbeat() {
 	public void testMessageTree() {
 		DefaultMessageTree tree = newMessageTree();
 		long timestamp = 1325489621987L;
-		String expected = "PT1\tdomain\thostName\tipAddress\tthreadId\tthreadName\tmessageId\tparentMessageId\trootMessageId\tsessionToken\n";
+		String expected = "PT1\tdomain\thostName\tipAddress\tthreadGroupName\tthreadId\tthreadName\tmessageId\tparentMessageId\trootMessageId\tsessionToken\n";
 
 		checkTree(tree, expected);
 

File: cat-core/src/test/java/com/dianping/cat/storage/BucketConcurrentTest.java
Patch:
@@ -37,6 +37,7 @@ private DefaultMessageTree newMessageTree(String id) {
 		tree.setParentMessageId("parentMessageId");
 		tree.setRootMessageId("rootMessageId");
 		tree.setSessionToken("sessionToken");
+		tree.setThreadGroupName("threadGroupName");
 		tree.setThreadId("threadId");
 		tree.setThreadName("threadName");
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/JspFile.java
Patch:
@@ -1,7 +1,9 @@
 package com.dianping.cat.report.page.problem;
 
 public enum JspFile {
-	VIEW("/jsp/report/problem.jsp"),
+	GROUP("/jsp/report/problemGroup.jsp"),
+
+	THREAD("/jsp/report/problemThread.jsp"),
 
 	DETAIL("/jsp/report/problemDetail.jsp")
 	;

File: cat-job/src/test/java/com/dianping/cat/job/sql/SqlRecordTest.java
Patch:
@@ -14,14 +14,14 @@
 public class SqlRecordTest {
 
 	@Test
-	public void test() {
+	public void testFomat() {
 		DecimalFormat df = new DecimalFormat("#.##");
 
 		Assert.assertEquals("1.23", df.format(1.234567));
 	}
 
 	@Test
-	public void test2() {
+	public void testSplit() {
 		String text = "domain1	SQLStatement-Internal9	insert into mysql where is='sfsdf'	"+"" +
 				"500	500	500	100	199	74750	11591750	147	www.sina.com	m_durationDistribution	m_hitsOverTime	m_durationOverTime	m_failureOverTime";
 		SqlReportJobRecord record = new SqlReportJobRecord("20120309/11", text);

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/ThreadLevelInfo.java
Patch:
@@ -84,8 +84,8 @@ private String getShowDetailByMinte(int minute) {
 		sb.append("</td>");
 
 		for (GroupDisplayInfo group : getGroups()) {
-			GroupStatistics value = m_groupStatistics.get(group);
 			String groupName = group.getName();
+			GroupStatistics value = m_groupStatistics.get(groupName);
 			Set<String> threads = getThreadsByGroup(groupName);
 			Map<String, TheadStatistics> temps = value.getStatistics();
 

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Model.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.dianping.cat.consumer.event.model.entity.EventReport;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.DomainSortHelper;
+import com.dianping.cat.report.view.StringSortHelper;
 
 public class Model extends AbstractReportModel<Action, Context> {
 	private EventReport m_report;
@@ -44,7 +44,7 @@ public List<String> getDomains() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return DomainSortHelper.sortDomain(m_report.getDomains());
+			return StringSortHelper.sortDomain(m_report.getDomains());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/Model.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.dianping.cat.consumer.ip.model.entity.IpReport;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.DomainSortHelper;
+import com.dianping.cat.report.view.StringSortHelper;
 
 public class Model extends AbstractReportModel<Action, Context> {
 	private IpReport m_report;
@@ -40,7 +40,7 @@ public List<String> getDomains() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return DomainSortHelper.sortDomain(m_report.getAllDomains().getDomains());
+			return StringSortHelper.sortDomain(m_report.getAllDomains().getDomains());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Model.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.dianping.cat.consumer.problem.model.entity.ProblemReport;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.DomainSortHelper;
+import com.dianping.cat.report.view.StringSortHelper;
 
 public class Model extends AbstractReportModel<Action, Context> {
 	private ProblemReport m_report;
@@ -57,7 +57,7 @@ public List<String> getDomains() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return DomainSortHelper.sortDomain(m_report.getAllDomains().getDomains());
+			return StringSortHelper.sortDomain(m_report.getAllDomains().getDomains());
 		}
 	}
 

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/Model.java
Patch:
@@ -4,7 +4,7 @@
 import java.util.List;
 
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.DomainSortHelper;
+import com.dianping.cat.report.view.StringSortHelper;
 
 public class Model extends AbstractReportModel<Action, Context>  {
 	private SqlReport m_report;
@@ -50,7 +50,7 @@ public List<String> getDomains() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return DomainSortHelper.sortDomain(m_report.getDomains());
+			return StringSortHelper.sortDomain(m_report.getDomains());
 		}
    }
 

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.dianping.cat.consumer.transaction.model.entity.TransactionReport;
 import com.dianping.cat.report.page.AbstractReportModel;
-import com.dianping.cat.report.view.DomainSortHelper;
+import com.dianping.cat.report.view.StringSortHelper;
 
 public class Model extends AbstractReportModel<Action, Context> {
 	private TransactionReport m_report;
@@ -44,7 +44,7 @@ public List<String> getDomains() {
 		if (m_report == null) {
 			return new ArrayList<String>();
 		} else {
-			return DomainSortHelper.sortDomain(m_report.getDomains());
+			return StringSortHelper.sortDomain(m_report.getDomains());
 		}
 	}
 

File: cat-job/src/main/java/com/dianping/cat/job/build/ComponentsConfigurator.java
Patch:
@@ -50,7 +50,7 @@ public List<Component> defineComponents() {
 			      .config(E("baseDir").value("dump"), //
 			            E("serverUri").value(serverUri)));
 		all.add(C(MessageStorage.class, "hdfs", HdfsMessageStorage.class) //
-		      .req(OutputChannelManager.class, "dump"));
+		      .req(OutputChannelManager.class, "dump").req(MessagePathBuilder.class));
 		all.add(C(MessageConsumer.class, DumpToHdfsConsumer.ID, DumpToHdfsConsumer.class) //
 		      .req(MessageStorage.class, "hdfs"));
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -127,7 +127,7 @@ private void distributeMessage(MessageTree tree, List<MessageQueue> queues) {
 
 	public void doCheckpoint() throws IOException {
 		MessageProducer cat = Cat.getProducer();
-		Transaction t = cat.newTransaction(getClass().getSimpleName(), "checkpoint");
+		Transaction t = cat.newTransaction("Checkpoint", getClass().getSimpleName());
 
 		t.setStatus(Message.SUCCESS);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseCompositeModelService.java
Patch:
@@ -54,7 +54,7 @@ public ModelResponse<T> invoke(final ModelRequest request) {
 		int size = m_allServices.size();
 		final List<ModelResponse<T>> responses = new ArrayList<ModelResponse<T>>(size);
 		final Semaphore semaphore = new Semaphore(0);
-		final Transaction t = Cat.getProducer().newTransaction(getClass().getSimpleName(), m_name);
+		final Transaction t = Cat.getProducer().newTransaction("ModelService", getClass().getSimpleName());
 		int count = 0;
 
 		t.setStatus(Message.SUCCESS);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseHistoricalModelService.java
Patch:
@@ -22,7 +22,7 @@ public String getName() {
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = newTransaction(getClass().getSimpleName(), m_name);
+		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			T model = buildModel(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseLocalModelService.java
Patch:
@@ -55,7 +55,7 @@ protected T getReport(ModelRequest request, ModelPeriod period, String domain) t
 	@Override
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
-		Transaction t = newTransaction(getClass().getSimpleName(), m_name);
+		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			T report = getReport(request, request.getPeriod(), request.getDomain());

File: cat-home/src/main/java/com/dianping/cat/report/page/model/spi/internal/BaseRemoteModelService.java
Patch:
@@ -60,7 +60,7 @@ public String getName() {
 	public ModelResponse<T> invoke(ModelRequest request) {
 		ModelResponse<T> response = new ModelResponse<T>();
 		MessageProducer cat = Cat.getProducer();
-		Transaction t = newTransaction(getClass().getSimpleName(), m_name);
+		Transaction t = newTransaction("ModelService", getClass().getSimpleName());
 
 		try {
 			URL url = buildUrl(request);

File: cat-home/src/main/java/com/dianping/cat/report/page/event/Model.java
Patch:
@@ -33,7 +33,7 @@ public Action getDefaultAction() {
 	@Override
    public String getDomain() {
 		if (m_report == null) {
-			return null;
+			return getDisplayDomain();
 		} else {
 			return m_report.getDomain();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/Model.java
Patch:
@@ -30,7 +30,7 @@ public List<DisplayModel> getDisplayModels() {
 	@Override
 	public String getDomain() {
 		if (m_report == null) {
-			return null;
+			return getDisplayDomain();
 		} else {
 			return m_report.getDomain();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Model.java
Patch:
@@ -51,7 +51,7 @@ public int getMinuteNext() {
 	@Override
 	public String getDomain() {
 		if (m_report == null) {
-			return null;
+			return getDisplayDomain();
 		} else {
 			return m_report.getDomain();
 		}

File: cat-home/src/main/java/com/dianping/cat/report/page/sql/Handler.java
Patch:
@@ -88,7 +88,7 @@ public void showReport(Model model, Payload payload) {
 		SqlReport report = new SqlReport();
 		String domain = payload.getDomain();
 		long startDate = payload.getDate();
-		model.setDate(startDate);
+		model.setLongDate(startDate);
 		Date transactiondate = new Date(startDate);
 		List<String> domains = new ArrayList<String>();
 		Readset<SqlReportRecord> domainSet = SqlReportRecordEntity.READSET_DOMAIN;

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Model.java
Patch:
@@ -33,7 +33,7 @@ public Action getDefaultAction() {
 	@Override
    public String getDomain() {
 		if (m_report == null) {
-			return null;
+			return getDisplayDomain();
 		} else {
 			return m_report.getDomain();
 		}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportMessageAnalyzerTest.java
Patch:
@@ -71,7 +71,7 @@ public void testCommonGenerate() throws Exception {
 			analyzer.process(tree);
 		}
 
-		TransactionReport report = analyzer.generate("group");
+		TransactionReport report = analyzer.getReport("group");
 		TransactionType typeA = report.getTypes().get("A");
 		TransactionName n1 = typeA.getNames().get("n1");
 		assertEquals(1000, n1.getTotalCount());

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/Handler.java
Patch:
@@ -108,7 +108,6 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		}
 
 		m_jspViewer.view(ctx, model);
-		
 	}
 
 	private void showDetail(Model model, Payload payload) {

File: cat-job/src/main/java/com/dianping/cat/job/build/ComponentsConfigurator.java
Patch:
@@ -51,7 +51,8 @@ public List<Component> defineComponents() {
 			all.add(C(InputChannel.class, DefaultInputChannel.class).is(PER_LOOKUP) //
 			      .req(MessageCodec.class, "plain-text"));
 			all.add(C(InputChannelManager.class, DefaultInputChannelManager.class) //
-			      .config(E("serverUri").value("hdfs://192.168.7.43:9000/user/cat/")));
+			      .config(E("baseDir").value("data"), //
+			    		  E("serverUri").value("hdfs://192.168.7.43:9000/user/cat/")));
 		}
 
 		all.add(C(MessageStorage.class, "hdfs", HdfsMessageStorage.class) //

File: cat-job/src/main/java/com/dianping/cat/job/hdfs/DefaultOutputChannelManager.java
Patch:
@@ -3,6 +3,7 @@
 import java.io.IOException;
 import java.net.URI;
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -103,7 +104,7 @@ public void initialize() throws InitializationException {
 
 	@Override
 	public OutputChannel openChannel(MessageTree tree, boolean forceNew) throws IOException {
-		String path = m_builder.getHdfsPath(tree.getMessageId());
+		String path = m_builder.getMessagePath(tree.getDomain(), new Date(tree.getMessage().getTimestamp()));
 
 		return openChannel(path, forceNew);
 	}

File: cat-job/src/test/java/com/dianping/cat/job/hdfs/HdfsMessageStorageTest.java
Patch:
@@ -38,7 +38,7 @@ public void test() throws Exception {
 		tree.setMessage(t);
 		storage.store(tree);
 		MessageTree actual = storage.get(tree.getMessageId());
-		Assert.assertTrue(tree.equals(actual));
+		Assert.assertEquals(tree, actual);
 		((HdfsMessageStorage) storage).dispose();
 	}
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/CompositeProblemService.java
Patch:
@@ -62,6 +62,7 @@ public void run() {
 						responses.add(service.invoke(request));
 						
 						t.addData(service.toString());
+						logEvent(t, "Client", "Problem", Message.SUCCESS, service.toString());
 					} catch (Exception e) {
 						logError(t, e);
 						t.setStatus(e);
@@ -102,7 +103,6 @@ void logEvent(Transaction t, String type, String name, String status, String nam
 		try {
 			semaphore.tryAcquire(count, 5000, TimeUnit.MILLISECONDS);
 		} catch (InterruptedException e) {
-			// ignore it
 			t.setStatus(e);
 		} finally {
 			t.complete();

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -102,7 +102,7 @@ protected void postConfigure(Context ctx) {
 	@Test
 	public void startServer() throws Exception {
 		// open the page in the default browser
-		//s_adaptor.display("/cat/r");
+		s_adaptor.display("/cat/r");
 
 		System.out.println(String.format("[%s] Press any key to stop server ... ", getTimestamp()));
 		System.in.read();

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -120,7 +120,7 @@ public void initializeClient(Config clientConfig) {
 			m_clientConfig.setMode("client");
 		}
 
-		Map<String, Domain> domains = clientConfig.getDomains();
+		Map<String, Domain> domains = m_clientConfig.getDomains();
 		Domain firstDomain = domains.isEmpty() ? null : domains.values().iterator().next();
 
 		m_domain = firstDomain == null ? new Domain("unknown").setEnabled(false) : firstDomain;

File: cat-core/src/main/java/com/dianping/cat/message/internal/AbstractMessage.java
Patch:
@@ -32,11 +32,11 @@ public void addData(String keyValuePairs) {
 		if (m_data == null) {
 			m_data = keyValuePairs;
 		} else if (m_data instanceof StringBuilder) {
-			((StringBuilder) m_data).append(keyValuePairs);
+			((StringBuilder) m_data).append('&').append(keyValuePairs);
 		} else {
 			StringBuilder sb = new StringBuilder(m_data.length() + keyValuePairs.length() + 16);
 
-			sb.append(m_data);
+			sb.append(m_data).append('&');
 			sb.append(keyValuePairs);
 			m_data = sb;
 		}

File: cat-core/src/main/java/com/dianping/cat/storage/Bucket.java
Patch:
@@ -19,7 +19,7 @@ public interface Bucket<T> {
 
 	public Collection<String> getIdsByPrefix(String prefix);
 
-	public void initialize(Class<?> type, String name, Date timestamp) throws IOException;;
+	public void initialize(Class<?> type, String name, Date timestamp) throws IOException;
 
 	/**
 	 * store the data by id into the bucket.
@@ -29,5 +29,5 @@ public interface Bucket<T> {
 	 * @return true means the data was stored in the bucket, otherwise false.
 	 * @throws IOException
 	 */
-	public boolean storeById(String id, T data) throws IOException;;
+	public boolean storeById(String id, T data) throws IOException;
 }

File: cat-home/src/main/java/com/dianping/cat/report/page/problem/JspFile.java
Patch:
@@ -3,7 +3,7 @@
 public enum JspFile {
 	VIEW("/jsp/report/problem.jsp"),
 
-	DETAIL("jsp/report/problemDetail.jsp")
+	DETAIL("/jsp/report/problemDetail.jsp")
 	;
 
 	private String m_path;

File: cat-job/src/main/java/com/dianping/cat/job/hdfs/DefaultInputChannelManager.java
Patch:
@@ -79,7 +79,7 @@ public void initialize() throws InitializationException {
 			FileSystem fs;
 
 			config.setInt("io.file.buffer.size", 8192);
-
+			
 			if (m_serverUri == null) {
 				fs = FileSystem.getLocal(config);
 			} else {

File: cat-core/src/main/java/com/dianping/cat/build/StorageComponentConfigurator.java
Patch:
@@ -24,6 +24,7 @@ public List<Component> defineComponents() {
 		      .req(MessagePathBuilder.class));
 		all.add(C(Bucket.class, MessageTree.class.getName(), LocalMessageBucket.class) //
 		      .is(PER_LOOKUP) //
+		      .req(MessagePathBuilder.class) //
 		      .req(MessageCodec.class, "plain-text"));
 		all.add(C(BucketManager.class, DefaultBucketManager.class));
 

File: cat-core/src/main/java/com/dianping/cat/Cat.java
Patch:
@@ -97,7 +97,7 @@ static Config loadClientConfig(File configFile) {
 			// so that OPS can:
 			// - configure the cat servers to connect
 			// - enable/disable Cat for specific domain(s)
-			if (configFile != null) {
+			if (configFile != null && configFile.exists()) {
 				String xml = Files.forIO().readFrom(configFile.getCanonicalFile(), "utf-8");
 
 				globalConfig = new DefaultXmlParser().parse(xml);

File: cat-core/src/test/java/com/dianping/cat/message/AllTests.java
Patch:
@@ -12,7 +12,7 @@
 import com.dianping.cat.message.io.TcpSocketTest;
 import com.dianping.cat.message.spi.codec.HtmlMessageCodecTest;
 import com.dianping.cat.message.spi.codec.PlainTextMessageCodecTest;
-import com.dianping.cat.storage.BucketTest;
+import com.dianping.cat.storage.BucketManagerTest;
 
 @RunWith(Suite.class)
 @SuiteClasses({
@@ -45,7 +45,7 @@
 HtmlMessageCodecTest.class,
 
 /* .storage */
-BucketTest.class
+BucketManagerTest.class
 
 })
 public class AllTests {

File: cat-home/src/main/java/com/dianping/cat/report/page/model/problem/HdfsProblemService.java
Patch:
@@ -28,7 +28,7 @@ public ModelResponse<ProblemReport> invoke(ModelRequest request) {
 		Bucket<String> bucket = null;
 
 		try {
-			bucket = m_bucketManager.getStringBucket(path);
+			bucket = m_bucketManager.getReportBucket(path);
 
 			String xml = bucket.findById("problem-" + domain);
 

File: cat-job/src/main/java/com/dianping/cat/job/hdfs/InputChannelManager.java
Patch:
@@ -9,5 +9,5 @@ public interface InputChannelManager {
 
 	public void closeChannel(InputChannel channel);
 
-	public InputChannel openChannel(String messageId) throws IOException;
+	public InputChannel openChannel(String path) throws IOException;
 }

File: cat-job/src/main/java/com/dianping/cat/job/hdfs/OutputChannelManager.java
Patch:
@@ -12,4 +12,6 @@ public interface OutputChannelManager {
 	public void closeChannel(OutputChannel channel);
 
 	public OutputChannel openChannel(MessageTree tree, boolean forceNew) throws IOException;
+
+	public OutputChannel openChannel(String path, boolean forceNew) throws IOException;
 }

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -142,6 +142,7 @@ public void send(MessageTree tree) {
 		boolean result = m_queue.offer(tree);
 
 		if (!result) {
+			System.out.println("Message queue is full in tcp socket sender!");
 			m_logger.error("Message queue is full in tcp socket sender!");
 		}
 	}

File: cat-core/src/main/java/com/dianping/cat/storage/internal/DefaultBucketManager.java
Patch:
@@ -24,6 +24,8 @@ protected Bucket<?> createBucket(String path, Class<?> type, String namespace) t
 
 		if (namespace.equals("hdfs")) {
 			bucket = lookup(Bucket.class, "hdfs");
+		}else if (namespace.equals("hdfs-logview")) {
+			bucket = lookup(Bucket.class, "hdfs-logview");
 		} else {
 			bucket = lookup(Bucket.class, type.getName());
 		}

File: cat-job/src/main/java/com/dianping/cat/job/build/ComponentsConfigurator.java
Patch:
@@ -8,6 +8,7 @@
 import com.dianping.cat.job.hdfs.DefaultOutputChannelManager;
 import com.dianping.cat.job.hdfs.HdfsBucket;
 import com.dianping.cat.job.hdfs.HdfsMessageStorage;
+import com.dianping.cat.job.hdfs.LogviewBucket;
 import com.dianping.cat.job.hdfs.OutputChannel;
 import com.dianping.cat.job.hdfs.OutputChannelManager;
 import com.dianping.cat.message.spi.MessageCodec;
@@ -41,6 +42,8 @@ public List<Component> defineComponents() {
 
 		all.add(C(Bucket.class, "hdfs", HdfsBucket.class) //
 		      .is(PER_LOOKUP));
+		all.add(C(Bucket.class, "hdfs-logview", LogviewBucket.class) //
+			      .is(PER_LOOKUP));
 
 		all.add(C(MessageStorage.class, "hdfs", HdfsMessageStorage.class) //
 		      .req(OutputChannelManager.class));

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -123,7 +123,7 @@ public void initializeClient(Config clientConfig) {
 			m_clientConfig.setMode("client");
 		}
 
-		Map<String, Domain> domains = clientConfig.getDomains();
+		Map<String, Domain> domains = m_clientConfig.getDomains();
 
 		m_domain = domains.isEmpty() ? "unknown" : domains.keySet().iterator().next();
 

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketSender.java
Patch:
@@ -142,6 +142,7 @@ public void send(MessageTree tree) {
 		boolean result = m_queue.offer(tree);
 
 		if (!result) {
+			System.out.println("Message queue is full in tcp socket sender!");
 			m_logger.error("Message queue is full in tcp socket sender!");
 		}
 	}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/transaction/HdfsTransactionService.java
Patch:
@@ -32,7 +32,7 @@ public ModelResponse<TransactionReport> invoke(ModelRequest request) {
 
 			byte[] data = bucket.findById("transaction-" + domain);
 
-			if (data == null) {
+			if (data != null) {
 				String xml = new String(data, "utf-8");
 				TransactionReport report = new DefaultXmlParser().parse(xml);
 

File: cat-core/src/main/java/com/dianping/cat/build/ComponentsConfigurator.java
Patch:
@@ -62,7 +62,7 @@ public List<Component> defineComponents() {
 		all.add(C(MessageConsumerRegistry.class, DefaultMessageConsumerRegistry.class) //
 		      .req(MessageConsumer.class, new String[] { DummyConsumer.ID }, "m_consumers"));
 
-		all.add(C(MessageQueue.class, DefaultMessageQueue.class).config(E("size").value("1000")).is(PER_LOOKUP));
+		all.add(C(MessageQueue.class, DefaultMessageQueue.class).config(E("size").value("100000")).is(PER_LOOKUP));
 
 		all.add(C(MessageSender.class, "tcp-socket", TcpSocketSender.class) //
 		      .is(PER_LOOKUP) //

File: cat-job/src/main/java/com/dianping/cat/storage/hdfs/HdfsDataStore.java
Patch:
@@ -77,7 +77,7 @@ public void close() throws IOException {
 	 * @throws IOException
 	 */
 	private void closeFlieSystem() throws IOException {
-		if (this.fs == null) {
+		if (this.fs != null) {
 			this.fs.close();
 			this.fs = null;
 		}

File: cat-job/src/main/java/com/dianping/cat/storage/hdfs/util/StringKit.java
Patch:
@@ -26,7 +26,7 @@ public class StringKit {
 	 * @return
 	 */
 	public static String capitalize(String str) {
-		if (str == null || str == "")
+		if (str == null || str.length()==0)
 			return str;
 		char[] chars = str.toCharArray();
 		char c = chars[0];

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -16,8 +16,6 @@ public Page[] getVisiblePages() {
 		ReportPage.IP,
 
 		ReportPage.SQL,
-	
-		//ReportPage.SERVICE,
 		
 		ReportPage.LOGVIEW
 

File: cat-home/src/main/java/com/dianping/cat/report/view/ProblemReportHelper.java
Patch:
@@ -8,6 +8,7 @@
 import com.dianping.cat.consumer.problem.model.entity.JavaThread;
 import com.dianping.cat.consumer.problem.model.entity.Segment;
 
+/* used by problem.jsp */
 public class ProblemReportHelper {
 	public static String showLegends(JavaThread thread, int minute) {
 		Segment segment = thread.findSegment(minute);

File: cat-home/src/test/java/com/dianping/cat/report/page/ip/DisplayModelTest.java
Patch:
@@ -4,6 +4,8 @@
 
 import org.junit.Test;
 
+import com.dianping.cat.report.page.ip.Model.DisplayModel;
+
 public class DisplayModelTest {
 	private void check(DisplayModel model, int time, int count, int lastOne, int lastFive, int lastFifteen) {
 		model.process(0, time, count);

File: cat-home/src/test/java/com/dianping/cat/TestServer.java
Patch:
@@ -101,7 +101,7 @@ protected void postConfigure(Context ctx) {
 	@Test
 	public void startServer() throws Exception {
 		// open the page in the default browser
-		//s_adaptor.display("/cat/r");
+		s_adaptor.display("/cat/r");
 
 		System.out.println(String.format("[%s] Press any key to stop server ... ", getTimestamp()));
 		System.in.read();

File: cat-job/src/main/java/com/dianping/cat/storage/hdfs/HdfsDataStore.java
Patch:
@@ -30,7 +30,7 @@ public HdfsDataStore() {
 	}
 
 	public HdfsDataStore(FileSystem fs, String hdfsFilename) throws IOException {
-		this.path = new Path(hdfsFilename);
+		this.path = new Path(fs.getWorkingDirectory(), hdfsFilename);
 		this.fs = fs;
 	}
 
@@ -105,7 +105,7 @@ public void closeOutput() throws IOException {
 
 	public void openInput() throws IOException {
 		if (this.input == null) {
-			this.input = this.fs.open(this.path);
+			this.input = this.fs.open(this.path, 1024);
 		}
 	}
 

File: cat-job/src/main/java/com/dianping/cat/storage/hdfs/HdfsHelper.java
Patch:
@@ -8,6 +8,7 @@
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.Path;
 
 /**
  * @author sean.wang
@@ -26,8 +27,9 @@ public static FileSystem createRemoteFileSystem(String dir) throws IOException {
 	public static FileSystem createLocalFileSystem(String dir) throws IOException {
 		Configuration config = new Configuration();
 		config.setInt("io.file.buffer.size", 8192);
-		config.setStrings("dfs.data.dir", dir);
+		// config.setStrings("dfs.data.dir", dir);
 		FileSystem fs = FileSystem.getLocal(config);
+		fs.setWorkingDirectory(new Path(dir));
 		return fs;
 	}
 

File: cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemAnalyzer.java
Patch:
@@ -181,11 +181,9 @@ protected void process(MessageTree tree) {
 		if (count > 0) {
 			String messageId = tree.getMessageId();
 			String threadTag = "t:" + tree.getThreadId();
-			String sessionTag = "s:" + tree.getSessionToken();
-			String requestTag = "r:" + messageId;
 
 			try {
-				m_messageBucket.storeById(messageId, tree, threadTag, sessionTag, requestTag);
+				m_messageBucket.storeById(messageId, tree, threadTag);
 			} catch (IOException e) {
 				m_logger.error("Error when storing message for problem analyzer!", e);
 			}

File: cat-home/src/main/java/com/dianping/cat/report/build/ComponentsConfigurator.java
Patch:
@@ -22,7 +22,7 @@ public List<Component> defineComponents() {
 
 		if (isEnv("dev") || property("env", null) == null) {
 			all.add(C(MessageConsumerRegistry.class, DefaultMessageConsumerRegistry.class) //
-			      .req(MessageConsumer.class, new String[] { "realtime", "dump-to-html" }, "m_consumers"));
+			      .req(MessageConsumer.class, new String[] { "realtime"/*, "dump-to-html"*/ }, "m_consumers"));
 		} else {
 			all.add(C(MessageConsumerRegistry.class, DefaultMessageConsumerRegistry.class) //
 			      .req(MessageConsumer.class, new String[] { "realtime" }, "m_consumers"));

File: cat-core/src/main/java/com/dianping/cat/storage/internal/DefaultBucketManager.java
Patch:
@@ -104,7 +104,7 @@ public boolean equals(Object obj) {
 			if (obj instanceof Entry) {
 				Entry e = (Entry) obj;
 
-				return e.getClass() == m_type && e.getPath().equals(m_path) && e.getNamespace().equals(m_namespace);
+				return e.getType() == m_type && e.getPath().equals(m_path) && e.getNamespace().equals(m_namespace);
 			}
 
 			return false;
@@ -127,6 +127,7 @@ public int hashCode() {
 			int hashcode = m_type.hashCode();
 
 			hashcode = hashcode * 31 + m_path.hashCode();
+			hashcode = hashcode * 31 + m_namespace.hashCode();
 			return hashcode;
 		}
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -177,12 +177,10 @@ protected void process(MessageTree tree) {
 			// the message is required by some transactions
 			if (count > 0) {
 				String messageId = tree.getMessageId();
-				String requestTag = "r:" + messageId;
-				String sessionTag = "s:" + tree.getSessionToken();
 				String threadTag = "t:" + tree.getThreadId();
 
 				try {
-					m_messageBucket.storeById(messageId, tree, threadTag, sessionTag, requestTag);
+					m_messageBucket.storeById(messageId, tree, threadTag);
 				} catch (IOException e) {
 					m_logger.error("Error when storing message for transaction analyzer!", e);
 				}

File: cat-home/src/main/java/com/dianping/cat/report/page/model/logview/CompositeLogViewService.java
Patch:
@@ -61,7 +61,7 @@ public void run() {
 		}
 
 		for (ModelResponse<String> response : responses) {
-			if (response != null) {
+			if (response != null && response.getModel() != null) {
 				return response;
 			}
 		}

File: cat-home/src/test/java/com/dianping/cat/SimpleServer.java
Patch:
@@ -101,7 +101,7 @@ protected void postConfigure(Context ctx) {
 	@Test
 	public void startServer() throws Exception {
 		// open the page in the default browser
-		//s_adaptor.display("/cat/r");
+		s_adaptor.display("/cat/r");
 
 		System.out.println(String.format("[%s] Press any key to stop server ... ", getTimestamp()));
 		System.in.read();

File: cat-job/src/main/java/com/dianping/cat/job/sql/SqlJobMain.java
Patch:
@@ -7,7 +7,6 @@
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.conf.Configured;
 import org.apache.hadoop.fs.Path;
-import org.apache.hadoop.io.IntWritable;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.mapreduce.Job;
 import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;

File: cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java
Patch:
@@ -177,9 +177,9 @@ protected void process(MessageTree tree) {
 			// the message is required by some transactions
 			if (count > 0) {
 				String messageId = tree.getMessageId();
-				String threadTag = "t:" + tree.getThreadId();
-				String sessionTag = "s:" + tree.getSessionToken();
 				String requestTag = "r:" + messageId;
+				String sessionTag = "s:" + tree.getSessionToken();
+				String threadTag = "t:" + tree.getThreadId();
 
 				try {
 					m_messageBucket.storeById(messageId, tree, threadTag, sessionTag, requestTag);

File: cat-core/src/main/java/com/dianping/cat/message/spi/internal/DefaultMessageTree.java
Patch:
@@ -149,7 +149,7 @@ public void setThreadName(String threadName) {
 	@Override
 	public String toString() {
 		PlainTextMessageCodec codec = new PlainTextMessageCodec();
-		ChannelBuffer buf = ChannelBuffers.dynamicBuffer();
+		ChannelBuffer buf = ChannelBuffers.dynamicBuffer(8096);
 
 		codec.encode(this, buf);
 		buf.readInt(); // get rid of length

File: cat-home/src/main/java/com/dianping/cat/report/build/ServiceComponentConfigurator.java
Patch:
@@ -3,6 +3,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import com.dianping.cat.message.spi.MessageCodec;
 import com.dianping.cat.message.spi.MessageConsumer;
 import com.dianping.cat.message.spi.MessagePathBuilder;
 import com.dianping.cat.report.page.model.logview.CompositeLogViewService;
@@ -35,7 +36,8 @@ public List<Component> defineComponents() {
 		      .req(ModelService.class, new String[] { "problem-local" }, "m_services"));
 
 		all.add(C(ModelService.class, "logview-local", LocalLogViewService.class) //
-		      .req(MessagePathBuilder.class));
+		      .req(MessagePathBuilder.class, BucketManager.class) //
+		      .req(MessageCodec.class, "html"));
 		all.add(C(ModelService.class, "logview", CompositeLogViewService.class) //
 		      .req(ModelService.class, new String[] { "logview-local" }, "m_services"));
 

File: cat-core/src/test/java/com/dianping/cat/message/internal/MessageProducerTest.java
Patch:
@@ -37,6 +37,7 @@ public void testNormal() throws Exception {
 			t.complete();
 		}
 
+		// please stop CAT server when you run this test case
 		Assert.assertEquals("One message should be in the queue.", 1, queue.size());
 
 		MessageTree tree = queue.peek();

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -137,7 +137,7 @@ private void showGraphs(Model model, Payload payload) {
 			return;
 		}
 
-		String graph1 = m_builder.build(new DurationPayload("Transaction Duration", "Duration (ms)", "Count", name));
+		String graph1 = m_builder.build(new DurationPayload("Duration Distribution", "Duration (ms)", "Count", name));
 		String graph2 = m_builder.build(new HitPayload("Hits Over Time", "Time (min)", "Count", name));
 		String graph3 = m_builder.build(new AverageTimePayload("Average Duration Over Time", "Time (min)",
 		      "Average Duration (ms)", name));

File: cat-home/src/test/intg/com/dianping/cat/AllAllTests.java
Patch:
@@ -11,6 +11,8 @@
 
 com.dianping.cat.consumer.AllTests.class,
 
+com.dianping.cat.AllTests.class,
+
 })
 public class AllAllTests {
 

File: cat-home/src/main/java/com/dianping/cat/report/graph/DefaultGraphBuilder.java
Patch:
@@ -41,6 +41,7 @@ protected void buildBars(GraphPayload payload, XmlBuilder b, int maxValue, doubl
 		int cols = payload.getColumns();
 		int xstep = w / cols;
 		int[] pixels = m_translater.translate(h, maxValue, values);
+		String idPrefix = payload.getIdPrefix();
 
 		b.tag1("g", "id", "bar", "fill", "red");
 
@@ -49,7 +50,7 @@ protected void buildBars(GraphPayload payload, XmlBuilder b, int maxValue, doubl
 			int x = left + xstep * i;
 			int y = top + h - pixel;
 
-			b.tag("rect", "id", "b" + i, "x", x, "y", y, "width", xstep - 1, "height", pixel);
+			b.tag("rect", "id", idPrefix + i, "x", x, "y", y, "width", xstep - 1, "height", pixel);
 		}
 
 		b.tag2("g");

File: cat-home/src/main/java/com/dianping/cat/report/page/logview/JspFile.java
Patch:
@@ -3,7 +3,7 @@
 public enum JspFile {
 	LOGVIEW("/jsp/report/logview.jsp"),
 	
-	LOGVIEW_NO_HEADER("/jsp/report/logview_bare.jsp"),
+	LOGVIEW_NO_HEADER("/jsp/report/logview_no_header.jsp"),
 
 	;
 

File: cat-core/src/main/java/com/dianping/cat/servlet/CatFilter.java
Patch:
@@ -28,7 +28,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
 		String sessionToken = req.getSession().getId();
 		// setup for thread local data
 		Cat.setup(sessionToken);
-				
+		System.out.println("----------------Cat Filter init----------------");
 		MessageProducer cat = Cat.getProducer();
 		Transaction t = cat.newTransaction("URL", req.getRequestURI());
 
@@ -53,6 +53,7 @@ public void doFilter(ServletRequest request, ServletResponse response, FilterCha
 		} finally {
 			t.complete();
 
+			System.out.println("----------------Cat Filter End----------------");
 			// reset thread local data
 			Cat.reset();
 		}

File: cat-core/src/test/java/com/dianping/cat/message/spi/codec/HtmlMessageCodecTest.java
Patch:
@@ -191,7 +191,7 @@ public void testTransactionWithRemoteCall() {
 		            + "<tr><td>&nbsp;&nbsp;&nbsp;&nbsp;E15:33:42.009</td><td>CacheHost</td><td>host-1</td><td>0</td><td>ip=192.168.8.123</td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;T15:33:42.010</td><td>Cache</td><td>findReviewByPK</td><td class=\"error\">Missing</td><td>1ms 2468</td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;E15:33:42.010</td><td>Service</td><td>ReviewService</td><td>0</td><td>request data</td></tr>\r\n"
-		            + "<tr><td>&nbsp;&nbsp;<a href=\"/cat/m/20120227/15/domain1/domain1-c0a83f99-135bdb7825c-1.html\" onclick=\"show(this,1677274581);return false;\">[:: show ::]</a></td><td colspan=\"4\"><div id=\"1677274581\"></div></td></tr>\r\n"
+		            + "<tr><td>&nbsp;&nbsp;<a href=\"/cat/r/m/20120227/15/domain1/domain1-c0a83f99-135bdb7825c-1.html\" onclick=\"return show(this,1677274581);\">[:: show ::]</a></td><td colspan=\"4\"><div id=\"1677274581\"></div></td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;A15:33:42.012</td><td>DAL</td><td>findReviewByPK</td><td>0</td><td>5ms select title,content from Review where id = ?</td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;E15:33:42.027</td><td>URL</td><td>View</td><td>0</td><td>view=HTML</td></tr>\r\n"
 		            + "<tr><td>T15:33:42.087</td><td>URL</td><td>Review</td><td>0</td><td>100ms /review/2468</td></tr>\r\n");

File: cat-home/src/main/java/com/dianping/cat/report/build/ComponentsConfigurator.java
Patch:
@@ -33,7 +33,7 @@ public List<Component> defineComponents() {
 		}
 
 		all.add(C(ServerConfig.class)//
-		      .config(E("consumerServers").value("127.0.0.1:2281,127.0.0.1:2281"))//
+		      .config(E("consumerServers").value("127.0.0.1:2281"))//
 		      .config(E("fileServer").value("127.0.0.1")));
 
 		all.add(C(ModelProvider.class, "failure", FailureModelProvider.class).req(MessageConsumer.class, "realtime"));

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/EscapingBufferWriter.java
Patch:
@@ -2,7 +2,6 @@
 
 import org.jboss.netty.buffer.ChannelBuffer;
 
-
 public class EscapingBufferWriter implements BufferWriter {
 	@Override
 	public int writeTo(ChannelBuffer buf, byte[] data) {

File: cat-core/src/test/java/com/dianping/cat/message/spi/codec/HtmlMessageCodecTest.java
Patch:
@@ -189,7 +189,7 @@ public void testTransactionWithRemoteCall() {
 		            + "<tr><td>&nbsp;&nbsp;&nbsp;&nbsp;E15:33:42.009</td><td>CacheHost</td><td>host-1</td><td>0</td><td>ip=192.168.8.123</td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;T15:33:42.010</td><td>Cache</td><td>findReviewByPK</td><td class=\"error\">Missing</td><td>1ms 2468</td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;E15:33:42.010</td><td>Service</td><td>ReviewService</td><td>0</td><td>message_id</td></tr>\r\n"
-		            + "<tr><td colspan=\"5\">&nbsp;&nbsp;<a href=\"/cat/m/message_id\">[:: show ::]</a></td></tr>\r\n" //
+		            + "<tr><td>&nbsp;&nbsp;<a href=\"/cat/m/message_id\" onclick=\"show(1690722221);return false;\">[:: show ::]</a></td><td colspan=\"4\" id=\"1690722221\"></td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;A15:33:42.012</td><td>DAL</td><td>findReviewByPK</td><td>0</td><td>5ms select title,content from Review where id = ?</td></tr>\r\n"
 		            + "<tr><td>&nbsp;&nbsp;E15:33:42.027</td><td>URL</td><td>View</td><td>0</td><td>view=HTML</td></tr>\r\n"
 		            + "<tr><td>T15:33:42.087</td><td>URL</td><td>Review</td><td>0</td><td>100ms /review/2468</td></tr>\r\n");

File: cat-home/src/main/java/com/dianping/cat/report/ReportManager.java
Patch:
@@ -11,7 +11,7 @@
 import com.dianping.cat.report.tool.DateUtils;
 import com.site.helper.Files;
 
-public class ReportManage {
+public abstract class ReportManager {
 
 	public String getRemotePageContent(String urlStr) {
 		try {

File: cat-home/src/main/java/com/dianping/cat/report/page/failure/FailureManager.java
Patch:
@@ -2,10 +2,10 @@
 
 import java.util.Date;
 
-import com.dianping.cat.report.ReportManage;
+import com.dianping.cat.report.ReportManager;
 import com.dianping.cat.report.tool.DateUtils;
 
-public class FailureManage extends ReportManage{
+public class FailureManager extends ReportManager{
 
 	public String getConnectionUrl(String server,String domain, String ip, String duration){
 		StringBuffer result = new StringBuffer("http://").append(server).append("/cat/r/service?model=failure");

File: cat-home/src/main/java/com/dianping/cat/report/page/failure/Handler.java
Patch:
@@ -33,7 +33,7 @@ public class Handler implements PageHandler<Context> {
 	private JspViewer m_jspViewer;
 
 	@Inject
-	private FailureManage m_manager;
+	private FailureManager m_manager;
 
 	@Override
 	@PayloadMeta(Payload.class)

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/Handler.java
Patch:
@@ -38,7 +38,7 @@ public class Handler implements PageHandler<Context> {
 	private ServerConfig serverConfig;
 	
 	@Inject
-	private IpManage m_manager;
+	private IpManager m_manager;
 
 	@Override
 	@PayloadMeta(Payload.class)

File: cat-home/src/main/java/com/dianping/cat/report/page/ip/IpManager.java
Patch:
@@ -2,10 +2,10 @@
 
 import java.util.Date;
 
-import com.dianping.cat.report.ReportManage;
+import com.dianping.cat.report.ReportManager;
 import com.dianping.cat.report.tool.DateUtils;
 
-public class IpManage extends ReportManage{
+public class IpManager extends ReportManager{
 
 	public String getConnectionUrl(String server,String domain,  String duration){
 		StringBuffer result = new StringBuffer("http://").append(server).append("/cat/r/service?model=ip");

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -36,7 +36,7 @@ public class Handler implements PageHandler<Context> {
 	private ServerConfig serverConfig;
 
 	@Inject
-	private TransactionManage m_manager;
+	private TransactionManager m_manager;
 
 	@Override
 	@PayloadMeta(Payload.class)

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/TransactionManager.java
Patch:
@@ -2,10 +2,10 @@
 
 import java.util.Date;
 
-import com.dianping.cat.report.ReportManage;
+import com.dianping.cat.report.ReportManager;
 import com.dianping.cat.report.tool.DateUtils;
 
-public class TransactionManage extends ReportManage{
+public class TransactionManager extends ReportManager{
 
 	public String getConnectionUrl(String server,String domain, String duration){
 		StringBuffer result = new StringBuffer("http://").append(server).append("/cat/r/service?model=transaction");

File: cat-home/src/main/java/com/dianping/cat/report/tool/ReportUtils.java
Patch:
@@ -71,7 +71,7 @@ else if(name.getId()==null){
 				// TODO Auto-generated method stub
 				//super.mergeName(old, name);
 				old.setTotalCount(old.getTotalCount() + name.getTotalCount());
-				old.setFailCount(old.getFailCount() + name.getTotalCount());
+				old.setFailCount(old.getFailCount() + name.getFailCount());
 				old.setFailPercent(old.getFailCount()* 100.0 / old.getTotalCount());
 				double min = name.getMin();
 				if (min < old.getMin()) {
@@ -114,7 +114,7 @@ else if(name.getId()==null){
 				//super.mergeType(old, type);
 				
 				old.setTotalCount(old.getTotalCount() + name.getTotalCount());
-				old.setFailCount(old.getFailCount() + name.getTotalCount());
+				old.setFailCount(old.getFailCount() + name.getFailCount());
 				old.setFailPercent( old.getFailCount()* 100.0 /  old.getTotalCount());
 				double min = name.getMin();
 				if (min < old.getMin()) {

File: cat-home/src/main/java/com/dianping/cat/report/view/ErrorsTag.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.garden.view;
+package com.dianping.cat.report.view;
 
 import java.io.IOException;
 import java.io.StringReader;

File: cat-home/src/main/java/com/dianping/cat/report/view/NavigationBar.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.garden.view;
+package com.dianping.cat.report.view;
 
 import com.dianping.cat.report.ReportPage;
 import com.site.web.mvc.Page;

File: cat-home/src/main/java/com/dianping/cat/report/view/UriBuilder.java
Patch:
@@ -1,4 +1,4 @@
-package com.dianping.garden.view;
+package com.dianping.cat.report.view;
 
 import com.site.web.mvc.Action;
 import com.site.web.mvc.ActionContext;

File: cat-core/src/main/java/com/dianping/cat/configuration/ComponentsConfigurator.java
Patch:
@@ -64,12 +64,12 @@ public List<Component> defineComponents() {
 		all.add(C(MessageCodec.class, "html", HtmlMessageCodec.class) //
 		      .req(BufferWriter.class, "html-encode"));
 
-		all.add(C(MessageConsumer.class, "dummy", DummyConsumer.class));
-		all.add(C(MessageConsumer.class, "dump-to-html", DumpToHtmlConsumer.class) //
+		all.add(C(MessageConsumer.class, DummyConsumer.ID, DummyConsumer.class));
+		all.add(C(MessageConsumer.class, DumpToHtmlConsumer.ID, DumpToHtmlConsumer.class) //
 		      .req(MessageStorage.class, "html") //
 		      .req(MessagePathBuilder.class));
 		all.add(C(MessageConsumerRegistry.class, DefaultMessageConsumerRegistry.class) //
-		      .req(MessageConsumer.class, new String[] { "dummy" }, "m_consumers"));
+		      .req(MessageConsumer.class, new String[] { DummyConsumer.ID }, "m_consumers"));
 
 		all.add(C(MessageSender.class, "tcp-socket", TcpSocketSender.class) //
 		      .is(PER_LOOKUP) //

File: cat-core/src/main/java/com/dianping/cat/message/spi/MessagePathBuilder.java
Patch:
@@ -4,6 +4,8 @@
 import java.net.URL;
 
 public interface MessagePathBuilder {
+	public String getHdfsPath(MessageTree tree, String host);
+
 	public File getLogViewBaseDir();
 
 	public URL getLogViewBaseUrl();

File: cat-core/src/main/java/com/dianping/cat/message/spi/MessageTree.java
Patch:
@@ -2,7 +2,9 @@
 
 import com.dianping.cat.message.Message;
 
-public interface MessageTree {
+public interface MessageTree extends Cloneable {
+	public MessageTree copy();
+
 	public String getDomain();
 
 	public String getHostName();

File: cat-core/src/main/java/com/dianping/cat/message/spi/consumer/DummyConsumer.java
Patch:
@@ -4,9 +4,11 @@
 import com.dianping.cat.message.spi.MessageTree;
 
 public class DummyConsumer implements MessageConsumer {
+	public static final String ID = "dummy";
+
 	@Override
 	public String getConsumerId() {
-		return "dummy";
+		return ID;
 	}
 
 	@Override

File: cat-home/src/main/java/com/dianping/cat/report/page/failure/Handler.java
Patch:
@@ -107,6 +107,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		model.setPage(ReportPage.FAILURE);
 		
 		Payload payload = ctx.getPayload();
+		
 		FailureReportAnalyzer analyzerForPage = (FailureReportAnalyzer) m_consumer.getCurrentAnalyzer("failure");
 		
 		//Set all domain of page

File: cat-core/src/main/java/com/dianping/cat/configuration/ComponentsConfigurator.java
Patch:
@@ -66,7 +66,7 @@ public List<Component> defineComponents() {
 
 		all.add(C(MessageConsumer.class, "dummy", DummyConsumer.class));
 		all.add(C(MessageConsumer.class, "dump-to-html", DumpToHtmlConsumer.class) //
-		      .req(MessageCodec.class, "html") //
+		      .req(MessageStorage.class, "html") //
 		      .req(MessagePathBuilder.class));
 		all.add(C(MessageConsumerRegistry.class, DefaultMessageConsumerRegistry.class) //
 		      .req(MessageConsumer.class, new String[] { "dummy" }, "m_consumers"));

File: cat-home/src/main/java/com/dianping/cat/report/page/failure/FailureData.java
Patch:
@@ -15,9 +15,7 @@
 public class FailureData {
 	
 	public String getFailureJsonDate(FailureReport report) {
-		DefaultJsonBuilder builder = new DefaultJsonBuilder();
-		report.accept(builder);
-		return builder.getString();
+		return new DefaultJsonBuilder().buildJson(report);
 	}
 
 	/*public String getFailureDataFromMemory(FailureReportAnalyzer analyzer, String domain) {

File: cat-home/src/main/java/com/dianping/cat/report/page/failure/Handler.java
Patch:
@@ -208,10 +208,8 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 			} else {
 				report = analyzer.generateByDomainAndIp(domain,ip);
 			}
-			DefaultJsonBuilder builder = new DefaultJsonBuilder();
 
-			report.accept(builder);
-			model.setJsonResult(builder.getString());
+			model.setJsonResult(new DefaultJsonBuilder().buildJson(report));
 		} else {
 			String baseFilePath = analyzerForPage.getReportPath();
 			model.setJsonResult(getJsonResultFromFile(baseFilePath, file));

File: cat-core/src/test/java/com/dianping/cat/message/spi/codec/PlainTextMessageCodecTest.java
Patch:
@@ -81,6 +81,7 @@ private DefaultMessageTree newMessageTree() {
 		tree.setRequestToken("requestToken");
 		tree.setSessionToken("sessionToken");
 		tree.setThreadId("threadId");
+		tree.setThreadName("threadName");
 
 		return tree;
 	}
@@ -127,7 +128,7 @@ public void testHeartbeat() {
 	public void testMessageTree() {
 		DefaultMessageTree tree = newMessageTree();
 		long timestamp = 1325489621987L;
-		String expected = "PT1\tdomain\thostName\tipAddress\tthreadId\tmessageId\trequestToken\tsessionToken\n";
+		String expected = "PT1\tdomain\thostName\tipAddress\tthreadId\tthreadName\tmessageId\trequestToken\tsessionToken\n";
 
 		checkTree(tree, expected);
 

File: cat-consumer/src/test/java/com/dianping/cat/consumer/transaction/TransactionReportMessageAnalyzerTest.java
Patch:
@@ -93,7 +93,7 @@ public void testCommonGenerate() throws InterruptedException {
 			analyzer.process(tree);
 		}
 
-		TransactionReport report = analyzer.generate();
+		TransactionReport report = analyzer.generate("group");
 		TransactionType typeA = report.getTypes().get("A");
 		TransactionName n1 = typeA.getNames().get("n1");
 		assertEquals(1000, n1.getTotalCount());

File: cat-core/src/main/java/com/dianping/cat/message/spi/AbstractMessageAnalyzer.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.util.List;
 
+
 public abstract class AbstractMessageAnalyzer<R> implements MessageAnalyzer {
 	@Override
 	public void analyze(MessageQueue queue) {
@@ -31,6 +32,8 @@ public void analyze(MessageQueue queue) {
 	protected abstract void store(List<R> result);
 
 	public abstract List<R> generate();
+	
+	public abstract R generate(String domain);
 
 	protected abstract void process(MessageTree tree);
 

File: cat-home/src/main/java/com/dianping/cat/report/page/transaction/Handler.java
Patch:
@@ -41,7 +41,7 @@ public void handleOutbound(Context ctx) throws ServletException, IOException {
 		      .getCurrentAnalyzer("transaction");
 
 		if (analyzer != null) {
-			model.setReport(analyzer.generate());
+			model.setReport(analyzer.generate(ctx.getRequestContext().getParameterProvider().getParameter("domain")));
 		} else {
 			model.setReport(new TransactionReport("none"));
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/failure/FailureReportAnalyzer.java
Patch:
@@ -252,7 +252,7 @@ public void handle(FailureReport report, MessageTree tree) {
 				if (t.getDuration() > m_threshold) {
 					Entry entry = super.getEntry(tree);
 
-					entry.setText(message.getType() + message.getName());
+					entry.setText(message.getType() + "." + message.getName());
 					entry.setType(LONG_URL);
 
 					Segment segment = super.findOrCreateSegment(message, report);

File: cat-consumer/src/main/java/com/dianping/cat/consumer/DefaultAnalyzerFactory.java
Patch:
@@ -29,6 +29,6 @@ public MessageAnalyzer create(String name, long start, long duration, String dom
 
 	@Override
 	public void release(Object component) {
-		release(component);
+		super.release(component);
 	}
 }

File: cat-consumer/src/test/java/com/dianping/cat/consumer/failure/FailureAnalyzerStoreTest.java
Patch:
@@ -55,7 +55,7 @@ public void testJson() throws Exception {
 			tree.setMessage(t);
 			tree.setIpAddress("192.168.8." + i % 4);
 			t.setDuration(3 * 1000);
-			t.setTimestamp(start + 1000 * 60 * i);
+			t.setTimestamp(start + 1000L * 60 * i);
 			analyzer.process(tree);
 			analyzer.process(tree);
 			analyzer.process(tree);
@@ -95,7 +95,7 @@ public void testStore() throws Exception {
 			tree.setHostName("middleware");
 			tree.setMessage(t);
 			t.setDuration(3 * 1000);
-			t.setTimestamp(start + 1000 * 60 * i);
+			t.setTimestamp(start + 1000L * 60 * i);
 			analyzer.process(tree);
 		}
 

File: cat-core/src/main/java/com/dianping/cat/configuration/model/ClientConfigValidator.java
Patch:
@@ -7,7 +7,7 @@ public class ClientConfigValidator extends DefaultValidator {
 	@Override
 	public void visitConfig(Config config) {
 		if (!"client".equals(config.getMode())) {
-			throw new RuntimeException(String.format("Attribute(%)s at path(%s) is required!", "mode", "/config"));
+			throw new RuntimeException(String.format("Attribute(%s) at path(%s) is required!", "mode", "/config"));
 		} else if (config.getApp() == null) {
 			throw new RuntimeException(String.format("Element(%s) at path(%s) is required!", "app", "/config"));
 		} else if (config.getServers().size() == 0) {

File: cat-core/src/main/java/com/dianping/cat/message/io/TcpSocketReceiver.java
Patch:
@@ -105,7 +105,7 @@ public void shutdown() {
 		m_factory.releaseExternalResources();
 	}
 
-	public class MyDecoder extends FrameDecoder {
+	public static class MyDecoder extends FrameDecoder {
 		@Override
 		/**
 		 * return null means not all data is ready, so waiting for next network package.

File: cat-core/src/main/java/com/dianping/cat/message/spi/codec/HtmlMessageCodec.java
Patch:
@@ -80,7 +80,7 @@ protected int encodeLine(Message message, ChannelBuffer buf, char type, Policy p
 		if (counter != null) {
 			counter.inc();
 
-			count += helper.tr1(buf, counter.getCount() % 2 == 1 ? "odd" : "even");
+			count += helper.tr1(buf, counter.getCount() % 2 != 0 ? "odd" : "even");
 		} else {
 			count += helper.tr1(buf, null);
 		}

File: cat-core/src/main/java/com/dianping/cat/message/internal/MilliSecondTimer.java
Patch:
@@ -24,6 +24,7 @@ public static void initialize() {
 				if (millis != m_baseTime) {
 					m_baseTime = millis;
 					m_startNanoTime = System.nanoTime();
+					break;
 				}
 			}
 		} else {

File: cat-consumer/src/main/java/com/dianping/cat/consumer/RealtimeConsumer.java
Patch:
@@ -142,7 +142,7 @@ public void consume(MessageTree tree) {
 			if (timestamp < now + MINUTE * 3 && timestamp >= nextStart) {
 				startTasks(tree);
 			} else {
-				m_logger.warn("The message is not excepceted!" + tree);
+				m_logger.warn("The timestamp of message is out of range, IGNORED! \r\n" + tree);
 			}
 		}
 	}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/failure/FailureReportAnalyzer.java
Patch:
@@ -172,11 +172,10 @@ private String getDateFormat(long time) {
 		}
 
 		private Entry getEntry(MessageTree tree) {
-			String base = m_storage.getBaseUrl().toString();
 			String url = m_storage.store(tree);
 
 			Entry entry = new Entry();
-			entry.setPath(base + url);
+			entry.setPath(url);
 			entry.setThreadId(tree.getThreadId());
 			return entry;
 		}

File: cat-consumer/src/main/java/com/dianping/cat/consumer/failure/FailureReportAnalyzer.java
Patch:
@@ -67,6 +67,7 @@ public void addHandlers(Handler handler) {
 		if (m_handlers == null) {
 			m_handlers = new ArrayList<FailureReportAnalyzer.Handler>();
 		}
+
 		m_handlers.add(handler);
 	}
 

File: cat-core/src/main/java/com/dianping/cat/configuration/ComponentsConfigurator.java
Patch:
@@ -54,7 +54,7 @@ public List<Component> defineComponents() {
 		      .req(MessageManager.class));
 		all.add(C(MessageStorage.class, "html", DefaultMessageStorage.class) //
 		      .req(MessagePathBuilder.class) //
-		      .req(MessageCodec.class, "html-encode"));
+		      .req(MessageCodec.class, "html"));
 
 		all.add(C(BufferWriter.class, "escape", EscapingBufferWriter.class));
 		all.add(C(BufferWriter.class, "html-encode", HtmlEncodingBufferWriter.class));

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java
Patch:
@@ -98,8 +98,10 @@ public void initialize(Config config) {
 
 	@Override
 	public void reset() {
+		System.out.println(m_context);
 		// destroy current thread local data
 		m_context.remove();
+		System.out.println(m_context.get());
 	}
 
 	@Override

File: cat-consumer/src/test/java/com/dianping/cat/consumer/failure/FailureAnalyzerStoreTest.java
Patch:
@@ -31,6 +31,7 @@ public void testJson()throws Exception{
 		FailureReportAnalyzer analyzer = (FailureReportAnalyzer) factory
 				.create("failure", start, duration, "domain1", extraTime);
 		int number = 5;
+		
 		for (int i = 0; i < number; i++) {
 			DefaultTransaction t = new DefaultTransaction("A1", "B1", null);
 			MessageTree tree = new DefaultMessageTree();

File: cat-home/src/main/java/com/dianping/cat/report/ReportModule.java
Patch:
@@ -11,7 +11,7 @@
 
 com.dianping.cat.report.page.transaction.Handler.class,
 
-com.dianping.cat.report.page.failure.Handler.class,
+com.dianping.cat.report.page.failure.Handler.class
 
 })
 public class ReportModule extends AbstractModule {

File: cat-consumer/src/test/java/com/dianping/cat/consumer/impl/OneAnalyzerTwoDurationTest.java
Patch:
@@ -28,14 +28,12 @@ public class OneAnalyzerTwoDurationTest extends ComponentTestCase {
 	@Test
 	public void test() throws Exception {
 		MessageConsumer consumer = lookup(MessageConsumer.class, "mock");
-		// һ��Сʱǰ��Message
 		for (int i = 0; i < 100; i++) {
 			DefaultMessageTree tree = new DefaultMessageTree();
 			tree.setMessage(new MockMessage(-1));
 			consumer.consume(tree);
 		}
 		
-		// ��ǰһ��Сʱ��Message
 		for (int i = 0; i < 100; i++) {
 			DefaultMessageTree tree = new DefaultMessageTree();
 			tree.setMessage(new MockMessage(1));

File: cat-consumer/src/test/java/com/dianping/cat/consumer/impl/ManyAnalyzerTest.java
Patch:
@@ -57,7 +57,7 @@ protected void process(MessageTree tree) {
 		
 
 		@Override
-		protected boolean isTimeEnd() {
+		protected boolean isTimeout() {
 			// TODO Auto-generated method stub
 			return false;
 		}
@@ -82,7 +82,7 @@ protected void process(MessageTree tree) {
 
 
 		@Override
-		protected boolean isTimeEnd() {
+		protected boolean isTimeout() {
 			// TODO Auto-generated method stub
 			return false;
 		}
@@ -106,7 +106,7 @@ protected void process(MessageTree tree) {
 		}
 		
 		@Override
-		protected boolean isTimeEnd() {
+		protected boolean isTimeout() {
 			// TODO Auto-generated method stub
 			return false;
 		}

File: cat-consumer/src/test/java/com/dianping/cat/consumer/impl/OneAnalyzerTwoDurationTest.java
Patch:
@@ -75,7 +75,7 @@ protected void process(MessageTree tree) {
 		}
 
 		@Override
-		protected boolean isTimeEnd() {
+		protected boolean isTimeout() {
 			// TODO Auto-generated method stub
 			return false;
 		}

File: cat-consumer/src/test/java/com/dianping/cat/message/consumer/model/failure/FailureAnalyzerTestConfigurator.java
Patch:
@@ -16,13 +16,13 @@ public static void main(String[] args) {
 	@Override
 	public List<Component> defineComponents() {
 		List<Component> all = new ArrayList<Component>();
-		String handlers = "failure,long-url";
+		/*String handlers = "failure,long-url";
 		
 		all.add(C(FailureReportAnalyzerConfig.class, "failure-analyzer-config",//
 				FailureReportAnalyzerConfig.class)//
 				.config(E("handlers").value(handlers)//
 						, E("machines").value("192.168.1.1,192.168.1.2,192.168.1.3")));
-		
+		*/
 		return all;
 	}
 

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultTransaction.java
Patch:
@@ -8,7 +8,7 @@
 import com.dianping.cat.message.Transaction;
 
 public class DefaultTransaction extends AbstractMessage implements Transaction {
-	private long m_duration;
+	private long m_duration = -1;
 
 	private List<Message> m_children;
 

File: cat-core/src/main/java/com/dianping/cat/message/Message.java
Patch:
@@ -75,8 +75,7 @@ public interface Message {
 	 * <li>Search: maps to one method of search call</li>
 	 * <li>SQL: maps to one SQL statement</li>
 	 * <li>Cache: maps to one cache access</li>
-	 * <li>Exception: maps to java.lang.Exception</li>
-	 * <li>Error: maps to java.lang.Error</li>
+	 * <li>Error: maps to java.lang.Throwable (java.lang.Exception and java.lang.Error)</li>
 	 * </ul>
 	 * </p>
 	 * 

File: cat-core/src/main/java/com/dianping/cat/message/Transaction.java
Patch:
@@ -42,7 +42,7 @@ public interface Transaction extends Message {
 	 * @param message
 	 *           to be added
 	 */
-	public void addChild(Message message);
+	public Transaction addChild(Message message);
 
 	/**
 	 * Get all children message within current transaction.

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultEvent.java
Patch:
@@ -10,6 +10,5 @@ public DefaultEvent(String type, String name) {
 	@Override
 	public void complete() {
 		setCompleted(true);
-		MessageManager.INSTANCE.add(this);
 	}
 }

File: cat-core/src/main/java/com/dianping/cat/message/internal/DefaultHeartbeat.java
Patch:
@@ -10,6 +10,5 @@ public DefaultHeartbeat(String type, String name) {
 	@Override
 	public void complete() {
 		setCompleted(true);
-		MessageManager.INSTANCE.add(this);
 	}
 }

File: cat-core/src/test/java/com/dianping/cat/message/TransactionTest.java
Patch:
@@ -5,7 +5,7 @@
 import com.dianping.cat.Cat;
 
 public class TransactionTest {
-	public static MessageProducer CAT = Cat.getProducer();
+	private static final MessageProducer CAT = Cat.getProducer();
 
 	@Test
 	public void testNormal() {

