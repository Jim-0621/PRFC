File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/FizzStringReturner.java
Patch:
@@ -17,7 +17,8 @@ public String getReturnString() {
 		final StringBuilder myStringBuilder = new StringBuilder(
 				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.FIZZ);
 		final String myString = myStringBuilder.toString();
-		return new String(myString);
+		final char[] myCharacters = myString.toCharArray();
+		return new String(myCharacters, 0, myCharacters.length);
 	}
 
 }

File: src/test/java/FizzBuzzTest.java
Patch:
@@ -54,7 +54,8 @@ private void doFizzBuzz(final int n, final String s) throws IOException {
 		this.fb.fizzBuzz(n);
 
 		System.out.flush();
-		assertEquals(s, baos.toString());
+		String platformDependentExpectedResult = s.replaceAll("\\n", System.getProperty("line.separator"));
+		assertEquals(platformDependentExpectedResult, baos.toString());
 	}
 
 	/**

File: src/test/java/FizzBuzzTest.java
Patch:
@@ -40,7 +40,8 @@ private void doFizzBuzz(final int n, final String s) throws IOException {
 		this.fb.fizzBuzz(n);
 
 		System.out.flush();
-		assertEquals(s, baos.toString());
+		String platformDependentExpectedResult = s.replaceAll("\\n", System.getProperty("line.separator"));
+		assertEquals(platformDependentExpectedResult, baos.toString());
 	}
 
 	@Test

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -10,6 +10,9 @@
 
 public final class Main {
 
+	/**
+	 * @param args
+     */
 	public static void main(final String[] args) {
 		final ApplicationContext context = new ClassPathXmlApplicationContext(Constants.SPRING_XML);
 		final FizzBuzz myFizzBuzz = (FizzBuzz) context.getBean(Constants.STANDARD_FIZZ_BUZZ);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/BuzzStringReturner.java
Patch:
@@ -7,6 +7,9 @@
 @Service
 public class BuzzStringReturner implements StringStringReturner {
 
+	/**
+	 * @return
+     */
 	public String getReturnString() {
 		final StringBuilder myStringBuilder = new StringBuilder(
 				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.BUZZ);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/FizzStringReturner.java
Patch:
@@ -6,7 +6,9 @@
 
 @Service
 public class FizzStringReturner implements StringStringReturner {
-
+	/**
+	 * @return
+     */
 	public String getReturnString() {
 		final StringBuilder myStringBuilder = new StringBuilder(
 				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.FIZZ);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/NewLineStringReturner.java
Patch:
@@ -7,6 +7,9 @@
 @Service
 public class NewLineStringReturner implements StringStringReturner {
 
+	/**
+	 * @return
+     */
 	public String getReturnString() {
 		final String systemDefaultNewLineString = System.getProperty(
 				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.LINE_SEPARATOR);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/FizzBuzz.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface FizzBuzz {
 
+	/**
+	 * @param nFizzBuzzUpperLimit
+     */
 	void fizzBuzz(int nFizzBuzzUpperLimit);
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/FizzBuzzOutputStrategyFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface FizzBuzzOutputStrategyFactory {
 
+	/**
+	 * @return
+     */
 	public FizzBuzzOutputStrategy createOutputStrategy();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/FizzBuzzSolutionStrategyFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface FizzBuzzSolutionStrategyFactory {
 
+	/**
+	 * @return
+     */
 	public FizzBuzzSolutionStrategy createFizzBuzzSolutionStrategy();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IntegerPrinterFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface IntegerPrinterFactory {
 
+	/**
+	 * @return
+     */
 	public IntegerPrinter createPrinter();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IntegerStringReturnerFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface IntegerStringReturnerFactory {
 
+	/**
+	 * @return
+     */
 	public IntegerStringReturner createIntegerStringReturner();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IsEvenlyDivisibleStrategyFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface IsEvenlyDivisibleStrategyFactory {
 
+	/**
+	 * @return
+     */
 	public IsEvenlyDivisibleStrategy createIsEvenlyDivisibleStrategy();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/OutputGenerationContextVisitorFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface OutputGenerationContextVisitorFactory {
 
+	/**
+	 * @return
+     */
 	public OutputGenerationContextVisitor createVisitor();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/StringPrinterFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface StringPrinterFactory {
 
+	/**
+	 * @return
+     */
 	public StringPrinter createStringPrinter();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/StringStringReturnerFactory.java
Patch:
@@ -4,6 +4,9 @@
 
 public interface StringStringReturnerFactory {
 
+	/**
+	 * @return
+     */
 	public StringStringReturner createStringStringReturner();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/loop/LoopContextStateRetrieval.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface LoopContextStateRetrieval {
 
+	/**
+	 * @return
+     */
 	public int getControlParameter();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/loop/LoopPayloadExecution.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface LoopPayloadExecution {
 
+	/**
+	 * @param stateRetrieval
+     */
 	public void runLoopPayload(LoopContextStateRetrieval stateRetrieval);
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/parameters/FizzBuzzUpperLimitParameter.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface FizzBuzzUpperLimitParameter {
 
+	/**
+	 * @return
+     */
 	public int obtainUpperLimitValue();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/printers/IntegerPrinter.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface IntegerPrinter extends DataPrinter {
 
+	/**
+	 * @param theInteger
+     */
 	public void printInteger(int theInteger);
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/printers/StringPrinter.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface StringPrinter extends DataPrinter {
 
+	/**
+	 *
+	 */
 	public void print();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/FizzBuzzExceptionSafeOutputStrategy.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface FizzBuzzExceptionSafeOutputStrategy {
 
+	/**
+	 * @param output
+     */
 	public void output(String output);
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/FizzBuzzSolutionStrategy.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface FizzBuzzSolutionStrategy {
 
+	/**
+	 * @param nFizzBuzzUpperLimit
+     */
 	public void runSolution(int nFizzBuzzUpperLimit);
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/OutputGenerationStrategy.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface OutputGenerationStrategy {
 
+	/**
+	 * @param generationParameter
+     */
 	void performGenerationForCurrentStep(SingleStepOutputGenerationParameter generationParameter);
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/SingleStepOutputGenerationParameter.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface SingleStepOutputGenerationParameter {
 
+	/**
+	 * @return
+     */
 	public int retrieveIntegerValue();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/stringreturners/StringStringReturner.java
Patch:
@@ -2,6 +2,9 @@
 
 public interface StringStringReturner {
 
+	/**
+	 * @return
+     */
 	public String getReturnString();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/ApplicationContextHolder.java
Patch:
@@ -21,4 +21,5 @@ public void setApplicationContext(final ApplicationContext applicationContext) t
 	public static ApplicationContext getApplicationContext() {
 		return ApplicationContextHolder.applicationContext;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Constants.java
Patch:
@@ -16,4 +16,5 @@ public class Constants {
 	public static final int INTEGER_ORIGIN_ZERO_VALUE = 0;
 	public static final int LOOP_INC_VALUE = 1;
 	public static final int LOOP_INIT_VALUE = 1;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -19,4 +19,5 @@ public static void main(final String[] args) {
 		((ConfigurableApplicationContext) context).close();
 
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/StandardFizzBuzz.java
Patch:
@@ -23,4 +23,5 @@ public void fizzBuzz(final int nFizzBuzzUpperLimit) {
 				this._fizzBuzzSolutionStrategyFactory.createFizzBuzzSolutionStrategy();
 		mySolutionStrategy.runSolution(nFizzBuzzUpperLimit);
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStringReturnerFactory.java
Patch:
@@ -22,4 +22,5 @@ public BuzzStringReturnerFactory(final BuzzStringReturner _myBuzzStringReturner)
 	public StringStringReturner createStringStringReturner() {
 		return this._myBuzzStringReturner;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/LoopComponentFactory.java
Patch:
@@ -42,4 +42,5 @@ public LoopFinalizer createLoopFinalizer(final int nLoopFinalValue) {
 	public LoopStep createLoopStep() {
 		return this._loopStep;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopCondition.java
Patch:
@@ -19,4 +19,5 @@ public boolean evaluateLoop(final int nCurrentNumber, final int nTotalCount) {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopFinalizer.java
Patch:
@@ -12,4 +12,5 @@ public LoopFinalizer(final int nLoopFinalValue) {
 	public int getLoopFinalizationPoint() {
 		return this.nStoredLoopFinalValue;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopInitializer.java
Patch:
@@ -10,4 +10,5 @@ public class LoopInitializer {
 	public int getLoopInitializationPoint() {
 		return Constants.LOOP_INIT_VALUE;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/IntegerDivider.java
Patch:
@@ -45,4 +45,5 @@ public int divide(final int nFirstInteger, final int nSecondInteger) {
 			return nIntegerQuotient;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/NumberIsMultipleOfAnotherNumberVerifier.java
Patch:
@@ -34,4 +34,5 @@ public static boolean numberIsMultipleOfAnotherNumber(final int nFirstNumber, fi
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzPrinter.java
Patch:
@@ -26,4 +26,5 @@ public void printBuzz() {
 
 		myOutputAdapter.output(myBuzzStringReturner.getReturnString());
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzStringPrinter.java
Patch:
@@ -38,4 +38,5 @@ public void print() {
 	public void printValue(final Object value) {
 		this.print();
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/BuzzStrategy.java
Patch:
@@ -17,4 +17,5 @@ public boolean isEvenlyDivisible(final int theInteger) {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/EnterpriseGradeFizzBuzzSolutionStrategy.java
Patch:
@@ -25,4 +25,5 @@ public void runSolution(final int nFizzBuzzUpperLimit) {
 		final LoopRunner loopRunner = new LoopRunner(loopContext, loopContext, this._loopPayloadExecution);
 		loopRunner.runLoop();
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/FizzStrategy.java
Patch:
@@ -17,4 +17,5 @@ public boolean isEvenlyDivisible(final int theInteger) {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/SingleStepOutputGenerationStrategy.java
Patch:
@@ -55,4 +55,5 @@ public void performGenerationForCurrentStep(final SingleStepOutputGenerationPara
 		}
 		this.myNewLinePrinter.print();
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter.java
Patch:
@@ -6,7 +6,7 @@
 public final class FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter implements FizzBuzzExceptionSafeOutputStrategy {
 
 	private  final FizzBuzzOutputStrategy _fizzBuzzOutputStrategy;
-	
+
 	public FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter(final FizzBuzzOutputStrategy fizzBuzzOutputStrategy) {
 		super();
 		this._fizzBuzzOutputStrategy = fizzBuzzOutputStrategy;
@@ -22,4 +22,5 @@ public void output(final String outputStringToOutput) {
 			// We're the enterprise...we don't get throwables either!
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/LoopContextStateRetrievalToSingleStepOutputGenerationAdapter.java
Patch:
@@ -6,7 +6,7 @@
 public final class LoopContextStateRetrievalToSingleStepOutputGenerationAdapter implements SingleStepOutputGenerationParameter {
 
 	private final LoopContextStateRetrieval _retrievalObjectToAdapt;
-	
+
 	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(final LoopContextStateRetrieval retrievalObjectToAdapt) {
 		super();
 		this._retrievalObjectToAdapt = retrievalObjectToAdapt;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/doublecomparator/FirstIsLargerThanSecondDoubleComparator.java
Patch:
@@ -4,11 +4,13 @@
 
 @Service
 public class FirstIsLargerThanSecondDoubleComparator {
+
 	public  boolean FirstIsLargerThanSecond(final double dbFirstDoubleToCompare, final double dbSecondDoubleToCompare) {
 		if (dbFirstDoubleToCompare > dbSecondDoubleToCompare) {
 			return true;
 		} else {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/doublecomparator/FirstIsSmallerThanSecondDoubleComparator.java
Patch:
@@ -4,11 +4,13 @@
 
 @Service
 public class FirstIsSmallerThanSecondDoubleComparator {
+
 	public  boolean FirstIsSmallerThanSecond(final double dbFirstDoubleToCompare, final double dbSecondDoubleToCompare) {
 		if (dbFirstDoubleToCompare < dbSecondDoubleToCompare) {
 			return true;
 		} else {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/IntegerForEqualityComparator.java
Patch:
@@ -16,4 +16,5 @@ public static boolean areTwoIntegersEqual(final int nFirstInteger, final int nSe
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/ThreeWayIntegerComparator.java
Patch:
@@ -21,4 +21,5 @@ public static ThreeWayIntegerComparisonResult Compare(final int nFirstInteger, f
 			throw new UnsupportedOperationException(Constants.THE_INTEGERS_COULD_NOT_BE_COMPARED);
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/BuzzStrategyConstants.java
Patch:
@@ -3,9 +3,10 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public final class BuzzStrategyConstants
-{
+public final class BuzzStrategyConstants {
+
 	private BuzzStrategyConstants() {}
 
 	public static final int BUZZ_INTEGER_CONSTANT_VALUE = 5;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/FizzStrategyConstants.java
Patch:
@@ -3,9 +3,10 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public final class FizzStrategyConstants
-{
+public final class FizzStrategyConstants {
+
 	private FizzStrategyConstants() {}
 
 	public static final int FIZZ_INTEGER_CONSTANT_VALUE = 3;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/NoFizzNoBuzzStrategyConstants.java
Patch:
@@ -3,10 +3,11 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public final class NoFizzNoBuzzStrategyConstants
-{
+public final class NoFizzNoBuzzStrategyConstants {
+
 	private NoFizzNoBuzzStrategyConstants() {}
 
 	public static final int NO_BUZZ_INTEGER_CONSTANT_VALUE = BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE;
 	public static final int NO_FIZZ_INTEGER_CONSTANT_VALUE = FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/converters/primitivetypesconverters/DoubleToIntConverter.java
Patch:
@@ -11,4 +11,5 @@ public static int Convert(final double dbDoubleToConvert) {
 		final int nConversionResult = (int) dbDoubleToConvert;
 		return nConversionResult;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/converters/primitivetypesconverters/IntToDoubleConverter.java
Patch:
@@ -11,4 +11,5 @@ public static double Convert(final int nIntegerToConvert) {
 		final double dbConversionResult = (double) nIntegerToConvert;
 		return dbConversionResult;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/BuzzStringReturner.java
Patch:
@@ -13,5 +13,5 @@ public String getReturnString() {
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/NewLineStringReturner.java
Patch:
@@ -14,4 +14,5 @@ public String getReturnString() {
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/FizzBuzz.java
Patch:
@@ -1,5 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces;
 
 public interface FizzBuzz {
+
 	void fizzBuzz(int nFizzBuzzUpperLimit);
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/FizzBuzzOutputStrategyFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzOutputStrategy;
 
 public interface FizzBuzzOutputStrategyFactory {
-	
+
 	public FizzBuzzOutputStrategy createOutputStrategy();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IntegerPrinterFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.IntegerPrinter;
 
 public interface IntegerPrinterFactory {
-	
+
 	public IntegerPrinter createPrinter();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IntegerStringReturnerFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
 
 public interface IntegerStringReturnerFactory {
-	
+
 	public IntegerStringReturner createIntegerStringReturner();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IsEvenlyDivisibleStrategyFactory.java
Patch:
@@ -3,6 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 
 public interface IsEvenlyDivisibleStrategyFactory {
-	
+
 	public IsEvenlyDivisibleStrategy createIsEvenlyDivisibleStrategy();
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/OutputGenerationContextVisitorFactory.java
Patch:
@@ -3,5 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.visitors.OutputGenerationContextVisitor;
 
 public interface OutputGenerationContextVisitorFactory {
+
 	public OutputGenerationContextVisitor createVisitor();
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/StringPrinterFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 
 public interface StringPrinterFactory {
-	
+
 	public StringPrinter createStringPrinter();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/StringStringReturnerFactory.java
Patch:
@@ -5,5 +5,5 @@
 public interface StringStringReturnerFactory {
 
 	public StringStringReturner createStringStringReturner();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/parameters/FizzBuzzUpperLimitParameter.java
Patch:
@@ -3,5 +3,5 @@
 public interface FizzBuzzUpperLimitParameter {
 
 	public int obtainUpperLimitValue();
-}
 
+}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/printers/DataPrinter.java
Patch:
@@ -1,7 +1,8 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers;
 
 public interface DataPrinter {
+
 	public void print();
 	public void printValue(Object value);
-}
 
+}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/FizzBuzzOutputStrategy.java
Patch:
@@ -3,7 +3,7 @@
 import java.io.IOException;
 
 public interface FizzBuzzOutputStrategy {
-	
+
 	public void output(String output) throws IOException;
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/IsEvenlyDivisibleStrategy.java
Patch:
@@ -1,7 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies;
 
 public interface IsEvenlyDivisibleStrategy {
-	
+
 	public boolean isEvenlyDivisible(int theInteger);
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/OutputGenerationStrategy.java
Patch:
@@ -1,5 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies;
 
 public interface OutputGenerationStrategy {
+
 	void performGenerationForCurrentStep(SingleStepOutputGenerationParameter generationParameter);
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/stringreturners/IntegerStringReturner.java
Patch:
@@ -1,7 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners;
 
 public interface IntegerStringReturner {
-	
+
 	public String getIntegerReturnString(int theInteger);
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/stringreturners/StringStringReturner.java
Patch:
@@ -1,7 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners;
 
 public interface StringStringReturner {
-	
+
 	public String getReturnString();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/visitors/OutputGenerationContext.java
Patch:
@@ -4,7 +4,8 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 
 public interface OutputGenerationContext {
+
 	public IsEvenlyDivisibleStrategy getStrategy();
 	public DataPrinter getPrinter();
-}
 
+}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/visitors/OutputGenerationContextVisitor.java
Patch:
@@ -1,6 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.visitors;
 
 public interface OutputGenerationContextVisitor {
+
 	public void visit(OutputGenerationContext context, int nGenerationParameter);
-}
 
+}

File: src/test/java/FizzBuzzTest.java
Patch:
@@ -64,4 +64,5 @@ public void testFizzBuzz() throws IOException {
 		this.doFizzBuzz(TestConstants.INT_16,
 				TestConstants._1_2_FIZZ_4_BUZZ_FIZZ_7_8_FIZZ_BUZZ_11_FIZZ_13_14_FIZZ_BUZZ_16);
 	}
+
 }

File: src/test/java/TestConstants.java
Patch:
@@ -38,4 +38,5 @@ private TestConstants() {
 	static final int INT_14 = 14;
 	static final int INT_15 = 15;
 	static final int INT_16 = 16;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/ApplicationContextHolder.java
Patch:
@@ -21,4 +21,5 @@ public void setApplicationContext(final ApplicationContext applicationContext) t
 	public static ApplicationContext getApplicationContext() {
 		return ApplicationContextHolder.applicationContext;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Constants.java
Patch:
@@ -16,4 +16,5 @@ public class Constants {
 	public static final int INTEGER_ORIGIN_ZERO_VALUE = 0;
 	public static final int LOOP_INC_VALUE = 1;
 	public static final int LOOP_INIT_VALUE = 1;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -19,4 +19,5 @@ public static void main(final String[] args) {
 		((ConfigurableApplicationContext) context).close();
 
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/StandardFizzBuzz.java
Patch:
@@ -23,4 +23,5 @@ public void fizzBuzz(final int nFizzBuzzUpperLimit) {
 				this._fizzBuzzSolutionStrategyFactory.createFizzBuzzSolutionStrategy();
 		mySolutionStrategy.runSolution(nFizzBuzzUpperLimit);
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStringReturnerFactory.java
Patch:
@@ -22,4 +22,5 @@ public BuzzStringReturnerFactory(final BuzzStringReturner _myBuzzStringReturner)
 	public StringStringReturner createStringStringReturner() {
 		return this._myBuzzStringReturner;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/LoopComponentFactory.java
Patch:
@@ -42,4 +42,5 @@ public LoopFinalizer createLoopFinalizer(final int nLoopFinalValue) {
 	public LoopStep createLoopStep() {
 		return this._loopStep;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopCondition.java
Patch:
@@ -19,4 +19,5 @@ public boolean evaluateLoop(final int nCurrentNumber, final int nTotalCount) {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopFinalizer.java
Patch:
@@ -12,4 +12,5 @@ public LoopFinalizer(final int nLoopFinalValue) {
 	public int getLoopFinalizationPoint() {
 		return this.nStoredLoopFinalValue;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopInitializer.java
Patch:
@@ -10,4 +10,5 @@ public class LoopInitializer {
 	public int getLoopInitializationPoint() {
 		return Constants.LOOP_INIT_VALUE;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/IntegerDivider.java
Patch:
@@ -45,4 +45,5 @@ public int divide(final int nFirstInteger, final int nSecondInteger) {
 			return nIntegerQuotient;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/NumberIsMultipleOfAnotherNumberVerifier.java
Patch:
@@ -34,4 +34,5 @@ public static boolean numberIsMultipleOfAnotherNumber(final int nFirstNumber, fi
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzPrinter.java
Patch:
@@ -26,4 +26,5 @@ public void printBuzz() {
 
 		myOutputAdapter.output(myBuzzStringReturner.getReturnString());
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzStringPrinter.java
Patch:
@@ -38,4 +38,5 @@ public void print() {
 	public void printValue(final Object value) {
 		this.print();
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/BuzzStrategy.java
Patch:
@@ -17,4 +17,5 @@ public boolean isEvenlyDivisible(final int theInteger) {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/EnterpriseGradeFizzBuzzSolutionStrategy.java
Patch:
@@ -25,4 +25,5 @@ public void runSolution(final int nFizzBuzzUpperLimit) {
 		final LoopRunner loopRunner = new LoopRunner(loopContext, loopContext, this._loopPayloadExecution);
 		loopRunner.runLoop();
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/FizzStrategy.java
Patch:
@@ -17,4 +17,5 @@ public boolean isEvenlyDivisible(final int theInteger) {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/SingleStepOutputGenerationStrategy.java
Patch:
@@ -55,4 +55,5 @@ public void performGenerationForCurrentStep(final SingleStepOutputGenerationPara
 		}
 		this.myNewLinePrinter.print();
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter.java
Patch:
@@ -6,7 +6,7 @@
 public final class FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter implements FizzBuzzExceptionSafeOutputStrategy {
 
 	private  final FizzBuzzOutputStrategy _fizzBuzzOutputStrategy;
-	
+
 	public FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter(final FizzBuzzOutputStrategy fizzBuzzOutputStrategy) {
 		super();
 		this._fizzBuzzOutputStrategy = fizzBuzzOutputStrategy;
@@ -22,4 +22,5 @@ public void output(final String outputStringToOutput) {
 			// We're the enterprise...we don't get throwables either!
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/LoopContextStateRetrievalToSingleStepOutputGenerationAdapter.java
Patch:
@@ -6,7 +6,7 @@
 public final class LoopContextStateRetrievalToSingleStepOutputGenerationAdapter implements SingleStepOutputGenerationParameter {
 
 	private final LoopContextStateRetrieval _retrievalObjectToAdapt;
-	
+
 	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(final LoopContextStateRetrieval retrievalObjectToAdapt) {
 		super();
 		this._retrievalObjectToAdapt = retrievalObjectToAdapt;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/doublecomparator/FirstIsLargerThanSecondDoubleComparator.java
Patch:
@@ -4,11 +4,13 @@
 
 @Service
 public class FirstIsLargerThanSecondDoubleComparator {
+
 	public  boolean FirstIsLargerThanSecond(final double dbFirstDoubleToCompare, final double dbSecondDoubleToCompare) {
 		if (dbFirstDoubleToCompare > dbSecondDoubleToCompare) {
 			return true;
 		} else {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/doublecomparator/FirstIsSmallerThanSecondDoubleComparator.java
Patch:
@@ -4,11 +4,13 @@
 
 @Service
 public class FirstIsSmallerThanSecondDoubleComparator {
+
 	public  boolean FirstIsSmallerThanSecond(final double dbFirstDoubleToCompare, final double dbSecondDoubleToCompare) {
 		if (dbFirstDoubleToCompare < dbSecondDoubleToCompare) {
 			return true;
 		} else {
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/IntegerForEqualityComparator.java
Patch:
@@ -16,4 +16,5 @@ public static boolean areTwoIntegersEqual(final int nFirstInteger, final int nSe
 			return false;
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/ThreeWayIntegerComparator.java
Patch:
@@ -21,4 +21,5 @@ public static ThreeWayIntegerComparisonResult Compare(final int nFirstInteger, f
 			throw new UnsupportedOperationException(Constants.THE_INTEGERS_COULD_NOT_BE_COMPARED);
 		}
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/BuzzStrategyConstants.java
Patch:
@@ -3,9 +3,10 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public final class BuzzStrategyConstants
-{
+public final class BuzzStrategyConstants {
+
 	private BuzzStrategyConstants() {}
 
 	public static final int BUZZ_INTEGER_CONSTANT_VALUE = 5;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/FizzStrategyConstants.java
Patch:
@@ -3,9 +3,10 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public final class FizzStrategyConstants
-{
+public final class FizzStrategyConstants {
+
 	private FizzStrategyConstants() {}
 
 	public static final int FIZZ_INTEGER_CONSTANT_VALUE = 3;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/NoFizzNoBuzzStrategyConstants.java
Patch:
@@ -3,10 +3,11 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public final class NoFizzNoBuzzStrategyConstants
-{
+public final class NoFizzNoBuzzStrategyConstants {
+
 	private NoFizzNoBuzzStrategyConstants() {}
 
 	public static final int NO_BUZZ_INTEGER_CONSTANT_VALUE = BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE;
 	public static final int NO_FIZZ_INTEGER_CONSTANT_VALUE = FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/converters/primitivetypesconverters/DoubleToIntConverter.java
Patch:
@@ -11,4 +11,5 @@ public static int Convert(final double dbDoubleToConvert) {
 		final int nConversionResult = (int) dbDoubleToConvert;
 		return nConversionResult;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/converters/primitivetypesconverters/IntToDoubleConverter.java
Patch:
@@ -11,4 +11,5 @@ public static double Convert(final int nIntegerToConvert) {
 		final double dbConversionResult = (double) nIntegerToConvert;
 		return dbConversionResult;
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/BuzzStringReturner.java
Patch:
@@ -13,5 +13,5 @@ public String getReturnString() {
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/NewLineStringReturner.java
Patch:
@@ -14,4 +14,5 @@ public String getReturnString() {
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/FizzBuzz.java
Patch:
@@ -1,5 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces;
 
 public interface FizzBuzz {
+
 	void fizzBuzz(int nFizzBuzzUpperLimit);
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/FizzBuzzOutputStrategyFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzOutputStrategy;
 
 public interface FizzBuzzOutputStrategyFactory {
-	
+
 	public FizzBuzzOutputStrategy createOutputStrategy();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IntegerPrinterFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.IntegerPrinter;
 
 public interface IntegerPrinterFactory {
-	
+
 	public IntegerPrinter createPrinter();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IntegerStringReturnerFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
 
 public interface IntegerStringReturnerFactory {
-	
+
 	public IntegerStringReturner createIntegerStringReturner();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/IsEvenlyDivisibleStrategyFactory.java
Patch:
@@ -3,6 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 
 public interface IsEvenlyDivisibleStrategyFactory {
-	
+
 	public IsEvenlyDivisibleStrategy createIsEvenlyDivisibleStrategy();
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/OutputGenerationContextVisitorFactory.java
Patch:
@@ -3,5 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.visitors.OutputGenerationContextVisitor;
 
 public interface OutputGenerationContextVisitorFactory {
+
 	public OutputGenerationContextVisitor createVisitor();
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/StringPrinterFactory.java
Patch:
@@ -3,7 +3,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 
 public interface StringPrinterFactory {
-	
+
 	public StringPrinter createStringPrinter();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/factories/StringStringReturnerFactory.java
Patch:
@@ -5,5 +5,5 @@
 public interface StringStringReturnerFactory {
 
 	public StringStringReturner createStringStringReturner();
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/parameters/FizzBuzzUpperLimitParameter.java
Patch:
@@ -3,5 +3,5 @@
 public interface FizzBuzzUpperLimitParameter {
 
 	public int obtainUpperLimitValue();
-}
 
+}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/printers/DataPrinter.java
Patch:
@@ -1,7 +1,8 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers;
 
 public interface DataPrinter {
+
 	public void print();
 	public void printValue(Object value);
-}
 
+}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/FizzBuzzOutputStrategy.java
Patch:
@@ -3,7 +3,7 @@
 import java.io.IOException;
 
 public interface FizzBuzzOutputStrategy {
-	
+
 	public void output(String output) throws IOException;
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/IsEvenlyDivisibleStrategy.java
Patch:
@@ -1,7 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies;
 
 public interface IsEvenlyDivisibleStrategy {
-	
+
 	public boolean isEvenlyDivisible(int theInteger);
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/OutputGenerationStrategy.java
Patch:
@@ -1,5 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies;
 
 public interface OutputGenerationStrategy {
+
 	void performGenerationForCurrentStep(SingleStepOutputGenerationParameter generationParameter);
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/stringreturners/IntegerStringReturner.java
Patch:
@@ -1,7 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners;
 
 public interface IntegerStringReturner {
-	
+
 	public String getIntegerReturnString(int theInteger);
-	
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/stringreturners/StringStringReturner.java
Patch:
@@ -1,7 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners;
 
 public interface StringStringReturner {
-	
+
 	public String getReturnString();
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/visitors/OutputGenerationContext.java
Patch:
@@ -4,7 +4,8 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 
 public interface OutputGenerationContext {
+
 	public IsEvenlyDivisibleStrategy getStrategy();
 	public DataPrinter getPrinter();
-}
 
+}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/visitors/OutputGenerationContextVisitor.java
Patch:
@@ -1,6 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.visitors;
 
 public interface OutputGenerationContextVisitor {
+
 	public void visit(OutputGenerationContext context, int nGenerationParameter);
-}
 
+}

File: src/test/java/FizzBuzzTest.java
Patch:
@@ -64,4 +64,5 @@ public void testFizzBuzz() throws IOException {
 		this.doFizzBuzz(TestConstants.INT_16,
 				TestConstants._1_2_FIZZ_4_BUZZ_FIZZ_7_8_FIZZ_BUZZ_11_FIZZ_13_14_FIZZ_BUZZ_16);
 	}
+
 }

File: src/test/java/TestConstants.java
Patch:
@@ -38,4 +38,5 @@ private TestConstants() {
 	static final int INT_14 = 14;
 	static final int INT_15 = 15;
 	static final int INT_16 = 16;
+
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/IntegerForEqualityComparator.java
Patch:
@@ -3,7 +3,9 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public class IntegerForEqualityComparator {
+public final class IntegerForEqualityComparator {
+
+	private IntegerForEqualityComparator() {}
 
 	public static boolean areTwoIntegersEqual(final int nFirstInteger, final int nSecondInteger) {
 		final ThreeWayIntegerComparisonResult comparisonResult =

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/ThreeWayIntegerComparator.java
Patch:
@@ -5,7 +5,9 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
 
 @Service
-public class ThreeWayIntegerComparator {
+public final class ThreeWayIntegerComparator {
+
+	private ThreeWayIntegerComparator() {}
 
 	public static ThreeWayIntegerComparisonResult Compare(final int nFirstInteger, final int nSecondInteger) {
 		if (nFirstInteger == nSecondInteger) {

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/BuzzStrategyConstants.java
Patch:
@@ -3,7 +3,9 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public class BuzzStrategyConstants
+public final class BuzzStrategyConstants
 {
+	private BuzzStrategyConstants() {}
+
 	public static final int BUZZ_INTEGER_CONSTANT_VALUE = 5;
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/FizzStrategyConstants.java
Patch:
@@ -3,7 +3,9 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public class FizzStrategyConstants
+public final class FizzStrategyConstants
 {
+	private FizzStrategyConstants() {}
+
 	public static final int FIZZ_INTEGER_CONSTANT_VALUE = 3;
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/NoFizzNoBuzzStrategyConstants.java
Patch:
@@ -3,8 +3,10 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public class NoFizzNoBuzzStrategyConstants
+public final class NoFizzNoBuzzStrategyConstants
 {
+	private NoFizzNoBuzzStrategyConstants() {}
+
 	public static final int NO_BUZZ_INTEGER_CONSTANT_VALUE = BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE;
 	public static final int NO_FIZZ_INTEGER_CONSTANT_VALUE = FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE;
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/converters/primitivetypesconverters/IntToDoubleConverter.java
Patch:
@@ -3,7 +3,9 @@
 import org.springframework.stereotype.Service;
 
 @Service
-public class IntToDoubleConverter {
+public final class IntToDoubleConverter {
+
+	private IntToDoubleConverter() {}
 
 	public static double Convert(final int nIntegerToConvert) {
 		final double dbConversionResult = (double) nIntegerToConvert;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/ApplicationContextHolder.java
Patch:
@@ -1,7 +1,8 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl;
 
 import org.springframework.beans.BeansException;
-import org.springframework.context.*;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.ApplicationContextAware;
 import org.springframework.stereotype.Service;
 
 @Service
@@ -10,6 +11,7 @@ public class ApplicationContextHolder implements ApplicationContextAware {
 	private static ApplicationContext applicationContext;
 
 	private ApplicationContextHolder() {
+		super();
 	}
 
 	public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -4,15 +4,15 @@
 import org.springframework.context.ConfigurableApplicationContext;
 import org.springframework.context.support.ClassPathXmlApplicationContext;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.parameters.DefaultFizzBuzzUpperLimitParameter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.FizzBuzz;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.parameters.FizzBuzzUpperLimitParameter;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.parameters.DefaultFizzBuzzUpperLimitParameter;
 
 public final class Main {
 
 	public static void main(final String[] args) {
-		final ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
-		final FizzBuzz myFizzBuzz = (FizzBuzz) context.getBean("standardFizzBuzz");
+		final ApplicationContext context = new ClassPathXmlApplicationContext(Constants.SPRING_XML);
+		final FizzBuzz myFizzBuzz = (FizzBuzz) context.getBean(Constants.STANDARD_FIZZ_BUZZ);
 		final FizzBuzzUpperLimitParameter fizzBuzzUpperLimit = new DefaultFizzBuzzUpperLimitParameter();
 		myFizzBuzz.fizzBuzz(fizzBuzzUpperLimit.obtainUpperLimitValue());
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/StandardFizzBuzz.java
Patch:
@@ -14,6 +14,7 @@ public class StandardFizzBuzz implements FizzBuzz {
 
 	@Autowired
 	public StandardFizzBuzz(final FizzBuzzSolutionStrategyFactory _fizzBuzzSolutionStrategyFactory) {
+		super();
 		this._fizzBuzzSolutionStrategyFactory = _fizzBuzzSolutionStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStrategyFactory.java
Patch:
@@ -14,6 +14,7 @@ public class BuzzStrategyFactory implements IsEvenlyDivisibleStrategyFactory {
 
 	@Autowired
 	public BuzzStrategyFactory(final BuzzStrategy _buzzStrategy) {
+		super();
 		this._buzzStrategy = _buzzStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStringPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class BuzzStringPrinterFactory implements StringPrinterFactory {
 
 	@Autowired
 	public BuzzStringPrinterFactory(final BuzzStringPrinter _buzzStringPrinter) {
+		super();
 		this._buzzStringPrinter = _buzzStringPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStringReturnerFactory.java
Patch:
@@ -14,6 +14,7 @@ public class BuzzStringReturnerFactory implements StringStringReturnerFactory {
 
 	@Autowired
 	public BuzzStringReturnerFactory(final BuzzStringReturner _myBuzzStringReturner) {
+		super();
 		this._myBuzzStringReturner = _myBuzzStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/EnterpriseGradeFizzBuzzSolutionStrategyFactory.java
Patch:
@@ -13,6 +13,7 @@ public class EnterpriseGradeFizzBuzzSolutionStrategyFactory implements FizzBuzzS
 
 	@Autowired
 	public EnterpriseGradeFizzBuzzSolutionStrategyFactory(final FizzBuzzSolutionStrategy _fizzBuzzSolutionStrategy) {
+		super();
 		this._fizzBuzzSolutionStrategy = _fizzBuzzSolutionStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzBuzzOutputGenerationContextVisitorFactory.java
Patch:
@@ -16,6 +16,7 @@ public class FizzBuzzOutputGenerationContextVisitorFactory implements
 	@Autowired
 	public FizzBuzzOutputGenerationContextVisitorFactory(
 			final FizzBuzzOutputGenerationContextVisitor _fizzBuzzOutputGenerationContextVisitor) {
+		super();
 		this._fizzBuzzOutputGenerationContextVisitor = _fizzBuzzOutputGenerationContextVisitor;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStrategyFactory.java
Patch:
@@ -14,8 +14,9 @@ public class FizzStrategyFactory implements IsEvenlyDivisibleStrategyFactory {
 
     @Autowired
     public FizzStrategyFactory(final FizzStrategy _fizzStrategy) {
-        this._fizzStrategy = _fizzStrategy;
-    }
+		super();
+		this._fizzStrategy = _fizzStrategy;
+	}
 
     @Override
 	public IsEvenlyDivisibleStrategy createIsEvenlyDivisibleStrategy() {

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStringPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class FizzStringPrinterFactory implements StringPrinterFactory {
 
 	@Autowired
 	public FizzStringPrinterFactory(final FizzStringPrinter _fizzStringPrinter) {
+		super();
 		this._fizzStringPrinter = _fizzStringPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStringReturnerFactory.java
Patch:
@@ -14,6 +14,7 @@ public class FizzStringReturnerFactory implements StringStringReturnerFactory {
 
 	@Autowired
 	public FizzStringReturnerFactory(final FizzStringReturner _fizzStringReturner) {
+		super();
 		this._fizzStringReturner = _fizzStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/IntegerIntegerPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class IntegerIntegerPrinterFactory implements IntegerPrinterFactory {
 
 	@Autowired
 	public IntegerIntegerPrinterFactory(final IntegerIntegerPrinter _integerIntegerPrinter) {
+		super();
 		this._integerIntegerPrinter = _integerIntegerPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/IntegerIntegerStringReturnerFactory.java
Patch:
@@ -15,6 +15,7 @@ public class IntegerIntegerStringReturnerFactory implements
 
 	@Autowired
 	public IntegerIntegerStringReturnerFactory(final IntegerIntegerStringReturner _integerIntegerStringReturner) {
+		super();
 		this._integerIntegerStringReturner = _integerIntegerStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/LoopComponentFactory.java
Patch:
@@ -20,6 +20,7 @@ public class LoopComponentFactory {
 	@Autowired
 	public LoopComponentFactory(final LoopCondition _loopCondition, final LoopInitializer _loopInitializer,
 			final LoopStep _loopStep) {
+		super();
 		this._loopCondition = _loopCondition;
 		this._loopInitializer = _loopInitializer;
 		this._loopStep = _loopStep;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/NewLineStringPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class NewLineStringPrinterFactory implements StringPrinterFactory {
 
 	@Autowired
 	public NewLineStringPrinterFactory(final NewLineStringPrinter _newLineStringPrinter) {
+		super();
 		this._newLineStringPrinter = _newLineStringPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/NewLineStringReturnerFactory.java
Patch:
@@ -15,6 +15,7 @@ public class NewLineStringReturnerFactory implements
 
 	@Autowired
 	public NewLineStringReturnerFactory(final NewLineStringReturner _newlineStringReturner) {
+		super();
 		this._newlineStringReturner = _newlineStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/NoFizzNoBuzzStrategyFactory.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.NoFizzNoBuzzStrategy;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.factories.IsEvenlyDivisibleStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 
 @Service
 public class NoFizzNoBuzzStrategyFactory implements
@@ -15,6 +15,7 @@ public class NoFizzNoBuzzStrategyFactory implements
 
 	@Autowired
 	public NoFizzNoBuzzStrategyFactory(final NoFizzNoBuzzStrategy _noFizzNoBuzzStrategy) {
+		super();
 		this._noFizzNoBuzzStrategy = _noFizzNoBuzzStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/SystemOutFizzBuzzOutputStrategyFactory.java
Patch:
@@ -15,6 +15,7 @@ public class SystemOutFizzBuzzOutputStrategyFactory implements
 
 	@Autowired
 	public SystemOutFizzBuzzOutputStrategyFactory(final SystemOutFizzBuzzOutputStrategy _systemOutFizzBuzzOutputStrategy) {
+		super();
 		this._systemOutFizzBuzzOutputStrategy = _systemOutFizzBuzzOutputStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopCondition.java
Patch:
@@ -2,18 +2,18 @@
 
 import org.springframework.stereotype.Service;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparisonResult;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparator;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparisonResult;
 
 @Service
 public class LoopCondition {
 
 	public boolean evaluateLoop(final int nCurrentNumber, final int nTotalCount) {
 		final ThreeWayIntegerComparisonResult comparisonResult = ThreeWayIntegerComparator.Compare(nCurrentNumber,
 				nTotalCount);
-		if (comparisonResult == ThreeWayIntegerComparisonResult.FirstIsLessThanSecond) {
+		if (ThreeWayIntegerComparisonResult.FirstIsLessThanSecond == comparisonResult) {
 			return true;
-		} else if (comparisonResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {
+		} else if (ThreeWayIntegerComparisonResult.FirstEqualsSecond == comparisonResult) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopFinalizer.java
Patch:
@@ -5,6 +5,7 @@ public final class LoopFinalizer {
 	private final int nStoredLoopFinalValue;
 
 	public LoopFinalizer(final int nLoopFinalValue) {
+		super();
 		this.nStoredLoopFinalValue = nLoopFinalValue;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopInitializer.java
Patch:
@@ -2,12 +2,12 @@
 
 import org.springframework.stereotype.Service;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
+
 @Service
 public class LoopInitializer {
 
-	private static final int LOOP_INIT_VALUE = 1;
-
 	public int getLoopInitializationPoint() {
-		return LoopInitializer.LOOP_INIT_VALUE;
+		return Constants.LOOP_INIT_VALUE;
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopRunner.java
Patch:
@@ -12,6 +12,7 @@ public final class LoopRunner {
 
 	public LoopRunner(final LoopContextStateManipulation stateManipulation,
 			final LoopContextStateRetrieval stateRetrieval, final LoopPayloadExecution payload) {
+		super();
 		this.myStateManipulation = stateManipulation;
 		this.myStateRetrieval = stateRetrieval;
 		this.myPayload = payload;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopStep.java
Patch:
@@ -2,13 +2,13 @@
 
 import org.springframework.stereotype.Service;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
+
 @Service
 public class LoopStep {
 
-	private static final int LOOP_INC_VALUE = 1;
-
 	public int stepLoop(final int nCurrentNumber) {
-		return nCurrentNumber + LoopStep.LOOP_INC_VALUE;
+		return nCurrentNumber + Constants.LOOP_INC_VALUE;
 	}
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzPrinter.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.BuzzStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.BuzzStringReturner;
 
 @Service
 public class BuzzPrinter {
@@ -14,6 +14,7 @@ public class BuzzPrinter {
 
 	@Autowired
 	public BuzzPrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzStringPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.BuzzStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.StringStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class BuzzStringPrinter implements StringPrinter {
@@ -19,6 +19,7 @@ public class BuzzStringPrinter implements StringPrinter {
 	@Autowired
 	public BuzzStringPrinter(final BuzzStringReturnerFactory _buzzStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _outputStrategyFactory) {
+		super();
 		this._buzzStringReturnerFactory = _buzzStringReturnerFactory;
 		this._outputStrategyFactory = _outputStrategyFactory;
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/FizzPrinter.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.FizzStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.FizzStringReturner;
 
 @Service
 public class FizzPrinter {
@@ -14,6 +14,7 @@ public class FizzPrinter {
 
 	@Autowired
 	public FizzPrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/FizzStringPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.FizzStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.StringStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class FizzStringPrinter implements StringPrinter {
@@ -19,6 +19,7 @@ public class FizzStringPrinter implements StringPrinter {
 	@Autowired
 	public FizzStringPrinter(final FizzStringReturnerFactory _fizzStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._fizzStringReturnerFactory = _fizzStringReturnerFactory;
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntegerIntegerPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.IntegerIntegerStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.IntegerPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class IntegerIntegerPrinter implements IntegerPrinter {
@@ -19,6 +19,7 @@ public class IntegerIntegerPrinter implements IntegerPrinter {
 	@Autowired
 	public IntegerIntegerPrinter(final IntegerIntegerStringReturnerFactory _integerIntegerStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._integerIntegerStringReturnerFactory = _integerIntegerStringReturnerFactory;
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
@@ -37,7 +38,7 @@ public void printInteger(final int theInteger) {
 	@Override
 	public void print() {
 		throw new UnsupportedOperationException(
-				"com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.printers.IntegerIntegerPrinter.print()");
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.COM_SERIOUSCOMPANY_BUSINESS_JAVA_FIZZBUZZ_PACKAGENAMINGPACKAGE_IMPL_PRINTERS_INTEGER_INTEGER_PRINTER_PRINT);
 	}
 
 	@Override

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntegerPrinter.java
Patch:
@@ -4,9 +4,9 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.IntegerIntegerStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class IntegerPrinter {
@@ -15,6 +15,7 @@ public class IntegerPrinter {
 
 	@Autowired
 	public IntegerPrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/NewLinePrinter.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.NewLineStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.NewLineStringReturner;
 
 @Service
 public class NewLinePrinter {
@@ -14,6 +14,7 @@ public class NewLinePrinter {
 
 	@Autowired
 	public NewLinePrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/NewLineStringPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.NewLineStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.StringStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class NewLineStringPrinter implements StringPrinter {
@@ -19,6 +19,7 @@ public class NewLineStringPrinter implements StringPrinter {
 	@Autowired
 	public NewLineStringPrinter(final NewLineStringReturnerFactory _newLineStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._newLineStringReturnerFactory = _newLineStringReturnerFactory;
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/EnterpriseGradeFizzBuzzSolutionStrategy.java
Patch:
@@ -3,10 +3,10 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzSolutionStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopContext;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopRunner;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzSolutionStrategy;
 
 @Service
 public class EnterpriseGradeFizzBuzzSolutionStrategy implements FizzBuzzSolutionStrategy {
@@ -15,6 +15,7 @@ public class EnterpriseGradeFizzBuzzSolutionStrategy implements FizzBuzzSolution
 
 	@Autowired
 	public EnterpriseGradeFizzBuzzSolutionStrategy(final LoopPayloadExecution _loopPayloadExecution) {
+		super();
 		this._loopPayloadExecution = _loopPayloadExecution;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/SingleStepPayload.java
Patch:
@@ -3,10 +3,10 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.LoopContextStateRetrievalToSingleStepOutputGenerationAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopContextStateRetrieval;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.OutputGenerationStrategy;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.LoopContextStateRetrievalToSingleStepOutputGenerationAdapter;
 
 @Service
 public class SingleStepPayload implements LoopPayloadExecution {
@@ -15,6 +15,7 @@ public class SingleStepPayload implements LoopPayloadExecution {
 
 	@Autowired
 	public SingleStepPayload(final OutputGenerationStrategy _outputGenerationStrategy) {
+		super();
 		this._outputGenerationStrategy = _outputGenerationStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter.java
Patch:
@@ -1,13 +1,14 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzOutputStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzExceptionSafeOutputStrategy;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzOutputStrategy;
 
 public final class FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter implements FizzBuzzExceptionSafeOutputStrategy {
 
 	private  final FizzBuzzOutputStrategy _fizzBuzzOutputStrategy;
 	
 	public FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter(final FizzBuzzOutputStrategy fizzBuzzOutputStrategy) {
+		super();
 		this._fizzBuzzOutputStrategy = fizzBuzzOutputStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/LoopContextStateRetrievalToSingleStepOutputGenerationAdapter.java
Patch:
@@ -8,8 +8,9 @@ public final class LoopContextStateRetrievalToSingleStepOutputGenerationAdapter
 	private final LoopContextStateRetrieval _retrievalObjectToAdapt;
 	
 	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(final LoopContextStateRetrieval retrievalObjectToAdapt) {
+		super();
 		this._retrievalObjectToAdapt = retrievalObjectToAdapt;
-		
+
 	}
 
 	@Override

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/IntegerForEqualityComparator.java
Patch:
@@ -8,7 +8,7 @@ public class IntegerForEqualityComparator {
 	public static boolean areTwoIntegersEqual(final int nFirstInteger, final int nSecondInteger) {
 		final ThreeWayIntegerComparisonResult comparisonResult =
 				ThreeWayIntegerComparator.Compare(nFirstInteger, nSecondInteger);
-		if (comparisonResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {
+		if (ThreeWayIntegerComparisonResult.FirstEqualsSecond == comparisonResult) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/ThreeWayIntegerComparator.java
Patch:
@@ -2,6 +2,8 @@
 
 import org.springframework.stereotype.Service;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
+
 @Service
 public class ThreeWayIntegerComparator {
 
@@ -14,7 +16,7 @@ public static ThreeWayIntegerComparisonResult Compare(final int nFirstInteger, f
 			return ThreeWayIntegerComparisonResult.FirstIsGreaterThanSecond;
 		} else {
 			// If the integers cannot be compared, then something is seriously wrong with the numbers.
-			throw new UnsupportedOperationException("The integers could not be compared.");
+			throw new UnsupportedOperationException(Constants.THE_INTEGERS_COULD_NOT_BE_COMPARED);
 		}
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/BuzzStringReturner.java
Patch:
@@ -8,7 +8,8 @@
 public class BuzzStringReturner implements StringStringReturner {
 
 	public String getReturnString() {
-		final StringBuilder myStringBuilder = new StringBuilder("Buzz");
+		final StringBuilder myStringBuilder = new StringBuilder(
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.BUZZ);
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/FizzStringReturner.java
Patch:
@@ -8,7 +8,8 @@
 public class FizzStringReturner implements StringStringReturner {
 
 	public String getReturnString() {
-		final StringBuilder myStringBuilder = new StringBuilder("Fizz");
+		final StringBuilder myStringBuilder = new StringBuilder(
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.FIZZ);
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/NewLineStringReturner.java
Patch:
@@ -6,9 +6,10 @@
 
 @Service
 public class NewLineStringReturner implements StringStringReturner {
-	
+
 	public String getReturnString() {
-		final String systemDefaultNewLineString = System.getProperty("line.separator");
+		final String systemDefaultNewLineString = System.getProperty(
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.LINE_SEPARATOR);
 		final StringBuilder myStringBuilder = new StringBuilder(systemDefaultNewLineString);
 		final String myString = myStringBuilder.toString();
 		return new String(myString);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/ApplicationContextHolder.java
Patch:
@@ -1,7 +1,8 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl;
 
 import org.springframework.beans.BeansException;
-import org.springframework.context.*;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.ApplicationContextAware;
 import org.springframework.stereotype.Service;
 
 @Service
@@ -10,6 +11,7 @@ public class ApplicationContextHolder implements ApplicationContextAware {
 	private static ApplicationContext applicationContext;
 
 	private ApplicationContextHolder() {
+		super();
 	}
 
 	public void setApplicationContext(final ApplicationContext applicationContext) throws BeansException {

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -4,15 +4,15 @@
 import org.springframework.context.ConfigurableApplicationContext;
 import org.springframework.context.support.ClassPathXmlApplicationContext;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.parameters.DefaultFizzBuzzUpperLimitParameter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.FizzBuzz;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.parameters.FizzBuzzUpperLimitParameter;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.parameters.DefaultFizzBuzzUpperLimitParameter;
 
 public final class Main {
 
 	public static void main(final String[] args) {
-		final ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
-		final FizzBuzz myFizzBuzz = (FizzBuzz) context.getBean("standardFizzBuzz");
+		final ApplicationContext context = new ClassPathXmlApplicationContext(Constants.SPRING_XML);
+		final FizzBuzz myFizzBuzz = (FizzBuzz) context.getBean(Constants.STANDARD_FIZZ_BUZZ);
 		final FizzBuzzUpperLimitParameter fizzBuzzUpperLimit = new DefaultFizzBuzzUpperLimitParameter();
 		myFizzBuzz.fizzBuzz(fizzBuzzUpperLimit.obtainUpperLimitValue());
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/StandardFizzBuzz.java
Patch:
@@ -14,6 +14,7 @@ public class StandardFizzBuzz implements FizzBuzz {
 
 	@Autowired
 	public StandardFizzBuzz(final FizzBuzzSolutionStrategyFactory _fizzBuzzSolutionStrategyFactory) {
+		super();
 		this._fizzBuzzSolutionStrategyFactory = _fizzBuzzSolutionStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStrategyFactory.java
Patch:
@@ -14,6 +14,7 @@ public class BuzzStrategyFactory implements IsEvenlyDivisibleStrategyFactory {
 
 	@Autowired
 	public BuzzStrategyFactory(final BuzzStrategy _buzzStrategy) {
+		super();
 		this._buzzStrategy = _buzzStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStringPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class BuzzStringPrinterFactory implements StringPrinterFactory {
 
 	@Autowired
 	public BuzzStringPrinterFactory(final BuzzStringPrinter _buzzStringPrinter) {
+		super();
 		this._buzzStringPrinter = _buzzStringPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/BuzzStringReturnerFactory.java
Patch:
@@ -14,6 +14,7 @@ public class BuzzStringReturnerFactory implements StringStringReturnerFactory {
 
 	@Autowired
 	public BuzzStringReturnerFactory(final BuzzStringReturner _myBuzzStringReturner) {
+		super();
 		this._myBuzzStringReturner = _myBuzzStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/EnterpriseGradeFizzBuzzSolutionStrategyFactory.java
Patch:
@@ -13,6 +13,7 @@ public class EnterpriseGradeFizzBuzzSolutionStrategyFactory implements FizzBuzzS
 
 	@Autowired
 	public EnterpriseGradeFizzBuzzSolutionStrategyFactory(final FizzBuzzSolutionStrategy _fizzBuzzSolutionStrategy) {
+		super();
 		this._fizzBuzzSolutionStrategy = _fizzBuzzSolutionStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzBuzzOutputGenerationContextVisitorFactory.java
Patch:
@@ -16,6 +16,7 @@ public class FizzBuzzOutputGenerationContextVisitorFactory implements
 	@Autowired
 	public FizzBuzzOutputGenerationContextVisitorFactory(
 			final FizzBuzzOutputGenerationContextVisitor _fizzBuzzOutputGenerationContextVisitor) {
+		super();
 		this._fizzBuzzOutputGenerationContextVisitor = _fizzBuzzOutputGenerationContextVisitor;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStrategyFactory.java
Patch:
@@ -14,8 +14,9 @@ public class FizzStrategyFactory implements IsEvenlyDivisibleStrategyFactory {
 
     @Autowired
     public FizzStrategyFactory(final FizzStrategy _fizzStrategy) {
-        this._fizzStrategy = _fizzStrategy;
-    }
+		super();
+		this._fizzStrategy = _fizzStrategy;
+	}
 
     @Override
 	public IsEvenlyDivisibleStrategy createIsEvenlyDivisibleStrategy() {

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStringPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class FizzStringPrinterFactory implements StringPrinterFactory {
 
 	@Autowired
 	public FizzStringPrinterFactory(final FizzStringPrinter _fizzStringPrinter) {
+		super();
 		this._fizzStringPrinter = _fizzStringPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStringReturnerFactory.java
Patch:
@@ -14,6 +14,7 @@ public class FizzStringReturnerFactory implements StringStringReturnerFactory {
 
 	@Autowired
 	public FizzStringReturnerFactory(final FizzStringReturner _fizzStringReturner) {
+		super();
 		this._fizzStringReturner = _fizzStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/IntegerIntegerPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class IntegerIntegerPrinterFactory implements IntegerPrinterFactory {
 
 	@Autowired
 	public IntegerIntegerPrinterFactory(final IntegerIntegerPrinter _integerIntegerPrinter) {
+		super();
 		this._integerIntegerPrinter = _integerIntegerPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/IntegerIntegerStringReturnerFactory.java
Patch:
@@ -15,6 +15,7 @@ public class IntegerIntegerStringReturnerFactory implements
 
 	@Autowired
 	public IntegerIntegerStringReturnerFactory(final IntegerIntegerStringReturner _integerIntegerStringReturner) {
+		super();
 		this._integerIntegerStringReturner = _integerIntegerStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/LoopComponentFactory.java
Patch:
@@ -20,6 +20,7 @@ public class LoopComponentFactory {
 	@Autowired
 	public LoopComponentFactory(final LoopCondition _loopCondition, final LoopInitializer _loopInitializer,
 			final LoopStep _loopStep) {
+		super();
 		this._loopCondition = _loopCondition;
 		this._loopInitializer = _loopInitializer;
 		this._loopStep = _loopStep;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/NewLineStringPrinterFactory.java
Patch:
@@ -14,6 +14,7 @@ public class NewLineStringPrinterFactory implements StringPrinterFactory {
 
 	@Autowired
 	public NewLineStringPrinterFactory(final NewLineStringPrinter _newLineStringPrinter) {
+		super();
 		this._newLineStringPrinter = _newLineStringPrinter;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/NewLineStringReturnerFactory.java
Patch:
@@ -15,6 +15,7 @@ public class NewLineStringReturnerFactory implements
 
 	@Autowired
 	public NewLineStringReturnerFactory(final NewLineStringReturner _newlineStringReturner) {
+		super();
 		this._newlineStringReturner = _newlineStringReturner;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/NoFizzNoBuzzStrategyFactory.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.NoFizzNoBuzzStrategy;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.factories.IsEvenlyDivisibleStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 
 @Service
 public class NoFizzNoBuzzStrategyFactory implements
@@ -15,6 +15,7 @@ public class NoFizzNoBuzzStrategyFactory implements
 
 	@Autowired
 	public NoFizzNoBuzzStrategyFactory(final NoFizzNoBuzzStrategy _noFizzNoBuzzStrategy) {
+		super();
 		this._noFizzNoBuzzStrategy = _noFizzNoBuzzStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/SystemOutFizzBuzzOutputStrategyFactory.java
Patch:
@@ -15,6 +15,7 @@ public class SystemOutFizzBuzzOutputStrategyFactory implements
 
 	@Autowired
 	public SystemOutFizzBuzzOutputStrategyFactory(final SystemOutFizzBuzzOutputStrategy _systemOutFizzBuzzOutputStrategy) {
+		super();
 		this._systemOutFizzBuzzOutputStrategy = _systemOutFizzBuzzOutputStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopCondition.java
Patch:
@@ -2,18 +2,18 @@
 
 import org.springframework.stereotype.Service;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparisonResult;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparator;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.comparators.integercomparator.ThreeWayIntegerComparisonResult;
 
 @Service
 public class LoopCondition {
 
 	public boolean evaluateLoop(final int nCurrentNumber, final int nTotalCount) {
 		final ThreeWayIntegerComparisonResult comparisonResult = ThreeWayIntegerComparator.Compare(nCurrentNumber,
 				nTotalCount);
-		if (comparisonResult == ThreeWayIntegerComparisonResult.FirstIsLessThanSecond) {
+		if (ThreeWayIntegerComparisonResult.FirstIsLessThanSecond == comparisonResult) {
 			return true;
-		} else if (comparisonResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {
+		} else if (ThreeWayIntegerComparisonResult.FirstEqualsSecond == comparisonResult) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopFinalizer.java
Patch:
@@ -5,6 +5,7 @@ public final class LoopFinalizer {
 	private final int nStoredLoopFinalValue;
 
 	public LoopFinalizer(final int nLoopFinalValue) {
+		super();
 		this.nStoredLoopFinalValue = nLoopFinalValue;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopInitializer.java
Patch:
@@ -2,12 +2,12 @@
 
 import org.springframework.stereotype.Service;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
+
 @Service
 public class LoopInitializer {
 
-	private static final int LOOP_INIT_VALUE = 1;
-
 	public int getLoopInitializationPoint() {
-		return LoopInitializer.LOOP_INIT_VALUE;
+		return Constants.LOOP_INIT_VALUE;
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopRunner.java
Patch:
@@ -12,6 +12,7 @@ public final class LoopRunner {
 
 	public LoopRunner(final LoopContextStateManipulation stateManipulation,
 			final LoopContextStateRetrieval stateRetrieval, final LoopPayloadExecution payload) {
+		super();
 		this.myStateManipulation = stateManipulation;
 		this.myStateRetrieval = stateRetrieval;
 		this.myPayload = payload;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopStep.java
Patch:
@@ -2,13 +2,13 @@
 
 import org.springframework.stereotype.Service;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
+
 @Service
 public class LoopStep {
 
-	private static final int LOOP_INC_VALUE = 1;
-
 	public int stepLoop(final int nCurrentNumber) {
-		return nCurrentNumber + LoopStep.LOOP_INC_VALUE;
+		return nCurrentNumber + Constants.LOOP_INC_VALUE;
 	}
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzPrinter.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.BuzzStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.BuzzStringReturner;
 
 @Service
 public class BuzzPrinter {
@@ -14,6 +14,7 @@ public class BuzzPrinter {
 
 	@Autowired
 	public BuzzPrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzStringPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.BuzzStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.StringStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class BuzzStringPrinter implements StringPrinter {
@@ -19,6 +19,7 @@ public class BuzzStringPrinter implements StringPrinter {
 	@Autowired
 	public BuzzStringPrinter(final BuzzStringReturnerFactory _buzzStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _outputStrategyFactory) {
+		super();
 		this._buzzStringReturnerFactory = _buzzStringReturnerFactory;
 		this._outputStrategyFactory = _outputStrategyFactory;
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/FizzPrinter.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.FizzStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.FizzStringReturner;
 
 @Service
 public class FizzPrinter {
@@ -14,6 +14,7 @@ public class FizzPrinter {
 
 	@Autowired
 	public FizzPrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/FizzStringPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.FizzStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.StringStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class FizzStringPrinter implements StringPrinter {
@@ -19,6 +19,7 @@ public class FizzStringPrinter implements StringPrinter {
 	@Autowired
 	public FizzStringPrinter(final FizzStringReturnerFactory _fizzStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._fizzStringReturnerFactory = _fizzStringReturnerFactory;
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntegerIntegerPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.IntegerIntegerStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.IntegerPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class IntegerIntegerPrinter implements IntegerPrinter {
@@ -19,6 +19,7 @@ public class IntegerIntegerPrinter implements IntegerPrinter {
 	@Autowired
 	public IntegerIntegerPrinter(final IntegerIntegerStringReturnerFactory _integerIntegerStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._integerIntegerStringReturnerFactory = _integerIntegerStringReturnerFactory;
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
@@ -37,7 +38,7 @@ public void printInteger(final int theInteger) {
 	@Override
 	public void print() {
 		throw new UnsupportedOperationException(
-				"com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.printers.IntegerIntegerPrinter.print()");
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.COM_SERIOUSCOMPANY_BUSINESS_JAVA_FIZZBUZZ_PACKAGENAMINGPACKAGE_IMPL_PRINTERS_INTEGER_INTEGER_PRINTER_PRINT);
 	}
 
 	@Override

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntegerPrinter.java
Patch:
@@ -4,9 +4,9 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.IntegerIntegerStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class IntegerPrinter {
@@ -15,6 +15,7 @@ public class IntegerPrinter {
 
 	@Autowired
 	public IntegerPrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/NewLinePrinter.java
Patch:
@@ -4,8 +4,8 @@
 import org.springframework.stereotype.Service;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.NewLineStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.NewLineStringReturner;
 
 @Service
 public class NewLinePrinter {
@@ -14,6 +14,7 @@ public class NewLinePrinter {
 
 	@Autowired
 	public NewLinePrinter(final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/NewLineStringPrinter.java
Patch:
@@ -5,9 +5,9 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.NewLineStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories.SystemOutFizzBuzzOutputStrategyFactory;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.StringStringReturner;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 @Service
 public class NewLineStringPrinter implements StringPrinter {
@@ -19,6 +19,7 @@ public class NewLineStringPrinter implements StringPrinter {
 	@Autowired
 	public NewLineStringPrinter(final NewLineStringReturnerFactory _newLineStringReturnerFactory,
 			final SystemOutFizzBuzzOutputStrategyFactory _systemOutFizzBuzzOutputStrategyFactory) {
+		super();
 		this._newLineStringReturnerFactory = _newLineStringReturnerFactory;
 		this._systemOutFizzBuzzOutputStrategyFactory = _systemOutFizzBuzzOutputStrategyFactory;
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/EnterpriseGradeFizzBuzzSolutionStrategy.java
Patch:
@@ -3,10 +3,10 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzSolutionStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopContext;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopRunner;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzSolutionStrategy;
 
 @Service
 public class EnterpriseGradeFizzBuzzSolutionStrategy implements FizzBuzzSolutionStrategy {
@@ -15,6 +15,7 @@ public class EnterpriseGradeFizzBuzzSolutionStrategy implements FizzBuzzSolution
 
 	@Autowired
 	public EnterpriseGradeFizzBuzzSolutionStrategy(final LoopPayloadExecution _loopPayloadExecution) {
+		super();
 		this._loopPayloadExecution = _loopPayloadExecution;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/SingleStepPayload.java
Patch:
@@ -3,10 +3,10 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.LoopContextStateRetrievalToSingleStepOutputGenerationAdapter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopContextStateRetrieval;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop.LoopPayloadExecution;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.OutputGenerationStrategy;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.LoopContextStateRetrievalToSingleStepOutputGenerationAdapter;
 
 @Service
 public class SingleStepPayload implements LoopPayloadExecution {
@@ -15,6 +15,7 @@ public class SingleStepPayload implements LoopPayloadExecution {
 
 	@Autowired
 	public SingleStepPayload(final OutputGenerationStrategy _outputGenerationStrategy) {
+		super();
 		this._outputGenerationStrategy = _outputGenerationStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter.java
Patch:
@@ -1,13 +1,14 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters;
 
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzOutputStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzExceptionSafeOutputStrategy;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.FizzBuzzOutputStrategy;
 
 public final class FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter implements FizzBuzzExceptionSafeOutputStrategy {
 
 	private  final FizzBuzzOutputStrategy _fizzBuzzOutputStrategy;
 	
 	public FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter(final FizzBuzzOutputStrategy fizzBuzzOutputStrategy) {
+		super();
 		this._fizzBuzzOutputStrategy = fizzBuzzOutputStrategy;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/LoopContextStateRetrievalToSingleStepOutputGenerationAdapter.java
Patch:
@@ -8,8 +8,9 @@ public final class LoopContextStateRetrievalToSingleStepOutputGenerationAdapter
 	private final LoopContextStateRetrieval _retrievalObjectToAdapt;
 	
 	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(final LoopContextStateRetrieval retrievalObjectToAdapt) {
+		super();
 		this._retrievalObjectToAdapt = retrievalObjectToAdapt;
-		
+
 	}
 
 	@Override

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/IntegerForEqualityComparator.java
Patch:
@@ -8,7 +8,7 @@ public class IntegerForEqualityComparator {
 	public static boolean areTwoIntegersEqual(final int nFirstInteger, final int nSecondInteger) {
 		final ThreeWayIntegerComparisonResult comparisonResult =
 				ThreeWayIntegerComparator.Compare(nFirstInteger, nSecondInteger);
-		if (comparisonResult == ThreeWayIntegerComparisonResult.FirstEqualsSecond) {
+		if (ThreeWayIntegerComparisonResult.FirstEqualsSecond == comparisonResult) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/ThreeWayIntegerComparator.java
Patch:
@@ -2,6 +2,8 @@
 
 import org.springframework.stereotype.Service;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants;
+
 @Service
 public class ThreeWayIntegerComparator {
 
@@ -14,7 +16,7 @@ public static ThreeWayIntegerComparisonResult Compare(final int nFirstInteger, f
 			return ThreeWayIntegerComparisonResult.FirstIsGreaterThanSecond;
 		} else {
 			// If the integers cannot be compared, then something is seriously wrong with the numbers.
-			throw new UnsupportedOperationException("The integers could not be compared.");
+			throw new UnsupportedOperationException(Constants.THE_INTEGERS_COULD_NOT_BE_COMPARED);
 		}
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/BuzzStringReturner.java
Patch:
@@ -8,7 +8,8 @@
 public class BuzzStringReturner implements StringStringReturner {
 
 	public String getReturnString() {
-		final StringBuilder myStringBuilder = new StringBuilder("Buzz");
+		final StringBuilder myStringBuilder = new StringBuilder(
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.BUZZ);
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/FizzStringReturner.java
Patch:
@@ -8,7 +8,8 @@
 public class FizzStringReturner implements StringStringReturner {
 
 	public String getReturnString() {
-		final StringBuilder myStringBuilder = new StringBuilder("Fizz");
+		final StringBuilder myStringBuilder = new StringBuilder(
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.FIZZ);
 		final String myString = myStringBuilder.toString();
 		return new String(myString);
 	}

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/NewLineStringReturner.java
Patch:
@@ -6,9 +6,10 @@
 
 @Service
 public class NewLineStringReturner implements StringStringReturner {
-	
+
 	public String getReturnString() {
-		final String systemDefaultNewLineString = System.getProperty("line.separator");
+		final String systemDefaultNewLineString = System.getProperty(
+				com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.Constants.LINE_SEPARATOR);
 		final StringBuilder myStringBuilder = new StringBuilder(systemDefaultNewLineString);
 		final String myString = myStringBuilder.toString();
 		return new String(myString);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -7,6 +7,6 @@ public class Main {
 	public static void main(String[] args) {
 		final FizzBuzz myFizzBuzz = new FizzBuzz();
 		final FizzBuzzUpperLimitParameter fizzBuzzUpperLimit = new DefaultFizzBuzzUpperLimitParameter();
-		myFizzBuzz.fizzBuzz(fizzBuzzUpperLimit.ObtainUpperLimitValue());
+		myFizzBuzz.fizzBuzz(fizzBuzzUpperLimit.obtainUpperLimitValue());
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/parameters/DefaultFizzBuzzUpperLimitParameter.java
Patch:
@@ -4,7 +4,7 @@
 
 public class DefaultFizzBuzzUpperLimitParameter implements FizzBuzzUpperLimitParameter {
 
-	public int ObtainUpperLimitValue() {
+	public int obtainUpperLimitValue() {
 		return DefaultFizzBuzzUpperLimitParameterValue;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/parameters/FizzBuzzUpperLimitParameter.java
Patch:
@@ -2,6 +2,6 @@
 
 public interface FizzBuzzUpperLimitParameter {
 
-	public int ObtainUpperLimitValue();
+	public int obtainUpperLimitValue();
 }
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/Main.java
Patch:
@@ -7,6 +7,6 @@ public class Main {
 	public static void main(String[] args) {
 		final FizzBuzz myFizzBuzz = new FizzBuzz();
 		final FizzBuzzUpperLimitParameter fizzBuzzUpperLimit = new DefaultFizzBuzzUpperLimitParameter();
-		myFizzBuzz.fizzBuzz(fizzBuzzUpperLimit.ObtainUpperLimitValue());
+		myFizzBuzz.fizzBuzz(fizzBuzzUpperLimit.obtainUpperLimitValue());
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/parameters/DefaultFizzBuzzUpperLimitParameter.java
Patch:
@@ -4,7 +4,7 @@
 
 public class DefaultFizzBuzzUpperLimitParameter implements FizzBuzzUpperLimitParameter {
 
-	public int ObtainUpperLimitValue() {
+	public int obtainUpperLimitValue() {
 		return DefaultFizzBuzzUpperLimitParameterValue;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/parameters/FizzBuzzUpperLimitParameter.java
Patch:
@@ -2,6 +2,6 @@
 
 public interface FizzBuzzUpperLimitParameter {
 
-	public int ObtainUpperLimitValue();
+	public int obtainUpperLimitValue();
 }
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntegerIntegerPrinter.java
Patch:
@@ -10,7 +10,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 public class IntegerIntegerPrinter implements IntegerPrinter {
-	
+
 	private final FizzBuzzOutputStrategy outputStrategy;
 
 	public IntegerIntegerPrinter() {
@@ -21,7 +21,7 @@ public IntegerIntegerPrinter() {
 	public void printInteger(int theInteger) {
 		final IntegerStringReturnerFactory myIntegerIntegerStringReturnerFactory = new IntegerIntegerStringReturnerFactory();
 		final IntegerStringReturner myIntegerStringReturner = myIntegerIntegerStringReturnerFactory.createIntegerStringReturner();
-		final String myIntegerString = myIntegerStringReturner.getIntegerReturnString(theInteger); 
+		final String myIntegerString = myIntegerStringReturner.getIntegerReturnString(theInteger);
 		final FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter myOutputAdapter =
 				new FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter(outputStrategy);
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/SingleStepOutputGenerationStrategy.java
Patch:
@@ -31,7 +31,7 @@ public class SingleStepOutputGenerationStrategy {
 
 	public SingleStepOutputGenerationStrategy() {
 		OutputGenerationContextVisitorFactory contextVisitorFactory = new FizzBuzzOutputGenerationContextVisitorFactory();
-		contextVisitor = contextVisitorFactory.createVisitor(); 
+		contextVisitor = contextVisitorFactory.createVisitor();
 		final IsEvenlyDivisibleStrategyFactory myFizzStrategyFactory = new FizzStrategyFactory();
 		final StringPrinterFactory myFizzStringPrinterFactory = new FizzStringPrinterFactory();
 		contexts.add(new FizzBuzzOutputGenerationContext(myFizzStrategyFactory.createIsEvenlyDivisibleStrategy(), myFizzStringPrinterFactory.createStringPrinter()));

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntegerIntegerPrinter.java
Patch:
@@ -10,7 +10,7 @@
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.adapters.FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter;
 
 public class IntegerIntegerPrinter implements IntegerPrinter {
-	
+
 	private final FizzBuzzOutputStrategy outputStrategy;
 
 	public IntegerIntegerPrinter() {
@@ -21,7 +21,7 @@ public IntegerIntegerPrinter() {
 	public void printInteger(int theInteger) {
 		final IntegerStringReturnerFactory myIntegerIntegerStringReturnerFactory = new IntegerIntegerStringReturnerFactory();
 		final IntegerStringReturner myIntegerStringReturner = myIntegerIntegerStringReturnerFactory.createIntegerStringReturner();
-		final String myIntegerString = myIntegerStringReturner.getIntegerReturnString(theInteger); 
+		final String myIntegerString = myIntegerStringReturner.getIntegerReturnString(theInteger);
 		final FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter myOutputAdapter =
 				new FizzBuzzOutputStrategyToFizzBuzzExceptionSafeOutputStrategyAdapter(outputStrategy);
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/SingleStepOutputGenerationStrategy.java
Patch:
@@ -31,7 +31,7 @@ public class SingleStepOutputGenerationStrategy {
 
 	public SingleStepOutputGenerationStrategy() {
 		OutputGenerationContextVisitorFactory contextVisitorFactory = new FizzBuzzOutputGenerationContextVisitorFactory();
-		contextVisitor = contextVisitorFactory.createVisitor(); 
+		contextVisitor = contextVisitorFactory.createVisitor();
 		final IsEvenlyDivisibleStrategyFactory myFizzStrategyFactory = new FizzStrategyFactory();
 		final StringPrinterFactory myFizzStringPrinterFactory = new FizzStringPrinterFactory();
 		contexts.add(new FizzBuzzOutputGenerationContext(myFizzStrategyFactory.createIsEvenlyDivisibleStrategy(), myFizzStringPrinterFactory.createStringPrinter()));

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/strategies/FizzBuzzOutputStrategy.java
Patch:
@@ -1,7 +1,9 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies;
 
+import java.io.IOException;
+
 public interface FizzBuzzOutputStrategy {
 	
-	public void output(String output);
+	public void output(String output) throws IOException;
 	
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/LoopContextStateRetrievalToSingleStepOutputGenerationAdapter.java
Patch:
@@ -7,7 +7,7 @@ public class LoopContextStateRetrievalToSingleStepOutputGenerationAdapter implem
 
 	private LoopContextStateRetrieval myRetrievalObjectToAdapt;
 
-	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(LoopContextStepRetrieval retrievalToAdapt) {
+	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(LoopContextStateRetrieval retrievalToAdapt) {
 		myRetrievalObjectToAdapt = retrievalToAdapt;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/loop/LoopContextStateManipulation.java
Patch:
@@ -1,6 +1,6 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop;
 
-public interface LoopContextStateManipuation {
+public interface LoopContextStateManipulation {
 
 	public void start();
 	public boolean shouldProceed();

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/adapters/LoopContextStateRetrievalToSingleStepOutputGenerationAdapter.java
Patch:
@@ -7,7 +7,7 @@ public class LoopContextStateRetrievalToSingleStepOutputGenerationAdapter implem
 
 	private LoopContextStateRetrieval myRetrievalObjectToAdapt;
 
-	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(LoopContextStepRetrieval retrievalToAdapt) {
+	public LoopContextStateRetrievalToSingleStepOutputGenerationAdapter(LoopContextStateRetrieval retrievalToAdapt) {
 		myRetrievalObjectToAdapt = retrievalToAdapt;
 	}
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/interfaces/loop/LoopContextStateManipulation.java
Patch:
@@ -1,6 +1,6 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.loop;
 
-public interface LoopContextStateManipuation {
+public interface LoopContextStateManipulation {
 
 	public void start();
 	public boolean shouldProceed();

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/EnterpriseGradeFizzBuzzSolutionStrategyFactory.java
Patch:
@@ -7,10 +7,10 @@
 public class EnterpriseGradeFizzBuzzSolutionStrategyFactory implements FizzBuzzSolutionStrategyFactory {
 
 	@Override
-	public FizzBuzzSolutionStrategy createFizzBuzzSolutionStrategy(); {
+	public FizzBuzzSolutionStrategy createFizzBuzzSolutionStrategy() {
 		FizzBuzzSolutionStrategy myEnterpriseGradeStrategy =
 			new EnterpriseGradeFizzBuzzSolutionStrategy();
-		return myFizzStrategy;
+		return myEnterpriseGradeStrategy;
 	}
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/LoopComponentFactory.java
Patch:
@@ -1,6 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopCondition;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopFinalizer;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopInitializer;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopStep;
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/IntegerDivider.java
Patch:
@@ -22,7 +22,7 @@ public static int divide(int nFirstInteger, int nSecondInteger){
 			double dbRoundedQuotient = 0;
 			if(FirstIsSmallerThanSecondDoubleComparator.FirstIsSmallerThanSecond(dbQuotient, 0)){
 				dbRoundedQuotient = Math.ceil(dbQuotient);
-			else if(FirstIsLargerThanSecondDoubleComparator.FirstIsLargerThanSecond(dbQuotient, 0)){
+			}else if(FirstIsLargerThanSecondDoubleComparator.FirstIsLargerThanSecond(dbQuotient, 0)){
 				dbRoundedQuotient = Math.floor(dbQuotient);
 			}
 			int nIntegerQuotient = DoubleToIntConverter.Convert(dbRoundedQuotient);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/EnterpriseGradeFizzBuzzSolutionStrategyFactory.java
Patch:
@@ -7,10 +7,10 @@
 public class EnterpriseGradeFizzBuzzSolutionStrategyFactory implements FizzBuzzSolutionStrategyFactory {
 
 	@Override
-	public FizzBuzzSolutionStrategy createFizzBuzzSolutionStrategy(); {
+	public FizzBuzzSolutionStrategy createFizzBuzzSolutionStrategy() {
 		FizzBuzzSolutionStrategy myEnterpriseGradeStrategy =
 			new EnterpriseGradeFizzBuzzSolutionStrategy();
-		return myFizzStrategy;
+		return myEnterpriseGradeStrategy;
 	}
 
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/LoopComponentFactory.java
Patch:
@@ -1,6 +1,7 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.factories;
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopCondition;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopFinalizer;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopInitializer;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.loop.LoopStep;
 

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/math/arithmetics/IntegerDivider.java
Patch:
@@ -22,7 +22,7 @@ public static int divide(int nFirstInteger, int nSecondInteger){
 			double dbRoundedQuotient = 0;
 			if(FirstIsSmallerThanSecondDoubleComparator.FirstIsSmallerThanSecond(dbQuotient, 0)){
 				dbRoundedQuotient = Math.ceil(dbQuotient);
-			else if(FirstIsLargerThanSecondDoubleComparator.FirstIsLargerThanSecond(dbQuotient, 0)){
+			}else if(FirstIsLargerThanSecondDoubleComparator.FirstIsLargerThanSecond(dbQuotient, 0)){
 				dbRoundedQuotient = Math.floor(dbQuotient);
 			}
 			int nIntegerQuotient = DoubleToIntConverter.Convert(dbRoundedQuotient);

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/comparators/integercomparator/ThreeWayIntegerComparator.java
Patch:
@@ -9,7 +9,8 @@ public static ThreeWayIntegerComparisonResult Compare(int nFirstInteger, int nSe
 		} else if (nFirstInteger > nSecondInteger) {
 			return ThreeWayIntegerComparisonResult.FirstIsGreaterThanSecond;
 		} else {
-			throw new IllegalStateException("The integers could not be compared.");
+			// If the integers cannot be compared, then something is seriously wrong with the numbers.
+			throw new UnsupportedOperationException("The integers could not be compared.");
 		}
 	}
 }

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/BuzzStrategy.java
Patch:
@@ -2,9 +2,11 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.constants.BuzzStrategyConstants;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.math.arithmetics.NumberIsMultipleOfAnotherNumberVerifier;
+
 public class BuzzStrategy implements IsEvenlyDivisibleStrategy {
 	public boolean isEvenlyDivisible(int i) {
-		if ((((int)(i / BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE)) * BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE == i)) {
+		if (NumberIsMultipleOfAnotherNumberVerifier.numberIsMultipleOfAnotherNumber(i, BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE)) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/FizzStrategy.java
Patch:
@@ -2,10 +2,11 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.constants.FizzStrategyConstants;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.math.arithmetics.NumberIsMultipleOfAnotherNumberVerifier;
 
 public class FizzStrategy implements IsEvenlyDivisibleStrategy {
 	public boolean isEvenlyDivisible(int i) {
-		if ((((int)(i / FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE)) * FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE == i)) {
+		if (NumberIsMultipleOfAnotherNumberVerifier.numberIsMultipleOfAnotherNumber(i, FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE)) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/NoFizzNoBuzzStrategyConstants.java
Patch:
@@ -1,6 +1,5 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.constants;
 
-
 public class NoFizzNoBuzzStrategyConstants
 {
 	public static final int NO_BUZZ_INTEGER_CONSTANT_VALUE = BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopInitializer.java
Patch:
@@ -2,7 +2,7 @@
 
 public class LoopInitializer {
 	
-	public static final int LOOP_INIT_VALUE = 1;
+	private static final int LOOP_INIT_VALUE = 1;
 	
 	public int getLoopInitializationPoint() {
 		return LoopInitializer.LOOP_INIT_VALUE;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/loop/LoopStep.java
Patch:
@@ -2,7 +2,7 @@
 
 public class LoopStep {
 
-	public static final int LOOP_INC_VALUE = 1;
+	private static final int LOOP_INC_VALUE = 1;
 	
 	public int stepLoop(int i) {
 		return i + LoopStep.LOOP_INC_VALUE;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/BuzzStrategy.java
Patch:
@@ -2,9 +2,11 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.constants.BuzzStrategyConstants;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.math.arithmetics.NumberIsMultipleOfAnotherNumberVerifier;
+
 public class BuzzStrategy implements IsEvenlyDivisibleStrategy {
 	public boolean isEvenlyDivisible(int i) {
-		if ((((int)(i / BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE)) * BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE == i)) {
+		if (NumberIsMultipleOfAnotherNumberVerifier.numberIsMultipleOfAnotherNumber(i, BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE)) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/FizzStrategy.java
Patch:
@@ -2,10 +2,11 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.constants.FizzStrategyConstants;
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.math.arithmetics.NumberIsMultipleOfAnotherNumberVerifier;
 
 public class FizzStrategy implements IsEvenlyDivisibleStrategy {
 	public boolean isEvenlyDivisible(int i) {
-		if ((((int)(i / FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE)) * FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE == i)) {
+		if (NumberIsMultipleOfAnotherNumberVerifier.numberIsMultipleOfAnotherNumber(i, FizzStrategyConstants.FIZZ_INTEGER_CONSTANT_VALUE)) {
 			return true;
 		} else {
 			return false;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/strategies/constants/NoFizzNoBuzzStrategyConstants.java
Patch:
@@ -1,6 +1,5 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.strategies.constants;
 
-
 public class NoFizzNoBuzzStrategyConstants
 {
 	public static final int NO_BUZZ_INTEGER_CONSTANT_VALUE = BuzzStrategyConstants.BUZZ_INTEGER_CONSTANT_VALUE;

File: src/main/java/com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/stringreturners/NewLineStringReturner.java
Patch:
@@ -5,7 +5,8 @@
 public class NewLineStringReturner implements StringStringReturner {
 	
 	public String getReturnString() {
-		StringBuilder myStringBuilder = new StringBuilder("\n");
+		String systemDefaultNewLineString = System.getProperty("line.separator");
+		StringBuilder myStringBuilder = new StringBuilder(systemDefaultNewLineString);
 		String myString = myStringBuilder.toString();
 		return new String(myString);
 	}

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/factories/FizzStringPrinterFactory.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.printers.FizzStringPrinter;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.factories.StringPrinterFactory;
-import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.factories.StringStringReturnerFactory;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.printers.StringPrinter;
 
 public class FizzStringPrinterFactory implements StringPrinterFactory {

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/BuzzPrinter.java
Patch:
@@ -5,6 +5,6 @@
 public class BuzzPrinter {
 	public void printBuzz() {
 		BuzzStringReturner myBuzzStringReturner = new BuzzStringReturner();
-		System.out.print(myBuzzStringReturner.getBuzz());
+		System.out.print(myBuzzStringReturner.getReturnString());
 	}
 }

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/FizzPrinter.java
Patch:
@@ -6,7 +6,7 @@ public class FizzPrinter {
 
 	public void printFizz() {
 		FizzStringReturner myFizzStringReturner = new FizzStringReturner();
-		System.out.print(myFizzStringReturner.getFizz());
+		System.out.print(myFizzStringReturner.getReturnString());
 	}
 
 }

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/IntPrinter.java
Patch:
@@ -1,12 +1,13 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.printers;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.impl.stringreturners.IntegerIntegerStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.stringreturners.IntegerStringReturner;
 
 public class IntPrinter {
 
 	public void printInteger(int i) {
-		IntegerStringReturner myIntegerStringReturner = new IntegerStringReturner();
-		String myIntegerString = myIntegerStringReturner.getIntegerString(i); 
+		IntegerStringReturner myIntegerIntegerStringReturner = new IntegerIntegerStringReturner();
+		String myIntegerString = myIntegerIntegerStringReturner.getIntegerReturnString(i); 
 		System.out.print(myIntegerString);
 	}
 

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/impl/printers/NewLinePrinter.java
Patch:
@@ -6,7 +6,7 @@ public class NewLinePrinter {
 
 	public void printNewLine() {
 		NewLineStringReturner myNewLineStringReturner = new NewLineStringReturner();
-		String myNewLineString = myNewLineStringReturner.getNewLineString();
+		String myNewLineString = myNewLineStringReturner.getReturnString();
 		System.out.print(myNewLineString);
 	}
 	

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/loop/LoopCondition.java
Patch:
@@ -5,8 +5,8 @@ public boolean evaluateLoop(int i, int n) {
 		if (i < n) {
 			return true;
 		} else if (i == n) {
-                        return true;
-                } else {
+			return true;
+		} else {
 			return false;
 		}
 	}

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/printers/BuzzPrinter.java
Patch:
@@ -5,6 +5,6 @@
 public class BuzzPrinter {
 	public void printBuzz() {
 		BuzzStringReturner myBuzzStringReturner = new BuzzStringReturner();
-		System.out.print(myBuzzStringReturner.getBuzz());
+		System.out.print(myBuzzStringReturner.getReturnString());
 	}
 }

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/printers/FizzPrinter.java
Patch:
@@ -6,7 +6,7 @@ public class FizzPrinter {
 
 	public void printFizz() {
 		FizzStringReturner myFizzStringReturner = new FizzStringReturner();
-		System.out.print(myFizzStringReturner.getFizz());
+		System.out.print(myFizzStringReturner.getReturnString());
 	}
 
 }

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/printers/IntPrinter.java
Patch:
@@ -1,12 +1,13 @@
 package com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.printers;
 
+import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.stringreturners.IntegerIntegerStringReturner;
 import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.stringreturners.IntegerStringReturner;
 
 public class IntPrinter {
 
 	public void printInteger(int i) {
-		IntegerStringReturner myIntegerStringReturner = new IntegerStringReturner();
-		String myIntegerString = myIntegerStringReturner.getIntegerString(i); 
+		IntegerStringReturner myIntegerIntegerStringReturner = new IntegerIntegerStringReturner();
+		String myIntegerString = myIntegerIntegerStringReturner.getIntegerReturnString(i); 
 		System.out.print(myIntegerString);
 	}
 

File: com/seriouscompany/business/java/fizzbuzz/packagenamingpackage/printers/NewLinePrinter.java
Patch:
@@ -6,7 +6,7 @@ public class NewLinePrinter {
 
 	public void printNewLine() {
 		NewLineStringReturner myNewLineStringReturner = new NewLineStringReturner();
-		String myNewLineString = myNewLineStringReturner.getNewLineString();
+		String myNewLineString = myNewLineStringReturner.getReturnString();
 		System.out.print(myNewLineString);
 	}
 	

