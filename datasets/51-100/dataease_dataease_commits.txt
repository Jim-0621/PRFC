File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/user/api/UserApi.java
Patch:
@@ -11,7 +11,6 @@
 import io.dataease.auth.DePermit;
 import io.dataease.auth.vo.TokenVO;
 import io.dataease.model.KeywordRequest;
-import io.dataease.request.BaseGridRequest;
 import io.swagger.v3.oas.annotations.Hidden;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.Parameter;
@@ -40,7 +39,7 @@ public interface UserApi {
     })
     @DePermit("m:read")
     @PostMapping("/pager/{goPage}/{pageSize}")
-    IPage<UserGridVO> pager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);
+    IPage<UserGridVO> pager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody UserGridRequest request);
 
     @Operation(summary = "查询用户详情")
     @Parameter(name = "id", description = "ID", required = true, in = ParameterIn.PATH)

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -181,7 +181,7 @@ private String removeVariables(final String sql, String dsType) throws Exception
                 sysParams.add(sysParam);
             }
         }
-        if(!hasVariables){
+        if(!hasVariables && !sql.contains(SubstitutedParams)){
             return sql;
         }
         Statement statement = CCJSqlParserUtil.parse(tmpSql);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -84,7 +84,7 @@ public static Map<String, Object> fetchResultField(DatasourceRequest datasourceR
             fieldList = getTableFields(apiDefinition);
             result.put("fieldList", fieldList);
             if (apiDefinition.getRequest().getPage().getPageType().equalsIgnoreCase("pageNumber")) {
-                int pageCount = Integer.valueOf(JsonPath.read(response, apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPath()));
+                int pageCount = Integer.valueOf(JsonPath.read(response, apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPath()).toString());
                 int beginPage = Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(0).getParameterDefaultValue());
                 if (apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPathType().equalsIgnoreCase("totalNumber")) {
                     pageCount = pageCount / Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(1).getParameterDefaultValue()) + 1;

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -15,11 +15,11 @@
 public class Mysql extends DatasourceConfiguration {
     private String driver = "com.mysql.cj.jdbc.Driver";
     private String extraParams = "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull";
-    private List<String> illegalParameters = Arrays.asList("autoDeserialize", "queryInterceptors", "statementInterceptors", "detectCustomCollations", "allowloadlocalinfile", "allowUrlInLocalInfile", "allowLoadLocalInfileInPath");
+    private List<String> illegalParameters = Arrays.asList("maxAllowedPacket", "autoDeserialize", "queryInterceptors", "statementInterceptors", "detectCustomCollations", "allowloadlocalinfile", "allowUrlInLocalInfile", "allowLoadLocalInfileInPath");
     private List<String> showTableSqls = Arrays.asList("show tables");
 
     public String getJdbc() {
-        if(StringUtils.isNoneEmpty(getUrlType()) && !getUrlType().equalsIgnoreCase("hostName")){
+        if (StringUtils.isNoneEmpty(getUrlType()) && !getUrlType().equalsIgnoreCase("hostName")) {
             for (String illegalParameter : illegalParameters) {
                 if (getJdbcUrl().toLowerCase().contains(illegalParameter.toLowerCase()) || URLDecoder.decode(getExtraParams()).contains(illegalParameter.toLowerCase())) {
                     DEException.throwException("Illegal parameter: " + illegalParameter);

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -181,6 +181,9 @@ private String removeVariables(final String sql, String dsType) throws Exception
                 sysParams.add(sysParam);
             }
         }
+        if(!hasVariables){
+            return sql;
+        }
         Statement statement = CCJSqlParserUtil.parse(tmpSql);
         Select select = (Select) statement;
         if (CollectionUtils.isNotEmpty(select.getWithItemsList())) {

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -341,7 +341,9 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         extFilterList = extFilterList.stream().peek(ele -> {
             if (ObjectUtils.isNotEmpty(ele.getValue())) {
                 List<String> collect = ele.getValue().stream().map(SQLUtils::transKeyword).collect(Collectors.toList());
-                ele.setOriginValue(ele.getValue());
+                if (CollectionUtils.isEmpty(ele.getOriginValue())) {
+                    ele.setOriginValue(ele.getValue());
+                }
                 ele.setValue(collect);
             }
         }).collect(Collectors.toList());

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -45,7 +45,8 @@ public String insertSql(String dsType, String tableName, DatasourceServer.Update
             for (int i = 0; i < strings.length; i++) {
                 if (tableFields.get(i).isChecked()) {
                     if (StringUtils.isEmpty(strings[i])) {
-                        if (tableFields.get(i).getFieldType().equals("LONG") || tableFields.get(i).getFieldType().equals("DOUBLE")) {
+                        String type = tableFields.get(i).getType() == null ? tableFields.get(i).getFieldType() : tableFields.get(i).getType();
+                        if (type.equals("LONG") || type.equals("DOUBLE")) {
                             strings1[length] = "0";
                         } else {
                             strings1[length] = null;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -52,7 +52,8 @@ public String insertSql(String dsType, String tableName, DatasourceServer.Update
             for (int i = 0; i < strings.length; i++) {
                 if (tableFields.get(i).isChecked()) {
                     if (StringUtils.isEmpty(strings[i])) {
-                        if (tableFields.get(i).getFieldType().equals("LONG") || tableFields.get(i).getFieldType().equals("DOUBLE")) {
+                        String type = tableFields.get(i).getType() == null ? tableFields.get(i).getFieldType() : tableFields.get(i).getType();
+                        if (type.equals("LONG") || type.equals("DOUBLE")) {
                             strings1[length] = "0";
                         } else {
                             strings1[length] = null;

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/dto/ExtraDetailsRequest.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
+import io.dataease.extensions.datafilling.dto.ExtraColumnItem;
 import lombok.Data;
 import lombok.experimental.Accessors;
 

File: sdk/extensions/extensions-datafilling/src/main/java/io/dataease/extensions/datafilling/dto/ExtTableField.java
Patch:
@@ -71,6 +71,8 @@ public static class ExtTableFieldSetting implements Serializable  {
         private boolean updateRuleCheck;
 
         private List<Option> options;
+
+        private List<ExtraColumnItem> extraColumns;
     }
 
     @Data

File: sdk/extensions/extensions-datafilling/src/main/java/io/dataease/extensions/datafilling/dto/ExtraColumnItem.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.api.xpack.dataFilling.dto;
+package io.dataease.extensions.datafilling.dto;
 
 import lombok.Data;
 import lombok.experimental.Accessors;

File: sdk/common/src/main/java/io/dataease/utils/RsaUtils.java
Patch:
@@ -34,9 +34,9 @@ public class RsaUtils {
     }
 
 
-    private static final int MAX_ENCRYPT_BLOCK = 117;
+    private static final int MAX_ENCRYPT_BLOCK = 245;
 
-    private static final int MAX_DECRYPT_BLOCK = 128;
+    private static final int MAX_DECRYPT_BLOCK = 256;
 
     private static final String PK_SEPARATOR = "-pk_separator-";
 
@@ -55,7 +55,7 @@ private static KeyPair getKeyPair() {
             LogUtil.error(e.getMessage(), e);
             DEException.throwException(e);
         }
-        generator.initialize(1024);
+        generator.initialize(2048);
         return generator.generateKeyPair();
     }
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -810,7 +810,7 @@ private static ApiDefinition checkApiDefinition(DatasourceRequest datasourceRequ
         }
         if (!CollectionUtils.isEmpty(apiDefinitionListTemp)) {
             for (ApiDefinition apiDefinition : apiDefinitionListTemp) {
-                if (apiDefinition == null) {
+                if (apiDefinition == null || apiDefinition.getType() == null || apiDefinition.getType().equalsIgnoreCase("params")) {
                     continue;
                 }
                 if (apiDefinition.getDeTableName().equalsIgnoreCase(datasourceRequest.getTable()) || apiDefinition.getName().equalsIgnoreCase(datasourceRequest.getTable())) {

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DataSourceManage.java
Patch:
@@ -94,6 +94,9 @@ public void innerSave(DatasourceDTO dataSourceDTO) {
     }
 
     public void checkName(DatasourceDTO dto) {
+        if(StringUtils.isEmpty(dto.getName()) || StringUtils.isEmpty(dto.getName().trim())){
+            DEException.throwException(Translator.get("i18n_df_name_can_not_empty"));
+        }
         QueryWrapper<CoreDatasource> wrapper = new QueryWrapper<>();
         if (ObjectUtils.isNotEmpty(dto.getPid())) {
             if (LicenseUtil.licenseValid() && dto.getPid().equals(0L)) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -163,7 +163,8 @@ public static String checkStatus(DatasourceRequest datasourceRequest) throws Exc
                 getData(datasourceRequest);
                 apiItemStatuses.put("name", apiDefinition.getName());
                 apiItemStatuses.put("status", "Success");
-            } catch (Exception ignore) {
+            } catch (Exception e) {
+                LogUtil.error("API status Error: " + datasourceRequest.getDatasource().getName() + "-" + apiDefinition.getName(), e);
                 apiItemStatuses.put("name", apiDefinition.getName());
                 apiItemStatuses.put("status", "Error");
             }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -154,7 +154,7 @@ public static String checkStatus(DatasourceRequest datasourceRequest) throws Exc
         List<ApiDefinition> apiDefinitionList = JsonUtil.parseList(datasourceRequest.getDatasource().getConfiguration(), listTypeReference);
         List<ObjectNode> status = new ArrayList();
         for (ApiDefinition apiDefinition : apiDefinitionList) {
-            if (apiDefinition == null) {
+            if (apiDefinition == null || (apiDefinition.getType() != null && apiDefinition.getType().equalsIgnoreCase("params"))) {
                 continue;
             }
             datasourceRequest.setTable(apiDefinition.getName());

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -13,6 +13,7 @@
 import io.dataease.i18n.Translator;
 import io.dataease.license.utils.LicenseUtil;
 import io.dataease.utils.JsonUtil;
+import io.dataease.utils.LogUtil;
 import net.sf.jsqlparser.expression.*;
 import net.sf.jsqlparser.expression.operators.conditional.AndExpression;
 import net.sf.jsqlparser.expression.operators.conditional.OrExpression;
@@ -575,6 +576,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                         BinaryExpression rightBinaryExpression = (BinaryExpression) parenthesis.getExpression();
                         hasSubBinaryExpression = rightBinaryExpression instanceof AndExpression || rightBinaryExpression instanceof OrExpression;
                     } catch (Exception e) {
+                        LogUtil.error("Failed parse sql", e);
                     }
                 }
                 if (expr.getRightExpression() instanceof BinaryExpression) {

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -739,7 +739,7 @@ private void downloadNotTableInfoData(ChartExcelRequest request, Workbook wb) {
                 if (request.getViewInfo().getType().equalsIgnoreCase("table-normal")) {
                     ChartDataServer.setExcelData(detailsSheet, cellStyle, header, details, detailFields, excelTypes, request.getViewInfo(), wb);
                 } else {
-                    ChartDataServer.setExcelData(detailsSheet, cellStyle, header, details, detailFields, excelTypes, null, null);
+                    ChartDataServer.setExcelData(detailsSheet, cellStyle, header, details, detailFields, excelTypes, request.getViewInfo(), null);
                 }
             }
         } else {
@@ -754,7 +754,7 @@ private void downloadNotTableInfoData(ChartExcelRequest request, Workbook wb) {
                 Object[] header = requestInner.getHeader();
                 //明细sheet
                 Sheet detailsSheet = wb.createSheet("数据 " + (i + 1));
-                ChartDataServer.setExcelData(detailsSheet, cellStyle, header, details, detailFields, excelTypes, null, null);
+                ChartDataServer.setExcelData(detailsSheet, cellStyle, header, details, detailFields, excelTypes, request.getViewInfo(), null);
             }
         }
     }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/DataFillingApi.java
Patch:
@@ -57,8 +57,8 @@ public interface DataFillingApi {
     @PostMapping("/form/{optionDatasource}/options")
     List<ColumnOption> listColumnData(@PathVariable("optionDatasource") Long optionDatasource, @RequestBody DatasourceOptionsRequest request) throws Exception;
 
-    @PostMapping("/form/{id}/extraDetails")
-    List<ExtraDetails> extraDetails(@PathVariable("id") Long formId, @RequestBody ExtraDetailsRequest request) throws Exception;
+    @PostMapping("/form/extraDetails")
+    List<ExtraDetails> extraDetails(@RequestBody ExtraDetailsRequest request) throws Exception;
 
     @PostMapping("/form/{id}/tableData")
     DataFillFormTableDataResponse tableData(@PathVariable("id") Long id, @RequestBody DataFillFormTableDataRequest request) throws Exception;

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/TableField.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.api.sync.task.dto;
 
+import lombok.EqualsAndHashCode;
 import lombok.Getter;
 import lombok.Setter;
 
@@ -8,6 +9,7 @@
  */
 @Setter
 @Getter
+@EqualsAndHashCode(callSuper = false)
 public class TableField {
     private String fieldSource;
     private String fieldName;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1191,11 +1191,11 @@ private List<String> getTablesSql(DatasourceRequest datasourceRequest) throws DE
                 if (StringUtils.isEmpty(configuration.getSchema())) {
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
-                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
+                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p', 'f')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
                 break;
             case redshift:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), CK.class);
-                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
+                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p', 'f')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
                 break;
             case ck:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), CK.class);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -79,7 +79,7 @@ public static Map<String, Object> fetchResultField(DatasourceRequest datasourceR
         if (apiDefinition == null) {
             DEException.throwException("未找到");
         }
-        if (apiDefinition.getRequest().getPage() != null && !apiDefinition.getRequest().getPage().getPageType().equalsIgnoreCase("empty")) {
+        if (apiDefinition.getRequest().getPage() != null && apiDefinition.getRequest().getPage().getPageType() != null && !apiDefinition.getRequest().getPage().getPageType().equalsIgnoreCase("empty")) {
             String response = execHttpRequest(false, apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout(), params(datasourceRequest));
             fieldList = getTableFields(apiDefinition);
             result.put("fieldList", fieldList);

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/ApiDefinitionRequest.java
Patch:
@@ -27,7 +27,7 @@ public static class AuthManager {
 
     @Data
     public static class Page {
-        private String pageType;
+        private String pageType = "empty";
         private List<RequestItem> requestData;
         private List<ResponseItem> responseData;
     }

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/provider/Provider.java
Patch:
@@ -283,7 +283,7 @@ public void startSshSession(DatasourceConfiguration configuration, ConnectionObj
                 Integer lport = Provider.getLPorts().get(datasourceId);
                 if (lport != null) {
                     configuration.setLPort(lport);
-                    if (Provider.getSessions().get(datasourceId) == null || !Provider.getSessions().get(datasourceId).isConnected()) {
+                        if (Provider.getSessions().get(datasourceId) == null || !Provider.getSessions().get(datasourceId).isConnected()) {
                         Session session = initSession(configuration);
                         Provider.getSessions().put(datasourceId, session);
                     }

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -50,13 +50,14 @@ public class SqlparserUtils {
     private final List<Map<String, String>> sysParams = new ArrayList<>();
 
     public String handleVariableDefaultValue(String sql, String sqlVariableDetails, boolean isEdit, boolean isFromDataSet, List<SqlVariableDetails> parameters, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, PluginManageApi pluginManage, UserFormVO userEntity) {
+        DatasourceSchemaDTO ds = dsMap.entrySet().iterator().next().getValue();
         if (StringUtils.isEmpty(sql)) {
             DEException.throwException(Translator.get("i18n_sql_not_empty"));
         }
         this.userEntity = userEntity;
         try {
             this.removeSysParams = true;
-            removeVariables(sql, "");
+            removeVariables(sql, ds.getType());
         } catch (Exception e) {
             DEException.throwException(e);
         }
@@ -103,7 +104,6 @@ public String handleVariableDefaultValue(String sql, String sqlVariableDetails,
         }
 
         try {
-            DatasourceSchemaDTO ds = dsMap.entrySet().iterator().next().getValue();
             this.removeSysParams = false;
             sql = removeVariables(sql, ds.getType());
             // replace keyword '`'

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -84,7 +84,7 @@ public static Map<String, Object> fetchResultField(DatasourceRequest datasourceR
             fieldList = getTableFields(apiDefinition);
             result.put("fieldList", fieldList);
             if (apiDefinition.getRequest().getPage().getPageType().equalsIgnoreCase("pageNumber")) {
-                int pageCount = JsonPath.read(response, apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPath());
+                int pageCount = Integer.valueOf(JsonPath.read(response, apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPath()));
                 int beginPage = Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(0).getParameterDefaultValue());
                 if (apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPathType().equalsIgnoreCase("totalNumber")) {
                     pageCount = pageCount / Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(1).getParameterDefaultValue()) + 1;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -47,15 +47,15 @@ public String insertSql(String dsType, String tableName, DatasourceServer.Update
                     if (StringUtils.isEmpty(strings[i])) {
                         strings1[length] = null;
                     }else {
-                        strings1[length] = strings[i].replace("\\", "\\\\").replace("'", "\\'");
+                        strings1[length] = strings[i].replace("\\", "\\\\").replace("'", "''");
                     }
                     length++;
                 }
             }
             values.append("('").append(String.join("','", Arrays.asList(strings1)))
                     .append("'),");
         }
-        return (insertSql + values.substring(0, values.length() - 1)).replaceAll("'null'", "null");
+        return (insertSql + values.substring(0, values.length() - 1));
     }
 
 

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/FormatterCfgDTO.java
Patch:
@@ -10,6 +10,6 @@ public class FormatterCfgDTO {
     private String type = "auto"; // auto,value,percent
     private Integer unit = 1; // 换算单位
     private String suffix = ""; // 单位后缀
-    private Integer decimalCount = 2; // 小数位数
+    private Integer decimalCount = 0; // 小数位数
     private Boolean thousandSeparator = false; // 千分符
 }

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -108,6 +108,7 @@ public ChartViewDTO findExcelData(ChartExcelRequest request) {
             if ("dataset".equals(request.getDownloadType())) {
                 viewDTO.setResultMode(ChartConstants.VIEW_RESULT_MODE.ALL);
                 viewDTO.setType("table-info");
+                viewDTO.setRender("antv");
                 List<DatasetTableFieldDTO> sourceFields = datasetFieldServer.listByDatasetGroup(viewDTO.getTableId());
                 List<String> fileNames = permissionManage.filterColumnPermissions(sourceFields, new HashMap<>(), viewDTO.getTableId(), null).stream().map(DatasetTableFieldDTO::getDataeaseName).collect(Collectors.toList());
                 sourceFields = sourceFields.stream().filter(datasetTableFieldDTO -> fileNames.contains(datasetTableFieldDTO.getDataeaseName())).collect(Collectors.toList());

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -46,6 +46,8 @@ public String insertSql(String dsType, String tableName, DatasourceServer.Update
                 if (tableFields.get(i).isChecked()) {
                     if (StringUtils.isEmpty(strings[i])) {
                         strings1[length] = null;
+                    }else {
+                        strings1[length] = strings[i].replace("\\", "\\\\").replace("'", "\\'");
                     }
                     length++;
                 }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceTaskServer.java
Patch:
@@ -126,7 +126,7 @@ public void checkTaskIsStopped(CoreDatasourceTask coreDatasourceTask) {
 
     public List<CoreDatasourceTaskDTO> taskWithTriggers(Long taskId) {
         QueryWrapper<CoreDatasourceTaskDTO> wrapper = new QueryWrapper<>();
-        wrapper.eq("core_datasource_task.id", String.valueOf(taskId));
+        wrapper.eq("QRTZ_TRIGGERS.TRIGGER_NAME", String.valueOf(taskId));
         return extDatasourceTaskMapper.taskWithTriggers(wrapper);
     }
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -46,8 +46,6 @@ public String insertSql(String dsType, String tableName, DatasourceServer.Update
                 if (tableFields.get(i).isChecked()) {
                     if (StringUtils.isEmpty(strings[i])) {
                         strings1[length] = null;
-                    } else {
-                        strings1[length] = strings[i].replace("\\", "\\\\").replace("'", "\\'");
                     }
                     length++;
                 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -15,7 +15,7 @@
 public class H2EngineProvider extends EngineProvider {
 
     private static final String creatTableSql =
-            "CREATE TABLE IF NOT EXISTS `TABLE_NAME`" +
+            "CREATE TABLE IF NOT EXISTS \"TABLE_NAME\"" +
                     "Column_Fields;";
 
 
@@ -25,7 +25,7 @@ public String createView(String name, String viewSQL) {
     }
 
     @Override
-    public String insertSql(String dsType, String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber,List<TableField> tableFields) {
+    public String insertSql(String dsType, String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber, List<TableField> tableFields) {
         String engineTableName;
         switch (extractType) {
             case all_scope:
@@ -35,7 +35,7 @@ public String insertSql(String dsType, String tableName, DatasourceServer.Update
                 engineTableName = TableUtils.tableName(tableName);
                 break;
         }
-        String insertSql = "INSERT INTO `TABLE_NAME` VALUES ".replace("TABLE_NAME", engineTableName);
+        String insertSql = "INSERT INTO  \"TABLE_NAME\" VALUES ".replace("TABLE_NAME", engineTableName);
         StringBuffer values = new StringBuffer();
 
         Integer realSize = page * pageNumber < dataList.size() ? page * pageNumber : dataList.size();

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -272,7 +272,7 @@ public static String execHttpRequest(boolean preview, ApiDefinition api, int soc
                     for (ApiDefinition definition : paramsList) {
                         for (int i = 0; i < definition.getFields().size(); i++) {
                             TableField field = definition.getFields().get(i);
-                            if (field.getName().equalsIgnoreCase(param)) {
+                            if (field.getOriginName().equalsIgnoreCase(param)) {
                                 String resultStr = execHttpRequest(true, definition, definition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout(), null);
                                 List<String[]> dataList = fetchResult(resultStr, definition);
                                 if (dataList.size() > 0) {

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceTaskServer.java
Patch:
@@ -126,7 +126,7 @@ public void checkTaskIsStopped(CoreDatasourceTask coreDatasourceTask) {
 
     public List<CoreDatasourceTaskDTO> taskWithTriggers(Long taskId) {
         QueryWrapper<CoreDatasourceTaskDTO> wrapper = new QueryWrapper<>();
-        wrapper.eq("core_datasource_task.id", taskId);
+        wrapper.eq("core_datasource_task.id", String.valueOf(taskId));
         return extDatasourceTaskMapper.taskWithTriggers(wrapper);
     }
 

File: core/core-backend/src/main/java/io/dataease/commons/utils/ExcelWatermarkUtils.java
Patch:
@@ -107,7 +107,7 @@ public static byte[] createTextImage(String text, WatermarkContentDTO watermarkC
         g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
 
         // 设置字体
-        g2d.setFont(new Font("Arial", Font.PLAIN, fontSize));
+        g2d.setFont(new Font("Microsoft YaHei", Font.PLAIN, fontSize));
         g2d.setColor(new Color(baseColor.getRed(), baseColor.getGreen(), baseColor.getBlue(), 50)); // 半透明颜色
         g2d.rotate(radians, width / 2.0, height / 2.0); // 旋转文字
         // 绘制文字

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/provider/Provider.java
Patch:
@@ -287,18 +287,18 @@ public void startSshSession(DatasourceConfiguration configuration, ConnectionObj
                 connectionObj.setSession(session);
             } else {
                 Integer lport = Provider.getLPorts().get(datasourceId);
-                configuration.setLPort(lport);
                 if (lport != null) {
+                    configuration.setLPort(lport);
                     if (Provider.getSessions().get(datasourceId) == null || !Provider.getSessions().get(datasourceId).isConnected()) {
                         Session session = initSession(configuration);
                         Provider.getSessions().put(datasourceId, session);
                     }
                 } else {
-                    configuration.setLPort(getLport(datasourceId));
+                    lport = getLport(datasourceId);
+                    configuration.setLPort(lport);
                     Session session = initSession(configuration);
                     Provider.getSessions().put(datasourceId, session);
                 }
-                configuration.setLPort(lport);
             }
         }
     }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -93,7 +93,7 @@ private String createTableSql(final List<TableField> tableFields) {
             }
             columnFields.append(tableField.getName()).append("\" ");
             int size = tableField.getPrecision() * 4;
-            switch (tableField.getDeType()) {
+            switch (tableField.getDeExtractType()) {
                 case 0:
                     if (StringUtils.isNotEmpty(tableField.getLength())) {
                         columnFields.append("varchar(length)".replace("length", tableField.getLength())).append(",\"");

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -781,7 +781,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                 List<ExcelSheetData> excelSheetDataList = new ArrayList<>();
                 for (ExcelSheetData sheet : excelFileData.getSheets()) {
                     for (DatasetTableDTO datasetTableDTO : datasetTableDTOS) {
-                        if (excelDataTableName(datasetTableDTO.getTableName()).equals(sheet.getTableName()) || isCsv(file.getOriginalFilename())) {
+                        if (excelDataTableName(datasetTableDTO.getTableName()).equals(sheet.getTableName())){
                             List<TableField> newTableFields = sheet.getFields();
                             datasourceRequest.setTable(datasetTableDTO.getTableName());
                             List<TableField> oldTableFields = ExcelUtils.getTableFields(datasourceRequest);
@@ -802,7 +802,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                 List<DatasetTableDTO> datasetTableDTOS = ExcelUtils.getTables(datasourceRequest);
                 for (ExcelSheetData sheet : excelFileData.getSheets()) {
                     for (DatasetTableDTO datasetTableDTO : datasetTableDTOS) {
-                        if (excelDataTableName(datasetTableDTO.getTableName()).equals(sheet.getTableName()) || isCsv(file.getOriginalFilename())) {
+                        if (excelDataTableName(datasetTableDTO.getTableName()).equals(sheet.getTableName())){
                             sheet.setDeTableName(datasetTableDTO.getTableName());
                         }
                     }

File: core/core-backend/src/main/java/io/dataease/engine/trans/Dimension2SQLObj.java
Patch:
@@ -91,7 +91,7 @@ public static SQLObj getXFields(ChartViewFieldDTO x, String originField, String
         if (Objects.equals(x.getDeExtractType(), DeTypeConstants.DE_TIME)) {
             if (Objects.equals(x.getDeType(), DeTypeConstants.DE_INT) || Objects.equals(x.getDeType(), DeTypeConstants.DE_FLOAT)) {
                 fieldName = String.format(SQLConstants.UNIX_TIMESTAMP, originField);
-            } else if (Objects.equals(x.getDeType(), DeTypeConstants.DE_TIME)) {
+            } else if (Objects.equals(x.getDeType(), DeTypeConstants.DE_TIME) && !StringUtils.equalsIgnoreCase(x.getType(), "year")) {
                 // 如果都是时间类型，把date和time类型进行字符串拼接
                 if (isCross) {
                     if (StringUtils.equalsIgnoreCase(x.getType(), "date")) {

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -669,7 +669,7 @@ private String transFilter(SqlVariableDetails sqlVariableDetails, Map<Long, Data
     }
 
     private String handleSubstitutedSql(String sql) {
-        if (sql.contains(SysParamsSubstitutedParams)) {
+        if (sql.contains(SysParamsSubstitutedParams) && userEntity != null) {
             sql = sql.replace(SysParamsSubstitutedParams + "sysParams.userId", userEntity.getAccount());
             sql = sql.replace(SysParamsSubstitutedParams + "sysParams.userEmail", userEntity.getEmail());
             sql = sql.replace(SysParamsSubstitutedParams + "sysParams.userName", userEntity.getName());
@@ -700,7 +700,7 @@ private String handleSubstitutedSql(String sql) {
 
 
     private String handleSubstitutedSqlForIn(String sql) {
-        if (sql.contains(SysParamsSubstitutedParams)) {
+        if (sql.contains(SysParamsSubstitutedParams) && userEntity != null) {
             for (SysVariableValueItem variable : userEntity.getVariables()) {
                 List<String> values = new ArrayList<>();
                 if (!variable.isValid()) {

File: core/core-backend/src/main/java/io/dataease/template/manage/TemplateCenterManage.java
Patch:
@@ -206,7 +206,7 @@ private MarketBaseResponse baseResponseV2TransRecommend(MarketTemplateV2BaseResp
                 MarketApplicationSpecVO spec = marketTemplateV2ItemResult.getApplication().getSpec();
                 MarketApplicationMetaDataVO metadata = marketTemplateV2ItemResult.getApplication().getMetadata();
                 if ("Y".equalsIgnoreCase(spec.getSuggest())) {
-                    contents.add(new TemplateMarketDTO(metadata.getName(), spec.getDisplayName(), spec.getScreenshots().get(0).getUrl(), spec.getLinks().get(0).getUrl(), categoriesMap.get(spec.getLabel()), spec.getTemplateType(), useTime.get(spec.getReadmeName()), "Y"));
+                    contents.add(new TemplateMarketDTO(metadata.getName(), spec.getDisplayName(), spec.getScreenshots().get(0).getUrl(), spec.getLinks().get(0).getUrl(), categoriesMap.get(spec.getLabel()), spec.getTemplateType(), useTime.get(spec.getReadmeName()), "Y", spec.getTemplateClassification()));
                 }
             });
         }
@@ -246,7 +246,7 @@ private MarketBaseResponse baseResponseV2Trans(MarketTemplateV2BaseResponse v2Ba
             v2BaseResponse.getItems().stream().forEach(marketTemplateV2ItemResult -> {
                 MarketApplicationSpecVO spec = marketTemplateV2ItemResult.getApplication().getSpec();
                 MarketApplicationMetaDataVO metadata = marketTemplateV2ItemResult.getApplication().getMetadata();
-                contents.add(new TemplateMarketDTO(metadata.getName(), spec.getDisplayName(), spec.getScreenshots().get(0).getUrl(), spec.getLinks().get(0).getUrl(), categoriesMap.get(spec.getLabel()), spec.getTemplateType(), useTime.get(spec.getReadmeName()), spec.getSuggest()));
+                contents.add(new TemplateMarketDTO(metadata.getName(), spec.getDisplayName(), spec.getScreenshots().get(0).getUrl(), spec.getLinks().get(0).getUrl(), categoriesMap.get(spec.getLabel()), spec.getTemplateType(), useTime.get(spec.getReadmeName()), spec.getSuggest(), spec.getTemplateClassification()));
                 if (categoriesMap.get(spec.getLabel()) != null) {
                     activeCategoriesName.add(categoriesMap.get(spec.getLabel()));
                 }

File: sdk/api/api-base/src/main/java/io/dataease/api/template/TemplateMarketApi.java
Patch:
@@ -1,14 +1,11 @@
 package io.dataease.api.template;
 
-import io.dataease.api.template.request.TemplateMarketSearchRequest;
 import io.dataease.api.template.response.MarketBaseResponse;
 import io.dataease.api.template.response.MarketPreviewBaseResponse;
 import io.dataease.api.template.vo.MarketMetaDataVO;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.RequestBody;
 
 import java.util.List;
 

File: sdk/api/api-base/src/main/java/io/dataease/api/template/vo/MarketApplicationSpecVO.java
Patch:
@@ -22,6 +22,8 @@ public class MarketApplicationSpecVO {
 
     private String label;
 
+    private String templateClassification;
+
     private String readmeName;
 
     // 是否推荐

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1425,13 +1425,13 @@ private Connection getConnectionFromPool(Long dsId) {
             CalciteConnection calciteConnection = connection.unwrap(CalciteConnection.class);
             SchemaPlus rootSchema = calciteConnection.getRootSchema();
             if (rootSchema.getSubSchema(String.format(SQLConstants.SCHEMA, dsId)) == null) {
-                DEException.throwException("请检查数据源的有效性！");
+                DEException.throwException(Translator.get("i18n_check_datasource_connection"));
             }
             JdbcSchema jdbcSchema = rootSchema.getSubSchema(String.format(SQLConstants.SCHEMA, dsId)).unwrap(JdbcSchema.class);
             BasicDataSource basicDataSource = (BasicDataSource) jdbcSchema.getDataSource();
             return basicDataSource.getConnection();
         } catch (Exception e) {
-            DEException.throwException("连接无效, " + e.getMessage());
+            DEException.throwException(Translator.get("i18n_invalid_connection") + e.getMessage());
         }
         return null;
     }

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -680,7 +680,7 @@ private String handleSubstitutedSql(String sql) {
                 }
                 if (variable.getSysVariableDto().getType().equalsIgnoreCase("text")) {
                     for (SysVariableValueDto sysVariableValueDto : variable.getValueList()) {
-                        if (sysVariableValueDto.getId().equals(variable.getVariableValueId())) {
+                        if (variable.getVariableValueIds().contains(sysVariableValueDto.getId().toString())) {
                             value = sysVariableValueDto.getValue();
                             break;
                         }
@@ -707,8 +707,9 @@ private String handleSubstitutedSqlForIn(String sql) {
                     continue;
                 }
                 if (variable.getSysVariableDto().getType().equalsIgnoreCase("text")) {
+
                     for (SysVariableValueDto sysVariableValueDto : variable.getValueList()) {
-                        if (sysVariableValueDto.getSysVariableId().equals(variable.getVariableId())) {
+                        if (variable.getVariableValueIds().contains(sysVariableValueDto.getId().toString())) {
                             values.add(sysVariableValueDto.getValue());
                         }
                     }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -126,7 +126,7 @@ public List<DatasetTableFieldDTO> getTableFields(DatasetTableDTO datasetTableDTO
                 // parser sql params and replace default value
                 String s = new String(Base64.getDecoder().decode(tableInfoDTO.getSql()));
                 UserFormVO userEntity = getRowPermissionsApi().getUserById(AuthUtils.getUser().getUserId());
-                String originSql = SqlparserUtils.handleVariableDefaultValue(s, datasetTableDTO.getSqlVariableDetails(), false, false, null, false, datasourceRequest.getDsList(), pluginManage, userEntity);
+                String originSql = new SqlparserUtils().handleVariableDefaultValue(s, datasetTableDTO.getSqlVariableDetails(), false, false, null, false, datasourceRequest.getDsList(), pluginManage, userEntity);
                 originSql = provider.replaceComment(originSql);
                 // add sql table schema
 
@@ -418,7 +418,7 @@ public Map<String, Object> previewSql(PreviewSqlDTO dto) throws DEException {
 
         String s = new String(Base64.getDecoder().decode(dto.getSql()));
         UserFormVO userEntity = getRowPermissionsApi().getUserById(AuthUtils.getUser().getUserId());
-        String originSql = SqlparserUtils.handleVariableDefaultValue(datasetSQLManage.subPrefixSuffixChar(s), dto.getSqlVariableDetails(), true, true, null, false, dsMap, pluginManage, userEntity);
+        String originSql = new SqlparserUtils().handleVariableDefaultValue(datasetSQLManage.subPrefixSuffixChar(s), dto.getSqlVariableDetails(), true, true, null, false, dsMap, pluginManage, userEntity);
         originSql = provider.replaceComment(originSql);
 
         // sql 作为临时表，外层加上limit

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -471,7 +471,7 @@ private SQLObj getUnionTable(DatasetTableDTO currentDs, DatasetTableInfoDTO info
             // parser sql params and replace default value
             String s = new String(Base64.getDecoder().decode(infoDTO.getSql()));
             UserFormVO userEntity = getRowPermissionsApi().getUserById(AuthUtils.getUser().getUserId());
-            String sql = SqlparserUtils.handleVariableDefaultValue(s, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage, userEntity);
+            String sql = new SqlparserUtils().handleVariableDefaultValue(s, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage, userEntity);
             sql = provider.replaceComment(sql);
             // add table schema
             if (isCross) {

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -40,7 +40,7 @@
 
 public class SqlparserUtils {
     public static final String regex = "\\$\\{(.*?)\\}";
-    public static final String regex2 = "\\$\\[(.*?)\\]";
+    public static final String regex2 = "\\[(.*?)\\]";
     private static final String SubstitutedParams = "DATAEASE_PATAMS_BI";
     private static final String SubstitutedSql = " 'DE-BI' = 'DE-BI' ";
     private static final String SubstitutedSqlVirtualData = " 1 > 2 ";

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -85,10 +85,11 @@ public static Map<String, Object> fetchResultField(DatasourceRequest datasourceR
             result.put("fieldList", fieldList);
             if (apiDefinition.getRequest().getPage().getPageType().equalsIgnoreCase("pageNumber")) {
                 int pageCount = JsonPath.read(response, apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPath());
+                int beginPage = Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(0).getParameterDefaultValue());
                 if (apiDefinition.getRequest().getPage().getResponseData().get(0).getResolutionPathType().equalsIgnoreCase("totalNumber")) {
-                    pageCount = pageCount / Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(1).getParameterDefaultValue());
+                    pageCount = pageCount / Integer.valueOf(apiDefinition.getRequest().getPage().getRequestData().get(1).getParameterDefaultValue()) + 1;
                 }
-                for (int i = 1; i < pageCount + 1; i++) {
+                for (int i = beginPage; i <= pageCount; i++) {
                     apiDefinition.getRequest().getPage().getRequestData().get(0).setParameterDefaultValue(String.valueOf(i));
                     response = execHttpRequest(false, apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout(), params(datasourceRequest));
                     dataList.addAll(fetchResult(response, apiDefinition));

File: sdk/common/src/main/java/io/dataease/utils/DateUtils.java
Patch:
@@ -12,7 +12,8 @@ public class DateUtils {
     public static String time2String(Long time, String pattern) {
         if (StringUtils.isBlank(pattern)) pattern = "yyyy-MM-dd HH:mm:ss";
         DateTimeFormatter format = DateTimeFormatter.ofPattern(pattern);
-        LocalDateTime timeByMilli = Instant.ofEpochMilli(time).atZone(ZoneId.of("Asia/Shanghai")).toLocalDateTime();
+        ZoneId zoneId = ZoneId.systemDefault();
+        LocalDateTime timeByMilli = Instant.ofEpochMilli(time).atZone(zoneId).toLocalDateTime();
         return format.format(timeByMilli);
     }
     public static String time2String(Long time) {

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -234,7 +234,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         }
 
         // web参数条件
-        if (ObjectUtils.isNotEmpty(chartExtRequest.getOuterParamsFilters())) {
+        if (ObjectUtils.isNotEmpty(chartExtRequest.getWebParamsFilters())) {
             filters.addAll(chartExtRequest.getWebParamsFilters());
         }
 

File: core/core-backend/src/main/java/io/dataease/font/manage/FontManage.java
Patch:
@@ -23,6 +23,7 @@
 
 import org.springframework.core.io.ResourceLoader;
 
+import java.awt.*;
 import java.io.*;
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
@@ -181,9 +182,10 @@ private static FontDto saveFile(MultipartFile file, String fileNameUUID) throws
                 unit = "KB";
                 size = Double.valueOf(String.format("%.2f", (double) length / 1024));
             }
+            Font font = Font.createFont(Font.TRUETYPE_FONT, new File(filePath));
             fontDto.setSize(size);
             fontDto.setSizeType(unit);
-
+            fontDto.setName(font.getFontName());
         } catch (Exception e) {
             DEException.throwException(e);
         }

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/ExtDataVisualizationMapper.java
Patch:
@@ -37,7 +37,7 @@ public interface ExtDataVisualizationMapper {
 
     DataVisualizationVO findDvInfo(@Param("dvId") Long dvId,@Param("dvType") String dvType);
 
-    IPage<VisualizationResourcePO> findRecent(IPage<VisualizationResourcePO> page, @Param("uid") Long uid, @Param("ew") QueryWrapper<Object> ew);
+    IPage<VisualizationResourcePO> findRecent(IPage<VisualizationResourcePO> page, @Param("uid") Long uid, @Param("keyword") String keyword, @Param("ew") QueryWrapper<Object> ew);
 
     void copyLinkJump(@Param("copyId") Long copyId);
 

File: core/core-backend/src/main/java/io/dataease/visualization/manage/VisualizationStoreManage.java
Patch:
@@ -106,7 +106,7 @@ public IPage<StorePO> queryStorePage(int goPage, int pageSize, VisualizationWork
             queryWrapper.eq("s.resource_type", busiResourceEnum.getFlag());
         }
         if (StringUtils.isNotBlank(request.getKeyword())) {
-            queryWrapper.like("v.name", request.getKeyword());
+            queryWrapper.apply("LOWER(v.name) LIKE LOWER(CONCAT('%', {0}, '%'))", request.getKeyword());
         }
         String info = CommunityUtils.getInfo();
         if (StringUtils.isNotBlank(info)) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/EngineProvider.java
Patch:
@@ -22,7 +22,7 @@ public abstract class EngineProvider {
 
     public abstract String createTableSql(String name, List<TableField> tableFields, CoreDeEngine engine);
 
-    public abstract String insertSql(String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber, List<TableField> tableFields);
+    public abstract String insertSql(String dsType, String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber, List<TableField> tableFields);
 
 
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -25,7 +25,7 @@ public String createView(String name, String viewSQL) {
     }
 
     @Override
-    public String insertSql(String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber,List<TableField> tableFields) {
+    public String insertSql(String dsType, String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber,List<TableField> tableFields) {
         String engineTableName;
         switch (extractType) {
             case all_scope:

File: core/core-backend/src/main/java/io/dataease/listener/EhCacheStartListener.java
Patch:
@@ -1,7 +1,6 @@
 package io.dataease.listener;
 
 
-import org.jetbrains.annotations.NotNull;
 import org.springframework.beans.factory.config.YamlPropertiesFactoryBean;
 import org.springframework.context.ApplicationContextInitializer;
 import org.springframework.context.ConfigurableApplicationContext;
@@ -12,7 +11,7 @@
 
 public class EhCacheStartListener implements ApplicationContextInitializer<ConfigurableApplicationContext> {
     @Override
-    public void initialize(@NotNull ConfigurableApplicationContext applicationContext) {
+    public void initialize(ConfigurableApplicationContext applicationContext) {
         Resource resource = new ClassPathResource("application.yml");
         YamlPropertiesFactoryBean factory = new YamlPropertiesFactoryBean();
         factory.setResources(resource);

File: core/core-backend/src/main/java/io/dataease/datasource/server/EngineServer.java
Patch:
@@ -86,7 +86,7 @@ public void validateById(Long id) throws Exception {
     }
 
     @Override
-    public boolean surportSetKey() throws Exception {
+    public boolean supportSetKey() throws Exception {
         return !getEngine().getType().equalsIgnoreCase("h2");
     }
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/EngineApi.java
Patch:
@@ -25,6 +25,6 @@ public interface EngineApi {
     @PostMapping("/validate/{id}")
     void validateById(@PathVariable Long id) throws Exception;
 
-    @GetMapping("/surportSetKey")
-    boolean surportSetKey() throws Exception;
+    @GetMapping("/supportSetKey")
+    boolean supportSetKey() throws Exception;
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -329,6 +329,9 @@ private String cellType(String value) {
             Double d = Double.valueOf(value);
             double eps = 1e-10;
             if (d - Math.floor(d) < eps) {
+                if(value.contains(".")){
+                    return "DOUBLE";
+                }
                 return "LONG";
             } else {
                 return "DOUBLE";

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/EngineApi.java
Patch:
@@ -24,4 +24,7 @@ public interface EngineApi {
 
     @PostMapping("/validate/{id}")
     void validateById(@PathVariable Long id) throws Exception;
+
+    @GetMapping("/surportSetKey")
+    boolean surportSetKey() throws Exception;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/appearance/api/XpackAppearanceApi.java
Patch:
@@ -19,6 +19,6 @@ public interface XpackAppearanceApi {
     @GetMapping("/query")
     List<AppearanceItemVO> query();
 
-    @GetMapping(value = "/image/{imageId}", produces = {MediaType.IMAGE_JPEG_VALUE, MediaType.IMAGE_PNG_VALUE})
+    @GetMapping(value = "/image/{imageId}", produces = {MediaType.IMAGE_JPEG_VALUE, MediaType.IMAGE_PNG_VALUE, "image/svg+xml"})
     ResponseEntity<byte[]> image(@PathVariable("imageId") String imageId);
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -352,6 +352,9 @@ public ConnectionObj getConnection(DatasourceDTO coreDatasource) throws Exceptio
             case redshift:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), Redshift.class);
                 break;
+            case h2:
+                configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), H2.class);
+                break;
             case ck:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), CK.class);
                 break;

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1649,6 +1649,8 @@ private static String getDateFormat(String dateStyle, String datePattern) {
                 return "yyyy" + split + "MM";
             case "y_M_d":
                 return "yyyy" + split + "MM" + split + "dd";
+            case "M_d":
+                return "MM" + split + "dd";
             case "H_m_s":
                 return "HH:mm:ss";
             case "y_M_d_H":
@@ -1726,6 +1728,7 @@ private static String getTimeGap(Date from, Date to, String dateStyle) {
                 }
                 return StringUtils.join(list, splitter);
             case "y_M_d":
+            case "M_d":
                 return dayGapStr;
             case "y_M_d_H":
                 if (!dayGapStr.isEmpty()) {

File: core/core-backend/src/main/java/io/dataease/datasource/manage/EngineManage.java
Patch:
@@ -111,7 +111,7 @@ public void initSimpleEngine() throws Exception {
         if (ModelUtils.isDesktop()) {
             engine.setType(engineType.h2.name());
             H2 h2 = new H2();
-            h2.setJdbc("jdbc:h2:/opt/dataease2.0/desktop_data;AUTO_SERVER=TRUE;AUTO_RECONNECT=TRUE;MODE=MySQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE");
+            h2.setJdbc("jdbc:h2:/opt/dataease2.0/desktop_data;AUTO_SERVER=TRUE;AUTO_RECONNECT=TRUE;MODE=MySQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE;DATABASE_TO_UPPER=FALSE");
             h2.setDataBase("PUBLIC");
             h2.setUsername(env.getProperty("spring.datasource.username"));
             h2.setPassword(env.getProperty("spring.datasource.password"));

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1100,6 +1100,9 @@ private String getTableFiledSql(DatasourceRequest datasourceRequest) {
             case impala:
                 sql = String.format("DESCRIBE `%s`", datasourceRequest.getTable());
                 break;
+            case h2:
+                sql = String.format("SELECT COLUMN_NAME, DATA_TYPE, REMARKS FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '%s'", datasourceRequest.getTable());
+                break;
             default:
                 break;
         }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -108,7 +108,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     columnFields.append("bigint(20)").append(",`");
                     break;
                 case 3:
-                    columnFields.append("varchar(100)").append(",`");
+                    columnFields.append("decimal(27,8)").append(",`");
                     break;
                 case 4:
                     columnFields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -217,7 +217,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                                 whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));
                             } else {
                                 if (StringUtils.equalsIgnoreCase(request.getDatasetTableField().getType(), "date")) {
-                                    whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2StrShort(Long.parseLong(value.get(0))), Utils.transLong2StrShort(Long.parseLong(value.get(1))));
+                                    whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2StrShort(Long.parseLong(value.get(0))), Utils.transLong2StrShort(Long.parseLong(value.get(1))) + " 23:59:59");
                                 } else {
                                     whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2Str(Long.parseLong(value.get(0))), Utils.transLong2Str(Long.parseLong(value.get(1))));
                                 }

File: core/core-backend/src/main/java/io/dataease/engine/utils/Utils.java
Patch:
@@ -146,6 +146,8 @@ public static String transDateFormat(String dateStyle, String datePattern) {
                 return "%Y" + split + "%u";
             case "y_M_d":
                 return "yyyy" + split + "MM" + split + "dd";
+            case "M_d":
+                return "MM" + split + "dd";
             case "H_m_s":
                 return "HH:mm:ss";
             case "y_M_d_H_m":

File: core/core-backend/src/main/java/io/dataease/menu/manage/MenuManage.java
Patch:
@@ -106,6 +106,7 @@ private boolean isXpackMenu(CoreMenu coreMenu) {
                 || coreMenu.getId().equals(60L)
                 || coreMenu.getId().equals(61L)
                 || coreMenu.getId().equals(80L)
+                || coreMenu.getId().equals(90L)
                 || coreMenu.getPid().equals(70L);
     }
 }

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/ExtDataVisualizationMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
+import io.dataease.api.permissions.user.vo.UserFormVO;
 import io.dataease.api.visualization.dto.VisualizationViewTableDTO;
 import io.dataease.api.visualization.vo.DataVisualizationBaseVO;
 import io.dataease.api.visualization.vo.DataVisualizationVO;
@@ -55,4 +56,6 @@ public interface ExtDataVisualizationMapper {
     void deleteDataVBatch(@Param("ids") Set<Long> ids);
 
     void deleteViewsBatch(@Param("ids") Set<Long> ids);
+
+    UserFormVO queryInnerUserInfo(@Param("id") Long id);
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/user/dto/UserCreator.java
Patch:
@@ -32,6 +32,7 @@ public class UserCreator implements Serializable {
     @Schema(hidden = true)
     @JsonIgnore
     private Long uid;
+    private Boolean mfaEnable = false;
     @Schema(description = "系统变量")
     private List<SysVariableValueItem> variables;
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/user/vo/UserFormVO.java
Patch:
@@ -44,6 +44,9 @@ public class UserFormVO implements Serializable {
     @Schema(description = "模式")
     private String model;
 
+    @Schema(description = "MFA状态")
+    private Boolean mfaEnable = false;
+
     @Schema(description = "系统变量")
     private List<SysVariableValueItem> variables;
 }

File: sdk/common/src/main/java/io/dataease/constant/CacheConstant.java
Patch:
@@ -8,6 +8,7 @@ public static class UserCacheConstant {
         public static final String USER_ROLES_CACHE = "de_v2_user_roles";
         public static final String USER_BUSI_PERS_CACHE = "de_v2_user_busi_pers";
         public static final String USER_BUSI_PERS_INTERACTIVE_CACHE = "de_v2_user_busi_pers_interactive";
+        public static final String USER_COMMUNITY_LANGUAGE = "de_v2_user_community_language";
     }
 
     public static class RoleCacheConstant {
@@ -28,6 +29,7 @@ public static class CommonCacheConstant {
         public static final String CUSTOM_GEO_CACHE = "de_v2_custom_geo";
         public static final String RSA_CACHE = "de_v2_rsa";
         public static final String PER_MENU_ID_CACHE = "de_v2_per_menu_id";
+        public static final String GLOBAL_MFA_CACHE = "de_v2_global_mfa";
     }
 
     public static class LicenseCacheConstant {

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -78,6 +78,8 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/websocket")
                 || StringUtils.startsWithAny(requestURI, "/map/")
                 || StringUtils.startsWithAny(requestURI, "/oauth2/")
+                || StringUtils.startsWithAny(requestURI, "/mfa/qr/")
+                || StringUtils.startsWithAny(requestURI, "/mfa/login")
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
                 || StringUtils.startsWithAny(requestURI, "/typeface/listFont")

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/ChartExtRequest.java
Patch:
@@ -16,6 +16,8 @@ public class ChartExtRequest {
 
     private List<ChartExtFilterDTO> outerParamsFilters;
 
+    private List<ChartExtFilterDTO> webParamsFilters;
+
     private List<ChartDrillRequest> drill;
 
     private String queryFrom;

File: core/core-backend/src/main/java/io/dataease/commons/utils/ExcelWatermarkUtils.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.commons.utils;
 
 import io.dataease.api.permissions.user.vo.UserFormVO;
+import io.dataease.utils.IPUtils;
 import io.dataease.visualization.dto.WatermarkContentDTO;
 import org.apache.poi.ss.usermodel.*;
 import org.apache.poi.xssf.usermodel.XSSFDrawing;
@@ -20,7 +21,7 @@
 public class ExcelWatermarkUtils {
 
     public static String transContent(String content, UserFormVO userInfo) {
-        content = content.replaceAll("\\$\\{ip}", userInfo.getIp() == null?"127.0.0.1":userInfo.getIp());
+        content = content.replaceAll("\\$\\{ip}", IPUtils.get()== null?"127.0.0.1":IPUtils.get());
         content = content.replaceAll("\\$\\{username}", userInfo.getAccount());
         content = content.replaceAll("\\$\\{nickName}", userInfo.getName());
         content = content.replaceAll("\\$\\{time}", new Date().toString());

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/ExtDataVisualizationMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
+import io.dataease.api.permissions.user.vo.UserFormVO;
 import io.dataease.api.visualization.dto.VisualizationViewTableDTO;
 import io.dataease.api.visualization.vo.DataVisualizationBaseVO;
 import io.dataease.api.visualization.vo.DataVisualizationVO;
@@ -55,4 +56,6 @@ public interface ExtDataVisualizationMapper {
     void deleteDataVBatch(@Param("ids") Set<Long> ids);
 
     void deleteViewsBatch(@Param("ids") Set<Long> ids);
+
+    UserFormVO queryInnerUserInfo(@Param("id") Long id);
 }

File: core/core-backend/src/main/java/io/dataease/commons/utils/ExcelWatermarkUtils.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.commons.utils;
 
 import io.dataease.api.permissions.user.vo.UserFormVO;
+import io.dataease.utils.IPUtils;
 import io.dataease.visualization.dto.WatermarkContentDTO;
 import org.apache.poi.ss.usermodel.*;
 import org.apache.poi.xssf.usermodel.XSSFDrawing;
@@ -20,7 +21,7 @@
 public class ExcelWatermarkUtils {
 
     public static String transContent(String content, UserFormVO userInfo) {
-        content = content.replaceAll("\\$\\{ip}", userInfo.getIp() == null?"127.0.0.1":userInfo.getIp());
+        content = content.replaceAll("\\$\\{ip}", IPUtils.get()== null?"127.0.0.1":IPUtils.get());
         content = content.replaceAll("\\$\\{username}", userInfo.getAccount());
         content = content.replaceAll("\\$\\{nickName}", userInfo.getName());
         content = content.replaceAll("\\$\\{time}", new Date().toString());

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/ExtDataVisualizationMapper.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
+import io.dataease.api.permissions.user.vo.UserFormVO;
 import io.dataease.api.visualization.dto.VisualizationViewTableDTO;
 import io.dataease.api.visualization.vo.DataVisualizationBaseVO;
 import io.dataease.api.visualization.vo.DataVisualizationVO;
@@ -55,4 +56,6 @@ public interface ExtDataVisualizationMapper {
     void deleteDataVBatch(@Param("ids") Set<Long> ids);
 
     void deleteViewsBatch(@Param("ids") Set<Long> ids);
+
+    UserFormVO queryInnerUserInfo(@Param("id") Long id);
 }

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -217,7 +217,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                                 whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));
                             } else {
                                 if (StringUtils.equalsIgnoreCase(request.getDatasetTableField().getType(), "date")) {
-                                    whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2StrShort(Long.parseLong(value.get(0))), Utils.transLong2StrShort(Long.parseLong(value.get(1))));
+                                    whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2StrShort(Long.parseLong(value.get(0))), Utils.transLong2StrShort(Long.parseLong(value.get(1))) + " 23:59:59");
                                 } else {
                                     whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2Str(Long.parseLong(value.get(0))), Utils.transLong2Str(Long.parseLong(value.get(1))));
                                 }

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -217,7 +217,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                                 whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));
                             } else {
                                 if (StringUtils.equalsIgnoreCase(request.getDatasetTableField().getType(), "date")) {
-                                    whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2StrShort(Long.parseLong(value.get(0))), Utils.transLong2StrShort(Long.parseLong(value.get(1))));
+                                    whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2StrShort(Long.parseLong(value.get(0))), Utils.transLong2StrShort(Long.parseLong(value.get(1))) + " 23:59:59");
                                 } else {
                                     whereValue = String.format(SQLConstants.WHERE_BETWEEN, Utils.transLong2Str(Long.parseLong(value.get(0))), Utils.transLong2Str(Long.parseLong(value.get(1))));
                                 }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -433,6 +433,7 @@ public DatasourceDTO update(BusiDsRequest busiDsRequest) throws DEException {
                 commonThreadPool.addTask(() -> {
                     datasourceSyncManage.extractExcelData(requestDatasource, "add_scope");
                 });
+                ExcelUtils.mergeSheets(requestDatasource, sourceData);
                 dataSourceManage.checkName(dataSourceDTO);
                 dataSourceManage.innerEdit(requestDatasource);
             }
@@ -796,9 +797,6 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                         }
                     }
                 }
-                if (CollectionUtils.isEmpty(excelSheetDataList) || excelSheetDataList.size() != datasetTableDTOS.size()) {
-                    DEException.throwException("上传文件与源文件不一致，请检查文件!");
-                }
                 excelFileData.setSheets(excelSheetDataList);
             }
         } else {

File: sdk/common/src/main/java/io/dataease/exception/GlobalExceptionHandler.java
Patch:
@@ -26,7 +26,7 @@ public ResultMessage MethodArgumentNotValidExceptionHandler(MethodArgumentNotVal
 
     @ExceptionHandler(DEException.class)
     public ResultMessage deExceptionHandler(DEException e) {
-        LogUtil.error(e.getMessage());
+        LogUtil.error(e.getMessage(), e);
         return new ResultMessage(e.getCode(),e.getMessage());
     }
 

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -433,6 +433,7 @@ public DatasourceDTO update(BusiDsRequest busiDsRequest) throws DEException {
                 commonThreadPool.addTask(() -> {
                     datasourceSyncManage.extractExcelData(requestDatasource, "add_scope");
                 });
+                ExcelUtils.mergeSheets(requestDatasource, sourceData);
                 dataSourceManage.checkName(dataSourceDTO);
                 dataSourceManage.innerEdit(requestDatasource);
             }
@@ -796,9 +797,6 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                         }
                     }
                 }
-                if (CollectionUtils.isEmpty(excelSheetDataList) || excelSheetDataList.size() != datasetTableDTOS.size()) {
-                    DEException.throwException("上传文件与源文件不一致，请检查文件!");
-                }
                 excelFileData.setSheets(excelSheetDataList);
             }
         } else {

File: sdk/common/src/main/java/io/dataease/exception/GlobalExceptionHandler.java
Patch:
@@ -26,7 +26,7 @@ public ResultMessage MethodArgumentNotValidExceptionHandler(MethodArgumentNotVal
 
     @ExceptionHandler(DEException.class)
     public ResultMessage deExceptionHandler(DEException e) {
-        LogUtil.error(e.getMessage());
+        LogUtil.error(e.getMessage(), e);
         return new ResultMessage(e.getCode(),e.getMessage());
     }
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -108,7 +108,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     columnFields.append("bigint(20)").append(",`");
                     break;
                 case 3:
-                    columnFields.append("varchar(100)").append(",`");
+                    columnFields.append("decimal(27,8)").append(",`");
                     break;
                 case 4:
                     columnFields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -108,7 +108,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     columnFields.append("bigint(20)").append(",`");
                     break;
                 case 3:
-                    columnFields.append("varchar(100)").append(",`");
+                    columnFields.append("decimal(27,8)").append(",`");
                     break;
                 case 4:
                     columnFields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -269,7 +269,7 @@ public void innerExportDetails(ChartExcelRequest request, HttpServletResponse re
                         request.getViewInfo().getChartExtRequest().setGoPage(i);
                         findExcelData(request);
                         details.addAll(request.getDetails());
-                        if ((details.size() + extractPageSize) > sheetLimit) {
+                        if ((details.size() + extractPageSize) > sheetLimit || i == chartViewDTO.getTotalPage()) {
                             detailsSheet = wb.createSheet("数据" + sheetIndex);
                             Integer[] excelTypes = request.getExcelTypes();
                             details.add(0, request.getHeader());

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -269,7 +269,7 @@ public void innerExportDetails(ChartExcelRequest request, HttpServletResponse re
                         request.getViewInfo().getChartExtRequest().setGoPage(i);
                         findExcelData(request);
                         details.addAll(request.getDetails());
-                        if ((details.size() + extractPageSize) > sheetLimit) {
+                        if ((details.size() + extractPageSize) > sheetLimit || i == chartViewDTO.getTotalPage()) {
                             detailsSheet = wb.createSheet("数据" + sheetIndex);
                             Integer[] excelTypes = request.getExcelTypes();
                             details.add(0, request.getHeader());

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -673,7 +673,7 @@ private void startViewTask(CoreExportTask exportTask, ChartExcelRequest request)
                             sheetIndex++;
                             details.clear();
                             exportTask.setExportStatus("IN_PROGRESS");
-                            double exportRogress = (double) (i / chartViewDTO.getTotalPage() + 1);
+                            double exportRogress = (double) (i / (chartViewDTO.getTotalPage() + 1));
                             DecimalFormat df = new DecimalFormat("#.##");
                             String formattedResult = df.format((exportRogress) * 100);
                             exportTask.setExportProgress(formattedResult);

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -673,7 +673,7 @@ private void startViewTask(CoreExportTask exportTask, ChartExcelRequest request)
                             sheetIndex++;
                             details.clear();
                             exportTask.setExportStatus("IN_PROGRESS");
-                            double exportRogress = (double) (i / chartViewDTO.getTotalPage() + 1);
+                            double exportRogress = (double) (i / (chartViewDTO.getTotalPage() + 1));
                             DecimalFormat df = new DecimalFormat("#.##");
                             String formattedResult = df.format((exportRogress) * 100);
                             exportTask.setExportProgress(formattedResult);

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return Optional.ofNullable(value).orElse("").replaceAll("'", "''").replaceAll("\\\\","\\\\\\\\");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "''").replaceAll("\\\\","\\\\\\\\").replace("\n", "\\n");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return Optional.ofNullable(value).orElse("").replaceAll("'", "''").replaceAll("\\\\","\\\\\\\\");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "''").replaceAll("\\\\","\\\\\\\\").replace("\n", "\\n");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -531,8 +531,8 @@ public List<VisualizationResourceVO> findRecent(@RequestBody VisualizationWorkbr
         List<VisualizationResourceVO> resourceVOS = result.getRecords();
         if (!CollectionUtils.isEmpty(resourceVOS)) {
             resourceVOS.stream().forEach(item -> {
-                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? item.getCreator() : "管理员");
-                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? item.getLastEditor() : "管理员");
+                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? "管理员" : item.getCreator());
+                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? "管理员" : item.getLastEditor());
             });
         }
         return result.getRecords();

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationStoreServer.java
Patch:
@@ -33,8 +33,8 @@ public List<VisualizationStoreVO> query(VisualizationWorkbranchQueryRequest requ
         List<VisualizationStoreVO> resourceVOS = iPage.getRecords();
         if (!CollectionUtils.isEmpty(resourceVOS)) {
             resourceVOS.stream().forEach(item -> {
-                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? item.getCreator() : "管理员");
-                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? item.getLastEditor() : "管理员");
+                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? "管理员" : item.getCreator());
+                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? "管理员" : item.getCreator());
             });
         }
         return iPage.getRecords();

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -531,8 +531,8 @@ public List<VisualizationResourceVO> findRecent(@RequestBody VisualizationWorkbr
         List<VisualizationResourceVO> resourceVOS = result.getRecords();
         if (!CollectionUtils.isEmpty(resourceVOS)) {
             resourceVOS.stream().forEach(item -> {
-                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? item.getCreator() : "管理员");
-                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? item.getLastEditor() : "管理员");
+                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? "管理员" : item.getCreator());
+                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? "管理员" : item.getLastEditor());
             });
         }
         return result.getRecords();

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationStoreServer.java
Patch:
@@ -33,8 +33,8 @@ public List<VisualizationStoreVO> query(VisualizationWorkbranchQueryRequest requ
         List<VisualizationStoreVO> resourceVOS = iPage.getRecords();
         if (!CollectionUtils.isEmpty(resourceVOS)) {
             resourceVOS.stream().forEach(item -> {
-                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? item.getCreator() : "管理员");
-                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? item.getLastEditor() : "管理员");
+                item.setCreator(StringUtils.equals(item.getCreator(), "1") ? "管理员" : item.getCreator());
+                item.setLastEditor(StringUtils.equals(item.getLastEditor(), "1") ? "管理员" : item.getCreator());
             });
         }
         return iPage.getRecords();

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -335,6 +335,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         extFilterList = extFilterList.stream().peek(ele -> {
             if (ObjectUtils.isNotEmpty(ele.getValue())) {
                 List<String> collect = ele.getValue().stream().map(SQLUtils::transKeyword).collect(Collectors.toList());
+                ele.setOriginValue(ele.getValue());
                 ele.setValue(collect);
             }
         }).collect(Collectors.toList());

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return Optional.ofNullable(value).orElse("").replaceAll("'", "''");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "''").replaceAll("\\\\","\\\\\\\\");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -335,6 +335,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         extFilterList = extFilterList.stream().peek(ele -> {
             if (ObjectUtils.isNotEmpty(ele.getValue())) {
                 List<String> collect = ele.getValue().stream().map(SQLUtils::transKeyword).collect(Collectors.toList());
+                ele.setOriginValue(ele.getValue());
                 ele.setValue(collect);
             }
         }).collect(Collectors.toList());

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return Optional.ofNullable(value).orElse("").replaceAll("'", "''");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "''").replaceAll("\\\\","\\\\\\\\");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/GroupBarHandler.java
Patch:
@@ -49,10 +49,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             if (ObjectUtils.isNotEmpty(xAxisExt) &&
                     Objects.equals(drillFields.get(0).getId(), xAxisExt.get(0).getId())) {
                 fieldsToFilter.addAll(view.getXAxis());
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackGroupBarHandler.java
Patch:
@@ -63,10 +63,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
                     fieldsToFilter.addAll(view.getXAxis());
                     fieldsToFilter.addAll(xAxisExt);
                 }
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/GroupBarHandler.java
Patch:
@@ -49,10 +49,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             if (ObjectUtils.isNotEmpty(xAxisExt) &&
                     Objects.equals(drillFields.get(0).getId(), xAxisExt.get(0).getId())) {
                 fieldsToFilter.addAll(view.getXAxis());
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackGroupBarHandler.java
Patch:
@@ -63,10 +63,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
                     fieldsToFilter.addAll(view.getXAxis());
                     fieldsToFilter.addAll(xAxisExt);
                 }
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/font/manage/FontManage.java
Patch:
@@ -155,7 +155,7 @@ private static FontDto saveFile(MultipartFile file, String fileNameUUID) throws
         FontDto fontDto = new FontDto();
         try {
             String filename = file.getOriginalFilename();
-            if (StringUtils.isEmpty(filename) || !filename.endsWith(".ttf")) {
+            if (StringUtils.isEmpty(filename) || !filename.toLowerCase().endsWith(".ttf")) {
                 DEException.throwException("非法格式的文件！");
             }
             String suffix = filename.substring(filename.lastIndexOf(".") + 1);

File: core/core-backend/src/main/java/io/dataease/font/manage/FontManage.java
Patch:
@@ -155,7 +155,7 @@ private static FontDto saveFile(MultipartFile file, String fileNameUUID) throws
         FontDto fontDto = new FontDto();
         try {
             String filename = file.getOriginalFilename();
-            if (StringUtils.isEmpty(filename) || !filename.endsWith(".ttf")) {
+            if (StringUtils.isEmpty(filename) || !filename.toLowerCase().endsWith(".ttf")) {
                 DEException.throwException("非法格式的文件！");
             }
             String suffix = filename.substring(filename.lastIndexOf(".") + 1);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/LineHandler.java
Patch:
@@ -43,7 +43,8 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var xAxisExt = formatResult.getAxisMap().get(ChartAxis.xAxisExt);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        var xAxisBase = xAxis.subList(0, xAxis.size() - xAxisExt.size());
+        var drillAxis = xAxis.stream().filter(axis -> FieldSource.DRILL == axis.getSource()).toList();
+        var xAxisBase = xAxis.subList(0, xAxis.size() - xAxisExt.size() - drillAxis.size());
         return ChartDataBuild.transBaseGroupDataAntV(xAxisBase, xAxis, xAxisExt, yAxis, view, data, isDrill);
     }
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/LineHandler.java
Patch:
@@ -43,7 +43,8 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var xAxisExt = formatResult.getAxisMap().get(ChartAxis.xAxisExt);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        var xAxisBase = xAxis.subList(0, xAxis.size() - xAxisExt.size());
+        var drillAxis = xAxis.stream().filter(axis -> FieldSource.DRILL == axis.getSource()).toList();
+        var xAxisBase = xAxis.subList(0, xAxis.size() - xAxisExt.size() - drillAxis.size());
         return ChartDataBuild.transBaseGroupDataAntV(xAxisBase, xAxis, xAxisExt, yAxis, view, data, isDrill);
     }
 

File: sdk/common/src/main/java/io/dataease/constant/StaticResourceConstants.java
Patch:
@@ -21,8 +21,8 @@ public class StaticResourceConstants {
     public static String REPORT_DIR  = ensureSuffix(USER_HOME, FILE_SEPARATOR) + "report";
     public static String PLUGIN_DIR  = ensureSuffix(USER_HOME, FILE_SEPARATOR) + "plugin";
 
-    public static String MAP_URL = FILE_SEPARATOR + "map";
-    public static String GEO_URL = FILE_SEPARATOR +"geo";
+    public static String MAP_URL = "/map";
+    public static String GEO_URL = "/geo";
 
     /**
      * Upload prefix.

File: sdk/common/src/main/java/io/dataease/constant/StaticResourceConstants.java
Patch:
@@ -21,8 +21,8 @@ public class StaticResourceConstants {
     public static String REPORT_DIR  = ensureSuffix(USER_HOME, FILE_SEPARATOR) + "report";
     public static String PLUGIN_DIR  = ensureSuffix(USER_HOME, FILE_SEPARATOR) + "plugin";
 
-    public static String MAP_URL = FILE_SEPARATOR + "map";
-    public static String GEO_URL = FILE_SEPARATOR +"geo";
+    public static String MAP_URL = "/map";
+    public static String GEO_URL = "/geo";
 
     /**
      * Upload prefix.

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -44,7 +44,7 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
         Map<String, Object> mapSize = (Map<String, Object>) mapAttr.get("basicStyle");
         var tablePageMode = (String) mapSize.get("tablePageMode");
         formatResult.getContext().put("tablePageMode", tablePageMode);
-        if (StringUtils.equalsIgnoreCase(tablePageMode, "page") && !view.getIsExcelExport()) {
+        if (StringUtils.equalsIgnoreCase(tablePageMode, "page")) {
             if (chartExtRequest.getGoPage() == null) {
                 chartExtRequest.setGoPage(1L);
             }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -127,7 +127,6 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
         logger.debug("calcite chart sql: " + querySql);
-        System.out.println(querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         //自定义排序
         data = ChartDataUtil.resultCustomSort(xAxis, data);

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -106,6 +106,7 @@ public ChartViewDTO findExcelData(ChartExcelRequest request) {
             Integer[] dsTypes = null;
             //downloadType = dataset 为下载原始名字 这里做数据转换模拟 table-info类型图表导出
             if ("dataset".equals(request.getDownloadType())) {
+                viewDTO.setResultMode(ChartConstants.VIEW_RESULT_MODE.ALL);
                 viewDTO.setType("table-info");
                 List<DatasetTableFieldDTO> sourceFields = datasetFieldServer.listByDatasetGroup(viewDTO.getTableId());
                 List<String> fileNames = permissionManage.filterColumnPermissions(sourceFields, new HashMap<>(), viewDTO.getTableId(), null).stream().map(DatasetTableFieldDTO::getDataeaseName).collect(Collectors.toList());

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -673,7 +673,7 @@ private void startViewTask(CoreExportTask exportTask, ChartExcelRequest request)
                         request.getViewInfo().getChartExtRequest().setGoPage(i);
                         chartDataServer.findExcelData(request);
                         details.addAll(request.getDetails());
-                        if ((details.size() + extractPageSize) > sheetLimit) {
+                        if (((details.size() + extractPageSize) > sheetLimit) || i == chartViewDTO.getTotalPage()) {
                             detailsSheet = wb.createSheet("数据" + sheetIndex);
                             Integer[] excelTypes = request.getExcelTypes();
                             details.add(0, request.getHeader());

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -486,6 +486,7 @@ public List<ExcelSheetData> parseExcel(String filename, InputStream inputStream,
                 tableFiled.setName(filedName);
                 tableFiled.setOriginName(filedName);
                 tableFiled.setFieldType(null);
+                tableFiled.setChecked(true);
                 fields.add(tableFiled);
             }
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/numeric/NumericalChartHandler.java
Patch:
@@ -60,6 +60,9 @@ protected ChartViewFieldDTO getDynamicField(Map<String, Object> target, String t
         String maxType = (String) target.get(type);
         if (StringUtils.equalsIgnoreCase("dynamic", maxType)) {
             Map<String, Object> maxField = (Map<String, Object>) target.get(field);
+            if (maxField.get("id") == null || StringUtils.isEmpty(maxField.get("id").toString())) {
+                DEException.throwException(Translator.get("i18n_gauge_field_delete"));
+            }
             Long id = Long.valueOf((String) maxField.get("id"));
             String summary = (String) maxField.get("summary");
             DatasetTableFieldDTO datasetTableField = datasetTableFieldManage.selectById(id);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -486,6 +486,7 @@ public List<ExcelSheetData> parseExcel(String filename, InputStream inputStream,
                 tableFiled.setName(filedName);
                 tableFiled.setOriginName(filedName);
                 tableFiled.setFieldType(null);
+                tableFiled.setChecked(true);
                 fields.add(tableFiled);
             }
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -429,7 +429,7 @@ public Map<String, Object> previewSql(PreviewSqlDTO dto) throws DEException {
             if (ObjectUtils.isEmpty(list)) {
                 return null;
             }
-            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(SqlPlaceholderConstants.TABLE_PLACEHOLDER, 100, 0, String.format(SQLConstants.FIELD_DOT, list.get(0).getOriginName()) + " ASC ");
+            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(SqlPlaceholderConstants.TABLE_PLACEHOLDER, 100, 0, String.format(SQLConstants.FIELD_DOT_FIX, list.get(0).getOriginName()) + " ASC ");
         } else {
             sql = SQLUtils.buildOriginPreviewSql(SqlPlaceholderConstants.TABLE_PLACEHOLDER, 100, 0);
         }

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -49,6 +49,8 @@ public class SQLConstants {
 
     public static final String FIELD_DOT = "%s";
 
+    public static final String FIELD_DOT_FIX = "`%s`";
+
     public static final String UNIX_TIMESTAMP = "DE_UNIX_TIMESTAMP(%s)";
 
     public static final String DE_DATE_FORMAT = "DE_DATE_FORMAT(%s,'%s')";

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -429,7 +429,7 @@ public Map<String, Object> previewSql(PreviewSqlDTO dto) throws DEException {
             if (ObjectUtils.isEmpty(list)) {
                 return null;
             }
-            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(SqlPlaceholderConstants.TABLE_PLACEHOLDER, 100, 0, String.format(SQLConstants.FIELD_DOT, list.get(0).getOriginName()) + " ASC ");
+            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(SqlPlaceholderConstants.TABLE_PLACEHOLDER, 100, 0, String.format(SQLConstants.FIELD_DOT_FIX, list.get(0).getOriginName()) + " ASC ");
         } else {
             sql = SQLUtils.buildOriginPreviewSql(SqlPlaceholderConstants.TABLE_PLACEHOLDER, 100, 0);
         }

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -49,6 +49,8 @@ public class SQLConstants {
 
     public static final String FIELD_DOT = "%s";
 
+    public static final String FIELD_DOT_FIX = "`%s`";
+
     public static final String UNIX_TIMESTAMP = "DE_UNIX_TIMESTAMP(%s)";
 
     public static final String DE_DATE_FORMAT = "DE_DATE_FORMAT(%s,'%s')";

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationOuterParamsService.java
Patch:
@@ -79,6 +79,9 @@ public void updateOuterParamsSet(VisualizationOuterParamsDTO outerParamsDTO) {
         extOuterParamsMapper.deleteOuterParamsTargetWithVisualizationId(visualizationId);
         extOuterParamsMapper.deleteOuterParamsInfoWithVisualizationId(visualizationId);
         extOuterParamsMapper.deleteOuterParamsWithVisualizationId(visualizationId);
+        if(CollectionUtils.isEmpty(outerParamsDTO.getOuterParamsInfoArray())){
+            return;
+        }
         // 插入新的数据
         String paramsId = UUID.randomUUID().toString();
         outerParamsDTO.setParamsId(paramsId);

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationOuterParamsService.java
Patch:
@@ -79,6 +79,9 @@ public void updateOuterParamsSet(VisualizationOuterParamsDTO outerParamsDTO) {
         extOuterParamsMapper.deleteOuterParamsTargetWithVisualizationId(visualizationId);
         extOuterParamsMapper.deleteOuterParamsInfoWithVisualizationId(visualizationId);
         extOuterParamsMapper.deleteOuterParamsWithVisualizationId(visualizationId);
+        if(CollectionUtils.isEmpty(outerParamsDTO.getOuterParamsInfoArray())){
+            return;
+        }
         // 插入新的数据
         String paramsId = UUID.randomUUID().toString();
         outerParamsDTO.setParamsId(paramsId);

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/CoreStoreExtMapper.java
Patch:
@@ -21,7 +21,7 @@ public interface CoreStoreExtMapper {
             v.name,
             v.mobile_layout as ext_flag
             from core_store s
-            left join data_visualization_info v on s.resource_id = v.id
+            inner join data_visualization_info v on s.resource_id = v.id
             ${ew.customSqlSegment}
             """)
     IPage<StorePO> query(IPage<StorePO> page, @Param("ew") QueryWrapper<Object> ew);

File: core/core-backend/src/main/java/io/dataease/visualization/manage/VisualizationStoreManage.java
Patch:
@@ -97,6 +97,7 @@ public IPage<StorePO> queryStorePage(int goPage, int pageSize, VisualizationWork
         Long uid = AuthUtils.getUser().getUserId();
         QueryWrapper<Object> queryWrapper = new QueryWrapper<>();
         queryWrapper.eq("s.uid", uid);
+        queryWrapper.isNotNull("s.resource_id");
         if (StringUtils.isNotBlank(request.getType())) {
             BusiResourceEnum busiResourceEnum = BusiResourceEnum.valueOf(request.getType().toUpperCase());
             if (ObjectUtils.isEmpty(busiResourceEnum)) {

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/CoreStoreExtMapper.java
Patch:
@@ -21,7 +21,7 @@ public interface CoreStoreExtMapper {
             v.name,
             v.mobile_layout as ext_flag
             from core_store s
-            left join data_visualization_info v on s.resource_id = v.id
+            inner join data_visualization_info v on s.resource_id = v.id
             ${ew.customSqlSegment}
             """)
     IPage<StorePO> query(IPage<StorePO> page, @Param("ew") QueryWrapper<Object> ew);

File: core/core-backend/src/main/java/io/dataease/visualization/manage/VisualizationStoreManage.java
Patch:
@@ -97,6 +97,7 @@ public IPage<StorePO> queryStorePage(int goPage, int pageSize, VisualizationWork
         Long uid = AuthUtils.getUser().getUserId();
         QueryWrapper<Object> queryWrapper = new QueryWrapper<>();
         queryWrapper.eq("s.uid", uid);
+        queryWrapper.isNotNull("s.resource_id");
         if (StringUtils.isNotBlank(request.getType())) {
             BusiResourceEnum busiResourceEnum = BusiResourceEnum.valueOf(request.getType().toUpperCase());
             if (ObjectUtils.isEmpty(busiResourceEnum)) {

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/numeric/NumericalChartHandler.java
Patch:
@@ -60,6 +60,9 @@ protected ChartViewFieldDTO getDynamicField(Map<String, Object> target, String t
         String maxType = (String) target.get(type);
         if (StringUtils.equalsIgnoreCase("dynamic", maxType)) {
             Map<String, Object> maxField = (Map<String, Object>) target.get(field);
+            if (maxField.get("id") == null || StringUtils.isEmpty(maxField.get("id").toString())) {
+                DEException.throwException(Translator.get("i18n_gauge_field_delete"));
+            }
             Long id = Long.valueOf((String) maxField.get("id"));
             String summary = (String) maxField.get("summary");
             DatasetTableFieldDTO datasetTableField = datasetTableFieldManage.selectById(id);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -486,6 +486,7 @@ public List<ExcelSheetData> parseExcel(String filename, InputStream inputStream,
                 tableFiled.setName(filedName);
                 tableFiled.setOriginName(filedName);
                 tableFiled.setFieldType(null);
+                tableFiled.setChecked(true);
                 fields.add(tableFiled);
             }
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -44,7 +44,7 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
         Map<String, Object> mapSize = (Map<String, Object>) mapAttr.get("basicStyle");
         var tablePageMode = (String) mapSize.get("tablePageMode");
         formatResult.getContext().put("tablePageMode", tablePageMode);
-        if (StringUtils.equalsIgnoreCase(tablePageMode, "page") && !view.getIsExcelExport()) {
+        if (StringUtils.equalsIgnoreCase(tablePageMode, "page")) {
             if (chartExtRequest.getGoPage() == null) {
                 chartExtRequest.setGoPage(1L);
             }
@@ -127,6 +127,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
         logger.debug("calcite chart sql: " + querySql);
+        System.out.println(querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         //自定义排序
         data = ChartDataUtil.resultCustomSort(xAxis, data);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -97,7 +97,6 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                         fieldDTO = allField;
                     }
                 }
-                assert fieldDTO != null;
                 if (fieldDTO != null && fieldDTO.isAgg()) {
                     sqlMeta.getXFields().get(i).setFieldName("'-'");
                 }

File: core/core-backend/src/main/java/io/dataease/config/MybatisConfig.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import io.dataease.commons.utils.MybatisInterceptorConfig;
+import io.dataease.datasource.dao.auto.entity.CoreDatasource;
 import io.dataease.datasource.dao.auto.entity.CoreDeEngine;
 import io.dataease.interceptor.MybatisInterceptor;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
@@ -22,6 +23,7 @@ public MybatisInterceptor dbInterceptor() {
         MybatisInterceptor interceptor = new MybatisInterceptor();
         List<MybatisInterceptorConfig> configList = new ArrayList<>();
         configList.add(new MybatisInterceptorConfig(CoreDeEngine.class, "configuration"));
+        configList.add(new MybatisInterceptorConfig(CoreDatasource.class, "configuration"));
         interceptor.setInterceptorConfigList(configList);
         return interceptor;
     }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -703,7 +703,7 @@ public List<TableField> getTableField(Map<String, String> req) throws DEExceptio
         String datasourceId = req.get("datasourceId");
         DatasetTableDTO datasetTableDTO = new DatasetTableDTO();
         datasetTableDTO.setDatasourceId(Long.valueOf(datasourceId));
-        if (!getTables(datasetTableDTO).stream().map(DatasetTableDTO::getTableName).collect(Collectors.toList()).contains("tableName")) {
+        if (!getTables(datasetTableDTO).stream().map(DatasetTableDTO::getTableName).collect(Collectors.toList()).contains(tableName)) {
             DEException.throwException("无效的表名！");
         }
         CoreDatasource coreDatasource = datasourceMapper.selectById(datasourceId);
@@ -817,7 +817,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                             sheet.setDeTableName(datasetTableDTO.getTableName());
                             datasourceRequest.setTable(datasetTableDTO.getTableName());
                             List<TableField> oldTableFields = ExcelUtils.getTableFields(datasourceRequest);
-                            mergeFields(sheet.getFields(), oldTableFields);
+                            mergeFields(oldTableFields, sheet.getFields());
                         }
                     }
                     if (!find) {
@@ -866,7 +866,7 @@ private boolean isEqual(List<TableField> newTableFields, List<TableField> oldTab
     }
 
     private void mergeFields(List<TableField> oldFields, List<TableField> newFields) {
-        oldFields.forEach(tableField -> tableField.setChecked(false));
+        newFields.forEach(tableField -> tableField.setChecked(false));
         for (TableField newField : newFields) {
             for (TableField oldField : oldFields) {
                 if (oldField.getName().equals(newField.getName())) {

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -97,7 +97,6 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                         fieldDTO = allField;
                     }
                 }
-                assert fieldDTO != null;
                 if (fieldDTO != null && fieldDTO.isAgg()) {
                     sqlMeta.getXFields().get(i).setFieldName("'-'");
                 }

File: core/core-backend/src/main/java/io/dataease/config/MybatisConfig.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import io.dataease.commons.utils.MybatisInterceptorConfig;
+import io.dataease.datasource.dao.auto.entity.CoreDatasource;
 import io.dataease.datasource.dao.auto.entity.CoreDeEngine;
 import io.dataease.interceptor.MybatisInterceptor;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
@@ -22,6 +23,7 @@ public MybatisInterceptor dbInterceptor() {
         MybatisInterceptor interceptor = new MybatisInterceptor();
         List<MybatisInterceptorConfig> configList = new ArrayList<>();
         configList.add(new MybatisInterceptorConfig(CoreDeEngine.class, "configuration"));
+        configList.add(new MybatisInterceptorConfig(CoreDatasource.class, "configuration"));
         interceptor.setInterceptorConfigList(configList);
         return interceptor;
     }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -703,7 +703,7 @@ public List<TableField> getTableField(Map<String, String> req) throws DEExceptio
         String datasourceId = req.get("datasourceId");
         DatasetTableDTO datasetTableDTO = new DatasetTableDTO();
         datasetTableDTO.setDatasourceId(Long.valueOf(datasourceId));
-        if (!getTables(datasetTableDTO).stream().map(DatasetTableDTO::getTableName).collect(Collectors.toList()).contains("tableName")) {
+        if (!getTables(datasetTableDTO).stream().map(DatasetTableDTO::getTableName).collect(Collectors.toList()).contains(tableName)) {
             DEException.throwException("无效的表名！");
         }
         CoreDatasource coreDatasource = datasourceMapper.selectById(datasourceId);
@@ -817,7 +817,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                             sheet.setDeTableName(datasetTableDTO.getTableName());
                             datasourceRequest.setTable(datasetTableDTO.getTableName());
                             List<TableField> oldTableFields = ExcelUtils.getTableFields(datasourceRequest);
-                            mergeFields(sheet.getFields(), oldTableFields);
+                            mergeFields(oldTableFields, sheet.getFields());
                         }
                     }
                     if (!find) {
@@ -866,7 +866,7 @@ private boolean isEqual(List<TableField> newTableFields, List<TableField> oldTab
     }
 
     private void mergeFields(List<TableField> oldFields, List<TableField> newFields) {
-        oldFields.forEach(tableField -> tableField.setChecked(false));
+        newFields.forEach(tableField -> tableField.setChecked(false));
         for (TableField newField : newFields) {
             for (TableField oldField : oldFields) {
                 if (oldField.getName().equals(newField.getName())) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -335,9 +335,6 @@ private String cellType(String value) {
             Double d = Double.valueOf(value);
             double eps = 1e-10;
             if (d - Math.floor(d) < eps) {
-                if (value.length() > 1 && value.startsWith("0")) {
-                    return "TEXT";
-                }
                 return "LONG";
             } else {
                 return "DOUBLE";
@@ -440,6 +437,7 @@ public List<ExcelSheetData> parseExcel(String filename, InputStream inputStream,
                     tableFiled.setFieldType(null);
                     tableFiled.setName(s);
                     tableFiled.setOriginName(s);
+                    tableFiled.setChecked(true);
                     fields.add(tableFiled);
                 }
                 List<String[]> data = new ArrayList<>(noModelDataListener.getData());

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/ExcelSheetData.java
Patch:
@@ -21,5 +21,6 @@ public class ExcelSheetData {
     private String sheetId;
     private String sheetExcelId;
     private List<Map<String, Object>> jsonArray;
+    private boolean newSheet;
 
 }

File: core/core-backend/src/main/java/io/dataease/MybatisPlusGenerator.java
Patch:
@@ -21,11 +21,11 @@ public class MybatisPlusGenerator {
     /**
      * 业务模块例如datasource,dataset,panel等
      */
-    private static final String busi = "chart";
+    private static final String busi = "visualization";
     /**
      * 这是要生成代码的表名称
      */
-    private static final String TABLE_NAME = "core_chart_view";
+    private static final String TABLE_NAME = "visualization_link_jump_target_view_info";
 
     /**
      * 下面两个配置基本上不用动

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -451,8 +451,9 @@ private SQLObj getUnionTable(DatasetTableDTO currentDs, DatasetTableInfoDTO info
         } else if (StringUtils.equalsIgnoreCase(currentDs.getType(), DatasetTableTypeConstants.DATASET_TABLE_SQL)) {
             Provider provider = ProviderFactory.getProvider(dsMap.entrySet().iterator().next().getValue().getType());
             // parser sql params and replace default value
-            String sql = provider.replaceComment(new String(Base64.getDecoder().decode(infoDTO.getSql())));
-            sql = SqlparserUtils.handleVariableDefaultValue(sql, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage);
+            String s = new String(Base64.getDecoder().decode(infoDTO.getSql()));
+            String sql = SqlparserUtils.handleVariableDefaultValue(s, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage);
+            sql = provider.replaceComment(sql);
             // add table schema
             if (isCross) {
                 sql = SqlUtils.addSchema(sql, tableSchema);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -437,6 +437,7 @@ public List<ExcelSheetData> parseExcel(String filename, InputStream inputStream,
                     tableFiled.setFieldType(null);
                     tableFiled.setName(s);
                     tableFiled.setOriginName(s);
+                    tableFiled.setChecked(true);
                     fields.add(tableFiled);
                 }
                 List<String[]> data = new ArrayList<>(noModelDataListener.getData());

File: core/core-backend/src/main/java/io/dataease/menu/manage/MenuManage.java
Patch:
@@ -105,6 +105,7 @@ private boolean isXpackMenu(CoreMenu coreMenu) {
                 || coreMenu.getId().equals(50L)
                 || coreMenu.getId().equals(60L)
                 || coreMenu.getId().equals(61L)
+                || coreMenu.getId().equals(80L)
                 || coreMenu.getPid().equals(70L);
     }
 }

File: core/core-backend/src/main/java/io/dataease/visualization/dao/auto/mapper/DataVisualizationInfoMapper.java
Patch:
@@ -10,7 +10,7 @@
  * </p>
  *
  * @author fit2cloud
- * @since 2024-11-18
+ * @since 2024-11-22
  */
 @Mapper
 public interface DataVisualizationInfoMapper extends BaseMapper<DataVisualizationInfo> {

File: core/core-backend/src/main/java/io/dataease/visualization/dao/auto/mapper/VisualizationLinkJumpTargetViewInfoMapper.java
Patch:
@@ -6,11 +6,11 @@
 
 /**
  * <p>
- *  Mapper 接口
+ * 跳转目标仪表板图表字段配置表 Mapper 接口
  * </p>
  *
  * @author fit2cloud
- * @since 2023-09-22
+ * @since 2024-11-20
  */
 @Mapper
 public interface VisualizationLinkJumpTargetViewInfoMapper extends BaseMapper<VisualizationLinkJumpTargetViewInfo> {

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/ExtVisualizationOuterParamsMapper.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.api.dataset.vo.CoreDatasetGroupVO;
 import io.dataease.api.visualization.dto.VisualizationOuterParamsDTO;
 import io.dataease.api.visualization.dto.VisualizationOuterParamsInfoDTO;
+import io.dataease.visualization.dao.auto.entity.VisualizationOuterParamsInfo;
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
@@ -22,5 +23,7 @@ public interface ExtVisualizationOuterParamsMapper {
 
     List<VisualizationOuterParamsInfoDTO> getVisualizationOuterParamsInfo(@Param("visualizationId") String visualizationId);
 
+    List<VisualizationOuterParamsInfo> getVisualizationOuterParamsInfoBase(@Param("visualizationId") String visualizationId);
+
     List<CoreDatasetGroupVO> queryDsWithVisualizationId(@Param("visualizationId") String visualizationId);
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/DatasourceApi.java
Patch:
@@ -159,4 +159,7 @@ public interface DatasourceApi {
 
     List<DatasourceDTO> innerList(List<Long> ids, List<String> types) throws DEException;
 
+    @GetMapping("/simple/{id}")
+    DsSimpleVO simple(@PathVariable("id") Long id);
+
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/ExcelSheetData.java
Patch:
@@ -21,5 +21,6 @@ public class ExcelSheetData {
     private String sheetId;
     private String sheetExcelId;
     private List<Map<String, Object>> jsonArray;
+    private boolean newSheet;
 
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/visualization/dto/VisualizationComponentDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.api.visualization.dto;
 
+import io.dataease.api.visualization.vo.VisualizationOutParamsJumpVO;
 import io.dataease.api.visualization.vo.VisualizationViewTableVO;
 import lombok.AllArgsConstructor;
 import lombok.Data;
@@ -20,4 +21,6 @@ public class VisualizationComponentDTO {
 
     List<VisualizationViewTableVO> visualizationViewTables;
 
+    List<VisualizationOutParamsJumpVO> outParamsJumpInfo;
+
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/DataFillingApi.java
Patch:
@@ -110,6 +110,9 @@ public interface DataFillingApi {
     @PostMapping("/user-task/page/{goPage}/{pageSize}")
     IPage<DfUserTaskVo> listUserTask(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfUserTaskRequest request) throws Exception;
 
+    @PostMapping("/user-task/todo/count")
+    long countUserTodoList() throws Exception;
+
     @GetMapping("/user-task/list/{id}")
     DfUserTaskData listUserTaskData(@PathVariable("id") Long id) throws Exception;
 

File: sdk/common/src/main/java/io/dataease/constant/XpackSettingConstants.java
Patch:
@@ -13,4 +13,7 @@ public class XpackSettingConstants {
     public static final String THRSHOLD_LOG_LIVE_TIME = "basic.thresholdLogLiveTime";
     public static final String DEFAULT_SORT = "basic.defaultSort";
     public static final String DEFAULT_OPEN = "basic.defaultOpen";
+    public static final String LOGIN_LIMIT = "basic.loginLimit";
+    public static final String LOGIN_LIMIT_RATE = "basic.loginLimitRate";
+    public static final String LOGIN_LIMIT_TIME = "basic.loginLimitTime";
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -335,9 +335,6 @@ private String cellType(String value) {
             Double d = Double.valueOf(value);
             double eps = 1e-10;
             if (d - Math.floor(d) < eps) {
-                if (value.length() > 1 && value.startsWith("0")) {
-                    return "TEXT";
-                }
                 return "LONG";
             } else {
                 return "DOUBLE";

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartViewManege.java
Patch:
@@ -138,7 +138,9 @@ public List<ChartViewDTO> listBySceneId(Long sceneId) {
                 Map<Long, List<CoreDatasetTableField>> groupedByTableId = coreDatasetTableFields.stream()
                         .collect(Collectors.groupingBy(CoreDatasetTableField::getDatasetGroupId));
                 chartViewDTOS.forEach(dto ->{
-                    dto.setCalParams(Utils.getParams(datasetTableFieldManage.transDTO(groupedByTableId.get(dto.getTableId()))));
+                    if(dto.getTableId() !=null){
+                        dto.setCalParams(Utils.getParams(datasetTableFieldManage.transDTO(groupedByTableId.get(dto.getTableId()))));
+                    }
                 });
             }
 

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartViewManege.java
Patch:
@@ -138,7 +138,9 @@ public List<ChartViewDTO> listBySceneId(Long sceneId) {
                 Map<Long, List<CoreDatasetTableField>> groupedByTableId = coreDatasetTableFields.stream()
                         .collect(Collectors.groupingBy(CoreDatasetTableField::getDatasetGroupId));
                 chartViewDTOS.forEach(dto ->{
-                    dto.setCalParams(Utils.getParams(datasetTableFieldManage.transDTO(groupedByTableId.get(dto.getTableId()))));
+                    if(dto.getTableId() !=null){
+                        dto.setCalParams(Utils.getParams(datasetTableFieldManage.transDTO(groupedByTableId.get(dto.getTableId()))));
+                    }
                 });
             }
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -580,6 +580,7 @@ private static void setProperty(ApiDefinition apiDefinition, Map<String, Object>
                     o.put("checked", true);
                     o.put("name", field.getName());
                     o.put("primaryKey", field.isPrimaryKey());
+                    o.put("length", field.getLength());
                     o.put("deExtractType", field.getDeExtractType());
                 }
             }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/EngineProvider.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.datasource.dao.auto.entity.CoreDeEngine;
 import io.dataease.datasource.request.EngineRequest;
+import io.dataease.datasource.server.DatasourceServer;
 import io.dataease.extensions.datasource.dto.TableField;
 
 import java.util.List;
@@ -21,7 +22,7 @@ public abstract class EngineProvider {
 
     public abstract String createTableSql(String name, List<TableField> tableFields, CoreDeEngine engine);
 
-    public abstract String insertSql(String name, List<String[]> dataList, int page, int pageNumber);
+    public abstract String insertSql(String tableName, DatasourceServer.UpdateType extractType, List<String[]> dataList, int page, int pageNumber, List<TableField> tableFields);
 
 
 }

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/TableField.java
Patch:
@@ -14,6 +14,7 @@ public class TableField implements Serializable {
     private int precision;
     private long size;
     private int scale;
+    private String length;
     private boolean checked = false;
     private boolean primaryKey = false;
     private String fieldType;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -451,8 +451,9 @@ private SQLObj getUnionTable(DatasetTableDTO currentDs, DatasetTableInfoDTO info
         } else if (StringUtils.equalsIgnoreCase(currentDs.getType(), DatasetTableTypeConstants.DATASET_TABLE_SQL)) {
             Provider provider = ProviderFactory.getProvider(dsMap.entrySet().iterator().next().getValue().getType());
             // parser sql params and replace default value
-            String sql = provider.replaceComment(new String(Base64.getDecoder().decode(infoDTO.getSql())));
-            sql = SqlparserUtils.handleVariableDefaultValue(sql, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage);
+            String s = new String(Base64.getDecoder().decode(infoDTO.getSql()));
+            String sql = SqlparserUtils.handleVariableDefaultValue(s, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage);
+            sql = provider.replaceComment(sql);
             // add table schema
             if (isCross) {
                 sql = SqlUtils.addSchema(sql, tableSchema);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -451,8 +451,9 @@ private SQLObj getUnionTable(DatasetTableDTO currentDs, DatasetTableInfoDTO info
         } else if (StringUtils.equalsIgnoreCase(currentDs.getType(), DatasetTableTypeConstants.DATASET_TABLE_SQL)) {
             Provider provider = ProviderFactory.getProvider(dsMap.entrySet().iterator().next().getValue().getType());
             // parser sql params and replace default value
-            String sql = provider.replaceComment(new String(Base64.getDecoder().decode(infoDTO.getSql())));
-            sql = SqlparserUtils.handleVariableDefaultValue(sql, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage);
+            String s = new String(Base64.getDecoder().decode(infoDTO.getSql()));
+            String sql = SqlparserUtils.handleVariableDefaultValue(s, currentDs.getSqlVariableDetails(), false, isFromDataSet, parameters, isCross, dsMap, pluginManage);
+            sql = provider.replaceComment(sql);
             // add table schema
             if (isCross) {
                 sql = SqlUtils.addSchema(sql, tableSchema);

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -349,7 +349,8 @@ public void addTask(String exportFrom, String exportFromType, ChartExcelRequest
         startViewTask(exportTask, request);
     }
 
-    public void addTask(Long exportFrom, String exportFromType, DataSetExportRequest request) {
+    public void addTask(Long exportFrom, String exportFromType, DataSetExportRequest request)throws Exception{
+        datasetGroupManage.getDatasetGroupInfoDTO(exportFrom, null);
         CoreExportTask exportTask = new CoreExportTask();
         exportTask.setId(UUID.randomUUID().toString());
         exportTask.setUserId(AuthUtils.getUser().getUserId());

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -349,7 +349,8 @@ public void addTask(String exportFrom, String exportFromType, ChartExcelRequest
         startViewTask(exportTask, request);
     }
 
-    public void addTask(Long exportFrom, String exportFromType, DataSetExportRequest request) {
+    public void addTask(Long exportFrom, String exportFromType, DataSetExportRequest request)throws Exception{
+        datasetGroupManage.getDatasetGroupInfoDTO(exportFrom, null);
         CoreExportTask exportTask = new CoreExportTask();
         exportTask.setId(UUID.randomUUID().toString());
         exportTask.setUserId(AuthUtils.getUser().getUserId());

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/DatasourceDriverApi.java
Patch:
@@ -33,13 +33,13 @@ public interface DatasourceDriverApi {
     @PostMapping("/update")
     DriveDTO update(@RequestBody DriveDTO datasourceDrive);
 
-    @DeleteMapping("/delete/{driverId}")
+    @PostMapping("/delete/{driverId}")
     void delete(@PathVariable("driverId") String driverId);
 
     @GetMapping("/listDriverJar/{driverId}")
     List<DriveJarDTO> listDriverJar(@PathVariable("driverId") String driverId);
 
-    @DeleteMapping("/deleteDriverJar/{jarId}")
+    @PostMapping("/deleteDriverJar/{jarId}")
     void deleteDriverJar(@PathVariable("jarId") String jarId);
 
     @PostMapping("/uploadJar")

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/api/TaskApi.java
Patch:
@@ -28,7 +28,7 @@ public interface TaskApi {
     @PostMapping("/update")
     void update(@RequestBody TaskInfoDTO jobInfo) throws DEException;
 
-    @DeleteMapping("/remove/{id}")
+    @PostMapping("/remove/{id}")
     void remove(@PathVariable(value = "id") String id) throws DEException;
 
     @GetMapping("start/{id}")

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/api/TaskLogApi.java
Patch:
@@ -27,10 +27,10 @@ public interface TaskLogApi {
     @PostMapping("/update")
     void updateLog(@RequestBody TaskLogVO logDetail);
 
-    @DeleteMapping("/deleteByJobId/{jobId}")
+    @PostMapping("/deleteByJobId/{jobId}")
     void deleteByJobId(@PathVariable("jobId") String jobId);
 
-    @DeleteMapping("/delete/{logId}")
+    @PostMapping("/delete/{logId}")
     void deleteById(@PathVariable("logId") String logId);
 
     @PostMapping("/clear")

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/DatasourceDriverApi.java
Patch:
@@ -33,13 +33,13 @@ public interface DatasourceDriverApi {
     @PostMapping("/update")
     DriveDTO update(@RequestBody DriveDTO datasourceDrive);
 
-    @DeleteMapping("/delete/{driverId}")
+    @PostMapping("/delete/{driverId}")
     void delete(@PathVariable("driverId") String driverId);
 
     @GetMapping("/listDriverJar/{driverId}")
     List<DriveJarDTO> listDriverJar(@PathVariable("driverId") String driverId);
 
-    @DeleteMapping("/deleteDriverJar/{jarId}")
+    @PostMapping("/deleteDriverJar/{jarId}")
     void deleteDriverJar(@PathVariable("jarId") String jarId);
 
     @PostMapping("/uploadJar")

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/api/TaskApi.java
Patch:
@@ -28,7 +28,7 @@ public interface TaskApi {
     @PostMapping("/update")
     void update(@RequestBody TaskInfoDTO jobInfo) throws DEException;
 
-    @DeleteMapping("/remove/{id}")
+    @PostMapping("/remove/{id}")
     void remove(@PathVariable(value = "id") String id) throws DEException;
 
     @GetMapping("start/{id}")

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/api/TaskLogApi.java
Patch:
@@ -27,10 +27,10 @@ public interface TaskLogApi {
     @PostMapping("/update")
     void updateLog(@RequestBody TaskLogVO logDetail);
 
-    @DeleteMapping("/deleteByJobId/{jobId}")
+    @PostMapping("/deleteByJobId/{jobId}")
     void deleteByJobId(@PathVariable("jobId") String jobId);
 
-    @DeleteMapping("/delete/{logId}")
+    @PostMapping("/delete/{logId}")
     void deleteById(@PathVariable("logId") String logId);
 
     @PostMapping("/clear")

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/FormatterCfgDTO.java
Patch:
@@ -11,5 +11,5 @@ public class FormatterCfgDTO {
     private Integer unit = 1; // 换算单位
     private String suffix = ""; // 单位后缀
     private Integer decimalCount = 2; // 小数位数
-    private Boolean thousandSeparator = true; // 千分符
+    private Boolean thousandSeparator = false; // 千分符
 }

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/FormatterCfgDTO.java
Patch:
@@ -11,5 +11,5 @@ public class FormatterCfgDTO {
     private Integer unit = 1; // 换算单位
     private String suffix = ""; // 单位后缀
     private Integer decimalCount = 2; // 小数位数
-    private Boolean thousandSeparator = true; // 千分符
+    private Boolean thousandSeparator = false; // 千分符
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/dto/DfExcelData.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.api.xpack.dataFilling.dto;
 
+import io.dataease.extensions.datafilling.dto.ExtTableField;
 import lombok.Data;
 import lombok.experimental.Accessors;
 

File: sdk/extensions/extensions-datafilling/src/main/java/io/dataease/extensions/datafilling/dto/ExtTableField.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.api.xpack.dataFilling.dto;
+package io.dataease.extensions.datafilling.dto;
 
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/dto/DfExcelData.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.api.xpack.dataFilling.dto;
 
+import io.dataease.extensions.datafilling.dto.ExtTableField;
 import lombok.Data;
 import lombok.experimental.Accessors;
 

File: sdk/extensions/extensions-datafilling/src/main/java/io/dataease/extensions/datafilling/dto/ExtTableField.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.api.xpack.dataFilling.dto;
+package io.dataease.extensions.datafilling.dto;
 
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/TableField.java
Patch:
@@ -15,6 +15,7 @@ public class TableField implements Serializable {
     private long size;
     private int scale;
     private boolean checked = false;
+    private boolean primaryKey = false;
     private String fieldType;
     private Integer deType;
     private Integer deExtractType;

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -98,7 +98,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                     }
                 }
                 assert fieldDTO != null;
-                if (fieldDTO.isAgg()) {
+                if (fieldDTO != null && fieldDTO.isAgg()) {
                     sqlMeta.getXFields().get(i).setFieldName("'-'");
                 }
             }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -98,7 +98,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                     }
                 }
                 assert fieldDTO != null;
-                if (fieldDTO.isAgg()) {
+                if (fieldDTO != null && fieldDTO.isAgg()) {
                     sqlMeta.getXFields().get(i).setFieldName("'-'");
                 }
             }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -41,6 +41,7 @@ public static String getContextPath() {
             "/wecom/qrinfo",
             "/wecom/token",
             "/sysParameter/requestTimeOut",
+            "/sysParameter/defaultSettings",
             "/setting/authentication/status",
             "/sysParameter/ui",
             "/sysParameter/defaultLogin",

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /datasetData/getFieldTree, /dekey, /share/validate, /sysParameter/queryOnlineMap, /chartData/innerExportDetails";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /datasetData/getFieldTree, /dekey, /symmetricKey, /share/validate, /sysParameter/queryOnlineMap, /chartData/innerExportDetails";
 
 
     @Override

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/request/ChartExcelRequest.java
Patch:
@@ -5,6 +5,7 @@
 
 import java.io.Serial;
 import java.util.List;
+import java.util.Map;
 
 /**
  * @Author wangjiahao
@@ -26,4 +27,6 @@ public class ChartExcelRequest extends ChartExcelRequestInner {
 
     private String downloadType;
 
+    private Map<String, Object> data;
+
 }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -24,6 +24,7 @@ public static String getContextPath() {
             "/login/localLogin",
             "/apisix/check",
             "/dekey",
+            "/symmetricKey",
             "/index.html",
             "/model",
             "/xpackModel",

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /datasetData/getFieldTree, /dekey, /share/validate, /sysParameter/queryOnlineMap, /chartData/innerExportDetails";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /datasetData/getFieldTree, /dekey, /symmetricKey, /share/validate, /sysParameter/queryOnlineMap, /chartData/innerExportDetails";
 
 
     @Override

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -24,6 +24,7 @@ public static String getContextPath() {
             "/login/localLogin",
             "/apisix/check",
             "/dekey",
+            "/symmetricKey",
             "/index.html",
             "/model",
             "/xpackModel",

File: sdk/common/src/main/java/io/dataease/constant/XpackSettingConstants.java
Patch:
@@ -11,4 +11,6 @@ public class XpackSettingConstants {
     public static final String PVP = "basic.pvp";
     public static final String DEFAULT_LOGIN = "basic.defaultLogin";
     public static final String THRSHOLD_LOG_LIVE_TIME = "basic.thresholdLogLiveTime";
+
+    public static final String DEFAULT_SORT = "basic.defaultSort";
 }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackBarHandler.java
Patch:
@@ -52,10 +52,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             if (ObjectUtils.isNotEmpty(extStack) &&
                     Objects.equals(drillFields.get(0).getId(), extStack.get(0).getId())) {
                 fieldsToFilter.addAll(view.getXAxis());
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.api.chart.dto.ViewDetailField;
 import io.dataease.api.chart.request.ChartExcelRequest;
 import io.dataease.api.chart.request.ChartExcelRequestInner;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.constant.ChartConstants;
 import io.dataease.chart.manage.ChartDataManage;
 import io.dataease.constant.AuthConstant;
@@ -76,6 +77,7 @@ private Integer getExportLimit() {
         return Math.toIntExact(Math.min(f2CLicLimitedManage.checkDatasetLimit(), limit));
     }
 
+    @DeLinkPermit("#p0.sceneId")
     @Override
     public ChartViewDTO getData(ChartViewDTO chartViewDTO) throws Exception {
         try {

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -260,6 +260,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
 
     public Long getDatasetTotal(Long datasetGroupId) throws Exception {
         DatasetGroupInfoDTO dto = datasetGroupManage.getForCount(datasetGroupId);
+        if (ObjectUtils.isEmpty(dto)) return 0L;
         if (StringUtils.equalsIgnoreCase(dto.getNodeType(), "dataset")) {
             return getDatasetTotal(dto, null, new ChartExtRequest());
         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -262,6 +262,9 @@ private List<DatasourceDTO> getDatasource(Long datasetId) {
         List<CoreDatasetTable> coreDatasetTables = coreDatasetTableMapper.selectList(wrapper);
         Set<Long> ids = new LinkedHashSet();
         coreDatasetTables.forEach(ele -> ids.add(ele.getDatasourceId()));
+        if (CollectionUtils.isEmpty(ids)) {
+            DEException.throwException("数据集因异常导致无法使用，请重新创建");
+        }
 
         QueryWrapper<CoreDatasource> datasourceQueryWrapper = new QueryWrapper<>();
         datasourceQueryWrapper.in("id", ids);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -209,8 +209,6 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
                 String tablePrefix = "";
                 String tableSuffix = "";
                 if (ObjectUtils.isNotEmpty(currentSQLObj.getTableSchema())) {
-                    ts = currentSQLObj.getTableSchema() + ".";
-
                     if (isCross) {
                         tablePrefix = "`";
                         tableSuffix = "`";
@@ -219,6 +217,8 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
                         tablePrefix = datasourceType.getPrefix();
                         tableSuffix = datasourceType.getSuffix();
                     }
+
+                    ts = tablePrefix + currentSQLObj.getTableSchema() + tableSuffix + ".";
                 }
                 // build join
                 join.append(" ").append(joinType).append(" ")

File: core/core-backend/src/main/java/io/dataease/dataset/utils/TableUtils.java
Patch:
@@ -44,14 +44,14 @@ public static String getTableAndAlias(SQLObj sqlObj, DsTypeDTO datasourceType, b
         String prefix = "";
         String suffix = "";
         if (StringUtils.isNotEmpty(sqlObj.getTableSchema())) {
-            schema = sqlObj.getTableSchema() + ".";
             if (isCross) {
                 prefix = "`";
                 suffix = "`";
             } else {
                 prefix = datasourceType.getPrefix();
                 suffix = datasourceType.getSuffix();
             }
+            schema = prefix + sqlObj.getTableSchema() + suffix + ".";
         }
         return schema + prefix + sqlObj.getTableName() + suffix + " " + sqlObj.getTableAlias();
     }

File: core/core-backend/src/main/java/io/dataease/share/util/LinkTokenUtil.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.Date;
 
 public class LinkTokenUtil {
-    private static final String defaultPwd = "link-pwd-fit2cloud";
+    public static final String defaultPwd = "link-pwd-fit2cloud";
     public static String generate(Long uid, Long resourceId, Long exp, String pwd, Long oid) {
         pwd = StringUtils.isBlank(pwd) ? defaultPwd : pwd;
         Algorithm algorithm = Algorithm.HMAC256(pwd);

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -11,6 +11,7 @@
 import io.dataease.api.visualization.request.VisualizationAppExportRequest;
 import io.dataease.api.visualization.request.VisualizationWorkbranchQueryRequest;
 import io.dataease.api.visualization.vo.*;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.chart.manage.ChartDataManage;
@@ -142,6 +143,7 @@ public DataVisualizationVO findCopyResource(Long dvId, String busiFlag) {
         }
     }
 
+    @DeLinkPermit("#p0.id")
     @DeLog(id = "#p0.id", ot = LogOT.READ, stExp = "#p0.busiFlag")
     @Override
     @XpackInteract(value = "dataVisualizationServer", original = true)

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkJumpService.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.api.visualization.request.VisualizationLinkJumpBaseRequest;
 import io.dataease.api.visualization.response.VisualizationLinkJumpBaseResponse;
 import io.dataease.api.visualization.vo.VisualizationViewTableVO;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -67,6 +68,7 @@ public List<DatasetTableFieldDTO> getTableFieldWithViewId(Long viewId) {
         return extVisualizationLinkageMapper.queryTableFieldWithViewId(viewId);
     }
 
+    @DeLinkPermit
     //获取仪表板的跳转信息
     @Override
     public VisualizationLinkJumpBaseResponse queryVisualizationJumpInfo(Long dvId) {
@@ -135,6 +137,7 @@ public void updateJumpSet(VisualizationLinkJumpDTO jumpDTO) {
         });
     }
 
+    @DeLinkPermit("#p0.targetDvId")
     @Override
     public VisualizationLinkJumpBaseResponse queryTargetVisualizationJumpInfo(VisualizationLinkJumpBaseRequest request) {
         List<VisualizationLinkJumpDTO> result = extVisualizationLinkJumpMapper.getTargetVisualizationJumpInfo(request);

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkageService.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.api.visualization.dto.VisualizationLinkageDTO;
 import io.dataease.api.visualization.request.VisualizationLinkageRequest;
 import io.dataease.api.visualization.vo.VisualizationLinkageFieldVO;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.utils.BeanUtils;
@@ -108,6 +109,7 @@ public BaseRspModel saveLinkage(VisualizationLinkageRequest request) {
         return new BaseRspModel();
     }
 
+    @DeLinkPermit
     @Override
     public Map<String, List<String>> getVisualizationAllLinkageInfo(Long dvId) {
         List<LinkageInfoDTO> info = extVisualizationLinkageMapper.getPanelAllLinkageInfo(dvId);

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/DataFillingApi.java
Patch:
@@ -12,6 +12,7 @@
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
 import io.swagger.v3.oas.annotations.tags.Tag;
+import jakarta.servlet.http.HttpServletResponse;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.multipart.MultipartFile;
 
@@ -139,6 +140,6 @@ public interface DataFillingApi {
 
     void geFullName(Long pid, List<String> fullName);
 
-    @PostMapping("/innerExport/{formId}")
-    void innerExport(@PathVariable("formId") Long formId) throws Exception;
+    @PostMapping("/innerExport/{isDataEaseBi}/{formId}")
+    void innerExport(@PathVariable("formId") Long formId, @PathVariable("isDataEaseBi") boolean isDataEaseBi, HttpServletResponse response) throws Exception;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/request/ChartExcelRequest.java
Patch:
@@ -5,6 +5,7 @@
 
 import java.io.Serial;
 import java.util.List;
+import java.util.Map;
 
 /**
  * @Author wangjiahao
@@ -26,4 +27,6 @@ public class ChartExcelRequest extends ChartExcelRequestInner {
 
     private String downloadType;
 
+    private Map<String, Object> data;
+
 }

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /dekey, /share/validate, /sysParameter/queryOnlineMap";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /datasetData/getFieldTree, /dekey, /share/validate, /sysParameter/queryOnlineMap";
 
 
     @Override

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj, /dekey, /share/validate, /sysParameter/queryOnlineMap";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValue, /datasetData/enumValueObj, /dekey, /share/validate, /sysParameter/queryOnlineMap";
 
 
     @Override

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj, /dekey, /share/validate";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj, /dekey, /share/validate, /sysParameter/queryOnlineMap";
 
 
     @Override

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj, /dekey, /share/validate";
 
 
     @Override
@@ -40,7 +40,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
                 if (StringUtils.startsWith(requestURI, AuthConstant.DE_API_PREFIX)) {
                     requestURI = requestURI.replaceFirst(AuthConstant.DE_API_PREFIX, "");
                 }
-                boolean valid = whiteList.contains(requestURI);
+                boolean valid = whiteList.contains(requestURI) || WhitelistUtils.match(requestURI);
                 if (!valid) {
                     DEException.throwException("分享链接Token不支持访问当前url[" + requestURI + "]");
                 }

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkJumpService.java
Patch:
@@ -137,6 +137,7 @@ public void updateJumpSet(VisualizationLinkJumpDTO jumpDTO) {
         });
     }
 
+    @DeLinkPermit("#p0.targetDvId")
     @Override
     public VisualizationLinkJumpBaseResponse queryTargetVisualizationJumpInfo(VisualizationLinkJumpBaseRequest request) {
         List<VisualizationLinkJumpDTO> result = extVisualizationLinkJumpMapper.getTargetVisualizationJumpInfo(request);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -209,8 +209,6 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
                 String tablePrefix = "";
                 String tableSuffix = "";
                 if (ObjectUtils.isNotEmpty(currentSQLObj.getTableSchema())) {
-                    ts = currentSQLObj.getTableSchema() + ".";
-
                     if (isCross) {
                         tablePrefix = "`";
                         tableSuffix = "`";
@@ -219,6 +217,8 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
                         tablePrefix = datasourceType.getPrefix();
                         tableSuffix = datasourceType.getSuffix();
                     }
+
+                    ts = tablePrefix + currentSQLObj.getTableSchema() + tableSuffix + ".";
                 }
                 // build join
                 join.append(" ").append(joinType).append(" ")

File: core/core-backend/src/main/java/io/dataease/dataset/utils/TableUtils.java
Patch:
@@ -44,14 +44,14 @@ public static String getTableAndAlias(SQLObj sqlObj, DsTypeDTO datasourceType, b
         String prefix = "";
         String suffix = "";
         if (StringUtils.isNotEmpty(sqlObj.getTableSchema())) {
-            schema = sqlObj.getTableSchema() + ".";
             if (isCross) {
                 prefix = "`";
                 suffix = "`";
             } else {
                 prefix = datasourceType.getPrefix();
                 suffix = datasourceType.getSuffix();
             }
+            schema = prefix + sqlObj.getTableSchema() + suffix + ".";
         }
         return schema + prefix + sqlObj.getTableName() + suffix + " " + sqlObj.getTableAlias();
     }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -209,8 +209,6 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
                 String tablePrefix = "";
                 String tableSuffix = "";
                 if (ObjectUtils.isNotEmpty(currentSQLObj.getTableSchema())) {
-                    ts = currentSQLObj.getTableSchema() + ".";
-
                     if (isCross) {
                         tablePrefix = "`";
                         tableSuffix = "`";
@@ -219,6 +217,8 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
                         tablePrefix = datasourceType.getPrefix();
                         tableSuffix = datasourceType.getSuffix();
                     }
+
+                    ts = tablePrefix + currentSQLObj.getTableSchema() + tableSuffix + ".";
                 }
                 // build join
                 join.append(" ").append(joinType).append(" ")

File: core/core-backend/src/main/java/io/dataease/dataset/utils/TableUtils.java
Patch:
@@ -44,14 +44,14 @@ public static String getTableAndAlias(SQLObj sqlObj, DsTypeDTO datasourceType, b
         String prefix = "";
         String suffix = "";
         if (StringUtils.isNotEmpty(sqlObj.getTableSchema())) {
-            schema = sqlObj.getTableSchema() + ".";
             if (isCross) {
                 prefix = "`";
                 suffix = "`";
             } else {
                 prefix = datasourceType.getPrefix();
                 suffix = datasourceType.getSuffix();
             }
+            schema = prefix + sqlObj.getTableSchema() + suffix + ".";
         }
         return schema + prefix + sqlObj.getTableName() + suffix + " " + sqlObj.getTableAlias();
     }

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj";
 
 
     @Override

File: core/core-backend/src/main/java/io/dataease/share/interceptor/LinkInterceptor.java
Patch:
@@ -19,7 +19,7 @@
 @Component
 public class LinkInterceptor implements HandlerInterceptor {
 
-    private final static String whiteListText = "/user/ipInfo, /apisix/check";
+    private final static String whiteListText = "/user/ipInfo, /apisix/check, /datasetData/enumValueObj";
 
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackBarHandler.java
Patch:
@@ -52,10 +52,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             if (ObjectUtils.isNotEmpty(extStack) &&
                     Objects.equals(drillFields.get(0).getId(), extStack.get(0).getId())) {
                 fieldsToFilter.addAll(view.getXAxis());
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackBarHandler.java
Patch:
@@ -52,10 +52,10 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             if (ObjectUtils.isNotEmpty(extStack) &&
                     Objects.equals(drillFields.get(0).getId(), extStack.get(0).getId())) {
                 fieldsToFilter.addAll(view.getXAxis());
+                groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
+                formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
+                result.setFilterList(noDrillFilterList);
             }
-            groupStackDrill(noDrillFieldAxis, noDrillFilterList, fieldsToFilter, drillFields, drillRequestList);
-            formatResult.getAxisMap().put(ChartAxis.xAxis, noDrillFieldAxis);
-            result.setFilterList(noDrillFilterList);
         }
         return (T) result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.api.chart.dto.ViewDetailField;
 import io.dataease.api.chart.request.ChartExcelRequest;
 import io.dataease.api.chart.request.ChartExcelRequestInner;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.constant.ChartConstants;
 import io.dataease.chart.manage.ChartDataManage;
 import io.dataease.constant.AuthConstant;
@@ -76,6 +77,7 @@ private Integer getExportLimit() {
         return Math.toIntExact(Math.min(f2CLicLimitedManage.checkDatasetLimit(), limit));
     }
 
+    @DeLinkPermit("#p0.sceneId")
     @Override
     public ChartViewDTO getData(ChartViewDTO chartViewDTO) throws Exception {
         try {

File: core/core-backend/src/main/java/io/dataease/share/util/LinkTokenUtil.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.Date;
 
 public class LinkTokenUtil {
-    private static final String defaultPwd = "link-pwd-fit2cloud";
+    public static final String defaultPwd = "link-pwd-fit2cloud";
     public static String generate(Long uid, Long resourceId, Long exp, String pwd, Long oid) {
         pwd = StringUtils.isBlank(pwd) ? defaultPwd : pwd;
         Algorithm algorithm = Algorithm.HMAC256(pwd);

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -11,6 +11,7 @@
 import io.dataease.api.visualization.request.VisualizationAppExportRequest;
 import io.dataease.api.visualization.request.VisualizationWorkbranchQueryRequest;
 import io.dataease.api.visualization.vo.*;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.chart.manage.ChartDataManage;
@@ -142,6 +143,7 @@ public DataVisualizationVO findCopyResource(Long dvId, String busiFlag) {
         }
     }
 
+    @DeLinkPermit("#p0.id")
     @DeLog(id = "#p0.id", ot = LogOT.READ, stExp = "#p0.busiFlag")
     @Override
     @XpackInteract(value = "dataVisualizationServer", original = true)

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkJumpService.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.api.visualization.request.VisualizationLinkJumpBaseRequest;
 import io.dataease.api.visualization.response.VisualizationLinkJumpBaseResponse;
 import io.dataease.api.visualization.vo.VisualizationViewTableVO;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -67,6 +68,7 @@ public List<DatasetTableFieldDTO> getTableFieldWithViewId(Long viewId) {
         return extVisualizationLinkageMapper.queryTableFieldWithViewId(viewId);
     }
 
+    @DeLinkPermit
     //获取仪表板的跳转信息
     @Override
     public VisualizationLinkJumpBaseResponse queryVisualizationJumpInfo(Long dvId) {

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkageService.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.api.visualization.dto.VisualizationLinkageDTO;
 import io.dataease.api.visualization.request.VisualizationLinkageRequest;
 import io.dataease.api.visualization.vo.VisualizationLinkageFieldVO;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.utils.BeanUtils;
@@ -108,6 +109,7 @@ public BaseRspModel saveLinkage(VisualizationLinkageRequest request) {
         return new BaseRspModel();
     }
 
+    @DeLinkPermit
     @Override
     public Map<String, List<String>> getVisualizationAllLinkageInfo(Long dvId) {
         List<LinkageInfoDTO> info = extVisualizationLinkageMapper.getPanelAllLinkageInfo(dvId);

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.api.chart.dto.ViewDetailField;
 import io.dataease.api.chart.request.ChartExcelRequest;
 import io.dataease.api.chart.request.ChartExcelRequestInner;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.constant.ChartConstants;
 import io.dataease.chart.manage.ChartDataManage;
 import io.dataease.constant.AuthConstant;
@@ -76,6 +77,7 @@ private Integer getExportLimit() {
         return Math.toIntExact(Math.min(f2CLicLimitedManage.checkDatasetLimit(), limit));
     }
 
+    @DeLinkPermit("#p0.sceneId")
     @Override
     public ChartViewDTO getData(ChartViewDTO chartViewDTO) throws Exception {
         try {

File: core/core-backend/src/main/java/io/dataease/share/util/LinkTokenUtil.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.Date;
 
 public class LinkTokenUtil {
-    private static final String defaultPwd = "link-pwd-fit2cloud";
+    public static final String defaultPwd = "link-pwd-fit2cloud";
     public static String generate(Long uid, Long resourceId, Long exp, String pwd, Long oid) {
         pwd = StringUtils.isBlank(pwd) ? defaultPwd : pwd;
         Algorithm algorithm = Algorithm.HMAC256(pwd);

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -11,6 +11,7 @@
 import io.dataease.api.visualization.request.VisualizationAppExportRequest;
 import io.dataease.api.visualization.request.VisualizationWorkbranchQueryRequest;
 import io.dataease.api.visualization.vo.*;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.chart.manage.ChartDataManage;
@@ -142,6 +143,7 @@ public DataVisualizationVO findCopyResource(Long dvId, String busiFlag) {
         }
     }
 
+    @DeLinkPermit("#p0.id")
     @DeLog(id = "#p0.id", ot = LogOT.READ, stExp = "#p0.busiFlag")
     @Override
     @XpackInteract(value = "dataVisualizationServer", original = true)

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkJumpService.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.api.visualization.request.VisualizationLinkJumpBaseRequest;
 import io.dataease.api.visualization.response.VisualizationLinkJumpBaseResponse;
 import io.dataease.api.visualization.vo.VisualizationViewTableVO;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -67,6 +68,7 @@ public List<DatasetTableFieldDTO> getTableFieldWithViewId(Long viewId) {
         return extVisualizationLinkageMapper.queryTableFieldWithViewId(viewId);
     }
 
+    @DeLinkPermit
     //获取仪表板的跳转信息
     @Override
     public VisualizationLinkJumpBaseResponse queryVisualizationJumpInfo(Long dvId) {

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkageService.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.api.visualization.dto.VisualizationLinkageDTO;
 import io.dataease.api.visualization.request.VisualizationLinkageRequest;
 import io.dataease.api.visualization.vo.VisualizationLinkageFieldVO;
+import io.dataease.auth.DeLinkPermit;
 import io.dataease.chart.dao.auto.entity.CoreChartView;
 import io.dataease.chart.dao.auto.mapper.CoreChartViewMapper;
 import io.dataease.utils.BeanUtils;
@@ -108,6 +109,7 @@ public BaseRspModel saveLinkage(VisualizationLinkageRequest request) {
         return new BaseRspModel();
     }
 
+    @DeLinkPermit
     @Override
     public Map<String, List<String>> getVisualizationAllLinkageInfo(Long dvId) {
         List<LinkageInfoDTO> info = extVisualizationLinkageMapper.getPanelAllLinkageInfo(dvId);

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -631,6 +631,7 @@ private void startViewTask(CoreExportTask exportTask, ChartExcelRequest request)
         boolean isCreated = directory.mkdir();
         TokenUserBO tokenUserBO = AuthUtils.getUser();
         Future future = scheduledThreadPoolExecutor.submit(() -> {
+            LicenseUtil.validate();
             AuthUtils.setUser(tokenUserBO);
             try {
                 exportTask.setExportStatus("IN_PROGRESS");

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -631,6 +631,7 @@ private void startViewTask(CoreExportTask exportTask, ChartExcelRequest request)
         boolean isCreated = directory.mkdir();
         TokenUserBO tokenUserBO = AuthUtils.getUser();
         Future future = scheduledThreadPoolExecutor.submit(() -> {
+            LicenseUtil.validate();
             AuthUtils.setUser(tokenUserBO);
             try {
                 exportTask.setExportStatus("IN_PROGRESS");

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -89,7 +89,7 @@ private String createTableSql(final List<TableField> tableFields) {
             int size = tableField.getPrecision() * 4;
             switch (tableField.getDeExtractType()) {
                 case 0:
-                    Column_Fields.append("varchar(2048)").append(",`");
+                    Column_Fields.append("varchar(1024)").append(",`");
                     break;
                 case 1:
                     Column_Fields.append("datetime").append(",`");
@@ -104,7 +104,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     Column_Fields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");
                     break;
                 default:
-                    Column_Fields.append("varchar(2048)").append(",`");
+                    Column_Fields.append("varchar(1024)").append(",`");
                     break;
             }
         }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -126,7 +126,7 @@ public List<DatasourceDTO> query(String keyWord) {
     }
 
     public boolean checkRepeat(@RequestBody BusiDsRequest dataSourceDTO) {
-        if (Arrays.asList("API", "Excel", "folder").contains(dataSourceDTO.getType())) {
+        if (Arrays.asList("API", "Excel", "folder", "es").contains(dataSourceDTO.getType())) {
             return false;
         }
         BusiNodeRequest request = new BusiNodeRequest();

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -89,7 +89,7 @@ private String createTableSql(final List<TableField> tableFields) {
             int size = tableField.getPrecision() * 4;
             switch (tableField.getDeExtractType()) {
                 case 0:
-                    Column_Fields.append("varchar(2048)").append(",`");
+                    Column_Fields.append("varchar(1024)").append(",`");
                     break;
                 case 1:
                     Column_Fields.append("datetime").append(",`");
@@ -104,7 +104,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     Column_Fields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");
                     break;
                 default:
-                    Column_Fields.append("varchar(2048)").append(",`");
+                    Column_Fields.append("varchar(1024)").append(",`");
                     break;
             }
         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -262,6 +262,9 @@ private List<DatasourceDTO> getDatasource(Long datasetId) {
         List<CoreDatasetTable> coreDatasetTables = coreDatasetTableMapper.selectList(wrapper);
         Set<Long> ids = new LinkedHashSet();
         coreDatasetTables.forEach(ele -> ids.add(ele.getDatasourceId()));
+        if (CollectionUtils.isEmpty(ids)) {
+            DEException.throwException("数据集因异常导致无法使用，请重新创建");
+        }
 
         QueryWrapper<CoreDatasource> datasourceQueryWrapper = new QueryWrapper<>();
         datasourceQueryWrapper.in("id", ids);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/BarHandler.java
Patch:
@@ -53,7 +53,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/LineHandler.java
Patch:
@@ -64,7 +64,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/StackAreaHandler.java
Patch:
@@ -100,7 +100,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assist sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/MixHandler.java
Patch:
@@ -92,7 +92,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
@@ -144,7 +144,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 rightResult.setAssistData(assistData);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -154,7 +154,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(querySql, assistFields);
+                var assistSql = assistSQL(querySql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableNormalHandler.java
Patch:
@@ -34,7 +34,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/BarHandler.java
Patch:
@@ -53,7 +53,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/LineHandler.java
Patch:
@@ -64,7 +64,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/StackAreaHandler.java
Patch:
@@ -100,7 +100,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assist sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/MixHandler.java
Patch:
@@ -92,7 +92,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
@@ -144,7 +144,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 rightResult.setAssistData(assistData);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -154,7 +154,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(querySql, assistFields);
+                var assistSql = assistSQL(querySql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableNormalHandler.java
Patch:
@@ -34,7 +34,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             if (CollectionUtils.isNotEmpty(assistFields)) {
                 var req = new DatasourceRequest();
                 req.setDsList(dsMap);
-                var assistSql = assistSQL(originSql, assistFields);
+                var assistSql = assistSQL(originSql, assistFields, dsMap);
                 req.setQuery(assistSql);
                 logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -453,9 +453,9 @@ public Map<String, Object> buildPreviewData(Map<String, Object> data, List<Datas
                 LinkedHashMap<String, Object> obj = new LinkedHashMap<>();
                 if (row.length > 0) {
                     for (int j = 0; j < fields.size(); j++) {
-                        // 如果字段类型是数值类型的小数，将结果保留8位小数，同时去除科学计数
                         String res = row[j];
-                        if (fields.get(j).getDeType() == 3) {
+                        // 如果字段类型是数值类型的小数，则去除科学计数
+                        if (fields.get(j).getDeType() == 3 && StringUtils.containsIgnoreCase(res, "E")) {
                             BigDecimal bigDecimal = new BigDecimal(res);
                             res = String.format("%.8f", bigDecimal);
                         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -453,9 +453,9 @@ public Map<String, Object> buildPreviewData(Map<String, Object> data, List<Datas
                 LinkedHashMap<String, Object> obj = new LinkedHashMap<>();
                 if (row.length > 0) {
                     for (int j = 0; j < fields.size(); j++) {
-                        // 如果字段类型是数值类型的小数，将结果保留8位小数，同时去除科学计数
                         String res = row[j];
-                        if (fields.get(j).getDeType() == 3) {
+                        // 如果字段类型是数值类型的小数，则去除科学计数
+                        if (fields.get(j).getDeType() == 3 && StringUtils.containsIgnoreCase(res, "E")) {
                             BigDecimal bigDecimal = new BigDecimal(res);
                             res = String.format("%.8f", bigDecimal);
                         }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -269,7 +269,7 @@ public List<TableField> fetchTableField(DatasourceRequest datasourceRequest) thr
             try (Connection con = getConnectionFromPool(datasourceRequest.getDatasource().getId()); Statement statement = getStatement(con, 30)) {
                 datasourceRequest.setDsVersion(con.getMetaData().getDatabaseMajorVersion());
                 if (datasourceRequest.getDatasource().getType().equalsIgnoreCase("mongo") || isDorisCatalog(datasourceRequest)) {
-                    resultSet = statement.executeQuery("select * from " + table + " limit 0 offset 0 ");
+                    resultSet = statement.executeQuery("select * from " + String.format(" `%s`", table) + " limit 0 offset 0 ");
                     return fetchResultField(resultSet);
                 }
                 resultSet = statement.executeQuery(getTableFiledSql(datasourceRequest));

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -269,7 +269,7 @@ public List<TableField> fetchTableField(DatasourceRequest datasourceRequest) thr
             try (Connection con = getConnectionFromPool(datasourceRequest.getDatasource().getId()); Statement statement = getStatement(con, 30)) {
                 datasourceRequest.setDsVersion(con.getMetaData().getDatabaseMajorVersion());
                 if (datasourceRequest.getDatasource().getType().equalsIgnoreCase("mongo") || isDorisCatalog(datasourceRequest)) {
-                    resultSet = statement.executeQuery("select * from " + table + " limit 0 offset 0 ");
+                    resultSet = statement.executeQuery("select * from " + String.format(" `%s`", table) + " limit 0 offset 0 ");
                     return fetchResultField(resultSet);
                 }
                 resultSet = statement.executeQuery(getTableFiledSql(datasourceRequest));

File: core/core-backend/src/main/java/io/dataease/config/CommonConfig.java
Patch:
@@ -14,7 +14,7 @@ public class CommonConfig {
     @Bean(destroyMethod = "shutdown")
     public CommonThreadPool resourcePoolThreadPool() {
         CommonThreadPool commonThreadPool = new CommonThreadPool();
-        commonThreadPool.setCorePoolSize(20);
+        commonThreadPool.setCorePoolSize(50);
         commonThreadPool.setMaxQueueSize(100);
         commonThreadPool.setKeepAliveSeconds(3600);
         return commonThreadPool;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -89,7 +89,7 @@ private String createTableSql(final List<TableField> tableFields) {
             int size = tableField.getPrecision() * 4;
             switch (tableField.getDeExtractType()) {
                 case 0:
-                    Column_Fields.append("longtext").append(",`");
+                    Column_Fields.append("varchar(2048)").append(",`");
                     break;
                 case 1:
                     Column_Fields.append("datetime").append(",`");
@@ -104,7 +104,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     Column_Fields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");
                     break;
                 default:
-                    Column_Fields.append("longtext").append(",`");
+                    Column_Fields.append("varchar(2048)").append(",`");
                     break;
             }
         }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -89,7 +89,7 @@ private String createTableSql(final List<TableField> tableFields) {
             int size = tableField.getPrecision() * 4;
             switch (tableField.getDeExtractType()) {
                 case 0:
-                    Column_Fields.append("longtext").append(",`");
+                    Column_Fields.append("varchar(2048)").append(",`");
                     break;
                 case 1:
                     Column_Fields.append("datetime").append(",`");
@@ -104,7 +104,7 @@ private String createTableSql(final List<TableField> tableFields) {
                     Column_Fields.append("TINYINT(length)".replace("length", String.valueOf(tableField.getPrecision()))).append(",`");
                     break;
                 default:
-                    Column_Fields.append("longtext").append(",`");
+                    Column_Fields.append("varchar(2048)").append(",`");
                     break;
             }
         }

File: core/core-backend/src/main/java/io/dataease/config/CommonConfig.java
Patch:
@@ -14,7 +14,7 @@ public class CommonConfig {
     @Bean(destroyMethod = "shutdown")
     public CommonThreadPool resourcePoolThreadPool() {
         CommonThreadPool commonThreadPool = new CommonThreadPool();
-        commonThreadPool.setCorePoolSize(20);
+        commonThreadPool.setCorePoolSize(50);
         commonThreadPool.setMaxQueueSize(100);
         commonThreadPool.setKeepAliveSeconds(3600);
         return commonThreadPool;

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -752,7 +752,6 @@ public void nameCheck(DataVisualizationBaseRequest request) {
         wrapper.eq("name", request.getName().trim());
         wrapper.eq("node_type", request.getNodeType());
         wrapper.eq("type", request.getType());
-        wrapper.eq("org_id", AuthUtils.getUser().getDefaultOid());
         if (visualizationInfoMapper.exists(wrapper)) {
             DEException.throwException("当前名称已经存在");
         }

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -752,7 +752,6 @@ public void nameCheck(DataVisualizationBaseRequest request) {
         wrapper.eq("name", request.getName().trim());
         wrapper.eq("node_type", request.getNodeType());
         wrapper.eq("type", request.getType());
-        wrapper.eq("org_id", AuthUtils.getUser().getDefaultOid());
         if (visualizationInfoMapper.exists(wrapper)) {
             DEException.throwException("当前名称已经存在");
         }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -906,6 +906,7 @@ private SchemaPlus buildSchema(DatasourceRequest datasourceRequest, CalciteConne
                                 rootSchema.add(ds.getSchemaAlias(), schema);
                         }
                     } catch (Exception e) {
+                        LogUtil.error("Fail to create connection: " + ds.getName(), e);
                     }
                 } catch (Exception e) {
                 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1,7 +1,6 @@
 package io.dataease.datasource.provider;
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
-import com.mysql.cj.log.Log;
 import io.dataease.dataset.utils.FieldUtils;
 import io.dataease.datasource.dao.auto.entity.CoreDatasource;
 import io.dataease.datasource.dao.auto.entity.CoreDriver;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.datasource.provider;
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.mysql.cj.log.Log;
 import io.dataease.dataset.utils.FieldUtils;
 import io.dataease.datasource.dao.auto.entity.CoreDatasource;
 import io.dataease.datasource.dao.auto.entity.CoreDriver;
@@ -906,6 +907,7 @@ private SchemaPlus buildSchema(DatasourceRequest datasourceRequest, CalciteConne
                                 rootSchema.add(ds.getSchemaAlias(), schema);
                         }
                     } catch (Exception e) {
+                        LogUtil.error("Fail to create connection: " + ds.getName(), e);
                     }
                 } catch (Exception e) {
                 }

File: core/core-backend/src/main/java/io/dataease/engine/trans/CustomWhere2Str.java
Patch:
@@ -130,7 +130,8 @@ private static String transTreeItem(SQLObj tableObj, FilterTreeItem item, Map<St
                     }
                 }
                 // 此处获取标准格式的日期
-                if (StringUtils.equalsIgnoreCase(field.getType(), "date")) {
+                if (StringUtils.equalsIgnoreCase(field.getType(), "date")
+                        || (StringUtils.equalsIgnoreCase(dsMap.entrySet().iterator().next().getValue().getType(), "oracle") && StringUtils.equalsIgnoreCase(field.getType(), "timestamp"))) {
                     whereName = String.format(SQLConstants.DE_CAST_DATE_FORMAT, originName,
                             SQLConstants.DEFAULT_DATE_FORMAT,
                             SQLConstants.DEFAULT_DATE_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/WhereTree2Str.java
Patch:
@@ -143,7 +143,8 @@ public static String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeIte
                         originName = String.format(SQLConstants.DE_STR_TO_DATE, String.format(SQLConstants.CONCAT, "'1970-01-01 '", originName), SQLConstants.DEFAULT_DATE_FORMAT);
                     }
                 }
-                if (StringUtils.equalsIgnoreCase(field.getType(), "date")) {
+                if (StringUtils.equalsIgnoreCase(field.getType(), "date")
+                        || (StringUtils.equalsIgnoreCase(dsMap.entrySet().iterator().next().getValue().getType(), "oracle") && StringUtils.equalsIgnoreCase(field.getType(), "timestamp"))) {
                     whereName = String.format(SQLConstants.DE_CAST_DATE_FORMAT, originName,
                             SQLConstants.DEFAULT_DATE_FORMAT,
                             SQLConstants.DEFAULT_DATE_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/CustomWhere2Str.java
Patch:
@@ -130,7 +130,8 @@ private static String transTreeItem(SQLObj tableObj, FilterTreeItem item, Map<St
                     }
                 }
                 // 此处获取标准格式的日期
-                if (StringUtils.equalsIgnoreCase(field.getType(), "date")) {
+                if (StringUtils.equalsIgnoreCase(field.getType(), "date")
+                        || (StringUtils.equalsIgnoreCase(dsMap.entrySet().iterator().next().getValue().getType(), "oracle") && StringUtils.equalsIgnoreCase(field.getType(), "timestamp"))) {
                     whereName = String.format(SQLConstants.DE_CAST_DATE_FORMAT, originName,
                             SQLConstants.DEFAULT_DATE_FORMAT,
                             SQLConstants.DEFAULT_DATE_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/WhereTree2Str.java
Patch:
@@ -143,7 +143,8 @@ public static String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeIte
                         originName = String.format(SQLConstants.DE_STR_TO_DATE, String.format(SQLConstants.CONCAT, "'1970-01-01 '", originName), SQLConstants.DEFAULT_DATE_FORMAT);
                     }
                 }
-                if (StringUtils.equalsIgnoreCase(field.getType(), "date")) {
+                if (StringUtils.equalsIgnoreCase(field.getType(), "date")
+                        || (StringUtils.equalsIgnoreCase(dsMap.entrySet().iterator().next().getValue().getType(), "oracle") && StringUtils.equalsIgnoreCase(field.getType(), "timestamp"))) {
                     whereName = String.format(SQLConstants.DE_CAST_DATE_FORMAT, originName,
                             SQLConstants.DEFAULT_DATE_FORMAT,
                             SQLConstants.DEFAULT_DATE_FORMAT);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -559,6 +559,9 @@ public void geFullName(Long pid, List<String> fullName) {
             return;
         }
         fullName.add(parent.getName());
+        if (parent.getId().equals(parent.getPid())) {
+            return;
+        }
         if (parent.getPid() != null && parent.getPid() != 0) {
             geFullName(parent.getPid(), fullName);
         }

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -781,6 +781,9 @@ public List<DataVisualizationInfo> getParents(Long id) {
         List<DataVisualizationInfo> list = new ArrayList<>();
         DataVisualizationInfo dataVisualizationInfo = visualizationInfoMapper.selectById(id);
         list.add(dataVisualizationInfo);
+        if (dataVisualizationInfo.getPid().equals(dataVisualizationInfo.getId())) {
+            return list;
+        }
         getParent(list, dataVisualizationInfo);
         Collections.reverse(list);
         return list;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -559,6 +559,9 @@ public void geFullName(Long pid, List<String> fullName) {
             return;
         }
         fullName.add(parent.getName());
+        if (parent.getId().equals(parent.getPid())) {
+            return;
+        }
         if (parent.getPid() != null && parent.getPid() != 0) {
             geFullName(parent.getPid(), fullName);
         }

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -781,6 +781,9 @@ public List<DataVisualizationInfo> getParents(Long id) {
         List<DataVisualizationInfo> list = new ArrayList<>();
         DataVisualizationInfo dataVisualizationInfo = visualizationInfoMapper.selectById(id);
         list.add(dataVisualizationInfo);
+        if (dataVisualizationInfo.getPid().equals(dataVisualizationInfo.getId())) {
+            return list;
+        }
         getParent(list, dataVisualizationInfo);
         Collections.reverse(list);
         return list;

File: core/core-backend/src/main/java/io/dataease/rmonitor/mapper/ResourceMonitorMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface ResourceMonitorMapper {
     @Select("select count(id) from core_dataset_group")
     int datasetCount();
 
-    @Select("select count(id) from data_visualization_info where delete_flag = 0")
+    @Select("select count(id) from data_visualization_info where delete_flag = 0 and pid != -1")
     int vCount();
 
     @Select("select id, name, pid, type, status from core_datasource")
@@ -27,7 +27,7 @@ public interface ResourceMonitorMapper {
     @Select("select id, name, pid, node_type from core_dataset_group")
     List<DatasetFreeResource> queryFreeDataset();
 
-    @Select("select id, name, pid, node_type, type from data_visualization_info where delete_flag = 0")
+    @Select("select id, name, pid, node_type, type from data_visualization_info where delete_flag = 0 and pid != -1")
     List<VisualFreeResource> queryFreeVusial();
 
     @Delete("delete from core_datasource")

File: core/core-backend/src/main/java/io/dataease/rmonitor/mapper/ResourceMonitorMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface ResourceMonitorMapper {
     @Select("select count(id) from core_dataset_group")
     int datasetCount();
 
-    @Select("select count(id) from data_visualization_info where delete_flag = 0")
+    @Select("select count(id) from data_visualization_info where delete_flag = 0 and pid != -1")
     int vCount();
 
     @Select("select id, name, pid, type, status from core_datasource")
@@ -27,7 +27,7 @@ public interface ResourceMonitorMapper {
     @Select("select id, name, pid, node_type from core_dataset_group")
     List<DatasetFreeResource> queryFreeDataset();
 
-    @Select("select id, name, pid, node_type, type from data_visualization_info where delete_flag = 0")
+    @Select("select id, name, pid, node_type, type from data_visualization_info where delete_flag = 0 and pid != -1")
     List<VisualFreeResource> queryFreeVusial();
 
     @Delete("delete from core_datasource")

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,7 +71,7 @@ public class SQLConstants {
 
     public static final String WHERE_VALUE_VALUE = "'%s'";
 
-    public static final String WHERE_VALUE_VALUE_CH = "N'%s'";
+    public static final String WHERE_VALUE_VALUE_CH = "'-DENS-%s'";
 
     public static final String WHERE_NUMBER_VALUE = "%s";
 
@@ -98,4 +98,6 @@ public class SQLConstants {
     public static final String EMPTY_SIGN = "_empty_$";
 
     public static final String CONCAT = "CONCAT(%s, %s)";
+
+    public static final String MSSQL_N_PREFIX = "-DENS-";
 }

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,7 +71,7 @@ public class SQLConstants {
 
     public static final String WHERE_VALUE_VALUE = "'%s'";
 
-    public static final String WHERE_VALUE_VALUE_CH = "N'%s'";
+    public static final String WHERE_VALUE_VALUE_CH = "'-DENS-%s'";
 
     public static final String WHERE_NUMBER_VALUE = "%s";
 
@@ -98,4 +98,6 @@ public class SQLConstants {
     public static final String EMPTY_SIGN = "_empty_$";
 
     public static final String CONCAT = "CONCAT(%s, %s)";
+
+    public static final String MSSQL_N_PREFIX = "-DENS-";
 }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -72,6 +72,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
                 || StringUtils.startsWithAny(requestURI, "/typeface/listFont")
+                || StringUtils.startsWithAny(requestURI, "/exportCenter/download")
                 || StringUtils.startsWithAny(requestURI, "/communicate/image/")
                 || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -72,6 +72,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
                 || StringUtils.startsWithAny(requestURI, "/typeface/listFont")
+                || StringUtils.startsWithAny(requestURI, "/exportCenter/download")
                 || StringUtils.startsWithAny(requestURI, "/communicate/image/")
                 || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -104,7 +104,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             }
         }
 
-        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, !StringUtils.equalsIgnoreCase(dsMap.get(0).getType(), "es"), view);// 明细表强制加排序
+        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, !StringUtils.equalsIgnoreCase(dsMap.entrySet().iterator().next().getValue().getType(), "es"), view);// 明细表强制加排序
         String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * chartExtRequest.getPageSize() : "");
         var querySql = originSql + limit;
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -104,7 +104,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             }
         }
 
-        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, !StringUtils.equalsIgnoreCase(dsMap.get(0).getType(), "es"), view);// 明细表强制加排序
+        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, !StringUtils.equalsIgnoreCase(dsMap.entrySet().iterator().next().getValue().getType(), "es"), view);// 明细表强制加排序
         String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * chartExtRequest.getPageSize() : "");
         var querySql = originSql + limit;
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -89,7 +89,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             pageInfo.setPageSize(chartExtRequest.getPageSize());
         }
         Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
-        if(view.getIsExcelExport()){
+        if (view.getIsExcelExport()) {
             for (int i = 0; i < xAxis.size(); i++) {
                 ChartViewFieldDTO fieldDTO = null;
                 for (ChartViewFieldDTO allField : allFields) {
@@ -104,7 +104,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             }
         }
 
-        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
+        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, !StringUtils.equalsIgnoreCase(dsMap.get(0).getType(), "es"), view);// 明细表强制加排序
         String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * chartExtRequest.getPageSize() : "");
         var querySql = originSql + limit;
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -89,7 +89,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             pageInfo.setPageSize(chartExtRequest.getPageSize());
         }
         Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
-        if(view.getIsExcelExport()){
+        if (view.getIsExcelExport()) {
             for (int i = 0; i < xAxis.size(); i++) {
                 ChartViewFieldDTO fieldDTO = null;
                 for (ChartViewFieldDTO allField : allFields) {
@@ -104,7 +104,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             }
         }
 
-        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
+        String originSql = SQLProvider.createQuerySQL(sqlMeta, false, !StringUtils.equalsIgnoreCase(dsMap.get(0).getType(), "es"), view);// 明细表强制加排序
         String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * chartExtRequest.getPageSize() : "");
         var querySql = originSql + limit;
 

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -509,7 +509,7 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
                 for (Long s = 1L; s < sheetCount + 1; s++) {
                     Long sheetSize;
                     if (s.equals(sheetCount)) {
-                        sheetSize = totalCount - sheetCount * (s - 1) * sheetLimit;
+                        sheetSize = totalCount - (s - 1) * sheetLimit;
                     } else {
                         sheetSize = sheetLimit;
                     }
@@ -590,8 +590,8 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
                             }
                         }
                         exportTask.setExportStatus("IN_PROGRESS");
-                        double exportRogress2 = (double) ((double) s - 1 / (double) sheetCount);
-                        double exportRogress = (double) ((double) p / (double) pageSize) * ((double) 1 / sheetCount);
+                        double exportRogress2 = (double) ((double) s - 1) / ((double) sheetCount);
+                        double exportRogress = (double) ((double) (p + 1) / (double) pageSize) * ((double) 1 / sheetCount);
                         DecimalFormat df = new DecimalFormat("#.##");
                         String formattedResult = df.format((exportRogress + exportRogress2) * 100);
                         exportTask.setExportProgress(formattedResult);

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -509,7 +509,7 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
                 for (Long s = 1L; s < sheetCount + 1; s++) {
                     Long sheetSize;
                     if (s.equals(sheetCount)) {
-                        sheetSize = totalCount - sheetCount * (s - 1) * sheetLimit;
+                        sheetSize = totalCount - (s - 1) * sheetLimit;
                     } else {
                         sheetSize = sheetLimit;
                     }
@@ -590,8 +590,8 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
                             }
                         }
                         exportTask.setExportStatus("IN_PROGRESS");
-                        double exportRogress2 = (double) ((double) s - 1 / (double) sheetCount);
-                        double exportRogress = (double) ((double) p / (double) pageSize) * ((double) 1 / sheetCount);
+                        double exportRogress2 = (double) ((double) s - 1) / ((double) sheetCount);
+                        double exportRogress = (double) ((double) (p + 1) / (double) pageSize) * ((double) 1 / sheetCount);
                         DecimalFormat df = new DecimalFormat("#.##");
                         String formattedResult = df.format((exportRogress + exportRogress2) * 100);
                         exportTask.setExportProgress(formattedResult);

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/DatasourceApi.java
Patch:
@@ -150,6 +150,8 @@ public interface DatasourceApi {
 
     DatasourceDTO innerGet(Long datasourceId) throws DEException;
 
+    String getName(Long datasourceId) throws DEException;
+
     List<DatasourceDTO> innerList(List<Long> ids, List<String> types) throws DEException;
 
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/dto/DataFillingDTO.java
Patch:
@@ -47,6 +47,8 @@ public class DataFillingDTO implements Serializable {
     @JsonSerialize(using = ToStringSerializer.class)
     private Long datasource;
 
+    private String datasourceName;
+
     /**
      * 表单内容
      */

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/DatasourceApi.java
Patch:
@@ -150,6 +150,8 @@ public interface DatasourceApi {
 
     DatasourceDTO innerGet(Long datasourceId) throws DEException;
 
+    String getName(Long datasourceId) throws DEException;
+
     List<DatasourceDTO> innerList(List<Long> ids, List<String> types) throws DEException;
 
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/dto/DataFillingDTO.java
Patch:
@@ -47,6 +47,8 @@ public class DataFillingDTO implements Serializable {
     @JsonSerialize(using = ToStringSerializer.class)
     private Long datasource;
 
+    private String datasourceName;
+
     /**
      * 表单内容
      */

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -42,6 +42,7 @@
 import io.dataease.i18n.Translator;
 import io.dataease.license.config.XpackInteract;
 import io.dataease.license.manage.F2CLicLimitedManage;
+import io.dataease.license.utils.LicenseUtil;
 import io.dataease.model.ExportTaskDTO;
 import io.dataease.system.manage.CoreUserManage;
 import io.dataease.system.manage.SysParameterManage;
@@ -422,6 +423,7 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
 
         TokenUserBO tokenUserBO = AuthUtils.getUser();
         Future future = scheduledThreadPoolExecutor.submit(() -> {
+            LicenseUtil.validate();
             AuthUtils.setUser(tokenUserBO);
             try {
                 exportTask.setExportStatus("IN_PROGRESS");
@@ -588,7 +590,7 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
                             }
                         }
                         exportTask.setExportStatus("IN_PROGRESS");
-                        double exportRogress2 = (double) ((double) s / (double) sheetCount);
+                        double exportRogress2 = (double) ((double) s - 1 / (double) sheetCount);
                         double exportRogress = (double) ((double) p / (double) pageSize) * ((double) 1 / sheetCount);
                         DecimalFormat df = new DecimalFormat("#.##");
                         String formattedResult = df.format((exportRogress + exportRogress2) * 100);

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -42,6 +42,7 @@
 import io.dataease.i18n.Translator;
 import io.dataease.license.config.XpackInteract;
 import io.dataease.license.manage.F2CLicLimitedManage;
+import io.dataease.license.utils.LicenseUtil;
 import io.dataease.model.ExportTaskDTO;
 import io.dataease.system.manage.CoreUserManage;
 import io.dataease.system.manage.SysParameterManage;
@@ -422,6 +423,7 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
 
         TokenUserBO tokenUserBO = AuthUtils.getUser();
         Future future = scheduledThreadPoolExecutor.submit(() -> {
+            LicenseUtil.validate();
             AuthUtils.setUser(tokenUserBO);
             try {
                 exportTask.setExportStatus("IN_PROGRESS");
@@ -588,7 +590,7 @@ private void startDatasetTask(CoreExportTask exportTask, DataSetExportRequest re
                             }
                         }
                         exportTask.setExportStatus("IN_PROGRESS");
-                        double exportRogress2 = (double) ((double) s / (double) sheetCount);
+                        double exportRogress2 = (double) ((double) s - 1 / (double) sheetCount);
                         double exportRogress = (double) ((double) p / (double) pageSize) * ((double) 1 / sheetCount);
                         DecimalFormat df = new DecimalFormat("#.##");
                         String formattedResult = df.format((exportRogress + exportRogress2) * 100);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/EngineProvider.java
Patch:
@@ -10,7 +10,7 @@
  * @Author gin
  * @Date 2021/5/17 4:19 下午
  */
-public abstract class EngineProvider extends CalciteProvider {
+public abstract class EngineProvider {
     public abstract String createView(String name, String viewSQL);
 
     public abstract String dropTable(String name);
@@ -23,6 +23,5 @@ public abstract class EngineProvider extends CalciteProvider {
 
     public abstract String insertSql(String name, List<String[]> dataList, int page, int pageNumber);
 
-    public void exec(EngineRequest datasourceRequest) throws Exception {
-    }
+
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/EngineProvider.java
Patch:
@@ -10,7 +10,7 @@
  * @Author gin
  * @Date 2021/5/17 4:19 下午
  */
-public abstract class EngineProvider extends CalciteProvider {
+public abstract class EngineProvider {
     public abstract String createView(String name, String viewSQL);
 
     public abstract String dropTable(String name);
@@ -23,6 +23,5 @@ public abstract class EngineProvider extends CalciteProvider {
 
     public abstract String insertSql(String name, List<String[]> dataList, int page, int pageNumber);
 
-    public void exec(EngineRequest datasourceRequest) throws Exception {
-    }
+
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -311,7 +311,7 @@ private String cellType(String value) {
         if (StringUtils.isEmpty(value) || value.length() > 19) {
             return "TEXT";
         }
-        String regex = "^\\d+(\\.\\d+)?$";
+        String regex = "^-?\\d+(\\.\\d+)?$";
         if (!value.matches(regex)) {
             return "TEXT";
         }

File: sdk/common/src/main/java/io/dataease/utils/TokenUtils.java
Patch:
@@ -31,6 +31,7 @@ public static TokenUserBO validate(String token) {
         return userBOByToken(token);
     }
 
+
     public static TokenUserBO validateLinkToken(String linkToken) {
         if (StringUtils.isBlank(linkToken)) {
             String uri = ServletUtils.request().getRequestURI();

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -311,7 +311,7 @@ private String cellType(String value) {
         if (StringUtils.isEmpty(value) || value.length() > 19) {
             return "TEXT";
         }
-        String regex = "^\\d+(\\.\\d+)?$";
+        String regex = "^-?\\d+(\\.\\d+)?$";
         if (!value.matches(regex)) {
             return "TEXT";
         }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -110,7 +110,6 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         }
 
         var dillAxis = new ArrayList<ChartViewFieldDTO>();
-
         DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         if (table == null) {
             DEException.throwException(ResultCode.DATA_IS_WRONG.code(), Translator.get("i18n_no_ds"));

File: core/core-backend/src/main/java/io/dataease/dataset/constant/DatasetTableType.java
Patch:
@@ -6,4 +6,5 @@
 public class DatasetTableType {
     public static String DB = "db";
     public static String SQL = "sql";
+    public static String Es = "es";
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1271,7 +1271,6 @@ public void initConnectionPool() {
                 try {
                     connection = initConnection(dsMap);
                 } catch (Exception e) {
-                    e.printStackTrace();
                 }
             });
 

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/factory/ProviderFactory.java
Patch:
@@ -21,6 +21,9 @@
 public class ProviderFactory {
 
     public static Provider getProvider(String type) throws DEException {
+        if (type.equalsIgnoreCase("es")) {
+            return SpringContextUtil.getApplicationContext().getBean("esProvider", Provider.class);
+        }
         List<String> list = Arrays.stream(DatasourceConfiguration.DatasourceType.values()).map(DatasourceConfiguration.DatasourceType::getType).toList();
         if (list.contains(type)) {
             return SpringContextUtil.getApplicationContext().getBean("calciteProvider", Provider.class);

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/vo/DatasourceConfiguration.java
Patch:
@@ -18,6 +18,7 @@ static public enum DatasourceType {
         impala("impala", "Apache Impala", "OLAP", "`", "`"),
         mariadb("mariadb", "Mariadb", "OLTP", "`", "`"),
         StarRocks("StarRocks", "StarRocks", "OLAP", "`", "`"),
+        es("es", "Elasticsearch", "OLAP", "\"", "\""),
         doris("doris", "Apache Doris", "OLAP", "`", "`"),
         TiDB("TiDB", "TiDB", "OLTP", "`", "`"),
         oracle("oracle", "ORACLE", "OLTP", "\"", "\""),

File: core/core-backend/src/main/java/io/dataease/MybatisPlusGenerator.java
Patch:
@@ -25,7 +25,7 @@ public class MybatisPlusGenerator {
     /**
      * 这是要生成代码的表名称
      */
-    private static final String TABLE_NAME = "visualization_outer_params_info";
+    private static final String TABLE_NAME = "visualization_link_jump_info";
 
     /**
      * 下面两个配置基本上不用动

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -47,8 +47,7 @@ private Map<String, Object> customBuildResult(ChartViewDTO view, AxisFormatResul
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extBubble = formatResult.getAxisMap().get(ChartAxis.extBubble);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        Map<String, Object> result = ChartDataBuild.transSymbolicMapNormalWithDetail(xAxis, yAxis, extBubble, data, detailFields, detailData);
-        return result;
+        return ChartDataBuild.transSymbolicMapNormalWithDetail(view, xAxis, yAxis, extBubble, data, detailFields, detailData);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/GroupMixHandler.java
Patch:
@@ -1,13 +1,10 @@
 package io.dataease.chart.charts.impl.mix;
 
-import io.dataease.chart.utils.ChartDataBuild;
 import io.dataease.extensions.view.dto.*;
 import lombok.Getter;
-import org.apache.commons.collections4.CollectionUtils;
 import org.springframework.stereotype.Component;
 
 import java.util.*;
-import java.util.stream.Collectors;
 
 @Component
 public class GroupMixHandler extends MixHandler {

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/StackMixHandler.java
Patch:
@@ -7,7 +7,6 @@
 import org.springframework.stereotype.Component;
 
 import java.util.*;
-import java.util.stream.Collectors;
 
 @Component
 public class StackMixHandler extends MixHandler {

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -212,7 +212,7 @@ public Map<String, List<DatasetTableFieldDTO>> listByDQ(Long id) {
     }
 
     public Map<String, List<DatasetTableFieldDTO>> copilotFields(Long id) throws Exception {
-        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(id, null);
+        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(id, null);
         Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, null);
         Map<Long, DatasourceSchemaDTO> dsMap = (Map<Long, DatasourceSchemaDTO>) sqlMap.get("dsMap");
         boolean crossDs = Utils.isCrossDs(dsMap);

File: core/core-backend/src/main/java/io/dataease/dataset/server/DatasetTreeServer.java
Patch:
@@ -77,7 +77,7 @@ public DataSetBarVO barInfo(Long id) {
 
     @Override
     public DatasetGroupInfoDTO get(Long id) throws Exception {
-        return datasetGroupManage.get(id, "preview");
+        return datasetGroupManage.getDatasetGroupInfoDTO(id, "preview");
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -337,9 +337,6 @@ public ConnectionObj getConnection(DatasourceDTO coreDatasource) throws Exceptio
             case ck:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), CK.class);
                 break;
-            case h2:
-                configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), H2.class);
-                break;
             default:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), Mysql.class);
         }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -208,6 +208,7 @@ public DatasourceDTO reName(BusiRenameRequest busiDsRequest) {
         }
         CoreDatasource datasource = datasourceMapper.selectById(dataSourceDTO.getId());
         datasource.setName(dataSourceDTO.getName());
+        dataSourceDTO.setPid(datasource.getPid());
         dataSourceManage.checkName(dataSourceDTO);
         dataSourceManage.innerEdit(datasource);
         return dataSourceDTO;

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,6 +71,8 @@ public class SQLConstants {
 
     public static final String WHERE_VALUE_VALUE = "'%s'";
 
+    public static final String WHERE_VALUE_VALUE_CH = "N'%s'";
+
     public static final String WHERE_NUMBER_VALUE = "%s";
 
     public static final String AGG_COUNT = "COUNT(*)";

File: core/core-backend/src/main/java/io/dataease/visualization/dao/auto/mapper/VisualizationLinkJumpInfoMapper.java
Patch:
@@ -6,11 +6,11 @@
 
 /**
  * <p>
- *  Mapper 接口
+ * 跳转配置表 Mapper 接口
  * </p>
  *
  * @author fit2cloud
- * @since 2023-09-22
+ * @since 2024-09-19
  */
 @Mapper
 public interface VisualizationLinkJumpInfoMapper extends BaseMapper<VisualizationLinkJumpInfo> {

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -622,7 +622,9 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
                 || StringUtils.containsIgnoreCase(view.getType(), "group")
                 || ("antv".equalsIgnoreCase(view.getRender()) && "line".equalsIgnoreCase(view.getType()))
                 || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")
-                || StringUtils.equalsIgnoreCase(view.getType(), "t-heatmap")) {
+                || StringUtils.equalsIgnoreCase(view.getType(), "t-heatmap")
+                || StringUtils.equalsIgnoreCase(view.getType(), "sankey")
+        ) {
             xAxis.addAll(xAxisExt);
         }
         List<ChartViewFieldDTO> yAxis = new ArrayList<>(view.getYAxis());

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -625,7 +625,9 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
                 || StringUtils.containsIgnoreCase(view.getType(), "group")
                 || ("antv".equalsIgnoreCase(view.getRender()) && "line".equalsIgnoreCase(view.getType()))
                 || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")
-                || StringUtils.equalsIgnoreCase(view.getType(), "t-heatmap")) {
+                || StringUtils.equalsIgnoreCase(view.getType(), "t-heatmap")
+                || StringUtils.equalsIgnoreCase(view.getType(), "sankey")
+        ) {
             xAxis.addAll(xAxisExt);
         }
         List<ChartViewFieldDTO> yAxis = new ArrayList<>(view.getYAxis());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -47,8 +47,7 @@ private Map<String, Object> customBuildResult(ChartViewDTO view, AxisFormatResul
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extBubble = formatResult.getAxisMap().get(ChartAxis.extBubble);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        Map<String, Object> result = ChartDataBuild.transSymbolicMapNormalWithDetail(xAxis, yAxis, extBubble, data, detailFields, detailData);
-        return result;
+        return ChartDataBuild.transSymbolicMapNormalWithDetail(view, xAxis, yAxis, extBubble, data, detailFields, detailData);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1766,7 +1766,7 @@ private static String getTimeGap(Date from, Date to, String dateStyle) {
         }
     }
 
-    public static Map<String, Object> transSymbolicMapNormalWithDetail(List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, List<ChartViewFieldDTO> extBubble, List<String[]> data, List<ChartViewFieldDTO> detailFields, List<String[]> detailData) {
+    public static Map<String, Object> transSymbolicMapNormalWithDetail(ChartViewDTO view, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, List<ChartViewFieldDTO> extBubble, List<String[]> data, List<ChartViewFieldDTO> detailFields, List<String[]> detailData) {
         int detailIndex = xAxis.size();
 
         List<ChartViewFieldDTO> realDetailFields = detailFields.subList(detailIndex, detailFields.size());
@@ -1778,7 +1778,7 @@ public static Map<String, Object> transSymbolicMapNormalWithDetail(List<ChartVie
             fields.addAll(extBubble);
         if (ObjectUtils.isNotEmpty(yAxis))
             fields.addAll(yAxis);
-        Map<String, Object> map = transTableNormal(fields, null, data, new HashMap<>());
+        Map<String, Object> map = transTableNormal(fields, view, data, new HashMap<>());
         List<Map<String, Object>> tableRow = (List<Map<String, Object>>) map.get("tableRow");
         final int xEndIndex = detailIndex;
         Map<String, List<String[]>> groupDataList = detailData.stream().collect(Collectors.groupingBy(item -> "(" + StringUtils.join(ArrayUtils.subarray(item, 0, xEndIndex), ")-de-(") + ")"));

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -47,8 +47,7 @@ private Map<String, Object> customBuildResult(ChartViewDTO view, AxisFormatResul
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extBubble = formatResult.getAxisMap().get(ChartAxis.extBubble);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        Map<String, Object> result = ChartDataBuild.transSymbolicMapNormalWithDetail(xAxis, yAxis, extBubble, data, detailFields, detailData);
-        return result;
+        return ChartDataBuild.transSymbolicMapNormalWithDetail(view, xAxis, yAxis, extBubble, data, detailFields, detailData);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1766,7 +1766,7 @@ private static String getTimeGap(Date from, Date to, String dateStyle) {
         }
     }
 
-    public static Map<String, Object> transSymbolicMapNormalWithDetail(List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, List<ChartViewFieldDTO> extBubble, List<String[]> data, List<ChartViewFieldDTO> detailFields, List<String[]> detailData) {
+    public static Map<String, Object> transSymbolicMapNormalWithDetail(ChartViewDTO view, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, List<ChartViewFieldDTO> extBubble, List<String[]> data, List<ChartViewFieldDTO> detailFields, List<String[]> detailData) {
         int detailIndex = xAxis.size();
 
         List<ChartViewFieldDTO> realDetailFields = detailFields.subList(detailIndex, detailFields.size());
@@ -1778,7 +1778,7 @@ public static Map<String, Object> transSymbolicMapNormalWithDetail(List<ChartVie
             fields.addAll(extBubble);
         if (ObjectUtils.isNotEmpty(yAxis))
             fields.addAll(yAxis);
-        Map<String, Object> map = transTableNormal(fields, null, data, new HashMap<>());
+        Map<String, Object> map = transTableNormal(fields, view, data, new HashMap<>());
         List<Map<String, Object>> tableRow = (List<Map<String, Object>>) map.get("tableRow");
         final int xEndIndex = detailIndex;
         Map<String, List<String[]>> groupDataList = detailData.stream().collect(Collectors.groupingBy(item -> "(" + StringUtils.join(ArrayUtils.subarray(item, 0, xEndIndex), ")-de-(") + ")"));

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -208,6 +208,7 @@ public DatasourceDTO reName(BusiRenameRequest busiDsRequest) {
         }
         CoreDatasource datasource = datasourceMapper.selectById(dataSourceDTO.getId());
         datasource.setName(dataSourceDTO.getName());
+        dataSourceDTO.setPid(datasource.getPid());
         dataSourceManage.checkName(dataSourceDTO);
         dataSourceManage.innerEdit(datasource);
         return dataSourceDTO;

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -208,6 +208,7 @@ public DatasourceDTO reName(BusiRenameRequest busiDsRequest) {
         }
         CoreDatasource datasource = datasourceMapper.selectById(dataSourceDTO.getId());
         datasource.setName(dataSourceDTO.getName());
+        dataSourceDTO.setPid(datasource.getPid());
         dataSourceManage.checkName(dataSourceDTO);
         dataSourceManage.innerEdit(datasource);
         return dataSourceDTO;

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -111,7 +111,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
 
         var dillAxis = new ArrayList<ChartViewFieldDTO>();
 
-        DatasetGroupInfoDTO table = datasetGroupManage.get(view.getTableId(), null);
+        DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         if (table == null) {
             DEException.throwException(ResultCode.DATA_IS_WRONG.code(), Translator.get("i18n_no_ds"));
         }
@@ -643,7 +643,7 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
         List<ChartViewFieldDTO> drill = new ArrayList<>(view.getDrillFields());
 
         // 获取数据集,需校验权限
-        DatasetGroupInfoDTO table = datasetGroupManage.get(view.getTableId(), null);
+        DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         Map<String, ColumnPermissionItem> desensitizationList = new HashMap<>();
         List<DataSetRowPermissionsTreeDTO> rowPermissionsTree = permissionManage.getRowPermissionsTree(table.getId(), view.getChartExtRequest().getUser());
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -516,7 +516,7 @@ public List<String> getFieldEnum(MultFieldValuesRequest multFieldValuesRequest)
             if (field.getChartId() != null) {
                 allFields.addAll(datasetTableFieldManage.getChartCalcFields(field.getChartId()));
             }
-            DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(datasetGroupId, null);
+            DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(datasetGroupId, null);
 
             Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, new ChartExtRequest());
             String sql = (String) sqlMap.get("sql");
@@ -668,7 +668,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
             if (field.getChartId() != null) {
                 allFields.addAll(datasetTableFieldManage.getChartCalcFields(field.getChartId()));
             }
-            datasetGroupInfoDTO = datasetGroupManage.get(datasetGroupId, null);
+            datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(datasetGroupId, null);
 
             sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, new ChartExtRequest());
             String sql = (String) sqlMap.get("sql");
@@ -888,7 +888,7 @@ public List<BaseTreeNodeDTO> getFieldValueTree(MultFieldValuesRequest multFieldV
         if (field.getChartId() != null) {
             allFields.addAll(datasetTableFieldManage.getChartCalcFields(field.getChartId()));
         }
-        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(datasetGroupId, null);
+        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(datasetGroupId, null);
 
         Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, new ChartExtRequest());
         String sql = (String) sqlMap.get("sql");

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -431,7 +431,7 @@ public DatasetGroupInfoDTO getDetail(Long id) throws Exception {
         return dto;
     }
 
-    public DatasetGroupInfoDTO get(Long id, String type) throws Exception {
+    public DatasetGroupInfoDTO getDatasetGroupInfoDTO(Long id, String type) throws Exception {
         CoreDatasetGroup coreDatasetGroup = coreDatasetGroupMapper.selectById(id);
         if (coreDatasetGroup == null) {
             return null;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -212,7 +212,7 @@ public Map<String, List<DatasetTableFieldDTO>> listByDQ(Long id) {
     }
 
     public Map<String, List<DatasetTableFieldDTO>> copilotFields(Long id) throws Exception {
-        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(id, null);
+        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(id, null);
         Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, null);
         Map<Long, DatasourceSchemaDTO> dsMap = (Map<Long, DatasourceSchemaDTO>) sqlMap.get("dsMap");
         boolean crossDs = Utils.isCrossDs(dsMap);

File: core/core-backend/src/main/java/io/dataease/dataset/server/DatasetTreeServer.java
Patch:
@@ -77,7 +77,7 @@ public DataSetBarVO barInfo(Long id) {
 
     @Override
     public DatasetGroupInfoDTO get(Long id) throws Exception {
-        return datasetGroupManage.get(id, "preview");
+        return datasetGroupManage.getDatasetGroupInfoDTO(id, "preview");
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -111,7 +111,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
 
         var dillAxis = new ArrayList<ChartViewFieldDTO>();
 
-        DatasetGroupInfoDTO table = datasetGroupManage.get(view.getTableId(), null);
+        DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         if (table == null) {
             DEException.throwException(ResultCode.DATA_IS_WRONG.code(), Translator.get("i18n_no_ds"));
         }
@@ -643,7 +643,7 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
         List<ChartViewFieldDTO> drill = new ArrayList<>(view.getDrillFields());
 
         // 获取数据集,需校验权限
-        DatasetGroupInfoDTO table = datasetGroupManage.get(view.getTableId(), null);
+        DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         Map<String, ColumnPermissionItem> desensitizationList = new HashMap<>();
         List<DataSetRowPermissionsTreeDTO> rowPermissionsTree = permissionManage.getRowPermissionsTree(table.getId(), view.getChartExtRequest().getUser());
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -516,7 +516,7 @@ public List<String> getFieldEnum(MultFieldValuesRequest multFieldValuesRequest)
             if (field.getChartId() != null) {
                 allFields.addAll(datasetTableFieldManage.getChartCalcFields(field.getChartId()));
             }
-            DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(datasetGroupId, null);
+            DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(datasetGroupId, null);
 
             Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, new ChartExtRequest());
             String sql = (String) sqlMap.get("sql");
@@ -668,7 +668,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
             if (field.getChartId() != null) {
                 allFields.addAll(datasetTableFieldManage.getChartCalcFields(field.getChartId()));
             }
-            datasetGroupInfoDTO = datasetGroupManage.get(datasetGroupId, null);
+            datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(datasetGroupId, null);
 
             sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, new ChartExtRequest());
             String sql = (String) sqlMap.get("sql");
@@ -888,7 +888,7 @@ public List<BaseTreeNodeDTO> getFieldValueTree(MultFieldValuesRequest multFieldV
         if (field.getChartId() != null) {
             allFields.addAll(datasetTableFieldManage.getChartCalcFields(field.getChartId()));
         }
-        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(datasetGroupId, null);
+        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(datasetGroupId, null);
 
         Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, new ChartExtRequest());
         String sql = (String) sqlMap.get("sql");

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -431,7 +431,7 @@ public DatasetGroupInfoDTO getDetail(Long id) throws Exception {
         return dto;
     }
 
-    public DatasetGroupInfoDTO get(Long id, String type) throws Exception {
+    public DatasetGroupInfoDTO getDatasetGroupInfoDTO(Long id, String type) throws Exception {
         CoreDatasetGroup coreDatasetGroup = coreDatasetGroupMapper.selectById(id);
         if (coreDatasetGroup == null) {
             return null;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -212,7 +212,7 @@ public Map<String, List<DatasetTableFieldDTO>> listByDQ(Long id) {
     }
 
     public Map<String, List<DatasetTableFieldDTO>> copilotFields(Long id) throws Exception {
-        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.get(id, null);
+        DatasetGroupInfoDTO datasetGroupInfoDTO = datasetGroupManage.getDatasetGroupInfoDTO(id, null);
         Map<String, Object> sqlMap = datasetSQLManage.getUnionSQLForEdit(datasetGroupInfoDTO, null);
         Map<Long, DatasourceSchemaDTO> dsMap = (Map<Long, DatasourceSchemaDTO>) sqlMap.get("dsMap");
         boolean crossDs = Utils.isCrossDs(dsMap);

File: core/core-backend/src/main/java/io/dataease/dataset/server/DatasetTreeServer.java
Patch:
@@ -77,7 +77,7 @@ public DataSetBarVO barInfo(Long id) {
 
     @Override
     public DatasetGroupInfoDTO get(Long id) throws Exception {
-        return datasetGroupManage.get(id, "preview");
+        return datasetGroupManage.getDatasetGroupInfoDTO(id, "preview");
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -555,6 +555,9 @@ private void getParents(Long pid, List<Long> ids) {
 
     public void geFullName(Long pid, List<String> fullName) {
         CoreDatasetGroup parent = coreDatasetGroupMapper.selectById(pid);// 查找父级folder
+        if (parent == null) {
+            return;
+        }
         fullName.add(parent.getName());
         if (parent.getPid() != null && parent.getPid() != 0) {
             geFullName(parent.getPid(), fullName);

File: sdk/common/src/main/java/io/dataease/utils/CommonThreadPool.java
Patch:
@@ -24,7 +24,7 @@ public class CommonThreadPool {
     @PostConstruct
     public void init() {
         scheduledThreadPoolExecutor = new ScheduledThreadPoolExecutor(corePoolSize);
-        scheduledThreadPoolExecutor.setMaximumPoolSize(maximumPoolSize);
+        scheduledThreadPoolExecutor.setMaximumPoolSize(corePoolSize);
         scheduledThreadPoolExecutor.setKeepAliveTime(keepAliveSeconds, TimeUnit.SECONDS);
     }
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -561,6 +561,9 @@ private void getParents(Long pid, List<Long> ids) {
 
     public void geFullName(Long pid, List<String> fullName) {
         CoreDatasetGroup parent = coreDatasetGroupMapper.selectById(pid);// 查找父级folder
+        if (parent == null) {
+            return;
+        }
         fullName.add(parent.getName());
         if (parent.getPid() != null && parent.getPid() != 0) {
             geFullName(parent.getPid(), fullName);

File: sdk/common/src/main/java/io/dataease/utils/CommonThreadPool.java
Patch:
@@ -24,7 +24,7 @@ public class CommonThreadPool {
     @PostConstruct
     public void init() {
         scheduledThreadPoolExecutor = new ScheduledThreadPoolExecutor(corePoolSize);
-        scheduledThreadPoolExecutor.setMaximumPoolSize(maximumPoolSize);
+        scheduledThreadPoolExecutor.setMaximumPoolSize(corePoolSize);
         scheduledThreadPoolExecutor.setKeepAliveTime(keepAliveSeconds, TimeUnit.SECONDS);
     }
 

File: sdk/common/src/main/java/io/dataease/utils/CommonThreadPool.java
Patch:
@@ -15,13 +15,16 @@ public class CommonThreadPool {
 
     private int maxQueueSize = 10;
 
+    private int maximumPoolSize = 10;
+
     private int keepAliveSeconds = 600;
 
     private ScheduledThreadPoolExecutor scheduledThreadPoolExecutor;
 
     @PostConstruct
     public void init() {
         scheduledThreadPoolExecutor = new ScheduledThreadPoolExecutor(corePoolSize);
+        scheduledThreadPoolExecutor.setMaximumPoolSize(maximumPoolSize);
         scheduledThreadPoolExecutor.setKeepAliveTime(keepAliveSeconds, TimeUnit.SECONDS);
     }
 

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -68,6 +68,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/geo/")
                 || StringUtils.startsWithAny(requestURI, "/websocket")
                 || StringUtils.startsWithAny(requestURI, "/map/")
+                || StringUtils.startsWithAny(requestURI, "/oauth2/")
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
                 || StringUtils.startsWithAny(requestURI, "/typeface/listFont")

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -337,9 +337,6 @@ public ConnectionObj getConnection(DatasourceDTO coreDatasource) throws Exceptio
             case ck:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), CK.class);
                 break;
-            case h2:
-                configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), H2.class);
-                break;
             default:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), Mysql.class);
         }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -337,9 +337,6 @@ public ConnectionObj getConnection(DatasourceDTO coreDatasource) throws Exceptio
             case ck:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), CK.class);
                 break;
-            case h2:
-                configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), H2.class);
-                break;
             default:
                 configuration = JsonUtil.parseObject(coreDatasource.getConfiguration(), Mysql.class);
         }

File: sdk/common/src/main/java/io/dataease/utils/CommonThreadPool.java
Patch:
@@ -15,13 +15,16 @@ public class CommonThreadPool {
 
     private int maxQueueSize = 10;
 
+    private int maximumPoolSize = 10;
+
     private int keepAliveSeconds = 600;
 
     private ScheduledThreadPoolExecutor scheduledThreadPoolExecutor;
 
     @PostConstruct
     public void init() {
         scheduledThreadPoolExecutor = new ScheduledThreadPoolExecutor(corePoolSize);
+        scheduledThreadPoolExecutor.setMaximumPoolSize(maximumPoolSize);
         scheduledThreadPoolExecutor.setKeepAliveTime(keepAliveSeconds, TimeUnit.SECONDS);
     }
 

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/BusiDsRequest.java
Patch:
@@ -27,10 +27,12 @@ public class BusiDsRequest implements Serializable {
     @Schema(description = "操作类型", requiredMode = Schema.RequiredMode.REQUIRED)
     private String  action;
     private String description;
+    @Schema(description = "数据源类型", requiredMode = Schema.RequiredMode.REQUIRED)
     private String type;
     private String typeAlias;
     private String catalog;
     private String catalogDesc;
+    @Schema(description = "详细信息", requiredMode = Schema.RequiredMode.REQUIRED)
     private String configuration;
     private String apiConfigurationStr;
     private String paramsStr;

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/BusiDsRequest.java
Patch:
@@ -27,10 +27,12 @@ public class BusiDsRequest implements Serializable {
     @Schema(description = "操作类型", requiredMode = Schema.RequiredMode.REQUIRED)
     private String  action;
     private String description;
+    @Schema(description = "数据源类型", requiredMode = Schema.RequiredMode.REQUIRED)
     private String type;
     private String typeAlias;
     private String catalog;
     private String catalogDesc;
+    @Schema(description = "详细信息", requiredMode = Schema.RequiredMode.REQUIRED)
     private String configuration;
     private String apiConfigurationStr;
     private String paramsStr;

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/GroupChartHandler.java
Patch:
@@ -8,7 +8,7 @@
 
 import java.util.ArrayList;
 
-public class GroupChartHandler extends DefaultChartHandler {
+public class GroupChartHandler extends YoyChartHandler {
     @Override
     public AxisFormatResult formatAxis(ChartViewDTO view) {
         var result = super.formatAxis(view);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/GroupChartHandler.java
Patch:
@@ -8,7 +8,7 @@
 
 import java.util.ArrayList;
 
-public class GroupChartHandler extends DefaultChartHandler {
+public class GroupChartHandler extends YoyChartHandler {
     @Override
     public AxisFormatResult formatAxis(ChartViewDTO view) {
         var result = super.formatAxis(view);

File: core/core-backend/src/main/java/io/dataease/substitute/permissions/login/SubstituleLoginServer.java
Patch:
@@ -15,7 +15,7 @@
 import org.springframework.web.bind.annotation.RestController;
 
 @Component
-@ConditionalOnMissingBean(name = "userServer")
+@ConditionalOnMissingBean(name = "loginServer")
 @RestController
 @RequestMapping
 public class SubstituleLoginServer {

File: core/core-backend/src/main/java/io/dataease/substitute/permissions/user/SubstituteUserServer.java
Patch:
@@ -13,7 +13,7 @@
 import java.util.Map;
 
 @Component
-@ConditionalOnMissingBean(name = "loginServer")
+@ConditionalOnMissingBean(name = "userServer")
 @RestController
 @RequestMapping("/user")
 public class SubstituteUserServer {

File: core/core-backend/src/main/java/io/dataease/substitute/permissions/login/SubstituleLoginServer.java
Patch:
@@ -15,7 +15,7 @@
 import org.springframework.web.bind.annotation.RestController;
 
 @Component
-@ConditionalOnMissingBean(name = "userServer")
+@ConditionalOnMissingBean(name = "loginServer")
 @RestController
 @RequestMapping
 public class SubstituleLoginServer {

File: core/core-backend/src/main/java/io/dataease/substitute/permissions/user/SubstituteUserServer.java
Patch:
@@ -13,7 +13,7 @@
 import java.util.Map;
 
 @Component
-@ConditionalOnMissingBean(name = "loginServer")
+@ConditionalOnMissingBean(name = "userServer")
 @RestController
 @RequestMapping("/user")
 public class SubstituteUserServer {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1112,11 +1112,11 @@ private List<String> getTablesSql(DatasourceRequest datasourceRequest) throws DE
                 if (StringUtils.isEmpty(configuration.getSchema())) {
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
-                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "    relkind = 'r'  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
+                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
                 break;
             case redshift:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), CK.class);
-                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "    relkind = 'r'  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
+                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
                 break;
             case ck:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), CK.class);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -1112,11 +1112,11 @@ private List<String> getTablesSql(DatasourceRequest datasourceRequest) throws DE
                 if (StringUtils.isEmpty(configuration.getSchema())) {
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
-                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "    relkind = 'r'  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
+                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
                 break;
             case redshift:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), CK.class);
-                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "    relkind = 'r'  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
+                tableSqls.add("SELECT  \n" + "    relname AS TableName,  \n" + "    obj_description(relfilenode::regclass, 'pg_class') AS TableDescription  \n" + "FROM  \n" + "    pg_class  \n" + "WHERE  \n" + "   relkind in  ('r','p')  \n" + "    AND relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'SCHEMA') ".replace("SCHEMA", configuration.getSchema()));
                 break;
             case ck:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), CK.class);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartViewThresholdManage.java
Patch:
@@ -219,7 +219,7 @@ public ThresholdCheckVO checkThreshold(ThresholdCheckRequest request) throws Exc
                 if (ObjectUtils.isEmpty(fieldDTO)) continue;
                 String fieldDTOName = fieldDTO.getName();
                 String dataeaseName = fieldDTO.getDataeaseName();
-                List<String> valueList = rows.stream().map(row -> row.get(dataeaseName).toString()).collect(Collectors.toList());
+                List<String> valueList = rows.stream().map(row -> ObjectUtils.isEmpty(row.get(dataeaseName)) ? null : row.get(dataeaseName).toString()).collect(Collectors.toList());
                 String replacement = fieldDTOName + ": " + JsonUtil.toJSONString(valueList);
                 // 替换文本
                 matcher.appendReplacement(sb, replacement);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartViewThresholdManage.java
Patch:
@@ -219,7 +219,7 @@ public ThresholdCheckVO checkThreshold(ThresholdCheckRequest request) throws Exc
                 if (ObjectUtils.isEmpty(fieldDTO)) continue;
                 String fieldDTOName = fieldDTO.getName();
                 String dataeaseName = fieldDTO.getDataeaseName();
-                List<String> valueList = rows.stream().map(row -> row.get(dataeaseName).toString()).collect(Collectors.toList());
+                List<String> valueList = rows.stream().map(row -> ObjectUtils.isEmpty(row.get(dataeaseName)) ? null : row.get(dataeaseName).toString()).collect(Collectors.toList());
                 String replacement = fieldDTOName + ": " + JsonUtil.toJSONString(valueList);
                 // 替换文本
                 matcher.appendReplacement(sb, replacement);

File: core/core-backend/src/main/java/io/dataease/share/manage/ShareTicketManage.java
Patch:
@@ -55,7 +55,8 @@ public String saveTicket(TicketCreator creator) {
                 ticketEntity.setArgs(creator.getArgs());
                 ticketEntity.setExp(creator.getExp());
                 ticketEntity.setUuid(creator.getUuid());
-                coreShareTicketMapper.updateById(ticketEntity);
+                coreShareTicketMapper.deleteById(ticketEntity);
+                coreShareTicketMapper.insert(ticketEntity);
                 return ticketEntity.getTicket();
             }
         }

File: core/core-backend/src/main/java/io/dataease/share/manage/ShareTicketManage.java
Patch:
@@ -55,7 +55,8 @@ public String saveTicket(TicketCreator creator) {
                 ticketEntity.setArgs(creator.getArgs());
                 ticketEntity.setExp(creator.getExp());
                 ticketEntity.setUuid(creator.getUuid());
-                coreShareTicketMapper.updateById(ticketEntity);
+                coreShareTicketMapper.deleteById(ticketEntity);
+                coreShareTicketMapper.insert(ticketEntity);
                 return ticketEntity.getTicket();
             }
         }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -70,6 +70,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/map/")
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
+                || StringUtils.startsWithAny(requestURI, "/typeface/listFont")
                 || StringUtils.startsWithAny(requestURI, "/communicate/image/")
                 || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -70,6 +70,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/map/")
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
+                || StringUtils.startsWithAny(requestURI, "/typeface/listFont")
                 || StringUtils.startsWithAny(requestURI, "/communicate/image/")
                 || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartViewThresholdManage.java
Patch:
@@ -199,6 +199,9 @@ public ThresholdCheckVO checkThreshold(ThresholdCheckRequest request) throws Exc
             thresholdTemplate = convertStyle(thresholdTemplate.replace("[触发告警]", s));
             List<Map<String, Object>> tableRow = (List<Map<String, Object>>) data.get("tableRow");
             List<DatasetTableFieldDTO> fields = (List<DatasetTableFieldDTO>) data.get("fields");
+            if (CollectionUtils.isEmpty(fields)) {
+                return new ThresholdCheckVO(false, null, String.format("当前图表类型[%s]暂不支持阈值告警！", chart.getType()), null);
+            }
             Map<Long, DatasetTableFieldDTO> fieldMap = fields.stream().collect(Collectors.toMap(DatasetTableFieldDTO::getId, item -> item));
             FilterTreeObj filterTreeObj = JsonUtil.parseObject(thresholdRules, FilterTreeObj.class);
             List<Map<String, Object>> rows = filterRows(tableRow, filterTreeObj, fieldMap);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartViewThresholdManage.java
Patch:
@@ -199,6 +199,9 @@ public ThresholdCheckVO checkThreshold(ThresholdCheckRequest request) throws Exc
             thresholdTemplate = convertStyle(thresholdTemplate.replace("[触发告警]", s));
             List<Map<String, Object>> tableRow = (List<Map<String, Object>>) data.get("tableRow");
             List<DatasetTableFieldDTO> fields = (List<DatasetTableFieldDTO>) data.get("fields");
+            if (CollectionUtils.isEmpty(fields)) {
+                return new ThresholdCheckVO(false, null, String.format("当前图表类型[%s]暂不支持阈值告警！", chart.getType()), null);
+            }
             Map<Long, DatasetTableFieldDTO> fieldMap = fields.stream().collect(Collectors.toMap(DatasetTableFieldDTO::getId, item -> item));
             FilterTreeObj filterTreeObj = JsonUtil.parseObject(thresholdRules, FilterTreeObj.class);
             List<Map<String, Object>> rows = filterRows(tableRow, filterTreeObj, fieldMap);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -86,7 +86,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         }
         Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
-        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
+        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * chartExtRequest.getPageSize() : "");
         var querySql = originSql + limit;
 
         var tablePageMode = (String) filterResult.getContext().get("tablePageMode");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -86,7 +86,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         }
         Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
-        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
+        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * chartExtRequest.getPageSize() : "");
         var querySql = originSql + limit;
 
         var tablePageMode = (String) filterResult.getContext().get("tablePageMode");

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/pie/PieHandler.java
Patch:
@@ -1,7 +1,5 @@
 package io.dataease.chart.charts.impl.pie;
 
-import io.dataease.chart.charts.impl.DefaultChartHandler;
-import io.dataease.chart.charts.impl.ExtQuotaChartHandler;
 import io.dataease.chart.charts.impl.YoyChartHandler;
 import io.dataease.extensions.view.dto.AxisFormatResult;
 import io.dataease.extensions.view.dto.ChartAxis;
@@ -15,7 +13,7 @@ public void init() {
         chartHandlerManager.registerChartHandler(this.getRender(), "pie", this);
         chartHandlerManager.registerChartHandler(this.getRender(), "pie-rose", this);
         chartHandlerManager.registerChartHandler(this.getRender(), "pie-donut", this);
-        chartHandlerManager.registerChartHandler(this.getRender(), "pie-rose-donut", this);
+        chartHandlerManager.registerChartHandler(this.getRender(), "pie-donut-rose", this);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/pie/PieHandler.java
Patch:
@@ -1,7 +1,5 @@
 package io.dataease.chart.charts.impl.pie;
 
-import io.dataease.chart.charts.impl.DefaultChartHandler;
-import io.dataease.chart.charts.impl.ExtQuotaChartHandler;
 import io.dataease.chart.charts.impl.YoyChartHandler;
 import io.dataease.extensions.view.dto.AxisFormatResult;
 import io.dataease.extensions.view.dto.ChartAxis;
@@ -15,7 +13,7 @@ public void init() {
         chartHandlerManager.registerChartHandler(this.getRender(), "pie", this);
         chartHandlerManager.registerChartHandler(this.getRender(), "pie-rose", this);
         chartHandlerManager.registerChartHandler(this.getRender(), "pie-donut", this);
-        chartHandlerManager.registerChartHandler(this.getRender(), "pie-rose-donut", this);
+        chartHandlerManager.registerChartHandler(this.getRender(), "pie-donut-rose", this);
     }
 
     @Override

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/dataset/dto/DataSetRowPermissionsTreeDTO.java
Patch:
@@ -68,4 +68,6 @@ public class DataSetRowPermissionsTreeDTO  {
     private List<UserFormVO> whiteListUsers;
     private List<RoleVO> whiteListRoles;
     private List<Long> authTargetIds;
+    private  boolean exportData;
+
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/dataset/dto/DataSetRowPermissionsTreeDTO.java
Patch:
@@ -68,4 +68,6 @@ public class DataSetRowPermissionsTreeDTO  {
     private List<UserFormVO> whiteListUsers;
     private List<RoleVO> whiteListRoles;
     private List<Long> authTargetIds;
+    private  boolean exportData;
+
 }

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/TableField.java
Patch:
@@ -2,11 +2,12 @@
 
 import lombok.Data;
 
+import java.io.Serializable;
 import java.util.List;
 
 
 @Data
-public class TableField {
+public class TableField implements Serializable {
     private String name;
     private String originName;
     private String type;               //SQL type from java.sql.Types

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/TableField.java
Patch:
@@ -2,11 +2,12 @@
 
 import lombok.Data;
 
+import java.io.Serializable;
 import java.util.List;
 
 
 @Data
-public class TableField {
+public class TableField implements Serializable {
     private String name;
     private String originName;
     private String type;               //SQL type from java.sql.Types

File: core/core-backend/src/main/java/io/dataease/font/manage/FontManage.java
Patch:
@@ -114,7 +114,7 @@ public void download(String file, HttpServletResponse response) {
         QueryWrapper<CoreFont> queryWrapper = new QueryWrapper<>();
         queryWrapper.eq("file_trans_name", file);
         List<CoreFont> coreFonts = coreFontMapper.selectList(queryWrapper);
-        if (CollectionUtils.isNotEmpty(coreFonts)) {
+        if (CollectionUtils.isEmpty(coreFonts)) {
             DEException.throwException("不存在的字库文件");
         }
 

File: core/core-backend/src/main/java/io/dataease/font/manage/FontManage.java
Patch:
@@ -114,7 +114,7 @@ public void download(String file, HttpServletResponse response) {
         QueryWrapper<CoreFont> queryWrapper = new QueryWrapper<>();
         queryWrapper.eq("file_trans_name", file);
         List<CoreFont> coreFonts = coreFontMapper.selectList(queryWrapper);
-        if (CollectionUtils.isNotEmpty(coreFonts)) {
+        if (CollectionUtils.isEmpty(coreFonts)) {
             DEException.throwException("不存在的字库文件");
         }
 

File: core/core-backend/src/main/java/io/dataease/font/dao/auto/mapper/CoreFontMapper.java
Patch:
@@ -10,7 +10,7 @@
  * </p>
  *
  * @author fit2cloud
- * @since 2024-08-26
+ * @since 2024-08-28
  */
 @Mapper
 public interface CoreFontMapper extends BaseMapper<CoreFont> {

File: core/core-backend/src/main/java/io/dataease/font/server/FontServer.java
Patch:
@@ -45,13 +45,13 @@ public void changeDefault(FontDto fontDto) {
     }
 
     @Override
-    public String upload(MultipartFile file) throws DEException {
+    public FontDto upload(MultipartFile file) throws DEException {
         return fontManage.upload(file);
     }
 
     @Override
-    public void download(Long id, HttpServletResponse response) throws DEException {
-        fontManage.download(id, response);
+    public void download(String file, HttpServletResponse response) throws DEException {
+        fontManage.download(file, response);
     }
 
     @Override

File: sdk/api/api-base/src/main/java/io/dataease/api/font/api/FontApi.java
Patch:
@@ -42,10 +42,10 @@ public interface FontApi {
     public void changeDefault(@RequestBody FontDto fontDto);
 
     @PostMapping("/uploadFile")
-    String upload(@RequestParam("file") MultipartFile file) throws DEException;
+    FontDto upload(@RequestParam("file") MultipartFile file) throws DEException;
 
-    @GetMapping("/download/{id}")
-    void download(@PathVariable("id") Long id, HttpServletResponse response) throws DEException;
+    @GetMapping("/download/{file}")
+    void download(@PathVariable("file") String file, HttpServletResponse response) throws DEException;
 
     @GetMapping("/defaultFont")
     List<FontDto> defaultFont() throws DEException;

File: sdk/api/api-base/src/main/java/io/dataease/api/font/dto/FontDto.java
Patch:
@@ -30,5 +30,7 @@ public class FontDto {
     private Boolean isDefault;
     private Long updateTime;
     private Boolean isBuiltin;
+    private Double size;
+    private String sizeType;
 }
 

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/ConnectionObj.java
Patch:
@@ -23,7 +23,6 @@ public void close() throws Exception {
         }
 
         if (session != null) {
-            System.out.println("session.disconnect()");
             session.disconnect();
         }
 

File: core/core-backend/src/main/java/io/dataease/font/dao/auto/mapper/CoreFontMapper.java
Patch:
@@ -10,7 +10,7 @@
  * </p>
  *
  * @author fit2cloud
- * @since 2024-08-26
+ * @since 2024-08-28
  */
 @Mapper
 public interface CoreFontMapper extends BaseMapper<CoreFont> {

File: core/core-backend/src/main/java/io/dataease/font/server/FontServer.java
Patch:
@@ -45,13 +45,13 @@ public void changeDefault(FontDto fontDto) {
     }
 
     @Override
-    public String upload(MultipartFile file) throws DEException {
+    public FontDto upload(MultipartFile file) throws DEException {
         return fontManage.upload(file);
     }
 
     @Override
-    public void download(Long id, HttpServletResponse response) throws DEException {
-        fontManage.download(id, response);
+    public void download(String file, HttpServletResponse response) throws DEException {
+        fontManage.download(file, response);
     }
 
     @Override

File: sdk/api/api-base/src/main/java/io/dataease/api/font/api/FontApi.java
Patch:
@@ -42,10 +42,10 @@ public interface FontApi {
     public void changeDefault(@RequestBody FontDto fontDto);
 
     @PostMapping("/uploadFile")
-    String upload(@RequestParam("file") MultipartFile file) throws DEException;
+    FontDto upload(@RequestParam("file") MultipartFile file) throws DEException;
 
-    @GetMapping("/download/{id}")
-    void download(@PathVariable("id") Long id, HttpServletResponse response) throws DEException;
+    @GetMapping("/download/{file}")
+    void download(@PathVariable("file") String file, HttpServletResponse response) throws DEException;
 
     @GetMapping("/defaultFont")
     List<FontDto> defaultFont() throws DEException;

File: sdk/api/api-base/src/main/java/io/dataease/api/font/dto/FontDto.java
Patch:
@@ -30,5 +30,7 @@ public class FontDto {
     private Boolean isDefault;
     private Long updateTime;
     private Boolean isBuiltin;
+    private Double size;
+    private String sizeType;
 }
 

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/ConnectionObj.java
Patch:
@@ -23,7 +23,6 @@ public void close() throws Exception {
         }
 
         if (session != null) {
-            System.out.println("session.disconnect()");
             session.disconnect();
         }
 

File: core/core-backend/src/main/java/io/dataease/font/manage/FontManage.java
Patch:
@@ -114,7 +114,7 @@ public void download(Long id, HttpServletResponse response) {
 
     public List<FontDto> defaultFont() {
         QueryWrapper<CoreFont> queryWrapper = new QueryWrapper<>();
-        queryWrapper.eq("isDefault", 1);
+        queryWrapper.eq("is_default", 1);
         List<CoreFont> coreFonts = coreFontMapper.selectList(queryWrapper);
         List<FontDto> fontDtos = new ArrayList<>();
         for (CoreFont coreFont : coreFonts) {

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -69,6 +69,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/websocket")
                 || StringUtils.startsWithAny(requestURI, "/map/")
                 || StringUtils.startsWithAny(requestURI, "/typeface/download")
+                || StringUtils.startsWithAny(requestURI, "/typeface/defaultFont")
                 || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/font/api/FontApi.java
Patch:
@@ -45,7 +45,7 @@ public interface FontApi {
     String upload(@RequestParam("file") MultipartFile file) throws DEException;
 
     @GetMapping("/download/{id}")
-    void download(@PathVariable("id") Long id, HttpServletResponse response) throws DEException;\
+    void download(@PathVariable("id") Long id, HttpServletResponse response) throws DEException;
 
     @GetMapping("/defaultFont")
     List<FontDto> defaultFont() throws DEException;

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -68,6 +68,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/geo/")
                 || StringUtils.startsWithAny(requestURI, "/websocket")
                 || StringUtils.startsWithAny(requestURI, "/map/")
+                || StringUtils.startsWithAny(requestURI, "/typeface/download")
                 || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }
 }

File: core/core-backend/src/main/java/io/dataease/font/dao/auto/mapper/CoreFontMapper.java
Patch:
@@ -10,7 +10,7 @@
  * </p>
  *
  * @author fit2cloud
- * @since 2024-08-23
+ * @since 2024-08-26
  */
 @Mapper
 public interface CoreFontMapper extends BaseMapper<CoreFont> {

File: core/core-backend/src/main/java/io/dataease/font/server/FontServer.java
Patch:
@@ -44,7 +44,7 @@ public void changeDefault(FontDto fontDto) {
     }
 
     @Override
-    public void upload(MultipartFile file, long fontID) throws DEException {
-        fontManage.upload(file, fontID);
+    public String upload(MultipartFile file) throws DEException {
+        return fontManage.upload(file);
     }
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/font/api/FontApi.java
Patch:
@@ -40,10 +40,10 @@ public interface FontApi {
     public void delete(@PathVariable("id") Long id);
 
     @Operation(summary = "变更默认设置")
-    @PostMapping("/changeDefault/")
+    @PostMapping("/setDefault/")
     public void changeDefault(@RequestBody FontDto fontDto);
 
     @PostMapping("/uploadFile")
-    void upload(@RequestParam("file") MultipartFile file, @RequestParam("id") long fontID) throws DEException;
+    String upload(@RequestParam("file") MultipartFile file) throws DEException;
 
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/font/dto/FontDto.java
Patch:
@@ -28,7 +28,7 @@ public class FontDto {
      * 是否默认
      */
     private Boolean isDefault;
-
+    private Long updateTime;
     private Boolean isBuiltin;
 }
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -311,9 +311,6 @@ private String cellType(String value) {
         if (StringUtils.isEmpty(value) || value.length() > 19) {
             return "TEXT";
         }
-        if (value.length() > 1 && value.startsWith("0")) {
-            return "TEXT";
-        }
         String regex = "^\\d+(\\.\\d+)?$";
         if (!value.matches(regex)) {
             return "TEXT";
@@ -322,6 +319,9 @@ private String cellType(String value) {
             Double d = Double.valueOf(value);
             double eps = 1e-10;
             if (d - Math.floor(d) < eps) {
+                if (value.length() > 1 && value.startsWith("0")) {
+                    return "TEXT";
+                }
                 return "LONG";
             } else {
                 return "DOUBLE";

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -311,9 +311,6 @@ private String cellType(String value) {
         if (StringUtils.isEmpty(value) || value.length() > 19) {
             return "TEXT";
         }
-        if (value.length() > 1 && value.startsWith("0")) {
-            return "TEXT";
-        }
         String regex = "^\\d+(\\.\\d+)?$";
         if (!value.matches(regex)) {
             return "TEXT";
@@ -322,6 +319,9 @@ private String cellType(String value) {
             Double d = Double.valueOf(value);
             double eps = 1e-10;
             if (d - Math.floor(d) < eps) {
+                if (value.length() > 1 && value.startsWith("0")) {
+                    return "TEXT";
+                }
                 return "LONG";
             } else {
                 return "DOUBLE";

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -481,8 +481,9 @@ public static String handleVariableDefaultValue(String sql, String sqlVariableDe
         if (StringUtils.isEmpty(sql)) {
             DEException.throwException(Translator.get("i18n_sql_not_empty"));
         }
-        if (sql.trim().endsWith(";")) {
-            sql = sql.trim().substring(0, sql.length() - 1);
+        sql = sql.trim();
+        if (sql.endsWith(";")) {
+            sql = sql.substring(0, sql.length() - 1);
         }
 
         if (StringUtils.isNotEmpty(sqlVariableDetails)) {

File: core/core-backend/src/main/java/io/dataease/copilot/manage/CopilotManage.java
Patch:
@@ -450,8 +450,9 @@ public Lex getLex(String type) {
     public String transSql(String type, String copilotSQL, Provider provider, ReceiveDTO receiveDTO) {
         if (type.equals("oracle") || type.equals("sqlServer")) {
             try {
-                if (copilotSQL.trim().endsWith(";")) {
-                    copilotSQL = copilotSQL.trim().substring(0, copilotSQL.length() - 1);
+                copilotSQL = copilotSQL.trim();
+                if (copilotSQL.endsWith(";")) {
+                    copilotSQL = copilotSQL.substring(0, copilotSQL.length() - 1);
                 }
                 DatasourceSchemaDTO datasourceSchemaDTO = new DatasourceSchemaDTO();
                 datasourceSchemaDTO.setType(type);

File: core/core-backend/src/main/java/io/dataease/dataset/utils/SqlUtils.java
Patch:
@@ -20,8 +20,9 @@ public class SqlUtils {
     public static Logger logger = LoggerFactory.getLogger(SqlUtils.class);
 
     public static String addSchema(String sql, String schema) {
-        if (sql.trim().endsWith(";")) {
-            sql = sql.trim().substring(0, sql.length() - 1);
+        sql = sql.trim();
+        if (sql.endsWith(";")) {
+            sql = sql.substring(0, sql.length() - 1);
         }
 
         SqlParser.Config config =

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -481,8 +481,9 @@ public static String handleVariableDefaultValue(String sql, String sqlVariableDe
         if (StringUtils.isEmpty(sql)) {
             DEException.throwException(Translator.get("i18n_sql_not_empty"));
         }
-        if (sql.trim().endsWith(";")) {
-            sql = sql.trim().substring(0, sql.length() - 1);
+        sql = sql.trim();
+        if (sql.endsWith(";")) {
+            sql = sql.substring(0, sql.length() - 1);
         }
 
         if (StringUtils.isNotEmpty(sqlVariableDetails)) {

File: core/core-backend/src/main/java/io/dataease/copilot/manage/CopilotManage.java
Patch:
@@ -450,8 +450,9 @@ public Lex getLex(String type) {
     public String transSql(String type, String copilotSQL, Provider provider, ReceiveDTO receiveDTO) {
         if (type.equals("oracle") || type.equals("sqlServer")) {
             try {
-                if (copilotSQL.trim().endsWith(";")) {
-                    copilotSQL = copilotSQL.trim().substring(0, copilotSQL.length() - 1);
+                copilotSQL = copilotSQL.trim();
+                if (copilotSQL.endsWith(";")) {
+                    copilotSQL = copilotSQL.substring(0, copilotSQL.length() - 1);
                 }
                 DatasourceSchemaDTO datasourceSchemaDTO = new DatasourceSchemaDTO();
                 datasourceSchemaDTO.setType(type);

File: core/core-backend/src/main/java/io/dataease/dataset/utils/SqlUtils.java
Patch:
@@ -20,8 +20,9 @@ public class SqlUtils {
     public static Logger logger = LoggerFactory.getLogger(SqlUtils.class);
 
     public static String addSchema(String sql, String schema) {
-        if (sql.trim().endsWith(";")) {
-            sql = sql.trim().substring(0, sql.length() - 1);
+        sql = sql.trim();
+        if (sql.endsWith(";")) {
+            sql = sql.substring(0, sql.length() - 1);
         }
 
         SqlParser.Config config =

File: core/core-backend/src/main/java/io/dataease/copilot/manage/CopilotManage.java
Patch:
@@ -451,7 +451,7 @@ public String transSql(String type, String copilotSQL, Provider provider, Receiv
         if (type.equals("oracle") || type.equals("sqlServer")) {
             try {
                 if (copilotSQL.trim().endsWith(";")) {
-                    copilotSQL = copilotSQL.substring(0, copilotSQL.length() - 1);
+                    copilotSQL = copilotSQL.trim().substring(0, copilotSQL.length() - 1);
                 }
                 DatasourceSchemaDTO datasourceSchemaDTO = new DatasourceSchemaDTO();
                 datasourceSchemaDTO.setType(type);

File: core/core-backend/src/main/java/io/dataease/dataset/utils/SqlUtils.java
Patch:
@@ -21,7 +21,7 @@ public class SqlUtils {
 
     public static String addSchema(String sql, String schema) {
         if (sql.trim().endsWith(";")) {
-            sql = sql.substring(0, sql.length() - 1);
+            sql = sql.trim().substring(0, sql.length() - 1);
         }
 
         SqlParser.Config config =

File: core/core-backend/src/main/java/io/dataease/copilot/manage/CopilotManage.java
Patch:
@@ -451,7 +451,7 @@ public String transSql(String type, String copilotSQL, Provider provider, Receiv
         if (type.equals("oracle") || type.equals("sqlServer")) {
             try {
                 if (copilotSQL.trim().endsWith(";")) {
-                    copilotSQL = copilotSQL.substring(0, copilotSQL.length() - 1);
+                    copilotSQL = copilotSQL.trim().substring(0, copilotSQL.length() - 1);
                 }
                 DatasourceSchemaDTO datasourceSchemaDTO = new DatasourceSchemaDTO();
                 datasourceSchemaDTO.setType(type);

File: core/core-backend/src/main/java/io/dataease/dataset/utils/SqlUtils.java
Patch:
@@ -21,7 +21,7 @@ public class SqlUtils {
 
     public static String addSchema(String sql, String schema) {
         if (sql.trim().endsWith(";")) {
-            sql = sql.substring(0, sql.length() - 1);
+            sql = sql.trim().substring(0, sql.length() - 1);
         }
 
         SqlParser.Config config =

File: sdk/api/api-base/src/main/java/io/dataease/api/exportCenter/ExportCenterApi.java
Patch:
@@ -38,4 +38,7 @@ public interface ExportCenterApi {
     @PostMapping("/retry/{id}")
     public void  retry(@PathVariable String id);
 
+    @PostMapping("/exportLimit")
+    public String  exportLimit();
+
 }

File: core/core-backend/src/main/java/io/dataease/MybatisPlusGenerator.java
Patch:
@@ -25,7 +25,7 @@ public class MybatisPlusGenerator {
     /**
      * 这是要生成代码的表名称
      */
-    private static final String TABLE_NAME = "visualization_report_filter";
+    private static final String TABLE_NAME = "visualization_outer_params_target_view_info";
 
     /**
      * 下面两个配置基本上不用动

File: core/core-backend/src/main/java/io/dataease/visualization/dao/auto/mapper/VisualizationOuterParamsTargetViewInfoMapper.java
Patch:
@@ -10,7 +10,7 @@
  * </p>
  *
  * @author fit2cloud
- * @since 2024-03-08
+ * @since 2024-08-21
  */
 @Mapper
 public interface VisualizationOuterParamsTargetViewInfoMapper extends BaseMapper<VisualizationOuterParamsTargetViewInfo> {

File: core/core-backend/src/main/java/io/dataease/visualization/dao/ext/mapper/ExtVisualizationOuterParamsMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.visualization.dao.ext.mapper;
 
 
+import io.dataease.api.dataset.vo.CoreDatasetGroupVO;
 import io.dataease.api.visualization.dto.VisualizationOuterParamsDTO;
 import io.dataease.api.visualization.dto.VisualizationOuterParamsInfoDTO;
 import org.apache.ibatis.annotations.Mapper;
@@ -20,4 +21,6 @@ public interface ExtVisualizationOuterParamsMapper {
     void deleteOuterParamsWithVisualizationId(@Param("visualizationId") String visualizationId);
 
     List<VisualizationOuterParamsInfoDTO> getVisualizationOuterParamsInfo(@Param("visualizationId") String visualizationId);
+
+    List<CoreDatasetGroupVO> queryDsWithVisualizationId(@Param("visualizationId") String visualizationId);
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/DataFillingApi.java
Patch:
@@ -80,8 +80,8 @@ public interface DataFillingApi {
     @PostMapping("/task/logMsg")
     String logMsg(@RequestBody ReportInstanceMsgRequest request);
 
-    @PostMapping("/task/page/{goPage}/{pageSize}")
-    IPage<ReportGridVO> taskPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfTaskInfoRequest request);
+    @PostMapping("/form/{formId}/task/page/{goPage}/{pageSize}")
+    IPage<ReportGridVO> taskPager(@PathVariable("formId") Long formId, @PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfTaskInfoRequest request);
 
     @PostMapping("/sub-task/page/{goPage}/{pageSize}")
     IPage<DfSubTaskVo> subTaskPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfSubTaskInfoRequest request);

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/ChartAxis.java
Patch:
@@ -9,5 +9,6 @@ public enum ChartAxis {
     yAxis,
     yAxisExt,
     drill,
+    extColor,
     extBubble;
 }

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/ChartViewBaseDTO.java
Patch:
@@ -224,4 +224,6 @@ public class ChartViewBaseDTO implements Serializable {
      */
     private List<CalParam> calParams;
 
+    private List<ChartViewFieldDTO> extColor;
+
 }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -621,7 +621,8 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
         if (StringUtils.equalsIgnoreCase(view.getType(), "table-pivot")
                 || StringUtils.containsIgnoreCase(view.getType(), "group")
                 || ("antv".equalsIgnoreCase(view.getRender()) && "line".equalsIgnoreCase(view.getType()))
-                || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")) {
+                || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")
+                || StringUtils.equalsIgnoreCase(view.getType(), "t-heatmap")) {
             xAxis.addAll(xAxisExt);
         }
         List<ChartViewFieldDTO> yAxis = new ArrayList<>(view.getYAxis());

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -621,7 +621,8 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
         if (StringUtils.equalsIgnoreCase(view.getType(), "table-pivot")
                 || StringUtils.containsIgnoreCase(view.getType(), "group")
                 || ("antv".equalsIgnoreCase(view.getRender()) && "line".equalsIgnoreCase(view.getType()))
-                || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")) {
+                || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")
+                || StringUtils.equalsIgnoreCase(view.getType(), "t-heatmap")) {
             xAxis.addAll(xAxisExt);
         }
         List<ChartViewFieldDTO> yAxis = new ArrayList<>(view.getYAxis());

File: sdk/api/api-base/src/main/java/io/dataease/api/exportCenter/ExportCenterApi.java
Patch:
@@ -38,4 +38,7 @@ public interface ExportCenterApi {
     @PostMapping("/retry/{id}")
     public void  retry(@PathVariable String id);
 
+    @PostMapping("/exportLimit")
+    public String  exportLimit();
+
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/DataFillingApi.java
Patch:
@@ -80,8 +80,8 @@ public interface DataFillingApi {
     @PostMapping("/task/logMsg")
     String logMsg(@RequestBody ReportInstanceMsgRequest request);
 
-    @PostMapping("/task/page/{goPage}/{pageSize}")
-    IPage<ReportGridVO> taskPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfTaskInfoRequest request);
+    @PostMapping("/form/{formId}/task/page/{goPage}/{pageSize}")
+    IPage<ReportGridVO> taskPager(@PathVariable("formId") Long formId, @PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfTaskInfoRequest request);
 
     @PostMapping("/sub-task/page/{goPage}/{pageSize}")
     IPage<DfSubTaskVo> subTaskPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfSubTaskInfoRequest request);

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/dataFilling/DataFillingApi.java
Patch:
@@ -80,8 +80,8 @@ public interface DataFillingApi {
     @PostMapping("/task/logMsg")
     String logMsg(@RequestBody ReportInstanceMsgRequest request);
 
-    @PostMapping("/task/page/{goPage}/{pageSize}")
-    IPage<ReportGridVO> taskPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfTaskInfoRequest request);
+    @PostMapping("/form/{formId}/task/page/{goPage}/{pageSize}")
+    IPage<ReportGridVO> taskPager(@PathVariable("formId") Long formId, @PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfTaskInfoRequest request);
 
     @PostMapping("/sub-task/page/{goPage}/{pageSize}")
     IPage<DfSubTaskVo> subTaskPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody DfSubTaskInfoRequest request);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -81,7 +81,7 @@ public class DatasetDataManage {
 
     private static Logger logger = LoggerFactory.getLogger(DatasetDataManage.class);
 
-    private static final List<String> notFullDs = List.of("mysql", "mariadb", "Excel", "API");
+    public static final List<String> notFullDs = List.of("mysql", "mariadb", "Excel", "API");
 
     public List<DatasetTableFieldDTO> getTableFields(DatasetTableDTO datasetTableDTO) throws Exception {
         List<DatasetTableFieldDTO> list = null;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -559,7 +559,7 @@ private void getParents(Long pid, List<Long> ids) {
         }
     }
 
-    private void geFullName(Long pid, List<String> fullName) {
+    public void geFullName(Long pid, List<String> fullName) {
         CoreDatasetGroup parent = coreDatasetGroupMapper.selectById(pid);// 查找父级folder
         fullName.add(parent.getName());
         if (parent.getPid() != null && parent.getPid() != 0) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -947,7 +947,7 @@ private String getTableFiledSql(DatasourceRequest datasourceRequest) {
                 if (database.contains(".")) {
                     sql = "select * from " + datasourceRequest.getTable() + " limit 0 offset 0 ";
                 } else {
-                    sql = String.format("SELECT TABLE_NAME,TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", database);
+                    sql = String.format("SELECT COLUMN_NAME,DATA_TYPE,COLUMN_COMMENT  FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '%s' AND   TABLE_NAME = '%s'", database, datasourceRequest.getTable());
                 }
                 break;
             case mysql:

File: core/core-backend/src/main/java/io/dataease/exportCenter/server/ExportCenterServer.java
Patch:
@@ -1,7 +1,7 @@
 package io.dataease.exportCenter.server;
 
 import io.dataease.api.exportCenter.ExportCenterApi;
-import io.dataease.api.exportCenter.vo.ExportTaskDTO;
+import io.dataease.model.ExportTaskDTO;
 import io.dataease.exportCenter.manage.ExportCenterManage;
 import jakarta.annotation.Resource;
 import jakarta.servlet.http.HttpServletResponse;

File: sdk/api/api-base/src/main/java/io/dataease/api/exportCenter/ExportCenterApi.java
Patch:
@@ -1,7 +1,7 @@
 package io.dataease.api.exportCenter;
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
-import io.dataease.api.exportCenter.vo.ExportTaskDTO;
+import io.dataease.model.ExportTaskDTO;
 import io.dataease.auth.DeApiPath;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.servlet.http.HttpServletResponse;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/auth/api/InteractiveAuthApi.java
Patch:
@@ -10,6 +10,7 @@
 import io.dataease.api.permissions.auth.vo.ResourceNodeVO;
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
+import io.dataease.model.ExportTaskDTO;
 import io.swagger.v3.oas.annotations.Hidden;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
@@ -84,7 +85,7 @@ public interface InteractiveAuthApi {
     boolean checkEmpty();
 
     @GetMapping("/OrgNameForResource")
-    String OrgNameForResource(Long id);
+    String OrgNameForResource(ExportTaskDTO exportTaskDTO);
 
     void editResourceExtraFlag(BusiResourceEditor editor);
 }

File: sdk/common/src/main/java/io/dataease/model/ExportTaskDTO.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.api.exportCenter.vo;
+package io.dataease.model;
 
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/StackMixHandler.java
Patch:
@@ -31,7 +31,9 @@ public AxisFormatResult formatAxis(ChartViewDTO view) {
         axisMap.put(ChartAxis.yAxisExt, view.getYAxisExt());
         //去除除了x轴以外的排序
         axisMap.forEach((k, v) -> {
-            v.forEach(x -> x.setSort("none"));
+            if (!ChartAxis.extStack.equals(k)) {
+                v.forEach(x -> x.setSort("none"));
+            }
         });
         axisMap.put(ChartAxis.extLabel, view.getExtLabel());
         axisMap.put(ChartAxis.extTooltip, view.getExtTooltip());

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1305,7 +1305,7 @@ public static Map<String, Object> transTableNormal(List<ChartViewFieldDTO> field
                 }
                 if (i == ele.length) break;
                 ChartViewFieldDTO chartViewFieldDTO = fields.get(i);
-                if (chartViewFieldDTO.getDeType() == 0 || chartViewFieldDTO.getDeType() == 1 || chartViewFieldDTO.getDeType() == 5) {
+                if (chartViewFieldDTO.getDeType() == 0 || chartViewFieldDTO.getDeType() == 1 || chartViewFieldDTO.getDeType() == 5 || chartViewFieldDTO.getDeType() == 7) {
                     d.put(fields.get(i).getDataeaseName(), StringUtils.isEmpty(ele[i]) ? "" : ele[i]);
                 } else if (chartViewFieldDTO.getDeType() == 2 || chartViewFieldDTO.getDeType() == 3 || chartViewFieldDTO.getDeType() == 4) {
                     d.put(fields.get(i).getDataeaseName(), StringUtils.isEmpty(ele[i]) ? null : new BigDecimal(ele[i]).setScale(8, RoundingMode.HALF_UP));

File: core/core-backend/src/main/java/io/dataease/config/CommonConfig.java
Patch:
@@ -1,7 +1,7 @@
 package io.dataease.config;
 
 import com.fit2cloud.autoconfigure.QuartzAutoConfiguration;
-import io.dataease.commons.utils.CommonThreadPool;
+import io.dataease.utils.CommonThreadPool;
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -81,7 +81,7 @@ public class DatasetDataManage {
 
     private static Logger logger = LoggerFactory.getLogger(DatasetDataManage.class);
 
-    private static final List<String> notFullDs = List.of("mysql", "mariadb", "Excel", "API");
+    public static final List<String> notFullDs = List.of("mysql", "mariadb", "Excel", "API");
 
     public List<DatasetTableFieldDTO> getTableFields(DatasetTableDTO datasetTableDTO) throws Exception {
         List<DatasetTableFieldDTO> list = null;

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DataSourceManage.java
Patch:
@@ -87,7 +87,7 @@ public void innerSave(DatasourceDTO dataSourceDTO) {
     public void checkName(DatasourceDTO dto) {
         QueryWrapper<CoreDatasource> wrapper = new QueryWrapper<>();
         if (ObjectUtils.isNotEmpty(dto.getPid())) {
-            wrapper.eq("pid", dto.getPid());
+            wrapper.eq("pid", dto.getPid().equals(0L) ? AuthUtils.getUser().getDefaultOid() : dto.getPid());
         }
         if (StringUtils.isNotEmpty(dto.getName())) {
             wrapper.eq("name", dto.getName());

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -94,4 +94,6 @@ public class SQLConstants {
     public static final String QUARTER = "QUARTER(%s)";
 
     public static final String EMPTY_SIGN = "_empty_$";
+
+    public static final String CONCAT = "CONCAT(%s, %s)";
 }

File: core/core-backend/src/main/java/io/dataease/engine/trans/Quota2SQLObj.java
Patch:
@@ -54,7 +54,7 @@ public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, Li
                 // 处理纵轴字段
                 SQLObj ySQLObj = getYFields(y, originField, fieldAlias);
                 if (StringUtils.equalsIgnoreCase("bar-range", meta.getChartType()) && StringUtils.equalsIgnoreCase(y.getGroupType(), "d") && y.getDeType() == 1) {
-                    yFields.add(Dimension2SQLObj.getXFields(y, ySQLObj.getFieldName(), fieldAlias));
+                    yFields.add(Dimension2SQLObj.getXFields(y, ySQLObj.getFieldName(), fieldAlias, isCross));
                 } else {
                     yFields.add(ySQLObj);
                 }

File: core/core-backend/src/main/java/io/dataease/exportCenter/server/ExportCenterServer.java
Patch:
@@ -1,7 +1,7 @@
 package io.dataease.exportCenter.server;
 
 import io.dataease.api.exportCenter.ExportCenterApi;
-import io.dataease.api.exportCenter.vo.ExportTaskDTO;
+import io.dataease.model.ExportTaskDTO;
 import io.dataease.exportCenter.manage.ExportCenterManage;
 import jakarta.annotation.Resource;
 import jakarta.servlet.http.HttpServletResponse;

File: core/core-backend/src/main/java/io/dataease/menu/manage/MenuManage.java
Patch:
@@ -14,6 +14,7 @@
 import org.springframework.stereotype.Component;
 
 import java.util.ArrayList;
+import java.util.Comparator;
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Collectors;
@@ -31,7 +32,8 @@ public class MenuManage {
 
     @XpackInteract(value = "menuApi")
     public List<MenuVO> query(List<CoreMenu> coreMenus) {
-        List<MenuTreeNode> menuTreeNodes = coreMenus.stream().map(menu -> BeanUtils.copyBean(new MenuTreeNode(), menu)).toList();
+        List<MenuTreeNode> menuTreeNodes = new ArrayList<>(coreMenus.stream().map(menu -> BeanUtils.copyBean(new MenuTreeNode(), menu)).toList());
+        menuTreeNodes.sort(Comparator.comparing(MenuTreeNode::getMenuSort));
         List<MenuTreeNode> treeNodes = buildPOTree(menuTreeNodes);
         return convertTree(treeNodes);
     }

File: sdk/api/api-base/src/main/java/io/dataease/api/exportCenter/ExportCenterApi.java
Patch:
@@ -1,7 +1,7 @@
 package io.dataease.api.exportCenter;
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
-import io.dataease.api.exportCenter.vo.ExportTaskDTO;
+import io.dataease.model.ExportTaskDTO;
 import io.dataease.auth.DeApiPath;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import jakarta.servlet.http.HttpServletResponse;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/auth/api/InteractiveAuthApi.java
Patch:
@@ -10,6 +10,7 @@
 import io.dataease.api.permissions.auth.vo.ResourceNodeVO;
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
+import io.dataease.model.ExportTaskDTO;
 import io.swagger.v3.oas.annotations.Hidden;
 import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
@@ -84,7 +85,7 @@ public interface InteractiveAuthApi {
     boolean checkEmpty();
 
     @GetMapping("/OrgNameForResource")
-    String OrgNameForResource(Long id);
+    String OrgNameForResource(ExportTaskDTO exportTaskDTO);
 
     void editResourceExtraFlag(BusiResourceEditor editor);
 }

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/Target.java
Patch:
@@ -22,4 +22,5 @@ public class Target {
     private String incrementField;
     private String datasourceVersion;
     private double faultToleranceRate;
+    private String incrementFieldType;
 }

File: sdk/common/src/main/java/io/dataease/constant/AuthResourceEnum.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum AuthResourceEnum {
 
-    PANEL(2, 1), SCREEN(3, 2), DATASET(5, 3), DATASOURCE(6, 4), SYSTEM(7, 0), USER(8, 5), ROLE(8, 6),  ORG(9, 7),  SYNC_DATASOURCE(23, 8),  TASK(24, 9), SUMMARY(22, 10), DATA_FILLING(60, 11);
+    PANEL(2, 1), SCREEN(3, 2), DATASET(5, 3), DATASOURCE(6, 4), SYSTEM(7, 0), USER(8, 5), ROLE(8, 6),  ORG(9, 7),  SYNC_DATASOURCE(23, 9),  TASK(24, 9), SUMMARY(22, 9), DATA_FILLING(60, 8);
 
     private long menuId;
 

File: sdk/common/src/main/java/io/dataease/exception/DEException.java
Patch:
@@ -2,8 +2,10 @@
 
 import io.dataease.result.ResultCode;
 import lombok.Data;
+import lombok.experimental.Accessors;
 
 @Data
+@Accessors(chain = true)
 public class DEException extends RuntimeException {
 
     private int code;

File: sdk/common/src/main/java/io/dataease/model/ExportTaskDTO.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.api.exportCenter.vo;
+package io.dataease.model;
 
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;

File: sdk/common/src/main/java/io/dataease/result/ResultCode.java
Patch:
@@ -27,6 +27,9 @@ public enum ResultCode {
     RESULE_DATA_NONE(50001, "数据未找到"),
     DATA_IS_WRONG(50002, "数据有误"),
     DATA_ALREADY_EXISTED(50003, "数据已存在"),
+    DS_RESOURCE_UNCHECKED(50004, "%s个数据集正在使用此数据源，无法删除"),
+
+    DV_RESOURCE_UNCHECKED(50004, "%s个仪表板或数据大屏正在使用此数据集，无法删除"),
 
     /* 接口错误：60001-69999 */
     INTERFACE_INNER_INVOKE_ERROR(60001, "内部系统接口调用异常"),

File: sdk/common/src/main/java/io/dataease/utils/CommonThreadPool.java
Patch:
@@ -1,6 +1,5 @@
-package io.dataease.commons.utils;
+package io.dataease.utils;
 
-import io.dataease.utils.LogUtil;
 import jakarta.annotation.PostConstruct;
 import jakarta.annotation.PreDestroy;
 

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/DatasetTableFieldDTO.java
Patch:
@@ -82,7 +82,7 @@ public class DatasetTableFieldDTO implements Serializable {
     private Integer scale;
 
     /**
-     * dataease字段类型：0-文本，1-时间，2-整型数值，3-浮点数值，4-布尔，5-地理位置，6-二进制
+     * dataease字段类型：0-文本，1-时间，2-整型数值，3-浮点数值，4-布尔，5-地理位置，6-二进制, 7-URL
      */
     private Integer deType;
 

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/filter/FilterTreeItem.java
Patch:
@@ -26,4 +26,6 @@ public class FilterTreeItem implements Serializable {
     private DynamicTimeSetting dynamicTimeSetting;
     // tree
     private FilterTreeObj subTree;
+
+    private String valueType;
 }

File: core/core-backend/src/main/java/io/dataease/engine/trans/CustomWhere2Str.java
Patch:
@@ -124,7 +124,7 @@ private static String transTreeItem(SQLObj tableObj, FilterTreeItem item, Map<St
                 whereName = String.format(SQLConstants.UNIX_TIMESTAMP, originName);
             }
             if (field.getDeExtractType() == 2 || field.getDeExtractType() == 4) {
-                whereName = originName;
+                whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
             }
             if (field.getDeExtractType() == 3) {
                 whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_FLOAT_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -96,7 +96,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                             whereName = String.format(SQLConstants.UNIX_TIMESTAMP, originName);
                         }
                         if (field.getDeExtractType() == 2 || field.getDeExtractType() == 4) {
-                            whereName = originName;
+                            whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
                         }
                         if (field.getDeExtractType() == 3) {
                             whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_FLOAT_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/WhereTree2Str.java
Patch:
@@ -126,7 +126,7 @@ public static String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeIte
                 whereName = String.format(SQLConstants.UNIX_TIMESTAMP, originName);
             }
             if (field.getDeExtractType() == 2 || field.getDeExtractType() == 4) {
-                whereName = originName;
+                whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
             }
             if (field.getDeExtractType() == 3) {
                 whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_FLOAT_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/CustomWhere2Str.java
Patch:
@@ -124,7 +124,7 @@ private static String transTreeItem(SQLObj tableObj, FilterTreeItem item, Map<St
                 whereName = String.format(SQLConstants.UNIX_TIMESTAMP, originName);
             }
             if (field.getDeExtractType() == 2 || field.getDeExtractType() == 4) {
-                whereName = originName;
+                whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
             }
             if (field.getDeExtractType() == 3) {
                 whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_FLOAT_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -96,7 +96,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                             whereName = String.format(SQLConstants.UNIX_TIMESTAMP, originName);
                         }
                         if (field.getDeExtractType() == 2 || field.getDeExtractType() == 4) {
-                            whereName = originName;
+                            whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
                         }
                         if (field.getDeExtractType() == 3) {
                             whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_FLOAT_FORMAT);

File: core/core-backend/src/main/java/io/dataease/engine/trans/WhereTree2Str.java
Patch:
@@ -126,7 +126,7 @@ public static String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeIte
                 whereName = String.format(SQLConstants.UNIX_TIMESTAMP, originName);
             }
             if (field.getDeExtractType() == 2 || field.getDeExtractType() == 4) {
-                whereName = originName;
+                whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
             }
             if (field.getDeExtractType() == 3) {
                 whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_FLOAT_FORMAT);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -81,7 +81,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         if (yoyFiltered) {
             var originFilter = (List<ChartExtFilterDTO>) filterResult.getContext().get("originFilter");
             var allFields = (List<ChartViewFieldDTO>) filterResult.getContext().get("allFields");
-            ExtWhere2Str.extWhere2sqlOjb(sqlMeta, originFilter, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+            ExtWhere2Str.extWhere2sqlOjb(sqlMeta, originFilter, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
             var originSql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
             originSql = provider.rebuildSQL(originSql, sqlMeta, crossDs, dsMap);
             var request = new DatasourceRequest();

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -71,11 +71,11 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         var allFields = (List<ChartViewFieldDTO>) filterResult.getContext().get("allFields");
         SQLMeta sqlMeta1 = new SQLMeta();
         BeanUtils.copyBean(sqlMeta1, sqlMeta);
-        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         List<ChartViewFieldDTO> yFields = new ArrayList<>();
         yFields.addAll(chartViewManege.transFieldDTO(Collections.singletonList(chartViewManege.createCountField(view.getTableId()))));
         yAxis.addAll(yFields);
-        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
@@ -94,7 +94,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             sql = Utils.replaceSchemaAlias(sql, dsMap);
             SQLMeta sqlMeta2 = new SQLMeta();
             Table2SQLObj.table2sqlobj(sqlMeta2, null, "(" + sql + ")", crossDs);
-            Field2SQLObj.field2sqlObj(sqlMeta2, allFieldsTmp, allFieldsTmp, crossDs, dsMap, Utils.getParams(allFieldsTmp), null);// todo chartParam从视图里取
+            Field2SQLObj.field2sqlObj(sqlMeta2, allFieldsTmp, allFieldsTmp, crossDs, dsMap, Utils.getParams(allFieldsTmp), null, pluginManage);// todo chartParam从视图里取
             String querySQL;
             querySQL = SQLProvider.createQuerySQL(sqlMeta2, false, needOrder, false);
             querySQL = provider.rebuildSQL(querySQL, sqlMeta2, crossDs, dsMap);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/numeric/NumericalChartHandler.java
Patch:
@@ -37,7 +37,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
         var allFields = (List<ChartViewFieldDTO>) filterResult.getContext().get("allFields");
-        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -84,7 +84,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         } else {
             pageInfo.setPageSize(chartExtRequest.getPageSize());
         }
-        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
         String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
         var querySql = originSql + limit;

File: core/core-backend/src/main/java/io/dataease/engine/trans/Dimension2SQLObj.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.engine.constant.ExtFieldConstant;
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -23,7 +24,7 @@
 public class Dimension2SQLObj {
 
     public static void dimension2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, List<DatasetTableFieldDTO> originFields,
-                                        boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+                                        boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -38,7 +39,7 @@ public static void dimension2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields
                 String originField;
                 if (ObjectUtils.isNotEmpty(x.getExtField()) && Objects.equals(x.getExtField(), ExtFieldConstant.EXT_CALC)) {
                     // 解析origin name中有关联的字段生成sql表达式
-                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap,pluginManage);
                     // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                     originField = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, x.getId());
                     fieldsDialect.put(originField, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -22,7 +23,7 @@
  */
 public class ExtWhere2Str {
 
-    public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+    public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -51,7 +52,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                     String originName;
                     if (ObjectUtils.isNotEmpty(field.getExtField()) && field.getExtField() == 2) {
                         // 解析origin name中有关联的字段生成sql表达式
-                        String calcFieldExp = Utils.calcFieldRegex(field.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                        String calcFieldExp = Utils.calcFieldRegex(field.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap, pluginManage);
                         // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                         originName = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, field.getId());
                         fieldsDialect.put(originName, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/engine/trans/Field2SQLObj.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.func.FunctionConstant;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -21,7 +22,7 @@
  */
 public class Field2SQLObj {
 
-    public static void field2sqlObj(SQLMeta meta, List<DatasetTableFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+    public static void field2sqlObj(SQLMeta meta, List<DatasetTableFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -35,7 +36,7 @@ public static void field2sqlObj(SQLMeta meta, List<DatasetTableFieldDTO> fields,
                 String originField;
                 if (ObjectUtils.isNotEmpty(x.getExtField()) && Objects.equals(x.getExtField(), ExtFieldConstant.EXT_CALC)) {
                     // 解析origin name中有关联的字段生成sql表达式
-                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap,pluginManage);
                     // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                     originField = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, x.getId());
                     fieldsDialect.put(originField, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/engine/trans/Quota2SQLObj.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.engine.constant.ExtFieldConstant;
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -22,7 +23,7 @@
  */
 public class Quota2SQLObj {
 
-    public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+    public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -38,7 +39,7 @@ public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, Li
                 String originField;
                 if (ObjectUtils.isNotEmpty(y.getExtField()) && Objects.equals(y.getExtField(), ExtFieldConstant.EXT_CALC)) {
                     // 解析origin name中有关联的字段生成sql表达式
-                    String calcFieldExp = Utils.calcFieldRegex(y.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                    String calcFieldExp = Utils.calcFieldRegex(y.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap, pluginManage);
                     // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                     originField = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, y.getId());
                     fieldsDialect.put(originField, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -81,7 +81,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         if (yoyFiltered) {
             var originFilter = (List<ChartExtFilterDTO>) filterResult.getContext().get("originFilter");
             var allFields = (List<ChartViewFieldDTO>) filterResult.getContext().get("allFields");
-            ExtWhere2Str.extWhere2sqlOjb(sqlMeta, originFilter, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+            ExtWhere2Str.extWhere2sqlOjb(sqlMeta, originFilter, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
             var originSql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
             originSql = provider.rebuildSQL(originSql, sqlMeta, crossDs, dsMap);
             var request = new DatasourceRequest();

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -71,11 +71,11 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         var allFields = (List<ChartViewFieldDTO>) filterResult.getContext().get("allFields");
         SQLMeta sqlMeta1 = new SQLMeta();
         BeanUtils.copyBean(sqlMeta1, sqlMeta);
-        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         List<ChartViewFieldDTO> yFields = new ArrayList<>();
         yFields.addAll(chartViewManege.transFieldDTO(Collections.singletonList(chartViewManege.createCountField(view.getTableId()))));
         yAxis.addAll(yFields);
-        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
@@ -94,7 +94,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             sql = Utils.replaceSchemaAlias(sql, dsMap);
             SQLMeta sqlMeta2 = new SQLMeta();
             Table2SQLObj.table2sqlobj(sqlMeta2, null, "(" + sql + ")", crossDs);
-            Field2SQLObj.field2sqlObj(sqlMeta2, allFieldsTmp, allFieldsTmp, crossDs, dsMap, Utils.getParams(allFieldsTmp), null);// todo chartParam从视图里取
+            Field2SQLObj.field2sqlObj(sqlMeta2, allFieldsTmp, allFieldsTmp, crossDs, dsMap, Utils.getParams(allFieldsTmp), null, pluginManage);// todo chartParam从视图里取
             String querySQL;
             querySQL = SQLProvider.createQuerySQL(sqlMeta2, false, needOrder, false);
             querySQL = provider.rebuildSQL(querySQL, sqlMeta2, crossDs, dsMap);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/numeric/NumericalChartHandler.java
Patch:
@@ -37,7 +37,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
         var allFields = (List<ChartViewFieldDTO>) filterResult.getContext().get("allFields");
-        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -84,7 +84,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         } else {
             pageInfo.setPageSize(chartExtRequest.getPageSize());
         }
-        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams());
+        Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, FieldUtil.transFields(allFields), crossDs, dsMap, Utils.getParams(FieldUtil.transFields(allFields)), view.getCalParams(), pluginManage);
         String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
         String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
         var querySql = originSql + limit;

File: core/core-backend/src/main/java/io/dataease/engine/trans/Dimension2SQLObj.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.engine.constant.ExtFieldConstant;
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -23,7 +24,7 @@
 public class Dimension2SQLObj {
 
     public static void dimension2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, List<DatasetTableFieldDTO> originFields,
-                                        boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+                                        boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -38,7 +39,7 @@ public static void dimension2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields
                 String originField;
                 if (ObjectUtils.isNotEmpty(x.getExtField()) && Objects.equals(x.getExtField(), ExtFieldConstant.EXT_CALC)) {
                     // 解析origin name中有关联的字段生成sql表达式
-                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap,pluginManage);
                     // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                     originField = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, x.getId());
                     fieldsDialect.put(originField, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -22,7 +23,7 @@
  */
 public class ExtWhere2Str {
 
-    public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+    public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -51,7 +52,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                     String originName;
                     if (ObjectUtils.isNotEmpty(field.getExtField()) && field.getExtField() == 2) {
                         // 解析origin name中有关联的字段生成sql表达式
-                        String calcFieldExp = Utils.calcFieldRegex(field.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                        String calcFieldExp = Utils.calcFieldRegex(field.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap, pluginManage);
                         // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                         originName = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, field.getId());
                         fieldsDialect.put(originName, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/engine/trans/Field2SQLObj.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.func.FunctionConstant;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -21,7 +22,7 @@
  */
 public class Field2SQLObj {
 
-    public static void field2sqlObj(SQLMeta meta, List<DatasetTableFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+    public static void field2sqlObj(SQLMeta meta, List<DatasetTableFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -35,7 +36,7 @@ public static void field2sqlObj(SQLMeta meta, List<DatasetTableFieldDTO> fields,
                 String originField;
                 if (ObjectUtils.isNotEmpty(x.getExtField()) && Objects.equals(x.getExtField(), ExtFieldConstant.EXT_CALC)) {
                     // 解析origin name中有关联的字段生成sql表达式
-                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                    String calcFieldExp = Utils.calcFieldRegex(x.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap,pluginManage);
                     // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                     originField = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, x.getId());
                     fieldsDialect.put(originField, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/engine/trans/Quota2SQLObj.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.engine.constant.ExtFieldConstant;
 import io.dataease.engine.constant.SQLConstants;
 import io.dataease.engine.utils.Utils;
+import io.dataease.extensions.datasource.api.PluginManageApi;
 import io.dataease.extensions.datasource.constant.SqlPlaceholderConstants;
 import io.dataease.extensions.datasource.dto.CalParam;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
@@ -22,7 +23,7 @@
  */
 public class Quota2SQLObj {
 
-    public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam) {
+    public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, List<DatasetTableFieldDTO> originFields, boolean isCross, Map<Long, DatasourceSchemaDTO> dsMap, List<CalParam> fieldParam, List<CalParam> chartParam, PluginManageApi pluginManage) {
         SQLObj tableObj = meta.getTable();
         if (ObjectUtils.isEmpty(tableObj)) {
             return;
@@ -38,7 +39,7 @@ public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, Li
                 String originField;
                 if (ObjectUtils.isNotEmpty(y.getExtField()) && Objects.equals(y.getExtField(), ExtFieldConstant.EXT_CALC)) {
                     // 解析origin name中有关联的字段生成sql表达式
-                    String calcFieldExp = Utils.calcFieldRegex(y.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap);
+                    String calcFieldExp = Utils.calcFieldRegex(y.getOriginName(), tableObj, originFields, isCross, dsMap, paramMap, pluginManage);
                     // 给计算字段处加一个占位符，后续SQL方言转换后再替换
                     originField = String.format(SqlPlaceholderConstants.CALC_FIELD_PLACEHOLDER, y.getId());
                     fieldsDialect.put(originField, calcFieldExp);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -115,7 +115,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             yoyData.addAll(resultData);
             var result = this.buildNormalResult(view, formatResult, filterResult, yoyData);
             expandedResult.setData(result);
-            expandedResult.setOriginData(originData);
+            expandedResult.setOriginData(resultData);
             expandedResult.setQuerySql(originSql);
         }
         return expandedResult;

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -115,7 +115,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             yoyData.addAll(resultData);
             var result = this.buildNormalResult(view, formatResult, filterResult, yoyData);
             expandedResult.setData(result);
-            expandedResult.setOriginData(originData);
+            expandedResult.setOriginData(resultData);
             expandedResult.setQuerySql(originSql);
         }
         return expandedResult;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -951,7 +951,7 @@ private String getTableFiledSql(DatasourceRequest datasourceRequest) {
                 if (database.contains(".")) {
                     sql = "select * from " + datasourceRequest.getTable() + " limit 0 offset 0 ";
                 } else {
-                    sql = String.format("SELECT TABLE_NAME,TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", database);
+                    sql = String.format("SELECT COLUMN_NAME,DATA_TYPE,COLUMN_COMMENT  FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '%s' AND   TABLE_NAME = '%s'", database, datasourceRequest.getTable());
                 }
                 break;
             case mysql:

File: core/core-backend/src/main/java/io/dataease/engine/trans/Quota2SQLObj.java
Patch:
@@ -54,7 +54,7 @@ public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, Li
                 // 处理纵轴字段
                 SQLObj ySQLObj = getYFields(y, originField, fieldAlias);
                 if (StringUtils.equalsIgnoreCase("bar-range", meta.getChartType()) && StringUtils.equalsIgnoreCase(y.getGroupType(), "d") && y.getDeType() == 1) {
-                    yFields.add(Dimension2SQLObj.getXFields(y, ySQLObj.getFieldName(), fieldAlias));
+                    yFields.add(Dimension2SQLObj.getXFields(y, ySQLObj.getFieldName(), fieldAlias, isCross));
                 } else {
                     yFields.add(ySQLObj);
                 }

File: core/core-backend/src/main/java/io/dataease/engine/trans/Quota2SQLObj.java
Patch:
@@ -54,7 +54,7 @@ public static void quota2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields, Li
                 // 处理纵轴字段
                 SQLObj ySQLObj = getYFields(y, originField, fieldAlias);
                 if (StringUtils.equalsIgnoreCase("bar-range", meta.getChartType()) && StringUtils.equalsIgnoreCase(y.getGroupType(), "d") && y.getDeType() == 1) {
-                    yFields.add(Dimension2SQLObj.getXFields(y, ySQLObj.getFieldName(), fieldAlias));
+                    yFields.add(Dimension2SQLObj.getXFields(y, ySQLObj.getFieldName(), fieldAlias, isCross));
                 } else {
                     yFields.add(ySQLObj);
                 }

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DataSourceManage.java
Patch:
@@ -87,7 +87,7 @@ public void innerSave(DatasourceDTO dataSourceDTO) {
     public void checkName(DatasourceDTO dto) {
         QueryWrapper<CoreDatasource> wrapper = new QueryWrapper<>();
         if (ObjectUtils.isNotEmpty(dto.getPid())) {
-            wrapper.eq("pid", dto.getPid());
+            wrapper.eq("pid", dto.getPid().equals(0L) ? AuthUtils.getUser().getDefaultOid() : dto.getPid());
         }
         if (StringUtils.isNotEmpty(dto.getName())) {
             wrapper.eq("name", dto.getName());

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/Target.java
Patch:
@@ -22,4 +22,5 @@ public class Target {
     private String incrementField;
     private String datasourceVersion;
     private double faultToleranceRate;
+    private String incrementFieldType;
 }

File: core/core-backend/src/main/java/io/dataease/rmonitor/manage/ResourceMonitorManage.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.rmonitor.manage;
 
+import io.dataease.constant.DataSourceType;
 import io.dataease.exception.DEException;
 import io.dataease.rmonitor.bo.PerMonitorCheckBO;
 import io.dataease.rmonitor.bo.PerMonitorNodeBO;
@@ -45,6 +46,7 @@ private Map<String, List<PerMonitorNodeBO>> freeResource() {
             List<PerMonitorNodeBO> dsBos = dsFreeResources.stream().map(node -> {
                 PerMonitorNodeBO bo = BeanUtils.copyBean(new PerMonitorNodeBO(), node);
                 bo.setLeaf(!StringUtils.equals("folder", node.getType()));
+                bo.setExtraFlag(DataSourceType.valueOf(node.getType()).getFlag());
                 return bo;
             }).collect(Collectors.toList());
             List<PerMonitorNodeBO> dsTree = TreeUtils.mergeTree(dsBos, PerMonitorNodeBO.class, false);
@@ -79,7 +81,7 @@ private Map<String, List<PerMonitorNodeBO>> freeResource() {
     }
 
     private String convertBusiFlag(String key) {
-        if (StringUtils.equals("dashboard", key)){
+        if (StringUtils.equals("dashboard", key)) {
             return "panel";
         } else if (StringUtils.equals("dataV", key)) {
             return "screen";

File: core/core-backend/src/main/java/io/dataease/rmonitor/manage/ResourceMonitorManage.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.rmonitor.manage;
 
+import io.dataease.constant.DataSourceType;
 import io.dataease.exception.DEException;
 import io.dataease.rmonitor.bo.PerMonitorCheckBO;
 import io.dataease.rmonitor.bo.PerMonitorNodeBO;
@@ -45,6 +46,7 @@ private Map<String, List<PerMonitorNodeBO>> freeResource() {
             List<PerMonitorNodeBO> dsBos = dsFreeResources.stream().map(node -> {
                 PerMonitorNodeBO bo = BeanUtils.copyBean(new PerMonitorNodeBO(), node);
                 bo.setLeaf(!StringUtils.equals("folder", node.getType()));
+                bo.setExtraFlag(DataSourceType.valueOf(node.getType()).getFlag());
                 return bo;
             }).collect(Collectors.toList());
             List<PerMonitorNodeBO> dsTree = TreeUtils.mergeTree(dsBos, PerMonitorNodeBO.class, false);
@@ -79,7 +81,7 @@ private Map<String, List<PerMonitorNodeBO>> freeResource() {
     }
 
     private String convertBusiFlag(String key) {
-        if (StringUtils.equals("dashboard", key)){
+        if (StringUtils.equals("dashboard", key)) {
             return "panel";
         } else if (StringUtils.equals("dataV", key)) {
             return "screen";

File: core/core-backend/src/main/java/io/dataease/dataset/utils/FieldUtils.java
Patch:
@@ -30,6 +30,8 @@ public static int transType2DeType(String type) {
             case "DATETIMEOFFSET":
             case "SMALLDATETIME":
             case "DATETIME64":
+            case "_TIMESTAMPTZ":
+            case "TIMESTAMPTZ":
                 return 1;// 时间
             case "INT":
             case "SMALLINT":

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/DatasourceRequest.java
Patch:
@@ -15,6 +15,7 @@ public class DatasourceRequest implements Serializable {
     protected String query;
     protected String table;
     protected DatasourceDTO datasource;
+    private Integer dsVersion;
     private Integer pageSize;
     private Integer page;
     private Integer realSize;

File: core/core-backend/src/main/java/io/dataease/dataset/utils/FieldUtils.java
Patch:
@@ -31,6 +31,7 @@ public static int transType2DeType(String type) {
             case "SMALLDATETIME":
             case "DATETIME64":
             case "_TIMESTAMPTZ":
+            case "TIMESTAMPTZ":
                 return 1;// 时间
             case "INT":
             case "SMALLINT":

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/DefaultChartHandler.java
Patch:
@@ -110,7 +110,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         //自定义排序
         data = ChartDataUtil.resultCustomSort(xAxis, data);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -87,7 +87,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             var request = new DatasourceRequest();
             request.setDsList(dsMap);
             request.setQuery(originSql);
-            logger.info("calcite yoy sql: " + originSql);
+            logger.debug("calcite yoy sql: " + originSql);
             // 实际过滤后的数据
             var originData = (List<String[]>) provider.fetchResultField(request).get("data");
             List<String[]> resultData = new ArrayList<>();

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/BarHandler.java
Patch:
@@ -55,7 +55,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assistSql sql: " + assistSql);
+                logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 result.setAssistData(assistData);
                 result.setDynamicAssistFields(dynamicAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/LineHandler.java
Patch:
@@ -66,7 +66,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assistSql sql: " + assistSql);
+                logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 result.setAssistData(assistData);
                 result.setDynamicAssistFields(dynamicAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/StackAreaHandler.java
Patch:
@@ -102,7 +102,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assist sql: " + assistSql);
+                logger.debug("calcite assist sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 result.setAssistData(assistData);
                 result.setDynamicAssistFields(dynamicAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -79,7 +79,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         // 获取所有字段数据作为数据详情返回
         List<String[]> detailData = new ArrayList<>();
@@ -98,7 +98,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             String querySQL;
             querySQL = SQLProvider.createQuerySQL(sqlMeta2, false, needOrder, false);
             querySQL = provider.rebuildSQL(querySQL, sqlMeta2, crossDs, dsMap);
-            logger.info("calcite data preview sql: " + querySQL);
+            logger.debug("calcite data preview sql: " + querySQL);
             // 调用数据源的calcite获得data
             DatasourceRequest datasourceRequest1 = new DatasourceRequest();
             datasourceRequest1.setQuery(querySQL);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/MixHandler.java
Patch:
@@ -86,7 +86,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assistSql sql: " + assistSql);
+                logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 leftResult.setAssistData(assistData);
                 leftResult.setDynamicAssistFields(leftAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/numeric/NumericalChartHandler.java
Patch:
@@ -41,7 +41,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         boolean isdrill = filterResult
                 .getFilterList()

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -95,7 +95,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             totalPageSql = provider.rebuildSQL(totalPageSql, sqlMeta, crossDs, dsMap);
             datasourceRequest.setQuery(totalPageSql);
             datasourceRequest.setTotalPageFlag(true);
-            logger.info("calcite total sql: " + totalPageSql);
+            logger.debug("calcite total sql: " + totalPageSql);
             List<String[]> tmpData = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
             var totalItems = ObjectUtils.isEmpty(tmpData) ? 0 : Long.valueOf(tmpData.get(0)[0]);
             if (StringUtils.equalsIgnoreCase(view.getResultMode(), "custom")) {
@@ -108,7 +108,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
 
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         //自定义排序
         data = ChartDataUtil.resultCustomSort(xAxis, data);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -721,7 +721,7 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
 
             querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
             datasourceRequest.setQuery(querySql);
-            logger.info("calcite chart get field enum sql: " + querySql);
+            logger.debug("calcite chart get field enum sql: " + querySql);
 
             data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -260,7 +260,7 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
             }
             sql = MessageFormat.format("SELECT {0} FROM {1}", f, TableUtils.getTableAndAlias(tableName, getDatasourceType(dsMap, currentDs.getDatasourceId()), isCross));
         }
-        logger.info("calcite origin sql: " + sql);
+        logger.debug("calcite origin sql: " + sql);
         Map<String, Object> map = new HashMap<>();
         map.put("sql", sql);
         map.put("field", checkedFields);

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/provider/Provider.java
Patch:
@@ -112,7 +112,7 @@ public Statement getStatement(Connection connection, int queryTimeout) {
     }
 
     public String rebuildSQL(String sql, SQLMeta sqlMeta, boolean crossDs, Map<Long, DatasourceSchemaDTO> dsMap) {
-        logger.info("calcite sql: " + sql);
+        logger.debug("calcite sql: " + sql);
         if (crossDs) {
             return sql;
         }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/DefaultChartHandler.java
Patch:
@@ -110,7 +110,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         //自定义排序
         data = ChartDataUtil.resultCustomSort(xAxis, data);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -87,7 +87,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             var request = new DatasourceRequest();
             request.setDsList(dsMap);
             request.setQuery(originSql);
-            logger.info("calcite yoy sql: " + originSql);
+            logger.debug("calcite yoy sql: " + originSql);
             // 实际过滤后的数据
             var originData = (List<String[]>) provider.fetchResultField(request).get("data");
             List<String[]> resultData = new ArrayList<>();

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/BarHandler.java
Patch:
@@ -55,7 +55,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assistSql sql: " + assistSql);
+                logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 result.setAssistData(assistData);
                 result.setDynamicAssistFields(dynamicAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/LineHandler.java
Patch:
@@ -66,7 +66,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assistSql sql: " + assistSql);
+                logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 result.setAssistData(assistData);
                 result.setDynamicAssistFields(dynamicAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/StackAreaHandler.java
Patch:
@@ -102,7 +102,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assist sql: " + assistSql);
+                logger.debug("calcite assist sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 result.setAssistData(assistData);
                 result.setDynamicAssistFields(dynamicAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/SymbolicMapHandler.java
Patch:
@@ -79,7 +79,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         // 获取所有字段数据作为数据详情返回
         List<String[]> detailData = new ArrayList<>();
@@ -98,7 +98,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             String querySQL;
             querySQL = SQLProvider.createQuerySQL(sqlMeta2, false, needOrder, false);
             querySQL = provider.rebuildSQL(querySQL, sqlMeta2, crossDs, dsMap);
-            logger.info("calcite data preview sql: " + querySQL);
+            logger.debug("calcite data preview sql: " + querySQL);
             // 调用数据源的calcite获得data
             DatasourceRequest datasourceRequest1 = new DatasourceRequest();
             datasourceRequest1.setQuery(querySQL);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/MixHandler.java
Patch:
@@ -86,7 +86,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
                 req.setDsList(dsMap);
                 var assistSql = assistSQL(originSql, assistFields);
                 req.setQuery(assistSql);
-                logger.info("calcite assistSql sql: " + assistSql);
+                logger.debug("calcite assistSql sql: " + assistSql);
                 var assistData = (List<String[]>) provider.fetchResultField(req).get("data");
                 leftResult.setAssistData(assistData);
                 leftResult.setDynamicAssistFields(leftAssistFields);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/numeric/NumericalChartHandler.java
Patch:
@@ -41,7 +41,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         String querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         boolean isdrill = filterResult
                 .getFilterList()

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -95,7 +95,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
             totalPageSql = provider.rebuildSQL(totalPageSql, sqlMeta, crossDs, dsMap);
             datasourceRequest.setQuery(totalPageSql);
             datasourceRequest.setTotalPageFlag(true);
-            logger.info("calcite total sql: " + totalPageSql);
+            logger.debug("calcite total sql: " + totalPageSql);
             List<String[]> tmpData = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
             var totalItems = ObjectUtils.isEmpty(tmpData) ? 0 : Long.valueOf(tmpData.get(0)[0]);
             if (StringUtils.equalsIgnoreCase(view.getResultMode(), "custom")) {
@@ -108,7 +108,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
 
         querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
         datasourceRequest.setQuery(querySql);
-        logger.info("calcite chart sql: " + querySql);
+        logger.debug("calcite chart sql: " + querySql);
         List<String[]> data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         //自定义排序
         data = ChartDataUtil.resultCustomSort(xAxis, data);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -721,7 +721,7 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, Lo
 
             querySql = provider.rebuildSQL(querySql, sqlMeta, crossDs, dsMap);
             datasourceRequest.setQuery(querySql);
-            logger.info("calcite chart get field enum sql: " + querySql);
+            logger.debug("calcite chart get field enum sql: " + querySql);
 
             data = (List<String[]>) provider.fetchResultField(datasourceRequest).get("data");
         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetSQLManage.java
Patch:
@@ -260,7 +260,7 @@ public Map<String, Object> getUnionSQLForEdit(DatasetGroupInfoDTO dataTableInfoD
             }
             sql = MessageFormat.format("SELECT {0} FROM {1}", f, TableUtils.getTableAndAlias(tableName, getDatasourceType(dsMap, currentDs.getDatasourceId()), isCross));
         }
-        logger.info("calcite origin sql: " + sql);
+        logger.debug("calcite origin sql: " + sql);
         Map<String, Object> map = new HashMap<>();
         map.put("sql", sql);
         map.put("field", checkedFields);

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/provider/Provider.java
Patch:
@@ -112,7 +112,7 @@ public Statement getStatement(Connection connection, int queryTimeout) {
     }
 
     public String rebuildSQL(String sql, SQLMeta sqlMeta, boolean crossDs, Map<Long, DatasourceSchemaDTO> dsMap) {
-        logger.info("calcite sql: " + sql);
+        logger.debug("calcite sql: " + sql);
         if (crossDs) {
             return sql;
         }

File: sdk/extensions/extensions-datasource/src/main/java/io/dataease/extensions/datasource/dto/DatasourceRequest.java
Patch:
@@ -15,6 +15,7 @@ public class DatasourceRequest implements Serializable {
     protected String query;
     protected String table;
     protected DatasourceDTO datasource;
+    private Integer dsVersion;
     private Integer pageSize;
     private Integer page;
     private Integer realSize;

File: core/core-backend/src/main/java/io/dataease/dataset/utils/FieldUtils.java
Patch:
@@ -30,6 +30,7 @@ public static int transType2DeType(String type) {
             case "DATETIMEOFFSET":
             case "SMALLDATETIME":
             case "DATETIME64":
+            case "_TIMESTAMPTZ":
                 return 1;// 时间
             case "INT":
             case "SMALLINT":

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -114,7 +114,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         dto.setAuthEnum(AuthEnum.READ);
         boolean checked = corePermissionManage.checkAuth(dto);
         if (!checked) {
-            DEException.throwException(Translator.get("i18n_no_datasource_permission"));
+            DEException.throwException(Translator.get("i18n_no_dataset_permission"));
         }
 
         List<ChartViewFieldDTO> allFields = getAllChartFields(view);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -114,7 +114,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         dto.setAuthEnum(AuthEnum.READ);
         boolean checked = corePermissionManage.checkAuth(dto);
         if (!checked) {
-            DEException.throwException(Translator.get("i18n_no_datasource_permission"));
+            DEException.throwException(Translator.get("i18n_no_dataset_permission"));
         }
 
         List<ChartViewFieldDTO> allFields = getAllChartFields(view);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -90,7 +90,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         var querySql = originSql + limit;
 
         var tablePageMode = (String) filterResult.getContext().get("tablePageMode");
-        var totalPageSql = "SELECT COUNT(*) FROM (" + SQLProvider.createQuerySQL(sqlMeta, false, false, view) + ") COUNT_TEMP";
+        var totalPageSql = "SELECT COUNT(*) FROM (" + SQLProvider.createQuerySQLNoSort(sqlMeta, false, view) + ") COUNT_TEMP";
         if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase(tablePageMode, "page")) {
             totalPageSql = provider.rebuildSQL(totalPageSql, sqlMeta, crossDs, dsMap);
             datasourceRequest.setQuery(totalPageSql);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -90,7 +90,7 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         var querySql = originSql + limit;
 
         var tablePageMode = (String) filterResult.getContext().get("tablePageMode");
-        var totalPageSql = "SELECT COUNT(*) FROM (" + SQLProvider.createQuerySQL(sqlMeta, false, false, view) + ") COUNT_TEMP";
+        var totalPageSql = "SELECT COUNT(*) FROM (" + SQLProvider.createQuerySQLNoSort(sqlMeta, false, view) + ") COUNT_TEMP";
         if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase(tablePageMode, "page")) {
             totalPageSql = provider.rebuildSQL(totalPageSql, sqlMeta, crossDs, dsMap);
             datasourceRequest.setQuery(totalPageSql);

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/settings/vo/XpackLdapVO.java
Patch:
@@ -22,4 +22,6 @@ public class XpackLdapVO implements Serializable {
 
     private String mapping;
 
+    private boolean enable;
+
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/settings/vo/XpackLdapVO.java
Patch:
@@ -22,4 +22,6 @@ public class XpackLdapVO implements Serializable {
 
     private String mapping;
 
+    private boolean enable;
+
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/xpack/settings/vo/XpackLdapVO.java
Patch:
@@ -22,4 +22,6 @@ public class XpackLdapVO implements Serializable {
 
     private String mapping;
 
+    private boolean enable;
+
 }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackBarHandler.java
Patch:
@@ -65,7 +65,8 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extStack = formatResult.getAxisMap().get(ChartAxis.extStack);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        var xAxisBase = xAxis.subList(0, xAxis.size() - extStack.size());
-        return ChartDataBuild.transStackChartDataAntV(xAxisBase, yAxis, view, data, extStack, isDrill);
+        var drillAxis = xAxis.stream().filter(axis -> FieldSource.DRILL == axis.getSource()).toList();
+        var xAxisBase = xAxis.subList(0, xAxis.size() - extStack.size() - drillAxis.size());
+        return ChartDataBuild.transStackChartDataAntV(xAxisBase, xAxis, yAxis, view, data, extStack, isDrill);
     }
 }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/StackAreaHandler.java
Patch:
@@ -46,9 +46,10 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
                 .anyMatch(ele -> ele.getFilterType() == 1);
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extStack = formatResult.getAxisMap().get(ChartAxis.extStack);
-        var axisBase = xAxis.subList(0, xAxis.size() - extStack.size());
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        return ChartDataBuild.transStackChartDataAntV(axisBase, yAxis, view, data, extStack, isDrill);
+        var drillAxis = xAxis.stream().filter(axis -> FieldSource.DRILL == axis.getSource()).toList();
+        var xAxisBase = xAxis.subList(0, xAxis.size() - extStack.size() - drillAxis.size());
+        return ChartDataBuild.transStackChartDataAntV(xAxisBase, xAxis, yAxis, view, data, extStack, isDrill);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/bar/StackBarHandler.java
Patch:
@@ -65,7 +65,8 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extStack = formatResult.getAxisMap().get(ChartAxis.extStack);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        var xAxisBase = xAxis.subList(0, xAxis.size() - extStack.size());
-        return ChartDataBuild.transStackChartDataAntV(xAxisBase, yAxis, view, data, extStack, isDrill);
+        var drillAxis = xAxis.stream().filter(axis -> FieldSource.DRILL == axis.getSource()).toList();
+        var xAxisBase = xAxis.subList(0, xAxis.size() - extStack.size() - drillAxis.size());
+        return ChartDataBuild.transStackChartDataAntV(xAxisBase, xAxis, yAxis, view, data, extStack, isDrill);
     }
 }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/line/StackAreaHandler.java
Patch:
@@ -46,9 +46,10 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
                 .anyMatch(ele -> ele.getFilterType() == 1);
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var extStack = formatResult.getAxisMap().get(ChartAxis.extStack);
-        var axisBase = xAxis.subList(0, xAxis.size() - extStack.size());
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
-        return ChartDataBuild.transStackChartDataAntV(axisBase, yAxis, view, data, extStack, isDrill);
+        var drillAxis = xAxis.stream().filter(axis -> FieldSource.DRILL == axis.getSource()).toList();
+        var xAxisBase = xAxis.subList(0, xAxis.size() - extStack.size() - drillAxis.size());
+        return ChartDataBuild.transStackChartDataAntV(xAxisBase, xAxis, yAxis, view, data, extStack, isDrill);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -288,7 +288,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                         if (i == drillRequestList.size() - 1) {
                             ChartViewFieldDTO nextDrillField = drill.get(i + 1);
                             if (!fields.contains(nextDrillField.getId())) {
-                                viewField.setSource(FieldSource.DRILL);
+                                nextDrillField.setSource(FieldSource.DRILL);
                                 nextDrillField.setSort(getDrillSort(xAxis, drill.get(0)));
                                 xAxis.add(nextDrillField);
                                 dillAxis.add(nextDrillField);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -288,7 +288,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                         if (i == drillRequestList.size() - 1) {
                             ChartViewFieldDTO nextDrillField = drill.get(i + 1);
                             if (!fields.contains(nextDrillField.getId())) {
-                                viewField.setSource(FieldSource.DRILL);
+                                nextDrillField.setSource(FieldSource.DRILL);
                                 nextDrillField.setSort(getDrillSort(xAxis, drill.get(0)));
                                 xAxis.add(nextDrillField);
                                 dillAxis.add(nextDrillField);

File: core/core-backend/src/main/java/io/dataease/copilot/api/CopilotAPI.java
Patch:
@@ -58,15 +58,13 @@ public String getToken(String license) throws Exception {
         JSONObject json = new JSONObject();
         json.put("licenseText", license);
         HttpClientConfig httpClientConfig = new HttpClientConfig();
-        httpClientConfig.addHeader("Authorization", basicAuth(getConfig().getUsername(), getConfig().getPwd()));
         String tokenJson = HttpClientUtil.post(url, json.toString(), httpClientConfig);
         return (String) JsonUtil.parse(tokenJson, Map.class).get("accessToken");
     }
 
     public String getFreeToken() throws Exception {
         String url = getConfig().getCopilotUrl() + FREE_TOKEN;
         HttpClientConfig httpClientConfig = new HttpClientConfig();
-        httpClientConfig.addHeader("Authorization", basicAuth(getConfig().getUsername(), getConfig().getPwd()));
         String tokenJson = HttpClientUtil.post(url, "", httpClientConfig);
         return (String) JsonUtil.parse(tokenJson, Map.class).get("accessToken");
     }

File: core/core-backend/src/main/java/io/dataease/copilot/api/CopilotAPI.java
Patch:
@@ -58,15 +58,13 @@ public String getToken(String license) throws Exception {
         JSONObject json = new JSONObject();
         json.put("licenseText", license);
         HttpClientConfig httpClientConfig = new HttpClientConfig();
-        httpClientConfig.addHeader("Authorization", basicAuth(getConfig().getUsername(), getConfig().getPwd()));
         String tokenJson = HttpClientUtil.post(url, json.toString(), httpClientConfig);
         return (String) JsonUtil.parse(tokenJson, Map.class).get("accessToken");
     }
 
     public String getFreeToken() throws Exception {
         String url = getConfig().getCopilotUrl() + FREE_TOKEN;
         HttpClientConfig httpClientConfig = new HttpClientConfig();
-        httpClientConfig.addHeader("Authorization", basicAuth(getConfig().getUsername(), getConfig().getPwd()));
         String tokenJson = HttpClientUtil.post(url, "", httpClientConfig);
         return (String) JsonUtil.parse(tokenJson, Map.class).get("accessToken");
     }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/request/ChartExcelRequest.java
Patch:
@@ -22,6 +22,6 @@ public class ChartExcelRequest extends ChartExcelRequestInner {
 
     private List<ChartExcelRequestInner> multiInfo;
 
-    private boolean isDataEaseBi = false;
+    private boolean dataEaseBi = false;
 
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/request/ChartExcelRequest.java
Patch:
@@ -22,6 +22,6 @@ public class ChartExcelRequest extends ChartExcelRequestInner {
 
     private List<ChartExcelRequestInner> multiInfo;
 
-    private boolean isDataEaseBi = false;
+    private boolean dataEaseBi = false;
 
 }

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -89,6 +89,7 @@ public void findExcelData(ChartExcelRequest request) {
     public void innerExportDetails(ChartExcelRequest request, HttpServletResponse response) throws Exception {
         HttpServletRequest httpServletRequest = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
         String linkToken = httpServletRequest.getHeader(AuthConstant.LINK_TOKEN_KEY);
+        LogUtil.info(request.getViewInfo().getId() + " " + StringUtils.isNotEmpty(linkToken) + " " + request.isDataEaseBi());
         if ((StringUtils.isNotEmpty(linkToken) && !request.isDataEaseBi()) || (request.isDataEaseBi() && StringUtils.isEmpty(linkToken))) {
             OutputStream outputStream = response.getOutputStream();
             try {
@@ -147,7 +148,7 @@ public void innerExportDetails(ChartExcelRequest request, HttpServletResponse re
             } catch (Exception e) {
                 DEException.throwException(e);
             }
-        }else {
+        } else {
             exportCenterManage.addTask(request.getViewId(), "chart", request);
             return;
         }

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -89,6 +89,7 @@ public void findExcelData(ChartExcelRequest request) {
     public void innerExportDetails(ChartExcelRequest request, HttpServletResponse response) throws Exception {
         HttpServletRequest httpServletRequest = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
         String linkToken = httpServletRequest.getHeader(AuthConstant.LINK_TOKEN_KEY);
+        LogUtil.info(request.getViewInfo().getId() + " " + StringUtils.isNotEmpty(linkToken) + " " + request.isDataEaseBi());
         if ((StringUtils.isNotEmpty(linkToken) && !request.isDataEaseBi()) || (request.isDataEaseBi() && StringUtils.isEmpty(linkToken))) {
             OutputStream outputStream = response.getOutputStream();
             try {
@@ -147,7 +148,7 @@ public void innerExportDetails(ChartExcelRequest request, HttpServletResponse re
             } catch (Exception e) {
                 DEException.throwException(e);
             }
-        }else {
+        } else {
             exportCenterManage.addTask(request.getViewId(), "chart", request);
             return;
         }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/FlowMapHandler.java
Patch:
@@ -19,7 +19,7 @@ public AxisFormatResult formatAxis(ChartViewDTO view) {
         var result = super.formatAxis(view);
         var xAxis = result.getAxisMap().get(ChartAxis.xAxis);
         xAxis.addAll(Optional.ofNullable(view.getFlowMapStartName()).orElse(new ArrayList<>()));
-        xAxis.addAll(Optional.ofNullable(view.getFlowMapStartName()).orElse(new ArrayList<>()));
+        xAxis.addAll(Optional.ofNullable(view.getFlowMapEndName()).orElse(new ArrayList<>()));
         result.getAxisMap().put(ChartAxis.xAxis, xAxis);
         return result;
     }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/map/FlowMapHandler.java
Patch:
@@ -19,7 +19,7 @@ public AxisFormatResult formatAxis(ChartViewDTO view) {
         var result = super.formatAxis(view);
         var xAxis = result.getAxisMap().get(ChartAxis.xAxis);
         xAxis.addAll(Optional.ofNullable(view.getFlowMapStartName()).orElse(new ArrayList<>()));
-        xAxis.addAll(Optional.ofNullable(view.getFlowMapStartName()).orElse(new ArrayList<>()));
+        xAxis.addAll(Optional.ofNullable(view.getFlowMapEndName()).orElse(new ArrayList<>()));
         result.getAxisMap().put(ChartAxis.xAxis, xAxis);
         return result;
     }

File: core/core-backend/src/main/java/io/dataease/dataset/utils/FieldUtils.java
Patch:
@@ -16,6 +16,8 @@ public static int transType2DeType(String type) {
             case "ENUM":
             case "ANY":
             case "STRING":
+            case "BOOL":
+            case "BOOLEAN":
                 return 0;// 文本
             case "DATE":
             case "TIME":
@@ -66,8 +68,6 @@ public static int transType2DeType(String type) {
                 return 3;// 浮点
             case "BIT":
             case "TINYINT":
-            case "BOOL":
-            case "BOOLEAN":
                 return 4;// 布尔
             default:
                 return 0;

File: core/core-backend/src/main/java/io/dataease/dataset/utils/FieldUtils.java
Patch:
@@ -16,6 +16,8 @@ public static int transType2DeType(String type) {
             case "ENUM":
             case "ANY":
             case "STRING":
+            case "BOOL":
+            case "BOOLEAN":
                 return 0;// 文本
             case "DATE":
             case "TIME":
@@ -66,8 +68,6 @@ public static int transType2DeType(String type) {
                 return 3;// 浮点
             case "BIT":
             case "TINYINT":
-            case "BOOL":
-            case "BOOLEAN":
                 return 4;// 布尔
             default:
                 return 0;

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -343,7 +343,7 @@ public String saveCanvas(DataVisualizationBaseRequest request) throws Exception{
                 }
 
             });
-
+            request.setComponentData(componentDataStr.get());
         }
         DataVisualizationInfo visualizationInfo = new DataVisualizationInfo();
         BeanUtils.copyBean(visualizationInfo, request);

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -343,7 +343,7 @@ public String saveCanvas(DataVisualizationBaseRequest request) throws Exception{
                 }
 
             });
-
+            request.setComponentData(componentDataStr.get());
         }
         DataVisualizationInfo visualizationInfo = new DataVisualizationInfo();
         BeanUtils.copyBean(visualizationInfo, request);

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableValueItem.java
Patch:
@@ -4,6 +4,7 @@
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
+import java.util.ArrayList;
 import java.util.List;
 
 @Data
@@ -14,8 +15,9 @@ public class SysVariableValueItem {
     private String variableType;
     @JsonSerialize(using = ToStringSerializer.class)
     private Long variableId;
+    private List<String> variableValueIds = new ArrayList<>();
     @JsonSerialize(using = ToStringSerializer.class)
-    private Long variableValueId;
+    private Long variableValueId ;
     private String variableName;
     private boolean valid = true;
     private List<SysVariableValueDto> valueList;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableValueItem.java
Patch:
@@ -4,6 +4,7 @@
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
+import java.util.ArrayList;
 import java.util.List;
 
 @Data
@@ -14,8 +15,9 @@ public class SysVariableValueItem {
     private String variableType;
     @JsonSerialize(using = ToStringSerializer.class)
     private Long variableId;
+    private List<String> variableValueIds = new ArrayList<>();
     @JsonSerialize(using = ToStringSerializer.class)
-    private Long variableValueId;
+    private Long variableValueId ;
     private String variableName;
     private boolean valid = true;
     private List<SysVariableValueDto> valueList;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -194,7 +194,6 @@ private List<TableField> fetchResultField(ResultSet rs ) throws Exception {
         List<TableField> fieldList = new ArrayList<>();
         ResultSetMetaData metaData = rs.getMetaData();
         int columnCount = metaData.getColumnCount();
-        System.out.println(columnCount);
         for (int j = 0; j < columnCount; j++) {
             String columnName = metaData.getColumnName(j + 1);
             String label = StringUtils.isNotEmpty(metaData.getColumnLabel(j + 1)) ? metaData.getColumnLabel(j + 1) : columnName;

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -89,7 +89,7 @@ public void findExcelData(ChartExcelRequest request) {
     public void innerExportDetails(ChartExcelRequest request, HttpServletResponse response) throws Exception {
         HttpServletRequest httpServletRequest = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
         String linkToken = httpServletRequest.getHeader(AuthConstant.LINK_TOKEN_KEY);
-        if (StringUtils.isEmpty(linkToken)) {
+        if (StringUtils.isEmpty(linkToken) || !request.isDataEaseBi()) {
             exportCenterManage.addTask(request.getViewId(), "chart", request);
             return;
         }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/request/ChartExcelRequest.java
Patch:
@@ -22,4 +22,6 @@ public class ChartExcelRequest extends ChartExcelRequestInner {
 
     private List<ChartExcelRequestInner> multiInfo;
 
+    private boolean isDataEaseBi = false;
+
 }

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartDataServer.java
Patch:
@@ -89,7 +89,7 @@ public void findExcelData(ChartExcelRequest request) {
     public void innerExportDetails(ChartExcelRequest request, HttpServletResponse response) throws Exception {
         HttpServletRequest httpServletRequest = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
         String linkToken = httpServletRequest.getHeader(AuthConstant.LINK_TOKEN_KEY);
-        if (StringUtils.isEmpty(linkToken)) {
+        if (StringUtils.isEmpty(linkToken) || !request.isDataEaseBi()) {
             exportCenterManage.addTask(request.getViewId(), "chart", request);
             return;
         }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/request/ChartExcelRequest.java
Patch:
@@ -22,4 +22,6 @@ public class ChartExcelRequest extends ChartExcelRequestInner {
 
     private List<ChartExcelRequestInner> multiInfo;
 
+    private boolean isDataEaseBi = false;
+
 }

File: core/core-backend/src/main/java/io/dataease/listener/XpackTaskStarter.java
Patch:
@@ -21,7 +21,6 @@ public void run(ApplicationArguments args) {
         try {
             LicenseUtil.validate();
             deTaskExecutor.init();
-            deTaskExecutor.clearRetryTask();
         } catch (Exception e) {
             LogUtil.error(e.getMessage(), e.getCause());
         }

File: core/core-backend/src/main/java/io/dataease/MybatisPlusGenerator.java
Patch:
@@ -21,11 +21,11 @@ public class MybatisPlusGenerator {
     /**
      * 业务模块例如datasource,dataset,panel等
      */
-    private static final String busi = "template";
+    private static final String busi = "visualization";
     /**
      * 这是要生成代码的表名称
      */
-    private static final String TABLE_NAME = "visualization_template";
+    private static final String TABLE_NAME = "visualization_report_filter";
 
     /**
      * 下面两个配置基本上不用动

File: core/core-backend/src/main/java/io/dataease/datasource/provider/H2EngineProvider.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.datasource.dao.auto.entity.CoreDeEngine;
 import io.dataease.datasource.request.EngineRequest;
 import io.dataease.datasource.type.H2;
+import io.dataease.extensions.datasource.dto.ConnectionObj;
 import io.dataease.extensions.datasource.dto.DatasourceDTO;
 import io.dataease.extensions.datasource.dto.TableField;
 import io.dataease.extensions.datasource.vo.DatasourceConfiguration;
@@ -13,7 +14,6 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
-import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.Statement;
 import java.util.Arrays;
@@ -28,8 +28,8 @@ public void exec(EngineRequest engineRequest) throws Exception {
         int queryTimeout = configuration.getQueryTimeout();
         DatasourceDTO datasource = new DatasourceDTO();
         BeanUtils.copyBean(datasource, engineRequest.getEngine());
-        try (Connection connection = getConnection(datasource); Statement stat = getStatement(connection, queryTimeout)) {
-            PreparedStatement preparedStatement = connection.prepareStatement(engineRequest.getQuery());
+        try (ConnectionObj connection = getConnection(datasource); Statement stat = getStatement(connection.getConnection(), queryTimeout)) {
+            PreparedStatement preparedStatement = connection.getConnection().prepareStatement(engineRequest.getQuery());
             preparedStatement.setQueryTimeout(queryTimeout);
             Boolean result = preparedStatement.execute();
         } catch (Exception e) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.datasource.dao.auto.entity.CoreDeEngine;
 import io.dataease.datasource.request.EngineRequest;
 import io.dataease.datasource.type.Mysql;
+import io.dataease.extensions.datasource.dto.ConnectionObj;
 import io.dataease.extensions.datasource.dto.DatasourceDTO;
 import io.dataease.extensions.datasource.dto.TableField;
 import io.dataease.extensions.datasource.vo.DatasourceConfiguration;
@@ -13,7 +14,6 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 
-import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.Statement;
 import java.util.Arrays;
@@ -32,8 +32,8 @@ public void exec(EngineRequest engineRequest) throws Exception {
         int queryTimeout = configuration.getQueryTimeout();
         DatasourceDTO datasource = new DatasourceDTO();
         BeanUtils.copyBean(datasource, engineRequest.getEngine());
-        try (Connection connection = getConnection(datasource); Statement stat = getStatement(connection, queryTimeout)) {
-            PreparedStatement preparedStatement = connection.prepareStatement(engineRequest.getQuery());
+        try (ConnectionObj connection = getConnection(datasource); Statement stat = getStatement(connection.getConnection(), queryTimeout)) {
+            PreparedStatement preparedStatement = connection.getConnection().prepareStatement(engineRequest.getQuery());
             preparedStatement.setQueryTimeout(queryTimeout);
             Boolean result = preparedStatement.execute();
         } catch (Exception e) {

File: core/core-backend/src/main/java/io/dataease/datasource/type/Redshift.java
Patch:
@@ -16,8 +16,8 @@ public String getJdbc() {
             return getJdbcUrl();
         }
         return "jdbc:redshift://HOSTNAME:PORT/DATABASE"
-                .replace("HOSTNAME", getHost().trim())
-                .replace("PORT", getPort().toString().trim())
+                .replace("HOSTNAME", getLHost().trim())
+                .replace("PORT", getLPort().toString().trim())
                 .replace("DATABASE", getDataBase().trim());
     }
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/visualization/request/DataVisualizationBaseRequest.java
Patch:
@@ -42,8 +42,6 @@ public class DataVisualizationBaseRequest extends DataVisualizationVO {
     @JsonSerialize(using = ToStringSerializer.class)
     private Long taskId;
 
-    private VisualizationExport2AppVO appData;
-
     @JsonSerialize(using = ToStringSerializer.class)
     // 数据集分组PID
     private Long datasetFolderPid;

File: sdk/api/api-base/src/main/java/io/dataease/api/visualization/request/DataVisualizationBaseRequest.java
Patch:
@@ -42,8 +42,6 @@ public class DataVisualizationBaseRequest extends DataVisualizationVO {
     @JsonSerialize(using = ToStringSerializer.class)
     private Long taskId;
 
-    private VisualizationExport2AppVO appData;
-
     @JsonSerialize(using = ToStringSerializer.class)
     // 数据集分组PID
     private Long datasetFolderPid;

File: sdk/common/src/main/java/io/dataease/constant/XpackSettingConstants.java
Patch:
@@ -9,4 +9,5 @@ public class XpackSettingConstants {
     public static final String PLATFORM_RID = "basic.platformRid";
     public static final String DIP = "basic.dip";
     public static final String PVP = "basic.pvp";
+    public static final String DEFAULT_LOGIN = "basic.defaultLogin";
 }

File: sdk/common/src/main/java/io/dataease/utils/SystemSettingUtils.java
Patch:
@@ -13,7 +13,8 @@ public static boolean xpackSetting(String pkey) {
                 XpackSettingConstants.PLATFORM_OID,
                 XpackSettingConstants.DIP,
                 XpackSettingConstants.PVP,
-                XpackSettingConstants.PLATFORM_RID);
+                XpackSettingConstants.PLATFORM_RID,
+                XpackSettingConstants.DEFAULT_LOGIN);
         return xpackSettingList.contains(pkey);
     }
 }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -42,6 +42,7 @@ public static String getContextPath() {
             "/sysParameter/requestTimeOut",
             "/setting/authentication/status",
             "/sysParameter/ui",
+            "/sysParameter/defaultLogin",
             "/embedded/initIframe",
             "/");
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/DefaultChartHandler.java
Patch:
@@ -484,7 +484,7 @@ protected void groupStackDrill(List<ChartViewFieldDTO> xAxis,
                                    List<ChartViewFieldDTO> drillFields,
                                    List<ChartDrillRequest> drillRequestList) {
         var fields = xAxis.stream().map(ChartViewFieldDTO::getId).collect(Collectors.toSet());
-        ChartDrillRequest head = drillRequestList.get(0);
+        ChartDrillRequest head = drillRequestList.getFirst();
         Map<Long, String> dimValMap = new HashMap<>();
         head.getDimensionList().forEach(item -> dimValMap.put(item.getId(), item.getValue()));
         Map<Long, ChartViewFieldDTO> fieldMap = xAxis.stream().collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o, ((p, n) -> p)));
@@ -525,6 +525,7 @@ protected void groupStackDrill(List<ChartViewFieldDTO> xAxis,
             tmpFilter.setFieldId(String.valueOf(tmpField.getId()));
             tmpFilter.setFilterType(1);
             if (datasetTableField.getDeType() == 1) {
+                tmpFilter.setOriginValue(Collections.singletonList(dimValMap.get(tmpField.getId())));
                 tmpFilter.setOperator("between");
                 // 把value类似过滤组件处理，获得start time和end time
                 Map<String, Long> stringLongMap = Utils.parseDateTimeValue(dimValMap.get(tmpField.getId()));

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/DefaultChartHandler.java
Patch:
@@ -484,7 +484,7 @@ protected void groupStackDrill(List<ChartViewFieldDTO> xAxis,
                                    List<ChartViewFieldDTO> drillFields,
                                    List<ChartDrillRequest> drillRequestList) {
         var fields = xAxis.stream().map(ChartViewFieldDTO::getId).collect(Collectors.toSet());
-        ChartDrillRequest head = drillRequestList.get(0);
+        ChartDrillRequest head = drillRequestList.getFirst();
         Map<Long, String> dimValMap = new HashMap<>();
         head.getDimensionList().forEach(item -> dimValMap.put(item.getId(), item.getValue()));
         Map<Long, ChartViewFieldDTO> fieldMap = xAxis.stream().collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o, ((p, n) -> p)));
@@ -525,6 +525,7 @@ protected void groupStackDrill(List<ChartViewFieldDTO> xAxis,
             tmpFilter.setFieldId(String.valueOf(tmpField.getId()));
             tmpFilter.setFilterType(1);
             if (datasetTableField.getDeType() == 1) {
+                tmpFilter.setOriginValue(Collections.singletonList(dimValMap.get(tmpField.getId())));
                 tmpFilter.setOperator("between");
                 // 把value类似过滤组件处理，获得start time和end time
                 Map<String, Long> stringLongMap = Utils.parseDateTimeValue(dimValMap.get(tmpField.getId()));

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/scatter/ScatterHandler.java
Patch:
@@ -35,10 +35,11 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
         boolean isDrill = filterResult.getFilterList().stream().anyMatch(ele -> ele.getFilterType() == 1);
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
+        var yAxisTemp = new ArrayList<>(yAxis);
         var extBubble = formatResult.getAxisMap().get(ChartAxis.extBubble);
         if (!extBubble.isEmpty()) {
             // 剔除气泡大小，移除一个
-            Iterator<ChartViewFieldDTO> iterator = yAxis.iterator();
+            Iterator<ChartViewFieldDTO> iterator = yAxisTemp.iterator();
             while (iterator.hasNext()) {
                 ChartViewFieldDTO obj = iterator.next();
                 if (obj.getId().equals(extBubble.getFirst().getId())) {
@@ -47,7 +48,7 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
                 }
             }
         }
-        Map<String, Object> result = ChartDataBuild.transScatterDataAntV(xAxis, yAxis, view, data, extBubble, isDrill);
+        Map<String, Object> result = ChartDataBuild.transScatterDataAntV(xAxis, yAxisTemp, view, data, extBubble, isDrill);
         return result;
     }
 }

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -437,11 +437,11 @@ public static Map<String, Object> transScatterDataAntV(List<ChartViewFieldDTO> x
                     axisChartDataDTO.setValue(new BigDecimal(0));
                 }
                 axisChartDataDTO.setCategory(StringUtils.defaultIfBlank(yAxis.get(j).getChartShowName(), yAxis.get(j).getName()));
-                buildDynamicValue(view, axisChartDataDTO, row, size, extSize);
+                buildDynamicValue(view, axisChartDataDTO, row, size, ObjectUtils.isNotEmpty(extBubble)?extSize-1:extSize);
                 // pop
                 if (ObjectUtils.isNotEmpty(extBubble)) {
                     try {
-                        axisChartDataDTO.setPopSize(StringUtils.isEmpty(row[size - extBubble.size()]) ? null : new BigDecimal(row[size - extBubble.size()]));
+                        axisChartDataDTO.setPopSize(StringUtils.isEmpty(row[2]) ? null : new BigDecimal(row[2]));
                         ChartQuotaDTO bubbleQuotaDTO = new ChartQuotaDTO();
                         bubbleQuotaDTO.setId(extBubble.get(0).getId());
                         quotaList.add(bubbleQuotaDTO);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/scatter/ScatterHandler.java
Patch:
@@ -35,10 +35,11 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
         boolean isDrill = filterResult.getFilterList().stream().anyMatch(ele -> ele.getFilterType() == 1);
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
+        var yAxisTemp = new ArrayList<>(yAxis);
         var extBubble = formatResult.getAxisMap().get(ChartAxis.extBubble);
         if (!extBubble.isEmpty()) {
             // 剔除气泡大小，移除一个
-            Iterator<ChartViewFieldDTO> iterator = yAxis.iterator();
+            Iterator<ChartViewFieldDTO> iterator = yAxisTemp.iterator();
             while (iterator.hasNext()) {
                 ChartViewFieldDTO obj = iterator.next();
                 if (obj.getId().equals(extBubble.getFirst().getId())) {
@@ -47,7 +48,7 @@ public Map<String, Object> buildNormalResult(ChartViewDTO view, AxisFormatResult
                 }
             }
         }
-        Map<String, Object> result = ChartDataBuild.transScatterDataAntV(xAxis, yAxis, view, data, extBubble, isDrill);
+        Map<String, Object> result = ChartDataBuild.transScatterDataAntV(xAxis, yAxisTemp, view, data, extBubble, isDrill);
         return result;
     }
 }

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -437,11 +437,11 @@ public static Map<String, Object> transScatterDataAntV(List<ChartViewFieldDTO> x
                     axisChartDataDTO.setValue(new BigDecimal(0));
                 }
                 axisChartDataDTO.setCategory(StringUtils.defaultIfBlank(yAxis.get(j).getChartShowName(), yAxis.get(j).getName()));
-                buildDynamicValue(view, axisChartDataDTO, row, size, extSize);
+                buildDynamicValue(view, axisChartDataDTO, row, size, ObjectUtils.isNotEmpty(extBubble)?extSize-1:extSize);
                 // pop
                 if (ObjectUtils.isNotEmpty(extBubble)) {
                     try {
-                        axisChartDataDTO.setPopSize(StringUtils.isEmpty(row[size - extBubble.size()]) ? null : new BigDecimal(row[size - extBubble.size()]));
+                        axisChartDataDTO.setPopSize(StringUtils.isEmpty(row[2]) ? null : new BigDecimal(row[2]));
                         ChartQuotaDTO bubbleQuotaDTO = new ChartQuotaDTO();
                         bubbleQuotaDTO.setId(extBubble.get(0).getId());
                         quotaList.add(bubbleQuotaDTO);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -26,6 +26,7 @@
 public class YoyChartHandler extends DefaultChartHandler {
     @Override
     public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<ChartExtFilterDTO> filterList, AxisFormatResult formatResult) {
+        var result = super.customFilter(view, filterList, formatResult);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
         String originFilterJson = (String) JsonUtil.toJSONString(filterList);
         // 如果设置了同环比的指标字段设置了过滤器，那就需要把该过滤器的时间往前回调一年
@@ -37,7 +38,7 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             formatResult.getContext().put("originFilter", originFilter);
             formatResult.getContext().put("yoyFiltered", true);
         }
-        return (T) new CustomFilterResult(filterList, formatResult.getContext());
+        return (T) result;
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -62,7 +62,7 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
                 chartExtRequest.setPageSize(null);
             }
         }
-        return super.customFilter(view, filterList, formatResult);
+        return (T) new CustomFilterResult(filterList, formatResult.getContext());
     }
 
     @Override
@@ -73,7 +73,6 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         for (Map.Entry<Long, DatasourceSchemaDTO> next : dsMap.entrySet()) {
             dsList.add(next.getValue().getType());
         }
-        boolean needOrder = Utils.isNeedOrder(dsList);
         boolean crossDs = Utils.isCrossDs(dsMap);
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDsList(dsMap);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/YoyChartHandler.java
Patch:
@@ -26,6 +26,7 @@
 public class YoyChartHandler extends DefaultChartHandler {
     @Override
     public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<ChartExtFilterDTO> filterList, AxisFormatResult formatResult) {
+        var result = super.customFilter(view, filterList, formatResult);
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
         String originFilterJson = (String) JsonUtil.toJSONString(filterList);
         // 如果设置了同环比的指标字段设置了过滤器，那就需要把该过滤器的时间往前回调一年
@@ -37,7 +38,7 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
             formatResult.getContext().put("originFilter", originFilter);
             formatResult.getContext().put("yoyFiltered", true);
         }
-        return (T) new CustomFilterResult(filterList, formatResult.getContext());
+        return (T) result;
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/table/TableInfoHandler.java
Patch:
@@ -62,7 +62,7 @@ public <T extends CustomFilterResult> T customFilter(ChartViewDTO view, List<Cha
                 chartExtRequest.setPageSize(null);
             }
         }
-        return super.customFilter(view, filterList, formatResult);
+        return (T) new CustomFilterResult(filterList, formatResult.getContext());
     }
 
     @Override
@@ -73,7 +73,6 @@ public <T extends ChartCalcDataResult> T calcChartResult(ChartViewDTO view, Axis
         for (Map.Entry<Long, DatasourceSchemaDTO> next : dsMap.entrySet()) {
             dsList.add(next.getValue().getType());
         }
-        boolean needOrder = Utils.isNeedOrder(dsList);
         boolean crossDs = Utils.isCrossDs(dsMap);
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDsList(dsMap);

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/DefaultChartHandler.java
Patch:
@@ -128,6 +128,9 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
         // 如果是表格导出查询 则在此处直接就可以返回
         var extStack = formatResult.getAxisMap().get(ChartAxis.extStack);
+        if (CollectionUtils.isNotEmpty(extStack) && xAxis.size() > extStack.size()) {
+            xAxis = xAxis.subList(0, xAxis.size() - extStack.size());
+        }
         if (view.getIsExcelExport()) {
             Map<String, Object> sourceInfo = ChartDataBuild.transTableNormal(xAxis, yAxis, view, calcResult.getOriginData(), extStack, desensitizationList);
             sourceInfo.put("sourceData", calcResult.getOriginData());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/DefaultChartHandler.java
Patch:
@@ -128,6 +128,9 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         var yAxis = formatResult.getAxisMap().get(ChartAxis.yAxis);
         // 如果是表格导出查询 则在此处直接就可以返回
         var extStack = formatResult.getAxisMap().get(ChartAxis.extStack);
+        if (CollectionUtils.isNotEmpty(extStack) && xAxis.size() > extStack.size()) {
+            xAxis = xAxis.subList(0, xAxis.size() - extStack.size());
+        }
         if (view.getIsExcelExport()) {
             Map<String, Object> sourceInfo = ChartDataBuild.transTableNormal(xAxis, yAxis, view, calcResult.getOriginData(), extStack, desensitizationList);
             sourceInfo.put("sourceData", calcResult.getOriginData());

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -139,7 +139,6 @@ public static String execHttpRequest(ApiDefinition apiDefinition, int socketTime
                             if (field.getOriginName().equalsIgnoreCase(param)) {
                                 String resultStr = execHttpRequest(definition, definition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout(), null);
                                 List<String[]> dataList = fetchResult(resultStr, definition);
-                                System.out.println(dataList.get(0)[i]);
                                 if (dataList.size() > 0) {
                                     httpClientConfig.addHeader(header.get("name").toString(), dataList.get(0)[i]);
                                 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -139,7 +139,6 @@ public static String execHttpRequest(ApiDefinition apiDefinition, int socketTime
                             if (field.getOriginName().equalsIgnoreCase(param)) {
                                 String resultStr = execHttpRequest(definition, definition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout(), null);
                                 List<String[]> dataList = fetchResult(resultStr, definition);
-                                System.out.println(dataList.get(0)[i]);
                                 if (dataList.size() > 0) {
                                     httpClientConfig.addHeader(header.get("name").toString(), dataList.get(0)[i]);
                                 }

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/ChartExtFilterDTO.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.extensions.view.dto;
 
 
+import com.fasterxml.jackson.annotation.JsonIgnore;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
 import lombok.Data;
 
@@ -19,5 +20,7 @@ public class ChartExtFilterDTO {
     private List<DatasetTableFieldDTO> datasetTableFieldList;
     private String dateStyle;
     private String datePattern;
+    @JsonIgnore
+    private List<String> originValue;
     private int filterType;// 0-过滤组件，1-下钻，2-联动，外部参数
 }

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/ChartExtFilterDTO.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.extensions.view.dto;
 
 
+import com.fasterxml.jackson.annotation.JsonIgnore;
 import io.dataease.extensions.datasource.dto.DatasetTableFieldDTO;
 import lombok.Data;
 
@@ -19,5 +20,7 @@ public class ChartExtFilterDTO {
     private List<DatasetTableFieldDTO> datasetTableFieldList;
     private String dateStyle;
     private String datePattern;
+    @JsonIgnore
+    private List<String> originValue;
     private int filterType;// 0-过滤组件，1-下钻，2-联动，外部参数
 }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -281,6 +281,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                         drillFilter.setFilterType(1);
                         if (datasetTableField.getDeType() == 1) {
                             drillFilter.setOperator("between");
+                            drillFilter.setOriginValue(Collections.singletonList(dim.getValue()));
                             // 把value类似过滤组件处理，获得start time和end time
                             Map<String, Long> stringLongMap = Utils.parseDateTimeValue(dim.getValue());
                             drillFilter.setValue(Arrays.asList(String.valueOf(stringLongMap.get("startTime")), String.valueOf(stringLongMap.get("endTime"))));

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -281,6 +281,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                         drillFilter.setFilterType(1);
                         if (datasetTableField.getDeType() == 1) {
                             drillFilter.setOperator("between");
+                            drillFilter.setOriginValue(Collections.singletonList(dim.getValue()));
                             // 把value类似过滤组件处理，获得start time和end time
                             Map<String, Long> stringLongMap = Utils.parseDateTimeValue(dim.getValue());
                             drillFilter.setValue(Arrays.asList(String.valueOf(stringLongMap.get("startTime")), String.valueOf(stringLongMap.get("endTime"))));

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -127,7 +127,8 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         List<DataSetRowPermissionsTreeDTO> rowPermissionsTree = permissionManage.getRowPermissionsTree(table.getId(), chartExtRequest.getUser());
         //将没有权限的列删掉
         List<String> dataeaseNames = columnPermissionFields.stream().map(DatasetTableFieldDTO::getDataeaseName).collect(Collectors.toList());
-
+        //计数字段
+        dataeaseNames.add("*");
         AxisFormatResult formatResult = chartHandler.formatAxis(view);
         formatResult.getContext().put("desensitizationList", desensitizationList);
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -127,7 +127,8 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         List<DataSetRowPermissionsTreeDTO> rowPermissionsTree = permissionManage.getRowPermissionsTree(table.getId(), chartExtRequest.getUser());
         //将没有权限的列删掉
         List<String> dataeaseNames = columnPermissionFields.stream().map(DatasetTableFieldDTO::getDataeaseName).collect(Collectors.toList());
-
+        //计数字段
+        dataeaseNames.add("*");
         AxisFormatResult formatResult = chartHandler.formatAxis(view);
         formatResult.getContext().put("desensitizationList", desensitizationList);
         var xAxis = formatResult.getAxisMap().get(ChartAxis.xAxis);

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -973,7 +973,6 @@ public void updateDatasourceStatus() {
                     LicenseUtil.validate();
                     validate(datasource);
                 } catch (Exception e) {
-
                 }
             });
         });

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/auth/api/InteractiveAuthApi.java
Patch:
@@ -85,4 +85,6 @@ public interface InteractiveAuthApi {
 
     @GetMapping("/OrgNameForResource")
     String OrgNameForResource(Long id);
+
+    void editResourceExtraFlag(BusiResourceEditor editor);
 }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -973,7 +973,6 @@ public void updateDatasourceStatus() {
                     LicenseUtil.validate();
                     validate(datasource);
                 } catch (Exception e) {
-                    e.printStackTrace();
                 }
             });
         });

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -973,7 +973,7 @@ public void updateDatasourceStatus() {
                     LicenseUtil.validate();
                     validate(datasource);
                 } catch (Exception e) {
-
+                    e.printStackTrace();
                 }
             });
         });

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/auth/api/InteractiveAuthApi.java
Patch:
@@ -85,4 +85,6 @@ public interface InteractiveAuthApi {
 
     @GetMapping("/OrgNameForResource")
     String OrgNameForResource(Long id);
+
+    void editResourceExtraFlag(BusiResourceEditor editor);
 }

File: core/core-backend/src/main/java/io/dataease/commons/constants/DataVisualizationConstants.java
Patch:
@@ -57,6 +57,8 @@ public static final class RESOURCE_OPT_TYPE {
         public static final String MOVE = "move";
         //重命名
         public static final String RENAME = "rename";
+
+        public static final String EDIT = "edit";
         //复制
         public static final String COPY = "copy";
     }

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -396,6 +396,7 @@ public void nameCheck(DataVisualizationBaseRequest request) {
         QueryWrapper<DataVisualizationInfo> wrapper = new QueryWrapper<>();
         if (DataVisualizationConstants.RESOURCE_OPT_TYPE.MOVE.equals(request.getOpt())
                 || DataVisualizationConstants.RESOURCE_OPT_TYPE.RENAME.equals(request.getOpt())
+                || DataVisualizationConstants.RESOURCE_OPT_TYPE.EDIT.equals(request.getOpt())
                 || DataVisualizationConstants.RESOURCE_OPT_TYPE.COPY.equals(request.getOpt())) {
             if (request.getPid() == null) {
                 DataVisualizationInfo result = visualizationInfoMapper.selectById(request.getId());

File: core/core-backend/src/main/java/io/dataease/commons/constants/DataVisualizationConstants.java
Patch:
@@ -57,6 +57,8 @@ public static final class RESOURCE_OPT_TYPE {
         public static final String MOVE = "move";
         //重命名
         public static final String RENAME = "rename";
+
+        public static final String EDIT = "edit";
         //复制
         public static final String COPY = "copy";
     }

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -396,6 +396,7 @@ public void nameCheck(DataVisualizationBaseRequest request) {
         QueryWrapper<DataVisualizationInfo> wrapper = new QueryWrapper<>();
         if (DataVisualizationConstants.RESOURCE_OPT_TYPE.MOVE.equals(request.getOpt())
                 || DataVisualizationConstants.RESOURCE_OPT_TYPE.RENAME.equals(request.getOpt())
+                || DataVisualizationConstants.RESOURCE_OPT_TYPE.EDIT.equals(request.getOpt())
                 || DataVisualizationConstants.RESOURCE_OPT_TYPE.COPY.equals(request.getOpt())) {
             if (request.getPid() == null) {
                 DataVisualizationInfo result = visualizationInfoMapper.selectById(request.getId());

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DataSourceManage.java
Patch:
@@ -95,10 +95,10 @@ public void checkName(DatasourceDTO dto) {
         if (ObjectUtils.isNotEmpty(dto.getId())) {
             wrapper.ne("id", dto.getId());
         }
-        if (ObjectUtils.isNotEmpty(dto.getNodeType())   ) {
-            if(dto.getNodeType().equalsIgnoreCase("folder")){
+        if (ObjectUtils.isNotEmpty(dto.getNodeType())) {
+            if (dto.getNodeType().equalsIgnoreCase("folder")) {
                 wrapper.eq("type", dto.getType());
-            }else {
+            } else {
                 wrapper.ne("type", "folder");
             }
 

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -37,6 +37,7 @@
 import io.dataease.job.schedule.CheckDsStatusJob;
 import io.dataease.job.schedule.ScheduleManager;
 import io.dataease.license.config.XpackInteract;
+import io.dataease.license.utils.LicenseUtil;
 import io.dataease.log.DeLog;
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
@@ -969,9 +970,10 @@ public void updateDatasourceStatus() {
         datasources.forEach(datasource -> {
             commonThreadPool.addTask(() -> {
                 try {
+                    LicenseUtil.validate();
                     validate(datasource);
                 } catch (Exception e) {
-                    e.printStackTrace();
+
                 }
             });
         });

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DataSourceManage.java
Patch:
@@ -95,10 +95,10 @@ public void checkName(DatasourceDTO dto) {
         if (ObjectUtils.isNotEmpty(dto.getId())) {
             wrapper.ne("id", dto.getId());
         }
-        if (ObjectUtils.isNotEmpty(dto.getNodeType())   ) {
-            if(dto.getNodeType().equalsIgnoreCase("folder")){
+        if (ObjectUtils.isNotEmpty(dto.getNodeType())) {
+            if (dto.getNodeType().equalsIgnoreCase("folder")) {
                 wrapper.eq("type", dto.getType());
-            }else {
+            } else {
                 wrapper.ne("type", "folder");
             }
 

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -37,6 +37,7 @@
 import io.dataease.job.schedule.CheckDsStatusJob;
 import io.dataease.job.schedule.ScheduleManager;
 import io.dataease.license.config.XpackInteract;
+import io.dataease.license.utils.LicenseUtil;
 import io.dataease.log.DeLog;
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
@@ -969,9 +970,10 @@ public void updateDatasourceStatus() {
         datasources.forEach(datasource -> {
             commonThreadPool.addTask(() -> {
                 try {
+                    LicenseUtil.validate();
                     validate(datasource);
                 } catch (Exception e) {
-                    e.printStackTrace();
+
                 }
             });
         });

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/AxisFormatResult.java
Patch:
@@ -2,12 +2,14 @@
 
 import lombok.AllArgsConstructor;
 import lombok.Data;
+import lombok.NoArgsConstructor;
 
 import java.util.List;
 import java.util.Map;
 
 @Data
 @AllArgsConstructor
+@NoArgsConstructor
 public class AxisFormatResult {
     private Map<ChartAxis, List<ChartViewFieldDTO>> axisMap;
     private Map<String, Object> context;

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/dto/AxisFormatResult.java
Patch:
@@ -2,12 +2,14 @@
 
 import lombok.AllArgsConstructor;
 import lombok.Data;
+import lombok.NoArgsConstructor;
 
 import java.util.List;
 import java.util.Map;
 
 @Data
 @AllArgsConstructor
+@NoArgsConstructor
 public class AxisFormatResult {
     private Map<ChartAxis, List<ChartViewFieldDTO>> axisMap;
     private Map<String, Object> context;

File: core/core-backend/src/main/java/io/dataease/ai/service/AiBaseService.java
Patch:
@@ -24,7 +24,7 @@ public class AiBaseService implements AiComponentApi {
     @Override
     public Map<String, String> findTargetUrl() {
         Map<String, String> templateParams = sysParameterManage.groupVal("ai.");
-        if (templateParams != null && StringUtils.isNotEmpty(templateParams.get("ai.baseUrl")) && UrlTestUtils.isURLAvailable(templateParams.get("ai.baseUrl"))) {
+        if (templateParams != null && StringUtils.isNotEmpty(templateParams.get("ai.baseUrl"))) {
             return templateParams;
 
         } else {

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/GroupMixHandler.java
Patch:
@@ -71,6 +71,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         rightFields.addAll(view.getYAxisExt());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
+        mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/MixHandler.java
Patch:
@@ -157,6 +157,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
+        mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/StackMixHandler.java
Patch:
@@ -87,6 +87,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         rightFields.addAll(view.getYAxisExt());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
+        mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/GroupMixHandler.java
Patch:
@@ -71,6 +71,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         rightFields.addAll(view.getYAxisExt());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
+        mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/MixHandler.java
Patch:
@@ -157,6 +157,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
+        mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/StackMixHandler.java
Patch:
@@ -87,6 +87,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         rightFields.addAll(view.getYAxisExt());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
+        mergeAssistField(rightCalcResult.getDynamicAssistFields(), rightCalcResult.getAssistData());
         var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1798,7 +1798,8 @@ public static Map<String, Object> transSymbolicMapNormalWithDetail(List<ChartVie
                 }
                 return temp;
             })).collect(Collectors.toList());
-            row.put("details", detailValueMapList);
+            //详情只要一个
+            row.put("details", !detailValueMapList.isEmpty() ?Collections.singletonList(detailValueMapList.getFirst()):detailValueMapList);
         });
 
         ChartViewFieldDTO detailFieldDTO = new ChartViewFieldDTO();

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1798,7 +1798,8 @@ public static Map<String, Object> transSymbolicMapNormalWithDetail(List<ChartVie
                 }
                 return temp;
             })).collect(Collectors.toList());
-            row.put("details", detailValueMapList);
+            //详情只要一个
+            row.put("details", !detailValueMapList.isEmpty() ?Collections.singletonList(detailValueMapList.getFirst()):detailValueMapList);
         });
 
         ChartViewFieldDTO detailFieldDTO = new ChartViewFieldDTO();

File: core/core-backend/src/main/java/io/dataease/chart/dao/ext/mapper/ExtChartViewMapper.java
Patch:
@@ -11,7 +11,7 @@
 public interface ExtChartViewMapper {
 
     @Select("""
-            select id, scene_id as pid, title, type from core_chart_view where scene_id = #{resourceId}
+            select id, scene_id as pid, title, type from core_chart_view where type != 'VQuery' and scene_id = #{resourceId}
             """)
     List<ViewSelectorVO> queryViewOption(@Param("resourceId") Long resourceId);
 }

File: core/core-backend/src/main/java/io/dataease/chart/dao/ext/mapper/ExtChartViewMapper.java
Patch:
@@ -11,7 +11,7 @@
 public interface ExtChartViewMapper {
 
     @Select("""
-            select id, scene_id as pid, title, type from core_chart_view where scene_id = #{resourceId}
+            select id, scene_id as pid, title, type from core_chart_view where type != 'VQuery' and scene_id = #{resourceId}
             """)
     List<ViewSelectorVO> queryViewOption(@Param("resourceId") Long resourceId);
 }

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/StackMixHandler.java
Patch:
@@ -11,9 +11,9 @@
 import java.util.stream.Collectors;
 
 @Component
-public class StackMixHandler extends MixHandler{
+public class StackMixHandler extends MixHandler {
     @Getter
-    private String type = "chart-mix-stack";
+    private final String type = "chart-mix-stack";
 
     @Override
     public AxisFormatResult formatAxis(ChartViewDTO view) {
@@ -88,7 +88,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         rightFields.addAll(view.getYAxisExt());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
-        var rightData = new HashMap<String, Object>(leftTable);
+        var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());
 

File: core/core-backend/src/main/java/io/dataease/chart/charts/impl/mix/StackMixHandler.java
Patch:
@@ -11,9 +11,9 @@
 import java.util.stream.Collectors;
 
 @Component
-public class StackMixHandler extends MixHandler{
+public class StackMixHandler extends MixHandler {
     @Getter
-    private String type = "chart-mix-stack";
+    private final String type = "chart-mix-stack";
 
     @Override
     public AxisFormatResult formatAxis(ChartViewDTO view) {
@@ -88,7 +88,7 @@ public ChartViewDTO buildChart(ChartViewDTO view, ChartCalcDataResult calcResult
         rightFields.addAll(view.getYAxisExt());
         var rightOriginData = rightCalcResult.getOriginData();
         var rightTable = ChartDataBuild.transTableNormal(rightFields, view, rightOriginData, desensitizationList);
-        var rightData = new HashMap<String, Object>(leftTable);
+        var rightData = new HashMap<String, Object>(rightTable);
         rightData.putAll(rightCalcResult.getData());
         rightData.put("dynamicAssistLines", rightCalcResult.getDynamicAssistFields());
 

File: core/core-backend/src/main/java/io/dataease/dataset/server/DatasetTreeServer.java
Patch:
@@ -2,13 +2,13 @@
 
 import io.dataease.api.dataset.DatasetTreeApi;
 import io.dataease.api.dataset.dto.DatasetNodeDTO;
-import io.dataease.extensions.datasource.dto.DatasetTableDTO;
-import io.dataease.extensions.view.dto.SqlVariableDetails;
 import io.dataease.api.dataset.union.DatasetGroupInfoDTO;
 import io.dataease.api.dataset.vo.DataSetBarVO;
 import io.dataease.constant.LogOT;
 import io.dataease.constant.LogST;
 import io.dataease.dataset.manage.DatasetGroupManage;
+import io.dataease.extensions.datasource.dto.DatasetTableDTO;
+import io.dataease.extensions.view.dto.SqlVariableDetails;
 import io.dataease.log.DeLog;
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
@@ -72,7 +72,7 @@ public DatasetGroupInfoDTO get(Long id) throws Exception {
 
     @Override
     public DatasetGroupInfoDTO details(Long id) throws Exception {
-        return datasetGroupManage.get(id, null);
+        return datasetGroupManage.getDetail(id);
     }
 
     @Override

File: core/core-backend/src/main/java/io/dataease/dataset/server/DatasetTreeServer.java
Patch:
@@ -2,13 +2,13 @@
 
 import io.dataease.api.dataset.DatasetTreeApi;
 import io.dataease.api.dataset.dto.DatasetNodeDTO;
-import io.dataease.extensions.datasource.dto.DatasetTableDTO;
-import io.dataease.extensions.view.dto.SqlVariableDetails;
 import io.dataease.api.dataset.union.DatasetGroupInfoDTO;
 import io.dataease.api.dataset.vo.DataSetBarVO;
 import io.dataease.constant.LogOT;
 import io.dataease.constant.LogST;
 import io.dataease.dataset.manage.DatasetGroupManage;
+import io.dataease.extensions.datasource.dto.DatasetTableDTO;
+import io.dataease.extensions.view.dto.SqlVariableDetails;
 import io.dataease.log.DeLog;
 import io.dataease.model.BusiNodeRequest;
 import io.dataease.model.BusiNodeVO;
@@ -72,7 +72,7 @@ public DatasetGroupInfoDTO get(Long id) throws Exception {
 
     @Override
     public DatasetGroupInfoDTO details(Long id) throws Exception {
-        return datasetGroupManage.get(id, null);
+        return datasetGroupManage.getDetail(id);
     }
 
     @Override

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/auth/api/InteractiveAuthApi.java
Patch:
@@ -77,4 +77,7 @@ public interface InteractiveAuthApi {
 
     @GetMapping("/checkEmpty")
     boolean checkEmpty();
+
+    @GetMapping("/OrgNameForResource")
+    String OrgNameForResource(Long id);
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/auth/api/InteractiveAuthApi.java
Patch:
@@ -77,4 +77,7 @@ public interface InteractiveAuthApi {
 
     @GetMapping("/checkEmpty")
     boolean checkEmpty();
+
+    @GetMapping("/OrgNameForResource")
+    String OrgNameForResource(Long id);
 }

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/util/FieldUtil.java
Patch:
@@ -11,7 +11,7 @@ public class FieldUtil {
     public static List<DatasetTableFieldDTO> transFields(List<? extends ChartViewFieldBaseDTO> list) {
         return list.stream().map(ele -> {
             DatasetTableFieldDTO dto = new DatasetTableFieldDTO();
-            BeanUtils.copyProperties(dto, ele);
+            BeanUtils.copyProperties(ele, dto);
             return dto;
         }).collect(Collectors.toList());
     }

File: sdk/extensions/extensions-view/src/main/java/io/dataease/extensions/view/util/FieldUtil.java
Patch:
@@ -11,7 +11,7 @@ public class FieldUtil {
     public static List<DatasetTableFieldDTO> transFields(List<? extends ChartViewFieldBaseDTO> list) {
         return list.stream().map(ele -> {
             DatasetTableFieldDTO dto = new DatasetTableFieldDTO();
-            BeanUtils.copyProperties(dto, ele);
+            BeanUtils.copyProperties(ele, dto);
             return dto;
         }).collect(Collectors.toList());
     }

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -690,9 +690,7 @@ private DatasourceDTO validate(CoreDatasource coreDatasource) {
             wrapper.eq("id", coreDatasource.getId());
             CoreDatasource originData = datasourceMapper.selectById(coreDatasource.getId());
             String originStatus = originData.getStatus();
-            if (!StringUtils.equals(coreDatasource.getStatus(), originStatus)) {
-                dataSourceManage.innerEditStatus(coreDatasource);
-            }
+            dataSourceManage.innerEditStatus(coreDatasource);
         }
         datasourceDTO.setConfiguration("");
         return datasourceDTO;

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -688,9 +688,7 @@ private DatasourceDTO validate(CoreDatasource coreDatasource) {
             wrapper.eq("id", coreDatasource.getId());
             CoreDatasource originData = datasourceMapper.selectById(coreDatasource.getId());
             String originStatus = originData.getStatus();
-            if (!StringUtils.equals(coreDatasource.getStatus(), originStatus)) {
-                dataSourceManage.innerEditStatus(coreDatasource);
-            }
+            dataSourceManage.innerEditStatus(coreDatasource);
         }
         datasourceDTO.setConfiguration("");
         return datasourceDTO;

File: core/core-backend/src/main/java/io/dataease/commons/utils/SqlparserUtils.java
Patch:
@@ -561,7 +561,7 @@ private static String transFilter(SqlVariableDetails sqlVariableDetails) {
         if (sqlVariableDetails.getOperator().equals("in")) {
             return "'" + String.join("','", sqlVariableDetails.getValue()) + "'";
         } else if (sqlVariableDetails.getOperator().equals("between")) {
-            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(sqlVariableDetails.getType().size() > 1 ? (String) sqlVariableDetails.getType().get(1).replace("DD", "dd") : "YYYY");
+            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(sqlVariableDetails.getType().size() > 1 ? (String) sqlVariableDetails.getType().get(1).replace("DD", "dd").replace("YYYY", "yyyy") : "yyyy");
             if (StringUtils.endsWith(sqlVariableDetails.getId(), START_END_SEPARATOR)) {
                 return simpleDateFormat.format(new Date(Long.parseLong((String) sqlVariableDetails.getValue().get(1))));
             } else {

File: core/core-backend/src/main/java/io/dataease/menu/manage/MenuManage.java
Patch:
@@ -87,12 +87,12 @@ private MenuVO convert(CoreMenu coreMenu) {
     }
 
     private boolean isXpackMenu(CoreMenu coreMenu) {
+        if (coreMenu.getId().equals(21L)) return false;
         return coreMenu.getId().equals(7L)
                 || coreMenu.getPid().equals(7L)
                 || coreMenu.getId().equals(14L)
                 || coreMenu.getId().equals(17L)
                 || coreMenu.getId().equals(18L)
-                || coreMenu.getId().equals(21L)
                 || coreMenu.getPid().equals(21L)
                 || coreMenu.getId().equals(25L)
                 || coreMenu.getId().equals(26L)

File: core/core-backend/src/main/java/io/dataease/menu/manage/MenuManage.java
Patch:
@@ -87,12 +87,12 @@ private MenuVO convert(CoreMenu coreMenu) {
     }
 
     private boolean isXpackMenu(CoreMenu coreMenu) {
+        if (coreMenu.getId().equals(21L)) return false;
         return coreMenu.getId().equals(7L)
                 || coreMenu.getPid().equals(7L)
                 || coreMenu.getId().equals(14L)
                 || coreMenu.getId().equals(17L)
                 || coreMenu.getId().equals(18L)
-                || coreMenu.getId().equals(21L)
                 || coreMenu.getPid().equals(21L)
                 || coreMenu.getId().equals(25L)
                 || coreMenu.getId().equals(26L)

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -393,7 +393,7 @@ public void hidePW(DatasourceDTO datasourceDTO) {
                 configuration = JsonUtil.parseObject(datasourceDTO.getConfiguration(), Impala.class);
                 if (StringUtils.isNotEmpty(configuration.getUrlType()) && configuration.getUrlType().equalsIgnoreCase("jdbcUrl")) {
                     if (configuration.getJdbcUrl().contains("password=")) {
-                        String[] params = configuration.getJdbcUrl().split(";")[1].split("&");
+                        String[] params = configuration.getJdbcUrl().split(";");
                         String pd = "";
                         for (int i = 0; i < params.length; i++) {
                             if (params[i].contains("password=")) {

File: core/core-backend/src/main/java/io/dataease/visualization/server/StaticResourceServer.java
Patch:
@@ -76,7 +76,7 @@ private boolean isImage(MultipartFile file) {
             return true;
         }
         // 判断其他图片
-        if (image == null || image.getWidth() <= 0 || image.getHeight() <= 0 || !isValidSVG(file)) {
+        if (image == null || image.getWidth() <= 0 || image.getHeight() <= 0) {
             return false;
         }
         return true;

File: core/core-backend/src/main/java/io/dataease/visualization/server/StaticResourceServer.java
Patch:
@@ -76,7 +76,7 @@ private boolean isImage(MultipartFile file) {
             return true;
         }
         // 判断其他图片
-        if (image == null || image.getWidth() <= 0 || image.getHeight() <= 0 || !isValidSVG(file)) {
+        if (image == null || image.getWidth() <= 0 || image.getHeight() <= 0) {
             return false;
         }
         return true;

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -1594,7 +1594,7 @@ private boolean enableExtData(String type) {
 
     private List<ChartViewFieldDTO> getAllChartFields(ChartViewDTO view) {
         // get all fields
-        Map<String, List<ChartViewFieldDTO>> stringListMap = chartViewManege.listByDQ(view.getTableId(), view.getId());
+        Map<String, List<ChartViewFieldDTO>> stringListMap = chartViewManege.listByDQ(view.getTableId(), view.getId(), view);
         List<ChartViewFieldDTO> dimensionList = stringListMap.get("dimensionList");
         List<ChartViewFieldDTO> quotaList = stringListMap.get("quotaList");
         List<ChartViewFieldDTO> allFields = new ArrayList<>();

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartViewServer.java
Patch:
@@ -34,8 +34,8 @@ public ChartViewDTO getData(Long id) throws Exception {
     }
 
     @Override
-    public Map<String, List<ChartViewFieldDTO>> listByDQ(Long id, Long chartId) {
-        return chartViewManege.listByDQ(id, chartId);
+    public Map<String, List<ChartViewFieldDTO>> listByDQ(Long id, Long chartId, ChartViewDTO dto) {
+        return chartViewManege.listByDQ(id, chartId, dto);
     }
 
     @Override

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/ChartViewApi.java
Patch:
@@ -26,7 +26,7 @@ public interface ChartViewApi {
 
     @Operation(summary = "获取图表字段")
     @PostMapping("listByDQ/{id}/{chartId}")
-    Map<String, List<ChartViewFieldDTO>> listByDQ(@PathVariable Long id, @PathVariable Long chartId);
+    Map<String, List<ChartViewFieldDTO>> listByDQ(@PathVariable Long id, @PathVariable Long chartId, @RequestBody ChartViewDTO dto);
 
     @Operation(summary = "保存图表")
     @PostMapping("save")

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -1594,7 +1594,7 @@ private boolean enableExtData(String type) {
 
     private List<ChartViewFieldDTO> getAllChartFields(ChartViewDTO view) {
         // get all fields
-        Map<String, List<ChartViewFieldDTO>> stringListMap = chartViewManege.listByDQ(view.getTableId(), view.getId());
+        Map<String, List<ChartViewFieldDTO>> stringListMap = chartViewManege.listByDQ(view.getTableId(), view.getId(), view);
         List<ChartViewFieldDTO> dimensionList = stringListMap.get("dimensionList");
         List<ChartViewFieldDTO> quotaList = stringListMap.get("quotaList");
         List<ChartViewFieldDTO> allFields = new ArrayList<>();

File: core/core-backend/src/main/java/io/dataease/chart/server/ChartViewServer.java
Patch:
@@ -34,8 +34,8 @@ public ChartViewDTO getData(Long id) throws Exception {
     }
 
     @Override
-    public Map<String, List<ChartViewFieldDTO>> listByDQ(Long id, Long chartId) {
-        return chartViewManege.listByDQ(id, chartId);
+    public Map<String, List<ChartViewFieldDTO>> listByDQ(Long id, Long chartId, ChartViewDTO dto) {
+        return chartViewManege.listByDQ(id, chartId, dto);
     }
 
     @Override

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/ChartViewApi.java
Patch:
@@ -26,7 +26,7 @@ public interface ChartViewApi {
 
     @Operation(summary = "获取图表字段")
     @PostMapping("listByDQ/{id}/{chartId}")
-    Map<String, List<ChartViewFieldDTO>> listByDQ(@PathVariable Long id, @PathVariable Long chartId);
+    Map<String, List<ChartViewFieldDTO>> listByDQ(@PathVariable Long id, @PathVariable Long chartId, @RequestBody ChartViewDTO dto);
 
     @Operation(summary = "保存图表")
     @PostMapping("save")

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -213,12 +213,12 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                     || ("antv".equalsIgnoreCase(view.getRender()) && "line".equalsIgnoreCase(view.getType()))
                     || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")
                     || StringUtils.equalsIgnoreCase(view.getType(), "sankey")
-                    || StringUtils.equalsIgnoreCase(view.getType(), "chart-mix")
+                    || StringUtils.containsIgnoreCase(view.getType(), "chart-mix")
             ) {
                 xAxis.addAll(xAxisExt);
             }
             yAxis = new ArrayList<>(view.getYAxis());
-            if (StringUtils.equalsIgnoreCase(view.getType(), "chart-mix")
+            if (StringUtils.containsIgnoreCase(view.getType(), "chart-mix")
                     || StringUtils.equalsIgnoreCase(view.getType(), "bidirectional-bar")
                     || StringUtils.equalsIgnoreCase(view.getType(), "quadrant")
                     || StringUtils.containsIgnoreCase(view.getType(), "progress-bar")) {

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -213,12 +213,12 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                     || ("antv".equalsIgnoreCase(view.getRender()) && "line".equalsIgnoreCase(view.getType()))
                     || StringUtils.equalsIgnoreCase(view.getType(), "flow-map")
                     || StringUtils.equalsIgnoreCase(view.getType(), "sankey")
-                    || StringUtils.equalsIgnoreCase(view.getType(), "chart-mix")
+                    || StringUtils.containsIgnoreCase(view.getType(), "chart-mix")
             ) {
                 xAxis.addAll(xAxisExt);
             }
             yAxis = new ArrayList<>(view.getYAxis());
-            if (StringUtils.equalsIgnoreCase(view.getType(), "chart-mix")
+            if (StringUtils.containsIgnoreCase(view.getType(), "chart-mix")
                     || StringUtils.equalsIgnoreCase(view.getType(), "bidirectional-bar")
                     || StringUtils.equalsIgnoreCase(view.getType(), "quadrant")
                     || StringUtils.containsIgnoreCase(view.getType(), "progress-bar")) {

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/filter/FilterTreeItem.java
Patch:
@@ -1,5 +1,7 @@
 package io.dataease.api.chart.filter;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import io.dataease.dto.dataset.DatasetTableFieldDTO;
 import lombok.Data;
 
@@ -13,6 +15,7 @@
 public class FilterTreeItem implements Serializable {
     private String type;// 'item' or 'tree'
     // item
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long fieldId;
     private DatasetTableFieldDTO field;// field object
     private String filterType;// 'logic' or 'enum'

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/filter/FilterTreeItem.java
Patch:
@@ -1,5 +1,7 @@
 package io.dataease.api.chart.filter;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import io.dataease.dto.dataset.DatasetTableFieldDTO;
 import lombok.Data;
 
@@ -13,6 +15,7 @@
 public class FilterTreeItem implements Serializable {
     private String type;// 'item' or 'tree'
     // item
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long fieldId;
     private DatasetTableFieldDTO field;// field object
     private String filterType;// 'logic' or 'enum'

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -156,6 +156,7 @@ public List<DatasetTableFieldDTO> selectByDatasetGroupId(Long id) {
         QueryWrapper<CoreDatasetTableField> wrapper = new QueryWrapper<>();
         wrapper.eq("dataset_group_id", id);
         wrapper.eq("checked", true);
+        wrapper.isNull("chart_id");
         return transDTO(coreDatasetTableFieldMapper.selectList(wrapper));
     }
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -156,6 +156,7 @@ public List<DatasetTableFieldDTO> selectByDatasetGroupId(Long id) {
         QueryWrapper<CoreDatasetTableField> wrapper = new QueryWrapper<>();
         wrapper.eq("dataset_group_id", id);
         wrapper.eq("checked", true);
+        wrapper.isNull("chart_id");
         return transDTO(coreDatasetTableFieldMapper.selectList(wrapper));
     }
 

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -175,7 +175,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         FilterTreeObj fieldCustomFilter = view.getCustomFilter();
         List<ChartViewFieldDTO> drill = new ArrayList<>(view.getDrillFields());
 
-        DatasetGroupInfoDTO table = datasetGroupManage.get(view.getTableId(), null);
+        DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         if (table == null) {
             DEException.throwException(ResultCode.DATA_IS_WRONG.code(), Translator.get("i18n_no_ds"));
         }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -175,7 +175,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         FilterTreeObj fieldCustomFilter = view.getCustomFilter();
         List<ChartViewFieldDTO> drill = new ArrayList<>(view.getDrillFields());
 
-        DatasetGroupInfoDTO table = datasetGroupManage.get(view.getTableId(), null);
+        DatasetGroupInfoDTO table = datasetGroupManage.getDatasetGroupInfoDTO(view.getTableId(), null);
         if (table == null) {
             DEException.throwException(ResultCode.DATA_IS_WRONG.code(), Translator.get("i18n_no_ds"));
         }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -65,6 +65,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/xpackComponent/content/")
                 || StringUtils.startsWithAny(requestURI, "/geo/")
                 || StringUtils.startsWithAny(requestURI, "/websocket")
-                || StringUtils.startsWithAny(requestURI, "/map/");
+                || StringUtils.startsWithAny(requestURI, "/map/")
+                || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }
 }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -65,6 +65,7 @@ public static boolean match(String requestURI) {
                 || StringUtils.startsWithAny(requestURI, "/xpackComponent/content/")
                 || StringUtils.startsWithAny(requestURI, "/geo/")
                 || StringUtils.startsWithAny(requestURI, "/websocket")
-                || StringUtils.startsWithAny(requestURI, "/map/");
+                || StringUtils.startsWithAny(requestURI, "/map/")
+                || StringUtils.startsWithAny(requestURI, "/communicate/down/");
     }
 }

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -17,7 +17,6 @@
 import io.dataease.visualization.server.DataVisualizationServer;
 import io.dataease.websocket.WsMessage;
 import io.dataease.websocket.WsService;
-import io.dataease.xpack.base.log.dao.auto.entity.XpackLog;
 import jakarta.annotation.PostConstruct;
 import jakarta.annotation.Resource;
 import jakarta.servlet.http.HttpServletResponse;

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -17,7 +17,6 @@
 import io.dataease.visualization.server.DataVisualizationServer;
 import io.dataease.websocket.WsMessage;
 import io.dataease.websocket.WsService;
-import io.dataease.xpack.base.log.dao.auto.entity.XpackLog;
 import jakarta.annotation.PostConstruct;
 import jakarta.annotation.Resource;
 import jakarta.servlet.http.HttpServletResponse;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableDto.java
Patch:
@@ -10,7 +10,9 @@ public class SysVariableDto {
     private Long id;
     private String type;
     private String name;
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long min;
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long max;
     private String startTime;
     private String endTime;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableDto.java
Patch:
@@ -10,7 +10,9 @@ public class SysVariableDto {
     private Long id;
     private String type;
     private String name;
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long min;
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long max;
     private String startTime;
     private String endTime;

File: core/core-backend/src/main/java/io/dataease/job/schedule/CheckDsStatusJob.java
Patch:
@@ -10,9 +10,9 @@
 import org.quartz.JobExecutionException;
 import org.springframework.stereotype.Component;
 
+
 @Component
 public class CheckDsStatusJob implements Job {
-
     @Resource
     private DatasourceServer datasourceServer;
 

File: sdk/api/api-base/src/main/java/io/dataease/api/exportCenter/vo/ExportTaskDTO.java
Patch:
@@ -30,4 +30,6 @@ public class ExportTaskDTO  {
     private String exportMachineName;
 
     private String exportFromName;
+
+    private String orgName;
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableValueItem.java
Patch:
@@ -8,7 +8,6 @@
 
 @Data
 public class SysVariableValueItem {
-    @JsonSerialize(using = ToStringSerializer.class)
     private String variableValue;
     @JsonSerialize(using = ToStringSerializer.class)
     private String variableValue2;

File: core/core-backend/src/main/java/io/dataease/job/schedule/CheckDsStatusJob.java
Patch:
@@ -10,9 +10,9 @@
 import org.quartz.JobExecutionException;
 import org.springframework.stereotype.Component;
 
+
 @Component
 public class CheckDsStatusJob implements Job {
-
     @Resource
     private DatasourceServer datasourceServer;
 

File: sdk/api/api-base/src/main/java/io/dataease/api/exportCenter/vo/ExportTaskDTO.java
Patch:
@@ -30,4 +30,6 @@ public class ExportTaskDTO  {
     private String exportMachineName;
 
     private String exportFromName;
+
+    private String orgName;
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableValueItem.java
Patch:
@@ -8,7 +8,6 @@
 
 @Data
 public class SysVariableValueItem {
-    @JsonSerialize(using = ToStringSerializer.class)
     private String variableValue;
     @JsonSerialize(using = ToStringSerializer.class)
     private String variableValue2;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -674,6 +674,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
         }
 
         // 排序
+        boolean sortDistinct = true;
         if (ObjectUtils.isNotEmpty(request.getSortId())) {
             DatasetTableFieldDTO field = datasetTableFieldManage.selectById(request.getSortId());
             if (field == null) {
@@ -683,13 +684,14 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
             BeanUtils.copyBean(deSortField, field);
             deSortField.setOrderDirection(request.getSort());
             datasetGroupInfoDTO.setSortFields(Collections.singletonList(deSortField));
+            sortDistinct = false;
         }
 
         Field2SQLObj.field2sqlObj(sqlMeta, fields, datasetGroupInfoDTO.getAllFields(), crossDs, dsMap);
         ExtWhere2Str.extWhere2sqlOjb(sqlMeta, extFilterList, datasetGroupInfoDTO.getAllFields(), crossDs, dsMap);
         WhereTree2Str.transFilterTrees(sqlMeta, rowPermissionsTree, fields, crossDs, dsMap);
         Order2SQLObj.getOrders(sqlMeta, fields, datasetGroupInfoDTO.getSortFields(), crossDs, dsMap);
-        String querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, ids.size() == 1, needOrder, ids.size() == 1, 0, 1000);
+        String querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, false, needOrder, sortDistinct && ids.size() == 1, 0, 1000);
         querySQL = SqlUtils.rebuildSQL(querySQL, sqlMeta, crossDs, dsMap);
         logger.info("calcite data enum sql: " + querySQL);
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -674,6 +674,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
         }
 
         // 排序
+        boolean sortDistinct = true;
         if (ObjectUtils.isNotEmpty(request.getSortId())) {
             DatasetTableFieldDTO field = datasetTableFieldManage.selectById(request.getSortId());
             if (field == null) {
@@ -683,13 +684,14 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
             BeanUtils.copyBean(deSortField, field);
             deSortField.setOrderDirection(request.getSort());
             datasetGroupInfoDTO.setSortFields(Collections.singletonList(deSortField));
+            sortDistinct = false;
         }
 
         Field2SQLObj.field2sqlObj(sqlMeta, fields, datasetGroupInfoDTO.getAllFields(), crossDs, dsMap);
         ExtWhere2Str.extWhere2sqlOjb(sqlMeta, extFilterList, datasetGroupInfoDTO.getAllFields(), crossDs, dsMap);
         WhereTree2Str.transFilterTrees(sqlMeta, rowPermissionsTree, fields, crossDs, dsMap);
         Order2SQLObj.getOrders(sqlMeta, fields, datasetGroupInfoDTO.getSortFields(), crossDs, dsMap);
-        String querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, ids.size() == 1, needOrder, ids.size() == 1, 0, 1000);
+        String querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, false, needOrder, sortDistinct && ids.size() == 1, 0, 1000);
         querySQL = SqlUtils.rebuildSQL(querySQL, sqlMeta, crossDs, dsMap);
         logger.info("calcite data enum sql: " + querySQL);
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -689,7 +689,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
         ExtWhere2Str.extWhere2sqlOjb(sqlMeta, extFilterList, datasetGroupInfoDTO.getAllFields(), crossDs, dsMap);
         WhereTree2Str.transFilterTrees(sqlMeta, rowPermissionsTree, fields, crossDs, dsMap);
         Order2SQLObj.getOrders(sqlMeta, fields, datasetGroupInfoDTO.getSortFields(), crossDs, dsMap);
-        String querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, false, needOrder, ids.size() == 1, 0, 1000);
+        String querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, ids.size() == 1, needOrder, ids.size() == 1, 0, 1000);
         querySQL = SqlUtils.rebuildSQL(querySQL, sqlMeta, crossDs, dsMap);
         logger.info("calcite data enum sql: " + querySQL);
 

File: core/core-backend/src/main/java/io/dataease/exportCenter/manage/ExportCenterManage.java
Patch:
@@ -160,7 +160,7 @@ public void retry(String id) {
         exportTaskMapper.updateById(exportTask);
         FileUtils.deleteDirectoryRecursively(exportData_path + id);
         if (exportTask.getExportFromType().equalsIgnoreCase("chart")) {
-            ChartExcelRequest request = JsonUtil.parse(exportTask.getParams(), ChartExcelRequest.class);
+            ChartExcelRequest request = JsonUtil.parseObject(exportTask.getParams(), ChartExcelRequest.class);
             startViewTask(exportTask, request);
         }
     }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/dataset/api/ColumnPermissionsApi.java
Patch:
@@ -2,8 +2,6 @@
 
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import io.dataease.api.permissions.dataset.dto.DataSetColumnPermissionsDTO;
-import io.dataease.api.permissions.dataset.dto.DataSetRowPermissionsTreeDTO;
-import io.dataease.api.permissions.dataset.dto.Item;
 import io.dataease.auth.DeApiPath;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
@@ -19,7 +17,7 @@
 public interface ColumnPermissionsApi {
 
     @GetMapping("/pager/{datasetId}/{goPage}/{pageSize}")
-    public IPage<DataSetColumnPermissionsDTO> columnPermissions(@PathVariable Long datasetId, @PathVariable int goPage, @PathVariable int pageSize);
+    public IPage<DataSetColumnPermissionsDTO> columnPermissions(@PathVariable("datasetId") Long datasetId, @PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize);
 
     @PostMapping("save")
     public void save(@RequestBody DataSetColumnPermissionsDTO dataSetColumnPermissionsDTO);

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/dataset/api/RowPermissionsApi.java
Patch:
@@ -18,7 +18,7 @@
 public interface RowPermissionsApi {
 
     @GetMapping("/pager/{datasetId}/{goPage}/{pageSize}")
-    public IPage<DataSetRowPermissionsTreeDTO> rowPermissions(@PathVariable Long datasetId, @PathVariable int goPage, @PathVariable int pageSize);
+    public IPage<DataSetRowPermissionsTreeDTO> rowPermissions(@PathVariable("datasetId") Long datasetId, @PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize);
 
 
     @PostMapping("save")
@@ -30,7 +30,7 @@ public interface RowPermissionsApi {
 
 
     @GetMapping("/authObjs/{datasetId}/{type}")
-    public List<Item> authObjs(@PathVariable Long datasetId, @PathVariable String type);
+    public List<Item> authObjs(@PathVariable("datasetId") Long datasetId, @PathVariable("type") String type);
 
     @PostMapping("/dataSetRowPermissionInfo")
     public DataSetRowPermissionsTreeDTO dataSetRowPermissionInfo(@RequestBody DataSetRowPermissionsTreeDTO request);

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/api/SysVariablesApi.java
Patch:
@@ -32,11 +32,11 @@ public interface SysVariablesApi {
 
     @Operation(summary = "删除")
     @GetMapping("/delete/{id}")
-    void delete(@PathVariable Long id);
+    void delete(@PathVariable("id") Long id);
 
     @Operation(summary = "详细信息")
     @GetMapping("/detail/{id}")
-    SysVariableDto detail(@PathVariable Long id);
+    SysVariableDto detail(@PathVariable("id") Long id);
 
     @Operation(summary = "查询")
     @PostMapping("/query")
@@ -52,7 +52,7 @@ public interface SysVariablesApi {
 
     @Operation(summary = "删除")
     @GetMapping("/value/delete/{id}")
-    void deleteValue(@PathVariable String id);
+    void deleteValue(@PathVariable("id") String id);
 
     @GetMapping("/value/selected/{id}")
     List<SysVariableValueDto> selectVariableValue(@PathVariable("id") Long id);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/PermissionManage.java
Patch:
@@ -220,11 +220,12 @@ private List<DataSetRowPermissionsTreeDTO> rowPermissionsTree(Long datasetId, Lo
 
     private String handleSysVariable(UserFormVO userEntity, String sysVariable) {
         String value = null;
-        System.out.println(sysVariable);
-        System.out.println(JsonUtil.toJSONString(userEntity));
         if (StringUtils.isNotBlank(sysVariable) && sysVariable.startsWith("${") && sysVariable.endsWith("}")) {
             String variableId = sysVariable.substring(2, sysVariable.length() - 1);
             for (SysVariableValueItem variable : userEntity.getVariables()) {
+                if (!variable.isValid()){
+                    continue;
+                }
                 if (variableId.equalsIgnoreCase(variable.getVariableId().toString())) {
                     if (variable.getSysVariableDto().getType().equalsIgnoreCase("text")) {
                         for (SysVariableValueDto sysVariableValueDto : variable.getValueList()) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -932,9 +932,9 @@ public Connection getConnection(CoreDatasource coreDatasource) throws DEExceptio
         Properties props = new Properties();
         if (StringUtils.isNotBlank(configuration.getUsername())) {
             props.setProperty("user", configuration.getUsername());
-            if (StringUtils.isNotBlank(configuration.getPassword())) {
-                props.setProperty("password", configuration.getPassword());
-            }
+        }
+        if (StringUtils.isNotBlank(configuration.getPassword())) {
+            props.setProperty("password", configuration.getPassword());
         }
         String driverClassName = configuration.getDriver();
         ExtendedJdbcClassLoader jdbcClassLoader = extendedJdbcClassLoader;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/api/SysVariablesApi.java
Patch:
@@ -32,7 +32,7 @@ public interface SysVariablesApi {
 
     @Operation(summary = "删除")
     @GetMapping("/delete/{id}")
-    void delete(@PathVariable String id);
+    void delete(@PathVariable Long id);
 
     @Operation(summary = "详细信息")
     @GetMapping("/detail/{id}")

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableValueItem.java
Patch:
@@ -18,6 +18,7 @@ public class SysVariableValueItem {
     @JsonSerialize(using = ToStringSerializer.class)
     private Long variableValueId;
     private String variableName;
+    private boolean valid = true;
     private List<SysVariableValueDto> valueList;
     private SysVariableDto sysVariableDto;
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/PermissionManage.java
Patch:
@@ -220,11 +220,12 @@ private List<DataSetRowPermissionsTreeDTO> rowPermissionsTree(Long datasetId, Lo
 
     private String handleSysVariable(UserFormVO userEntity, String sysVariable) {
         String value = null;
-        System.out.println(sysVariable);
-        System.out.println(JsonUtil.toJSONString(userEntity));
         if (StringUtils.isNotBlank(sysVariable) && sysVariable.startsWith("${") && sysVariable.endsWith("}")) {
             String variableId = sysVariable.substring(2, sysVariable.length() - 1);
             for (SysVariableValueItem variable : userEntity.getVariables()) {
+                if (!variable.isValid()){
+                    continue;
+                }
                 if (variableId.equalsIgnoreCase(variable.getVariableId().toString())) {
                     if (variable.getSysVariableDto().getType().equalsIgnoreCase("text")) {
                         for (SysVariableValueDto sysVariableValueDto : variable.getValueList()) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -932,9 +932,9 @@ public Connection getConnection(CoreDatasource coreDatasource) throws DEExceptio
         Properties props = new Properties();
         if (StringUtils.isNotBlank(configuration.getUsername())) {
             props.setProperty("user", configuration.getUsername());
-            if (StringUtils.isNotBlank(configuration.getPassword())) {
-                props.setProperty("password", configuration.getPassword());
-            }
+        }
+        if (StringUtils.isNotBlank(configuration.getPassword())) {
+            props.setProperty("password", configuration.getPassword());
         }
         String driverClassName = configuration.getDriver();
         ExtendedJdbcClassLoader jdbcClassLoader = extendedJdbcClassLoader;

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/api/SysVariablesApi.java
Patch:
@@ -32,7 +32,7 @@ public interface SysVariablesApi {
 
     @Operation(summary = "删除")
     @GetMapping("/delete/{id}")
-    void delete(@PathVariable String id);
+    void delete(@PathVariable Long id);
 
     @Operation(summary = "详细信息")
     @GetMapping("/detail/{id}")

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/variable/dto/SysVariableValueItem.java
Patch:
@@ -18,6 +18,7 @@ public class SysVariableValueItem {
     @JsonSerialize(using = ToStringSerializer.class)
     private Long variableValueId;
     private String variableName;
+    private boolean valid = true;
     private List<SysVariableValueDto> valueList;
     private SysVariableDto sysVariableDto;
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -231,7 +231,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
             map.put("allFields", fieldList);
         }
         map.put("sql", Base64.getEncoder().encodeToString(querySQL.getBytes()));
-        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, needOrder, false), sqlMeta, crossDs, dsMap);
+        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, false, false), sqlMeta, crossDs, dsMap);
         map.put("total", getDatasetTotal(datasetGroupInfoDTO, replaceSql, null));
         return map;
     }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -231,7 +231,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
             map.put("allFields", fieldList);
         }
         map.put("sql", Base64.getEncoder().encodeToString(querySQL.getBytes()));
-        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, needOrder, false), sqlMeta, crossDs, dsMap);
+        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, false, false), sqlMeta, crossDs, dsMap);
         map.put("total", getDatasetTotal(datasetGroupInfoDTO, replaceSql, null));
         return map;
     }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -207,7 +207,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
         Order2SQLObj.getOrders(sqlMeta, fields, datasetGroupInfoDTO.getSortFields(), crossDs, dsMap);
         String querySQL;
         if (start == null || count == null) {
-            querySQL = SQLProvider.createQuerySQL(sqlMeta, false, false, needOrder);
+            querySQL = SQLProvider.createQuerySQL(sqlMeta, false, needOrder, false);
         } else {
             querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, false, needOrder, false, start, count);
         }
@@ -231,7 +231,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
             map.put("allFields", fieldList);
         }
         map.put("sql", Base64.getEncoder().encodeToString(querySQL.getBytes()));
-        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, false, needOrder), sqlMeta, crossDs, dsMap);
+        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, needOrder, false), sqlMeta, crossDs, dsMap);
         map.put("total", getDatasetTotal(datasetGroupInfoDTO, replaceSql, null));
         return map;
     }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -207,7 +207,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
         Order2SQLObj.getOrders(sqlMeta, fields, datasetGroupInfoDTO.getSortFields(), crossDs, dsMap);
         String querySQL;
         if (start == null || count == null) {
-            querySQL = SQLProvider.createQuerySQL(sqlMeta, false, false, needOrder);
+            querySQL = SQLProvider.createQuerySQL(sqlMeta, false, needOrder, false);
         } else {
             querySQL = SQLProvider.createQuerySQLWithLimit(sqlMeta, false, needOrder, false, start, count);
         }
@@ -231,7 +231,7 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
             map.put("allFields", fieldList);
         }
         map.put("sql", Base64.getEncoder().encodeToString(querySQL.getBytes()));
-        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, false, needOrder), sqlMeta, crossDs, dsMap);
+        String replaceSql = SqlUtils.rebuildSQL(SQLProvider.createQuerySQL(sqlMeta, false, needOrder, false), sqlMeta, crossDs, dsMap);
         map.put("total", getDatasetTotal(datasetGroupInfoDTO, replaceSql, null));
         return map;
     }

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return Optional.ofNullable(value).orElse("").replaceAll("'", "\\\\'");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "''");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return Optional.ofNullable(value).orElse("").replaceAll("'", "\\\\'");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "''");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/engine/utils/Utils.java
Patch:
@@ -68,7 +68,8 @@ public static String buildCalcField(String originField, SQLObj tableObj, List<Da
                                     String.format(SQLConstants.FIELD_NAME, tableObj.getTableAlias(), ele.getDataeaseName()));
                         } else {
                             originField = originField.replaceAll("\\[" + ele.getId() + "]",
-                                    tableObj.getTableAlias() + "." + datasourceType.getPrefix() + ele.getDataeaseName() + datasourceType.getSuffix());
+                                    datasourceType.getPrefix() + tableObj.getTableAlias() + datasourceType.getSuffix() +
+                                            "." + datasourceType.getPrefix() + ele.getDataeaseName() + datasourceType.getSuffix());
                         }
                     } else {
                         originField = originField.replaceAll("\\[" + ele.getId() + "]", "(" + ele.getOriginName() + ")");

File: core/core-backend/src/main/java/io/dataease/engine/utils/Utils.java
Patch:
@@ -68,7 +68,8 @@ public static String buildCalcField(String originField, SQLObj tableObj, List<Da
                                     String.format(SQLConstants.FIELD_NAME, tableObj.getTableAlias(), ele.getDataeaseName()));
                         } else {
                             originField = originField.replaceAll("\\[" + ele.getId() + "]",
-                                    tableObj.getTableAlias() + "." + datasourceType.getPrefix() + ele.getDataeaseName() + datasourceType.getSuffix());
+                                    datasourceType.getPrefix() + tableObj.getTableAlias() + datasourceType.getSuffix() +
+                                            "." + datasourceType.getPrefix() + ele.getDataeaseName() + datasourceType.getSuffix());
                         }
                     } else {
                         originField = originField.replaceAll("\\[" + ele.getId() + "]", "(" + ele.getOriginName() + ")");

File: core/core-backend/src/main/java/io/dataease/visualization/manage/CoreVisualizationManage.java
Patch:
@@ -109,6 +109,7 @@ public void move(DataVisualizationBaseRequest request) {
 
     @XpackInteract(value = "visualizationResourceTree", before = false)
     public Long innerSave(DataVisualizationInfo visualizationInfo) {
+        visualizationInfo.setVersion(3);
         return preInnerSave(visualizationInfo);
     }
 
@@ -123,7 +124,6 @@ public Long preInnerSave(DataVisualizationInfo visualizationInfo) {
         visualizationInfo.setCreateTime(System.currentTimeMillis());
         visualizationInfo.setUpdateTime(System.currentTimeMillis());
         visualizationInfo.setOrgId(AuthUtils.getUser().getDefaultOid());
-        visualizationInfo.setVersion(3);
         mapper.insert(visualizationInfo);
         coreOptRecentManage.saveOpt(visualizationInfo.getId(), OptConstants.OPT_RESOURCE_TYPE.VISUALIZATION, OptConstants.OPT_TYPE.NEW);
         return visualizationInfo.getId();

File: core/core-backend/src/main/java/io/dataease/visualization/manage/CoreVisualizationManage.java
Patch:
@@ -109,6 +109,7 @@ public void move(DataVisualizationBaseRequest request) {
 
     @XpackInteract(value = "visualizationResourceTree", before = false)
     public Long innerSave(DataVisualizationInfo visualizationInfo) {
+        visualizationInfo.setVersion(3);
         return preInnerSave(visualizationInfo);
     }
 
@@ -123,7 +124,6 @@ public Long preInnerSave(DataVisualizationInfo visualizationInfo) {
         visualizationInfo.setCreateTime(System.currentTimeMillis());
         visualizationInfo.setUpdateTime(System.currentTimeMillis());
         visualizationInfo.setOrgId(AuthUtils.getUser().getDefaultOid());
-        visualizationInfo.setVersion(3);
         mapper.insert(visualizationInfo);
         coreOptRecentManage.saveOpt(visualizationInfo.getId(), OptConstants.OPT_RESOURCE_TYPE.VISUALIZATION, OptConstants.OPT_TYPE.NEW);
         return visualizationInfo.getId();

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/ApiDefinition.java
Patch:
@@ -20,8 +20,7 @@ public class ApiDefinition {
     private String status;
     private List<Map<String, Object>> data = new ArrayList<>();
     private Integer apiQueryTimeout = 10;
-    private int previewNum = 10;
-    private int maxPreviewNum = 10;
+    private int previewNum = 100;
     private int serialNumber;
     private boolean useJsonPath;
     private String jsonPath;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -59,7 +59,7 @@ public static Map<String, Object> fetchResultField(DatasourceRequest datasourceR
         if (apiDefinition == null) {
             DEException.throwException("未找到");
         }
-        String response = execHttpRequest(apiDefinition, 10);
+        String response = execHttpRequest(apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout());
         fieldList = getTableFields(apiDefinition);
         result.put("fieldList", fieldList);
         dataList = fetchResult(response, apiDefinition);
@@ -116,7 +116,7 @@ private static List<String[]> getData(DatasourceRequest datasourceRequest) throw
         if (apiDefinition == null) {
             DEException.throwException("未找到");
         }
-        String response = execHttpRequest(apiDefinition, 10);
+        String response = execHttpRequest(apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout());
         return fetchResult(response, apiDefinition);
     }
 

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -834,7 +834,7 @@ private boolean isCsv(String fileName) {
 
     public ApiDefinition checkApiDatasource(Map<String, String> request) throws DEException {
         ApiDefinition apiDefinition = JsonUtil.parseObject(new String(java.util.Base64.getDecoder().decode(request.get("data"))), ApiDefinition.class);
-        String response = ApiUtils.execHttpRequest(apiDefinition, 10);
+        String response = ApiUtils.execHttpRequest(apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout());
         if (request.keySet().contains("type") && request.get("type").equals("apiStructure")) {
             apiDefinition.setShowApiStructure(true);
         }

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/ApiDefinition.java
Patch:
@@ -19,8 +19,7 @@ public class ApiDefinition {
     private ApiDefinitionRequest request;
     private String status;
     private List<Map<String, Object>> data = new ArrayList<>();
-
-
+    private Integer apiQueryTimeout = 10;
     private int previewNum = 10;
     private int maxPreviewNum = 10;
     private int serialNumber;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -59,7 +59,7 @@ public static Map<String, Object> fetchResultField(DatasourceRequest datasourceR
         if (apiDefinition == null) {
             DEException.throwException("未找到");
         }
-        String response = execHttpRequest(apiDefinition, 10);
+        String response = execHttpRequest(apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout());
         fieldList = getTableFields(apiDefinition);
         result.put("fieldList", fieldList);
         dataList = fetchResult(response, apiDefinition);
@@ -116,7 +116,7 @@ private static List<String[]> getData(DatasourceRequest datasourceRequest) throw
         if (apiDefinition == null) {
             DEException.throwException("未找到");
         }
-        String response = execHttpRequest(apiDefinition, 10);
+        String response = execHttpRequest(apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout());
         return fetchResult(response, apiDefinition);
     }
 

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -834,7 +834,7 @@ private boolean isCsv(String fileName) {
 
     public ApiDefinition checkApiDatasource(Map<String, String> request) throws DEException {
         ApiDefinition apiDefinition = JsonUtil.parseObject(new String(java.util.Base64.getDecoder().decode(request.get("data"))), ApiDefinition.class);
-        String response = ApiUtils.execHttpRequest(apiDefinition, 10);
+        String response = ApiUtils.execHttpRequest(apiDefinition, apiDefinition.getApiQueryTimeout() == null || apiDefinition.getApiQueryTimeout() <= 0 ? 10 : apiDefinition.getApiQueryTimeout());
         if (request.keySet().contains("type") && request.get("type").equals("apiStructure")) {
             apiDefinition.setShowApiStructure(true);
         }

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/ApiDefinition.java
Patch:
@@ -19,8 +19,7 @@ public class ApiDefinition {
     private ApiDefinitionRequest request;
     private String status;
     private List<Map<String, Object>> data = new ArrayList<>();
-
-
+    private Integer apiQueryTimeout = 10;
     private int previewNum = 10;
     private int maxPreviewNum = 10;
     private int serialNumber;

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -155,7 +155,8 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                 } else {
                     skipBarRange = true;
                 }
-
+            } else {
+                skipBarRange = true;
             }
         }
 
@@ -579,7 +580,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                     String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
                     detailFieldSql = originSql + limit;
                 }
-            }else {
+            } else {
                 Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, transFields(allFields), crossDs, dsMap);
                 Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, transFields(allFields), crossDs, dsMap);
                 querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -155,7 +155,8 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                 } else {
                     skipBarRange = true;
                 }
-
+            } else {
+                skipBarRange = true;
             }
         }
 
@@ -579,7 +580,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                     String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
                     detailFieldSql = originSql + limit;
                 }
-            }else {
+            } else {
                 Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, transFields(allFields), crossDs, dsMap);
                 Quota2SQLObj.quota2sqlObj(sqlMeta, yAxis, transFields(allFields), crossDs, dsMap);
                 querySql = SQLProvider.createQuerySQL(sqlMeta, true, needOrder, view);

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1327,7 +1327,7 @@ public static Map<String, Object> transQuadrantDataAntV(List<ChartViewFieldDTO>
         return map;
     }
 
-    public static Map<String, Object> transTimeBarDataAntV(boolean skipBarRange, boolean isDate, List<ChartViewFieldDTO> xAxisBase, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, ChartViewDTO view, List<String[]> data, boolean isDrill) {
+    public static Map<String, Object> transBarRangeDataAntV(boolean skipBarRange, boolean isDate, List<ChartViewFieldDTO> xAxisBase, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, ChartViewDTO view, List<String[]> data, boolean isDrill) {
 
         Map<String, Object> map = new HashMap<>();
         if (skipBarRange) {

File: core/core-backend/src/main/java/io/dataease/engine/trans/Dimension2SQLObj.java
Patch:
@@ -66,7 +66,7 @@ public static void dimension2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields
         meta.setXFieldsDialect(fieldsDialect);
     }
 
-    private static SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldAlias) {
+    public static SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldAlias) {
         String fieldName = "";
         if (Objects.equals(x.getDeExtractType(), DeTypeConstants.DE_TIME)) {
             if (Objects.equals(x.getDeType(), DeTypeConstants.DE_INT) || Objects.equals(x.getDeType(), DeTypeConstants.DE_FLOAT)) {

File: sdk/api/api-base/src/main/java/io/dataease/api/dataset/union/model/SQLMeta.java
Patch:
@@ -11,6 +11,8 @@
 @Data
 public class SQLMeta {
 
+    private String chartType;
+
     private SQLObj table;
 
     /**

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1327,7 +1327,7 @@ public static Map<String, Object> transQuadrantDataAntV(List<ChartViewFieldDTO>
         return map;
     }
 
-    public static Map<String, Object> transTimeBarDataAntV(boolean skipBarRange, boolean isDate, List<ChartViewFieldDTO> xAxisBase, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, ChartViewDTO view, List<String[]> data, boolean isDrill) {
+    public static Map<String, Object> transBarRangeDataAntV(boolean skipBarRange, boolean isDate, List<ChartViewFieldDTO> xAxisBase, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, ChartViewDTO view, List<String[]> data, boolean isDrill) {
 
         Map<String, Object> map = new HashMap<>();
         if (skipBarRange) {

File: core/core-backend/src/main/java/io/dataease/engine/trans/Dimension2SQLObj.java
Patch:
@@ -66,7 +66,7 @@ public static void dimension2sqlObj(SQLMeta meta, List<ChartViewFieldDTO> fields
         meta.setXFieldsDialect(fieldsDialect);
     }
 
-    private static SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldAlias) {
+    public static SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldAlias) {
         String fieldName = "";
         if (Objects.equals(x.getDeExtractType(), DeTypeConstants.DE_TIME)) {
             if (Objects.equals(x.getDeType(), DeTypeConstants.DE_INT) || Objects.equals(x.getDeType(), DeTypeConstants.DE_FLOAT)) {

File: sdk/api/api-base/src/main/java/io/dataease/api/dataset/union/model/SQLMeta.java
Patch:
@@ -11,6 +11,8 @@
 @Data
 public class SQLMeta {
 
+    private String chartType;
+
     private SQLObj table;
 
     /**

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -231,7 +231,8 @@ public Map<String, Object> previewDataWithLimit(DatasetGroupInfoDTO datasetGroup
             map.put("allFields", fieldList);
         }
         map.put("sql", Base64.getEncoder().encodeToString(querySQL.getBytes()));
-        map.put("total", getDatasetTotal(datasetGroupInfoDTO));
+        List<LinkedHashMap<String, Object>> realTotal = (List<LinkedHashMap<String, Object>>) previewData.get("data");
+        map.put("total", Math.min(getDatasetTotal(datasetGroupInfoDTO), realTotal.size()));
         return map;
     }
 

File: core/core-backend/src/main/java/io/dataease/visualization/manage/CoreVisualizationManage.java
Patch:
@@ -147,7 +147,7 @@ private VisualizationNodeBO rootNode() {
     }
 
     private VisualizationNodeBO convert(VisualizationNodePO po) {
-        return new VisualizationNodeBO(po.getId(), po.getName(), StringUtils.equals(po.getNodeType(), "leaf"), 7, po.getPid(), 0);
+        return new VisualizationNodeBO(po.getId(), po.getName(), StringUtils.equals(po.getNodeType(), "leaf"), 7, po.getPid(), po.getExtraFlag());
     }
 
     public CoreVisualizationManage proxy() {

File: core/core-backend/src/main/java/io/dataease/visualization/manage/CoreVisualizationManage.java
Patch:
@@ -147,7 +147,7 @@ private VisualizationNodeBO rootNode() {
     }
 
     private VisualizationNodeBO convert(VisualizationNodePO po) {
-        return new VisualizationNodeBO(po.getId(), po.getName(), StringUtils.equals(po.getNodeType(), "leaf"), 7, po.getPid(), 0);
+        return new VisualizationNodeBO(po.getId(), po.getName(), StringUtils.equals(po.getNodeType(), "leaf"), 7, po.getPid(), po.getExtraFlag());
     }
 
     public CoreVisualizationManage proxy() {

File: core/core-backend/src/main/java/io/dataease/dataset/utils/SqlUtils.java
Patch:
@@ -183,11 +183,13 @@ private static SqlDialect getDialect(DatasourceSchemaDTO coreDatasource) {
             case mysql:
             case mongo:
             case StarRocks:
-            case doris:
             case TiDB:
             case mariadb:
                 sqlDialect = MysqlSqlDialect.DEFAULT;
                 break;
+            case doris:
+                sqlDialect = DorisSqlDialect.DEFAULT;
+                break;
             case impala:
                 sqlDialect = ImpalaSqlDialect.DEFAULT;
                 break;

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -63,7 +63,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(18,0)";
+    public static final String DEFAULT_INT_FORMAT = "DECIMAL(19,0)";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(26,8)";
 

File: core/core-backend/src/main/java/io/dataease/dataset/utils/SqlUtils.java
Patch:
@@ -16,6 +16,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.regex.Matcher;
 
 import static org.apache.calcite.sql.SqlKind.*;
 
@@ -143,7 +144,7 @@ public static String transSqlDialect(String sql, Map<Long, DatasourceSchemaDTO>
     public static String replaceTablePlaceHolder(String s, String placeholder) {
         s = s.replaceAll("\r\n", " ")
                 .replaceAll("\n", " ")
-                .replaceAll(SqlPlaceholderConstants.TABLE_PLACEHOLDER_REGEX, placeholder)
+                .replaceAll(SqlPlaceholderConstants.TABLE_PLACEHOLDER_REGEX, Matcher.quoteReplacement(placeholder))
                 .replaceAll("ASYMMETRIC", "")
                 .replaceAll("SYMMETRIC", "");
         return s;
@@ -169,7 +170,7 @@ public static String replaceCalcFieldPlaceHolder(String s, SQLMeta sqlMeta) {
 
         if (MapUtils.isNotEmpty(fieldsDialect)) {
             for (Map.Entry<String, String> ele : fieldsDialect.entrySet()) {
-                s = s.replaceAll(SqlPlaceholderConstants.KEYWORD_PREFIX_REGEX + ele.getKey() + SqlPlaceholderConstants.KEYWORD_SUFFIX_REGEX, ele.getValue());
+                s = s.replaceAll(SqlPlaceholderConstants.KEYWORD_PREFIX_REGEX + ele.getKey() + SqlPlaceholderConstants.KEYWORD_SUFFIX_REGEX, Matcher.quoteReplacement(ele.getValue()));
             }
         }
         return s;

File: core/core-backend/src/main/java/io/dataease/datasource/manage/EngineManage.java
Patch:
@@ -158,6 +158,7 @@ public String getAlias() {
     public void initLocalDataSource(){
         QueryWrapper<CoreDatasource> queryWrapper = new QueryWrapper<>();
         queryWrapper.eq("id",985188400292302848L);
+        queryWrapper.ne("create_time",1715053684176L);
         if(!datasourceMapper.exists(queryWrapper) && !ModelUtils.isDesktop()){
             Pattern WITH_SQL_FRAGMENT = Pattern.compile("jdbc:mysql://(.*):(\\d+)/(.*)\\?(.*)");
             Matcher matcher = WITH_SQL_FRAGMENT.matcher(env.getProperty("spring.datasource.url"));

File: core/core-backend/src/main/java/io/dataease/datasource/manage/EngineManage.java
Patch:
@@ -158,6 +158,7 @@ public String getAlias() {
     public void initLocalDataSource(){
         QueryWrapper<CoreDatasource> queryWrapper = new QueryWrapper<>();
         queryWrapper.eq("id",985188400292302848L);
+        queryWrapper.ne("create_time",1715053684176L);
         if(!datasourceMapper.exists(queryWrapper) && !ModelUtils.isDesktop()){
             Pattern WITH_SQL_FRAGMENT = Pattern.compile("jdbc:mysql://(.*):(\\d+)/(.*)\\?(.*)");
             Matcher matcher = WITH_SQL_FRAGMENT.matcher(env.getProperty("spring.datasource.url"));

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -673,7 +673,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                                         item[dataIndex] = null;
                                     } else {
                                         item[dataIndex] = new BigDecimal(cValue)
-                                                .divide(new BigDecimal(lastValue), 8, RoundingMode.HALF_UP)
+                                                .divide(new BigDecimal(lastValue).abs(), 8, RoundingMode.HALF_UP)
                                                 .subtract(new BigDecimal(1))
                                                 .setScale(8, RoundingMode.HALF_UP)
                                                 .toString();

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -404,6 +404,9 @@ private String getTableFiledSql(DatasourceRequest datasourceRequest) {
                         "    database = '%s'  \n" +
                         "    AND table = '%s' ", configuration.getDataBase(), datasourceRequest.getTable());
                 break;
+            case impala:
+                sql = String.format("DESCRIBE `%s`", datasourceRequest.getTable());
+                break;
             default:
                 break;
         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -142,6 +142,7 @@ public DatasetGroupInfoDTO save(DatasetGroupInfoDTO datasetGroupInfoDTO, boolean
 
     @XpackInteract(value = "authResourceTree", before = false)
     public void innerEdit(DatasetGroupInfoDTO datasetGroupInfoDTO) {
+        checkName(datasetGroupInfoDTO);
         CoreDatasetGroup coreDatasetGroup = BeanUtils.copyBean(new CoreDatasetGroup(), datasetGroupInfoDTO);
         coreDatasetGroup.setLastUpdateTime(System.currentTimeMillis());
         coreDatasetGroupMapper.updateById(coreDatasetGroup);
@@ -150,6 +151,7 @@ public void innerEdit(DatasetGroupInfoDTO datasetGroupInfoDTO) {
 
     @XpackInteract(value = "authResourceTree", before = false)
     public void innerSave(DatasetGroupInfoDTO datasetGroupInfoDTO) {
+        checkName(datasetGroupInfoDTO);
         CoreDatasetGroup coreDatasetGroup = BeanUtils.copyBean(new CoreDatasetGroup(), datasetGroupInfoDTO);
         coreDatasetGroupMapper.insert(coreDatasetGroup);
         coreOptRecentManage.saveOpt(coreDatasetGroup.getId(), OptConstants.OPT_RESOURCE_TYPE.DATASET, OptConstants.OPT_TYPE.NEW);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -142,6 +142,7 @@ public DatasetGroupInfoDTO save(DatasetGroupInfoDTO datasetGroupInfoDTO, boolean
 
     @XpackInteract(value = "authResourceTree", before = false)
     public void innerEdit(DatasetGroupInfoDTO datasetGroupInfoDTO) {
+        checkName(datasetGroupInfoDTO);
         CoreDatasetGroup coreDatasetGroup = BeanUtils.copyBean(new CoreDatasetGroup(), datasetGroupInfoDTO);
         coreDatasetGroup.setLastUpdateTime(System.currentTimeMillis());
         coreDatasetGroupMapper.updateById(coreDatasetGroup);
@@ -150,6 +151,7 @@ public void innerEdit(DatasetGroupInfoDTO datasetGroupInfoDTO) {
 
     @XpackInteract(value = "authResourceTree", before = false)
     public void innerSave(DatasetGroupInfoDTO datasetGroupInfoDTO) {
+        checkName(datasetGroupInfoDTO);
         CoreDatasetGroup coreDatasetGroup = BeanUtils.copyBean(new CoreDatasetGroup(), datasetGroupInfoDTO);
         coreDatasetGroupMapper.insert(coreDatasetGroup);
         coreOptRecentManage.saveOpt(coreDatasetGroup.getId(), OptConstants.OPT_RESOURCE_TYPE.DATASET, OptConstants.OPT_TYPE.NEW);

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -616,7 +616,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
         if (ObjectUtils.isNotEmpty(distinctDataList)) {
             for (String[] ele : distinctDataList) {
                 Map<String, Object> map = new LinkedHashMap<>();
-                for (int i = 0; i < ele.length; i++) {
+                for (int i = 0; i < fields.size(); i++) {
                     String val = ele[i];
                     DatasetTableFieldDTO field = fields.get(i);
                     if (desensitizationList.containsKey(field.getDataeaseName())) {

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -616,7 +616,7 @@ public List<Map<String, Object>> getFieldEnumObj(EnumValueRequest request) throw
         if (ObjectUtils.isNotEmpty(distinctDataList)) {
             for (String[] ele : distinctDataList) {
                 Map<String, Object> map = new LinkedHashMap<>();
-                for (int i = 0; i < ele.length; i++) {
+                for (int i = 0; i < fields.size(); i++) {
                     String val = ele[i];
                     DatasetTableFieldDTO field = fields.get(i);
                     if (desensitizationList.containsKey(field.getDataeaseName())) {

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -655,9 +655,7 @@ private DatasourceDTO validate(CoreDatasource coreDatasource) {
         BeanUtils.copyBean(datasourceDTO, coreDatasource);
         try {
             checkDatasourceStatus(coreDatasource);
-            if(StringUtils.isNotEmpty(lastStatus) && StringUtils.isNotEmpty(coreDatasource.getStatus()) && lastStatus.equalsIgnoreCase("Error") && coreDatasource.getStatus().equalsIgnoreCase("Success")){
-                calciteProvider.update(datasourceDTO);
-            }
+            calciteProvider.updateDsPoolAfterCheckStatus(datasourceDTO);
         } catch (Exception e) {
             coreDatasource.setStatus("Error");
             DEException.throwException(e.getMessage());

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -655,9 +655,7 @@ private DatasourceDTO validate(CoreDatasource coreDatasource) {
         BeanUtils.copyBean(datasourceDTO, coreDatasource);
         try {
             checkDatasourceStatus(coreDatasource);
-            if(StringUtils.isNotEmpty(lastStatus) && StringUtils.isNotEmpty(coreDatasource.getStatus()) && lastStatus.equalsIgnoreCase("Error") && coreDatasource.getStatus().equalsIgnoreCase("Success")){
-                calciteProvider.update(datasourceDTO);
-            }
+            calciteProvider.updateDsPoolAfterCheckStatus(datasourceDTO);
         } catch (Exception e) {
             coreDatasource.setStatus("Error");
             DEException.throwException(e.getMessage());

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -530,7 +530,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                 String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
                 String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
                 querySql = originSql + limit;
-                totalPageSql = "SELECT COUNT(*) FROM (" + originSql + ") COUNT_TEMP";
+                totalPageSql = "SELECT COUNT(*) FROM (" + SQLProvider.createQuerySQL(sqlMeta, false, false, view) + ") COUNT_TEMP";
             } else if (StringUtils.containsIgnoreCase(view.getType(), "quadrant")) {
                 Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, transFields(allFields), crossDs, dsMap);
                 yAxis.addAll(extBubble);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -530,7 +530,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                 String originSql = SQLProvider.createQuerySQL(sqlMeta, false, true, view);// 明细表强制加排序
                 String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + pageInfo.getPageSize() + " OFFSET " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() : "");
                 querySql = originSql + limit;
-                totalPageSql = "SELECT COUNT(*) FROM (" + originSql + ") COUNT_TEMP";
+                totalPageSql = "SELECT COUNT(*) FROM (" + SQLProvider.createQuerySQL(sqlMeta, false, false, view) + ") COUNT_TEMP";
             } else if (StringUtils.containsIgnoreCase(view.getType(), "quadrant")) {
                 Dimension2SQLObj.dimension2sqlObj(sqlMeta, xAxis, transFields(allFields), crossDs, dsMap);
                 yAxis.addAll(extBubble);

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -865,7 +865,7 @@ private List<ChartSeniorAssistDTO> getDynamicAssistFields(ChartViewDTO view) thr
             return list;
         }
 
-        var assistLineCfg = JsonUtil.parseObject((String) JsonUtil.toJSONString(senior.get("assistLineCfg")), ChartSeniorAssistCfgDTO.class);
+        ChartSeniorAssistCfgDTO assistLineCfg = JsonUtil.parseObject((String) JsonUtil.toJSONString(senior.get("assistLineCfg")), ChartSeniorAssistCfgDTO.class);
         if (null == assistLineCfg || !assistLineCfg.isEnable()) {
             return list;
         }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartSeniorAssistDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
@@ -15,6 +16,7 @@ public class ChartSeniorAssistDTO {
     private Long fieldId;
     private String summary;
     private String axis;
+    @JsonProperty("yAxisType")
     private String yAxisType;
     private String value;
     private String lineType;

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -865,7 +865,7 @@ private List<ChartSeniorAssistDTO> getDynamicAssistFields(ChartViewDTO view) thr
             return list;
         }
 
-        var assistLineCfg = JsonUtil.parseObject((String) JsonUtil.toJSONString(senior.get("assistLineCfg")), ChartSeniorAssistCfgDTO.class);
+        ChartSeniorAssistCfgDTO assistLineCfg = JsonUtil.parseObject((String) JsonUtil.toJSONString(senior.get("assistLineCfg")), ChartSeniorAssistCfgDTO.class);
         if (null == assistLineCfg || !assistLineCfg.isEnable()) {
             return list;
         }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartSeniorAssistDTO.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.databind.annotation.JsonSerialize;
 import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
@@ -15,6 +16,7 @@ public class ChartSeniorAssistDTO {
     private Long fieldId;
     private String summary;
     private String axis;
+    @JsonProperty("yAxisType")
     private String yAxisType;
     private String value;
     private String lineType;

File: core/core-backend/src/main/java/io/dataease/engine/trans/CustomWhere2Str.java
Patch:
@@ -113,12 +113,12 @@ public static void customWhere2sqlObj(SQLMeta meta, List<ChartFieldCustomFilterD
                         } else {
                             // 如果是时间字段过滤，当条件是等于和不等于的时候转换成between和not between
                             if (field.getDeType() == 1) {
-                                if (StringUtils.containsIgnoreCase(whereTerm, "=")) {
+                                if (StringUtils.equalsIgnoreCase(whereTerm, " = ")) {
                                     whereTerm = " BETWEEN ";
                                     // 把value类似过滤组件处理，获得start time和end time
                                     Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                                     whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));
-                                } else if (StringUtils.containsIgnoreCase(whereTerm, "<>")) {
+                                } else if (StringUtils.equalsIgnoreCase(whereTerm, " <> ")) {
                                     whereTerm = " NOT BETWEEN ";
                                     Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                                     whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));

File: core/core-backend/src/main/java/io/dataease/engine/trans/WhereTree2Str.java
Patch:
@@ -149,12 +149,12 @@ public static String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeIte
             } else {
                 // 如果是时间字段过滤，当条件是等于和不等于的时候转换成between和not between
                 if (field.getDeType() == 1) {
-                    if (StringUtils.containsIgnoreCase(whereTerm, "=")) {
+                    if (StringUtils.equalsIgnoreCase(whereTerm, " = ")) {
                         whereTerm = " BETWEEN ";
                         // 把value类似过滤组件处理，获得start time和end time
                         Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                         whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));
-                    } else if (StringUtils.containsIgnoreCase(whereTerm, "<>")) {
+                    } else if (StringUtils.equalsIgnoreCase(whereTerm, " <> ")) {
                         whereTerm = " NOT BETWEEN ";
                         Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                         whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));

File: core/core-backend/src/main/java/io/dataease/engine/trans/CustomWhere2Str.java
Patch:
@@ -113,12 +113,12 @@ public static void customWhere2sqlObj(SQLMeta meta, List<ChartFieldCustomFilterD
                         } else {
                             // 如果是时间字段过滤，当条件是等于和不等于的时候转换成between和not between
                             if (field.getDeType() == 1) {
-                                if (StringUtils.containsIgnoreCase(whereTerm, "=")) {
+                                if (StringUtils.equalsIgnoreCase(whereTerm, " = ")) {
                                     whereTerm = " BETWEEN ";
                                     // 把value类似过滤组件处理，获得start time和end time
                                     Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                                     whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));
-                                } else if (StringUtils.containsIgnoreCase(whereTerm, "<>")) {
+                                } else if (StringUtils.equalsIgnoreCase(whereTerm, " <> ")) {
                                     whereTerm = " NOT BETWEEN ";
                                     Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                                     whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));

File: core/core-backend/src/main/java/io/dataease/engine/trans/WhereTree2Str.java
Patch:
@@ -149,12 +149,12 @@ public static String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeIte
             } else {
                 // 如果是时间字段过滤，当条件是等于和不等于的时候转换成between和not between
                 if (field.getDeType() == 1) {
-                    if (StringUtils.containsIgnoreCase(whereTerm, "=")) {
+                    if (StringUtils.equalsIgnoreCase(whereTerm, " = ")) {
                         whereTerm = " BETWEEN ";
                         // 把value类似过滤组件处理，获得start time和end time
                         Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                         whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));
-                    } else if (StringUtils.containsIgnoreCase(whereTerm, "<>")) {
+                    } else if (StringUtils.equalsIgnoreCase(whereTerm, " <> ")) {
                         whereTerm = " NOT BETWEEN ";
                         Map<String, Long> stringLongMap = Utils.parseDateTimeValue(value);
                         whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, stringLongMap.get("startTime"), stringLongMap.get("endTime"));

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartSeniorAssistDTO.java
Patch:
@@ -15,7 +15,7 @@ public class ChartSeniorAssistDTO {
     private Long fieldId;
     private String summary;
     private String axis;
-    private String axisType;
+    private String yAxisType;
     private String value;
     private String lineType;
     private String color;

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartSeniorAssistDTO.java
Patch:
@@ -15,7 +15,7 @@ public class ChartSeniorAssistDTO {
     private Long fieldId;
     private String summary;
     private String axis;
-    private String axisType;
+    private String yAxisType;
     private String value;
     private String lineType;
     private String color;

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartSeniorAssistDTO.java
Patch:
@@ -15,6 +15,7 @@ public class ChartSeniorAssistDTO {
     private Long fieldId;
     private String summary;
     private String axis;
+    private String axisType;
     private String value;
     private String lineType;
     private String color;

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartSeniorAssistDTO.java
Patch:
@@ -15,6 +15,7 @@ public class ChartSeniorAssistDTO {
     private Long fieldId;
     private String summary;
     private String axis;
+    private String axisType;
     private String value;
     private String lineType;
     private String color;

File: core/core-backend/src/main/java/io/dataease/menu/manage/MenuManage.java
Patch:
@@ -36,7 +36,6 @@ public List<MenuVO> query(List<CoreMenu> coreMenus) {
         return convertTree(treeNodes);
     }
 
-    //    @Cacheable(cacheNames = CORE_MENU_CACHE, key = "'-dataease-'")
     public List<CoreMenu> coreMenus() {
         QueryWrapper<CoreMenu> wrapper = new QueryWrapper<>();
         wrapper.orderByAsc("menu_sort");

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/Target.java
Patch:
@@ -21,4 +21,5 @@ public class Target {
     private String incrementSync;
     private String incrementField;
     private String datasourceVersion;
+    private double faultToleranceRate;
 }

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/Target.java
Patch:
@@ -21,4 +21,5 @@ public class Target {
     private String incrementSync;
     private String incrementField;
     private String datasourceVersion;
+    private double faultToleranceRate;
 }

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkJumpService.java
Patch:
@@ -71,7 +71,6 @@ public List<DatasetTableFieldDTO> getTableFieldWithViewId(Long viewId) {
 
     //获取仪表板的跳转信息
     @Override
-    @XpackInteract(value = "visualizationLinkJumpService", original = true)
     public VisualizationLinkJumpBaseResponse queryVisualizationJumpInfo(Long dvId) {
         Map<String, VisualizationLinkJumpInfoDTO> resultBase = new HashMap<>();
         List<VisualizationLinkJumpDTO> resultLinkJumpList = extVisualizationLinkJumpMapper.queryWithDvId(dvId, AuthUtils.getUser().getUserId());

File: core/core-backend/src/main/java/io/dataease/visualization/server/VisualizationLinkJumpService.java
Patch:
@@ -71,7 +71,6 @@ public List<DatasetTableFieldDTO> getTableFieldWithViewId(Long viewId) {
 
     //获取仪表板的跳转信息
     @Override
-    @XpackInteract(value = "visualizationLinkJumpService", original = true)
     public VisualizationLinkJumpBaseResponse queryVisualizationJumpInfo(Long dvId) {
         Map<String, VisualizationLinkJumpInfoDTO> resultBase = new HashMap<>();
         List<VisualizationLinkJumpDTO> resultLinkJumpList = extVisualizationLinkJumpMapper.queryWithDvId(dvId, AuthUtils.getUser().getUserId());

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -217,7 +217,7 @@ private String getTableFiledSql(DatasourceRequest datasourceRequest) {
                 if (StringUtils.isEmpty(configuration.getSchema())) {
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
-                sql = String.format("SELECT COLNAME , TYPENAME , REMARKS FROM SYSCAT.COLUMNS WHERE TABSCHEMA = 'DB2INST1' AND TABNAME = 'MJQTEST' ", configuration.getSchema(), datasourceRequest.getTable());
+                sql = String.format("SELECT COLNAME , TYPENAME , REMARKS FROM SYSCAT.COLUMNS WHERE TABSCHEMA = '%s' AND TABNAME = '%s' ", configuration.getSchema(), datasourceRequest.getTable());
                 break;
             case sqlServer:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), Sqlserver.class);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -217,7 +217,7 @@ private String getTableFiledSql(DatasourceRequest datasourceRequest) {
                 if (StringUtils.isEmpty(configuration.getSchema())) {
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
-                sql = String.format("SELECT COLNAME , TYPENAME , REMARKS FROM SYSCAT.COLUMNS WHERE TABSCHEMA = 'DB2INST1' AND TABNAME = 'MJQTEST' ", configuration.getSchema(), datasourceRequest.getTable());
+                sql = String.format("SELECT COLNAME , TYPENAME , REMARKS FROM SYSCAT.COLUMNS WHERE TABSCHEMA = '%s' AND TABNAME = '%s' ", configuration.getSchema(), datasourceRequest.getTable());
                 break;
             case sqlServer:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), Sqlserver.class);

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/Target.java
Patch:
@@ -20,4 +20,5 @@ public class Target {
     private String targetProperty;
     private String incrementSync;
     private String incrementField;
+    private String datasourceVersion;
 }

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/dto/Target.java
Patch:
@@ -20,4 +20,5 @@ public class Target {
     private String targetProperty;
     private String incrementSync;
     private String incrementField;
+    private String datasourceVersion;
 }

File: core/core-backend/src/main/java/io/dataease/rmonitor/mapper/ResourceMonitorMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface ResourceMonitorMapper {
     @Select("select count(id) from core_dataset_group")
     int datasetCount();
 
-    @Select("select count(id) from data_visualization_info")
+    @Select("select count(id) from data_visualization_info where delete_flag = 0")
     int vCount();
 
     @Select("select id, name, pid, type, status from core_datasource")
@@ -27,7 +27,7 @@ public interface ResourceMonitorMapper {
     @Select("select id, name, pid, node_type from core_dataset_group")
     List<DatasetFreeResource> queryFreeDataset();
 
-    @Select("select id, name, pid, node_type, type from data_visualization_info")
+    @Select("select id, name, pid, node_type, type from data_visualization_info where delete_flag = 0")
     List<VisualFreeResource> queryFreeVusial();
 
     @Delete("delete from core_datasource")

File: core/core-backend/src/main/java/io/dataease/rmonitor/mapper/ResourceMonitorMapper.java
Patch:
@@ -18,7 +18,7 @@ public interface ResourceMonitorMapper {
     @Select("select count(id) from core_dataset_group")
     int datasetCount();
 
-    @Select("select count(id) from data_visualization_info")
+    @Select("select count(id) from data_visualization_info where delete_flag = 0")
     int vCount();
 
     @Select("select id, name, pid, type, status from core_datasource")
@@ -27,7 +27,7 @@ public interface ResourceMonitorMapper {
     @Select("select id, name, pid, node_type from core_dataset_group")
     List<DatasetFreeResource> queryFreeDataset();
 
-    @Select("select id, name, pid, node_type, type from data_visualization_info")
+    @Select("select id, name, pid, node_type, type from data_visualization_info where delete_flag = 0")
     List<VisualFreeResource> queryFreeVusial();
 
     @Delete("delete from core_datasource")

File: sdk/common/src/main/java/io/dataease/constant/XpackSettingConstants.java
Patch:
@@ -5,4 +5,6 @@ public class XpackSettingConstants {
     public static final String AUTO_CREATE_USER = "basic.autoCreateUser";
     public static final String LOG_LIVE_TIME = "basic.logLiveTime";
     public static final String Front_Time_Out = "basic.frontTimeOut";
+    public static final String PLATFORM_OID = "basic.platformOid";
+    public static final String PLATFORM_RID = "basic.platformRid";
 }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -39,7 +39,7 @@ public static String getContextPath() {
             "/wecom/token",
             "/sysParameter/requestTimeOut",
             "/setting/authentication/status",
-            "/appearance/query",
+            "/sysParameter/ui",
             "/");
 
     public static boolean match(String requestURI) {

File: sdk/common/src/main/java/io/dataease/constant/XpackSettingConstants.java
Patch:
@@ -5,4 +5,6 @@ public class XpackSettingConstants {
     public static final String AUTO_CREATE_USER = "basic.autoCreateUser";
     public static final String LOG_LIVE_TIME = "basic.logLiveTime";
     public static final String Front_Time_Out = "basic.frontTimeOut";
+    public static final String PLATFORM_OID = "basic.platformOid";
+    public static final String PLATFORM_RID = "basic.platformRid";
 }

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -39,7 +39,7 @@ public static String getContextPath() {
             "/wecom/token",
             "/sysParameter/requestTimeOut",
             "/setting/authentication/status",
-            "/appearance/query",
+            "/sysParameter/ui",
             "/");
 
     public static boolean match(String requestURI) {

File: core/core-backend/src/main/java/io/dataease/engine/utils/Utils.java
Patch:
@@ -213,7 +213,7 @@ public static boolean matchFunction(String func, String originField) {
     }
 
     public static boolean isNeedOrder(List<String> dsList) {
-        String[] list = {"sqlServer", "db2"};
+        String[] list = {"sqlServer", "db2", "impala"};
         List<String> strings = Arrays.asList(list);
         List<String> collect = strings.stream().filter(dsList::contains).collect(Collectors.toList());
         return ObjectUtils.isNotEmpty(collect);

File: core/core-backend/src/main/java/io/dataease/engine/utils/Utils.java
Patch:
@@ -213,7 +213,7 @@ public static boolean matchFunction(String func, String originField) {
     }
 
     public static boolean isNeedOrder(List<String> dsList) {
-        String[] list = {"sqlServer", "db2"};
+        String[] list = {"sqlServer", "db2", "impala"};
         List<String> strings = Arrays.asList(list);
         List<String> collect = strings.stream().filter(dsList::contains).collect(Collectors.toList());
         return ObjectUtils.isNotEmpty(collect);

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/user/vo/UserFormVO.java
Patch:
@@ -39,4 +39,7 @@ public class UserFormVO implements Serializable {
 
     @Schema(description = "IP")
     private String ip;
+
+    @Schema(description = "模式")
+    private String model;
 }

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/user/vo/UserFormVO.java
Patch:
@@ -39,4 +39,7 @@ public class UserFormVO implements Serializable {
 
     @Schema(description = "IP")
     private String ip;
+
+    @Schema(description = "模式")
+    private String model;
 }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -174,7 +174,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         Map<String, Object> mapAttr = view.getCustomAttr();
         Map<String, Object> mapSize = (Map<String, Object>) mapAttr.get("basicStyle");
         if (StringUtils.equalsIgnoreCase(view.getType(), "table-info") && table.getMode() == 0) {
-            if (StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page") && !chartExtRequest.getExcelExportFlag()) {
+            if (StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page") && !view.getIsExcelExport()) {
                 if (chartExtRequest.getGoPage() == null) {
                     chartExtRequest.setGoPage(1L);
                 }
@@ -190,7 +190,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                 if (StringUtils.equalsIgnoreCase(view.getResultMode(), "custom")) {
                     chartExtRequest.setGoPage(1L);
                     chartExtRequest.setPageSize(view.getResultCount().longValue());
-                } else if (!chartExtRequest.getExcelExportFlag()) {
+                } else if (!view.getIsExcelExport()) {
                     chartExtRequest.setGoPage(null);
                     chartExtRequest.setPageSize(null);
                 }

File: core/core-backend/src/main/java/io/dataease/chart/manage/ChartDataManage.java
Patch:
@@ -174,7 +174,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
         Map<String, Object> mapAttr = view.getCustomAttr();
         Map<String, Object> mapSize = (Map<String, Object>) mapAttr.get("basicStyle");
         if (StringUtils.equalsIgnoreCase(view.getType(), "table-info") && table.getMode() == 0) {
-            if (StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page") && !chartExtRequest.getExcelExportFlag()) {
+            if (StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page") && !view.getIsExcelExport()) {
                 if (chartExtRequest.getGoPage() == null) {
                     chartExtRequest.setGoPage(1L);
                 }
@@ -190,7 +190,7 @@ public ChartViewDTO calcData(ChartViewDTO view) throws Exception {
                 if (StringUtils.equalsIgnoreCase(view.getResultMode(), "custom")) {
                     chartExtRequest.setGoPage(1L);
                     chartExtRequest.setPageSize(view.getResultCount().longValue());
-                } else if (!chartExtRequest.getExcelExportFlag()) {
+                } else if (!view.getIsExcelExport()) {
                     chartExtRequest.setGoPage(null);
                     chartExtRequest.setPageSize(null);
                 }

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/datasource/api/SyncDatasourceApi.java
Patch:
@@ -26,11 +26,9 @@
 @DeApiPath(value = "/sync/datasource", rt = SYNC_DATASOURCE)
 public interface SyncDatasourceApi {
 
-    @DePermit("m:read")
     @PostMapping("/source/pager/{goPage}/{pageSize}")
     IPage<SyncDatasourceVO> sourcePager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);
 
-    @DePermit("m:read")
     @PostMapping("/target/pager/{goPage}/{pageSize}")
     IPage<SyncDatasourceVO> targetPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);
 
@@ -52,7 +50,6 @@ public interface SyncDatasourceApi {
     @PostMapping("/getSchema")
     List<String> getSchema(@RequestBody SyncDatasourceDTO dataSourceDTO) throws DEException;
 
-    @DePermit({"#p0+':manage'"})
     @GetMapping("/validate/{datasourceId}")
     SyncDatasourceDTO validate(@PathVariable("datasourceId") String datasourceId) throws DEException;
 

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/api/TaskLogApi.java
Patch:
@@ -7,13 +7,13 @@
 import io.dataease.request.BaseGridRequest;
 import org.springframework.web.bind.annotation.*;
 
-import static io.dataease.constant.AuthResourceEnum.TASK_LOG;
+import static io.dataease.constant.AuthResourceEnum.TASK;
 
 /**
  * @author fit2cloud
  * @date 2023/12/4 12:43
  **/
-@DeApiPath(value = "/sync/task/log", rt = TASK_LOG)
+@DeApiPath(value = "/sync/task/log", rt = TASK)
 public interface TaskLogApi {
     @PostMapping("/pager/{goPage}/{pageSize}")
     IPage<TaskLogVO> pager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);

File: sdk/common/src/main/java/io/dataease/constant/AuthResourceEnum.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum AuthResourceEnum {
 
-    PANEL(2, 1), SCREEN(3, 2), DATASET(5, 3), DATASOURCE(6, 4), SYSTEM(7, 0), USER(8, 5), ROLE(8, 6),  ORG(9, 7),  SYNC_DATASOURCE(10, 8),  TASK(11, 9),TASK_LOG(12, 10),  SUMMARY(13, 11);
+    PANEL(2, 1), SCREEN(3, 2), DATASET(5, 3), DATASOURCE(6, 4), SYSTEM(7, 0), USER(8, 5), ROLE(8, 6),  ORG(9, 7),  SYNC_DATASOURCE(23, 8),  TASK(24, 9), SUMMARY(22, 10);
 
     private long menuId;
 

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/datasource/api/SyncDatasourceApi.java
Patch:
@@ -26,11 +26,9 @@
 @DeApiPath(value = "/sync/datasource", rt = SYNC_DATASOURCE)
 public interface SyncDatasourceApi {
 
-    @DePermit("m:read")
     @PostMapping("/source/pager/{goPage}/{pageSize}")
     IPage<SyncDatasourceVO> sourcePager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);
 
-    @DePermit("m:read")
     @PostMapping("/target/pager/{goPage}/{pageSize}")
     IPage<SyncDatasourceVO> targetPager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);
 
@@ -52,7 +50,6 @@ public interface SyncDatasourceApi {
     @PostMapping("/getSchema")
     List<String> getSchema(@RequestBody SyncDatasourceDTO dataSourceDTO) throws DEException;
 
-    @DePermit({"#p0+':manage'"})
     @GetMapping("/validate/{datasourceId}")
     SyncDatasourceDTO validate(@PathVariable("datasourceId") String datasourceId) throws DEException;
 

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/task/api/TaskLogApi.java
Patch:
@@ -7,13 +7,13 @@
 import io.dataease.request.BaseGridRequest;
 import org.springframework.web.bind.annotation.*;
 
-import static io.dataease.constant.AuthResourceEnum.TASK_LOG;
+import static io.dataease.constant.AuthResourceEnum.TASK;
 
 /**
  * @author fit2cloud
  * @date 2023/12/4 12:43
  **/
-@DeApiPath(value = "/sync/task/log", rt = TASK_LOG)
+@DeApiPath(value = "/sync/task/log", rt = TASK)
 public interface TaskLogApi {
     @PostMapping("/pager/{goPage}/{pageSize}")
     IPage<TaskLogVO> pager(@PathVariable("goPage") int goPage, @PathVariable("pageSize") int pageSize, @RequestBody BaseGridRequest request);

File: sdk/common/src/main/java/io/dataease/constant/AuthResourceEnum.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum AuthResourceEnum {
 
-    PANEL(2, 1), SCREEN(3, 2), DATASET(5, 3), DATASOURCE(6, 4), SYSTEM(7, 0), USER(8, 5), ROLE(8, 6),  ORG(9, 7),  SYNC_DATASOURCE(10, 8),  TASK(11, 9),TASK_LOG(12, 10),  SUMMARY(13, 11);
+    PANEL(2, 1), SCREEN(3, 2), DATASET(5, 3), DATASOURCE(6, 4), SYSTEM(7, 0), USER(8, 5), ROLE(8, 6),  ORG(9, 7),  SYNC_DATASOURCE(23, 8),  TASK(24, 9), SUMMARY(22, 10);
 
     private long menuId;
 

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -73,7 +73,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_INT_FORMAT = "DECIMAL(18,0)";
 
-    public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
+    public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(26,8)";
 
     public static final String WHERE_VALUE_NULL = "(NULL,'')";
 

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -73,7 +73,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_INT_FORMAT = "DECIMAL(18,0)";
 
-    public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
+    public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(26,8)";
 
     public static final String WHERE_VALUE_NULL = "(NULL,'')";
 

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/org/dto/OrgCreator.java
Patch:
@@ -12,6 +12,8 @@ public class OrgCreator implements Serializable {
 
     @Serial
     private static final long serialVersionUID = -4246980891732805368L;
+
+    private Long id;
     @Schema(description = "组织名称")
     private String name;
     @Schema(description = "上级ID")

File: sdk/api/api-permissions/src/main/java/io/dataease/api/permissions/org/dto/OrgCreator.java
Patch:
@@ -12,6 +12,8 @@ public class OrgCreator implements Serializable {
 
     @Serial
     private static final long serialVersionUID = -4246980891732805368L;
+
+    private Long id;
     @Schema(description = "组织名称")
     private String name;
     @Schema(description = "上级ID")

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,7 +71,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
+    public static final String DEFAULT_INT_FORMAT = "DECIMAL(18,0)";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
 

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,7 +71,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
+    public static final String DEFAULT_INT_FORMAT = "DECIMAL(18,0)";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -60,7 +60,7 @@ public String insertSql(String name, List<String[]> dataList, int page, int page
                 if (StringUtils.isEmpty(strings[i])) {
                     strings1[i] = null;
                 } else {
-                    strings1[i] = strings[i].replace("'", "\\'");
+                    strings1[i] = strings[i].replace("\\", "\\\\").replace("'", "\\'");
                 }
             }
             values.append("('").append(String.join("','", Arrays.asList(strings1)))

File: core/core-backend/src/main/java/io/dataease/datasource/provider/MysqlEngineProvider.java
Patch:
@@ -60,7 +60,7 @@ public String insertSql(String name, List<String[]> dataList, int page, int page
                 if (StringUtils.isEmpty(strings[i])) {
                     strings1[i] = null;
                 } else {
-                    strings1[i] = strings[i].replace("'", "\\'");
+                    strings1[i] = strings[i].replace("\\", "\\\\").replace("'", "\\'");
                 }
             }
             values.append("('").append(String.join("','", Arrays.asList(strings1)))

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -311,6 +311,8 @@ public DatasourceDTO save(DatasourceDTO dataSourceDTO) throws DEException {
         return dataSourceDTO;
     }
 
+    @Transactional
+    @Override
     public DatasourceDTO update(DatasourceDTO dataSourceDTO) throws DEException {
         Long pk = null;
         if (ObjectUtils.isEmpty(pk = dataSourceDTO.getId())) {

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/DatasourceApi.java
Patch:
@@ -34,6 +34,9 @@ public interface DatasourceApi {
     @PostMapping("/save")
     DatasourceDTO save(@RequestBody DatasourceDTO dataSourceDTO) throws DEException;
 
+    @PostMapping("/update")
+    DatasourceDTO update(@RequestBody DatasourceDTO dataSourceDTO) throws DEException;
+
 
     @PostMapping("/move")
     DatasourceDTO move(@RequestBody DatasourceDTO dataSourceDTO) throws DEException;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -144,7 +144,7 @@ public String checkStatus(DatasourceRequest datasourceRequest) throws Exception
         String querySql = getTablesSql(datasourceRequest).get(0);
         try (Connection con = getConnection(datasourceRequest.getDatasource()); Statement statement = getStatement(con, 30); ResultSet resultSet = statement.executeQuery(querySql)) {
         } catch (Exception e) {
-            DEException.throwException(e.getMessage());
+            throw e;
         }
         return "Success";
     }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -144,7 +144,7 @@ public String checkStatus(DatasourceRequest datasourceRequest) throws Exception
         String querySql = getTablesSql(datasourceRequest).get(0);
         try (Connection con = getConnection(datasourceRequest.getDatasource()); Statement statement = getStatement(con, 30); ResultSet resultSet = statement.executeQuery(querySql)) {
         } catch (Exception e) {
-            DEException.throwException(e.getMessage());
+            throw e;
         }
         return "Success";
     }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -453,6 +453,7 @@ private List<String> getTablesSql(DatasourceRequest datasourceRequest) throws DE
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
                 tableSqls.add("select table_name, owner, comments from all_tab_comments where owner='" + configuration.getSchema() + "' AND table_type = 'TABLE'");
+                tableSqls.add("select table_name, owner, comments from all_tab_comments where owner='" + configuration.getSchema() + "' AND table_type = 'VIEW'");
                 break;
             case db2:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), Db2.class);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -453,6 +453,7 @@ private List<String> getTablesSql(DatasourceRequest datasourceRequest) throws DE
                     DEException.throwException(Translator.get("i18n_schema_is_empty"));
                 }
                 tableSqls.add("select table_name, owner, comments from all_tab_comments where owner='" + configuration.getSchema() + "' AND table_type = 'TABLE'");
+                tableSqls.add("select table_name, owner, comments from all_tab_comments where owner='" + configuration.getSchema() + "' AND table_type = 'VIEW'");
                 break;
             case db2:
                 configuration = JsonUtil.parseObject(datasourceRequest.getDatasource().getConfiguration(), Db2.class);

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/datasource/api/SyncDatasourceApi.java
Patch:
@@ -56,8 +56,8 @@ public interface SyncDatasourceApi {
     @GetMapping("/validate/{datasourceId}")
     SyncDatasourceDTO validate(@PathVariable("datasourceId") String datasourceId) throws DEException;
 
-    @PostMapping("/latestUse")
-    List<String> latestUse();
+    @PostMapping("/latestUse/{sourceType}")
+    List<String> latestUse(@PathVariable("sourceType") String sourceType);
 
     @GetMapping("/get/{datasourceId}")
     SyncDatasourceDTO get(@PathVariable("datasourceId") String datasourceId) throws DEException;

File: sdk/api/api-sync/src/main/java/io/dataease/api/sync/datasource/api/SyncDatasourceApi.java
Patch:
@@ -56,8 +56,8 @@ public interface SyncDatasourceApi {
     @GetMapping("/validate/{datasourceId}")
     SyncDatasourceDTO validate(@PathVariable("datasourceId") String datasourceId) throws DEException;
 
-    @PostMapping("/latestUse")
-    List<String> latestUse();
+    @PostMapping("/latestUse/{sourceType}")
+    List<String> latestUse(@PathVariable("sourceType") String sourceType);
 
     @GetMapping("/get/{datasourceId}")
     SyncDatasourceDTO get(@PathVariable("datasourceId") String datasourceId) throws DEException;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -16,8 +16,8 @@
 import io.dataease.utils.HttpClientConfig;
 import io.dataease.utils.HttpClientUtil;
 import io.dataease.utils.JsonUtil;
-import net.minidev.json.JSONArray;
 import org.apache.commons.lang3.StringUtils;
+import org.json.simple.JSONArray;
 import org.springframework.util.CollectionUtils;
 import org.springframework.util.ObjectUtils;
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -16,8 +16,8 @@
 import io.dataease.utils.HttpClientConfig;
 import io.dataease.utils.HttpClientUtil;
 import io.dataease.utils.JsonUtil;
-import net.minidev.json.JSONArray;
 import org.apache.commons.lang3.StringUtils;
+import org.json.simple.JSONArray;
 import org.springframework.util.CollectionUtils;
 import org.springframework.util.ObjectUtils;
 

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -6,6 +6,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
 
+import java.net.URLDecoder;
 import java.util.Arrays;
 import java.util.List;
 
@@ -25,7 +26,7 @@ public String getJdbc() {
                     .replace("DATABASE", getDataBase().trim());
         } else {
             for (String illegalParameter : illegalParameters) {
-                if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {
+                if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase()) || URLDecoder.decode(getExtraParams()).contains(illegalParameter.toLowerCase())) {
                     DEException.throwException("Illegal parameter: " + illegalParameter);
                 }
             }

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -6,6 +6,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
 
+import java.net.URLDecoder;
 import java.util.Arrays;
 import java.util.List;
 
@@ -25,7 +26,7 @@ public String getJdbc() {
                     .replace("DATABASE", getDataBase().trim());
         } else {
             for (String illegalParameter : illegalParameters) {
-                if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {
+                if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase()) || URLDecoder.decode(getExtraParams()).contains(illegalParameter.toLowerCase())) {
                     DEException.throwException("Illegal parameter: " + illegalParameter);
                 }
             }

File: core/core-backend/src/main/java/io/dataease/MybatisPlusGenerator.java
Patch:
@@ -21,11 +21,11 @@ public class MybatisPlusGenerator {
     /**
      * 业务模块例如datasource,dataset,panel等
      */
-    private static final String busi = "visualization";
+    private static final String busi = "template";
     /**
      * 这是要生成代码的表名称
      */
-    private static final String TABLE_NAME = "visualization_watermark";
+    private static final String TABLE_NAME = "visualization_template";
 
     /**
      * 下面两个配置基本上不用动

File: core/core-backend/src/main/java/io/dataease/template/dao/auto/mapper/VisualizationTemplateMapper.java
Patch:
@@ -6,11 +6,11 @@
 
 /**
  * <p>
- * 仪表板模板表 Mapper 接口
+ *  Mapper 接口
  * </p>
  *
  * @author fit2cloud
- * @since 2023-11-06
+ * @since 2024-01-16
  */
 @Mapper
 public interface VisualizationTemplateMapper extends BaseMapper<VisualizationTemplate> {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -267,9 +267,6 @@ public static List<String[]> csvData(BufferedReader reader, boolean isPreview, i
             int num = 1;
             String line;
             while ((line = reader.readLine()) != null) {
-                if (isPreview && num > 1000) {
-                    break;
-                }
                 String str;
                 line += ",";
                 Pattern pCells = Pattern.compile("(\"[^\"]*(\"{2})*[^\"]*\")*[^,]*,");

File: sdk/api/api-base/src/main/java/io/dataease/api/visualization/VisualizationBackgroundApi.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.api.visualization.request.VisualizationBackgroundRequest;
 import io.dataease.api.visualization.vo.VisualizationBackgroundVO;
+import io.swagger.v3.oas.annotations.Operation;
 import io.swagger.v3.oas.annotations.tags.Tag;
 import org.springframework.web.bind.annotation.GetMapping;
 
@@ -18,5 +19,6 @@
 @ApiSupport(order = 997)
 public interface VisualizationBackgroundApi {
     @GetMapping("/findAll")
+    @Operation(summary = "背景信息查询")
     Map<String, List<VisualizationBackgroundVO>> findAll();
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -267,9 +267,6 @@ public static List<String[]> csvData(BufferedReader reader, boolean isPreview, i
             int num = 1;
             String line;
             while ((line = reader.readLine()) != null) {
-                if (isPreview && num > 1000) {
-                    break;
-                }
                 String str;
                 line += ",";
                 Pattern pCells = Pattern.compile("(\"[^\"]*(\"{2})*[^\"]*\")*[^,]*,");

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -88,7 +88,6 @@ public DatasetGroupInfoDTO save(DatasetGroupInfoDTO datasetGroupInfoDTO, boolean
                 CoreDatasetGroup coreDatasetGroup = coreDatasetGroupMapper.selectById(datasetGroupInfoDTO.getId());
                 datasetGroupInfoDTO.setPid(coreDatasetGroup.getPid());
             }
-            checkName(datasetGroupInfoDTO);
             datasetGroupInfoDTO.setUpdateBy(AuthUtils.getUser().getUserId() + "");
             datasetGroupInfoDTO.setLastUpdateTime(System.currentTimeMillis());
             if (StringUtils.equalsIgnoreCase(datasetGroupInfoDTO.getNodeType(), leafType)) {

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetGroupManage.java
Patch:
@@ -88,7 +88,6 @@ public DatasetGroupInfoDTO save(DatasetGroupInfoDTO datasetGroupInfoDTO, boolean
                 CoreDatasetGroup coreDatasetGroup = coreDatasetGroupMapper.selectById(datasetGroupInfoDTO.getId());
                 datasetGroupInfoDTO.setPid(coreDatasetGroup.getPid());
             }
-            checkName(datasetGroupInfoDTO);
             datasetGroupInfoDTO.setUpdateBy(AuthUtils.getUser().getUserId() + "");
             datasetGroupInfoDTO.setLastUpdateTime(System.currentTimeMillis());
             if (StringUtils.equalsIgnoreCase(datasetGroupInfoDTO.getNodeType(), leafType)) {

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -27,7 +27,7 @@ public static boolean match(String requestURI) {
             requestURI = requestURI.replaceFirst(AuthConstant.DE_API_PREFIX, "");
         }
         return WHITE_PATH.contains(requestURI)
-                || StringUtils.endsWithAny(requestURI, ".ico", "js", ".css", "svg", "png", "jpg", "js.map", ".otf", ".ttf")
+                || StringUtils.endsWithAny(requestURI, ".ico", "js", ".css", "svg", "png", "jpg", "js.map", ".otf", ".ttf", ".woff2")
                 || StringUtils.startsWithAny(requestURI, "data:image")
                 || StringUtils.startsWithAny(requestURI, "/login/platformLogin/")
                 || StringUtils.startsWithAny(requestURI, "/static-resource/")

File: sdk/common/src/main/java/io/dataease/utils/WhitelistUtils.java
Patch:
@@ -27,7 +27,7 @@ public static boolean match(String requestURI) {
             requestURI = requestURI.replaceFirst(AuthConstant.DE_API_PREFIX, "");
         }
         return WHITE_PATH.contains(requestURI)
-                || StringUtils.endsWithAny(requestURI, ".ico", "js", ".css", "svg", "png", "jpg", "js.map", ".otf", ".ttf")
+                || StringUtils.endsWithAny(requestURI, ".ico", "js", ".css", "svg", "png", "jpg", "js.map", ".otf", ".ttf", ".woff2")
                 || StringUtils.startsWithAny(requestURI, "data:image")
                 || StringUtils.startsWithAny(requestURI, "/login/platformLogin/")
                 || StringUtils.startsWithAny(requestURI, "/static-resource/")

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -87,7 +87,7 @@ public class SQLConstants {
 
     public static final String WHERE_BETWEEN = "'%s' AND '%s'";
 
-    public static final String WHERE_CALUE_BETWEEN = "%s AND %s";
+    public static final String WHERE_VALUE_BETWEEN = "%s AND %s";
 
     public static final String BRACKETS = "(%s)";
 

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -107,7 +107,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                         if (request.getDatasetTableField().getDeExtractType() == 2
                                 || request.getDatasetTableField().getDeExtractType() == 3
                                 || request.getDatasetTableField().getDeExtractType() == 4) {
-                            whereValue = String.format(SQLConstants.WHERE_CALUE_BETWEEN, value.get(0), value.get(1));
+                            whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, value.get(0), value.get(1));
                         } else {
                             whereName = String.format(SQLConstants.UNIX_TIMESTAMP, whereName);
                             whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -87,7 +87,7 @@ public class SQLConstants {
 
     public static final String WHERE_BETWEEN = "'%s' AND '%s'";
 
-    public static final String WHERE_CALUE_BETWEEN = "%s AND %s";
+    public static final String WHERE_VALUE_BETWEEN = "%s AND %s";
 
     public static final String BRACKETS = "(%s)";
 

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -107,7 +107,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                         if (request.getDatasetTableField().getDeExtractType() == 2
                                 || request.getDatasetTableField().getDeExtractType() == 3
                                 || request.getDatasetTableField().getDeExtractType() == 4) {
-                            whereValue = String.format(SQLConstants.WHERE_CALUE_BETWEEN, value.get(0), value.get(1));
+                            whereValue = String.format(SQLConstants.WHERE_VALUE_BETWEEN, value.get(0), value.get(1));
                         } else {
                             whereName = String.format(SQLConstants.UNIX_TIMESTAMP, whereName);
                             whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -87,6 +87,8 @@ public class SQLConstants {
 
     public static final String WHERE_BETWEEN = "'%s' AND '%s'";
 
+    public static final String WHERE_CALUE_BETWEEN = "%s AND %s";
+
     public static final String BRACKETS = "(%s)";
 
     public static final String ROUND = "ROUND(%s,%s)";

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -107,7 +107,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                         if (request.getDatasetTableField().getDeExtractType() == 2
                                 || request.getDatasetTableField().getDeExtractType() == 3
                                 || request.getDatasetTableField().getDeExtractType() == 4) {
-                            whereValue = String.format(SQLConstants.WHERE_BETWEEN, value.get(0), value.get(1));
+                            whereValue = String.format(SQLConstants.WHERE_CALUE_BETWEEN, value.get(0), value.get(1));
                         } else {
                             whereName = String.format(SQLConstants.UNIX_TIMESTAMP, whereName);
                             whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -87,6 +87,8 @@ public class SQLConstants {
 
     public static final String WHERE_BETWEEN = "'%s' AND '%s'";
 
+    public static final String WHERE_CALUE_BETWEEN = "%s AND %s";
+
     public static final String BRACKETS = "(%s)";
 
     public static final String ROUND = "ROUND(%s,%s)";

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -107,7 +107,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                         if (request.getDatasetTableField().getDeExtractType() == 2
                                 || request.getDatasetTableField().getDeExtractType() == 3
                                 || request.getDatasetTableField().getDeExtractType() == 4) {
-                            whereValue = String.format(SQLConstants.WHERE_BETWEEN, value.get(0), value.get(1));
+                            whereValue = String.format(SQLConstants.WHERE_CALUE_BETWEEN, value.get(0), value.get(1));
                         } else {
                             whereName = String.format(SQLConstants.UNIX_TIMESTAMP, whereName);
                             whereValue = String.format(SQLConstants.WHERE_BETWEEN, Long.parseLong(value.get(0)), Long.parseLong(value.get(1)));

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -64,7 +64,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                             whereName = String.format(SQLConstants.DE_CAST_DATE_FORMAT, originName, StringUtils.isEmpty(field.getDateFormat()) ? SQLConstants.DEFAULT_DATE_FORMAT : field.getDateFormat(), date_format);
                         }
                         if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
-                            String cast = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
+                            whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
                         }
                         if (field.getDeExtractType() == 1) {
                             // 此处获取标准格式的日期

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -64,7 +64,7 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                             whereName = String.format(SQLConstants.DE_CAST_DATE_FORMAT, originName, StringUtils.isEmpty(field.getDateFormat()) ? SQLConstants.DEFAULT_DATE_FORMAT : field.getDateFormat(), date_format);
                         }
                         if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
-                            String cast = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
+                            whereName = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
                         }
                         if (field.getDeExtractType() == 1) {
                             // 此处获取标准格式的日期

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -65,8 +65,6 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                         }
                         if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                             String cast = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
-                            // 此处获取标准格式的日期
-                            whereName = String.format(SQLConstants.FROM_UNIXTIME, cast, date_format);
                         }
                         if (field.getDeExtractType() == 1) {
                             // 此处获取标准格式的日期

File: core/core-backend/src/main/java/io/dataease/engine/trans/ExtWhere2Str.java
Patch:
@@ -65,8 +65,6 @@ public static void extWhere2sqlOjb(SQLMeta meta, List<ChartExtFilterDTO> fields,
                         }
                         if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                             String cast = String.format(SQLConstants.CAST, originName, SQLConstants.DEFAULT_INT_FORMAT);
-                            // 此处获取标准格式的日期
-                            whereName = String.format(SQLConstants.FROM_UNIXTIME, cast, date_format);
                         }
                         if (field.getDeExtractType() == 1) {
                             // 此处获取标准格式的日期

File: core/core-backend/src/main/java/io/dataease/template/service/TemplateManageService.java
Patch:
@@ -17,7 +17,6 @@
 import io.dataease.utils.AuthUtils;
 import io.dataease.utils.BeanUtils;
 import io.dataease.visualization.server.StaticResourceServer;
-import io.dataease.xpack.base.settings.dao.entity.BaseSetting;
 import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.transaction.annotation.Transactional;

File: core/core-backend/src/main/java/io/dataease/template/service/TemplateManageService.java
Patch:
@@ -17,7 +17,6 @@
 import io.dataease.utils.AuthUtils;
 import io.dataease.utils.BeanUtils;
 import io.dataease.visualization.server.StaticResourceServer;
-import io.dataease.xpack.base.settings.dao.entity.BaseSetting;
 import jakarta.annotation.Resource;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.transaction.annotation.Transactional;

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -302,6 +302,9 @@ private String cellType(String value) {
             sdf.parse(value);
             return "DATETIME";
         } catch (Exception e1) {
+            if(value.length()> 19){
+                return "TEXT";
+            }
             try {
                 Double d = Double.valueOf(value);
                 double eps = 1e-10;

File: core/core-backend/src/main/java/io/dataease/job/sechedule/DeScheduleJob.java
Patch:
@@ -18,7 +18,7 @@ public void execute(JobExecutionContext context) throws JobExecutionException {
         this.expression = jobDataMap.getString("expression");
         this.taskId = jobDataMap.getLong("taskId");
         this.updateType = jobDataMap.getString("updateType");
-        LogUtil.info(jobKey.getGroup() + " Running: " + datasetTableId);
+        LogUtil.info(jobKey.getName() + " Running: " + datasetTableId);
         LogUtil.info("CronExpression: " + expression);
         businessExecute(context);
     }

File: core/core-backend/src/main/java/io/dataease/job/sechedule/DeScheduleJob.java
Patch:
@@ -18,7 +18,7 @@ public void execute(JobExecutionContext context) throws JobExecutionException {
         this.expression = jobDataMap.getString("expression");
         this.taskId = jobDataMap.getLong("taskId");
         this.updateType = jobDataMap.getString("updateType");
-        LogUtil.info(jobKey.getGroup() + " Running: " + datasetTableId);
+        LogUtil.info(jobKey.getName() + " Running: " + datasetTableId);
         LogUtil.info("CronExpression: " + expression);
         businessExecute(context);
     }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -302,6 +302,9 @@ private String cellType(String value) {
             sdf.parse(value);
             return "DATETIME";
         } catch (Exception e1) {
+            if(value.length()> 19){
+                return "TEXT";
+            }
             try {
                 Double d = Double.valueOf(value);
                 double eps = 1e-10;

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -193,12 +193,13 @@ public List<DatasetTableFieldDTO> listFieldsWithPermissions(Long id) {
         List<DatasetTableFieldDTO> fields = selectByDatasetGroupId(id);
         Map<String, ColumnPermissionItem> desensitizationList = new HashMap<>();
         Long userId = AuthUtils.getUser() == null ? null : AuthUtils.getUser().getUserId();
-        return permissionManage
+        List<DatasetTableFieldDTO> tmp = permissionManage
                 .filterColumnPermissions(fields, desensitizationList, id, userId)
                 .stream()
-                .filter(o -> !desensitizationList.containsKey(o.getDataeaseName()))
                 .sorted(Comparator.comparing(DatasetTableFieldDTO::getGroupType))
                 .toList();
+        tmp.forEach(ele -> ele.setDesensitized(desensitizationList.containsKey(ele.getDataeaseName())));
+        return tmp;
     }
 
 

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetTableFieldManage.java
Patch:
@@ -193,12 +193,13 @@ public List<DatasetTableFieldDTO> listFieldsWithPermissions(Long id) {
         List<DatasetTableFieldDTO> fields = selectByDatasetGroupId(id);
         Map<String, ColumnPermissionItem> desensitizationList = new HashMap<>();
         Long userId = AuthUtils.getUser() == null ? null : AuthUtils.getUser().getUserId();
-        return permissionManage
+        List<DatasetTableFieldDTO> tmp = permissionManage
                 .filterColumnPermissions(fields, desensitizationList, id, userId)
                 .stream()
-                .filter(o -> !desensitizationList.containsKey(o.getDataeaseName()))
                 .sorted(Comparator.comparing(DatasetTableFieldDTO::getGroupType))
                 .toList();
+        tmp.forEach(ele -> ele.setDesensitized(desensitizationList.containsKey(ele.getDataeaseName())));
+        return tmp;
     }
 
 

File: sdk/api/api-base/src/main/java/io/dataease/api/dataset/DatasetTreeApi.java
Patch:
@@ -72,4 +72,7 @@ public interface DatasetTreeApi {
 
     @PostMapping("getSqlParams")
     List<SqlVariableDetails> getSqlParams(@RequestBody List<Long> ids) throws Exception;
+
+    @PostMapping("detailWithPerm")
+    List<DatasetTableDTO> detailWithPerm(@RequestBody List<Long> ids) throws Exception;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/dataset/DatasetTreeApi.java
Patch:
@@ -72,4 +72,7 @@ public interface DatasetTreeApi {
 
     @PostMapping("getSqlParams")
     List<SqlVariableDetails> getSqlParams(@RequestBody List<Long> ids) throws Exception;
+
+    @PostMapping("detailWithPerm")
+    List<DatasetTableDTO> detailWithPerm(@RequestBody List<Long> ids) throws Exception;
 }

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1106,11 +1106,11 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() >= columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
+                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
+                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
                     }
                     break;
                 default:

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1106,11 +1106,11 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() >= columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
+                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
+                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
                     }
                     break;
                 default:

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -1,11 +1,13 @@
 package io.dataease.engine.utils;
 
+import java.util.Optional;
+
 /**
  * @Author Junjun
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return value.replaceAll("'", "\\\\'");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "\\\\'");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/engine/utils/SQLUtils.java
Patch:
@@ -1,11 +1,13 @@
 package io.dataease.engine.utils;
 
+import java.util.Optional;
+
 /**
  * @Author Junjun
  */
 public class SQLUtils {
     public static String transKeyword(String value) {
-        return value.replaceAll("'", "\\\\'");
+        return Optional.ofNullable(value).orElse("").replaceAll("'", "\\\\'");
     }
 
     public static String buildOriginPreviewSql(String sql, int limit, int offset) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -351,7 +351,7 @@ public void invokeHead(Map<Integer, ReadCellData<?>> headMap, AnalysisContext co
                 ReadCellData<?> cellData = headMap.get(key);
                 String value = cellData.getStringValue();
                 if (StringUtils.isEmpty(value)) {
-                    DEException.throwException(context.readSheetHolder().getSheetName() + ", 首行行中不允许有空单元格！");
+                    continue;
                 }
                 headerKey.add(key);
                 header.add(value);

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -755,7 +755,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                         }
                     }
                 }
-                if (CollectionUtils.isEmpty(excelSheetDataList)) {
+                if (CollectionUtils.isEmpty(excelSheetDataList) || excelSheetDataList.size() != datasetTableDTOS.size()) {
                     DEException.throwException("上传文件与源文件不一致，请检查文件!");
                 }
                 excelFileData.setSheets(excelSheetDataList);

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ExcelUtils.java
Patch:
@@ -351,7 +351,7 @@ public void invokeHead(Map<Integer, ReadCellData<?>> headMap, AnalysisContext co
                 ReadCellData<?> cellData = headMap.get(key);
                 String value = cellData.getStringValue();
                 if (StringUtils.isEmpty(value)) {
-                    DEException.throwException(context.readSheetHolder().getSheetName() + ", 首行行中不允许有空单元格！");
+                    continue;
                 }
                 headerKey.add(key);
                 header.add(value);

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -755,7 +755,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
                         }
                     }
                 }
-                if (CollectionUtils.isEmpty(excelSheetDataList)) {
+                if (CollectionUtils.isEmpty(excelSheetDataList) || excelSheetDataList.size() != datasetTableDTOS.size()) {
                     DEException.throwException("上传文件与源文件不一致，请检查文件!");
                 }
                 excelFileData.setSheets(excelSheetDataList);

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartCustomFilterItemDTO.java
Patch:
@@ -1,5 +1,7 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
 import java.io.Serializable;
@@ -9,6 +11,7 @@
  */
 @Data
 public class ChartCustomFilterItemDTO implements Serializable {
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long fieldId;
     private String term;
     private String value;

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartQuotaDTO.java
Patch:
@@ -1,11 +1,14 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
 /**
  * @Author gin
  */
 @Data
 public class ChartQuotaDTO {
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long id;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartCustomFilterItemDTO.java
Patch:
@@ -1,5 +1,7 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
 import java.io.Serializable;
@@ -9,6 +11,7 @@
  */
 @Data
 public class ChartCustomFilterItemDTO implements Serializable {
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long fieldId;
     private String term;
     private String value;

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartQuotaDTO.java
Patch:
@@ -1,11 +1,14 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
 /**
  * @Author gin
  */
 @Data
 public class ChartQuotaDTO {
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long id;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/lark/vo/LarkInfoVO.java
Patch:
@@ -15,5 +15,5 @@ public class LarkInfoVO implements Serializable {
 
     private String callBack;
 
-    private Boolean enable;
+    private Boolean enable = false;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/lark/vo/LarkInfoVO.java
Patch:
@@ -15,5 +15,5 @@ public class LarkInfoVO implements Serializable {
 
     private String callBack;
 
-    private Boolean enable;
+    private Boolean enable = false;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartDimensionDTO.java
Patch:
@@ -1,12 +1,15 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
 /**
  * @Author gin
  */
 @Data
 public class ChartDimensionDTO {
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long id;
     private String value;
 }

File: sdk/api/api-base/src/main/java/io/dataease/api/chart/dto/ChartDimensionDTO.java
Patch:
@@ -1,12 +1,15 @@
 package io.dataease.api.chart.dto;
 
+import com.fasterxml.jackson.databind.annotation.JsonSerialize;
+import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
 import lombok.Data;
 
 /**
  * @Author gin
  */
 @Data
 public class ChartDimensionDTO {
+    @JsonSerialize(using = ToStringSerializer.class)
     private Long id;
     private String value;
 }

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,7 +71,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "BIGINT";
+    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
 

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -71,7 +71,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "BIGINT";
+    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
 

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -241,7 +241,7 @@ public DataVisualizationVO decompression(DataVisualizationBaseRequest request) t
             dvType = visualizationTemplate.getDvType();
         } else if (DataVisualizationConstants.NEW_PANEL_FROM.NEW_OUTER_TEMPLATE.equals(newFrom)) {
             templateStyle = request.getCanvasStyleData();
-            templateData = request.getCanvasStyleData();
+            templateData = request.getComponentData();
             dynamicData = request.getDynamicData();
             staticResource = request.getStaticResource();
             name = request.getName();

File: sdk/api/api-base/src/main/java/io/dataease/api/template/TemplateManageApi.java
Patch:
@@ -14,7 +14,7 @@ public interface TemplateManageApi {
     @PostMapping("/save")
     TemplateManageDTO save(@RequestBody TemplateManageRequest request);
 
-    @DeleteMapping("/delete/{id}")
+    @PostMapping("/delete/{id}")
     void delete(@PathVariable String id);
 
     @GetMapping("/findOne/{templateId}")

File: sdk/api/api-base/src/main/java/io/dataease/api/visualization/StaticResourceApi.java
Patch:
@@ -12,13 +12,13 @@
 public interface StaticResourceApi {
     @PostMapping("upload/{fileId}")
     @Operation(summary = "上传静态文件")
-    public void upload(@PathVariable("fileId") String fileId, @RequestPart("file") MultipartFile file);
+    void upload(@PathVariable("fileId") String fileId, @RequestPart("file") MultipartFile file);
 
     @PostMapping("findResourceAsBase64")
     @Operation(summary = "查找静态文件并转为Base64")
-    public Map<String,String> findResourceAsBase64(@RequestBody StaticResourceRequest resourceRequest);
+    Map<String,String> findResourceAsBase64(@RequestBody StaticResourceRequest resourceRequest);
 
     @GetMapping("urlTest")
-    public Map<String,String> urlTest();
+    Map<String,String> urlTest();
 
 }

File: core/core-backend/src/main/java/io/dataease/visualization/server/DataVisualizationServer.java
Patch:
@@ -241,7 +241,7 @@ public DataVisualizationVO decompression(DataVisualizationBaseRequest request) t
             dvType = visualizationTemplate.getDvType();
         } else if (DataVisualizationConstants.NEW_PANEL_FROM.NEW_OUTER_TEMPLATE.equals(newFrom)) {
             templateStyle = request.getCanvasStyleData();
-            templateData = request.getCanvasStyleData();
+            templateData = request.getComponentData();
             dynamicData = request.getDynamicData();
             staticResource = request.getStaticResource();
             name = request.getName();

File: sdk/api/api-base/src/main/java/io/dataease/api/template/TemplateManageApi.java
Patch:
@@ -14,7 +14,7 @@ public interface TemplateManageApi {
     @PostMapping("/save")
     TemplateManageDTO save(@RequestBody TemplateManageRequest request);
 
-    @DeleteMapping("/delete/{id}")
+    @PostMapping("/delete/{id}")
     void delete(@PathVariable String id);
 
     @GetMapping("/findOne/{templateId}")

File: sdk/api/api-base/src/main/java/io/dataease/api/visualization/StaticResourceApi.java
Patch:
@@ -12,13 +12,13 @@
 public interface StaticResourceApi {
     @PostMapping("upload/{fileId}")
     @Operation(summary = "上传静态文件")
-    public void upload(@PathVariable("fileId") String fileId, @RequestPart("file") MultipartFile file);
+    void upload(@PathVariable("fileId") String fileId, @RequestPart("file") MultipartFile file);
 
     @PostMapping("findResourceAsBase64")
     @Operation(summary = "查找静态文件并转为Base64")
-    public Map<String,String> findResourceAsBase64(@RequestBody StaticResourceRequest resourceRequest);
+    Map<String,String> findResourceAsBase64(@RequestBody StaticResourceRequest resourceRequest);
 
     @GetMapping("urlTest")
-    public Map<String,String> urlTest();
+    Map<String,String> urlTest();
 
 }

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -319,7 +319,7 @@ private static void handleStr(ApiDefinition apiDefinition, String jsonStr, List<
                             }
                         }
                         for (JsonNode node : jsonArray) {
-                            handleStr(apiDefinition, node.toString(), childrenField, rootPath + "." + fieldName + "[*]");
+                            handleStr(apiDefinition, node.toString(), childrenField, rootPath + "." + String.format(path, fieldName) + "[*]");
                         }
                         o.put("children", childrenField);
                         o.put("childrenDataType", "LIST");

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.datasource.type;
 
 import io.dataease.api.ds.vo.DatasourceConfiguration;
+import io.dataease.exception.DEException;
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
@@ -25,7 +26,7 @@ public String getJdbc() {
         } else {
             for (String illegalParameter : illegalParameters) {
                 if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {
-                    throw new RuntimeException("Illegal parameter: " + illegalParameter);
+                    DEException.throwException("Illegal parameter: " + illegalParameter);
                 }
             }
 

File: core/core-backend/src/main/java/io/dataease/datasource/provider/ApiUtils.java
Patch:
@@ -319,7 +319,7 @@ private static void handleStr(ApiDefinition apiDefinition, String jsonStr, List<
                             }
                         }
                         for (JsonNode node : jsonArray) {
-                            handleStr(apiDefinition, node.toString(), childrenField, rootPath + "." + fieldName + "[*]");
+                            handleStr(apiDefinition, node.toString(), childrenField, rootPath + "." + String.format(path, fieldName) + "[*]");
                         }
                         o.put("children", childrenField);
                         o.put("childrenDataType", "LIST");

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.datasource.type;
 
 import io.dataease.api.ds.vo.DatasourceConfiguration;
+import io.dataease.exception.DEException;
 import lombok.Data;
 import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Component;
@@ -25,7 +26,7 @@ public String getJdbc() {
         } else {
             for (String illegalParameter : illegalParameters) {
                 if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {
-                    throw new RuntimeException("Illegal parameter: " + illegalParameter);
+                    DEException.throwException("Illegal parameter: " + illegalParameter);
                 }
             }
 

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -13,7 +13,7 @@
 public class Mysql extends DatasourceConfiguration {
     private String driver = "com.mysql.cj.jdbc.Driver";
     private String extraParams = "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull";
-    private List<String> illegalParameters = Arrays.asList("autoDeserialize", "queryInterceptors", "statementInterceptors", "detectCustomCollations");
+    private List<String> illegalParameters = Arrays.asList("autoDeserialize", "queryInterceptors", "statementInterceptors", "detectCustomCollations", "allowloadlocalinfile", "allowUrlInLocalInfile", "allowLoadLocalInfileInPath");
     private List<String> showTableSqls = Arrays.asList("show tables");
 
     public String getJdbc() {
@@ -24,7 +24,7 @@ public String getJdbc() {
                     .replace("DATABASE", getDataBase().trim());
         } else {
             for (String illegalParameter : illegalParameters) {
-                if (getExtraParams().contains(illegalParameter)) {
+                if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {
                     throw new RuntimeException("Illegal parameter: " + illegalParameter);
                 }
             }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -290,7 +290,7 @@ public Map<String, Object> previewSql(PreviewSqlDTO dto) {
             if (ObjectUtils.isEmpty(list)) {
                 return null;
             }
-            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(sql, 100, 0, list.get(0).getOriginName() + " ASC ");
+            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(sql, 100, 0, String.format(SQLConstants.FIELD_DOT, list.get(0).getOriginName()) + " ASC ");
         } else {
             sql = SQLUtils.buildOriginPreviewSql(sql, 100, 0);
         }

File: core/core-backend/src/main/java/io/dataease/dataset/manage/DatasetDataManage.java
Patch:
@@ -290,7 +290,7 @@ public Map<String, Object> previewSql(PreviewSqlDTO dto) {
             if (ObjectUtils.isEmpty(list)) {
                 return null;
             }
-            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(sql, 100, 0, list.get(0).getOriginName() + " ASC ");
+            sql = SQLUtils.buildOriginPreviewSqlWithOrderBy(sql, 100, 0, String.format(SQLConstants.FIELD_DOT, list.get(0).getOriginName()) + " ASC ");
         } else {
             sql = SQLUtils.buildOriginPreviewSql(sql, 100, 0);
         }

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -47,6 +47,8 @@ public class SQLConstants {
 
     public static final String FIELD_NAME = "%s.`%s`";
 
+    public static final String FIELD_DOT = "`%s`";
+
     public static final String UNIX_TIMESTAMP = "UNIX_TIMESTAMP(%s)";
 
     public static final String DATE_FORMAT = "DATE_FORMAT(%s,'%s')";

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -47,6 +47,8 @@ public class SQLConstants {
 
     public static final String FIELD_NAME = "%s.`%s`";
 
+    public static final String FIELD_DOT = "`%s`";
+
     public static final String UNIX_TIMESTAMP = "UNIX_TIMESTAMP(%s)";
 
     public static final String DATE_FORMAT = "DATE_FORMAT(%s,'%s')";

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -69,7 +69,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
+    public static final String DEFAULT_INT_FORMAT = "BIGINT";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
 

File: core/core-backend/src/main/java/io/dataease/engine/constant/SQLConstants.java
Patch:
@@ -69,7 +69,7 @@ public class SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
+    public static final String DEFAULT_INT_FORMAT = "BIGINT";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(27,8)";
 

File: core/core-backend/src/main/java/io/dataease/datasource/server/DatasourceServer.java
Patch:
@@ -265,7 +265,9 @@ public DatasourceDTO save(DatasourceDTO dataSourceDTO) throws DEException {
                     DEException.throwException("Failed to create table " + datasourceRequest.getTable());
                 }
             }
-            datasourceSyncManage.extractExcelData(coreDatasource, "all_scope");
+            commonThreadPool.addTask(() -> {
+                datasourceSyncManage.extractExcelData(coreDatasource, "all_scope");
+            });
         } else if (dataSourceDTO.getType().equals(DatasourceConfiguration.DatasourceType.API.name())) {
             CoreDatasourceTask coreDatasourceTask = new CoreDatasourceTask();
             BeanUtils.copyBean(coreDatasourceTask, dataSourceDTO.getSyncSetting());

File: core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java
Patch:
@@ -13,7 +13,7 @@
 public class Mysql extends DatasourceConfiguration {
     private String driver = "com.mysql.cj.jdbc.Driver";
     private String extraParams = "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull";
-    private List<String> illegalParameters = Arrays.asList("autoDeserialize", "queryInterceptors", "statementInterceptors", "detectCustomCollations");
+    private List<String> illegalParameters = Arrays.asList("autoDeserialize", "queryInterceptors", "statementInterceptors", "detectCustomCollations", "allowloadlocalinfile", "allowUrlInLocalInfile", "allowLoadLocalInfileInPath");
     private List<String> showTableSqls = Arrays.asList("show tables");
 
     public String getJdbc() {
@@ -24,7 +24,7 @@ public String getJdbc() {
                     .replace("DATABASE", getDataBase().trim());
         } else {
             for (String illegalParameter : illegalParameters) {
-                if (getExtraParams().contains(illegalParameter)) {
+                if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {
                     throw new RuntimeException("Illegal parameter: " + illegalParameter);
                 }
             }

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DatasourceSyncManage.java
Patch:
@@ -134,7 +134,7 @@ public void extractedData(Long taskId, CoreDatasource coreDatasource, Datasource
         datasourceRequest.setDatasource(coreDatasource);
         List<DatasetTableDTO> tables = ApiUtils.getTables(datasourceRequest);
         for (DatasetTableDTO api : tables) {
-            CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(coreDatasource.getId(), taskId, api.getName(), scheduleType);
+            CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(coreDatasource.getId(), taskId, api.getTableName(), scheduleType);
             datasourceRequest.setTable(api.getTableName());
             List<TableField> tableFields = ApiUtils.getTableFields(datasourceRequest);
             try {
@@ -181,7 +181,7 @@ public void extractDataForTable(Long datasourceId, String name, String tableName
             LogUtil.error("Can not find datasource: " + datasourceId);
             return;
         }
-        CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(datasourceId,  null, name, MANUAL.toString());
+        CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(datasourceId,  null, tableName, MANUAL.toString());
 
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(coreDatasource);

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/CoreDatasourceTaskLogDTO.java
Patch:
@@ -55,6 +55,7 @@ public class CoreDatasourceTaskLogDTO implements Serializable {
      */
     private String taskStatus;
     private String tableName;
+    private String name;
 
     /**
      * 错误信息

File: core/core-backend/src/main/java/io/dataease/datasource/manage/DatasourceSyncManage.java
Patch:
@@ -134,7 +134,7 @@ public void extractedData(Long taskId, CoreDatasource coreDatasource, Datasource
         datasourceRequest.setDatasource(coreDatasource);
         List<DatasetTableDTO> tables = ApiUtils.getTables(datasourceRequest);
         for (DatasetTableDTO api : tables) {
-            CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(coreDatasource.getId(), taskId, api.getName(), scheduleType);
+            CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(coreDatasource.getId(), taskId, api.getTableName(), scheduleType);
             datasourceRequest.setTable(api.getTableName());
             List<TableField> tableFields = ApiUtils.getTableFields(datasourceRequest);
             try {
@@ -181,7 +181,7 @@ public void extractDataForTable(Long datasourceId, String name, String tableName
             LogUtil.error("Can not find datasource: " + datasourceId);
             return;
         }
-        CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(datasourceId,  null, name, MANUAL.toString());
+        CoreDatasourceTaskLog datasetTableTaskLog = datasourceTaskServer.initTaskLog(datasourceId,  null, tableName, MANUAL.toString());
 
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(coreDatasource);

File: sdk/api/api-base/src/main/java/io/dataease/api/ds/vo/CoreDatasourceTaskLogDTO.java
Patch:
@@ -55,6 +55,7 @@ public class CoreDatasourceTaskLogDTO implements Serializable {
      */
     private String taskStatus;
     private String tableName;
+    private String name;
 
     /**
      * 错误信息

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1106,11 +1106,11 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() >= columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
+                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length()) + "***";
+                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
                     }
                     break;
                 default:

File: core/core-backend/src/main/java/io/dataease/chart/utils/ChartDataBuild.java
Patch:
@@ -1106,11 +1106,11 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() >= columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
+                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
                         break;
                     }
                     if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
-                        desensitizationStr = StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length()) + "***";
+                        desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
                     }
                     break;
                 default:

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -419,7 +419,7 @@ private List<String[]> getDataResult(ResultSet rs) {
                             }
                             break;
                         case Types.BOOLEAN:
-                            row[j] = rs.getBoolean(j + 1) ? "1" : "0";
+                            row[j] = rs.getBoolean(j + 1) ? "true" : "false";
                             break;
                         default:
                             if (metaData.getColumnTypeName(j + 1).toLowerCase().equalsIgnoreCase("blob")) {

File: core/core-backend/src/main/java/io/dataease/datasource/provider/CalciteProvider.java
Patch:
@@ -419,7 +419,7 @@ private List<String[]> getDataResult(ResultSet rs) {
                             }
                             break;
                         case Types.BOOLEAN:
-                            row[j] = rs.getBoolean(j + 1) ? "1" : "0";
+                            row[j] = rs.getBoolean(j + 1) ? "true" : "false";
                             break;
                         default:
                             if (metaData.getColumnTypeName(j + 1).toLowerCase().equalsIgnoreCase("blob")) {

File: core/backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -132,6 +132,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
         filterChainDefinitionMap.put("/dataset/field/linkMappingFieldValues", "link");
         filterChainDefinitionMap.put("/systemInfo/proxyUserLoginInfo", ANON);
+        filterChainDefinitionMap.put("/system/onlineMapKey", ANON);
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: core/backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -132,6 +132,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
         filterChainDefinitionMap.put("/dataset/field/linkMappingFieldValues", "link");
         filterChainDefinitionMap.put("/systemInfo/proxyUserLoginInfo", ANON);
+        filterChainDefinitionMap.put("/system/onlineMapKey", ANON);
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: core/backend/src/main/java/io/dataease/commons/constants/SysLogConstants.java
Patch:
@@ -69,7 +69,8 @@ public enum SOURCE_TYPE {
         ROLE(8, "SOURCE_TYPE_ROLE"),
         DRIVER(9, "SOURCE_TYPE_DRIVER"),
         DRIVER_FILE(10, "SOURCE_TYPE_DRIVER_FILE"),
-        MENU(11, "SOURCE_TYPE_MENU");
+        MENU(11, "SOURCE_TYPE_MENU"),
+        APIKEY(12, "SOURCE_TYPE_APIKEY");
         private Integer value;
         private String name;
 

File: core/backend/src/main/java/io/dataease/commons/constants/SysLogConstants.java
Patch:
@@ -69,7 +69,8 @@ public enum SOURCE_TYPE {
         ROLE(8, "SOURCE_TYPE_ROLE"),
         DRIVER(9, "SOURCE_TYPE_DRIVER"),
         DRIVER_FILE(10, "SOURCE_TYPE_DRIVER_FILE"),
-        MENU(11, "SOURCE_TYPE_MENU");
+        MENU(11, "SOURCE_TYPE_MENU"),
+        APIKEY(12, "SOURCE_TYPE_APIKEY");
         private Integer value;
         private String name;
 

File: core/backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -8,8 +8,8 @@
 import io.dataease.commons.constants.ResourceAuthLevel;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
+import io.dataease.controller.dataset.request.DatasetTaskGridRequest;
 import io.dataease.controller.request.dataset.DataSetTaskRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.plugins.common.base.domain.DatasetTableTask;
 import io.dataease.service.dataset.DataSetTableTaskLogService;
@@ -77,7 +77,7 @@ public Pager<List<DataSetTaskDTO>> list(@RequestBody DatasetTableTask datasetTab
 
     @ApiOperation("分页查询")
     @PostMapping("/pageList/{goPage}/{pageSize}")
-    public Pager<List<DataSetTaskDTO>> taskList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
+    public Pager<List<DataSetTaskDTO>> taskList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody DatasetTaskGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
 
         Pager<List<DataSetTaskDTO>> listPager = PageUtils.setPageInfo(page, dataSetTableTaskService.taskList4User(request));

File: core/backend/src/main/java/io/dataease/controller/panel/AppLogController.java
Patch:
@@ -7,7 +7,7 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
-import io.dataease.controller.sys.request.KeyGridRequest;
+import io.dataease.controller.request.panel.AppLogGridRequest;
 import io.dataease.dto.appTemplateMarket.AppLogGridDTO;
 import io.dataease.service.panel.applog.AppLogService;
 import io.swagger.annotations.Api;
@@ -38,7 +38,7 @@ public class AppLogController {
     })
     @SqlInjectValidator(value = {"apply_time"})
     public Pager<List<AppLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
-                                              @RequestBody KeyGridRequest request) {
+                                              @RequestBody AppLogGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, appLogService.query(request));
     }

File: core/backend/src/main/java/io/dataease/controller/panel/server/StoreServer.java
Patch:
@@ -1,7 +1,6 @@
 package io.dataease.controller.panel.server;
 
 import io.dataease.controller.panel.api.StoreApi;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelStoreDto;
 import io.dataease.service.panel.StoreService;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -21,8 +20,8 @@ public void store(String id) {
     }
 
     @Override
-    public List<PanelStoreDto> list(BaseGridRequest request) {
-        return storeService.query(request);
+    public List<PanelStoreDto> list() {
+        return storeService.query();
     }
 
     @Override

File: core/backend/src/main/java/io/dataease/controller/sys/SysDeptController.java
Patch:
@@ -3,10 +3,10 @@
 import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.controller.ResultHolder;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.controller.sys.response.DeptNodeResponse;
 import io.dataease.controller.sys.response.DeptTreeNode;
 import io.dataease.plugins.common.base.domain.SysDept;
+import io.dataease.plugins.xpack.dept.dto.request.XpackDeptGridRequest;
 import io.dataease.service.sys.DeptService;
 import io.swagger.annotations.Api;
 import lombok.RequiredArgsConstructor;
@@ -42,7 +42,7 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
 
     @PostMapping("/search")
     @SqlInjectValidator({"name"})
-    public List<DeptNodeResponse> search(@RequestBody BaseGridRequest request){
+    public List<DeptNodeResponse> search(@RequestBody XpackDeptGridRequest request){
         List<SysDept> nodes = deptService.nodesTreeByCondition(request);
         List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);

File: core/backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -6,8 +6,8 @@
 import io.dataease.commons.utils.DeFileUtils;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
@@ -33,7 +33,7 @@ public class SysPluginController {
     @PostMapping("/pluginGrid/{goPage}/{pageSize}")
     @RequiresPermissions("plugin:read")
     @SqlInjectValidator(value = {"install_time"})
-    public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
+    public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody KeywordRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, pluginService.query(request));
     }

File: core/backend/src/main/java/io/dataease/controller/sys/request/MsgRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.dataease.controller.sys.request;
 
-import io.dataease.controller.sys.base.BaseGridRequest;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
@@ -9,7 +9,7 @@
 
 @Data
 @ApiModel("消息条件")
-public class MsgRequest extends BaseGridRequest implements Serializable {
+public class MsgRequest extends KeywordRequest implements Serializable {
 
     private static final long serialVersionUID = 1920091635946508658L;
 

File: core/backend/src/main/java/io/dataease/ext/ExtAppLogMapper.java
Patch:
@@ -1,9 +1,10 @@
 package io.dataease.ext;
 
+import io.dataease.controller.request.panel.AppLogGridRequest;
 import io.dataease.dto.appTemplateMarket.AppLogGridDTO;
-import io.dataease.service.panel.applog.AppLogQueryParam;
+
 import java.util.List;
 
 public interface ExtAppLogMapper {
-    List<AppLogGridDTO> query(AppLogQueryParam example);
+    List<AppLogGridDTO> query(AppLogGridRequest request);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtPanelStoreMapper.java
Patch:
@@ -1,11 +1,11 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.dto.panel.PanelStoreDto;
+import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtPanelStoreMapper {
 
-    List<PanelStoreDto> query(GridExample example);
+    List<PanelStoreDto> query(@Param("uid") Long uid);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysLogMapper.java
Patch:
@@ -1,16 +1,15 @@
 package io.dataease.ext;
 
+import io.dataease.controller.sys.request.LogGridRequest;
 import io.dataease.dto.log.FolderItem;
-import io.dataease.ext.query.GridExample;
 import io.dataease.plugins.common.base.domain.SysLogWithBLOBs;
-import io.dataease.service.sys.log.LogQueryParam;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtSysLogMapper {
 
-    List<SysLogWithBLOBs> query(LogQueryParam example);
+    List<SysLogWithBLOBs> query(LogGridRequest request);
 
     List<FolderItem> idAndName(@Param("ids") List<String> ids, @Param("type") Integer type);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysMenuMapper.java
Patch:
@@ -1,16 +1,14 @@
 package io.dataease.ext;
 
-import io.dataease.plugins.common.base.domain.SysMenu;
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.request.SimpleTreeNode;
+import io.dataease.plugins.common.base.domain.SysMenu;
 
 import java.util.List;
 
 public interface ExtSysMenuMapper {
 
     List<SimpleTreeNode> allNodes();
 
-    List<SimpleTreeNode> nodesByExample(GridExample example);
 
     List<SysMenu> querySysMenu();
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysRoleMapper.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.response.RoleUserItem;
 import io.dataease.plugins.common.base.domain.SysRole;
+import io.dataease.plugins.common.request.KeywordRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -12,7 +12,7 @@
 public interface ExtSysRoleMapper {
 
 
-    List<SysRole> query(GridExample example);
+    List<SysRole> query(KeywordRequest request);
 
     int deleteRoleMenu(@Param("roleId") Long roleId);
 

File: core/backend/src/main/java/io/dataease/ext/ExtSysUserMapper.java
Patch:
@@ -1,12 +1,12 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
+import io.dataease.controller.sys.request.UserGridRequest;
 import io.dataease.controller.sys.response.SysUserGridResponse;
 
 import java.util.List;
 
 public interface ExtSysUserMapper {
-    List<SysUserGridResponse> query(GridExample example);
+    List<SysUserGridResponse> query(UserGridRequest request);
 
     List<String> ldapUserNames(Integer from);
 

File: core/backend/src/main/java/io/dataease/plugins/config/PluginRunner.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.plugins.config;
 
 import io.dataease.commons.utils.LogUtil;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
@@ -37,11 +37,11 @@ public void init() {
     }
 
 
-
     @Override
     public void run(ApplicationArguments args) {
         // 执行加载插件逻辑
-        BaseGridRequest request = new BaseGridRequest();
+        pluginService.systemUpgrade();
+        KeywordRequest request = new KeywordRequest();
         List<MyPlugin> plugins = pluginService.query(request);
         if (CollectionUtils.isEmpty(plugins)) return;
         Map<Boolean, List<MyPlugin>> groupMap = plugins.stream().collect(Collectors.groupingBy(this::isDiscard));

File: core/backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -13,7 +13,6 @@
 import io.dataease.controller.request.panel.PanelShareRemoveRequest;
 import io.dataease.controller.request.panel.PanelShareRequest;
 import io.dataease.controller.request.panel.PanelShareSearchRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelShareDto;
 import io.dataease.dto.panel.PanelShareOutDTO;
 import io.dataease.dto.panel.PanelSharePo;
@@ -338,7 +337,7 @@ public List<PanelSharePo> queryShareOut() {
         return extPanelShareMapper.queryOut(username);
     }
 
-    public List<PanelShareDto> queryTree(BaseGridRequest request) {
+    public List<PanelShareDto> queryTree() {
         CurrentUserDto user = AuthUtils.getUser();
         Long userId = user.getUserId();
         Long deptId = user.getDeptId();

File: sdk/dataease-plugin-datasource/src/main/java/io/dataease/plugins/datasource/service/DatasourceService.java
Patch:
@@ -1,11 +1,8 @@
 package io.dataease.plugins.datasource.service;
 
 import io.dataease.plugins.common.dto.datasource.DataSourceType;
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 
-import java.util.List;
-
 public abstract class DatasourceService extends PluginComponentService {
 
     abstract public DataSourceType getDataSourceType();

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/auth/service/ColumnPermissionService.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.xpack.auth.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 import io.dataease.plugins.xpack.auth.dto.request.DataSetColumnPermissionsDTO;
 import io.dataease.plugins.xpack.auth.dto.request.DatasetColumnPermissions;
@@ -9,9 +8,9 @@
 
 public abstract class ColumnPermissionService extends PluginComponentService {
     public abstract List<DataSetColumnPermissionsDTO> searchPermissions(DataSetColumnPermissionsDTO request);
-    public abstract List<DataSetColumnPermissionsDTO> queryPermissions(XpackGridRequest arg0) ;
+    public abstract List<DataSetColumnPermissionsDTO> queryPermissions(String tableId) ;
     public abstract DatasetColumnPermissions save(DatasetColumnPermissions datasetColumnPermissions);
     public abstract void delete(String id);
-    public abstract List<? extends Object> authObjs(DataSetColumnPermissionsDTO request);
+    public abstract List<?> authObjs(DataSetColumnPermissionsDTO request);
     public abstract DataSetColumnPermissionsDTO permissionInfo(DataSetColumnPermissionsDTO datasetRowPermissions);
 }

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/auth/service/RowPermissionService.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.xpack.auth.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 import io.dataease.plugins.xpack.auth.dto.request.DataSetRowPermissionsDTO;
 import io.dataease.plugins.xpack.auth.dto.request.DatasetRowPermissions;
@@ -9,7 +8,7 @@
 
 public abstract class RowPermissionService extends PluginComponentService {
     public abstract List<DataSetRowPermissionsDTO> searchRowPermissions(DataSetRowPermissionsDTO request);
-    public abstract List<DataSetRowPermissionsDTO> queryRowPermissions(XpackGridRequest arg0) ;
+    public abstract List<DataSetRowPermissionsDTO> queryRowPermissions(String tableId) ;
     public abstract void save(DatasetRowPermissions datasetRowPermissions);
     public abstract void delete(String id);
     public abstract List<? extends Object> authObjs(DataSetRowPermissionsDTO request);

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/role/service/RoleXpackService.java
Patch:
@@ -1,6 +1,6 @@
 package io.dataease.plugins.xpack.role.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.plugins.common.service.PluginMenuService;
 import io.dataease.plugins.xpack.role.dto.request.RoleUserMappingRequest;
 import io.dataease.plugins.xpack.role.dto.request.RoleUserRequest;
@@ -14,14 +14,13 @@
 public abstract class RoleXpackService extends PluginMenuService {
 
 
-
     public abstract void save(XpackRoleDto dto);
 
     public abstract void delete(Long roleId);
 
     public abstract void update(XpackRoleDto dto);
 
-    public abstract List<XpackRoleDto> query(XpackGridRequest request);
+    public abstract List<XpackRoleDto> query(KeywordRequest request);
 
     public abstract List<XpackRoleItemDto> allRoles();
 

File: core/backend/src/main/java/io/dataease/ext/ExtSysPluginMapper.java
Patch:
@@ -8,4 +8,6 @@
 public interface ExtSysPluginMapper {
 
     List<MyPlugin> query(KeywordRequest request);
+
+    int updateVersion(String version);
 }

File: core/backend/src/main/java/io/dataease/plugins/config/PluginRunner.java
Patch:
@@ -40,6 +40,7 @@ public void init() {
     @Override
     public void run(ApplicationArguments args) {
         // 执行加载插件逻辑
+        pluginService.systemUpgrade();
         KeywordRequest request = new KeywordRequest();
         List<MyPlugin> plugins = pluginService.query(request);
         if (CollectionUtils.isEmpty(plugins)) return;

File: core/backend/src/main/java/io/dataease/ext/ExtSysPluginMapper.java
Patch:
@@ -8,4 +8,6 @@
 public interface ExtSysPluginMapper {
 
     List<MyPlugin> query(KeywordRequest request);
+
+    int updateVersion(String version);
 }

File: core/backend/src/main/java/io/dataease/plugins/config/PluginRunner.java
Patch:
@@ -40,6 +40,7 @@ public void init() {
     @Override
     public void run(ApplicationArguments args) {
         // 执行加载插件逻辑
+        pluginService.systemUpgrade();
         KeywordRequest request = new KeywordRequest();
         List<MyPlugin> plugins = pluginService.query(request);
         if (CollectionUtils.isEmpty(plugins)) return;

File: core/backend/src/main/java/io/dataease/dto/datasource/Db2Configuration.java
Patch:
@@ -15,7 +15,7 @@ public class Db2Configuration extends JdbcConfiguration {
     public String getJdbc() {
         if(StringUtils.isEmpty(extraParams.trim())){
             if (StringUtils.isEmpty(getSchema())) {
-                return "jdbc:db2://HOSTNAME:PORT/DATABASE:currentSchema=SCHEMA;"
+                return "jdbc:db2://HOSTNAME:PORT/DATABASE"
                         .replace("HOSTNAME", getHost().trim())
                         .replace("PORT", getPort().toString().trim())
                         .replace("DATABASE", getDataBase().trim());

File: core/backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -8,8 +8,8 @@
 import io.dataease.commons.constants.ResourceAuthLevel;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
+import io.dataease.controller.dataset.request.DatasetTaskGridRequest;
 import io.dataease.controller.request.dataset.DataSetTaskRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.plugins.common.base.domain.DatasetTableTask;
 import io.dataease.service.dataset.DataSetTableTaskLogService;
@@ -77,7 +77,7 @@ public Pager<List<DataSetTaskDTO>> list(@RequestBody DatasetTableTask datasetTab
 
     @ApiOperation("分页查询")
     @PostMapping("/pageList/{goPage}/{pageSize}")
-    public Pager<List<DataSetTaskDTO>> taskList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
+    public Pager<List<DataSetTaskDTO>> taskList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody DatasetTaskGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
 
         Pager<List<DataSetTaskDTO>> listPager = PageUtils.setPageInfo(page, dataSetTableTaskService.taskList4User(request));

File: core/backend/src/main/java/io/dataease/controller/panel/AppLogController.java
Patch:
@@ -7,7 +7,7 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
-import io.dataease.controller.sys.request.KeyGridRequest;
+import io.dataease.controller.request.panel.AppLogGridRequest;
 import io.dataease.dto.appTemplateMarket.AppLogGridDTO;
 import io.dataease.service.panel.applog.AppLogService;
 import io.swagger.annotations.Api;
@@ -38,7 +38,7 @@ public class AppLogController {
     })
     @SqlInjectValidator(value = {"apply_time"})
     public Pager<List<AppLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
-                                              @RequestBody KeyGridRequest request) {
+                                              @RequestBody AppLogGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, appLogService.query(request));
     }

File: core/backend/src/main/java/io/dataease/controller/panel/server/StoreServer.java
Patch:
@@ -1,7 +1,6 @@
 package io.dataease.controller.panel.server;
 
 import io.dataease.controller.panel.api.StoreApi;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelStoreDto;
 import io.dataease.service.panel.StoreService;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -21,8 +20,8 @@ public void store(String id) {
     }
 
     @Override
-    public List<PanelStoreDto> list(BaseGridRequest request) {
-        return storeService.query(request);
+    public List<PanelStoreDto> list() {
+        return storeService.query();
     }
 
     @Override

File: core/backend/src/main/java/io/dataease/controller/sys/SysDeptController.java
Patch:
@@ -3,10 +3,10 @@
 import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.controller.ResultHolder;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.controller.sys.response.DeptNodeResponse;
 import io.dataease.controller.sys.response.DeptTreeNode;
 import io.dataease.plugins.common.base.domain.SysDept;
+import io.dataease.plugins.xpack.dept.dto.request.XpackDeptGridRequest;
 import io.dataease.service.sys.DeptService;
 import io.swagger.annotations.Api;
 import lombok.RequiredArgsConstructor;
@@ -42,7 +42,7 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
 
     @PostMapping("/search")
     @SqlInjectValidator({"name"})
-    public List<DeptNodeResponse> search(@RequestBody BaseGridRequest request){
+    public List<DeptNodeResponse> search(@RequestBody XpackDeptGridRequest request){
         List<SysDept> nodes = deptService.nodesTreeByCondition(request);
         List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);

File: core/backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -6,8 +6,8 @@
 import io.dataease.commons.utils.DeFileUtils;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
@@ -33,7 +33,7 @@ public class SysPluginController {
     @PostMapping("/pluginGrid/{goPage}/{pageSize}")
     @RequiresPermissions("plugin:read")
     @SqlInjectValidator(value = {"install_time"})
-    public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
+    public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody KeywordRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, pluginService.query(request));
     }

File: core/backend/src/main/java/io/dataease/controller/sys/request/MsgRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.dataease.controller.sys.request;
 
-import io.dataease.controller.sys.base.BaseGridRequest;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
@@ -9,7 +9,7 @@
 
 @Data
 @ApiModel("消息条件")
-public class MsgRequest extends BaseGridRequest implements Serializable {
+public class MsgRequest extends KeywordRequest implements Serializable {
 
     private static final long serialVersionUID = 1920091635946508658L;
 

File: core/backend/src/main/java/io/dataease/ext/ExtAppLogMapper.java
Patch:
@@ -1,9 +1,10 @@
 package io.dataease.ext;
 
+import io.dataease.controller.request.panel.AppLogGridRequest;
 import io.dataease.dto.appTemplateMarket.AppLogGridDTO;
-import io.dataease.service.panel.applog.AppLogQueryParam;
+
 import java.util.List;
 
 public interface ExtAppLogMapper {
-    List<AppLogGridDTO> query(AppLogQueryParam example);
+    List<AppLogGridDTO> query(AppLogGridRequest request);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtPanelStoreMapper.java
Patch:
@@ -1,11 +1,11 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.dto.panel.PanelStoreDto;
+import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtPanelStoreMapper {
 
-    List<PanelStoreDto> query(GridExample example);
+    List<PanelStoreDto> query(@Param("uid") Long uid);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysLogMapper.java
Patch:
@@ -1,16 +1,15 @@
 package io.dataease.ext;
 
+import io.dataease.controller.sys.request.LogGridRequest;
 import io.dataease.dto.log.FolderItem;
-import io.dataease.ext.query.GridExample;
 import io.dataease.plugins.common.base.domain.SysLogWithBLOBs;
-import io.dataease.service.sys.log.LogQueryParam;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtSysLogMapper {
 
-    List<SysLogWithBLOBs> query(LogQueryParam example);
+    List<SysLogWithBLOBs> query(LogGridRequest request);
 
     List<FolderItem> idAndName(@Param("ids") List<String> ids, @Param("type") Integer type);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysMenuMapper.java
Patch:
@@ -1,16 +1,14 @@
 package io.dataease.ext;
 
-import io.dataease.plugins.common.base.domain.SysMenu;
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.request.SimpleTreeNode;
+import io.dataease.plugins.common.base.domain.SysMenu;
 
 import java.util.List;
 
 public interface ExtSysMenuMapper {
 
     List<SimpleTreeNode> allNodes();
 
-    List<SimpleTreeNode> nodesByExample(GridExample example);
 
     List<SysMenu> querySysMenu();
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysPluginMapper.java
Patch:
@@ -1,11 +1,11 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 
 import java.util.List;
 
 public interface ExtSysPluginMapper {
 
-    List<MyPlugin> query(GridExample example);
+    List<MyPlugin> query(KeywordRequest request);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysRoleMapper.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.response.RoleUserItem;
 import io.dataease.plugins.common.base.domain.SysRole;
+import io.dataease.plugins.common.request.KeywordRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -12,7 +12,7 @@
 public interface ExtSysRoleMapper {
 
 
-    List<SysRole> query(GridExample example);
+    List<SysRole> query(KeywordRequest request);
 
     int deleteRoleMenu(@Param("roleId") Long roleId);
 

File: core/backend/src/main/java/io/dataease/ext/ExtSysUserMapper.java
Patch:
@@ -1,12 +1,12 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
+import io.dataease.controller.sys.request.UserGridRequest;
 import io.dataease.controller.sys.response.SysUserGridResponse;
 
 import java.util.List;
 
 public interface ExtSysUserMapper {
-    List<SysUserGridResponse> query(GridExample example);
+    List<SysUserGridResponse> query(UserGridRequest request);
 
     List<String> ldapUserNames(Integer from);
 

File: core/backend/src/main/java/io/dataease/plugins/config/PluginRunner.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.plugins.config;
 
 import io.dataease.commons.utils.LogUtil;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
@@ -37,11 +37,10 @@ public void init() {
     }
 
 
-
     @Override
     public void run(ApplicationArguments args) {
         // 执行加载插件逻辑
-        BaseGridRequest request = new BaseGridRequest();
+        KeywordRequest request = new KeywordRequest();
         List<MyPlugin> plugins = pluginService.query(request);
         if (CollectionUtils.isEmpty(plugins)) return;
         Map<Boolean, List<MyPlugin>> groupMap = plugins.stream().collect(Collectors.groupingBy(this::isDiscard));

File: core/backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -13,7 +13,6 @@
 import io.dataease.controller.request.panel.PanelShareRemoveRequest;
 import io.dataease.controller.request.panel.PanelShareRequest;
 import io.dataease.controller.request.panel.PanelShareSearchRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelShareDto;
 import io.dataease.dto.panel.PanelShareOutDTO;
 import io.dataease.dto.panel.PanelSharePo;
@@ -338,7 +337,7 @@ public List<PanelSharePo> queryShareOut() {
         return extPanelShareMapper.queryOut(username);
     }
 
-    public List<PanelShareDto> queryTree(BaseGridRequest request) {
+    public List<PanelShareDto> queryTree() {
         CurrentUserDto user = AuthUtils.getUser();
         Long userId = user.getUserId();
         Long deptId = user.getDeptId();

File: sdk/dataease-plugin-datasource/src/main/java/io/dataease/plugins/datasource/service/DatasourceService.java
Patch:
@@ -1,11 +1,8 @@
 package io.dataease.plugins.datasource.service;
 
 import io.dataease.plugins.common.dto.datasource.DataSourceType;
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 
-import java.util.List;
-
 public abstract class DatasourceService extends PluginComponentService {
 
     abstract public DataSourceType getDataSourceType();

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/auth/service/ColumnPermissionService.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.xpack.auth.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 import io.dataease.plugins.xpack.auth.dto.request.DataSetColumnPermissionsDTO;
 import io.dataease.plugins.xpack.auth.dto.request.DatasetColumnPermissions;
@@ -9,9 +8,9 @@
 
 public abstract class ColumnPermissionService extends PluginComponentService {
     public abstract List<DataSetColumnPermissionsDTO> searchPermissions(DataSetColumnPermissionsDTO request);
-    public abstract List<DataSetColumnPermissionsDTO> queryPermissions(XpackGridRequest arg0) ;
+    public abstract List<DataSetColumnPermissionsDTO> queryPermissions(String tableId) ;
     public abstract DatasetColumnPermissions save(DatasetColumnPermissions datasetColumnPermissions);
     public abstract void delete(String id);
-    public abstract List<? extends Object> authObjs(DataSetColumnPermissionsDTO request);
+    public abstract List<?> authObjs(DataSetColumnPermissionsDTO request);
     public abstract DataSetColumnPermissionsDTO permissionInfo(DataSetColumnPermissionsDTO datasetRowPermissions);
 }

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/auth/service/RowPermissionService.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.xpack.auth.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 import io.dataease.plugins.xpack.auth.dto.request.DataSetRowPermissionsDTO;
 import io.dataease.plugins.xpack.auth.dto.request.DatasetRowPermissions;
@@ -9,7 +8,7 @@
 
 public abstract class RowPermissionService extends PluginComponentService {
     public abstract List<DataSetRowPermissionsDTO> searchRowPermissions(DataSetRowPermissionsDTO request);
-    public abstract List<DataSetRowPermissionsDTO> queryRowPermissions(XpackGridRequest arg0) ;
+    public abstract List<DataSetRowPermissionsDTO> queryRowPermissions(String tableId) ;
     public abstract void save(DatasetRowPermissions datasetRowPermissions);
     public abstract void delete(String id);
     public abstract List<? extends Object> authObjs(DataSetRowPermissionsDTO request);

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/role/service/RoleXpackService.java
Patch:
@@ -1,6 +1,6 @@
 package io.dataease.plugins.xpack.role.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.plugins.common.service.PluginMenuService;
 import io.dataease.plugins.xpack.role.dto.request.RoleUserMappingRequest;
 import io.dataease.plugins.xpack.role.dto.request.RoleUserRequest;
@@ -14,14 +14,13 @@
 public abstract class RoleXpackService extends PluginMenuService {
 
 
-
     public abstract void save(XpackRoleDto dto);
 
     public abstract void delete(Long roleId);
 
     public abstract void update(XpackRoleDto dto);
 
-    public abstract List<XpackRoleDto> query(XpackGridRequest request);
+    public abstract List<XpackRoleDto> query(KeywordRequest request);
 
     public abstract List<XpackRoleItemDto> allRoles();
 

File: core/backend/src/main/java/io/dataease/controller/request/panel/PanelTemplateRequest.java
Patch:
@@ -14,7 +14,7 @@ public class PanelTemplateRequest extends PanelTemplateWithBLOBs {
     @ApiModelProperty("排序")
     private String sort;
     @ApiModelProperty("详细信息")
-    private String withBlobs="Y";
+    private String withBlobs="N";
     @ApiModelProperty("操作类型")
     private String optType;
     @ApiModelProperty("静态文件")

File: core/backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1220,8 +1220,8 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 if (x.getDeExtractType() == 0) {
                     if (StringUtils.equalsIgnoreCase(x.getDateStyle(), "y_Q")) {
                         fieldName = String.format(format,
-                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
-                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT)));
+                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
+                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT)));
                     } else {
                         fieldName = String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), format);
                     }

File: core/backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1149,7 +1149,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             String whereValue = "";
 
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
-                if(request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")) {
+                if(request.getDatasetTableField() != null && request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")) {
                     whereValue = "(" + value.stream().map(str -> {
                         return "N" + "'" + str + "'";
                     }).collect(Collectors.joining(",")) + ")";
@@ -1171,7 +1171,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 }
             } else {
 
-                if(request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")){
+                if(request.getDatasetTableField() != null && request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")){
                     whereValue = String.format(SqlServerSQLConstants.WHERE_VALUE_VALUE_CH, value.get(0));
                 }else {
                     whereValue = String.format(SqlServerSQLConstants.WHERE_VALUE_VALUE, value.get(0));

File: core/backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -152,9 +152,6 @@ public void checkName(DatasetGroup datasetGroup) {
         if (StringUtils.isNotEmpty(datasetGroup.getId())) {
             criteria.andIdNotEqualTo(datasetGroup.getId());
         }
-        if (ObjectUtils.isNotEmpty(datasetGroup.getLevel())) {
-            criteria.andLevelEqualTo(datasetGroup.getLevel());
-        }
         List<DatasetGroup> list = datasetGroupMapper.selectByExample(datasetGroupExample);
         if (list.size() > 0) {
             throw new RuntimeException(Translator.get("I18N_DATASET_GROUP_EXIST"));

File: core/backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -68,6 +68,7 @@ public List<SysUserGridResponse> query(UserGridRequest request) {
 
         List<SysUserGridResponse> lists = extSysUserMapper.query(request);
         lists.forEach(item -> {
+            item.setPassword("");
             List<SysUserRole> roles = item.getRoles();
             List<Long> roleIds = roles.stream().filter(ObjectUtils::isNotEmpty).map(SysUserRole::getRoleId).collect(Collectors.toList());
             item.setRoleIds(roleIds);

File: extensions/dataease-extensions-view/view-chartmix/view-chartmix-backend/src/main/java/io/dataease/plugins/view/official/handler/ChartMixViewStatHandler.java
Patch:
@@ -45,7 +45,6 @@ public String build(PluginViewParam pluginViewParam, ViewPluginService viewPlugi
         List<PluginViewSQL> xFields = fieldSQLMap.getOrDefault("xAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getField())).map(PluginSingleField::getField).collect(Collectors.toList());
         List<PluginViewSQL> xOrders = fieldSQLMap.getOrDefault("xAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getSort())).map(PluginSingleField::getSort).collect(Collectors.toList());
 
-        System.out.println("11111111 orders:"+new Gson().toJson(xOrders));
         // List<String> xWheres = fieldSQLMap.get("xAxis").stream().map(singleField -> singleField.getWhere()).collect(Collectors.toList());
 
         List<PluginViewSQL> yFields = fieldSQLMap.getOrDefault("yAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getField())).map(PluginSingleField::getField).collect(Collectors.toList());
@@ -79,7 +78,6 @@ public String build(PluginViewParam pluginViewParam, ViewPluginService viewPlugi
         orders.addAll(xOrders);
         orders.addAll(yOrders);
 
-        System.out.println("11111111 orders: " + new Gson().toJson(orders));
 
         List<String> aggWheres = new ArrayList<>();
         aggWheres.addAll(yWheres.stream().filter(ObjectUtils::isNotEmpty).collect(Collectors.toList()));

File: core/backend/src/main/java/io/dataease/controller/dataset/request/DatasetTaskGridRequest.java
Patch:
@@ -19,4 +19,6 @@ public class DatasetTaskGridRequest extends KeywordRequest {
     private Long[] lastExecTime;
 
     private String id;
+
+    private Long userId;
 }

File: core/backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -263,15 +263,17 @@ public List<DataSetTaskDTO> list(DatasetTableTask datasetTableTask) {
     }
 
     public List<DataSetTaskDTO> taskList4User(DatasetTaskGridRequest request) {
-
+        request.setUserId(null);
         if (AuthUtils.getUser().getIsAdmin()) {
             return extDataSetTaskMapper.taskList(request);
         } else {
+            request.setUserId(AuthUtils.getUser().getUserId());
             return extDataSetTaskMapper.userTaskList(request);
         }
     }
 
     public List<DataSetTaskDTO> taskWithTriggers(DatasetTaskGridRequest request) {
+        request.setUserId(AuthUtils.getUser().getUserId());
         return extDataSetTaskMapper.taskWithTriggers(request);
     }
 

File: core/backend/src/main/java/io/dataease/dto/datasource/Db2Configuration.java
Patch:
@@ -15,7 +15,7 @@ public class Db2Configuration extends JdbcConfiguration {
     public String getJdbc() {
         if(StringUtils.isEmpty(extraParams.trim())){
             if (StringUtils.isEmpty(getSchema())) {
-                return "jdbc:db2://HOSTNAME:PORT/DATABASE:currentSchema=SCHEMA;"
+                return "jdbc:db2://HOSTNAME:PORT/DATABASE"
                         .replace("HOSTNAME", getHost().trim())
                         .replace("PORT", getPort().toString().trim())
                         .replace("DATABASE", getDataBase().trim());

File: core/backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1220,8 +1220,8 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 if (x.getDeExtractType() == 0) {
                     if (StringUtils.equalsIgnoreCase(x.getDateStyle(), "y_Q")) {
                         fieldName = String.format(format,
-                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
-                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT)));
+                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
+                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT)));
                     } else {
                         fieldName = String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), format);
                     }

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/impl/RaceBarService.java
Patch:
@@ -150,7 +150,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
         data.forEach(ss -> {
             xs.add(ss[encode.get("y")]);
 
-            String key = ss[(Integer) map.get("extIndex")];
+            String key = StringUtils.defaultString(ss[(Integer) map.get("extIndex")], StringUtils.EMPTY);
             if (!keySet.contains(key)) {
                 keySet.add(key);
                 keyList.add(key);
@@ -160,7 +160,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
 
 
         Map<String, List<String[]>> groupData = data.stream().collect(Collectors.toMap(
-                k -> k[(Integer) map.get("extIndex")],
+                k -> StringUtils.defaultString(k[(Integer) map.get("extIndex")], StringUtils.EMPTY),
                 v -> {
                     List<String[]> list = new ArrayList<>();
                     list.add(v);
@@ -179,6 +179,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
 
         map.put("xs", xs);
 
+
         return map;
     }
 

File: core/backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -20,7 +20,6 @@
 import io.dataease.controller.sys.response.DeptNodeResponse;
 import io.dataease.dto.SysLogDTO;
 import io.dataease.listener.util.CacheUtils;
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.config.SpringContextUtil;
 import io.dataease.plugins.xpack.dept.dto.request.*;
 import io.dataease.plugins.xpack.dept.dto.response.DeptUserItemDTO;
@@ -33,7 +32,6 @@
 import io.swagger.annotations.ApiOperation;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.cache.annotation.CacheEvict;
 import org.springframework.web.bind.annotation.*;
 import springfox.documentation.annotations.ApiIgnore;
 

File: core/backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -14,8 +14,6 @@
 import io.dataease.i18n.Translator;
 import io.dataease.plugins.common.entity.GlobalTaskEntity;
 import io.dataease.plugins.common.entity.GlobalTaskInstance;
-import io.dataease.plugins.common.entity.XpackConditionEntity;
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.config.SpringContextUtil;
 import io.dataease.plugins.xpack.email.dto.request.*;
 import io.dataease.plugins.xpack.email.dto.response.XpackTaskEntity;

File: sdk/dataease-plugin-datasource/src/main/java/io/dataease/plugins/datasource/service/DatasourceService.java
Patch:
@@ -1,11 +1,8 @@
 package io.dataease.plugins.datasource.service;
 
 import io.dataease.plugins.common.dto.datasource.DataSourceType;
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 
-import java.util.List;
-
 public abstract class DatasourceService extends PluginComponentService {
 
     abstract public DataSourceType getDataSourceType();

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/auth/service/ColumnPermissionService.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.xpack.auth.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 import io.dataease.plugins.xpack.auth.dto.request.DataSetColumnPermissionsDTO;
 import io.dataease.plugins.xpack.auth.dto.request.DatasetColumnPermissions;
@@ -9,9 +8,9 @@
 
 public abstract class ColumnPermissionService extends PluginComponentService {
     public abstract List<DataSetColumnPermissionsDTO> searchPermissions(DataSetColumnPermissionsDTO request);
-    public abstract List<DataSetColumnPermissionsDTO> queryPermissions(XpackGridRequest arg0) ;
+    public abstract List<DataSetColumnPermissionsDTO> queryPermissions(String tableId) ;
     public abstract DatasetColumnPermissions save(DatasetColumnPermissions datasetColumnPermissions);
     public abstract void delete(String id);
-    public abstract List<? extends Object> authObjs(DataSetColumnPermissionsDTO request);
+    public abstract List<?> authObjs(DataSetColumnPermissionsDTO request);
     public abstract DataSetColumnPermissionsDTO permissionInfo(DataSetColumnPermissionsDTO datasetRowPermissions);
 }

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/auth/service/RowPermissionService.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.xpack.auth.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
 import io.dataease.plugins.common.service.PluginComponentService;
 import io.dataease.plugins.xpack.auth.dto.request.DataSetRowPermissionsDTO;
 import io.dataease.plugins.xpack.auth.dto.request.DatasetRowPermissions;
@@ -9,7 +8,7 @@
 
 public abstract class RowPermissionService extends PluginComponentService {
     public abstract List<DataSetRowPermissionsDTO> searchRowPermissions(DataSetRowPermissionsDTO request);
-    public abstract List<DataSetRowPermissionsDTO> queryRowPermissions(XpackGridRequest arg0) ;
+    public abstract List<DataSetRowPermissionsDTO> queryRowPermissions(String tableId) ;
     public abstract void save(DatasetRowPermissions datasetRowPermissions);
     public abstract void delete(String id);
     public abstract List<? extends Object> authObjs(DataSetRowPermissionsDTO request);

File: core/backend/src/main/java/io/dataease/controller/panel/AppLogController.java
Patch:
@@ -7,7 +7,7 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
-import io.dataease.controller.sys.request.KeyGridRequest;
+import io.dataease.controller.request.panel.AppLogGridRequest;
 import io.dataease.dto.appTemplateMarket.AppLogGridDTO;
 import io.dataease.service.panel.applog.AppLogService;
 import io.swagger.annotations.Api;
@@ -38,7 +38,7 @@ public class AppLogController {
     })
     @SqlInjectValidator(value = {"apply_time"})
     public Pager<List<AppLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
-                                              @RequestBody KeyGridRequest request) {
+                                              @RequestBody AppLogGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, appLogService.query(request));
     }

File: core/backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -6,7 +6,6 @@
 import io.dataease.commons.utils.DeFileUtils;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
 import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;

File: core/backend/src/main/java/io/dataease/ext/ExtAppLogMapper.java
Patch:
@@ -1,9 +1,10 @@
 package io.dataease.ext;
 
+import io.dataease.controller.request.panel.AppLogGridRequest;
 import io.dataease.dto.appTemplateMarket.AppLogGridDTO;
-import io.dataease.service.panel.applog.AppLogQueryParam;
+
 import java.util.List;
 
 public interface ExtAppLogMapper {
-    List<AppLogGridDTO> query(AppLogQueryParam example);
+    List<AppLogGridDTO> query(AppLogGridRequest request);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtPanelStoreMapper.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.dto.panel.PanelStoreDto;
 import org.apache.ibatis.annotations.Param;
 

File: core/backend/src/main/java/io/dataease/ext/ExtSysMenuMapper.java
Patch:
@@ -1,16 +1,14 @@
 package io.dataease.ext;
 
-import io.dataease.plugins.common.base.domain.SysMenu;
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.request.SimpleTreeNode;
+import io.dataease.plugins.common.base.domain.SysMenu;
 
 import java.util.List;
 
 public interface ExtSysMenuMapper {
 
     List<SimpleTreeNode> allNodes();
 
-    List<SimpleTreeNode> nodesByExample(GridExample example);
 
     List<SysMenu> querySysMenu();
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysUserMapper.java
Patch:
@@ -1,7 +1,6 @@
 package io.dataease.ext;
 
 import io.dataease.controller.sys.request.UserGridRequest;
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.response.SysUserGridResponse;
 
 import java.util.List;

File: core/backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -13,7 +13,6 @@
 import io.dataease.controller.request.panel.PanelShareRemoveRequest;
 import io.dataease.controller.request.panel.PanelShareRequest;
 import io.dataease.controller.request.panel.PanelShareSearchRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelShareDto;
 import io.dataease.dto.panel.PanelShareOutDTO;
 import io.dataease.dto.panel.PanelSharePo;

File: core/backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -12,7 +12,6 @@
 import io.dataease.controller.sys.response.SysUserGridResponse;
 import io.dataease.controller.sys.response.SysUserRole;
 import io.dataease.ext.ExtSysUserMapper;
-import io.dataease.ext.query.GridExample;
 import io.dataease.i18n.Translator;
 import io.dataease.plugins.common.base.domain.*;
 import io.dataease.plugins.common.base.mapper.SysUserAssistMapper;

File: core/backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -2,16 +2,14 @@
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.auth.annotation.DePermission;
-import io.dataease.auth.annotation.SqlInjectValidator;
-import io.dataease.plugins.common.base.domain.PanelShare;
 import io.dataease.commons.constants.DePermissionType;
 import io.dataease.controller.request.panel.PanelShareFineDto;
 import io.dataease.controller.request.panel.PanelShareRemoveRequest;
 import io.dataease.controller.request.panel.PanelShareSearchRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelShareDto;
 import io.dataease.dto.panel.PanelShareOutDTO;
 import io.dataease.dto.panel.PanelSharePo;
+import io.dataease.plugins.common.base.domain.PanelShare;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiImplicitParam;
 import io.swagger.annotations.ApiOperation;

File: core/backend/src/main/java/io/dataease/controller/sys/SysDeptController.java
Patch:
@@ -3,10 +3,10 @@
 import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.controller.ResultHolder;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.controller.sys.response.DeptNodeResponse;
 import io.dataease.controller.sys.response.DeptTreeNode;
 import io.dataease.plugins.common.base.domain.SysDept;
+import io.dataease.plugins.xpack.dept.dto.request.XpackDeptGridRequest;
 import io.dataease.service.sys.DeptService;
 import io.swagger.annotations.Api;
 import lombok.RequiredArgsConstructor;
@@ -42,7 +42,7 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
 
     @PostMapping("/search")
     @SqlInjectValidator({"name"})
-    public List<DeptNodeResponse> search(@RequestBody BaseGridRequest request){
+    public List<DeptNodeResponse> search(@RequestBody XpackDeptGridRequest request){
         List<SysDept> nodes = deptService.nodesTreeByCondition(request);
         List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);

File: core/backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -31,8 +31,7 @@ public interface ShareApi {
 
     @ApiOperation("查询分享给我")
     @PostMapping("/treeList")
-    @SqlInjectValidator(value = {"s.create_time"})
-    List<PanelShareDto> treeList(BaseGridRequest request);
+    List<PanelShareDto> treeList();
 
     @ApiOperation("查询我分享的")
     @PostMapping("/shareOut")

File: core/backend/src/main/java/io/dataease/controller/panel/server/StoreServer.java
Patch:
@@ -1,7 +1,6 @@
 package io.dataease.controller.panel.server;
 
 import io.dataease.controller.panel.api.StoreApi;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelStoreDto;
 import io.dataease.service.panel.StoreService;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -21,8 +20,8 @@ public void store(String id) {
     }
 
     @Override
-    public List<PanelStoreDto> list(BaseGridRequest request) {
-        return storeService.query(request);
+    public List<PanelStoreDto> list() {
+        return storeService.query();
     }
 
     @Override

File: core/backend/src/main/java/io/dataease/ext/ExtPanelStoreMapper.java
Patch:
@@ -2,10 +2,11 @@
 
 import io.dataease.ext.query.GridExample;
 import io.dataease.dto.panel.PanelStoreDto;
+import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtPanelStoreMapper {
 
-    List<PanelStoreDto> query(GridExample example);
+    List<PanelStoreDto> query(@Param("uid") Long uid);
 }

File: core/backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -338,7 +338,7 @@ public List<PanelSharePo> queryShareOut() {
         return extPanelShareMapper.queryOut(username);
     }
 
-    public List<PanelShareDto> queryTree(BaseGridRequest request) {
+    public List<PanelShareDto> queryTree() {
         CurrentUserDto user = AuthUtils.getUser();
         Long userId = user.getUserId();
         Long deptId = user.getDeptId();

File: core/backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -8,8 +8,8 @@
 import io.dataease.commons.constants.ResourceAuthLevel;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
+import io.dataease.controller.dataset.request.DatasetTaskGridRequest;
 import io.dataease.controller.request.dataset.DataSetTaskRequest;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.plugins.common.base.domain.DatasetTableTask;
 import io.dataease.service.dataset.DataSetTableTaskLogService;
@@ -77,7 +77,7 @@ public Pager<List<DataSetTaskDTO>> list(@RequestBody DatasetTableTask datasetTab
 
     @ApiOperation("分页查询")
     @PostMapping("/pageList/{goPage}/{pageSize}")
-    public Pager<List<DataSetTaskDTO>> taskList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
+    public Pager<List<DataSetTaskDTO>> taskList(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody DatasetTaskGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
 
         Pager<List<DataSetTaskDTO>> listPager = PageUtils.setPageInfo(page, dataSetTableTaskService.taskList4User(request));

File: core/backend/src/main/java/io/dataease/controller/sys/request/MsgRequest.java
Patch:
@@ -1,6 +1,6 @@
 package io.dataease.controller.sys.request;
 
-import io.dataease.controller.sys.base.BaseGridRequest;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
@@ -9,7 +9,7 @@
 
 @Data
 @ApiModel("消息条件")
-public class MsgRequest extends BaseGridRequest implements Serializable {
+public class MsgRequest extends KeywordRequest implements Serializable {
 
     private static final long serialVersionUID = 1920091635946508658L;
 

File: core/backend/src/main/java/io/dataease/ext/ExtSysLogMapper.java
Patch:
@@ -1,16 +1,15 @@
 package io.dataease.ext;
 
+import io.dataease.controller.sys.request.LogGridRequest;
 import io.dataease.dto.log.FolderItem;
-import io.dataease.ext.query.GridExample;
 import io.dataease.plugins.common.base.domain.SysLogWithBLOBs;
-import io.dataease.service.sys.log.LogQueryParam;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
 
 public interface ExtSysLogMapper {
 
-    List<SysLogWithBLOBs> query(LogQueryParam example);
+    List<SysLogWithBLOBs> query(LogGridRequest request);
 
     List<FolderItem> idAndName(@Param("ids") List<String> ids, @Param("type") Integer type);
 }

File: core/backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -64,17 +64,16 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
 
     @ApiOperation("搜索组织树")
     @PostMapping("/search")
-    public List<DeptNodeResponse> search(@RequestBody XpackGridRequest request){
+    public List<DeptNodeResponse> search(@RequestBody XpackDeptGridRequest request){
         DeptXpackService deptService = SpringContextUtil.getBean(DeptXpackService.class);
         List<XpackSysDept> nodes = deptService.nodesTreeByCondition(request);
-        List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
+        return nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);
             deptNodeResponse.setHasChildren(node.getSubCount() > 0);
             deptNodeResponse.setLeaf(node.getSubCount() == 0);
             deptNodeResponse.setTop(node.getPid() == 0L);
             return deptNodeResponse;
         }).collect(Collectors.toList());
-        return nodeResponses;
     }
 
     @ApiIgnore

File: sdk/dataease-plugin-interface/src/main/java/io/dataease/plugins/xpack/role/service/RoleXpackService.java
Patch:
@@ -1,6 +1,6 @@
 package io.dataease.plugins.xpack.role.service;
 
-import io.dataease.plugins.common.entity.XpackGridRequest;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.plugins.common.service.PluginMenuService;
 import io.dataease.plugins.xpack.role.dto.request.RoleUserMappingRequest;
 import io.dataease.plugins.xpack.role.dto.request.RoleUserRequest;
@@ -14,14 +14,13 @@
 public abstract class RoleXpackService extends PluginMenuService {
 
 
-
     public abstract void save(XpackRoleDto dto);
 
     public abstract void delete(Long roleId);
 
     public abstract void update(XpackRoleDto dto);
 
-    public abstract List<XpackRoleDto> query(XpackGridRequest request);
+    public abstract List<XpackRoleDto> query(KeywordRequest request);
 
     public abstract List<XpackRoleItemDto> allRoles();
 

File: core/backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -8,6 +8,7 @@
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
@@ -33,7 +34,7 @@ public class SysPluginController {
     @PostMapping("/pluginGrid/{goPage}/{pageSize}")
     @RequiresPermissions("plugin:read")
     @SqlInjectValidator(value = {"install_time"})
-    public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
+    public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody KeywordRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, pluginService.query(request));
     }

File: core/backend/src/main/java/io/dataease/ext/ExtSysPluginMapper.java
Patch:
@@ -1,11 +1,11 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 
 import java.util.List;
 
 public interface ExtSysPluginMapper {
 
-    List<MyPlugin> query(GridExample example);
+    List<MyPlugin> query(KeywordRequest request);
 }

File: core/backend/src/main/java/io/dataease/ext/ExtSysRoleMapper.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.response.RoleUserItem;
 import io.dataease.plugins.common.base.domain.SysRole;
+import io.dataease.plugins.common.request.KeywordRequest;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -12,7 +12,7 @@
 public interface ExtSysRoleMapper {
 
 
-    List<SysRole> query(GridExample example);
+    List<SysRole> query(KeywordRequest request);
 
     int deleteRoleMenu(@Param("roleId") Long roleId);
 

File: core/backend/src/main/java/io/dataease/plugins/config/PluginRunner.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.plugins.config;
 
 import io.dataease.commons.utils.LogUtil;
-import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.plugins.common.base.domain.MyPlugin;
+import io.dataease.plugins.common.request.KeywordRequest;
 import io.dataease.service.sys.PluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
@@ -37,11 +37,10 @@ public void init() {
     }
 
 
-
     @Override
     public void run(ApplicationArguments args) {
         // 执行加载插件逻辑
-        BaseGridRequest request = new BaseGridRequest();
+        KeywordRequest request = new KeywordRequest();
         List<MyPlugin> plugins = pluginService.query(request);
         if (CollectionUtils.isEmpty(plugins)) return;
         Map<Boolean, List<MyPlugin>> groupMap = plugins.stream().collect(Collectors.groupingBy(this::isDiscard));

File: core/backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1220,8 +1220,8 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 if (x.getDeExtractType() == 0) {
                     if (StringUtils.equalsIgnoreCase(x.getDateStyle(), "y_Q")) {
                         fieldName = String.format(format,
-                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
-                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT)));
+                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
+                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT)));
                     } else {
                         fieldName = String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), format);
                     }

File: core/backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1220,8 +1220,8 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 if (x.getDeExtractType() == 0) {
                     if (StringUtils.equalsIgnoreCase(x.getDateStyle(), "y_Q")) {
                         fieldName = String.format(format,
-                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
-                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT)));
+                                String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), "%Y"),
+                                String.format(DorisConstants.QUARTER, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT)));
                     } else {
                         fieldName = String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT), format);
                     }

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/impl/RaceBarService.java
Patch:
@@ -150,7 +150,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
         data.forEach(ss -> {
             xs.add(ss[encode.get("y")]);
 
-            String key = ss[(Integer) map.get("extIndex")];
+            String key = StringUtils.defaultString(ss[(Integer) map.get("extIndex")], StringUtils.EMPTY);
             if (!keySet.contains(key)) {
                 keySet.add(key);
                 keyList.add(key);
@@ -160,7 +160,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
 
 
         Map<String, List<String[]>> groupData = data.stream().collect(Collectors.toMap(
-                k -> k[(Integer) map.get("extIndex")],
+                k -> StringUtils.defaultString(k[(Integer) map.get("extIndex")], StringUtils.EMPTY),
                 v -> {
                     List<String[]> list = new ArrayList<>();
                     list.add(v);
@@ -179,6 +179,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
 
         map.put("xs", xs);
 
+
         return map;
     }
 

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/impl/RaceBarService.java
Patch:
@@ -150,7 +150,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
         data.forEach(ss -> {
             xs.add(ss[encode.get("y")]);
 
-            String key = ss[(Integer) map.get("extIndex")];
+            String key = StringUtils.defaultString(ss[(Integer) map.get("extIndex")], StringUtils.EMPTY);
             if (!keySet.contains(key)) {
                 keySet.add(key);
                 keyList.add(key);
@@ -160,7 +160,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
 
 
         Map<String, List<String[]>> groupData = data.stream().collect(Collectors.toMap(
-                k -> k[(Integer) map.get("extIndex")],
+                k -> StringUtils.defaultString(k[(Integer) map.get("extIndex")], StringUtils.EMPTY),
                 v -> {
                     List<String[]> list = new ArrayList<>();
                     list.add(v);
@@ -179,6 +179,7 @@ public Map format(PluginViewParam pluginViewParam, List<String[]> data, boolean
 
         map.put("xs", xs);
 
+
         return map;
     }
 

File: core/backend/src/main/java/io/dataease/ext/ExtSysUserMapper.java
Patch:
@@ -1,12 +1,13 @@
 package io.dataease.ext;
 
+import io.dataease.controller.sys.request.UserGridRequest;
 import io.dataease.ext.query.GridExample;
 import io.dataease.controller.sys.response.SysUserGridResponse;
 
 import java.util.List;
 
 public interface ExtSysUserMapper {
-    List<SysUserGridResponse> query(GridExample example);
+    List<SysUserGridResponse> query(UserGridRequest request);
 
     List<String> ldapUserNames(Integer from);
 

File: core/backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -152,9 +152,6 @@ public void checkName(DatasetGroup datasetGroup) {
         if (StringUtils.isNotEmpty(datasetGroup.getId())) {
             criteria.andIdNotEqualTo(datasetGroup.getId());
         }
-        if (ObjectUtils.isNotEmpty(datasetGroup.getLevel())) {
-            criteria.andLevelEqualTo(datasetGroup.getLevel());
-        }
         List<DatasetGroup> list = datasetGroupMapper.selectByExample(datasetGroupExample);
         if (list.size() > 0) {
             throw new RuntimeException(Translator.get("I18N_DATASET_GROUP_EXIST"));

File: core/backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -152,9 +152,6 @@ public void checkName(DatasetGroup datasetGroup) {
         if (StringUtils.isNotEmpty(datasetGroup.getId())) {
             criteria.andIdNotEqualTo(datasetGroup.getId());
         }
-        if (ObjectUtils.isNotEmpty(datasetGroup.getLevel())) {
-            criteria.andLevelEqualTo(datasetGroup.getLevel());
-        }
         List<DatasetGroup> list = datasetGroupMapper.selectByExample(datasetGroupExample);
         if (list.size() > 0) {
             throw new RuntimeException(Translator.get("I18N_DATASET_GROUP_EXIST"));

File: core/backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1149,7 +1149,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             String whereValue = "";
 
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
-                if(request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")) {
+                if(request.getDatasetTableField() != null && request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")) {
                     whereValue = "(" + value.stream().map(str -> {
                         return "N" + "'" + str + "'";
                     }).collect(Collectors.joining(",")) + ")";
@@ -1171,7 +1171,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 }
             } else {
 
-                if(request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")){
+                if(request.getDatasetTableField() != null && request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")){
                     whereValue = String.format(SqlServerSQLConstants.WHERE_VALUE_VALUE_CH, value.get(0));
                 }else {
                     whereValue = String.format(SqlServerSQLConstants.WHERE_VALUE_VALUE, value.get(0));

File: core/backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1149,7 +1149,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             String whereValue = "";
 
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
-                if(request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")) {
+                if(request.getDatasetTableField() != null && request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")) {
                     whereValue = "(" + value.stream().map(str -> {
                         return "N" + "'" + str + "'";
                     }).collect(Collectors.joining(",")) + ")";
@@ -1171,7 +1171,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 }
             } else {
 
-                if(request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")){
+                if(request.getDatasetTableField() != null && request.getDatasetTableField().getType().equalsIgnoreCase("NVARCHAR")){
                     whereValue = String.format(SqlServerSQLConstants.WHERE_VALUE_VALUE_CH, value.get(0));
                 }else {
                     whereValue = String.format(SqlServerSQLConstants.WHERE_VALUE_VALUE, value.get(0));

File: core/backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -1474,6 +1474,8 @@ private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fi
 
         List<PluginViewField> pluginViewFields = fieldMap.entrySet().stream().flatMap(entry -> entry.getValue().stream().map(field -> {
             PluginViewField pluginViewField = BeanUtils.copyBean(new PluginViewField(), field);
+            pluginViewField.setFilter(gson.fromJson(gson.toJson(field.getFilter()), new TypeToken<List<PluginChartCustomFilterItem>>() {
+            }.getType()));
             pluginViewField.setTypeField(entry.getKey());
             return pluginViewField;
         })).collect(Collectors.toList());

File: extensions/dataease-extensions-view/view-chartmix/view-chartmix-backend/src/main/java/io/dataease/plugins/view/official/handler/ChartMixViewStatHandler.java
Patch:
@@ -45,7 +45,6 @@ public String build(PluginViewParam pluginViewParam, ViewPluginService viewPlugi
         List<PluginViewSQL> xFields = fieldSQLMap.getOrDefault("xAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getField())).map(PluginSingleField::getField).collect(Collectors.toList());
         List<PluginViewSQL> xOrders = fieldSQLMap.getOrDefault("xAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getSort())).map(PluginSingleField::getSort).collect(Collectors.toList());
 
-        System.out.println("11111111 orders:"+new Gson().toJson(xOrders));
         // List<String> xWheres = fieldSQLMap.get("xAxis").stream().map(singleField -> singleField.getWhere()).collect(Collectors.toList());
 
         List<PluginViewSQL> yFields = fieldSQLMap.getOrDefault("yAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getField())).map(PluginSingleField::getField).collect(Collectors.toList());
@@ -79,7 +78,6 @@ public String build(PluginViewParam pluginViewParam, ViewPluginService viewPlugi
         orders.addAll(xOrders);
         orders.addAll(yOrders);
 
-        System.out.println("11111111 orders: " + new Gson().toJson(orders));
 
         List<String> aggWheres = new ArrayList<>();
         aggWheres.addAll(yWheres.stream().filter(ObjectUtils::isNotEmpty).collect(Collectors.toList()));

File: core/backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -1474,6 +1474,8 @@ private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fi
 
         List<PluginViewField> pluginViewFields = fieldMap.entrySet().stream().flatMap(entry -> entry.getValue().stream().map(field -> {
             PluginViewField pluginViewField = BeanUtils.copyBean(new PluginViewField(), field);
+            pluginViewField.setFilter(gson.fromJson(gson.toJson(field.getFilter()), new TypeToken<List<PluginChartCustomFilterItem>>() {
+            }.getType()));
             pluginViewField.setTypeField(entry.getKey());
             return pluginViewField;
         })).collect(Collectors.toList());

File: extensions/dataease-extensions-view/view-chartmix/view-chartmix-backend/src/main/java/io/dataease/plugins/view/official/handler/ChartMixViewStatHandler.java
Patch:
@@ -45,7 +45,6 @@ public String build(PluginViewParam pluginViewParam, ViewPluginService viewPlugi
         List<PluginViewSQL> xFields = fieldSQLMap.getOrDefault("xAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getField())).map(PluginSingleField::getField).collect(Collectors.toList());
         List<PluginViewSQL> xOrders = fieldSQLMap.getOrDefault("xAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getSort())).map(PluginSingleField::getSort).collect(Collectors.toList());
 
-        System.out.println("11111111 orders:"+new Gson().toJson(xOrders));
         // List<String> xWheres = fieldSQLMap.get("xAxis").stream().map(singleField -> singleField.getWhere()).collect(Collectors.toList());
 
         List<PluginViewSQL> yFields = fieldSQLMap.getOrDefault("yAxis", new ArrayList<>()).stream().filter(singleField -> ObjectUtils.isNotEmpty(singleField.getField())).map(PluginSingleField::getField).collect(Collectors.toList());
@@ -79,7 +78,6 @@ public String build(PluginViewParam pluginViewParam, ViewPluginService viewPlugi
         orders.addAll(xOrders);
         orders.addAll(yOrders);
 
-        System.out.println("11111111 orders: " + new Gson().toJson(orders));
 
         List<String> aggWheres = new ArrayList<>();
         aggWheres.addAll(yWheres.stream().filter(ObjectUtils::isNotEmpty).collect(Collectors.toList()));

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/impl/RaceBarService.java
Patch:
@@ -40,9 +40,9 @@ public class RaceBarService extends ViewPluginService {
     private static final Map<String, String[]> VIEW_STYLE_PROPERTY_INNER = new HashMap<>();
 
     static {
-        VIEW_STYLE_PROPERTY_INNER.put("color-selector", new String[]{"value", "alpha"});
-        VIEW_STYLE_PROPERTY_INNER.put("label-selector", new String[]{"show", "fontSize", "color", "position", "formatter"});
-        VIEW_STYLE_PROPERTY_INNER.put("tooltip-selector", new String[]{"show", "textStyle", "formatter"});
+        VIEW_STYLE_PROPERTY_INNER.put("color-selector", new String[]{"value"});
+        VIEW_STYLE_PROPERTY_INNER.put("label-selector", new String[]{"show", "fontSize", "color", "position"});
+        VIEW_STYLE_PROPERTY_INNER.put("tooltip-selector", new String[]{"show", "textStyle", });
         VIEW_STYLE_PROPERTY_INNER.put("title-selector", new String[]{"show", "title", "fontSize", "color", "hPosition", "vPosition", "isItalic", "isBolder"});
     }
 

File: core/backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -211,7 +211,7 @@ public void extractExcelData(String datasetTableId, String type, String ops, Lis
                         for (DatasetTableField oldField : oldFields) {
                             boolean delete = true;
                             for (DatasetTableField datasetTableField : datasetTableFields) {
-                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName())) {
+                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName()) && oldField.getType().equalsIgnoreCase(datasetTableField.getType())) {
                                     delete = false;
                                 }
                             }

File: core/backend/src/main/java/io/dataease/auth/service/ProxyAuthService.java
Patch:
@@ -4,9 +4,9 @@
 
 import org.apache.shiro.authc.AuthenticationException;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
 
-import groovy.lang.Lazy;
 import io.dataease.auth.api.dto.CurrentRoleDto;
 import io.dataease.auth.api.dto.CurrentUserDto;
 import io.dataease.auth.entity.SysUserEntity;

File: core/backend/src/main/java/io/dataease/commons/constants/ParamConstants.java
Patch:
@@ -116,7 +116,7 @@ enum BASIC implements ParamConstants {
         DS_CHECK_INTERVAL_TYPE("basic.dsCheckIntervalType"),
         DEFAULT_LOGIN_TYPE("basic.loginType"),
         OPEN_HOME_PAGE("ui.openHomePage"),
-
+        AUTO_MOBILE("ui.autoMobile"),
         OPEN_MARKET_PAGE("ui.openMarketPage"),
         TEMPLATE_MARKET_ULR("basic.templateMarketUlr"),
 

File: core/backend/src/main/java/io/dataease/controller/sys/response/BasicInfo.java
Patch:
@@ -29,5 +29,7 @@ public class BasicInfo extends LoginLimitInfo implements Serializable {
     private String dsCheckInterval;
     @ApiModelProperty("数据源检测时间间隔类型")
     private String dsCheckIntervalType;
+    @ApiModelProperty("自动识别移动端")
+    private String autoMobile = "true";
 
 }

File: core/backend/src/main/java/io/dataease/auth/service/ProxyAuthService.java
Patch:
@@ -4,9 +4,9 @@
 
 import org.apache.shiro.authc.AuthenticationException;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
 
-import groovy.lang.Lazy;
 import io.dataease.auth.api.dto.CurrentRoleDto;
 import io.dataease.auth.api.dto.CurrentUserDto;
 import io.dataease.auth.entity.SysUserEntity;

File: core/backend/src/main/java/io/dataease/auth/service/ProxyAuthService.java
Patch:
@@ -4,9 +4,9 @@
 
 import org.apache.shiro.authc.AuthenticationException;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
 
-import groovy.lang.Lazy;
 import io.dataease.auth.api.dto.CurrentRoleDto;
 import io.dataease.auth.api.dto.CurrentUserDto;
 import io.dataease.auth.entity.SysUserEntity;

File: extensions/dataease-extensions-view/view-chartmix/view-chartmix-backend/src/main/java/io/dataease/plugins/view/official/impl/ChartMixService.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.Gson;
 import io.dataease.plugins.common.dto.StaticResource;
 import io.dataease.plugins.view.entity.*;
-import io.dataease.plugins.view.official.handler.DefaultViewStatHandler;
+import io.dataease.plugins.view.official.handler.ChartMixViewStatHandler;
 import io.dataease.plugins.view.service.ViewPluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -110,11 +110,10 @@ public String generateSQL(PluginViewParam param) {
         if (CollectionUtils.isNotEmpty(yAxisExt)) {
             yAxis.addAll(yAxisExt);
         }*/
-        System.out.println(new Gson().toJson(yAxis));
         if (CollectionUtils.isEmpty(xAxis) || CollectionUtils.isEmpty(yAxis)) {
             return null;
         }
-        String sql = new DefaultViewStatHandler().build(param, this);
+        String sql = new ChartMixViewStatHandler().build(param, this);
         System.out.println(sql);
         return sql;
 

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/handler/RaceBarViewStatHandler.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.view.official.handler;
 
-import com.google.gson.Gson;
 import io.dataease.plugins.common.constants.datasource.SQLConstants;
 import io.dataease.plugins.common.request.permission.DataSetRowPermissionsTreeDTO;
 import io.dataease.plugins.common.util.ConstantsUtil;
@@ -21,7 +20,7 @@
 import java.util.Map;
 import java.util.stream.Collectors;
 
-public class DefaultViewStatHandler implements PluginViewStatHandler {
+public class RaceBarViewStatHandler implements PluginViewStatHandler {
 
     @Override
     public String build(PluginViewParam pluginViewParam, ViewPluginService viewPluginService) {

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/impl/RaceBarService.java
Patch:
@@ -1,11 +1,10 @@
 package io.dataease.plugins.view.official.impl;
 
-import com.google.gson.Gson;
 import io.dataease.plugins.common.dto.StaticResource;
 import io.dataease.plugins.view.entity.PluginViewField;
 import io.dataease.plugins.view.entity.PluginViewParam;
 import io.dataease.plugins.view.entity.PluginViewType;
-import io.dataease.plugins.view.official.handler.DefaultViewStatHandler;
+import io.dataease.plugins.view.official.handler.RaceBarViewStatHandler;
 import io.dataease.plugins.view.service.ViewPluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -107,7 +106,7 @@ public String generateSQL(PluginViewParam param) {
         if (CollectionUtils.isEmpty(xAxis) || CollectionUtils.isEmpty(yAxis) || xAxis.size() < 2) {
             return null;
         }
-        String sql = new DefaultViewStatHandler().build(param, this);
+        String sql = new RaceBarViewStatHandler().build(param, this);
         return sql;
 
     }

File: extensions/dataease-extensions-view/view-chartmix/view-chartmix-backend/src/main/java/io/dataease/plugins/view/official/impl/ChartMixService.java
Patch:
@@ -3,7 +3,7 @@
 import com.google.gson.Gson;
 import io.dataease.plugins.common.dto.StaticResource;
 import io.dataease.plugins.view.entity.*;
-import io.dataease.plugins.view.official.handler.DefaultViewStatHandler;
+import io.dataease.plugins.view.official.handler.ChartMixViewStatHandler;
 import io.dataease.plugins.view.service.ViewPluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -110,11 +110,10 @@ public String generateSQL(PluginViewParam param) {
         if (CollectionUtils.isNotEmpty(yAxisExt)) {
             yAxis.addAll(yAxisExt);
         }*/
-        System.out.println(new Gson().toJson(yAxis));
         if (CollectionUtils.isEmpty(xAxis) || CollectionUtils.isEmpty(yAxis)) {
             return null;
         }
-        String sql = new DefaultViewStatHandler().build(param, this);
+        String sql = new ChartMixViewStatHandler().build(param, this);
         System.out.println(sql);
         return sql;
 

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/handler/RaceBarViewStatHandler.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.plugins.view.official.handler;
 
-import com.google.gson.Gson;
 import io.dataease.plugins.common.constants.datasource.SQLConstants;
 import io.dataease.plugins.common.request.permission.DataSetRowPermissionsTreeDTO;
 import io.dataease.plugins.common.util.ConstantsUtil;
@@ -21,7 +20,7 @@
 import java.util.Map;
 import java.util.stream.Collectors;
 
-public class DefaultViewStatHandler implements PluginViewStatHandler {
+public class RaceBarViewStatHandler implements PluginViewStatHandler {
 
     @Override
     public String build(PluginViewParam pluginViewParam, ViewPluginService viewPluginService) {

File: extensions/dataease-extensions-view/view-racebar/view-racebar-backend/src/main/java/io/dataease/plugins/view/official/impl/RaceBarService.java
Patch:
@@ -1,11 +1,10 @@
 package io.dataease.plugins.view.official.impl;
 
-import com.google.gson.Gson;
 import io.dataease.plugins.common.dto.StaticResource;
 import io.dataease.plugins.view.entity.PluginViewField;
 import io.dataease.plugins.view.entity.PluginViewParam;
 import io.dataease.plugins.view.entity.PluginViewType;
-import io.dataease.plugins.view.official.handler.DefaultViewStatHandler;
+import io.dataease.plugins.view.official.handler.RaceBarViewStatHandler;
 import io.dataease.plugins.view.service.ViewPluginService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -107,7 +106,7 @@ public String generateSQL(PluginViewParam param) {
         if (CollectionUtils.isEmpty(xAxis) || CollectionUtils.isEmpty(yAxis) || xAxis.size() < 2) {
             return null;
         }
-        String sql = new DefaultViewStatHandler().build(param, this);
+        String sql = new RaceBarViewStatHandler().build(param, this);
         return sql;
 
     }

File: core/backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1066,7 +1066,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
                         String date;
-                        if (field.getType().equalsIgnoreCase("YEAR")) {
+                        if (field.getType().equalsIgnoreCase("YEAR") || StringUtils.equalsIgnoreCase(field.getDateFormat(), "%Y")) {
                             date = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originName + ",'-01-01')", StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         } else {
                             date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);

File: core/backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1066,7 +1066,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
                         String date;
-                        if (field.getType().equalsIgnoreCase("YEAR")) {
+                        if (field.getType().equalsIgnoreCase("YEAR") || StringUtils.equalsIgnoreCase(field.getDateFormat(), "%Y")) {
                             date = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originName + ",'-01-01')", StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         } else {
                             date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);

File: core/backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1071,7 +1071,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         } else {
                             date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         }
-                        if (request.getOperator().equals("between")) {
+                        if (request.getOperator().equals("between") && request.getDatasetTableField().getDeExtractType() != 1) {
                             whereName = String.format(MySQLConstants.UNIX_TIMESTAMP, date) + "*1000";
                         } else {
                             if (StringUtils.equalsIgnoreCase(request.getDateStyle(), "y_Q")) {

File: core/backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1071,7 +1071,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         } else {
                             date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         }
-                        if (request.getOperator().equals("between")) {
+                        if (request.getOperator().equals("between") && request.getDatasetTableField().getDeExtractType() != 1) {
                             whereName = String.format(MySQLConstants.UNIX_TIMESTAMP, date) + "*1000";
                         } else {
                             if (StringUtils.equalsIgnoreCase(request.getDateStyle(), "y_Q")) {

File: sdk/dataease-plugin-common/src/main/java/io/dataease/plugins/common/constants/DatasourceTypes.java
Patch:
@@ -13,7 +13,7 @@ public enum DatasourceTypes {
     StarRocks("StarRocks", "StarRocks", "`", "`", "'", "'", "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null,null, true, DatabaseClassification.OLAP),
     ds_doris("ds_doris", "Doris", "`", "`", "'", "'", "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null, null,true, DatabaseClassification.OLAP),
     pg("pg", "PostgreSQL", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null, null,true, DatabaseClassification.OLTP),
-    kingbase("kingbase", "KingBase", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT, null,null,true, DatabaseClassification.OLTP),
+    kingbase("kingbase", "KingBase", "\"", "\"", "\"", "\"", "", false, DatasourceCalculationMode.DIRECT, null,null,true, DatabaseClassification.OLTP),
     sqlServer("sqlServer", "SQL Server", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null, null,true, DatabaseClassification.OLTP),
     oracle("oracle", "Oracle", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT_AND_SYNC, Arrays.asList("Default", "GBK", "BIG5", "ISO-8859-1", "UTF-8", "UTF-16", "CP850", "EUC_JP", "EUC_KR"), Arrays.asList("Default", "GBK", "UTF-8"),true, DatabaseClassification.OLTP),
     mongo("mongo", "MongoDB", "`", "`", "\"", "\"", "rebuildschema=true&authSource=admin", true, DatasourceCalculationMode.DIRECT, null, null,true, DatabaseClassification.OLTP),

File: sdk/dataease-plugin-common/src/main/java/io/dataease/plugins/common/constants/DatasourceTypes.java
Patch:
@@ -13,7 +13,7 @@ public enum DatasourceTypes {
     StarRocks("StarRocks", "StarRocks", "`", "`", "'", "'", "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null,null, true, DatabaseClassification.OLAP),
     ds_doris("ds_doris", "Doris", "`", "`", "'", "'", "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null, null,true, DatabaseClassification.OLAP),
     pg("pg", "PostgreSQL", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null, null,true, DatabaseClassification.OLTP),
-    kingbase("kingbase", "KingBase", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT, null,null,true, DatabaseClassification.OLTP),
+    kingbase("kingbase", "KingBase", "\"", "\"", "\"", "\"", "", false, DatasourceCalculationMode.DIRECT, null,null,true, DatabaseClassification.OLTP),
     sqlServer("sqlServer", "SQL Server", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT_AND_SYNC, null, null,true, DatabaseClassification.OLTP),
     oracle("oracle", "Oracle", "\"", "\"", "\"", "\"", "", true, DatasourceCalculationMode.DIRECT_AND_SYNC, Arrays.asList("Default", "GBK", "BIG5", "ISO-8859-1", "UTF-8", "UTF-16", "CP850", "EUC_JP", "EUC_KR"), Arrays.asList("Default", "GBK", "UTF-8"),true, DatabaseClassification.OLTP),
     mongo("mongo", "MongoDB", "`", "`", "\"", "\"", "rebuildschema=true&authSource=admin", true, DatasourceCalculationMode.DIRECT, null, null,true, DatabaseClassification.OLTP),

File: core/backend/src/main/java/io/dataease/dto/datasource/PgConfiguration.java
Patch:
@@ -13,10 +13,11 @@ public class PgConfiguration extends JdbcConfiguration {
     private String extraParams = "";
     public String getJdbc() {
         if(StringUtils.isEmpty(extraParams.trim())){
-            return "jdbc:postgresql://HOSTNAME:PORT/DATABASE"
+            return "jdbc:postgresql://HOSTNAME:PORT/DATABASE?currentSchema=SCHEMA"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())
-                    .replace("DATABASE", getDataBase().trim());
+                    .replace("DATABASE", getDataBase().trim())
+                    .replace("SCHEMA", getSchema().trim());
         }else {
             return "jdbc:postgresql://HOSTNAME:PORT/DATABASE?EXTRA_PARAMS"
                     .replace("HOSTNAME", getHost().trim())

File: core/backend/src/main/java/io/dataease/dto/datasource/PgConfiguration.java
Patch:
@@ -13,10 +13,11 @@ public class PgConfiguration extends JdbcConfiguration {
     private String extraParams = "";
     public String getJdbc() {
         if(StringUtils.isEmpty(extraParams.trim())){
-            return "jdbc:postgresql://HOSTNAME:PORT/DATABASE"
+            return "jdbc:postgresql://HOSTNAME:PORT/DATABASE?currentSchema=SCHEMA"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())
-                    .replace("DATABASE", getDataBase().trim());
+                    .replace("DATABASE", getDataBase().trim())
+                    .replace("SCHEMA", getSchema().trim());
         }else {
             return "jdbc:postgresql://HOSTNAME:PORT/DATABASE?EXTRA_PARAMS"
                     .replace("HOSTNAME", getHost().trim())

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -239,7 +239,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             request.setDatasetId(datasetId);
             request.setAuthTargetType("dept");
             List<Item> items = (List<Item>)columnPermissionService.authObjs(request);
-            if(items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
+            if(CollectionUtils.isNotEmpty(items) && items.stream().filter(item -> item != null).map(Item::getId).collect(Collectors.toList()).contains(deptId)){
                 dataSetColumnPermissionsDTO.setAuthTargetIds(Collections.singletonList(deptId));
                 dataSetColumnPermissionsDTO.setAuthTargetType("dept");
                 List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -355,6 +355,8 @@ public Map<String, String> applyViews(List<ChartViewWithBLOBs> chartViewsInfo, M
             });
             chartView.setId(null);
             chartView.setSceneId(sceneId);
+            chartView.setCreateBy(AuthUtils.getUser().getUsername());
+            chartView.setCreateTime(System.currentTimeMillis());
             ChartViewWithBLOBs newOne = chartViewService.newOne(chartView);
             chartViewsRealMap.put(oldViewId, newOne.getId());
         }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -531,6 +531,8 @@ public String newPanel(PanelGroupRequest request) {
                 chartView.setId(newViewId);
                 chartView.setSceneId(newPanelId);
                 chartView.setDataFrom(CommonConstants.VIEW_DATA_FROM.TEMPLATE);
+                chartView.setCreateBy(AuthUtils.getUser().getUsername());
+                chartView.setCreateTime(System.currentTimeMillis());
                 // 数据处理 1.替换viewId 2.加入panelView 数据(数据来源为template) 3.加入模板view data数据
                 templateData = templateData.replaceAll(originViewId, newViewId);
                 panelViews.add(new PanelViewInsertDTO(newViewId, newPanelId, position));

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -355,6 +355,8 @@ public Map<String, String> applyViews(List<ChartViewWithBLOBs> chartViewsInfo, M
             });
             chartView.setId(null);
             chartView.setSceneId(sceneId);
+            chartView.setCreateBy(AuthUtils.getUser().getUsername());
+            chartView.setCreateTime(System.currentTimeMillis());
             ChartViewWithBLOBs newOne = chartViewService.newOne(chartView);
             chartViewsRealMap.put(oldViewId, newOne.getId());
         }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -531,6 +531,8 @@ public String newPanel(PanelGroupRequest request) {
                 chartView.setId(newViewId);
                 chartView.setSceneId(newPanelId);
                 chartView.setDataFrom(CommonConstants.VIEW_DATA_FROM.TEMPLATE);
+                chartView.setCreateBy(AuthUtils.getUser().getUsername());
+                chartView.setCreateTime(System.currentTimeMillis());
                 // 数据处理 1.替换viewId 2.加入panelView 数据(数据来源为template) 3.加入模板view data数据
                 templateData = templateData.replaceAll(originViewId, newViewId);
                 panelViews.add(new PanelViewInsertDTO(newViewId, newPanelId, position));

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -355,6 +355,8 @@ public Map<String, String> applyViews(List<ChartViewWithBLOBs> chartViewsInfo, M
             });
             chartView.setId(null);
             chartView.setSceneId(sceneId);
+            chartView.setCreateBy(AuthUtils.getUser().getUsername());
+            chartView.setCreateTime(System.currentTimeMillis());
             ChartViewWithBLOBs newOne = chartViewService.newOne(chartView);
             chartViewsRealMap.put(oldViewId, newOne.getId());
         }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -531,6 +531,8 @@ public String newPanel(PanelGroupRequest request) {
                 chartView.setId(newViewId);
                 chartView.setSceneId(newPanelId);
                 chartView.setDataFrom(CommonConstants.VIEW_DATA_FROM.TEMPLATE);
+                chartView.setCreateBy(AuthUtils.getUser().getUsername());
+                chartView.setCreateTime(System.currentTimeMillis());
                 // 数据处理 1.替换viewId 2.加入panelView 数据(数据来源为template) 3.加入模板view data数据
                 templateData = templateData.replaceAll(originViewId, newViewId);
                 panelViews.add(new PanelViewInsertDTO(newViewId, newPanelId, position));

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -239,7 +239,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             request.setDatasetId(datasetId);
             request.setAuthTargetType("dept");
             List<Item> items = (List<Item>)columnPermissionService.authObjs(request);
-            if(CollectionUtils.isNotEmpty(items) && items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
+            if(CollectionUtils.isNotEmpty(items) && items.stream().filter(item -> item != null).map(Item::getId).collect(Collectors.toList()).contains(deptId)){
                 dataSetColumnPermissionsDTO.setAuthTargetIds(Collections.singletonList(deptId));
                 dataSetColumnPermissionsDTO.setAuthTargetType("dept");
                 List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -239,7 +239,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             request.setDatasetId(datasetId);
             request.setAuthTargetType("dept");
             List<Item> items = (List<Item>)columnPermissionService.authObjs(request);
-            if(CollectionUtils.isNotEmpty(items) && items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
+            if(CollectionUtils.isNotEmpty(items) && items.stream().filter(item -> item != null).map(Item::getId).collect(Collectors.toList()).contains(deptId)){
                 dataSetColumnPermissionsDTO.setAuthTargetIds(Collections.singletonList(deptId));
                 dataSetColumnPermissionsDTO.setAuthTargetType("dept");
                 List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -239,7 +239,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             request.setDatasetId(datasetId);
             request.setAuthTargetType("dept");
             List<Item> items = (List<Item>)columnPermissionService.authObjs(request);
-            if(items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
+            if(CollectionUtils.isNotEmpty(items) && items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
                 dataSetColumnPermissionsDTO.setAuthTargetIds(Collections.singletonList(deptId));
                 dataSetColumnPermissionsDTO.setAuthTargetType("dept");
                 List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -239,7 +239,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             request.setDatasetId(datasetId);
             request.setAuthTargetType("dept");
             List<Item> items = (List<Item>)columnPermissionService.authObjs(request);
-            if(items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
+            if(CollectionUtils.isNotEmpty(items) && items.stream().map(Item::getId).collect(Collectors.toList()).contains(deptId)){
                 dataSetColumnPermissionsDTO.setAuthTargetIds(Collections.singletonList(deptId));
                 dataSetColumnPermissionsDTO.setAuthTargetType("dept");
                 List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z-_.\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29\u2e80-\u9fff]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -60,6 +60,7 @@ public class OracleQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.split("\\(")[0];
         switch (field) {
             case "CHAR":
             case "VARCHAR2":

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z-_.\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29\u2e80-\u9fff]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z-_.\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29\u2e80-\u9fff]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -60,7 +60,7 @@ public class OracleQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
-        field = field.split("()")[0];
+        field = field.split("\\(")[0];
         switch (field) {
             case "CHAR":
             case "VARCHAR2":

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -60,7 +60,7 @@ public class OracleQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
-        field = field.split("()")[0];
+        field = field.split("\\(")[0];
         switch (field) {
             case "CHAR":
             case "VARCHAR2":

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -60,6 +60,7 @@ public class OracleQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.split("()")[0];
         switch (field) {
             case "CHAR":
             case "VARCHAR2":

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-\u4E00-\u9FA5\u8FBD-\u9FBB\uFA0E-\uFA29]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -60,6 +60,7 @@ public class OracleQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.split("()")[0];
         switch (field) {
             case "CHAR":
             case "VARCHAR2":

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -286,7 +286,7 @@ public void endElement(String uri, String localName, String name) throws SAXExce
                 preRef = "A" + curRow;
                 if (!preRef.equalsIgnoreCase(ref)) {
                     cellList.add(curCol, "");
-                    curCol++;
+//                    curCol++;
                 }
             }
 

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -112,6 +112,7 @@ public List<SysUserGridResponse> userLists(@RequestBody BaseGridRequest request)
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"create_time", "u.enabled", "nick_name", "u.dept_id"})
     public Pager<List<SysUserGridResponse>> userGrids(@PathVariable String datasetId, @RequestBody KeyGridRequest request) {
         return userGrid(0, 0, request);
     }

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -286,7 +286,7 @@ public void endElement(String uri, String localName, String name) throws SAXExce
                 preRef = "A" + curRow;
                 if (!preRef.equalsIgnoreCase(ref)) {
                     cellList.add(curCol, "");
-                    curCol++;
+//                    curCol++;
                 }
             }
 

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -286,7 +286,7 @@ public void endElement(String uri, String localName, String name) throws SAXExce
                 preRef = "A" + curRow;
                 if (!preRef.equalsIgnoreCase(ref)) {
                     cellList.add(curCol, "");
-                    curCol++;
+//                    curCol++;
                 }
             }
 

File: backend/src/main/java/io/dataease/controller/panel/AppLogController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
@@ -35,6 +36,7 @@ public class AppLogController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"apply_time"})
     public Pager<List<AppLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
                                               @RequestBody KeyGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/ext/ExtDataSourceMapper.java
Patch:
@@ -10,7 +10,7 @@
 
 public interface ExtDataSourceMapper {
 
-    List<DatasourceDTO> query(GridExample example);
+    // List<DatasourceDTO> query(GridExample example);
 
     List<DatasourceDTO> queryUnion(DatasourceUnionRequest request);
 

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -781,7 +781,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
-                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
+                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/controller/panel/AppLogController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
@@ -35,6 +36,7 @@ public class AppLogController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"apply_time"})
     public Pager<List<AppLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
                                               @RequestBody KeyGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/ext/ExtDataSourceMapper.java
Patch:
@@ -10,7 +10,7 @@
 
 public interface ExtDataSourceMapper {
 
-    List<DatasourceDTO> query(GridExample example);
+    // List<DatasourceDTO> query(GridExample example);
 
     List<DatasourceDTO> queryUnion(DatasourceUnionRequest request);
 

File: backend/src/main/java/io/dataease/controller/panel/AppLogController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
@@ -35,6 +36,7 @@ public class AppLogController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"apply_time"})
     public Pager<List<AppLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
                                               @RequestBody KeyGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/ext/ExtDataSourceMapper.java
Patch:
@@ -10,7 +10,7 @@
 
 public interface ExtDataSourceMapper {
 
-    List<DatasourceDTO> query(GridExample example);
+    // List<DatasourceDTO> query(GridExample example);
 
     List<DatasourceDTO> queryUnion(DatasourceUnionRequest request);
 

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -781,7 +781,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
-                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
+                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -781,7 +781,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
-                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
+                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_.-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;
@@ -796,7 +796,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case sqlServer:
                 SqlServerConfiguration sqlServerConfiguration = new Gson().fromJson(datasource.getConfiguration(), SqlServerConfiguration.class);
-                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!sqlServerConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -841,7 +841,7 @@ public String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeItem item)
 
         if (field.getDeType() == 1) {
             if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                whereName = String.format(DorisConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
+                whereName = String.format(DorisConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
             }
             if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                 String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
@@ -971,7 +971,7 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
 
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                    whereName = String.format(DorisConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
+                    whereName = String.format(DorisConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -841,7 +841,7 @@ public String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeItem item)
 
         if (field.getDeType() == 1) {
             if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                whereName = String.format(DorisConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
+                whereName = String.format(DorisConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
             }
             if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                 String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
@@ -971,7 +971,7 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
 
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                    whereName = String.format(DorisConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
+                    whereName = String.format(DorisConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : DorisConstants.DEFAULT_DATE_FORMAT);
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1065,7 +1065,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 if (field.getDeType() == 1) {
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                        String date = String.format(MySQLConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
+                        String date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         if(request.getOperator().equals("between")){
                             whereName = date;
                         }else {

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1065,7 +1065,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 if (field.getDeType() == 1) {
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                        String date = String.format(MySQLConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
+                        String date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         if(request.getOperator().equals("between")){
                             whereName = date;
                         }else {

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1065,7 +1065,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 if (field.getDeType() == 1) {
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                        String date = String.format(MySQLConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
+                        String date = String.format(MySQLConstants.DATE_FORMAT, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT);
                         if(request.getOperator().equals("between")){
                             whereName = date;
                         }else {

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -154,7 +154,6 @@ public void updateStatus(@RequestBody SysUserStateRequest request) {
     @ApiOperation("更新当前用户密码")
     @PostMapping("/updatePwd")
     public void updatePwd(@RequestBody SysUserPwdRequest request) {
-
         sysUserService.updatePwd(request);
     }
 

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -174,7 +174,7 @@ public ResponseEntity<ByteArrayResource> screenpdf(@RequestBody XpackReportExpor
             String currentToken = ServletUtils.getToken();
             Future<?> future = priorityExecutor.submit(() -> {
                 try {
-                    return emailXpackService.printPdf(url, currentToken, buildPixel(request.getPixel()), request.isShowPageNo());
+                    return emailXpackService.printPdf(url, currentToken, buildPixel(request.getPixel()), request.isShowPageNo(), false);
                 } catch (Exception e) {
                     LogUtil.error(e.getMessage(), e);
                     DEException.throwException("预览失败，请联系管理员");

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -383,6 +383,8 @@ public int updateStatus(SysUserStateRequest request) {
      */
     @CacheEvict(value = AuthConstants.USER_CACHE_NAME, key = "'user' + #request.userId")
     public int updatePwd(SysUserPwdRequest request) {
+        request.setPassword(new String(java.util.Base64.getDecoder().decode(request.getPassword())));
+        request.setNewPassword(new String(java.util.Base64.getDecoder().decode(request.getNewPassword())));
         CurrentUserDto user = AuthUtils.getUser();
 
         if (ObjectUtils.isEmpty(user)) {
@@ -407,7 +409,7 @@ public int updatePwd(SysUserPwdRequest request) {
     public int adminUpdatePwd(SysUserPwdRequest request) {
         SysUser sysUser = new SysUser();
         sysUser.setUserId(request.getUserId());
-        sysUser.setPassword(CodingUtil.md5(request.getNewPassword()));
+        sysUser.setPassword(CodingUtil.md5(new String(java.util.Base64.getDecoder().decode(request.getNewPassword()))));
         return sysUserMapper.updateByPrimaryKeySelective(sysUser);
     }
 

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -154,7 +154,6 @@ public void updateStatus(@RequestBody SysUserStateRequest request) {
     @ApiOperation("更新当前用户密码")
     @PostMapping("/updatePwd")
     public void updatePwd(@RequestBody SysUserPwdRequest request) {
-
         sysUserService.updatePwd(request);
     }
 

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -383,6 +383,8 @@ public int updateStatus(SysUserStateRequest request) {
      */
     @CacheEvict(value = AuthConstants.USER_CACHE_NAME, key = "'user' + #request.userId")
     public int updatePwd(SysUserPwdRequest request) {
+        request.setPassword(new String(java.util.Base64.getDecoder().decode(request.getPassword())));
+        request.setNewPassword(new String(java.util.Base64.getDecoder().decode(request.getNewPassword())));
         CurrentUserDto user = AuthUtils.getUser();
 
         if (ObjectUtils.isEmpty(user)) {
@@ -407,7 +409,7 @@ public int updatePwd(SysUserPwdRequest request) {
     public int adminUpdatePwd(SysUserPwdRequest request) {
         SysUser sysUser = new SysUser();
         sysUser.setUserId(request.getUserId());
-        sysUser.setPassword(CodingUtil.md5(request.getNewPassword()));
+        sysUser.setPassword(CodingUtil.md5(new String(java.util.Base64.getDecoder().decode(request.getNewPassword()))));
         return sysUserMapper.updateByPrimaryKeySelective(sysUser);
     }
 

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -154,7 +154,6 @@ public void updateStatus(@RequestBody SysUserStateRequest request) {
     @ApiOperation("更新当前用户密码")
     @PostMapping("/updatePwd")
     public void updatePwd(@RequestBody SysUserPwdRequest request) {
-
         sysUserService.updatePwd(request);
     }
 

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -383,6 +383,8 @@ public int updateStatus(SysUserStateRequest request) {
      */
     @CacheEvict(value = AuthConstants.USER_CACHE_NAME, key = "'user' + #request.userId")
     public int updatePwd(SysUserPwdRequest request) {
+        request.setPassword(new String(java.util.Base64.getDecoder().decode(request.getPassword())));
+        request.setNewPassword(new String(java.util.Base64.getDecoder().decode(request.getNewPassword())));
         CurrentUserDto user = AuthUtils.getUser();
 
         if (ObjectUtils.isEmpty(user)) {
@@ -407,7 +409,7 @@ public int updatePwd(SysUserPwdRequest request) {
     public int adminUpdatePwd(SysUserPwdRequest request) {
         SysUser sysUser = new SysUser();
         sysUser.setUserId(request.getUserId());
-        sysUser.setPassword(CodingUtil.md5(request.getNewPassword()));
+        sysUser.setPassword(CodingUtil.md5(new String(java.util.Base64.getDecoder().decode(request.getNewPassword()))));
         return sysUserMapper.updateByPrimaryKeySelective(sysUser);
     }
 

File: backend/src/main/java/io/dataease/commons/pool/PriorityThreadPoolExecutor.java
Patch:
@@ -8,7 +8,7 @@
 
 public class PriorityThreadPoolExecutor extends ThreadPoolExecutor {
 
-    public static AtomicInteger globaInteger = new AtomicInteger(1);
+    public static AtomicInteger globalInteger = new AtomicInteger(1);
 
     private ThreadLocal<Integer> local = new ThreadLocal<Integer>() {
         @Override
@@ -42,7 +42,7 @@ protected static PriorityBlockingQueue getWorkQueue() {
 
     @Override
     public void execute(Runnable command) {
-        int andIncrement = globaInteger.getAndIncrement();
+        int andIncrement = globalInteger.getAndIncrement();
         Integer theadInteger = local.get();
         try {
             if (theadInteger == 0) {

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -15,6 +15,7 @@
 import org.apache.commons.lang3.StringUtils;
 
 import org.apache.poi.ss.usermodel.*;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 
 
@@ -24,7 +25,7 @@ public class ExcelUtils {
 
     public static File exportExcel(List<ExcelSheetModel> sheets, String fileName, String folderId) throws Exception {
         AtomicReference<String> realFileName = new AtomicReference<>(fileName);
-        Workbook wb = new XSSFWorkbook();
+        Workbook wb = new SXSSFWorkbook();
 
         sheets.forEach(sheet -> {
 

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsReader.java
Patch:
@@ -7,6 +7,7 @@
 import org.apache.poi.hssf.eventusermodel.dummyrecord.LastCellOfRowDummyRecord;
 import org.apache.poi.hssf.eventusermodel.dummyrecord.MissingCellDummyRecord;
 import org.apache.poi.hssf.record.*;
+import org.apache.poi.hssf.record.Record;
 import org.apache.poi.hssf.usermodel.HSSFDataFormatter;
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.poifs.filesystem.POIFSFileSystem;

File: backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -66,8 +66,8 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
     @PostMapping("/search")
     public List<DeptNodeResponse> search(@RequestBody XpackGridRequest request){
         DeptXpackService deptService = SpringContextUtil.getBean(DeptXpackService.class);
-        List<XpackSysDept> ndoes = deptService.nodesTreeByCondition(request);
-        List<DeptNodeResponse> nodeResponses = ndoes.stream().map(node -> {
+        List<XpackSysDept> nodes = deptService.nodesTreeByCondition(request);
+        List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);
             deptNodeResponse.setHasChildren(node.getSubCount() > 0);
             deptNodeResponse.setLeaf(node.getSubCount() == 0);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -781,7 +781,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
-                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -1121,7 +1121,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
                 String keyword = value.get(0).toUpperCase();
                 whereValue = "'%" + keyword + "%'";
-                whereName = "upper(" + whereName + ")";
+                whereName = "UCASE(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -67,6 +67,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.poi.hssf.usermodel.HSSFDateUtil;
 import org.apache.poi.ss.usermodel.*;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -2964,7 +2965,7 @@ public void exportDataset(DataSetExportRequest request, HttpServletResponse resp
                 details.add(row);
             }
             // 操作Excel
-            Workbook wb = new XSSFWorkbook();
+            Workbook wb = new SXSSFWorkbook();
             // Sheet
             Sheet detailsSheet = wb.createSheet("数据");
             //给单元格设置样式

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -45,6 +45,7 @@
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.ss.usermodel.*;
 import org.apache.poi.ss.util.CellRangeAddress;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 import org.pentaho.di.core.util.UUIDUtil;
 import org.slf4j.Logger;
@@ -660,7 +661,7 @@ public void exportPanelViewDetails(PanelViewDetailsRequest request, HttpServletR
             Integer[] excelTypes = request.getExcelTypes();
             details.add(0, request.getHeader());
 
-            Workbook wb = new XSSFWorkbook();
+            Workbook wb = new SXSSFWorkbook();
             //明细sheet
             Sheet detailsSheet = wb.createSheet("数据");
 

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -1121,7 +1121,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
                 String keyword = value.get(0).toUpperCase();
                 whereValue = "'%" + keyword + "%'";
-                whereName = "upper(" + whereName + ")";
+                whereName = "UCASE(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -1121,7 +1121,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
                 String keyword = value.get(0).toUpperCase();
                 whereValue = "'%" + keyword + "%'";
-                whereName = "upper(" + whereName + ")";
+                whereName = "UCASE(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/commons/pool/PriorityThreadPoolExecutor.java
Patch:
@@ -8,7 +8,7 @@
 
 public class PriorityThreadPoolExecutor extends ThreadPoolExecutor {
 
-    public static AtomicInteger globaInteger = new AtomicInteger(1);
+    public static AtomicInteger globalInteger = new AtomicInteger(1);
 
     private ThreadLocal<Integer> local = new ThreadLocal<Integer>() {
         @Override
@@ -42,7 +42,7 @@ protected static PriorityBlockingQueue getWorkQueue() {
 
     @Override
     public void execute(Runnable command) {
-        int andIncrement = globaInteger.getAndIncrement();
+        int andIncrement = globalInteger.getAndIncrement();
         Integer theadInteger = local.get();
         try {
             if (theadInteger == 0) {

File: backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -66,8 +66,8 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
     @PostMapping("/search")
     public List<DeptNodeResponse> search(@RequestBody XpackGridRequest request){
         DeptXpackService deptService = SpringContextUtil.getBean(DeptXpackService.class);
-        List<XpackSysDept> ndoes = deptService.nodesTreeByCondition(request);
-        List<DeptNodeResponse> nodeResponses = ndoes.stream().map(node -> {
+        List<XpackSysDept> nodes = deptService.nodesTreeByCondition(request);
+        List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);
             deptNodeResponse.setHasChildren(node.getSubCount() > 0);
             deptNodeResponse.setLeaf(node.getSubCount() == 0);

File: backend/src/main/java/io/dataease/commons/pool/PriorityThreadPoolExecutor.java
Patch:
@@ -8,7 +8,7 @@
 
 public class PriorityThreadPoolExecutor extends ThreadPoolExecutor {
 
-    public static AtomicInteger globaInteger = new AtomicInteger(1);
+    public static AtomicInteger globalInteger = new AtomicInteger(1);
 
     private ThreadLocal<Integer> local = new ThreadLocal<Integer>() {
         @Override
@@ -42,7 +42,7 @@ protected static PriorityBlockingQueue getWorkQueue() {
 
     @Override
     public void execute(Runnable command) {
-        int andIncrement = globaInteger.getAndIncrement();
+        int andIncrement = globalInteger.getAndIncrement();
         Integer theadInteger = local.get();
         try {
             if (theadInteger == 0) {

File: backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -66,8 +66,8 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
     @PostMapping("/search")
     public List<DeptNodeResponse> search(@RequestBody XpackGridRequest request){
         DeptXpackService deptService = SpringContextUtil.getBean(DeptXpackService.class);
-        List<XpackSysDept> ndoes = deptService.nodesTreeByCondition(request);
-        List<DeptNodeResponse> nodeResponses = ndoes.stream().map(node -> {
+        List<XpackSysDept> nodes = deptService.nodesTreeByCondition(request);
+        List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {
             DeptNodeResponse deptNodeResponse = BeanUtils.copyBean(new DeptNodeResponse(), node);
             deptNodeResponse.setHasChildren(node.getSubCount() > 0);
             deptNodeResponse.setLeaf(node.getSubCount() == 0);

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -15,6 +15,7 @@
 import org.apache.commons.lang3.StringUtils;
 
 import org.apache.poi.ss.usermodel.*;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 
 
@@ -24,7 +25,7 @@ public class ExcelUtils {
 
     public static File exportExcel(List<ExcelSheetModel> sheets, String fileName, String folderId) throws Exception {
         AtomicReference<String> realFileName = new AtomicReference<>(fileName);
-        Workbook wb = new XSSFWorkbook();
+        Workbook wb = new SXSSFWorkbook();
 
         sheets.forEach(sheet -> {
 

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsReader.java
Patch:
@@ -7,6 +7,7 @@
 import org.apache.poi.hssf.eventusermodel.dummyrecord.LastCellOfRowDummyRecord;
 import org.apache.poi.hssf.eventusermodel.dummyrecord.MissingCellDummyRecord;
 import org.apache.poi.hssf.record.*;
+import org.apache.poi.hssf.record.Record;
 import org.apache.poi.hssf.usermodel.HSSFDataFormatter;
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.poifs.filesystem.POIFSFileSystem;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -781,7 +781,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
-                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -67,6 +67,7 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.poi.hssf.usermodel.HSSFDateUtil;
 import org.apache.poi.ss.usermodel.*;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -2964,7 +2965,7 @@ public void exportDataset(DataSetExportRequest request, HttpServletResponse resp
                 details.add(row);
             }
             // 操作Excel
-            Workbook wb = new XSSFWorkbook();
+            Workbook wb = new SXSSFWorkbook();
             // Sheet
             Sheet detailsSheet = wb.createSheet("数据");
             //给单元格设置样式

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -45,6 +45,7 @@
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.ss.usermodel.*;
 import org.apache.poi.ss.util.CellRangeAddress;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 import org.pentaho.di.core.util.UUIDUtil;
 import org.slf4j.Logger;
@@ -660,7 +661,7 @@ public void exportPanelViewDetails(PanelViewDetailsRequest request, HttpServletR
             Integer[] excelTypes = request.getExcelTypes();
             details.add(0, request.getHeader());
 
-            Workbook wb = new XSSFWorkbook();
+            Workbook wb = new SXSSFWorkbook();
             //明细sheet
             Sheet detailsSheet = wb.createSheet("数据");
 

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -781,7 +781,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
-                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!mysqlConfiguration.getDataBase().matches("^[0-9a-zA-Z_-]{1,}$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1074,7 +1074,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 if (field.getDeType() == 1) {
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                        whereName = String.format(DorisConstants.STR_TO_DATE, originName, format);
+                        whereName = String.format(DorisConstants.DATE_FORMAT, originName, format);
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                         String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
@@ -1115,7 +1115,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(DorisConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1074,7 +1074,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 if (field.getDeType() == 1) {
                     String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
-                        whereName = String.format(DorisConstants.STR_TO_DATE, originName, format);
+                        whereName = String.format(DorisConstants.DATE_FORMAT, originName, format);
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                         String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
@@ -1115,7 +1115,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(DorisConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -808,7 +808,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case oracle:
                 OracleConfiguration oracleConfiguration = new Gson().fromJson(datasource.getConfiguration(), OracleConfiguration.class);
-                if(!oracleConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!oracleConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$") && !oracleConfiguration.getConnectionType().equalsIgnoreCase("serviceName")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -808,7 +808,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 break;
             case oracle:
                 OracleConfiguration oracleConfiguration = new Gson().fromJson(datasource.getConfiguration(), OracleConfiguration.class);
-                if(!oracleConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$")){
+                if(!oracleConfiguration.getDataBase().matches("^[0-9a-zA-Z_]{1,}$") && !oracleConfiguration.getConnectionType().equalsIgnoreCase("serviceName")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1158,11 +1158,11 @@ private String transDateFormat(String dateStyle, String datePattern) {
             case "y":
                 return "%Y";
             case "y_Q":
-                return "CONCAT(%s,'" + split + "',%s)";
+                return "CONCAT(%s,'" + split + "','Q',%s)";
             case "y_M":
                 return "%Y" + split + "%m";
             case "y_W":
-                return "%Y" + split + "%u";
+                return "%Y" + split + "W%u";
             case "y_M_d":
                 return "%Y" + split + "%m" + split + "%d";
             case "H_m_s":

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -1145,11 +1145,11 @@ private String transDateFormat(String dateStyle, String datePattern) {
             case "y":
                 return "%Y";
             case "y_Q":
-                return "CONCAT(%s,'" + split + "',%s)";
+                return "CONCAT(%s,'" + split + "','Q',%s)";
             case "y_M":
                 return "%Y" + split + "%m";
             case "y_W":
-                return "%Y" + split + "%u";
+                return "%Y" + split + "W%u";
             case "y_M_d":
                 return "%Y" + split + "%m" + split + "%d";
             case "H_m_s":

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1178,11 +1178,11 @@ private String transDateFormat(String dateStyle, String datePattern) {
             case "y":
                 return "%Y";
             case "y_Q":
-                return "CONCAT(%s,'" + split + "',%s)";
+                return "CONCAT(%s,'" + split + "','Q',%s)";
             case "y_M":
                 return "%Y" + split + "%m";
             case "y_W":
-                return "%Y" + split + "%u";
+                return "%Y" + split + "W%u";
             case "y_M_d":
                 return "%Y" + split + "%m" + split + "%d";
             case "H_m_s":

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1089,7 +1089,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                                         String.format(MysqlConstants.DATE_FORMAT, cast, "%Y"),
                                         String.format(MysqlConstants.QUARTER, String.format(MysqlConstants.DATE_FORMAT, field, MysqlConstants.DEFAULT_DATE_FORMAT)));
                             } else {
-                                whereName = String.format(MySQLConstants.DATE_FORMAT, cast, format);
+                                whereName = String.format(MySQLConstants.FROM_UNIXTIME, cast, format);
                             }
                         }
                     }

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1089,7 +1089,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                                         String.format(MysqlConstants.DATE_FORMAT, cast, "%Y"),
                                         String.format(MysqlConstants.QUARTER, String.format(MysqlConstants.DATE_FORMAT, field, MysqlConstants.DEFAULT_DATE_FORMAT)));
                             } else {
-                                whereName = String.format(MySQLConstants.DATE_FORMAT, cast, format);
+                                whereName = String.format(MySQLConstants.FROM_UNIXTIME, cast, format);
                             }
                         }
                     }

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1208,14 +1208,14 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                 if (field.getDeType() == 1) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if(!request.getOperator().equals("between")){
                             whereName = String.format(OracleConstants.TO_CHAR, String.format(OracleConstants.TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : OracleConstants.DEFAULT_DATE_FORMAT), format);
                         }else {
                             whereName = String.format(OracleConstants.TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : OracleConstants.DEFAULT_DATE_FORMAT);
                         }
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if(!request.getOperator().equals("between")){
                             String cast = String.format(OracleConstants.CAST, originName, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                             whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, format);
                         }else {
@@ -1224,7 +1224,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         }
                     }
                     if (field.getDeExtractType() == 1) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if(!request.getOperator().equals("between")){
                             whereName = String.format(OracleConstants.TO_CHAR, originName, format);
                         }else {
                             whereName = originName;

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1098,14 +1098,14 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
 
                 if (field.getDeType() == 1) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if (!StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                             whereName = transDateFormat(request.getDateStyle(), request.getDatePattern(), String.format(SqlServerSQLConstants.STRING_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : SqlServerSQLConstants.DEFAULT_DATE_FORMAT));
                         }else {
                             whereName = String.format(SqlServerSQLConstants.STRING_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : SqlServerSQLConstants.DEFAULT_DATE_FORMAT);
                         }
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if (!StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                             String cast = String.format(SqlServerSQLConstants.LONG_TO_DATE, originName + "/1000");
                             whereName = transDateFormat(request.getDateStyle(), request.getDatePattern(), cast);
                         }else {
@@ -1114,7 +1114,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         }
                     }
                     if (field.getDeExtractType() == 1) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if (!StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                             whereName = transDateFormat(request.getDateStyle(), request.getDatePattern(), originName);
                         }else {
                             whereName = originName;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1208,14 +1208,14 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 String format = transDateFormat(request.getDateStyle(), request.getDatePattern());
                 if (field.getDeType() == 1) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if(!request.getOperator().equals("between")){
                             whereName = String.format(OracleConstants.TO_CHAR, String.format(OracleConstants.TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : OracleConstants.DEFAULT_DATE_FORMAT), format);
                         }else {
                             whereName = String.format(OracleConstants.TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : OracleConstants.DEFAULT_DATE_FORMAT);
                         }
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if(!request.getOperator().equals("between")){
                             String cast = String.format(OracleConstants.CAST, originName, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                             whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, format);
                         }else {
@@ -1224,7 +1224,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         }
                     }
                     if (field.getDeExtractType() == 1) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if(!request.getOperator().equals("between")){
                             whereName = String.format(OracleConstants.TO_CHAR, originName, format);
                         }else {
                             whereName = originName;

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1098,14 +1098,14 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
 
                 if (field.getDeType() == 1) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if (!StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                             whereName = transDateFormat(request.getDateStyle(), request.getDatePattern(), String.format(SqlServerSQLConstants.STRING_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : SqlServerSQLConstants.DEFAULT_DATE_FORMAT));
                         }else {
                             whereName = String.format(SqlServerSQLConstants.STRING_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : SqlServerSQLConstants.DEFAULT_DATE_FORMAT);
                         }
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if (!StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                             String cast = String.format(SqlServerSQLConstants.LONG_TO_DATE, originName + "/1000");
                             whereName = transDateFormat(request.getDateStyle(), request.getDatePattern(), cast);
                         }else {
@@ -1114,7 +1114,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         }
                     }
                     if (field.getDeExtractType() == 1) {
-                        if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
+                        if (!StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                             whereName = transDateFormat(request.getDateStyle(), request.getDatePattern(), originName);
                         }else {
                             whereName = originName;

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -131,6 +131,9 @@ public List<SysMsgChannel> channelList() {
             if (msgChannelId == 5L) {
                 return authUserService.supportLark();
             }
+            if (msgChannelId == 6L) {
+                return authUserService.supportLarksuite();
+            }
             return true;
         }).collect(Collectors.toList());
     }

File: backend/src/main/java/io/dataease/ext/ExtPanelGroupMapper.java
Patch:
@@ -17,6 +17,8 @@ public interface ExtPanelGroupMapper {
     //会级联删除pid 下的所有数据
     int deleteCircle(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
+    int deleteLinkDefaultCircle(@Param("pid") String pid);
+
     int deleteCircleView(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
     int deleteCircleViewCache(@Param("pid") String pid, @Param("nodeType") String nodeType);

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1109,7 +1109,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -1096,7 +1096,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     if (request.getDatasetTableField().getDeExtractType() == 2

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -1169,7 +1169,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                     whereValue = "('" + StringUtils.join(value, "','") + "')";
                 }
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -1119,7 +1119,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -1075,7 +1075,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -1077,7 +1077,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                     whereValue = "('" + StringUtils.join(value, "','") + "')";
                 }
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -979,7 +979,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1104,7 +1104,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     if (request.getDatasetTableField().getDeExtractType() == 2

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1259,7 +1259,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -1127,7 +1127,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -1108,7 +1108,9 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             if (StringUtils.containsIgnoreCase(request.getOperator(), "in")) {
                 whereValue = "('" + StringUtils.join(value, "','") + "')";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "like")) {
-                whereValue = "'%" + value.get(0) + "%'";
+                String keyword = value.get(0).toUpperCase();
+                whereValue = "'%" + keyword + "%'";
+                whereName = "upper(" + whereName + ")";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -305,6 +305,7 @@ public void deleteCircle(String id) {
         extPanelGroupMapper.deleteCircleView(id, nodeType);
         extPanelGroupMapper.deleteCircleViewCache(id, nodeType);
         // 同时会删除对应默认仪表盘
+        extPanelGroupMapper.deleteLinkDefaultCircle(id);
         extPanelGroupMapper.deleteCircle(id, nodeType);
         storeService.removeByPanelId(id);
         shareService.delete(id, null);

File: backend/src/main/java/io/dataease/ext/ExtPanelGroupMapper.java
Patch:
@@ -17,6 +17,8 @@ public interface ExtPanelGroupMapper {
     //会级联删除pid 下的所有数据
     int deleteCircle(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
+    int deleteLinkDefaultCircle(@Param("pid") String pid);
+
     int deleteCircleView(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
     int deleteCircleViewCache(@Param("pid") String pid, @Param("nodeType") String nodeType);

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -305,6 +305,7 @@ public void deleteCircle(String id) {
         extPanelGroupMapper.deleteCircleView(id, nodeType);
         extPanelGroupMapper.deleteCircleViewCache(id, nodeType);
         // 同时会删除对应默认仪表盘
+        extPanelGroupMapper.deleteLinkDefaultCircle(id);
         extPanelGroupMapper.deleteCircle(id, nodeType);
         storeService.removeByPanelId(id);
         shareService.delete(id, null);

File: backend/src/main/java/io/dataease/ext/ExtPanelGroupMapper.java
Patch:
@@ -17,6 +17,8 @@ public interface ExtPanelGroupMapper {
     //会级联删除pid 下的所有数据
     int deleteCircle(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
+    int deleteLinkDefaultCircle(@Param("pid") String pid);
+
     int deleteCircleView(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
     int deleteCircleViewCache(@Param("pid") String pid, @Param("nodeType") String nodeType);

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -305,6 +305,7 @@ public void deleteCircle(String id) {
         extPanelGroupMapper.deleteCircleView(id, nodeType);
         extPanelGroupMapper.deleteCircleViewCache(id, nodeType);
         // 同时会删除对应默认仪表盘
+        extPanelGroupMapper.deleteLinkDefaultCircle(id);
         extPanelGroupMapper.deleteCircle(id, nodeType);
         storeService.removeByPanelId(id);
         shareService.delete(id, null);

File: backend/src/main/java/io/dataease/ext/ExtPanelGroupMapper.java
Patch:
@@ -17,6 +17,8 @@ public interface ExtPanelGroupMapper {
     //会级联删除pid 下的所有数据
     int deleteCircle(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
+    int deleteLinkDefaultCircle(@Param("pid") String pid);
+
     int deleteCircleView(@Param("pid") String pid, @Param("nodeType") String nodeType);
 
     int deleteCircleViewCache(@Param("pid") String pid, @Param("nodeType") String nodeType);

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -305,6 +305,7 @@ public void deleteCircle(String id) {
         extPanelGroupMapper.deleteCircleView(id, nodeType);
         extPanelGroupMapper.deleteCircleViewCache(id, nodeType);
         // 同时会删除对应默认仪表盘
+        extPanelGroupMapper.deleteLinkDefaultCircle(id);
         extPanelGroupMapper.deleteCircle(id, nodeType);
         storeService.removeByPanelId(id);
         shareService.delete(id, null);

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -131,6 +131,9 @@ public List<SysMsgChannel> channelList() {
             if (msgChannelId == 5L) {
                 return authUserService.supportLark();
             }
+            if (msgChannelId == 6L) {
+                return authUserService.supportLarksuite();
+            }
             return true;
         }).collect(Collectors.toList());
     }

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -131,6 +131,9 @@ public List<SysMsgChannel> channelList() {
             if (msgChannelId == 5L) {
                 return authUserService.supportLark();
             }
+            if (msgChannelId == 6L) {
+                return authUserService.supportLarksuite();
+            }
             return true;
         }).collect(Collectors.toList());
     }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -657,8 +657,8 @@ public String getTablesSql(DatasourceRequest datasourceRequest) throws Exception
                 if (StringUtils.isEmpty(oracleConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select table_name, owner, comments from all_tab_comments where owner='OWNER' AND table_type = 'TABLE' AND table_name in (select table_name from all_tables where owner='OWNER')".replaceAll("OWNER", oracleConfiguration.getSchema());
-            case pg:
+                return "select table_name, owner, comments from all_tab_comments where owner='" + oracleConfiguration.getSchema() + "' AND table_type = 'TABLE'";
+      case pg:
                 PgConfiguration pgConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), PgConfiguration.class);
                 if (StringUtils.isEmpty(pgConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -657,8 +657,8 @@ public String getTablesSql(DatasourceRequest datasourceRequest) throws Exception
                 if (StringUtils.isEmpty(oracleConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select table_name, owner, comments from all_tab_comments where owner='OWNER' AND table_type = 'TABLE' AND table_name in (select table_name from all_tables where owner='OWNER')".replaceAll("OWNER", oracleConfiguration.getSchema());
-            case pg:
+                return "select table_name, owner, comments from all_tab_comments where owner='" + oracleConfiguration.getSchema() + "' AND table_type = 'TABLE'";
+      case pg:
                 PgConfiguration pgConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), PgConfiguration.class);
                 if (StringUtils.isEmpty(pgConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));

File: backend/src/main/java/io/dataease/ext/ExtSysMsgMapper.java
Patch:
@@ -19,9 +19,10 @@ public interface ExtSysMsgMapper {
             "<foreach collection='msgIds' item='msgId' open='(' separator=',' close=')' >",
             " #{msgId}",
             "</foreach>",
+            " and user_id = #{uid}",
             "</script>"
     })
-    int batchStatus(@Param("msgIds") List<Long> msgIds, @Param("time") Long time);
+    int batchStatus(@Param("msgIds") List<Long> msgIds, @Param("time") Long time, @Param("uid") Long uid);
 
     @Delete({
             "<script>",

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -1,16 +1,16 @@
 package io.dataease.service.message;
 
-import io.dataease.commons.utils.LogUtil;
-import io.dataease.ext.ExtSysMsgMapper;
 import io.dataease.commons.constants.SysMsgConstants;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.CommonBeanFactory;
+import io.dataease.commons.utils.LogUtil;
 import io.dataease.controller.sys.request.BatchSettingRequest;
 import io.dataease.controller.sys.request.MsgRequest;
 import io.dataease.controller.sys.request.MsgSettingRequest;
 import io.dataease.controller.sys.response.MsgGridDto;
 import io.dataease.controller.sys.response.SettingTreeNode;
 import io.dataease.controller.sys.response.SubscribeNode;
+import io.dataease.ext.ExtSysMsgMapper;
 import io.dataease.plugins.common.base.domain.*;
 import io.dataease.plugins.common.base.mapper.SysMsgChannelMapper;
 import io.dataease.plugins.common.base.mapper.SysMsgMapper;
@@ -105,7 +105,7 @@ public void setRead(Long msgId) {
     }
 
     public void setBatchRead(List<Long> msgIds) {
-        extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis());
+        extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis(), AuthUtils.getUser().getUserId());
     }
 
     public void batchDelete(List<Long> msgIds) {

File: backend/src/main/java/io/dataease/ext/ExtSysMsgMapper.java
Patch:
@@ -19,9 +19,10 @@ public interface ExtSysMsgMapper {
             "<foreach collection='msgIds' item='msgId' open='(' separator=',' close=')' >",
             " #{msgId}",
             "</foreach>",
+            " and user_id = #{uid}",
             "</script>"
     })
-    int batchStatus(@Param("msgIds") List<Long> msgIds, @Param("time") Long time);
+    int batchStatus(@Param("msgIds") List<Long> msgIds, @Param("time") Long time, @Param("uid") Long uid);
 
     @Delete({
             "<script>",

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -1,16 +1,16 @@
 package io.dataease.service.message;
 
-import io.dataease.commons.utils.LogUtil;
-import io.dataease.ext.ExtSysMsgMapper;
 import io.dataease.commons.constants.SysMsgConstants;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.CommonBeanFactory;
+import io.dataease.commons.utils.LogUtil;
 import io.dataease.controller.sys.request.BatchSettingRequest;
 import io.dataease.controller.sys.request.MsgRequest;
 import io.dataease.controller.sys.request.MsgSettingRequest;
 import io.dataease.controller.sys.response.MsgGridDto;
 import io.dataease.controller.sys.response.SettingTreeNode;
 import io.dataease.controller.sys.response.SubscribeNode;
+import io.dataease.ext.ExtSysMsgMapper;
 import io.dataease.plugins.common.base.domain.*;
 import io.dataease.plugins.common.base.mapper.SysMsgChannelMapper;
 import io.dataease.plugins.common.base.mapper.SysMsgMapper;
@@ -105,7 +105,7 @@ public void setRead(Long msgId) {
     }
 
     public void setBatchRead(List<Long> msgIds) {
-        extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis());
+        extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis(), AuthUtils.getUser().getUserId());
     }
 
     public void batchDelete(List<Long> msgIds) {

File: backend/src/main/java/io/dataease/ext/ExtSysMsgMapper.java
Patch:
@@ -29,9 +29,10 @@ public interface ExtSysMsgMapper {
             "<foreach collection='msgIds' item='msgId' open='(' separator=',' close=')' >",
             " #{msgId}",
             "</foreach>",
+            " and user_id = #{uid} ",
             "</script>"
     })
-    int batchDelete(@Param("msgIds") List<Long> msgIds);
+    int batchDelete(@Param("msgIds") List<Long> msgIds, @Param("uid") Long uid);
 
     int batchInsert(@Param("settings") List<SysMsgSetting> settings);
 

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -109,7 +109,7 @@ public void setBatchRead(List<Long> msgIds) {
     }
 
     public void batchDelete(List<Long> msgIds) {
-        extSysMsgMapper.batchDelete(msgIds);
+        extSysMsgMapper.batchDelete(msgIds, AuthUtils.getUser().getUserId());
     }
 
     public void save(SysMsg sysMsg) {

File: backend/src/main/java/io/dataease/ext/ExtSysMsgMapper.java
Patch:
@@ -29,9 +29,10 @@ public interface ExtSysMsgMapper {
             "<foreach collection='msgIds' item='msgId' open='(' separator=',' close=')' >",
             " #{msgId}",
             "</foreach>",
+            " and user_id = #{uid} ",
             "</script>"
     })
-    int batchDelete(@Param("msgIds") List<Long> msgIds);
+    int batchDelete(@Param("msgIds") List<Long> msgIds, @Param("uid") Long uid);
 
     int batchInsert(@Param("settings") List<SysMsgSetting> settings);
 

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -109,7 +109,7 @@ public void setBatchRead(List<Long> msgIds) {
     }
 
     public void batchDelete(List<Long> msgIds) {
-        extSysMsgMapper.batchDelete(msgIds);
+        extSysMsgMapper.batchDelete(msgIds, AuthUtils.getUser().getUserId());
     }
 
     public void save(SysMsg sysMsg) {

File: backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -56,6 +56,7 @@ public interface ShareApi {
     @PostMapping("/removeShares")
     void removeShares(PanelShareRemoveRequest request);
 
+    @DePermission(type = DePermissionType.PANEL)
     @ApiOperation("删除仪表板所有分享")
     @PostMapping("/removePanelShares/{panelId}")
     void removePanelShares(@PathVariable("panelId") String panelId);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -787,7 +787,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 if(redshiftConfiguration.getDataBase().length() > 64 || redshiftConfiguration.getDataBase().length() < 1){
                     throw new Exception("Invalid database name");
                 }
-                if(!redshiftConfiguration.getDataBase().matches("\"^[a-z][a-z0-9_+.@-]*$\"")){
+                if(!redshiftConfiguration.getDataBase().matches("^[a-z][a-z0-9_+.@-]*$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlDDLProvider.java
Patch:
@@ -20,7 +20,7 @@ public class MysqlDDLProvider extends DDLProviderImpl {
 
     private static final String creatTableSql =
             "CREATE TABLE IF NOT EXISTS `TABLE_NAME`" +
-            "Column_Fields;" ;
+            "Column_Fields" + " ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_general_ci;" ;
 
 
     @Override

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1122,8 +1122,7 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
             SelectBody selectBody = ((SubSelect) fromItem).getSelectBody();
             SubSelect subSelect = new SubSelect();
             Select subSelectTmp = (Select) CCJSqlParserUtil.parse(removeVariables(selectBody.toString(), dsType));
-            PlainSelect subPlainSelect = ((PlainSelect) subSelectTmp.getSelectBody());
-            subSelect.setSelectBody(subPlainSelect);
+            subSelect.setSelectBody(subSelectTmp.getSelectBody());
             if (dsType.equals(DatasourceTypes.oracle.getType())) {
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString(), false));
             } else {
@@ -1280,7 +1279,6 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest, boole
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);
-
         Map<String, List> result;
         try {
             datasetSqlLog.setStartTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/service/engine/EngineService.java
Patch:
@@ -227,6 +227,9 @@ public void initSimpleEngine() {
         mysqlConfiguration.setPort(Integer.valueOf(matcher.group(2)));
         mysqlConfiguration.setDataBase(matcher.group(3).split("\\?")[0]);
         mysqlConfiguration.setExtraParams(matcher.group(3).split("\\?")[1]);
+        if(StringUtils.isNotEmpty(mysqlConfiguration.getExtraParams()) && !mysqlConfiguration.getExtraParams().contains("connectionCollation")){
+            mysqlConfiguration.setExtraParams(mysqlConfiguration.getExtraParams() + "&connectionCollation=utf8mb4_general_ci");
+        }
         mysqlConfiguration.setUsername(env.getProperty("spring.datasource.username"));
         mysqlConfiguration.setPassword(env.getProperty("spring.datasource.password"));
         engine.setConfiguration(new Gson().toJson(mysqlConfiguration));

File: backend/src/main/java/io/dataease/service/engine/EngineService.java
Patch:
@@ -227,6 +227,9 @@ public void initSimpleEngine() {
         mysqlConfiguration.setPort(Integer.valueOf(matcher.group(2)));
         mysqlConfiguration.setDataBase(matcher.group(3).split("\\?")[0]);
         mysqlConfiguration.setExtraParams(matcher.group(3).split("\\?")[1]);
+        if(StringUtils.isNotEmpty(mysqlConfiguration.getExtraParams()) && !mysqlConfiguration.getExtraParams().contains("connectionCollation")){
+            mysqlConfiguration.setExtraParams(mysqlConfiguration.getExtraParams() + "&connectionCollation=utf8mb4_general_ci");
+        }
         mysqlConfiguration.setUsername(env.getProperty("spring.datasource.username"));
         mysqlConfiguration.setPassword(env.getProperty("spring.datasource.password"));
         engine.setConfiguration(new Gson().toJson(mysqlConfiguration));

File: backend/src/main/java/io/dataease/service/engine/EngineService.java
Patch:
@@ -227,6 +227,9 @@ public void initSimpleEngine() {
         mysqlConfiguration.setPort(Integer.valueOf(matcher.group(2)));
         mysqlConfiguration.setDataBase(matcher.group(3).split("\\?")[0]);
         mysqlConfiguration.setExtraParams(matcher.group(3).split("\\?")[1]);
+        if(StringUtils.isNotEmpty(mysqlConfiguration.getExtraParams()) && !mysqlConfiguration.getExtraParams().contains("connectionCollation")){
+            mysqlConfiguration.setExtraParams(mysqlConfiguration.getExtraParams() + "&connectionCollation=utf8mb4_general_ci");
+        }
         mysqlConfiguration.setUsername(env.getProperty("spring.datasource.username"));
         mysqlConfiguration.setPassword(env.getProperty("spring.datasource.password"));
         engine.setConfiguration(new Gson().toJson(mysqlConfiguration));

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlDDLProvider.java
Patch:
@@ -20,7 +20,7 @@ public class MysqlDDLProvider extends DDLProviderImpl {
 
     private static final String creatTableSql =
             "CREATE TABLE IF NOT EXISTS `TABLE_NAME`" +
-            "Column_Fields;" ;
+            "Column_Fields" + " ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_general_ci;" ;
 
 
     @Override

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlDDLProvider.java
Patch:
@@ -20,7 +20,7 @@ public class MysqlDDLProvider extends DDLProviderImpl {
 
     private static final String creatTableSql =
             "CREATE TABLE IF NOT EXISTS `TABLE_NAME`" +
-            "Column_Fields;" ;
+            "Column_Fields" + " ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_general_ci;" ;
 
 
     @Override

File: backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -56,6 +56,7 @@ public interface ShareApi {
     @PostMapping("/removeShares")
     void removeShares(PanelShareRemoveRequest request);
 
+    @DePermission(type = DePermissionType.PANEL)
     @ApiOperation("删除仪表板所有分享")
     @PostMapping("/removePanelShares/{panelId}")
     void removePanelShares(@PathVariable("panelId") String panelId);

File: backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -56,6 +56,7 @@ public interface ShareApi {
     @PostMapping("/removeShares")
     void removeShares(PanelShareRemoveRequest request);
 
+    @DePermission(type = DePermissionType.PANEL)
     @ApiOperation("删除仪表板所有分享")
     @PostMapping("/removePanelShares/{panelId}")
     void removePanelShares(@PathVariable("panelId") String panelId);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1279,7 +1279,6 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest, boole
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);
-        System.out.println(sqlAsTable);
         Map<String, List> result;
         try {
             datasetSqlLog.setStartTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -787,7 +787,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 if(redshiftConfiguration.getDataBase().length() > 64 || redshiftConfiguration.getDataBase().length() < 1){
                     throw new Exception("Invalid database name");
                 }
-                if(!redshiftConfiguration.getDataBase().matches("\"^[a-z][a-z0-9_+.@-]*$\"")){
+                if(!redshiftConfiguration.getDataBase().matches("^[a-z][a-z0-9_+.@-]*$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1122,8 +1122,7 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
             SelectBody selectBody = ((SubSelect) fromItem).getSelectBody();
             SubSelect subSelect = new SubSelect();
             Select subSelectTmp = (Select) CCJSqlParserUtil.parse(removeVariables(selectBody.toString(), dsType));
-            PlainSelect subPlainSelect = ((PlainSelect) subSelectTmp.getSelectBody());
-            subSelect.setSelectBody(subPlainSelect);
+            subSelect.setSelectBody(subSelectTmp.getSelectBody());
             if (dsType.equals(DatasourceTypes.oracle.getType())) {
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString(), false));
             } else {
@@ -1280,7 +1279,7 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest, boole
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);
-
+        System.out.println(sqlAsTable);
         Map<String, List> result;
         try {
             datasetSqlLog.setStartTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1122,8 +1122,7 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
             SelectBody selectBody = ((SubSelect) fromItem).getSelectBody();
             SubSelect subSelect = new SubSelect();
             Select subSelectTmp = (Select) CCJSqlParserUtil.parse(removeVariables(selectBody.toString(), dsType));
-            PlainSelect subPlainSelect = ((PlainSelect) subSelectTmp.getSelectBody());
-            subSelect.setSelectBody(subPlainSelect);
+            subSelect.setSelectBody(subSelectTmp.getSelectBody());
             if (dsType.equals(DatasourceTypes.oracle.getType())) {
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString(), false));
             } else {
@@ -1280,7 +1279,7 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest, boole
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);
-
+        System.out.println(sqlAsTable);
         Map<String, List> result;
         try {
             datasetSqlLog.setStartTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -787,7 +787,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 if(redshiftConfiguration.getDataBase().length() > 64 || redshiftConfiguration.getDataBase().length() < 1){
                     throw new Exception("Invalid database name");
                 }
-                if(!redshiftConfiguration.getDataBase().matches("\"^[a-z][a-z0-9_+.@-]*$\"")){
+                if(!redshiftConfiguration.getDataBase().matches("^[a-z][a-z0-9_+.@-]*$")){
                     throw new Exception("Invalid database name");
                 }
                 break;

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1414,7 +1414,7 @@ private void deleteFile(String filePath) {
             "            }catch (Exception e){}\n" +
             "        }";
 
-    private final static String handleMysqlBIGINTUNSIGNED = "if(filed.equalsIgnoreCase(BIGINTUNSIGNEDFIELD)){\n" +
+    private final static String handleMysqlBIGINTUNSIGNED = "if(filed.equalsIgnoreCase(\"BIGINTUNSIGNEDFIELD\")){\n" +
             "\t\t\tif(tmp != null && tmp.endsWith(\".0\")){\n" +
             "            \ttry {\n" +
             "                Long.valueOf(tmp.substring(0, tmp.length()-2));\n" +

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1414,7 +1414,7 @@ private void deleteFile(String filePath) {
             "            }catch (Exception e){}\n" +
             "        }";
 
-    private final static String handleMysqlBIGINTUNSIGNED = "if(filed.equalsIgnoreCase(BIGINTUNSIGNEDFIELD)){\n" +
+    private final static String handleMysqlBIGINTUNSIGNED = "if(filed.equalsIgnoreCase(\"BIGINTUNSIGNEDFIELD\")){\n" +
             "\t\t\tif(tmp != null && tmp.endsWith(\".0\")){\n" +
             "            \ttry {\n" +
             "                Long.valueOf(tmp.substring(0, tmp.length()-2));\n" +

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -72,6 +72,7 @@ public Integer transFieldType(String field) {
             case "MEDIUMINT":
             case "INTEGER":
             case "BIGINT":
+            case "BIGINT UNSIGNED":
             case "LONG": //增加了LONG类型
                 return 2;// 整型
             case "FLOAT":

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -72,6 +72,7 @@ public Integer transFieldType(String field) {
             case "MEDIUMINT":
             case "INTEGER":
             case "BIGINT":
+            case "BIGINT UNSIGNED":
             case "LONG": //增加了LONG类型
                 return 2;// 整型
             case "FLOAT":

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -72,6 +72,7 @@ public Integer transFieldType(String field) {
             case "MEDIUMINT":
             case "INTEGER":
             case "BIGINT":
+            case "BIGINT UNSIGNED":
             case "LONG": //增加了LONG类型
                 return 2;// 整型
             case "FLOAT":

File: backend/src/main/java/io/dataease/dto/chart/AxisChartDataAntVDTO.java
Patch:
@@ -19,4 +19,5 @@ public class AxisChartDataAntVDTO {
     private String category;
     private BigDecimal popSize;
     private String group;
+    private BigDecimal extValue;
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -611,7 +611,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             xAxis.addAll(xAxisExt);
         }
         List<ChartViewFieldDTO> yAxis = gson.fromJson(view.getYAxis(), tokenType);
-        if (StringUtils.equalsIgnoreCase(view.getType(), "chart-mix")) {
+        if (StringUtils.equalsAnyIgnoreCase(view.getType(), "chart-mix","bidirectional-bar")) {
             List<ChartViewFieldDTO> yAxisExt = gson.fromJson(view.getYAxisExt(), tokenType);
             yAxis.addAll(yAxisExt);
         }
@@ -1337,6 +1337,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                 mapChart = ChartDataBuild.transMixChartDataAntV(xAxis, yAxis, view, data, isDrill);
             } else if (StringUtils.containsIgnoreCase(view.getType(), "label")) {
                 mapChart = ChartDataBuild.transLabelChartData(xAxis, yAxis, view, data, isDrill);
+            } else if (StringUtils.containsIgnoreCase(view.getType(), "bidirectional-bar")) {
+                mapChart = ChartDataBuild.transBidirectionalBarData(xAxis, yAxis, view, data, isDrill);
             } else {
                 mapChart = ChartDataBuild.transChartDataAntV(xAxis, yAxis, view, data, isDrill);
             }

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -63,7 +63,7 @@ private Map<String, ChartExtRequest> buildViewRequest(PanelGroupDTO panelDto, Bo
         String panelStyle = panelDto.getPanelStyle();
         Map map = gson.fromJson(panelStyle, Map.class);
         Map panelMap = (LinkedTreeMap) map.get("panel");
-        double resultCount = Double.parseDouble(panelMap.get("resultCount").toString());
+        double resultCount = ObjectUtils.isEmpty(panelMap.get("resultCount")) ? 1000 : Double.parseDouble(panelMap.get("resultCount").toString());
         String resultMode = null;
         if (ObjectUtils.isNotEmpty(panelMap.get("resultMode"))) {
             resultMode = panelMap.get("resultMode").toString();

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -63,7 +63,7 @@ private Map<String, ChartExtRequest> buildViewRequest(PanelGroupDTO panelDto, Bo
         String panelStyle = panelDto.getPanelStyle();
         Map map = gson.fromJson(panelStyle, Map.class);
         Map panelMap = (LinkedTreeMap) map.get("panel");
-        double resultCount = Double.parseDouble(panelMap.get("resultCount").toString());
+        double resultCount = ObjectUtils.isEmpty(panelMap.get("resultCount")) ? 1000 : Double.parseDouble(panelMap.get("resultCount").toString());
         String resultMode = null;
         if (ObjectUtils.isNotEmpty(panelMap.get("resultMode"))) {
             resultMode = panelMap.get("resultMode").toString();

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1215,7 +1215,8 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, format);
                     }
                     if (field.getDeExtractType() == 1) {
-                        whereName = String.format(OracleConstants.TO_CHAR, format);
+                        whereName = originName;
+//                        whereName = String.format(OracleConstants.TO_CHAR, originName, format);
                     }
                 } else if (field.getDeType() == 2 || field.getDeType() == 3) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1215,7 +1215,8 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, format);
                     }
                     if (field.getDeExtractType() == 1) {
-                        whereName = String.format(OracleConstants.TO_CHAR, format);
+                        whereName = originName;
+//                        whereName = String.format(OracleConstants.TO_CHAR, originName, format);
                     }
                 } else if (field.getDeType() == 2 || field.getDeType() == 3) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinitionRequest.java
Patch:
@@ -9,6 +9,7 @@
 @Data
 public class ApiDefinitionRequest {
     private List<Map<String, String>> headers = new ArrayList<>();
+    private List<Map<String, String>> arguments = new ArrayList<>();
     private JSONObject body = new JSONObject();
     private AuthManager authManager = new AuthManager();
 

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -1151,7 +1151,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         whereName = String.format(CKConstants.formatDateTime, String.format(CKConstants.toDateTime, cast), format);
                     }
                     if (field.getDeExtractType() == 1) {
-                        whereName = String.format(CKConstants.formatDateTime, originName, format);
+                        whereName = originName;
                     }
                 } else if (field.getDeType() == 2 || field.getDeType() == 3) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinitionRequest.java
Patch:
@@ -9,6 +9,7 @@
 @Data
 public class ApiDefinitionRequest {
     private List<Map<String, String>> headers = new ArrayList<>();
+    private List<Map<String, String>> arguments = new ArrayList<>();
     private JSONObject body = new JSONObject();
     private AuthManager authManager = new AuthManager();
 

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -1151,7 +1151,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                         whereName = String.format(CKConstants.formatDateTime, String.format(CKConstants.toDateTime, cast), format);
                     }
                     if (field.getDeExtractType() == 1) {
-                        whereName = String.format(CKConstants.formatDateTime, originName, format);
+                        whereName = originName;
                     }
                 } else if (field.getDeType() == 2 || field.getDeType() == 3) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -320,12 +320,12 @@ public List<DatasetTable> saveExcel(DataSetTableRequest datasetTable) {
 
     @DeCleaner(value = DePermissionType.DATASET, key = "sceneId")
     public DatasetTable save(DataSetTableRequest datasetTable) throws Exception {
-        checkName(datasetTable);
         if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.SQL.name()) && !"appApply".equalsIgnoreCase(datasetTable.getOptFrom())) {
             DataSetTableRequest dataSetTableRequest = new DataSetTableRequest();
             BeanUtils.copyBean(dataSetTableRequest, datasetTable);
             getSQLPreview(dataSetTableRequest, false);
         }
+        checkName(datasetTable);
         if (StringUtils.isEmpty(datasetTable.getId())) {
             datasetTable.setId(UUID.randomUUID().toString());
             datasetTable.setCreateBy(AuthUtils.getUser().getUsername());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -320,12 +320,12 @@ public List<DatasetTable> saveExcel(DataSetTableRequest datasetTable) {
 
     @DeCleaner(value = DePermissionType.DATASET, key = "sceneId")
     public DatasetTable save(DataSetTableRequest datasetTable) throws Exception {
-        checkName(datasetTable);
         if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.SQL.name()) && !"appApply".equalsIgnoreCase(datasetTable.getOptFrom())) {
             DataSetTableRequest dataSetTableRequest = new DataSetTableRequest();
             BeanUtils.copyBean(dataSetTableRequest, datasetTable);
             getSQLPreview(dataSetTableRequest, false);
         }
+        checkName(datasetTable);
         if (StringUtils.isEmpty(datasetTable.getId())) {
             datasetTable.setId(UUID.randomUUID().toString());
             datasetTable.setCreateBy(AuthUtils.getUser().getUsername());

File: backend/src/main/java/io/dataease/controller/request/panel/PanelViewDetailsRequest.java
Patch:
@@ -40,4 +40,6 @@ public class PanelViewDetailsRequest {
     @ApiModelProperty(hidden = true)
     private PermissionProxy proxy;
 
+    private Long userId;
+
 }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -1161,6 +1161,8 @@ public void findExcelData(PanelViewDetailsRequest request) {
                 componentFilterInfo.setGoPage(1l);
                 componentFilterInfo.setPageSize(1000000l);
                 componentFilterInfo.setExcelExportFlag(true);
+                componentFilterInfo.setProxy(request.getProxy());
+                componentFilterInfo.setUser(request.getUserId());
                 ChartViewDTO chartViewInfo = chartViewService.getData(request.getViewId(), componentFilterInfo);
                 List<Map> tableRow = (List) chartViewInfo.getData().get("tableRow");
                 List<Object[]> result = new ArrayList<>();

File: backend/src/main/java/io/dataease/controller/request/panel/PanelViewDetailsRequest.java
Patch:
@@ -40,4 +40,6 @@ public class PanelViewDetailsRequest {
     @ApiModelProperty(hidden = true)
     private PermissionProxy proxy;
 
+    private Long userId;
+
 }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -1161,6 +1161,8 @@ public void findExcelData(PanelViewDetailsRequest request) {
                 componentFilterInfo.setGoPage(1l);
                 componentFilterInfo.setPageSize(1000000l);
                 componentFilterInfo.setExcelExportFlag(true);
+                componentFilterInfo.setProxy(request.getProxy());
+                componentFilterInfo.setUser(request.getUserId());
                 ChartViewDTO chartViewInfo = chartViewService.getData(request.getViewId(), componentFilterInfo);
                 List<Map> tableRow = (List) chartViewInfo.getData().get("tableRow");
                 List<Object[]> result = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -147,7 +147,7 @@ public class DataSetTableService {
     public static final String regex = "\\$\\{(.*?)\\}";
     private static final String SubstitutedParams = "DATAEASE_PATAMS_BI";
     private static final String SubstitutedSql = " 'BI' = 'BI' ";
-    private static final String SubstitutedSqlVirtualData = " 1 < 2 ";
+    private static final String SubstitutedSqlVirtualData = " 1 > 2 ";
 
     @Value("${upload.file.path}")
     private String path;
@@ -1272,7 +1272,7 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest, boole
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(ds);
 
-        sql = realData ? handleVariableDefaultValue(sql, dataSetTableRequest.getSqlVariableDetails(), ds.getType(), true) : removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql, SubstitutedSqlVirtualData);
+        sql = realData ? handleVariableDefaultValue(sql, dataSetTableRequest.getSqlVariableDetails(), ds.getType(), true) : removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql.trim(), SubstitutedSqlVirtualData);
         if (StringUtils.isEmpty(sql)) {
             DataEaseException.throwException(Translator.get("i18n_sql_not_empty"));
         }
@@ -1942,7 +1942,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
             DataTableInfoDTO dataTableInfo = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);
             String sql = dataTableInfo.isBase64Encryption() ? new String(java.util.Base64.getDecoder().decode(dataTableInfo.getSql())) : dataTableInfo.getSql();
-            sql = removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql, SubstitutedSqlVirtualData);
+            sql = removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql.trim(), SubstitutedSqlVirtualData);
             String sqlAsTable = qp.createSQLPreview(sql, null);
             datasourceRequest.setQuery(sqlAsTable);
             fields = datasourceProvider.fetchResultField(datasourceRequest);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -147,7 +147,7 @@ public class DataSetTableService {
     public static final String regex = "\\$\\{(.*?)\\}";
     private static final String SubstitutedParams = "DATAEASE_PATAMS_BI";
     private static final String SubstitutedSql = " 'BI' = 'BI' ";
-    private static final String SubstitutedSqlVirtualData = " 1 < 2 ";
+    private static final String SubstitutedSqlVirtualData = " 1 > 2 ";
 
     @Value("${upload.file.path}")
     private String path;
@@ -1272,7 +1272,7 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest, boole
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(ds);
 
-        sql = realData ? handleVariableDefaultValue(sql, dataSetTableRequest.getSqlVariableDetails(), ds.getType(), true) : removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql, SubstitutedSqlVirtualData);
+        sql = realData ? handleVariableDefaultValue(sql, dataSetTableRequest.getSqlVariableDetails(), ds.getType(), true) : removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql.trim(), SubstitutedSqlVirtualData);
         if (StringUtils.isEmpty(sql)) {
             DataEaseException.throwException(Translator.get("i18n_sql_not_empty"));
         }
@@ -1942,7 +1942,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
             DataTableInfoDTO dataTableInfo = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);
             String sql = dataTableInfo.isBase64Encryption() ? new String(java.util.Base64.getDecoder().decode(dataTableInfo.getSql())) : dataTableInfo.getSql();
-            sql = removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql, SubstitutedSqlVirtualData);
+            sql = removeVariables(sql, ds.getType()).replaceAll(SubstitutedSql.trim(), SubstitutedSqlVirtualData);
             String sqlAsTable = qp.createSQLPreview(sql, null);
             datasourceRequest.setQuery(sqlAsTable);
             fields = datasourceProvider.fetchResultField(datasourceRequest);

File: backend/src/main/java/io/dataease/auth/aop/SqlInjectAop.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.commons.exception.DEException;
 import io.dataease.controller.sys.base.BaseGridRequest;
 import org.apache.commons.collections4.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.aspectj.lang.ProceedingJoinPoint;
 import org.aspectj.lang.Signature;
 import org.aspectj.lang.annotation.Around;
@@ -63,6 +64,6 @@ private boolean isIllegal(String[] value, List<String> orderList) {
         return orderList.stream().anyMatch(exp ->
                 Arrays.stream(exp.toLowerCase().split(",")).anyMatch(word ->
                         Arrays.stream(word.split(" ")).anyMatch(item ->
-                                !wordList.contains(item))));
+                                StringUtils.isNotBlank(item.trim()) && !wordList.contains(item.trim()))));
     }
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -879,7 +879,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                 fieldsToFilter.addAll(xAxisBase);
             }
             ChartDrillRequest head = drillRequestList.get(0);
-            Map<String, String> dimValMap = head.getDimensionList().stream().collect(Collectors.toMap(ChartDimensionDTO::getId, ChartDimensionDTO::getValue));
+            Map<String, String> dimValMap = head.getDimensionList().stream().collect(Collectors.toMap(ChartDimensionDTO::getId, ChartDimensionDTO::getValue, ((p, n) -> p)));
             Map<String, ChartViewFieldDTO> fieldMap = Stream.of(xAxisBase, xAxisExt, extStack).
                     flatMap(Collection::stream).
                     collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o, ((p, n) -> p)));

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -879,7 +879,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                 fieldsToFilter.addAll(xAxisBase);
             }
             ChartDrillRequest head = drillRequestList.get(0);
-            Map<String, String> dimValMap = head.getDimensionList().stream().collect(Collectors.toMap(ChartDimensionDTO::getId, ChartDimensionDTO::getValue));
+            Map<String, String> dimValMap = head.getDimensionList().stream().collect(Collectors.toMap(ChartDimensionDTO::getId, ChartDimensionDTO::getValue, ((p, n) -> p)));
             Map<String, ChartViewFieldDTO> fieldMap = Stream.of(xAxisBase, xAxisExt, extStack).
                     flatMap(Collection::stream).
                     collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o, ((p, n) -> p)));

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -882,7 +882,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             Map<String, String> dimValMap = head.getDimensionList().stream().collect(Collectors.toMap(ChartDimensionDTO::getId, ChartDimensionDTO::getValue));
             Map<String, ChartViewFieldDTO> fieldMap = Stream.of(xAxisBase, xAxisExt, extStack).
                     flatMap(Collection::stream).
-                    collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o));
+                    collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o, ((p, n) -> p)));
             for (int i = 0; i < drillRequestList.size(); i++) {
                 ChartDrillRequest request = drillRequestList.get(i);
                 ChartViewFieldDTO chartViewFieldDTO = drill.get(i);
@@ -893,6 +893,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                         fieldsToFilter.add(chartViewFieldDTO);
                         dimValMap.put(requestDimension.getId(), requestDimension.getValue());
                         if (!checkDrillExist(xAxis, extStack, requestDimension.getId(), view)) {
+                            fieldMap.put(chartViewFieldDTO.getId(), chartViewFieldDTO);
                             xAxis.add(chartViewFieldDTO);
                         }
                         if (i == drillRequestList.size() - 1) {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -882,7 +882,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             Map<String, String> dimValMap = head.getDimensionList().stream().collect(Collectors.toMap(ChartDimensionDTO::getId, ChartDimensionDTO::getValue));
             Map<String, ChartViewFieldDTO> fieldMap = Stream.of(xAxisBase, xAxisExt, extStack).
                     flatMap(Collection::stream).
-                    collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o));
+                    collect(Collectors.toMap(ChartViewFieldDTO::getId, o -> o, ((p, n) -> p)));
             for (int i = 0; i < drillRequestList.size(); i++) {
                 ChartDrillRequest request = drillRequestList.get(i);
                 ChartViewFieldDTO chartViewFieldDTO = drill.get(i);
@@ -893,6 +893,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                         fieldsToFilter.add(chartViewFieldDTO);
                         dimValMap.put(requestDimension.getId(), requestDimension.getValue());
                         if (!checkDrillExist(xAxis, extStack, requestDimension.getId(), view)) {
+                            fieldMap.put(chartViewFieldDTO.getId(), chartViewFieldDTO);
                             xAxis.add(chartViewFieldDTO);
                         }
                         if (i == drillRequestList.size() - 1) {

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -225,7 +225,7 @@ public static boolean checkSqlInjection(Object obj){
             if (Arrays.stream(whiteLists.split(",")).anyMatch(item -> url.indexOf(item) != -1)) return false;
         }
         Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
-                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand)\\b.*)");
+                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand|gtid_subset)\\b.*)");
         Matcher matcher=pattern.matcher(orders.toLowerCase());
         return matcher.find();
     }

File: backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.plugins.common.base.domain.PanelShare;
 import io.dataease.commons.constants.DePermissionType;
 import io.dataease.controller.request.panel.PanelShareFineDto;
@@ -30,6 +31,7 @@ public interface ShareApi {
 
     @ApiOperation("查询分享给我")
     @PostMapping("/treeList")
+    @SqlInjectValidator(value = {"s.create_time"})
     List<PanelShareDto> treeList(BaseGridRequest request);
 
     @ApiOperation("查询我分享的")

File: backend/src/main/java/io/dataease/controller/panel/api/StoreApi.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.constants.DePermissionType;
 import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelStoreDto;
@@ -31,6 +32,7 @@ public interface StoreApi {
 
     @ApiOperation("查询收藏")
     @PostMapping("/list")
+    @SqlInjectValidator(value = {"s.create_time"})
     List<PanelStoreDto> list(@RequestBody BaseGridRequest request);
 
 

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.service.AuthUserService;
 import io.dataease.plugins.common.base.domain.SysMsgChannel;
 import io.dataease.plugins.common.base.domain.SysMsgSetting;
@@ -47,6 +48,7 @@ public class MsgController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "msgRequest", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"create_time", "type_id"})
     public Pager<List<MsgGridDto>> messages(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody MsgRequest msgRequest) {
         Long userId = AuthUtils.getUser().getUserId();
         List<Long> typeIds = null;

File: backend/src/main/java/io/dataease/controller/sys/SysDeptController.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.controller.sys;
 
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.controller.ResultHolder;
 import io.dataease.controller.sys.base.BaseGridRequest;
@@ -40,6 +41,7 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
     }
 
     @PostMapping("/search")
+    @SqlInjectValidator({"name"})
     public List<DeptNodeResponse> search(@RequestBody BaseGridRequest request){
         List<SysDept> nodes = deptService.nodesTreeByCondition(request);
         List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {

File: backend/src/main/java/io/dataease/controller/sys/SysLogController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
@@ -36,6 +37,7 @@ public class SysLogController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"time"})
     public Pager<List<SysLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
                                               @RequestBody KeyGridRequest request) {
         request = logService.logRetentionProxy(request);

File: backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.plugins.common.base.domain.MyPlugin;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
@@ -30,6 +31,7 @@ public class SysPluginController {
     @ApiOperation("查询已安装插件")
     @PostMapping("/pluginGrid/{goPage}/{pageSize}")
     @RequiresPermissions("plugin:read")
+    @SqlInjectValidator(value = {"install_time"})
     public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, pluginService.query(request));

File: backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -6,6 +6,7 @@
 import com.github.pagehelper.PageHelper;
 import io.dataease.auth.annotation.DeLog;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.service.ExtAuthService;
 import io.dataease.commons.constants.AuthConstants;
 import io.dataease.commons.constants.DePermissionType;
@@ -155,6 +156,7 @@ public void move(@RequestBody XpackMoveDept xpackMoveDept){
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
     @PostMapping("/userGrid/{goPage}/{pageSize}")
+    @SqlInjectValidator(value = {"dept_name", "nick_name"})
     public Pager<List<DeptUserItemDTO>> userGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody XpackDeptUserRequest request) {
         DeptXpackService deptService = SpringContextUtil.getBean(DeptXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -5,6 +5,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.dataease.auth.annotation.DeRateLimiter;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.api.dto.CurrentUserDto;
 import io.dataease.commons.exception.DEException;
 import io.dataease.commons.model.excel.ExcelSheetModel;
@@ -59,6 +60,7 @@ public class XEmailTaskServer {
 
     @RequiresPermissions("task-email:read")
     @PostMapping("/queryTasks/{goPage}/{pageSize}")
+    @SqlInjectValidator(value = {"create_time"})
     public Pager<List<XpackTaskGridDTO>> queryTask(@PathVariable int goPage, @PathVariable int pageSize,
                                                    @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);

File: backend/src/main/java/io/dataease/plugins/server/XRoleServer.java
Patch:
@@ -5,6 +5,7 @@
 import com.github.pagehelper.PageHelper;
 import io.dataease.auth.annotation.DeLog;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.service.ExtAuthService;
 import io.dataease.commons.constants.AuthConstants;
 import io.dataease.commons.constants.DePermissionType;
@@ -93,6 +94,7 @@ public void update(@RequestBody XpackRoleDto role){
         @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
         @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"create_time", "name"})
     public Pager<List<XpackRoleDto>> roleGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody XpackGridRequest request) {
         RoleXpackService roleXpackService = SpringContextUtil.getBean(RoleXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -225,7 +225,7 @@ public static boolean checkSqlInjection(Object obj){
             if (Arrays.stream(whiteLists.split(",")).anyMatch(item -> url.indexOf(item) != -1)) return false;
         }
         Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
-                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand)\\b.*)");
+                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand|gtid_subset)\\b.*)");
         Matcher matcher=pattern.matcher(orders.toLowerCase());
         return matcher.find();
     }

File: backend/src/main/java/io/dataease/controller/panel/api/ShareApi.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.plugins.common.base.domain.PanelShare;
 import io.dataease.commons.constants.DePermissionType;
 import io.dataease.controller.request.panel.PanelShareFineDto;
@@ -30,6 +31,7 @@ public interface ShareApi {
 
     @ApiOperation("查询分享给我")
     @PostMapping("/treeList")
+    @SqlInjectValidator(value = {"s.create_time"})
     List<PanelShareDto> treeList(BaseGridRequest request);
 
     @ApiOperation("查询我分享的")

File: backend/src/main/java/io/dataease/controller/panel/api/StoreApi.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.constants.DePermissionType;
 import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.panel.PanelStoreDto;
@@ -31,6 +32,7 @@ public interface StoreApi {
 
     @ApiOperation("查询收藏")
     @PostMapping("/list")
+    @SqlInjectValidator(value = {"s.create_time"})
     List<PanelStoreDto> list(@RequestBody BaseGridRequest request);
 
 

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.service.AuthUserService;
 import io.dataease.plugins.common.base.domain.SysMsgChannel;
 import io.dataease.plugins.common.base.domain.SysMsgSetting;
@@ -47,6 +48,7 @@ public class MsgController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "msgRequest", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"create_time", "type_id"})
     public Pager<List<MsgGridDto>> messages(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody MsgRequest msgRequest) {
         Long userId = AuthUtils.getUser().getUserId();
         List<Long> typeIds = null;

File: backend/src/main/java/io/dataease/controller/sys/SysDeptController.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.controller.sys;
 
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.controller.ResultHolder;
 import io.dataease.controller.sys.base.BaseGridRequest;
@@ -40,6 +41,7 @@ public List<DeptNodeResponse> childNodes(@PathVariable("pid") Long pid){
     }
 
     @PostMapping("/search")
+    @SqlInjectValidator({"name"})
     public List<DeptNodeResponse> search(@RequestBody BaseGridRequest request){
         List<SysDept> nodes = deptService.nodesTreeByCondition(request);
         List<DeptNodeResponse> nodeResponses = nodes.stream().map(node -> {

File: backend/src/main/java/io/dataease/controller/sys/SysLogController.java
Patch:
@@ -3,6 +3,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
@@ -36,6 +37,7 @@ public class SysLogController {
             @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"time"})
     public Pager<List<SysLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
                                               @RequestBody KeyGridRequest request) {
         request = logService.logRetentionProxy(request);

File: backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.plugins.common.base.domain.MyPlugin;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
@@ -30,6 +31,7 @@ public class SysPluginController {
     @ApiOperation("查询已安装插件")
     @PostMapping("/pluginGrid/{goPage}/{pageSize}")
     @RequiresPermissions("plugin:read")
+    @SqlInjectValidator(value = {"install_time"})
     public Pager<List<MyPlugin>> pluginGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody BaseGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, pluginService.query(request));

File: backend/src/main/java/io/dataease/plugins/server/XDeptServer.java
Patch:
@@ -6,6 +6,7 @@
 import com.github.pagehelper.PageHelper;
 import io.dataease.auth.annotation.DeLog;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.service.ExtAuthService;
 import io.dataease.commons.constants.AuthConstants;
 import io.dataease.commons.constants.DePermissionType;
@@ -155,6 +156,7 @@ public void move(@RequestBody XpackMoveDept xpackMoveDept){
             @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
     @PostMapping("/userGrid/{goPage}/{pageSize}")
+    @SqlInjectValidator(value = {"dept_name", "nick_name"})
     public Pager<List<DeptUserItemDTO>> userGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody XpackDeptUserRequest request) {
         DeptXpackService deptService = SpringContextUtil.getBean(DeptXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -5,6 +5,7 @@
 import com.github.pagehelper.Page;
 import com.github.pagehelper.PageHelper;
 import io.dataease.auth.annotation.DeRateLimiter;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.api.dto.CurrentUserDto;
 import io.dataease.commons.exception.DEException;
 import io.dataease.commons.model.excel.ExcelSheetModel;
@@ -59,6 +60,7 @@ public class XEmailTaskServer {
 
     @RequiresPermissions("task-email:read")
     @PostMapping("/queryTasks/{goPage}/{pageSize}")
+    @SqlInjectValidator(value = {"create_time"})
     public Pager<List<XpackTaskGridDTO>> queryTask(@PathVariable int goPage, @PathVariable int pageSize,
                                                    @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);

File: backend/src/main/java/io/dataease/plugins/server/XRoleServer.java
Patch:
@@ -5,6 +5,7 @@
 import com.github.pagehelper.PageHelper;
 import io.dataease.auth.annotation.DeLog;
 import io.dataease.auth.annotation.DePermission;
+import io.dataease.auth.annotation.SqlInjectValidator;
 import io.dataease.auth.service.ExtAuthService;
 import io.dataease.commons.constants.AuthConstants;
 import io.dataease.commons.constants.DePermissionType;
@@ -93,6 +94,7 @@ public void update(@RequestBody XpackRoleDto role){
         @ApiImplicitParam(paramType = "path", name = "pageSize", value = "页容量", required = true, dataType = "Integer"),
         @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
+    @SqlInjectValidator(value = {"create_time", "name"})
     public Pager<List<XpackRoleDto>> roleGrid(@PathVariable int goPage, @PathVariable int pageSize, @RequestBody XpackGridRequest request) {
         RoleXpackService roleXpackService = SpringContextUtil.getBean(RoleXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);

File: backend/src/main/java/io/dataease/controller/staticResource/StaticResourceController.java
Patch:
@@ -16,7 +16,7 @@
  * Description:
  */
 @RestController
-@RequestMapping("/static/resource")
+@RequestMapping("/staticResource")
 public class StaticResourceController {
 
     @Resource

File: backend/src/main/java/io/dataease/controller/staticResource/StaticResourceController.java
Patch:
@@ -16,7 +16,7 @@
  * Description:
  */
 @RestController
-@RequestMapping("/static/resource")
+@RequestMapping("/staticResource")
 public class StaticResourceController {
 
     @Resource

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -170,7 +170,7 @@ public Map<String, Object> getDBPreview(@RequestBody DataSetTableRequest dataSet
             @DePermission(type = DePermissionType.DATASOURCE, value = "dataSourceId", level = ResourceAuthLevel.DATASOURCE_LEVEL_USE)
     }, logical = Logical.AND)
     public ResultHolder getSQLPreview(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {
-        return dataSetTableService.getSQLPreview(dataSetTableRequest);
+        return dataSetTableService.getSQLPreview(dataSetTableRequest, true);
     }
 
     @ApiOperation("根据sql查询预览数据")

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -170,7 +170,7 @@ public Map<String, Object> getDBPreview(@RequestBody DataSetTableRequest dataSet
             @DePermission(type = DePermissionType.DATASOURCE, value = "dataSourceId", level = ResourceAuthLevel.DATASOURCE_LEVEL_USE)
     }, logical = Logical.AND)
     public ResultHolder getSQLPreview(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {
-        return dataSetTableService.getSQLPreview(dataSetTableRequest);
+        return dataSetTableService.getSQLPreview(dataSetTableRequest, true);
     }
 
     @ApiOperation("根据sql查询预览数据")

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1069,8 +1069,7 @@ public String handleVariableDefaultValue(String sql, String sqlVariableDetails,
                         defaultsSqlVariableDetail.getDefaultValueScope().equals(SqlVariableDetails.DefaultValueScope.ALLSCOPE) && StringUtils.isNotEmpty(defaultsSqlVariableDetail.getDefaultValue())) {
                     sql = sql.replace(matcher.group(), defaultsSqlVariableDetail.getDefaultValue());
                 }
-                if (isEdit && defaultsSqlVariableDetail != null && defaultsSqlVariableDetail.getDefaultValueScope() != null &&
-                        defaultsSqlVariableDetail.getDefaultValueScope().equals(SqlVariableDetails.DefaultValueScope.EDIT) && StringUtils.isNotEmpty(defaultsSqlVariableDetail.getDefaultValue())) {
+                if (isEdit && defaultsSqlVariableDetail != null && StringUtils.isNotEmpty(defaultsSqlVariableDetail.getDefaultValue())){
                     sql = sql.replace(matcher.group(), defaultsSqlVariableDetail.getDefaultValue());
                 }
             }
@@ -1266,10 +1265,12 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest) throw
 
 
         sql = handleVariableDefaultValue(sql, dataSetTableRequest.getSqlVariableDetails(), ds.getType(), true);
+        System.out.println(sql);
         if (StringUtils.isEmpty(sql)) {
             DataEaseException.throwException(Translator.get("i18n_sql_not_empty"));
         }
         checkVariable(sql, ds.getType());
+        System.out.println(sql);
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1069,8 +1069,7 @@ public String handleVariableDefaultValue(String sql, String sqlVariableDetails,
                         defaultsSqlVariableDetail.getDefaultValueScope().equals(SqlVariableDetails.DefaultValueScope.ALLSCOPE) && StringUtils.isNotEmpty(defaultsSqlVariableDetail.getDefaultValue())) {
                     sql = sql.replace(matcher.group(), defaultsSqlVariableDetail.getDefaultValue());
                 }
-                if (isEdit && defaultsSqlVariableDetail != null && defaultsSqlVariableDetail.getDefaultValueScope() != null &&
-                        defaultsSqlVariableDetail.getDefaultValueScope().equals(SqlVariableDetails.DefaultValueScope.EDIT) && StringUtils.isNotEmpty(defaultsSqlVariableDetail.getDefaultValue())) {
+                if (isEdit && defaultsSqlVariableDetail != null && StringUtils.isNotEmpty(defaultsSqlVariableDetail.getDefaultValue())){
                     sql = sql.replace(matcher.group(), defaultsSqlVariableDetail.getDefaultValue());
                 }
             }
@@ -1266,10 +1265,12 @@ public ResultHolder getSQLPreview(DataSetTableRequest dataSetTableRequest) throw
 
 
         sql = handleVariableDefaultValue(sql, dataSetTableRequest.getSqlVariableDetails(), ds.getType(), true);
+        System.out.println(sql);
         if (StringUtils.isEmpty(sql)) {
             DataEaseException.throwException(Translator.get("i18n_sql_not_empty"));
         }
         checkVariable(sql, ds.getType());
+        System.out.println(sql);
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -777,6 +777,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
+                break;
             case redshift:
                 RedshiftConfiguration redshiftConfiguration = new Gson().fromJson(datasource.getConfiguration(), RedshiftConfiguration.class);
                 if(redshiftConfiguration.getDataBase().length() > 64 || redshiftConfiguration.getDataBase().length() < 1){
@@ -785,6 +786,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 if(!redshiftConfiguration.getDataBase().matches("\"^[a-z][a-z0-9_+.@-]*$\"")){
                     throw new Exception("Invalid database name");
                 }
+                break;
             default:
                 break;
         }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -777,6 +777,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 mysqlConfiguration.getJdbc();
+                break;
             case redshift:
                 RedshiftConfiguration redshiftConfiguration = new Gson().fromJson(datasource.getConfiguration(), RedshiftConfiguration.class);
                 if(redshiftConfiguration.getDataBase().length() > 64 || redshiftConfiguration.getDataBase().length() < 1){
@@ -785,6 +786,7 @@ public void checkConfiguration(Datasource datasource) throws Exception {
                 if(!redshiftConfiguration.getDataBase().matches("\"^[a-z][a-z0-9_+.@-]*$\"")){
                     throw new Exception("Invalid database name");
                 }
+                break;
             default:
                 break;
         }

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -1170,7 +1170,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             }
 
             String whereName = "";
-            if (request.getIsTree()) {
+            if (request.getIsTree() && whereNameList.size() > 1) {
                 whereName = "CONCAT(" + StringUtils.join(whereNameList, ",',',") + ")";
             } else {
                 whereName = whereNameList.get(0);

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1107,7 +1107,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             }
 
             String whereName = "";
-            if (request.getIsTree()) {
+            if (request.getIsTree() && whereNameList.size() > 1) {
                 whereName = "CONCAT(" + StringUtils.join(whereNameList, ",',',") + ")";
             } else {
                 whereName = whereNameList.get(0);

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -1170,7 +1170,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             }
 
             String whereName = "";
-            if (request.getIsTree()) {
+            if (request.getIsTree() && whereNameList.size() > 1) {
                 whereName = "CONCAT(" + StringUtils.join(whereNameList, ",',',") + ")";
             } else {
                 whereName = whereNameList.get(0);

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1107,7 +1107,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             }
 
             String whereName = "";
-            if (request.getIsTree()) {
+            if (request.getIsTree() && whereNameList.size() > 1) {
                 whereName = "CONCAT(" + StringUtils.join(whereNameList, ",',',") + ")";
             } else {
                 whereName = whereNameList.get(0);

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -1154,6 +1154,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
                     fieldName = String.format(ImpalaConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : ImpalaConstants.DEFAULT_DATE_FORMAT ,ImpalaConstants.DEFAULT_DATE_FORMAT);
+                    fieldName = String.format(ImpalaConstants.DATE_FORMAT, fieldName, format);
                 } else {
                     String cast = String.format(ImpalaConstants.CAST, originField, ImpalaConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(ImpalaConstants.FROM_UNIXTIME, cast, ImpalaConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -1154,6 +1154,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
                     fieldName = String.format(ImpalaConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : ImpalaConstants.DEFAULT_DATE_FORMAT ,ImpalaConstants.DEFAULT_DATE_FORMAT);
+                    fieldName = String.format(ImpalaConstants.DATE_FORMAT, fieldName, format);
                 } else {
                     String cast = String.format(ImpalaConstants.CAST, originField, ImpalaConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(ImpalaConstants.FROM_UNIXTIME, cast, ImpalaConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -146,6 +146,7 @@ public void exportDetails(@RequestBody PanelViewDetailsRequest request, HttpServ
 
     @ApiOperation("站内导出仪表板视图明细")
     @PostMapping("/innerExportDetails")
+    @DePermissionProxy(value = "proxy")
     @I18n
     public void innerExportDetails(@RequestBody PanelViewDetailsRequest request, HttpServletResponse response) throws IOException {
         panelGroupService.exportPanelViewDetails(request, response);

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -146,6 +146,7 @@ public void exportDetails(@RequestBody PanelViewDetailsRequest request, HttpServ
 
     @ApiOperation("站内导出仪表板视图明细")
     @PostMapping("/innerExportDetails")
+    @DePermissionProxy(value = "proxy")
     @I18n
     public void innerExportDetails(@RequestBody PanelViewDetailsRequest request, HttpServletResponse response) throws IOException {
         panelGroupService.exportPanelViewDetails(request, response);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -1846,7 +1846,7 @@ private String handleVariable(String sql, ChartExtRequest requestList, QueryProv
                 }
             }
         }
-        sql = dataSetTableService.handleVariableDefaultValue(sql, null, ds.getType());
+        sql = dataSetTableService.handleVariableDefaultValue(sql, null, ds.getType(), false);
         return sql;
     }
 

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -122,7 +122,7 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     break;
                 case SQL:
                     String sql = dataTableInfoDTO.isBase64Encryption() ? new String(java.util.Base64.getDecoder().decode(dataTableInfoDTO.getSql())) : dataTableInfoDTO.getSql();
-                    tableName = dataSetTableService.handleVariableDefaultValue(sql, null, pluginViewSet.getDsType());
+                    tableName = dataSetTableService.handleVariableDefaultValue(sql, null, pluginViewSet.getDsType(), false);
                     tableName = "(" + sqlFix(tableName) + ")";
                     break;
                 case CUSTOM:

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -171,7 +171,7 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
                 if (dataTableInfoDTO.isBase64Encryption()) {
                     sql = new String(java.util.Base64.getDecoder().decode(sql));
                 }
-                sql = dataSetTableService.handleVariableDefaultValue(sql, datasetTable.getSqlVariableDetails(), ds.getType());
+                sql = dataSetTableService.handleVariableDefaultValue(sql, null, ds.getType(), false);
                 datasourceRequest.setQuery(qp.createQuerySQLAsTmp(sql, permissionFields, !needSort, customFilter, rowPermissionsTree, deSortFields));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.CUSTOM.toString())) {
                 DataTableInfoDTO dt = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskLogService.java
Patch:
@@ -80,7 +80,7 @@ public void exportExcel(BaseGridRequest request) throws Exception {
                 row[0] = item.getName();
                 row[1] = item.getDatasetName();
                 row[2] = DateUtil.formatDateTime(new Date(item.getStartTime()));
-                row[3] = DateUtil.formatDateTime(new Date(item.getEndTime()));
+                row[3] = item.getEndTime() != null ? DateUtil.formatDateTime(new Date(item.getEndTime())) : "";
                 row[4] = Translator.get("I18N_TASK_LOG_" + item.getStatus().toUpperCase()) ;
                 return row;
             }).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -129,7 +129,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/panel/group/exportDetails", ANON);
         filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
         filterChainDefinitionMap.put("/dataset/field/linkMappingFieldValues", "link");
-        filterChainDefinitionMap.put("/systemInfo/proxyUserLoginInfo/**", ANON);
+        filterChainDefinitionMap.put("/systemInfo/proxyUserLoginInfo", ANON);
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -129,7 +129,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/panel/group/exportDetails", ANON);
         filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
         filterChainDefinitionMap.put("/dataset/field/linkMappingFieldValues", "link");
-        filterChainDefinitionMap.put("/systemInfo/proxyUserLoginInfo/**", ANON);
+        filterChainDefinitionMap.put("/systemInfo/proxyUserLoginInfo", ANON);
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2264,6 +2264,9 @@ private void checkNames(List<DataSetTableRequest> datasetTable) {
         }
         Set<String> nameSet = new HashSet<>();
         for (DataSetTableRequest table : datasetTable) {
+            if(StringUtils.isEmpty(table.getName())){
+                throw new RuntimeException(Translator.get("I18n_name_cant_empty"));
+            }
             nameSet.add(table.getName());
         }
         if (nameSet.size() != datasetTable.size()) {

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -363,7 +363,7 @@ public Map<String, String> applyViewsField(List<ChartViewField> chartViewFieldsI
                 //替换datasetId
                 chartViewField.setTableId(datasetsRealMap.get(chartViewField.getTableId()));
                 //替换chartViewId
-                chartViewField.setChartId(chartViewsRealMap.get(chartViewField.getId()));
+                chartViewField.setChartId(chartViewsRealMap.get(chartViewField.getChartId()));
                 //替换datasetFieldId
                 datasetFieldsRealMap.forEach((k, v) -> {
                     chartViewField.setOriginName(chartViewField.getOriginName().replaceAll(k, v));

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -363,7 +363,7 @@ public Map<String, String> applyViewsField(List<ChartViewField> chartViewFieldsI
                 //替换datasetId
                 chartViewField.setTableId(datasetsRealMap.get(chartViewField.getTableId()));
                 //替换chartViewId
-                chartViewField.setChartId(chartViewsRealMap.get(chartViewField.getId()));
+                chartViewField.setChartId(chartViewsRealMap.get(chartViewField.getChartId()));
                 //替换datasetFieldId
                 datasetFieldsRealMap.forEach((k, v) -> {
                     chartViewField.setOriginName(chartViewField.getOriginName().replaceAll(k, v));

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -434,9 +434,9 @@ public String getSQLWithPage(boolean isTable, String table, List<ChartViewFieldD
         fieldCustomFilter.add(chartFieldCustomFilterDTO);
 
         if (isTable) {
-            return "SELECT * FROM (" + sqlFix(originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM >= " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
+            return "SELECT * FROM (" + sqlFix(originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM > " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
         } else {
-            return "SELECT * FROM (" + sqlFix(originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM >= " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
+            return "SELECT * FROM (" + sqlFix(originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM > " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
         }
     }
 
@@ -946,7 +946,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
                 .build();
         if (ObjectUtils.isNotEmpty(tableSQL)) st.add("table", tableSQL);
 
-        return "SELECT * FROM (" + sqlFix(st.render()) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM >= DE_OFFSET";
+        return "SELECT * FROM (" + sqlFix(st.render()) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM > DE_OFFSET";
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -434,9 +434,9 @@ public String getSQLWithPage(boolean isTable, String table, List<ChartViewFieldD
         fieldCustomFilter.add(chartFieldCustomFilterDTO);
 
         if (isTable) {
-            return "SELECT * FROM (" + sqlFix(originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM >= " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
+            return "SELECT * FROM (" + sqlFix(originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM > " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
         } else {
-            return "SELECT * FROM (" + sqlFix(originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM >= " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
+            return "SELECT * FROM (" + sqlFix(originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view)) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM > " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize();
         }
     }
 
@@ -946,7 +946,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
                 .build();
         if (ObjectUtils.isNotEmpty(tableSQL)) st.add("table", tableSQL);
 
-        return "SELECT * FROM (" + sqlFix(st.render()) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM >= DE_OFFSET";
+        return "SELECT * FROM (" + sqlFix(st.render()) + ") DE_RESULT_TMP " + " WHERE DE_ROWNUM > DE_OFFSET";
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -288,7 +288,7 @@ public void checkPanelName(String name, String pid, String optType, String id, S
 
         List<PanelGroup> checkResult = panelGroupMapper.selectByExample(groupExample);
         if (CollectionUtils.isNotEmpty(checkResult)) {
-            DataEaseException.throwException(Translator.get("I18N_PANEL_EXIST"));
+            DataEaseException.throwException(PanelConstants.PANEL_NODE_TYPE_PANEL.equals(nodeType) ? Translator.get("I18N_PANEL_EXIST") : Translator.get("I18N_FOlDER_EXIST"));
         }
     }
 

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -288,7 +288,7 @@ public void checkPanelName(String name, String pid, String optType, String id, S
 
         List<PanelGroup> checkResult = panelGroupMapper.selectByExample(groupExample);
         if (CollectionUtils.isNotEmpty(checkResult)) {
-            DataEaseException.throwException(Translator.get("I18N_PANEL_EXIST"));
+            DataEaseException.throwException(PanelConstants.PANEL_NODE_TYPE_PANEL.equals(nodeType) ? Translator.get("I18N_PANEL_EXIST") : Translator.get("I18N_FOlDER_EXIST"));
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -808,7 +808,8 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), String.format(MySQLConstants.KEYWORD_TABLE, table));
+        table = table.trim().startsWith("(") ? table : String.format(MySQLConstants.KEYWORD_TABLE, table);
+        return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), table);
     }
 
     public String getTotalCount(boolean isTable, String sql, Datasource ds) {
@@ -821,7 +822,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP", fields, null);
+        return createRawQuerySQL("(" + sqlFix(sql) + ") AS DE_TEMP", fields, null);
     }
 
     public String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeItem item) {

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -808,7 +808,8 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), String.format(MySQLConstants.KEYWORD_TABLE, table));
+        table = table.trim().startsWith("(") ? table : String.format(MySQLConstants.KEYWORD_TABLE, table);
+        return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), table);
     }
 
     public String getTotalCount(boolean isTable, String sql, Datasource ds) {
@@ -821,7 +822,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP", fields, null);
+        return createRawQuerySQL("(" + sqlFix(sql) + ") AS DE_TEMP", fields, null);
     }
 
     public String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeItem item) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -650,6 +650,9 @@ public void initDsCheckJob() {
 
     public void updateDemoDs() {
         Datasource datasource = datasourceMapper.selectByPrimaryKey("76026997-94f9-4a35-96ca-151084638969");
+        if(datasource == null){
+            return;
+        }
         MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
         Pattern WITH_SQL_FRAGMENT = Pattern.compile("jdbc:mysql://(.*):(\\d+)/(.*)");
         Matcher matcher = WITH_SQL_FRAGMENT.matcher(env.getProperty("spring.datasource.url"));

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -650,6 +650,9 @@ public void initDsCheckJob() {
 
     public void updateDemoDs() {
         Datasource datasource = datasourceMapper.selectByPrimaryKey("76026997-94f9-4a35-96ca-151084638969");
+        if(datasource == null){
+            return;
+        }
         MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
         Pattern WITH_SQL_FRAGMENT = Pattern.compile("jdbc:mysql://(.*):(\\d+)/(.*)");
         Matcher matcher = WITH_SQL_FRAGMENT.matcher(env.getProperty("spring.datasource.url"));

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -671,7 +671,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                 if (StringUtils.equalsIgnoreCase(view.getResultMode(), "custom")) {
                     chartExtRequest.setGoPage(1L);
                     chartExtRequest.setPageSize(view.getResultCount().longValue());
-                } else {
+                } else if (!chartExtRequest.getExcelExportFlag()) {
                     chartExtRequest.setGoPage(null);
                     chartExtRequest.setPageSize(null);
                 }
@@ -847,7 +847,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
         List<ChartDrillRequest> drillRequestList = chartExtRequest.getDrill();
         if (CollectionUtils.isNotEmpty(drillRequestList) && (drill.size() > drillRequestList.size())) {
 //            如果是从子维度开始下钻，那么先把主维度的条件先加上去
-            if (CollectionUtils.isNotEmpty(xAxisExt) && StringUtils.equalsIgnoreCase(drill.get(0).getId(),xAxisExt.get(0).getId())) {
+            if (CollectionUtils.isNotEmpty(xAxisExt) && StringUtils.equalsIgnoreCase(drill.get(0).getId(), xAxisExt.get(0).getId())) {
                 ChartDrillRequest head = drillRequestList.get(0);
                 for (int i = 0; i < xAxisBase.size(); i++) {
                     ChartDimensionDTO dimensionDTO = head.getDimensionList().get(i);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -671,7 +671,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
                 if (StringUtils.equalsIgnoreCase(view.getResultMode(), "custom")) {
                     chartExtRequest.setGoPage(1L);
                     chartExtRequest.setPageSize(view.getResultCount().longValue());
-                } else {
+                } else if (!chartExtRequest.getExcelExportFlag()) {
                     chartExtRequest.setGoPage(null);
                     chartExtRequest.setPageSize(null);
                 }
@@ -847,7 +847,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
         List<ChartDrillRequest> drillRequestList = chartExtRequest.getDrill();
         if (CollectionUtils.isNotEmpty(drillRequestList) && (drill.size() > drillRequestList.size())) {
 //            如果是从子维度开始下钻，那么先把主维度的条件先加上去
-            if (CollectionUtils.isNotEmpty(xAxisExt) && StringUtils.equalsIgnoreCase(drill.get(0).getId(),xAxisExt.get(0).getId())) {
+            if (CollectionUtils.isNotEmpty(xAxisExt) && StringUtils.equalsIgnoreCase(drill.get(0).getId(), xAxisExt.get(0).getId())) {
                 ChartDrillRequest head = drillRequestList.get(0);
                 for (int i = 0; i < xAxisBase.size(); i++) {
                     ChartDimensionDTO dimensionDTO = head.getDimensionList().get(i);

File: backend/src/main/java/io/dataease/commons/utils/TokenCacheUtils.java
Patch:
@@ -50,8 +50,9 @@ public static void add(String token, Long userId) {
         }
 
         Long time = expTime * 60;
-        CacheUtils.put(KEY, token, userId, time.intValue(), null);
-
+        Double v = time * 0.6;
+        CacheUtils.put(KEY, token, userId, time.intValue(), v.intValue());
+        CacheUtils.flush(KEY);
     }
 
     public static void remove(String token) {

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -808,7 +808,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), String.format(MySQLConstants.KEYWORD_TABLE, table));
     }
 
     public String getTotalCount(boolean isTable, String sql, Datasource ds) {

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -880,6 +880,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             ChartViewFieldDTO f = new ChartViewFieldDTO();
             f.setOriginName(datasetTableField.getOriginName());
             f.setDeType(0);
+            f.setType(datasetTableField.getType());
             xAxis.add(f);
         });
 
@@ -916,7 +917,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
                     continue;
                 }
                 String originField = String.format(OracleConstants.KEYWORD_FIX, tableObj.getTableAlias(), x.getOriginName());
-                if(datasetTableField.getType().equals("DATE")){
+                if(xAxis.get(i).getType().equals("DATE")){
                     originField = String.format(OracleConstants.TO_CHAR, originField, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
                 String fieldAlias = String.format(OracleConstants.KEYWORD_TABLE, x.getOriginName());

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -880,6 +880,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             ChartViewFieldDTO f = new ChartViewFieldDTO();
             f.setOriginName(datasetTableField.getOriginName());
             f.setDeType(0);
+            f.setType(datasetTableField.getType());
             xAxis.add(f);
         });
 
@@ -916,7 +917,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
                     continue;
                 }
                 String originField = String.format(OracleConstants.KEYWORD_FIX, tableObj.getTableAlias(), x.getOriginName());
-                if(datasetTableField.getType().equals("DATE")){
+                if(xAxis.get(i).getType().equals("DATE")){
                     originField = String.format(OracleConstants.TO_CHAR, originField, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
                 String fieldAlias = String.format(OracleConstants.KEYWORD_TABLE, x.getOriginName());

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -359,8 +359,8 @@ public void setNextDataType(Attributes attributes) {
             formatIndex = style.getDataFormat();
             formatString = style.getDataFormatString();
             short format = this.formatIndex;
-            if ((14 <= format && format <= 17) || format == 0 || format == 20 || format == 22 || format == 31 || format == 35 || (45 <= format && format <= 49) || format == 46 || format == 47 || (57 <= format && format <= 59)
-                    || (59 < format && format <= 76) || (175 < format && format <= 196) || (210 <= format && format <= 213) || (208 == format)) { // 日期
+            if ((14 <= format && format <= 17) || format == 20 || format == 22 || format == 31 || format == 35 || format == 45 || format == 46 || format == 47 || (57 <= format && format <= 59)
+                    || (175 < format && format < 178) || (182 <= format && format <= 196) || (210 <= format && format <= 213) || (208 == format)) { // 日期
                 isDateFormat = true;
             }
 

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -916,6 +916,9 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
                     continue;
                 }
                 String originField = String.format(OracleConstants.KEYWORD_FIX, tableObj.getTableAlias(), x.getOriginName());
+                if(datasetTableField.getType().equals("DATE")){
+                    originField = String.format(OracleConstants.TO_CHAR, originField, OracleConstants.DEFAULT_DATE_FORMAT);
+                }
                 String fieldAlias = String.format(OracleConstants.KEYWORD_TABLE, x.getOriginName());
                 xFields.add(getXFields(x, originField, fieldAlias));
             }

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -916,6 +916,9 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
                     continue;
                 }
                 String originField = String.format(OracleConstants.KEYWORD_FIX, tableObj.getTableAlias(), x.getOriginName());
+                if(datasetTableField.getType().equals("DATE")){
+                    originField = String.format(OracleConstants.TO_CHAR, originField, OracleConstants.DEFAULT_DATE_FORMAT);
+                }
                 String fieldAlias = String.format(OracleConstants.KEYWORD_TABLE, x.getOriginName());
                 xFields.add(getXFields(x, originField, fieldAlias));
             }

File: backend/src/main/java/io/dataease/controller/panel/PanelPdfTemplateController.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.controller.panel;
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.controller.handler.annotation.I18n;
 import io.dataease.plugins.common.base.domain.PanelPdfTemplate;
 import io.dataease.service.panel.PanelPdfTemplateService;
 import io.swagger.annotations.Api;
@@ -26,6 +27,7 @@ public class PanelPdfTemplateController {
     private PanelPdfTemplateService panelPdfTemplateService;
 
     @GetMapping("queryAll")
+    @I18n
     @ApiOperation("查询所有仪表板模板")
     public List<PanelPdfTemplate> queryAll() {
         return panelPdfTemplateService.queryAll();

File: backend/src/main/java/io/dataease/controller/panel/PanelPdfTemplateController.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.controller.panel;
 
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
+import io.dataease.controller.handler.annotation.I18n;
 import io.dataease.plugins.common.base.domain.PanelPdfTemplate;
 import io.dataease.service.panel.PanelPdfTemplateService;
 import io.swagger.annotations.Api;
@@ -26,6 +27,7 @@ public class PanelPdfTemplateController {
     private PanelPdfTemplateService panelPdfTemplateService;
 
     @GetMapping("queryAll")
+    @I18n
     @ApiOperation("查询所有仪表板模板")
     public List<PanelPdfTemplate> queryAll() {
         return panelPdfTemplateService.queryAll();

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -66,7 +66,7 @@ protected boolean executeLogin(ServletRequest request, ServletResponse response)
         if (StringUtils.startsWith(authorization, "Basic")) {
             return false;
         }
-        if (!TokenCacheUtils.validate(authorization) && TokenCacheUtils.validateDelay(authorization)) {
+        if (!TokenCacheUtils.validate(authorization) && !TokenCacheUtils.validateDelay(authorization)) {
             throw new AuthenticationException(expireMessage);
         }
         // 当没有出现登录超时 且需要刷新token 则执行刷新token

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -66,7 +66,7 @@ protected boolean executeLogin(ServletRequest request, ServletResponse response)
         if (StringUtils.startsWith(authorization, "Basic")) {
             return false;
         }
-        if (!TokenCacheUtils.validate(authorization) && TokenCacheUtils.validateDelay(authorization)) {
+        if (!TokenCacheUtils.validate(authorization) && !TokenCacheUtils.validateDelay(authorization)) {
             throw new AuthenticationException(expireMessage);
         }
         // 当没有出现登录超时 且需要刷新token 则执行刷新token

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -66,7 +66,7 @@ protected boolean executeLogin(ServletRequest request, ServletResponse response)
         if (StringUtils.startsWith(authorization, "Basic")) {
             return false;
         }
-        if (!TokenCacheUtils.validate(authorization)) {
+        if (!TokenCacheUtils.validate(authorization) && TokenCacheUtils.validateDelay(authorization)) {
             throw new AuthenticationException(expireMessage);
         }
         // 当没有出现登录超时 且需要刷新token 则执行刷新token
@@ -75,6 +75,7 @@ protected boolean executeLogin(ServletRequest request, ServletResponse response)
             throw new AuthenticationException(expireMessage);
         }
         if (JWTUtils.needRefresh(authorization)) {
+            TokenCacheUtils.addWithTtl(authorization, 1L);
             TokenCacheUtils.remove(authorization);
             authorization = refreshToken(request, response);
         }

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -66,7 +66,7 @@ protected boolean executeLogin(ServletRequest request, ServletResponse response)
         if (StringUtils.startsWith(authorization, "Basic")) {
             return false;
         }
-        if (!TokenCacheUtils.validate(authorization)) {
+        if (!TokenCacheUtils.validate(authorization) && TokenCacheUtils.validateDelay(authorization)) {
             throw new AuthenticationException(expireMessage);
         }
         // 当没有出现登录超时 且需要刷新token 则执行刷新token
@@ -75,6 +75,7 @@ protected boolean executeLogin(ServletRequest request, ServletResponse response)
             throw new AuthenticationException(expireMessage);
         }
         if (JWTUtils.needRefresh(authorization)) {
+            TokenCacheUtils.addWithTtl(authorization, 1L);
             TokenCacheUtils.remove(authorization);
             authorization = refreshToken(request, response);
         }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1147,8 +1147,8 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
                         subSelect.setAlias(new Alias(rightItem.getAlias().toString(), false));
                     }
                     join.setRightItem(subSelect);
-                    joinsList.add(join);
                 }
+                joinsList.add(join);
             }
             plainSelect.setJoins(joinsList);
         }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -234,6 +234,7 @@ public String deLogout() {
             if (StringUtils.isBlank(result)) {
                 result = "success";
             }
+            TokenCacheUtils.remove(token);
         } catch (Exception e) {
             LogUtil.error(e);
             if (StringUtils.isBlank(result)) {
@@ -287,6 +288,7 @@ public String logout() {
             if (StringUtils.isBlank(result)) {
                 result = "success";
             }
+            TokenCacheUtils.remove(token);
         } catch (Exception e) {
             LogUtil.error(e);
             if (StringUtils.isBlank(result)) {

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -234,6 +234,7 @@ public String deLogout() {
             if (StringUtils.isBlank(result)) {
                 result = "success";
             }
+            TokenCacheUtils.remove(token);
         } catch (Exception e) {
             LogUtil.error(e);
             if (StringUtils.isBlank(result)) {
@@ -287,6 +288,7 @@ public String logout() {
             if (StringUtils.isBlank(result)) {
                 result = "success";
             }
+            TokenCacheUtils.remove(token);
         } catch (Exception e) {
             LogUtil.error(e);
             if (StringUtils.isBlank(result)) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -340,6 +340,7 @@ public ResultHolder validate(DatasourceDTO datasource) throws Exception {
 
                 datasourceDTO.setApiConfiguration(apiDefinitionListWithStatus);
                 if (success == apiDefinitionList.size()) {
+                    datasource.setStatus(datasourceStatus);
                     return ResultHolder.success(datasourceDTO);
                 }
                 if (success > 0 && success < apiDefinitionList.size()) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -340,6 +340,7 @@ public ResultHolder validate(DatasourceDTO datasource) throws Exception {
 
                 datasourceDTO.setApiConfiguration(apiDefinitionListWithStatus);
                 if (success == apiDefinitionList.size()) {
+                    datasource.setStatus(datasourceStatus);
                     return ResultHolder.success(datasourceDTO);
                 }
                 if (success > 0 && success < apiDefinitionList.size()) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -292,6 +292,7 @@ public void updateDatasource(UpdataDsRequest updataDsRequest) throws Exception {
     public void updateDatasource(String id, Datasource datasource) {
         DatasourceExample example = new DatasourceExample();
         example.createCriteria().andIdEqualTo(id);
+        checkAndUpdateDatasourceStatus(datasource);
         datasourceMapper.updateByExampleSelective(datasource, example);
         handleConnectionPool(id);
     }
@@ -363,7 +364,6 @@ public ResultHolder validate(String datasourceId) {
             DatasourceRequest datasourceRequest = new DatasourceRequest();
             datasourceRequest.setDatasource(datasource);
             datasourceStatus = datasourceProvider.checkStatus(datasourceRequest);
-
             if (datasource.getType().equalsIgnoreCase("api")) {
                 List<ApiDefinition> apiDefinitionList = new Gson().fromJson(datasource.getConfiguration(), new TypeToken<List<ApiDefinition>>() {
                 }.getType());
@@ -377,6 +377,7 @@ public ResultHolder validate(String datasourceId) {
                     }
                 }
                 if (success == apiDefinitionList.size()) {
+                    datasource.setStatus(datasourceStatus);
                     return ResultHolder.success(datasource);
                 }
                 if (success > 0 && success < apiDefinitionList.size()) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -292,6 +292,7 @@ public void updateDatasource(UpdataDsRequest updataDsRequest) throws Exception {
     public void updateDatasource(String id, Datasource datasource) {
         DatasourceExample example = new DatasourceExample();
         example.createCriteria().andIdEqualTo(id);
+        checkAndUpdateDatasourceStatus(datasource);
         datasourceMapper.updateByExampleSelective(datasource, example);
         handleConnectionPool(id);
     }
@@ -363,7 +364,6 @@ public ResultHolder validate(String datasourceId) {
             DatasourceRequest datasourceRequest = new DatasourceRequest();
             datasourceRequest.setDatasource(datasource);
             datasourceStatus = datasourceProvider.checkStatus(datasourceRequest);
-
             if (datasource.getType().equalsIgnoreCase("api")) {
                 List<ApiDefinition> apiDefinitionList = new Gson().fromJson(datasource.getConfiguration(), new TypeToken<List<ApiDefinition>>() {
                 }.getType());
@@ -377,6 +377,7 @@ public ResultHolder validate(String datasourceId) {
                     }
                 }
                 if (success == apiDefinitionList.size()) {
+                    datasource.setStatus(datasourceStatus);
                     return ResultHolder.success(datasource);
                 }
                 if (success > 0 && success < apiDefinitionList.size()) {

File: backend/src/main/java/io/dataease/controller/panel/PanelAppTemplateController.java
Patch:
@@ -17,7 +17,7 @@
  * Date: 2022/9/8
  * Description:
  */
-@Api(tags = "仪表板：应该关系")
+@Api(tags = "仪表板：应用关系")
 @ApiSupport(order = 170)
 @RestController
 @RequestMapping("appTemplate")

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -103,7 +103,7 @@ public void update(PanelAppTemplateRequest request) {
         PanelAppTemplateWithBLOBs requestTemplate = new PanelAppTemplateWithBLOBs();
         BeanUtils.copyBean(requestTemplate, request);
         //Store static resource into the server
-        if (StringUtils.isNotEmpty(request.getSnapshot())) {
+        if (StringUtils.isNotEmpty(request.getSnapshot()) && request.getSnapshot().indexOf("static-resource") == -1) {
             String snapshotName = "app-template-" + UUIDUtil.getUUIDAsString() + ".jpeg";
             staticResourceService.saveSingleFileToServe(snapshotName, request.getSnapshot().replace("data:image/jpeg;base64,", ""));
             requestTemplate.setSnapshot("/" + UPLOAD_URL_PREFIX + '/' + snapshotName);

File: backend/src/main/java/io/dataease/controller/panel/PanelAppTemplateController.java
Patch:
@@ -17,7 +17,7 @@
  * Date: 2022/9/8
  * Description:
  */
-@Api(tags = "仪表板：应该关系")
+@Api(tags = "仪表板：应用关系")
 @ApiSupport(order = 170)
 @RestController
 @RequestMapping("appTemplate")

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -103,7 +103,7 @@ public void update(PanelAppTemplateRequest request) {
         PanelAppTemplateWithBLOBs requestTemplate = new PanelAppTemplateWithBLOBs();
         BeanUtils.copyBean(requestTemplate, request);
         //Store static resource into the server
-        if (StringUtils.isNotEmpty(request.getSnapshot())) {
+        if (StringUtils.isNotEmpty(request.getSnapshot()) && request.getSnapshot().indexOf("static-resource") == -1) {
             String snapshotName = "app-template-" + UUIDUtil.getUUIDAsString() + ".jpeg";
             staticResourceService.saveSingleFileToServe(snapshotName, request.getSnapshot().replace("data:image/jpeg;base64,", ""));
             requestTemplate.setSnapshot("/" + UPLOAD_URL_PREFIX + '/' + snapshotName);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1090,7 +1090,7 @@ public String removeVariables(final String sql, String dsType) throws Exception
         if (!hasVariables && !tmpSql.contains(SubstitutedParams)) {
             return tmpSql;
         }
-        CCJSqlParserUtil.parse(tmpSql, parser -> parser.withSquareBracketQuotation(true));
+
         Statement statement = CCJSqlParserUtil.parse(tmpSql);
         Select select = (Select) statement;
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1090,7 +1090,7 @@ public String removeVariables(final String sql, String dsType) throws Exception
         if (!hasVariables && !tmpSql.contains(SubstitutedParams)) {
             return tmpSql;
         }
-        CCJSqlParserUtil.parse(tmpSql, parser -> parser.withSquareBracketQuotation(true));
+
         Statement statement = CCJSqlParserUtil.parse(tmpSql);
         Select select = (Select) statement;
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2427,7 +2427,7 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
             int num = 1;
             String line;
             while ((line = reader.readLine()) != null) {
-                if (num > 100) {
+                if (num > 1000) {
                     break;
                 }
                 data.add(Arrays.asList(line.split(",")));

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -81,6 +81,9 @@ public void updateDatasource(@RequestBody UpdataDsRequest updataDsRequest) throw
         datasource.setCreateTime(null);
         datasource.setType(updataDsRequest.getType());
         datasource.setUpdateTime(System.currentTimeMillis());
+        if (StringUtils.isNotEmpty(updataDsRequest.getId())) {
+            datasource.setId(updataDsRequest.getId());
+        }
         datasourceService.preCheckDs(datasource);
         if (StringUtils.isNotEmpty(updataDsRequest.getId())) {
             datasourceService.updateDatasource(updataDsRequest.getId(), datasource);

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -81,6 +81,9 @@ public void updateDatasource(@RequestBody UpdataDsRequest updataDsRequest) throw
         datasource.setCreateTime(null);
         datasource.setType(updataDsRequest.getType());
         datasource.setUpdateTime(System.currentTimeMillis());
+        if (StringUtils.isNotEmpty(updataDsRequest.getId())) {
+            datasource.setId(updataDsRequest.getId());
+        }
         datasourceService.preCheckDs(datasource);
         if (StringUtils.isNotEmpty(updataDsRequest.getId())) {
             datasourceService.updateDatasource(updataDsRequest.getId(), datasource);

File: backend/src/main/java/io/dataease/listener/DataSourceInitStartListener.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.listener;
 
+import io.dataease.listener.util.CacheUtils;
 import io.dataease.service.datasource.DatasourceService;
 import io.dataease.service.dataset.DataSetTableService;
 import io.dataease.service.engine.EngineService;
@@ -25,7 +26,7 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         datasourceService.initDsCheckJob();
         dataSetTableService.updateDatasetTableStatus();
         engineService.initSimpleEngine();
-
+        CacheUtils.removeAll("ENGINE");
     }
 
 

File: backend/src/main/java/io/dataease/plugins/server/XLdapServer.java
Patch:
@@ -31,10 +31,10 @@ public void save(@RequestBody List<SysSettingDto> settings) {
     }
 
     @PostMapping("/testConn")
-    public void testConn() {
+    public void testConn(@RequestBody List<SysSettingDto> settings) {
         LdapXpackService ldapXpackService = SpringContextUtil.getBean(LdapXpackService.class);
         try {
-            ldapXpackService.testConn();
+            ldapXpackService.testConn(settings);
         }catch(Exception e) {
             throw new RuntimeException(e);
         } 

File: backend/src/main/java/io/dataease/plugins/server/XLdapServer.java
Patch:
@@ -31,10 +31,10 @@ public void save(@RequestBody List<SysSettingDto> settings) {
     }
 
     @PostMapping("/testConn")
-    public void testConn() {
+    public void testConn(@RequestBody List<SysSettingDto> settings) {
         LdapXpackService ldapXpackService = SpringContextUtil.getBean(LdapXpackService.class);
         try {
-            ldapXpackService.testConn();
+            ldapXpackService.testConn(settings);
         }catch(Exception e) {
             throw new RuntimeException(e);
         } 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2375,13 +2375,13 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
         String suffix = filename.substring(filename.lastIndexOf(".") + 1);
         if (StringUtils.equalsIgnoreCase(suffix, "xls")) {
             ExcelXlsReader excelXlsReader = new ExcelXlsReader();
-            excelXlsReader.setObtainedNum(100);
+            excelXlsReader.setObtainedNum(1000);
             excelXlsReader.process(inputStream);
             excelSheetDataList = excelXlsReader.totalSheets;
         }
         if (StringUtils.equalsIgnoreCase(suffix, "xlsx")) {
             ExcelXlsxReader excelXlsxReader = new ExcelXlsxReader();
-            excelXlsxReader.setObtainedNum(100);
+            excelXlsxReader.setObtainedNum(1000);
             excelXlsxReader.process(inputStream);
             excelSheetDataList = excelXlsxReader.totalSheets;
         }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2375,13 +2375,13 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
         String suffix = filename.substring(filename.lastIndexOf(".") + 1);
         if (StringUtils.equalsIgnoreCase(suffix, "xls")) {
             ExcelXlsReader excelXlsReader = new ExcelXlsReader();
-            excelXlsReader.setObtainedNum(100);
+            excelXlsReader.setObtainedNum(1000);
             excelXlsReader.process(inputStream);
             excelSheetDataList = excelXlsReader.totalSheets;
         }
         if (StringUtils.equalsIgnoreCase(suffix, "xlsx")) {
             ExcelXlsxReader excelXlsxReader = new ExcelXlsxReader();
-            excelXlsxReader.setObtainedNum(100);
+            excelXlsxReader.setObtainedNum(1000);
             excelXlsxReader.process(inputStream);
             excelSheetDataList = excelXlsxReader.totalSheets;
         }

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -824,7 +824,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
         if(isTable){
             return "SELECT COUNT(*) from " + String.format(CKConstants.KEYWORD_TABLE, sql);
         }else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -815,7 +815,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
             schema = String.format(Db2Constants.KEYWORD_TABLE, schema);
             return "SELECT COUNT(*) from " + schema + "." + String.format(Db2Constants.KEYWORD_TABLE, sql);
         } else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -774,7 +774,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
         if(isTable){
             return "SELECT COUNT(*) from " + String.format(HiveConstants.KEYWORD_TABLE, sql);
         }else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -772,7 +772,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
         if(isTable){
             return "SELECT COUNT(*) from " + String.format(ImpalaConstants.KEYWORD_TABLE, sql);
         }else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -815,7 +815,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
         if(isTable){
             return "SELECT COUNT(*) from " + String.format(MySQLConstants.KEYWORD_TABLE, sql);
         }else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 
@@ -1123,6 +1123,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
     }
 
     private String sqlFix(String sql) {
+        sql = sql.trim();
         if (sql.lastIndexOf(";") == (sql.length() - 1)) {
             sql = sql.substring(0, sql.length() - 1);
         }

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -866,7 +866,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
             schema = String.format(OracleConstants.KEYWORD_TABLE, schema);
             return "SELECT COUNT(*) from " + schema + "." + String.format(OracleConstants.KEYWORD_TABLE, sql);
         } else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -806,7 +806,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
             String tableWithSchema = String.format(PgConstants.KEYWORD_TABLE, schema) + "." + String.format(PgConstants.KEYWORD_TABLE, sql);
             return "SELECT COUNT(*) from " + tableWithSchema;
         }else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -813,7 +813,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
             String tableWithSchema = String.format(SqlServerSQLConstants.KEYWORD_TABLE, schema) + "." + String.format(SqlServerSQLConstants.KEYWORD_TABLE, sql);
             return "SELECT COUNT(*) from " + String.format(ImpalaConstants.KEYWORD_TABLE, tableWithSchema);
         }else {
-            return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
+            return "SELECT COUNT(*) from ( " + sqlFix(sql) + " ) DE_COUNT_TEMP";
         }
     }
 
@@ -826,7 +826,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
         }).toArray(String[]::new);
         if (ds != null) {
             String schema = new Gson().fromJson(ds.getConfiguration(), JdbcConfiguration.class).getSchema();
-            String tableWithSchema = String.format(SqlServerSQLConstants.KEYWORD_TABLE, schema) + "." + String.format(SqlServerSQLConstants.KEYWORD_TABLE, table);
+            String tableWithSchema = String.format(RedshiftConstants.KEYWORD_TABLE, schema) + "." + String.format(RedshiftConstants.KEYWORD_TABLE, table);
             return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", StringUtils.join(array, ","), tableWithSchema);
         } else {
             return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", StringUtils.join(array, ","), table);

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -810,11 +810,11 @@ public String wrapSql(String sql) {
 
 
     public String getTotalCount(boolean isTable, String sql, Datasource ds) {
-        if(isTable){
+        if (isTable) {
             String schema = new Gson().fromJson(ds.getConfiguration(), JdbcConfiguration.class).getSchema();
             schema = String.format(Db2Constants.KEYWORD_TABLE, schema);
             return "SELECT COUNT(*) from " + schema + "." + String.format(Db2Constants.KEYWORD_TABLE, sql);
-        }else {
+        } else {
             return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
         }
     }
@@ -828,7 +828,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
         }).toArray(String[]::new);
         if (ds != null) {
             Db2Configuration db2Configuration = new Gson().fromJson(ds.getConfiguration(), Db2Configuration.class);
-            return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), db2Configuration.getSchema() + String.format(Db2Constants.KEYWORD_TABLE, table));
+            return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), String.format(Db2Constants.KEYWORD_TABLE, db2Configuration.getSchema()) + "." + String.format(Db2Constants.KEYWORD_TABLE, table));
         } else {
             return MessageFormat.format("SELECT {0} FROM {1}  LIMIT DE_OFFSET, DE_PAGE_SIZE ", StringUtils.join(array, ","), table);
         }

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -803,8 +803,8 @@ public String wrapSql(String sql) {
     public String getTotalCount(boolean isTable, String sql, Datasource ds) {
         if(isTable){
             String schema = new Gson().fromJson(ds.getConfiguration(), JdbcConfiguration.class).getSchema();
-            String tableWithSchema = String.format(SqlServerSQLConstants.KEYWORD_TABLE, schema) + "." + String.format(SqlServerSQLConstants.KEYWORD_TABLE, sql);
-            return "SELECT COUNT(*) from " + String.format(PgConstants.KEYWORD_TABLE, tableWithSchema);
+            String tableWithSchema = String.format(PgConstants.KEYWORD_TABLE, schema) + "." + String.format(PgConstants.KEYWORD_TABLE, sql);
+            return "SELECT COUNT(*) from " + tableWithSchema;
         }else {
             return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
         }

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -208,7 +208,7 @@ public void extractExcelData(String datasetTableId, String type, String ops, Lis
                         for (DatasetTableField oldField : oldFields) {
                             boolean delete = true;
                             for (DatasetTableField datasetTableField : datasetTableFields) {
-                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName()) && oldField.getDeExtractType().equals(datasetTableField.getDeExtractType())) {
+                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName())) {
                                     delete = false;
                                 }
                             }
@@ -220,7 +220,7 @@ public void extractExcelData(String datasetTableId, String type, String ops, Lis
                         for (DatasetTableField datasetTableField : datasetTableFields) {
                             boolean add = true;
                             for (DatasetTableField oldField : oldFields) {
-                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName()) && oldField.getDeExtractType().equals(datasetTableField.getDeExtractType())) {
+                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName())) {
                                     add = false;
                                 }
                             }

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -803,8 +803,8 @@ public String wrapSql(String sql) {
     public String getTotalCount(boolean isTable, String sql, Datasource ds) {
         if(isTable){
             String schema = new Gson().fromJson(ds.getConfiguration(), JdbcConfiguration.class).getSchema();
-            String tableWithSchema = String.format(SqlServerSQLConstants.KEYWORD_TABLE, schema) + "." + String.format(SqlServerSQLConstants.KEYWORD_TABLE, sql);
-            return "SELECT COUNT(*) from " + String.format(PgConstants.KEYWORD_TABLE, tableWithSchema);
+            String tableWithSchema = String.format(PgConstants.KEYWORD_TABLE, schema) + "." + String.format(PgConstants.KEYWORD_TABLE, sql);
+            return "SELECT COUNT(*) from " + tableWithSchema;
         }else {
             return "SELECT COUNT(*) from ( " + sql + " ) DE_COUNT_TEMP";
         }

File: backend/src/main/java/io/dataease/job/sechedule/ScheduleManager.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.commons.utils.LogUtil;
 import io.dataease.exception.DataEaseException;
+import io.dataease.i18n.Translator;
 import org.quartz.*;
 import org.springframework.stereotype.Component;
 
@@ -399,7 +400,8 @@ public Object getCurrentlyExecutingJobs() {
 
     public static CronTrigger getCronTrigger(String cron) {
         if (!CronExpression.isValidExpression(cron)) {
-            DataEaseException.throwException("cron :" + cron + " error");
+            String msg = Translator.get("I18N_CRON_ERROR");
+            DataEaseException.throwException(msg + " : " + cron);
         }
         return TriggerBuilder.newTrigger().withIdentity("Calculate Date")
                 .withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -31,6 +31,7 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.core.io.ByteArrayResource;
 import org.springframework.http.*;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.Base64Utils;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.util.HtmlUtils;
@@ -128,6 +129,7 @@ public void fireNow(@PathVariable("taskId") Long taskId) throws Exception {
 
     @RequiresPermissions("task-email:add")
     @PostMapping("/save")
+    @Transactional
     public void save(@RequestBody XpackEmailCreate param) throws Exception {
         XpackEmailTaskRequest request = param.fillContent();
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);

File: backend/src/main/java/io/dataease/job/sechedule/ScheduleManager.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.commons.utils.LogUtil;
 import io.dataease.exception.DataEaseException;
+import io.dataease.i18n.Translator;
 import org.quartz.*;
 import org.springframework.stereotype.Component;
 
@@ -399,7 +400,8 @@ public Object getCurrentlyExecutingJobs() {
 
     public static CronTrigger getCronTrigger(String cron) {
         if (!CronExpression.isValidExpression(cron)) {
-            DataEaseException.throwException("cron :" + cron + " error");
+            String msg = Translator.get("I18N_CRON_ERROR");
+            DataEaseException.throwException(msg + " : " + cron);
         }
         return TriggerBuilder.newTrigger().withIdentity("Calculate Date")
                 .withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -31,6 +31,7 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.core.io.ByteArrayResource;
 import org.springframework.http.*;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.Base64Utils;
 import org.springframework.web.bind.annotation.*;
 import org.springframework.web.util.HtmlUtils;
@@ -128,6 +129,7 @@ public void fireNow(@PathVariable("taskId") Long taskId) throws Exception {
 
     @RequiresPermissions("task-email:add")
     @PostMapping("/save")
+    @Transactional
     public void save(@RequestBody XpackEmailCreate param) throws Exception {
         XpackEmailTaskRequest request = param.fillContent();
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);

File: backend/src/main/java/io/dataease/auth/filter/F2CDocFilter.java
Patch:
@@ -40,10 +40,10 @@ protected boolean isAccessAllowed(ServletRequest servletRequest, ServletResponse
             DefaultLicenseService defaultLicenseService = CommonBeanFactory.getBean(DefaultLicenseService.class);
             F2CLicenseResponse f2CLicenseResponse = defaultLicenseService.validateLicense();
             Status status = f2CLicenseResponse.getStatus();
-            /*if (status != Status.valid) {
+            if (status != Status.valid) {
                 request.setAttribute(RESULT_URI_KEY, NOLIC_PAGE);
                 return false;
-            }*/
+            }
         } catch (Exception e) {
             request.setAttribute(RESULT_URI_KEY, NOLIC_PAGE);
             LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/dataease/auth/filter/F2CDocFilter.java
Patch:
@@ -40,10 +40,10 @@ protected boolean isAccessAllowed(ServletRequest servletRequest, ServletResponse
             DefaultLicenseService defaultLicenseService = CommonBeanFactory.getBean(DefaultLicenseService.class);
             F2CLicenseResponse f2CLicenseResponse = defaultLicenseService.validateLicense();
             Status status = f2CLicenseResponse.getStatus();
-            /*if (status != Status.valid) {
+            if (status != Status.valid) {
                 request.setAttribute(RESULT_URI_KEY, NOLIC_PAGE);
                 return false;
-            }*/
+            }
         } catch (Exception e) {
             request.setAttribute(RESULT_URI_KEY, NOLIC_PAGE);
             LogUtil.error(e.getMessage(), e);

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -208,7 +208,7 @@ public void extractExcelData(String datasetTableId, String type, String ops, Lis
                         for (DatasetTableField oldField : oldFields) {
                             boolean delete = true;
                             for (DatasetTableField datasetTableField : datasetTableFields) {
-                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName()) && oldField.getDeExtractType().equals(datasetTableField.getDeExtractType())) {
+                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName())) {
                                     delete = false;
                                 }
                             }
@@ -220,7 +220,7 @@ public void extractExcelData(String datasetTableId, String type, String ops, Lis
                         for (DatasetTableField datasetTableField : datasetTableFields) {
                             boolean add = true;
                             for (DatasetTableField oldField : oldFields) {
-                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName()) && oldField.getDeExtractType().equals(datasetTableField.getDeExtractType())) {
+                                if (oldField.getDataeaseName().equalsIgnoreCase(datasetTableField.getDataeaseName())) {
                                     add = false;
                                 }
                             }

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -844,7 +844,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -836,7 +836,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS de_tmp  LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS de_tmp  ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -794,7 +794,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP  LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -792,7 +792,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -821,7 +821,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP", fields, null);
     }
 
     public String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeItem item) {

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -828,7 +828,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -835,7 +835,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP  ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -844,7 +844,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -836,7 +836,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS de_tmp  LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS de_tmp  ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -794,7 +794,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP  LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -792,7 +792,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -821,7 +821,7 @@ public String getTotalCount(boolean isTable, String sql, Datasource ds) {
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_OFFSET, DE_PAGE_SIZE ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP", fields, null);
     }
 
     public String transTreeItem(SQLObj tableObj, DatasetRowPermissionsTreeItem item) {

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -828,7 +828,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -835,7 +835,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
 
     @Override
     public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields) {
-        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP LIMIT DE_PAGE_SIZE OFFSET DE_OFFSET ", fields, null);
+        return createRawQuerySQL(" (" + sqlFix(sql) + ") AS DE_TEMP  ", fields, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -452,7 +452,7 @@ private void extractData(DatasetTable datasetTable, Datasource datasource, List<
                 extractDataByKettle(datasetTable, datasource, datasetTableFields, extractType, sql.get("selectSQL").replace("DE_OFFSET", offset.toString()).replace("DE_PAGE_SIZE", extractPageSize.toString()).replace("DE_ALL", all.toString()));
             }
         } else {
-            extractDataByKettle(datasetTable, datasource, datasetTableFields, extractType, selectSQL);
+            extractDataByKettle(datasetTable, datasource, datasetTableFields, extractType, sql.get("selectSQL"));
         }
     }
 

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -452,7 +452,7 @@ private void extractData(DatasetTable datasetTable, Datasource datasource, List<
                 extractDataByKettle(datasetTable, datasource, datasetTableFields, extractType, sql.get("selectSQL").replace("DE_OFFSET", offset.toString()).replace("DE_PAGE_SIZE", extractPageSize.toString()).replace("DE_ALL", all.toString()));
             }
         } else {
-            extractDataByKettle(datasetTable, datasource, datasetTableFields, extractType, selectSQL);
+            extractDataByKettle(datasetTable, datasource, datasetTableFields, extractType, sql.get("selectSQL"));
         }
     }
 

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -104,7 +104,7 @@ public void update(PanelAppTemplateRequest request) {
         BeanUtils.copyBean(requestTemplate, request);
         //Store static resource into the server
         if (StringUtils.isNotEmpty(request.getSnapshot())) {
-            String snapshotName = "app-template-" + request.getId() + ".jpeg";
+            String snapshotName = "app-template-" + UUIDUtil.getUUIDAsString() + ".jpeg";
             staticResourceService.saveSingleFileToServe(snapshotName, request.getSnapshot().replace("data:image/jpeg;base64,", ""));
             requestTemplate.setSnapshot("/" + UPLOAD_URL_PREFIX + '/' + snapshotName);
         }

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -104,7 +104,7 @@ public void update(PanelAppTemplateRequest request) {
         BeanUtils.copyBean(requestTemplate, request);
         //Store static resource into the server
         if (StringUtils.isNotEmpty(request.getSnapshot())) {
-            String snapshotName = "app-template-" + request.getId() + ".jpeg";
+            String snapshotName = "app-template-" + UUIDUtil.getUUIDAsString() + ".jpeg";
             staticResourceService.saveSingleFileToServe(snapshotName, request.getSnapshot().replace("data:image/jpeg;base64,", ""));
             requestTemplate.setSnapshot("/" + UPLOAD_URL_PREFIX + '/' + snapshotName);
         }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1338,7 +1338,6 @@ public String sqlForPreview(String table, Datasource ds) {
     public List<Dateformat> dateformat() {
         return JSONArray.parseArray("[\n" +
                 "{\"dateformat\": \"102\", \"desc\": \"yyyy.mm.dd\"},\n" +
-                "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd\"},\n" +
                 "{\"dateformat\": \"111\", \"desc\": \"yyyy/mm/dd\"},\n" +
                 "{\"dateformat\": \"112\", \"desc\": \"yyyymmdd\"},\n" +
                 "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd hh:mi:ss\"}\n" +

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2821,7 +2821,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                 boolean hasSubBinaryExpression = false;
                 try {
                     BinaryExpression leftBinaryExpression = (BinaryExpression) expr.getLeftExpression();
-                    hasSubBinaryExpression = leftBinaryExpression.getLeftExpression() instanceof Expression;
+                    hasSubBinaryExpression = leftBinaryExpression instanceof AndExpression || leftBinaryExpression instanceof OrExpression;
                 } catch (Exception e) {
                     e.printStackTrace();
                 }
@@ -2836,8 +2836,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                 hasSubBinaryExpression = false;
                 try {
                     BinaryExpression rightBinaryExpression = (BinaryExpression) expr.getRightExpression();
-                    hasSubBinaryExpression = rightBinaryExpression.getRightExpression() instanceof BinaryExpression;
-
+                    hasSubBinaryExpression = rightBinaryExpression instanceof AndExpression || rightBinaryExpression instanceof OrExpression;;
                 } catch (Exception e) {
                 }
                 if (expr.getRightExpression() instanceof BinaryExpression && !hasSubBinaryExpression && hasVariable(expr.getRightExpression().toString())) {

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1338,7 +1338,6 @@ public String sqlForPreview(String table, Datasource ds) {
     public List<Dateformat> dateformat() {
         return JSONArray.parseArray("[\n" +
                 "{\"dateformat\": \"102\", \"desc\": \"yyyy.mm.dd\"},\n" +
-                "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd\"},\n" +
                 "{\"dateformat\": \"111\", \"desc\": \"yyyy/mm/dd\"},\n" +
                 "{\"dateformat\": \"112\", \"desc\": \"yyyymmdd\"},\n" +
                 "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd hh:mi:ss\"}\n" +

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2821,7 +2821,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                 boolean hasSubBinaryExpression = false;
                 try {
                     BinaryExpression leftBinaryExpression = (BinaryExpression) expr.getLeftExpression();
-                    hasSubBinaryExpression = leftBinaryExpression.getLeftExpression() instanceof Expression;
+                    hasSubBinaryExpression = leftBinaryExpression instanceof AndExpression || leftBinaryExpression instanceof OrExpression;
                 } catch (Exception e) {
                     e.printStackTrace();
                 }
@@ -2836,8 +2836,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                 hasSubBinaryExpression = false;
                 try {
                     BinaryExpression rightBinaryExpression = (BinaryExpression) expr.getRightExpression();
-                    hasSubBinaryExpression = rightBinaryExpression.getRightExpression() instanceof BinaryExpression;
-
+                    hasSubBinaryExpression = rightBinaryExpression instanceof AndExpression || rightBinaryExpression instanceof OrExpression;;
                 } catch (Exception e) {
                 }
                 if (expr.getRightExpression() instanceof BinaryExpression && !hasSubBinaryExpression && hasVariable(expr.getRightExpression().toString())) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1116,7 +1116,7 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
             if (dsType.equals(DatasourceTypes.oracle.getType())) {
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString(), false));
             } else {
-                if(fromItem.getAlias() == null){
+                if (fromItem.getAlias() == null) {
                     throw new Exception("Failed to parse sql, Every derived table must have its own alias！");
                 }
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString()));
@@ -2426,7 +2426,7 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
                 jsonArray = data.stream().map(ele -> {
                     Map<String, Object> map = new HashMap<>();
                     for (int i = 0; i < fieldArray.length; i++) {
-                        map.put(fieldArray[i], ele.get(i));
+                        map.put(fieldArray[i], i < ele.size() ? ele.get(i) : "");
                     }
                     return map;
                 }).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1116,7 +1116,7 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
             if (dsType.equals(DatasourceTypes.oracle.getType())) {
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString(), false));
             } else {
-                if(fromItem.getAlias() == null){
+                if (fromItem.getAlias() == null) {
                     throw new Exception("Failed to parse sql, Every derived table must have its own alias！");
                 }
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString()));
@@ -2426,7 +2426,7 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
                 jsonArray = data.stream().map(ele -> {
                     Map<String, Object> map = new HashMap<>();
                     for (int i = 0; i < fieldArray.length; i++) {
-                        map.put(fieldArray[i], ele.get(i));
+                        map.put(fieldArray[i], i < ele.size() ? ele.get(i) : "");
                     }
                     return map;
                 }).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1121,7 +1121,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(SqlServerSQLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1121,7 +1121,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(SqlServerSQLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -167,7 +167,7 @@ public void sendReport(GlobalTaskInstance taskInstance, SysUserEntity user, Bool
         try {
             XpackEmailTemplateDTO emailTemplateDTO = emailXpackService.emailTemplate(taskInstance.getTaskId());
             XpackEmailTaskRequest taskForm = emailXpackService.taskForm(taskInstance.getTaskId());
-            if (ObjectUtils.isEmpty(taskForm) || (!isTempTask && (CronUtils.taskExpire(taskForm.getEndTime()) || !taskForm.getStatus()))) {
+            if (ObjectUtils.isEmpty(taskForm) || (!isTempTask && (CronUtils.taskExpire(taskForm.getEndTime()) || !emailXpackService.status(taskInstance.getTaskId())))) {
                 removeInstance(taskInstance);
                 return;
             }

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -167,7 +167,7 @@ public void sendReport(GlobalTaskInstance taskInstance, SysUserEntity user, Bool
         try {
             XpackEmailTemplateDTO emailTemplateDTO = emailXpackService.emailTemplate(taskInstance.getTaskId());
             XpackEmailTaskRequest taskForm = emailXpackService.taskForm(taskInstance.getTaskId());
-            if (ObjectUtils.isEmpty(taskForm) || (!isTempTask && (CronUtils.taskExpire(taskForm.getEndTime()) || !taskForm.getStatus()))) {
+            if (ObjectUtils.isEmpty(taskForm) || (!isTempTask && (CronUtils.taskExpire(taskForm.getEndTime()) || !emailXpackService.status(taskInstance.getTaskId())))) {
                 removeInstance(taskInstance);
                 return;
             }

File: backend/src/main/java/io/dataease/commons/utils/HttpClientUtil.java
Patch:
@@ -123,7 +123,6 @@ public static String post(String url, String json, HttpClientConfig config) {
             EntityBuilder entityBuilder = EntityBuilder.create();
             entityBuilder.setText(json);
             entityBuilder.setContentType(ContentType.APPLICATION_JSON);
-            entityBuilder.setContentEncoding(config.getCharset());
             HttpEntity requestEntity = entityBuilder.build();
             httpPost.setEntity(requestEntity);
 

File: backend/src/main/java/io/dataease/commons/utils/HttpClientUtil.java
Patch:
@@ -123,7 +123,6 @@ public static String post(String url, String json, HttpClientConfig config) {
             EntityBuilder entityBuilder = EntityBuilder.create();
             entityBuilder.setText(json);
             entityBuilder.setContentType(ContentType.APPLICATION_JSON);
-            entityBuilder.setContentEncoding(config.getCharset());
             HttpEntity requestEntity = entityBuilder.build();
             httpPost.setEntity(requestEntity);
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1116,6 +1116,9 @@ private String handlePlainSelect(PlainSelect plainSelect, Select statementSelect
             if (dsType.equals(DatasourceTypes.oracle.getType())) {
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString(), false));
             } else {
+                if(fromItem.getAlias() == null){
+                    throw new Exception("Failed to parse sql, Every derived table must have its own alias！");
+                }
                 subSelect.setAlias(new Alias(fromItem.getAlias().toString()));
             }
             plainSelect.setFromItem(subSelect);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2818,7 +2818,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                 boolean hasSubBinaryExpression = false;
                 try {
                     BinaryExpression leftBinaryExpression = (BinaryExpression) expr.getLeftExpression();
-                    hasSubBinaryExpression = leftBinaryExpression.getLeftExpression() instanceof BinaryExpression;
+                    hasSubBinaryExpression = leftBinaryExpression.getLeftExpression() instanceof Expression;
                 } catch (Exception e) {
                     e.printStackTrace();
                 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -982,8 +982,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             }
             if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page")) {
                 datasourceRequest.setQuery(totalPageSql);
-                java.util.List<java.lang.String[]> datas = datasourceProvider.getData(datasourceRequest);
-                totalItems = CollectionUtils.isEmpty(datas) ? 0 : Long.valueOf(datas.get(0)[0]);
+                java.util.List<java.lang.String[]> tmpData = datasourceProvider.getData(datasourceRequest);
+                totalItems = CollectionUtils.isEmpty(tmpData) ? 0 : Long.valueOf(tmpData.get(0)[0]);
                 totalPage = (totalItems / pageInfo.getPageSize()) + (totalItems % pageInfo.getPageSize() > 0 ? 1 : 0);
             }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -982,8 +982,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             }
             if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page")) {
                 datasourceRequest.setQuery(totalPageSql);
-                java.util.List<java.lang.String[]> datas = datasourceProvider.getData(datasourceRequest);
-                totalItems = CollectionUtils.isEmpty(datas) ? 0 : Long.valueOf(datas.get(0)[0]);
+                java.util.List<java.lang.String[]> tmpData = datasourceProvider.getData(datasourceRequest);
+                totalItems = CollectionUtils.isEmpty(tmpData) ? 0 : Long.valueOf(tmpData.get(0)[0]);
                 totalPage = (totalItems / pageInfo.getPageSize()) + (totalItems % pageInfo.getPageSize() > 0 ? 1 : 0);
             }
 

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1338,8 +1338,9 @@ public String sqlForPreview(String table, Datasource ds) {
     public List<Dateformat> dateformat() {
         return JSONArray.parseArray("[\n" +
                 "{\"dateformat\": \"102\", \"desc\": \"yyyy.mm.dd\"},\n" +
-                "{\"dateformat\": \"23\", \"desc\": \"yyyy-mm-dd\"},\n" +
+                "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd\"},\n" +
                 "{\"dateformat\": \"111\", \"desc\": \"yyyy/mm/dd\"},\n" +
+                "{\"dateformat\": \"112\", \"desc\": \"yyyymmdd\"},\n" +
                 "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd hh:mi:ss\"}\n" +
                 "]", Dateformat.class);
     }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -982,7 +982,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             }
             if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page")) {
                 datasourceRequest.setQuery(totalPageSql);
-                totalItems = Long.valueOf(datasourceProvider.getData(datasourceRequest).get(0)[0]);
+                java.util.List<java.lang.String[]> datas = datasourceProvider.getData(datasourceRequest);
+                totalItems = CollectionUtils.isEmpty(datas) ? 0 : Long.valueOf(datas.get(0)[0]);
                 totalPage = (totalItems / pageInfo.getPageSize()) + (totalItems % pageInfo.getPageSize() > 0 ? 1 : 0);
             }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -982,7 +982,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             }
             if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page")) {
                 datasourceRequest.setQuery(totalPageSql);
-                totalItems = Long.valueOf(datasourceProvider.getData(datasourceRequest).get(0)[0]);
+                java.util.List<java.lang.String[]> datas = datasourceProvider.getData(datasourceRequest);
+                totalItems = CollectionUtils.isEmpty(datas) ? 0 : Long.valueOf(datas.get(0)[0]);
                 totalPage = (totalItems / pageInfo.getPageSize()) + (totalItems % pageInfo.getPageSize() > 0 ? 1 : 0);
             }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -982,7 +982,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             }
             if (StringUtils.isNotEmpty(totalPageSql) && StringUtils.equalsIgnoreCase((String) mapSize.get("tablePageMode"), "page")) {
                 datasourceRequest.setQuery(totalPageSql);
-                totalItems = Long.valueOf(datasourceProvider.getData(datasourceRequest).get(0)[0]);
+                java.util.List<java.lang.String[]> datas = datasourceProvider.getData(datasourceRequest);
+                totalItems = CollectionUtils.isEmpty(datas) ? 0 : Long.valueOf(datas.get(0)[0]);
                 totalPage = (totalItems / pageInfo.getPageSize()) + (totalItems % pageInfo.getPageSize() > 0 ? 1 : 0);
             }
 

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1338,8 +1338,9 @@ public String sqlForPreview(String table, Datasource ds) {
     public List<Dateformat> dateformat() {
         return JSONArray.parseArray("[\n" +
                 "{\"dateformat\": \"102\", \"desc\": \"yyyy.mm.dd\"},\n" +
-                "{\"dateformat\": \"23\", \"desc\": \"yyyy-mm-dd\"},\n" +
+                "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd\"},\n" +
                 "{\"dateformat\": \"111\", \"desc\": \"yyyy/mm/dd\"},\n" +
+                "{\"dateformat\": \"112\", \"desc\": \"yyyymmdd\"},\n" +
                 "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd hh:mi:ss\"}\n" +
                 "]", Dateformat.class);
     }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1338,8 +1338,9 @@ public String sqlForPreview(String table, Datasource ds) {
     public List<Dateformat> dateformat() {
         return JSONArray.parseArray("[\n" +
                 "{\"dateformat\": \"102\", \"desc\": \"yyyy.mm.dd\"},\n" +
-                "{\"dateformat\": \"23\", \"desc\": \"yyyy-mm-dd\"},\n" +
+                "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd\"},\n" +
                 "{\"dateformat\": \"111\", \"desc\": \"yyyy/mm/dd\"},\n" +
+                "{\"dateformat\": \"112\", \"desc\": \"yyyymmdd\"},\n" +
                 "{\"dateformat\": \"120\", \"desc\": \"yyyy-mm-dd hh:mi:ss\"}\n" +
                 "]", Dateformat.class);
     }

File: backend/src/main/java/io/dataease/provider/ProviderFactory.java
Patch:
@@ -66,10 +66,11 @@ public static QueryProvider getQueryProvider(String type) {
         switch (type) {
             case "mysql":
             case "mariadb":
+                return context.getBean("mysqlQueryProvider", QueryProvider.class);
             case "ds_doris":
             case "TiDB":
             case "StarRocks":
-                return context.getBean("mysqlQueryProvider", QueryProvider.class);
+                return context.getBean("dorisQueryProvider", QueryProvider.class);
             default:
                 return SpringContextUtil.getApplicationContext().getBean(type + "QueryProvider", QueryProvider.class);
         }

File: backend/src/main/java/io/dataease/provider/ProviderFactory.java
Patch:
@@ -66,10 +66,11 @@ public static QueryProvider getQueryProvider(String type) {
         switch (type) {
             case "mysql":
             case "mariadb":
+                return context.getBean("mysqlQueryProvider", QueryProvider.class);
             case "ds_doris":
             case "TiDB":
             case "StarRocks":
-                return context.getBean("mysqlQueryProvider", QueryProvider.class);
+                return context.getBean("dorisQueryProvider", QueryProvider.class);
             default:
                 return SpringContextUtil.getApplicationContext().getBean(type + "QueryProvider", QueryProvider.class);
         }

File: backend/src/main/java/io/dataease/provider/ProviderFactory.java
Patch:
@@ -66,10 +66,11 @@ public static QueryProvider getQueryProvider(String type) {
         switch (type) {
             case "mysql":
             case "mariadb":
+                return context.getBean("mysqlQueryProvider", QueryProvider.class);
             case "ds_doris":
             case "TiDB":
             case "StarRocks":
-                return context.getBean("mysqlQueryProvider", QueryProvider.class);
+                return context.getBean("dorisQueryProvider", QueryProvider.class);
             default:
                 return SpringContextUtil.getApplicationContext().getBean(type + "QueryProvider", QueryProvider.class);
         }

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -457,7 +457,7 @@ private String originalTableInfo(String table, List<ChartViewFieldDTO> xAxis, Li
                 .build();
         if (CollectionUtils.isNotEmpty(orders)) st.add("orders", orders);
         if (ObjectUtils.isNotEmpty(tableSQL)) st.add("table", tableSQL);
-        return sqlLimit(st.render(), view);
+        return st.render();
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -457,7 +457,7 @@ private String originalTableInfo(String table, List<ChartViewFieldDTO> xAxis, Li
                 .build();
         if (CollectionUtils.isNotEmpty(orders)) st.add("orders", orders);
         if (ObjectUtils.isNotEmpty(tableSQL)) st.add("table", tableSQL);
-        return sqlLimit(st.render(), view);
+        return st.render();
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -1144,7 +1144,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == DeTypeConstants.DE_TIME) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
-                    fieldName = String.format(HiveConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(HiveConstants.DATE_FORMAT, String.format(HiveConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : HiveConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(HiveConstants.CAST, originField, HiveConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(HiveConstants.FROM_UNIXTIME, cast, HiveConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1174,7 +1174,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == 1) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == 0) {
-                    fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(MySQLConstants.DATE_FORMAT, String.format(MySQLConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -963,7 +963,7 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
             }
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                    whereName = String.format(PgConstants.CAST, originName, "timestamp");
+                    whereName = String.format(PgConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : PgConstants.DEFAULT_DATE_FORMAT);
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -1058,7 +1058,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
 
                 if (field.getDeType() == 1) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                        whereName = String.format(PgConstants.CAST, originName, "timestamp");
+                        whereName = String.format(PgConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : PgConstants.DEFAULT_DATE_FORMAT);
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                         String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -1166,7 +1166,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == DeTypeConstants.DE_TIME) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
-                    fieldName = String.format(PgConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(PgConstants.DATE_FORMAT, String.format(PgConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : PgConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(PgConstants.CAST, originField, "bigint");
                     String from_unixtime = String.format(PgConstants.FROM_UNIXTIME, cast);

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -1144,7 +1144,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == DeTypeConstants.DE_TIME) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
-                    fieldName = String.format(HiveConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(HiveConstants.DATE_FORMAT, String.format(HiveConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : HiveConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(HiveConstants.CAST, originField, HiveConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(HiveConstants.FROM_UNIXTIME, cast, HiveConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1174,7 +1174,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == 1) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == 0) {
-                    fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(MySQLConstants.DATE_FORMAT, String.format(MySQLConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : MysqlConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -963,7 +963,7 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
             }
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                    whereName = String.format(PgConstants.CAST, originName, "timestamp");
+                    whereName = String.format(PgConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : PgConstants.DEFAULT_DATE_FORMAT);
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -1058,7 +1058,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
 
                 if (field.getDeType() == 1) {
                     if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                        whereName = String.format(PgConstants.CAST, originName, "timestamp");
+                        whereName = String.format(PgConstants.STR_TO_DATE, originName, StringUtils.isNotEmpty(field.getDateFormat()) ? field.getDateFormat() : PgConstants.DEFAULT_DATE_FORMAT);
                     }
                     if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                         String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -1166,7 +1166,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == DeTypeConstants.DE_TIME) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
-                    fieldName = String.format(PgConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(PgConstants.DATE_FORMAT, String.format(PgConstants.STR_TO_DATE, originField, StringUtils.isNotEmpty(x.getDateFormat()) ? x.getDateFormat() : PgConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(PgConstants.CAST, originField, "bigint");
                     String from_unixtime = String.format(PgConstants.FROM_UNIXTIME, cast);

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -314,7 +314,9 @@ public PanelGroupDTO findOne(String panelId) {
             panelGroup.setPanelStyle(sourcePanel.getPanelStyle());
             panelGroup.setSourcePanelName(sourcePanel.getName());
         }
-        panelGroup.setWatermarkInfo(panelWatermarkMapper.selectByPrimaryKey("system_default"));
+        if (panelGroup != null) {
+            panelGroup.setWatermarkInfo(panelWatermarkMapper.selectByPrimaryKey("system_default"));
+        }
         return panelGroup;
     }
 

File: backend/src/main/java/io/dataease/ext/ExtDataSetTableFieldMapper.java
Patch:
@@ -8,4 +8,6 @@
 public interface ExtDataSetTableFieldMapper {
     List<DatasetTableField> findByPanelId(@Param("panelId") String panelId);
 
+    List<DatasetTableField> findByTableIds(@Param("tableIds") List<String> tableIds);
+
 }

File: backend/src/main/java/io/dataease/ext/ExtDataSetTaskMapper.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.dto.dataset.DataSetTaskLogDTO;
+import io.dataease.ext.query.GridExample;
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
@@ -25,4 +25,6 @@ public interface ExtDataSetTaskMapper {
     List<DataSetTaskDTO> taskWithTriggers(GridExample example);
 
     List<DataSetTaskDTO> findByPanelId(@Param("panelId") String panelId);
+
+    List<DataSetTaskDTO> findByTableIds(@Param("tableIds") List tableIds);
 }

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -1011,7 +1011,7 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
         } else {
             switch (columnPermissionItem.getDesensitizationRule().getCustomBuiltInRule()) {
                 case RetainBeforeMAndAfterN:
-                    if (StringUtils.isEmpty(originStr) || originStr.length() < columnPermissionItem.getDesensitizationRule().getM() + columnPermissionItem.getDesensitizationRule().getN() + 1) {
+                    if (StringUtils.isEmpty(originStr) || originStr.length() <= columnPermissionItem.getDesensitizationRule().getM() + columnPermissionItem.getDesensitizationRule().getN() + 1) {
                         desensitizationStr = String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getM(), "X")) + "***" + String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getN(), "X"));
                     } else {
                         desensitizationStr = StringUtils.substring(originStr, 0, columnPermissionItem.getDesensitizationRule().getM() - 1) + "***" + StringUtils.substring(originStr, originStr.length() - columnPermissionItem.getDesensitizationRule().getN(), originStr.length() - 1);

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -1011,7 +1011,7 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
         } else {
             switch (columnPermissionItem.getDesensitizationRule().getCustomBuiltInRule()) {
                 case RetainBeforeMAndAfterN:
-                    if (StringUtils.isEmpty(originStr) || originStr.length() < columnPermissionItem.getDesensitizationRule().getM() + columnPermissionItem.getDesensitizationRule().getN() + 1) {
+                    if (StringUtils.isEmpty(originStr) || originStr.length() <= columnPermissionItem.getDesensitizationRule().getM() + columnPermissionItem.getDesensitizationRule().getN() + 1) {
                         desensitizationStr = String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getM(), "X")) + "***" + String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getN(), "X"));
                     } else {
                         desensitizationStr = StringUtils.substring(originStr, 0, columnPermissionItem.getDesensitizationRule().getM() - 1) + "***" + StringUtils.substring(originStr, originStr.length() - columnPermissionItem.getDesensitizationRule().getN(), originStr.length() - 1);

File: backend/src/main/java/io/dataease/ext/ExtDataSetTableFieldMapper.java
Patch:
@@ -8,4 +8,6 @@
 public interface ExtDataSetTableFieldMapper {
     List<DatasetTableField> findByPanelId(@Param("panelId") String panelId);
 
+    List<DatasetTableField> findByTableIds(@Param("tableIds") List<String> tableIds);
+
 }

File: backend/src/main/java/io/dataease/ext/ExtDataSetTaskMapper.java
Patch:
@@ -1,8 +1,8 @@
 package io.dataease.ext;
 
-import io.dataease.ext.query.GridExample;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.dto.dataset.DataSetTaskLogDTO;
+import io.dataease.ext.query.GridExample;
 import org.apache.ibatis.annotations.Mapper;
 import org.apache.ibatis.annotations.Param;
 
@@ -25,4 +25,6 @@ public interface ExtDataSetTaskMapper {
     List<DataSetTaskDTO> taskWithTriggers(GridExample example);
 
     List<DataSetTaskDTO> findByPanelId(@Param("panelId") String panelId);
+
+    List<DataSetTaskDTO> findByTableIds(@Param("tableIds") List tableIds);
 }

File: backend/src/main/java/io/dataease/auth/entity/AccountLockStatus.java
Patch:
@@ -12,4 +12,6 @@ public class AccountLockStatus {
     private Long unlockTime;
 
     private Integer relieveTimes;
+
+    private Integer remainderTimes;
 }

File: backend/src/main/java/io/dataease/auth/service/AuthUserService.java
Patch:
@@ -55,7 +55,7 @@ public interface AuthUserService {
 
     void checkAdmin(String uname, String pwd);
 
-    void recordLoginFail(String username, Integer logintype);
+    AccountLockStatus recordLoginFail(String username, Integer logintype);
 
     void unlockAccount(String username, Integer logintype);
 

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -364,10 +364,11 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
 
     @Override
     public String getSQLWithPage(boolean isTable, String table, List<ChartViewFieldDTO> xAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<DataSetRowPermissionsTreeDTO> rowPermissionsTree, List<ChartExtFilterRequest> extFilterRequestList, Datasource ds, ChartViewWithBLOBs view, PageInfo pageInfo) {
+        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize() : "");
         if (isTable) {
-            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         } else {
-            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         }
     }
 

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -364,10 +364,11 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
 
     @Override
     public String getSQLWithPage(boolean isTable, String table, List<ChartViewFieldDTO> xAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<DataSetRowPermissionsTreeDTO> rowPermissionsTree, List<ChartExtFilterRequest> extFilterRequestList, Datasource ds, ChartViewWithBLOBs view, PageInfo pageInfo) {
+        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize() : "");
         if (isTable) {
-            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         } else {
-            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         }
     }
 

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -364,10 +364,11 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
 
     @Override
     public String getSQLWithPage(boolean isTable, String table, List<ChartViewFieldDTO> xAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<DataSetRowPermissionsTreeDTO> rowPermissionsTree, List<ChartExtFilterRequest> extFilterRequestList, Datasource ds, ChartViewWithBLOBs view, PageInfo pageInfo) {
+        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize() : "");
         if (isTable) {
-            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         } else {
-            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         }
     }
 

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -364,10 +364,11 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
 
     @Override
     public String getSQLWithPage(boolean isTable, String table, List<ChartViewFieldDTO> xAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<DataSetRowPermissionsTreeDTO> rowPermissionsTree, List<ChartExtFilterRequest> extFilterRequestList, Datasource ds, ChartViewWithBLOBs view, PageInfo pageInfo) {
+        String limit = ((pageInfo.getGoPage() != null && pageInfo.getPageSize() != null) ? " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize() : "");
         if (isTable) {
-            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo(table, xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         } else {
-            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + " LIMIT " + (pageInfo.getGoPage() - 1) * pageInfo.getPageSize() + "," + pageInfo.getPageSize();
+            return originalTableInfo("(" + sqlFix(table) + ")", xAxis, fieldCustomFilter, rowPermissionsTree, extFilterRequestList, ds, view) + limit;
         }
     }
 

File: backend/src/main/java/io/dataease/auth/entity/AccountLockStatus.java
Patch:
@@ -12,4 +12,6 @@ public class AccountLockStatus {
     private Long unlockTime;
 
     private Integer relieveTimes;
+
+    private Integer remainderTimes;
 }

File: backend/src/main/java/io/dataease/auth/service/AuthUserService.java
Patch:
@@ -55,7 +55,7 @@ public interface AuthUserService {
 
     void checkAdmin(String uname, String pwd);
 
-    void recordLoginFail(String username, Integer logintype);
+    AccountLockStatus recordLoginFail(String username, Integer logintype);
 
     void unlockAccount(String username, Integer logintype);
 

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -1012,7 +1012,7 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
             switch (columnPermissionItem.getDesensitizationRule().getCustomBuiltInRule()) {
                 case RetainBeforeMAndAfterN:
                     if (StringUtils.isEmpty(originStr) || originStr.length() < columnPermissionItem.getDesensitizationRule().getM() + columnPermissionItem.getDesensitizationRule().getN() + 1) {
-                        desensitizationStr = String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getM(), "X")) + "***" + Collections.nCopies(columnPermissionItem.getDesensitizationRule().getN(), "X");
+                        desensitizationStr = String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getM(), "X")) + "***" + String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getN(), "X"));
                     } else {
                         desensitizationStr = StringUtils.substring(originStr, 0, columnPermissionItem.getDesensitizationRule().getM() - 1) + "***" + StringUtils.substring(originStr, originStr.length() - columnPermissionItem.getDesensitizationRule().getN(), originStr.length() - 1);
                     }
@@ -1030,7 +1030,7 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
                         desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
                         break;
                     }
-                    if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getN() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
+                    if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
                         desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
                     }
                     break;

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -1012,7 +1012,7 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
             switch (columnPermissionItem.getDesensitizationRule().getCustomBuiltInRule()) {
                 case RetainBeforeMAndAfterN:
                     if (StringUtils.isEmpty(originStr) || originStr.length() < columnPermissionItem.getDesensitizationRule().getM() + columnPermissionItem.getDesensitizationRule().getN() + 1) {
-                        desensitizationStr = String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getM(), "X")) + "***" + Collections.nCopies(columnPermissionItem.getDesensitizationRule().getN(), "X");
+                        desensitizationStr = String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getM(), "X")) + "***" + String.join("", Collections.nCopies(columnPermissionItem.getDesensitizationRule().getN(), "X"));
                     } else {
                         desensitizationStr = StringUtils.substring(originStr, 0, columnPermissionItem.getDesensitizationRule().getM() - 1) + "***" + StringUtils.substring(originStr, originStr.length() - columnPermissionItem.getDesensitizationRule().getN(), originStr.length() - 1);
                     }
@@ -1030,7 +1030,7 @@ public static String desensitizationValue(ColumnPermissionItem columnPermissionI
                         desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, columnPermissionItem.getDesensitizationRule().getN()) + "***";
                         break;
                     }
-                    if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getN() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
+                    if (originStr.length() >= columnPermissionItem.getDesensitizationRule().getM() && originStr.length() < columnPermissionItem.getDesensitizationRule().getN()) {
                         desensitizationStr = "***" + StringUtils.substring(originStr, columnPermissionItem.getDesensitizationRule().getM() - 1, originStr.length());
                     }
                     break;

File: backend/src/main/java/io/dataease/dto/chart/ChartViewDTO.java
Patch:
@@ -45,4 +45,5 @@ public class ChartViewDTO extends ChartViewWithBLOBs {
     private long totalPage;
     private long totalItems;
     private int datasetMode;
+    private String datasourceType;
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -302,6 +302,8 @@ public ChartViewDTO getData(String id, ChartExtRequest request) throws Exception
             DatasetTable datasetTable = dataSetTableService.get(view.getTableId());
             if (ObjectUtils.isNotEmpty(datasetTable)) {
                 view.setDatasetMode(datasetTable.getMode());
+                Datasource datasource = datasourceService.get(datasetTable.getDataSourceId());
+                view.setDatasourceType(datasource != null ? datasource.getType() : null);
             }
             // 如果是从仪表板获取视图数据，则仪表板的查询模式，查询结果的数量，覆盖视图对应的属性
             if (CommonConstants.VIEW_RESULT_MODE.CUSTOM.equals(request.getResultMode())) {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -908,7 +908,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             if (StringUtils.equalsIgnoreCase(table.getType(), DatasetType.DB.name())) {
                 datasourceRequest.setTable(dataTableInfoDTO.getTable());
                 if (StringUtils.equalsAnyIgnoreCase(view.getType(), "text", "gauge", "liquid")) {
-                    datasourceRequest.setQuery(qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, rowPermissionsTree, extFilterList, view, ds));
+                    querySql = qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, rowPermissionsTree, extFilterList, view, ds);
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "stack")) {
                     querySql = qp.getSQLStack(dataTableInfoDTO.getTable(), xAxis, yAxis, fieldCustomFilter, rowPermissionsTree, extFilterList, extStack, ds, view);
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "scatter")) {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -908,7 +908,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest chartExtRequest,
             if (StringUtils.equalsIgnoreCase(table.getType(), DatasetType.DB.name())) {
                 datasourceRequest.setTable(dataTableInfoDTO.getTable());
                 if (StringUtils.equalsAnyIgnoreCase(view.getType(), "text", "gauge", "liquid")) {
-                    datasourceRequest.setQuery(qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, rowPermissionsTree, extFilterList, view, ds));
+                    querySql = qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, rowPermissionsTree, extFilterList, view, ds);
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "stack")) {
                     querySql = qp.getSQLStack(dataTableInfoDTO.getTable(), xAxis, yAxis, fieldCustomFilter, rowPermissionsTree, extFilterList, extStack, ds, view);
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "scatter")) {

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -168,13 +168,14 @@ public CurrentUserDto userInfo() {
             String token = ServletUtils.getToken();
             Long userId = JWTUtils.tokenInfoByToken(token).getUserId();
             SysUserEntity user = authUserService.getUserById(userId);
-            CurrentUserDto currentUserDto = BeanUtils.copyBean(new CurrentUserDto(), user);
+            CurrentUserDto currentUserDto = BeanUtils.copyBean(new CurrentUserDto(), user, "password");
             List<CurrentRoleDto> currentRoleDtos = authUserService.roleInfos(user.getUserId());
             List<String> permissions = authUserService.permissions(user.getUserId());
             currentUserDto.setRoles(currentRoleDtos);
             currentUserDto.setPermissions(permissions);
             return currentUserDto;
         }
+        userDto.setPassword(null);
         return userDto;
     }
 

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -168,13 +168,14 @@ public CurrentUserDto userInfo() {
             String token = ServletUtils.getToken();
             Long userId = JWTUtils.tokenInfoByToken(token).getUserId();
             SysUserEntity user = authUserService.getUserById(userId);
-            CurrentUserDto currentUserDto = BeanUtils.copyBean(new CurrentUserDto(), user);
+            CurrentUserDto currentUserDto = BeanUtils.copyBean(new CurrentUserDto(), user, "password");
             List<CurrentRoleDto> currentRoleDtos = authUserService.roleInfos(user.getUserId());
             List<String> permissions = authUserService.permissions(user.getUserId());
             currentUserDto.setRoles(currentRoleDtos);
             currentUserDto.setPermissions(permissions);
             return currentUserDto;
         }
+        userDto.setPassword(null);
         return userDto;
     }
 

File: backend/src/main/java/io/dataease/dto/authModel/VAuthModelDTO.java
Patch:
@@ -18,12 +18,13 @@ public class VAuthModelDTO extends VAuthModelWithBLOBs implements ITreeBase<VAut
 
     private List<VAuthModelDTO> children;
 
-    private long allLeafs = 0l;
+    private long allLeafs = 0L;
 
     private String innerId;
 
     private Boolean isPlugin = false;
 
+    @Override
     public String toString(){
         return this.getName();
     }

File: backend/src/main/java/io/dataease/dto/authModel/VAuthModelDTO.java
Patch:
@@ -18,12 +18,13 @@ public class VAuthModelDTO extends VAuthModelWithBLOBs implements ITreeBase<VAut
 
     private List<VAuthModelDTO> children;
 
-    private long allLeafs = 0l;
+    private long allLeafs = 0L;
 
     private String innerId;
 
     private Boolean isPlugin = false;
 
+    @Override
     public String toString(){
         return this.getName();
     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2866,7 +2866,7 @@ public void createAppUnionDorisView(String datasetInfo, String tableId) throws E
         createDorisView(TableUtils.tableName(tableId), sql);
     }
 
-    public void updateDatasetInfo(DatasetTable datasetTable){
+    public void updateDatasetInfo(DatasetTable datasetTable) {
         datasetTableMapper.updateByPrimaryKeySelective(datasetTable);
     }
 }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -873,7 +873,7 @@ public String appApply(PanelAppTemplateApplyRequest request) throws Exception{
 
         panelAppTemplateService.applyViewsField(chartViewFieldsInfo,chartViewsRealMap,datasetsRealMap,datasetFieldsRealMap);
 
-        panelAppTemplateService.applyPanel(panelInfo,chartViewsRealMap,newPanelId, request.getPanelName(), request.getPanelGroupPid());
+        panelAppTemplateService.applyPanel(panelInfo,chartViewsRealMap,datasetsRealMap,datasetFieldsRealMap,newPanelId, request.getPanelName(), request.getPanelGroupPid());
 
         panelAppTemplateService.applyPanelView(panelViewsInfo,chartViewsRealMap,newPanelId);
 

File: backend/src/main/java/io/dataease/commons/utils/HttpClientConfig.java
Patch:
@@ -15,9 +15,9 @@ public class HttpClientConfig {
     private Map<String, String> header = new HashMap<>();
 
     // 设置连接超时时间，单位毫秒
-    private int connectTimeout = 5000;
+    private int connectTimeout = 30000;
     // 设置从connect Manager获取Connection 超时时间，单位毫秒。这个属性是新加的属性，因为目前版本是可以共享连接池的
-    private int connectionRequestTimeout = 5000;
+    private int connectionRequestTimeout = 30000;
     // 请求获取数据的超时时间，单位毫秒。 如果访问一个接口，多少时间内无法返回数据，就直接放弃此次调用
     private int socketTimeout = 60000;
 

File: backend/src/main/java/io/dataease/dto/templateMarket/TemplateCategory.java
Patch:
@@ -14,4 +14,6 @@ public class TemplateCategory {
     private String name;
 
     private String slug;
+
+    private Integer priority;
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -170,7 +170,7 @@ private void extractData(DataSetTableRequest datasetTable) throws Exception {
             datasetTableTask.setTableId(datasetTable.getId());
             datasetTableTask.setRate(ScheduleType.SIMPLE.toString());
             datasetTableTask.setType("all_scope");
-            datasetTableTask.setName(datasetTable.getName() + " 更新设置");
+            datasetTableTask.setName(datasetTable.getName() + " 更新设置-" + System.currentTimeMillis());
             datasetTableTask.setEnd("0");
             datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setStartTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/service/templateMarket/TemplateMarketService.java
Patch:
@@ -17,6 +17,7 @@
 import org.springframework.stereotype.Service;
 
 import javax.annotation.Resource;
+import java.util.Comparator;
 import java.util.List;
 import java.util.stream.Collectors;
 
@@ -76,7 +77,7 @@ public List<String> getCategories(){
         String resultStr = marketGet(basicInfo.getTemplateMarketUlr()+CATEGORIES_API,basicInfo.getTemplateAccessKey());
         List<TemplateCategory> categories = JSONObject.parseObject(resultStr).getJSONArray("data").toJavaList(TemplateCategory.class);
         if(CollectionUtils.isNotEmpty(categories)){
-            return categories.stream().map(TemplateCategory :: getName).collect(Collectors.toList());
+            return categories.stream().sorted(Comparator.comparing(TemplateCategory::getPriority)).map(TemplateCategory :: getName).collect(Collectors.toList());
         }else{
             return null;
         }

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -86,8 +86,8 @@ public void save(PanelAppTemplateRequest request) {
             String snapshotName = "app-template-" + request.getId() + ".jpeg";
             staticResourceService.saveSingleFileToServe(snapshotName, request.getSnapshot().replace("data:image/jpeg;base64,", ""));
             requestTemplate.setSnapshot("/" + UPLOAD_URL_PREFIX + '/' + snapshotName);
-            panelAppTemplateMapper.insertSelective(requestTemplate);
         }
+        panelAppTemplateMapper.insertSelective(requestTemplate);
     }
 
 

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -86,8 +86,8 @@ public void save(PanelAppTemplateRequest request) {
             String snapshotName = "app-template-" + request.getId() + ".jpeg";
             staticResourceService.saveSingleFileToServe(snapshotName, request.getSnapshot().replace("data:image/jpeg;base64,", ""));
             requestTemplate.setSnapshot("/" + UPLOAD_URL_PREFIX + '/' + snapshotName);
-            panelAppTemplateMapper.insertSelective(requestTemplate);
         }
+        panelAppTemplateMapper.insertSelective(requestTemplate);
     }
 
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -170,7 +170,7 @@ private void extractData(DataSetTableRequest datasetTable) throws Exception {
             datasetTableTask.setTableId(datasetTable.getId());
             datasetTableTask.setRate(ScheduleType.SIMPLE.toString());
             datasetTableTask.setType("all_scope");
-            datasetTableTask.setName(datasetTable.getName() + " 更新设置");
+            datasetTableTask.setName(datasetTable.getName() + " 更新设置-" + System.currentTimeMillis());
             datasetTableTask.setEnd("0");
             datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setStartTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -109,7 +109,7 @@ public List<DataSetTableDTO> listAndGroup(@RequestBody DataSetTableRequest dataS
     }
 
     @DePermission(type = DePermissionType.DATASET, level = ResourceAuthLevel.DATASET_LEVEL_USE)
-    @ApiOperation("详息")
+    @ApiOperation("详细信息")
     @PostMapping("get/{id}")
     public DatasetTable get(@ApiParam(name = "id", value = "数据集ID", required = true) @PathVariable String id) {
         return dataSetTableService.get(id);
@@ -194,7 +194,7 @@ public void saveIncrementalConfig(@RequestBody DatasetTableIncrementalConfig dat
     }
 
     @DePermission(type = DePermissionType.DATASET)
-    @ApiOperation("数据集详息")
+    @ApiOperation("数据集详细信息")
     @PostMapping("datasetDetail/{id}")
     public DataSetDetail datasetDetail(@PathVariable String id) {
         return dataSetTableService.getDatasetDetail(id);

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -190,6 +190,7 @@ public Object findPanelElementInfo(@PathVariable String viewId){
        return panelGroupService.findPanelElementInfo(viewId);
     }
     @GetMapping("/export2AppCheck/{panelId}")
+    @I18n
     public PanelExport2App export2AppCheck(@PathVariable String panelId){
        return  panelGroupService.panelExport2AppCheck(panelId);
     }

File: backend/src/main/java/io/dataease/controller/panel/PanelTemplateController.java
Patch:
@@ -46,7 +46,7 @@ public void delete(@PathVariable String id) {
         panelTemplateService.delete(id);
     }
 
-    @ApiOperation("详息")
+    @ApiOperation("详细信息")
     @GetMapping("/findOne/{id}")
     public PanelTemplateWithBLOBs findOne(@PathVariable String id) throws Exception {
         return panelTemplateService.findOne(id);

File: backend/src/main/java/io/dataease/controller/panel/api/LinkApi.java
Patch:
@@ -51,11 +51,11 @@ public interface LinkApi {
     @PostMapping("/validatePwd")
     boolean validatePwd(PasswordRequest request) throws Exception;
 
-    @ApiOperation("资源详息")
+    @ApiOperation("资源详细信息")
     @GetMapping("/resourceDetail/{resourceId}")
     Object resourceDetail(@PathVariable String resourceId);
 
-    @ApiOperation("视图详息")
+    @ApiOperation("视图详细信息")
     @PostMapping("/viewDetail/{viewId}/{panelId}")
     Object viewDetail(@PathVariable("viewId") String viewId, @PathVariable("panelId") String panelId,
             @RequestBody ChartExtRequest requestList) throws Exception;

File: backend/src/main/java/io/dataease/controller/request/panel/PanelTemplateRequest.java
Patch:
@@ -13,7 +13,7 @@
 public class PanelTemplateRequest extends PanelTemplateWithBLOBs {
     @ApiModelProperty("排序")
     private String sort;
-    @ApiModelProperty("详息")
+    @ApiModelProperty("详细信息")
     private String withBlobs="Y";
     @ApiModelProperty("操作类型")
     private String optType;

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -788,9 +788,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
 
                         ChartExtFilterRequest drillFilter = new ChartExtFilterRequest();
                         drillFilter.setFieldId(dto.getId());
-                        drillFilter.setValue(new ArrayList<String>() {{
-                            add(dto.getValue());
-                        }});
+                        drillFilter.setValue(Collections.singletonList(dto.getValue()));
                         drillFilter.setOperator("in");
                         drillFilter.setDatasetTableField(datasetTableField);
                         extFilterList.add(drillFilter);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -350,6 +350,7 @@ public DatasetTable save(DataSetTableRequest datasetTable) throws Exception {
                             || StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.UNION.name())) {
                         saveTableField(datasetTable);
                     }
+                    extractData(datasetTable);
                     DeLogUtils.save(SysLogConstants.OPERATE_TYPE.MODIFY, SysLogConstants.SOURCE_TYPE.DATASET, datasetTable.getId(), datasetTable.getSceneId(), null, null);
                 }
             }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -84,7 +84,7 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
             }
             datasetTableTaskMapper.insert(datasetTableTask);
         } else {
-            datasetTableTask.setStatus(null);
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setLastExecTime(null);
             datasetTableTask.setLastExecStatus(null);
             datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -109,7 +109,7 @@ public List<DataSetTableDTO> listAndGroup(@RequestBody DataSetTableRequest dataS
     }
 
     @DePermission(type = DePermissionType.DATASET, level = ResourceAuthLevel.DATASET_LEVEL_USE)
-    @ApiOperation("详息")
+    @ApiOperation("详细信息")
     @PostMapping("get/{id}")
     public DatasetTable get(@ApiParam(name = "id", value = "数据集ID", required = true) @PathVariable String id) {
         return dataSetTableService.get(id);
@@ -194,7 +194,7 @@ public void saveIncrementalConfig(@RequestBody DatasetTableIncrementalConfig dat
     }
 
     @DePermission(type = DePermissionType.DATASET)
-    @ApiOperation("数据集详息")
+    @ApiOperation("数据集详细信息")
     @PostMapping("datasetDetail/{id}")
     public DataSetDetail datasetDetail(@PathVariable String id) {
         return dataSetTableService.getDatasetDetail(id);

File: backend/src/main/java/io/dataease/controller/panel/PanelTemplateController.java
Patch:
@@ -46,7 +46,7 @@ public void delete(@PathVariable String id) {
         panelTemplateService.delete(id);
     }
 
-    @ApiOperation("详息")
+    @ApiOperation("详细信息")
     @GetMapping("/findOne/{id}")
     public PanelTemplateWithBLOBs findOne(@PathVariable String id) throws Exception {
         return panelTemplateService.findOne(id);

File: backend/src/main/java/io/dataease/controller/panel/api/LinkApi.java
Patch:
@@ -51,11 +51,11 @@ public interface LinkApi {
     @PostMapping("/validatePwd")
     boolean validatePwd(PasswordRequest request) throws Exception;
 
-    @ApiOperation("资源详息")
+    @ApiOperation("资源详细信息")
     @GetMapping("/resourceDetail/{resourceId}")
     Object resourceDetail(@PathVariable String resourceId);
 
-    @ApiOperation("视图详息")
+    @ApiOperation("视图详细信息")
     @PostMapping("/viewDetail/{viewId}/{panelId}")
     Object viewDetail(@PathVariable("viewId") String viewId, @PathVariable("panelId") String panelId,
             @RequestBody ChartExtRequest requestList) throws Exception;

File: backend/src/main/java/io/dataease/controller/request/panel/PanelTemplateRequest.java
Patch:
@@ -13,7 +13,7 @@
 public class PanelTemplateRequest extends PanelTemplateWithBLOBs {
     @ApiModelProperty("排序")
     private String sort;
-    @ApiModelProperty("详息")
+    @ApiModelProperty("详细信息")
     private String withBlobs="Y";
     @ApiModelProperty("操作类型")
     private String optType;

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -788,9 +788,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
 
                         ChartExtFilterRequest drillFilter = new ChartExtFilterRequest();
                         drillFilter.setFieldId(dto.getId());
-                        drillFilter.setValue(new ArrayList<String>() {{
-                            add(dto.getValue());
-                        }});
+                        drillFilter.setValue(Collections.singletonList(dto.getValue()));
                         drillFilter.setOperator("in");
                         drillFilter.setDatasetTableField(datasetTableField);
                         extFilterList.add(drillFilter);

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -190,6 +190,7 @@ public Object findPanelElementInfo(@PathVariable String viewId){
        return panelGroupService.findPanelElementInfo(viewId);
     }
     @GetMapping("/export2AppCheck/{panelId}")
+    @I18n
     public PanelExport2App export2AppCheck(@PathVariable String panelId){
        return  panelGroupService.panelExport2AppCheck(panelId);
     }

File: backend/src/main/java/io/dataease/ext/ExtDataSourceMapper.java
Patch:
@@ -15,7 +15,7 @@ public interface ExtDataSourceMapper {
 
     List<DatasourceDTO> findByPanelId(@Param("panelId") String panelId);
 
-
+    DatasourceDTO queryDetails(@Param("datasourceId") String datasourceId,@Param("userId") String userId);
 
 
 }

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -233,7 +233,7 @@ public void export(@RequestBody XpackGridRequest request) throws Exception{
         ExcelSheetModel excelSheetModel = excelSheetModel(instanceDTOS);
         List<ExcelSheetModel> sheetModels = new ArrayList<>();
         sheetModels.add(excelSheetModel);
-        File file = ExcelUtils.exportExcel(sheetModels, null);
+        File file = ExcelUtils.exportExcel(sheetModels, null, null);
         InputStream inputStream = new FileInputStream(file);
         HttpServletResponse response = ServletUtils.response();
         try {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -84,7 +84,7 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
             }
             datasetTableTaskMapper.insert(datasetTableTask);
         } else {
-            datasetTableTask.setStatus(null);
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setLastExecTime(null);
             datasetTableTask.setLastExecStatus(null);
             datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -182,6 +182,7 @@ public Map<String, String> applyDatasetField(List<DatasetTableField> datasetTabl
         for (DatasetTableField datasetTableField : datasetTableFieldsInfo) {
             String oldId = datasetTableField.getId();
             datasetTableField.setTableId(datasetsRealMap.get(datasetTableField.getTableId()));
+            datasetTableField.setId(null);
             DatasetTableField newTableField = dataSetTableFieldsService.save(datasetTableField);
             datasetFieldsRealMap.put(oldId, newTableField.getId());
         }

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -190,6 +190,7 @@ public Object findPanelElementInfo(@PathVariable String viewId){
        return panelGroupService.findPanelElementInfo(viewId);
     }
     @GetMapping("/export2AppCheck/{panelId}")
+    @I18n
     public PanelExport2App export2AppCheck(@PathVariable String panelId){
        return  panelGroupService.panelExport2AppCheck(panelId);
     }

File: backend/src/main/java/io/dataease/ext/ExtDataSourceMapper.java
Patch:
@@ -15,7 +15,7 @@ public interface ExtDataSourceMapper {
 
     List<DatasourceDTO> findByPanelId(@Param("panelId") String panelId);
 
-
+    DatasourceDTO queryDetails(@Param("datasourceId") String datasourceId,@Param("userId") String userId);
 
 
 }

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -233,7 +233,7 @@ public void export(@RequestBody XpackGridRequest request) throws Exception{
         ExcelSheetModel excelSheetModel = excelSheetModel(instanceDTOS);
         List<ExcelSheetModel> sheetModels = new ArrayList<>();
         sheetModels.add(excelSheetModel);
-        File file = ExcelUtils.exportExcel(sheetModels, null);
+        File file = ExcelUtils.exportExcel(sheetModels, null, null);
         InputStream inputStream = new FileInputStream(file);
         HttpServletResponse response = ServletUtils.response();
         try {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -84,7 +84,7 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
             }
             datasetTableTaskMapper.insert(datasetTableTask);
         } else {
-            datasetTableTask.setStatus(null);
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setLastExecTime(null);
             datasetTableTask.setLastExecStatus(null);
             datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -182,6 +182,7 @@ public Map<String, String> applyDatasetField(List<DatasetTableField> datasetTabl
         for (DatasetTableField datasetTableField : datasetTableFieldsInfo) {
             String oldId = datasetTableField.getId();
             datasetTableField.setTableId(datasetsRealMap.get(datasetTableField.getTableId()));
+            datasetTableField.setId(null);
             DatasetTableField newTableField = dataSetTableFieldsService.save(datasetTableField);
             datasetFieldsRealMap.put(oldId, newTableField.getId());
         }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -788,9 +788,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
 
                         ChartExtFilterRequest drillFilter = new ChartExtFilterRequest();
                         drillFilter.setFieldId(dto.getId());
-                        drillFilter.setValue(new ArrayList<String>() {{
-                            add(dto.getValue());
-                        }});
+                        drillFilter.setValue(Collections.singletonList(dto.getValue()));
                         drillFilter.setOperator("in");
                         drillFilter.setDatasetTableField(datasetTableField);
                         extFilterList.add(drillFilter);

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -190,6 +190,7 @@ public Object findPanelElementInfo(@PathVariable String viewId){
        return panelGroupService.findPanelElementInfo(viewId);
     }
     @GetMapping("/export2AppCheck/{panelId}")
+    @I18n
     public PanelExport2App export2AppCheck(@PathVariable String panelId){
        return  panelGroupService.panelExport2AppCheck(panelId);
     }

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -190,6 +190,7 @@ public Object findPanelElementInfo(@PathVariable String viewId){
        return panelGroupService.findPanelElementInfo(viewId);
     }
     @GetMapping("/export2AppCheck/{panelId}")
+    @I18n
     public PanelExport2App export2AppCheck(@PathVariable String panelId){
        return  panelGroupService.panelExport2AppCheck(panelId);
     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -350,6 +350,7 @@ public DatasetTable save(DataSetTableRequest datasetTable) throws Exception {
                             || StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.UNION.name())) {
                         saveTableField(datasetTable);
                     }
+                    extractData(datasetTable);
                     DeLogUtils.save(SysLogConstants.OPERATE_TYPE.MODIFY, SysLogConstants.SOURCE_TYPE.DATASET, datasetTable.getId(), datasetTable.getSceneId(), null, null);
                 }
             }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -84,7 +84,7 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
             }
             datasetTableTaskMapper.insert(datasetTableTask);
         } else {
-            datasetTableTask.setStatus(null);
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setLastExecTime(null);
             datasetTableTask.setLastExecStatus(null);
             datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -350,6 +350,7 @@ public DatasetTable save(DataSetTableRequest datasetTable) throws Exception {
                             || StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.UNION.name())) {
                         saveTableField(datasetTable);
                     }
+                    extractData(datasetTable);
                     DeLogUtils.save(SysLogConstants.OPERATE_TYPE.MODIFY, SysLogConstants.SOURCE_TYPE.DATASET, datasetTable.getId(), datasetTable.getSceneId(), null, null);
                 }
             }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -84,7 +84,7 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
             }
             datasetTableTaskMapper.insert(datasetTableTask);
         } else {
-            datasetTableTask.setStatus(null);
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
             datasetTableTask.setLastExecTime(null);
             datasetTableTask.setLastExecStatus(null);
             datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -212,7 +212,7 @@ public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO em
                 List<String> viewIdList = Arrays.asList(viewIds.split(",")).stream().map(s -> s.trim()).filter(viewId -> StringUtils.isNotBlank(viewId) && viewOptionIdList.contains(viewId)).collect(Collectors.toList());
                 PermissionProxy proxy = new PermissionProxy();
                 proxy.setUserId(user.getUserId());
-                files = viewExportExcel.export(panelId, viewIdList, proxy, justExportView);
+                files = viewExportExcel.export(panelId, viewIdList, proxy, justExportView, taskInstance.getTaskId().toString());
             }
 
             List<String> channels = null;

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -40,7 +40,7 @@ public class ViewExportExcel {
     }.getType();
 
     @DePermissionProxy(paramIndex = 2)
-    public List<File> export(String panelId, List<String> viewIds, PermissionProxy proxy, Boolean justView) throws Exception {
+    public List<File> export(String panelId, List<String> viewIds, PermissionProxy proxy, Boolean justView, String taskId) throws Exception {
         if (CollectionUtils.isEmpty(viewIds)) {
             return null;
         }
@@ -51,7 +51,7 @@ public List<File> export(String panelId, List<String> viewIds, PermissionProxy p
         Map<String, ChartExtRequest> stringChartExtRequestMap = buildViewRequest(panelDto, justView);
         List<File> results = new ArrayList<>();
         List<ExcelSheetModel> sheets = viewIds.stream().map(viewId -> viewFiles(viewId, stringChartExtRequestMap.get(viewId))).collect(Collectors.toList());
-        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId());
+        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId() + "_" + taskId);
         results.add(excelFile);
         return results;
     }

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -212,7 +212,7 @@ public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO em
                 List<String> viewIdList = Arrays.asList(viewIds.split(",")).stream().map(s -> s.trim()).filter(viewId -> StringUtils.isNotBlank(viewId) && viewOptionIdList.contains(viewId)).collect(Collectors.toList());
                 PermissionProxy proxy = new PermissionProxy();
                 proxy.setUserId(user.getUserId());
-                files = viewExportExcel.export(panelId, viewIdList, proxy, justExportView);
+                files = viewExportExcel.export(panelId, viewIdList, proxy, justExportView, taskInstance.getTaskId().toString());
             }
 
             List<String> channels = null;

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -40,7 +40,7 @@ public class ViewExportExcel {
     }.getType();
 
     @DePermissionProxy(paramIndex = 2)
-    public List<File> export(String panelId, List<String> viewIds, PermissionProxy proxy, Boolean justView) throws Exception {
+    public List<File> export(String panelId, List<String> viewIds, PermissionProxy proxy, Boolean justView, String taskId) throws Exception {
         if (CollectionUtils.isEmpty(viewIds)) {
             return null;
         }
@@ -51,7 +51,7 @@ public List<File> export(String panelId, List<String> viewIds, PermissionProxy p
         Map<String, ChartExtRequest> stringChartExtRequestMap = buildViewRequest(panelDto, justView);
         List<File> results = new ArrayList<>();
         List<ExcelSheetModel> sheets = viewIds.stream().map(viewId -> viewFiles(viewId, stringChartExtRequestMap.get(viewId))).collect(Collectors.toList());
-        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId());
+        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId() + "_" + taskId);
         results.add(excelFile);
         return results;
     }

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -68,6 +68,9 @@ public static File exportExcel(List<ExcelSheetModel> sheets, String fileName, St
         if (StringUtils.isNotBlank(folderId)) {
             folderPath = BASE_ROOT + folderId + "/";
         }
+
+        folderPath += Thread.currentThread().getId() + "/";
+
         if (!FileUtil.exist(folderPath)) {
             FileUtil.mkdir(folderPath);
         }

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -212,7 +212,7 @@ public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO em
                 List<String> viewIdList = Arrays.asList(viewIds.split(",")).stream().map(s -> s.trim()).filter(viewId -> StringUtils.isNotBlank(viewId) && viewOptionIdList.contains(viewId)).collect(Collectors.toList());
                 PermissionProxy proxy = new PermissionProxy();
                 proxy.setUserId(user.getUserId());
-                files = viewExportExcel.export(panelId, viewIdList, proxy, justExportView);
+                files = viewExportExcel.export(panelId, viewIdList, proxy, justExportView, taskInstance.getTaskId().toString());
             }
 
             List<String> channels = null;

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -40,7 +40,7 @@ public class ViewExportExcel {
     }.getType();
 
     @DePermissionProxy(paramIndex = 2)
-    public List<File> export(String panelId, List<String> viewIds, PermissionProxy proxy, Boolean justView) throws Exception {
+    public List<File> export(String panelId, List<String> viewIds, PermissionProxy proxy, Boolean justView, String taskId) throws Exception {
         if (CollectionUtils.isEmpty(viewIds)) {
             return null;
         }
@@ -51,7 +51,7 @@ public List<File> export(String panelId, List<String> viewIds, PermissionProxy p
         Map<String, ChartExtRequest> stringChartExtRequestMap = buildViewRequest(panelDto, justView);
         List<File> results = new ArrayList<>();
         List<ExcelSheetModel> sheets = viewIds.stream().map(viewId -> viewFiles(viewId, stringChartExtRequestMap.get(viewId))).collect(Collectors.toList());
-        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId());
+        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId() + "_" + taskId);
         results.add(excelFile);
         return results;
     }

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -68,6 +68,9 @@ public static File exportExcel(List<ExcelSheetModel> sheets, String fileName, St
         if (StringUtils.isNotBlank(folderId)) {
             folderPath = BASE_ROOT + folderId + "/";
         }
+
+        folderPath += Thread.currentThread().getId() + "/";
+
         if (!FileUtil.exist(folderPath)) {
             FileUtil.mkdir(folderPath);
         }

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -68,6 +68,9 @@ public static File exportExcel(List<ExcelSheetModel> sheets, String fileName, St
         if (StringUtils.isNotBlank(folderId)) {
             folderPath = BASE_ROOT + folderId + "/";
         }
+
+        folderPath += Thread.currentThread().getId() + "/";
+
         if (!FileUtil.exist(folderPath)) {
             FileUtil.mkdir(folderPath);
         }

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -233,7 +233,7 @@ public void export(@RequestBody XpackGridRequest request) throws Exception{
         ExcelSheetModel excelSheetModel = excelSheetModel(instanceDTOS);
         List<ExcelSheetModel> sheetModels = new ArrayList<>();
         sheetModels.add(excelSheetModel);
-        File file = ExcelUtils.exportExcel(sheetModels, null);
+        File file = ExcelUtils.exportExcel(sheetModels, null, null);
         InputStream inputStream = new FileInputStream(file);
         HttpServletResponse response = ServletUtils.response();
         try {

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -51,7 +51,7 @@ public List<File> export(String panelId, List<String> viewIds, PermissionProxy p
         Map<String, ChartExtRequest> stringChartExtRequestMap = buildViewRequest(panelDto, justView);
         List<File> results = new ArrayList<>();
         List<ExcelSheetModel> sheets = viewIds.stream().map(viewId -> viewFiles(viewId, stringChartExtRequestMap.get(viewId))).collect(Collectors.toList());
-        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName());
+        File excelFile = ExcelUtils.exportExcel(sheets, panelDto.getName(), panelDto.getId());
         results.add(excelFile);
         return results;
     }
@@ -62,7 +62,7 @@ private Map<String, ChartExtRequest> buildViewRequest(PanelGroupDTO panelDto, Bo
         List<Map<String, Object>> components = gson.fromJson(componentsJson, tokenType);
         String panelStyle = panelDto.getPanelStyle();
         Map map = gson.fromJson(panelStyle, Map.class);
-        Map panelMap = (LinkedTreeMap)map.get("panel");
+        Map panelMap = (LinkedTreeMap) map.get("panel");
         double resultCount = Double.parseDouble(panelMap.get("resultCount").toString());
         String resultMode = panelMap.get("resultMode").toString();
 
@@ -73,7 +73,7 @@ private Map<String, ChartExtRequest> buildViewRequest(PanelGroupDTO panelDto, Bo
             ChartExtRequest chartExtRequest = new ChartExtRequest();
             chartExtRequest.setQueryFrom("panel");
             chartExtRequest.setFilter(chartExtFilterRequests);
-            chartExtRequest.setResultCount((int)resultCount);
+            chartExtRequest.setResultCount((int) resultCount);
             chartExtRequest.setResultMode(resultMode);
             result.put(entry.getKey(), chartExtRequest);
         }

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -182,6 +182,7 @@ public Map<String, String> applyDatasetField(List<DatasetTableField> datasetTabl
         for (DatasetTableField datasetTableField : datasetTableFieldsInfo) {
             String oldId = datasetTableField.getId();
             datasetTableField.setTableId(datasetsRealMap.get(datasetTableField.getTableId()));
+            datasetTableField.setId(null);
             DatasetTableField newTableField = dataSetTableFieldsService.save(datasetTableField);
             datasetFieldsRealMap.put(oldId, newTableField.getId());
         }

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -182,6 +182,7 @@ public Map<String, String> applyDatasetField(List<DatasetTableField> datasetTabl
         for (DatasetTableField datasetTableField : datasetTableFieldsInfo) {
             String oldId = datasetTableField.getId();
             datasetTableField.setTableId(datasetsRealMap.get(datasetTableField.getTableId()));
+            datasetTableField.setId(null);
             DatasetTableField newTableField = dataSetTableFieldsService.save(datasetTableField);
             datasetFieldsRealMap.put(oldId, newTableField.getId());
         }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -648,6 +648,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
                 yAxis = yAxis.stream().filter(item -> StringUtils.isNotEmpty(item.getChartId()) || dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
                 break;
             case "bar-group":
+            case "bar-group-stack":
                 xAxis = xAxis.stream().filter(item -> StringUtils.isNotEmpty(item.getChartId()) || (!desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName()))).collect(Collectors.toList());
                 yAxis = yAxis.stream().filter(item -> StringUtils.isNotEmpty(item.getChartId()) || (!desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName()))).collect(Collectors.toList());
                 xAxisBase = xAxisBase.stream().filter(item -> StringUtils.isNotEmpty(item.getChartId()) || (!desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName()))).collect(Collectors.toList());
@@ -1113,6 +1114,8 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
         } else if (StringUtils.equalsIgnoreCase(view.getRender(), "antv")) {
             if (StringUtils.equalsIgnoreCase(view.getType(), "bar-group")) {
                 mapChart = ChartDataBuild.transBaseGroupDataAntV(xAxisBase, xAxis, xAxisExt, yAxis, view, data, isDrill);
+            } else if (StringUtils.equalsIgnoreCase(view.getType(),"bar-group-stack")) {
+                mapChart = ChartDataBuild.transGroupStackDataAntV(xAxisBase, xAxis, xAxisExt, yAxis, extStack, data, view, isDrill);
             } else if (StringUtils.containsIgnoreCase(view.getType(), "bar-stack")) {
                 mapChart = ChartDataBuild.transStackChartDataAntV(xAxis, yAxis, view, data, extStack, isDrill);
             } else if (StringUtils.containsIgnoreCase(view.getType(), "line-stack")) {

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -86,6 +86,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/auth/isOpenWecom", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenDingtalk", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenLark", ANON);
+        filterChainDefinitionMap.put("/api/auth/isOpenCas", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenLarksuite", ANON);
         filterChainDefinitionMap.put("/api/auth/getPublicKey", ANON);
         filterChainDefinitionMap.put("/api/pluginCommon/component/*", ANON);
@@ -106,6 +107,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/plugin/larksuite/bind*", ANON);
         filterChainDefinitionMap.put("/plugin/larksuite/getQrParam", ANON);
         filterChainDefinitionMap.put("/cas/reset/**", ANON);
+        filterChainDefinitionMap.put("/cas/loginPage", ANON);
 
         filterChainDefinitionMap.put("/unauth", ANON);
         filterChainDefinitionMap.put("/display/**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -86,6 +86,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/auth/isOpenWecom", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenDingtalk", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenLark", ANON);
+        filterChainDefinitionMap.put("/api/auth/isOpenCas", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenLarksuite", ANON);
         filterChainDefinitionMap.put("/api/auth/getPublicKey", ANON);
         filterChainDefinitionMap.put("/api/pluginCommon/component/*", ANON);
@@ -106,6 +107,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/plugin/larksuite/bind*", ANON);
         filterChainDefinitionMap.put("/plugin/larksuite/getQrParam", ANON);
         filterChainDefinitionMap.put("/cas/reset/**", ANON);
+        filterChainDefinitionMap.put("/cas/loginPage", ANON);
 
         filterChainDefinitionMap.put("/unauth", ANON);
         filterChainDefinitionMap.put("/display/**", ANON);

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -86,7 +86,7 @@ public List<DatasourceDTO> getDatasourceList() throws Exception {
     @PostMapping("/get/{id}")
     public DatasourceDTO getDatasource(@PathVariable String id) throws Exception {
         DatasourceUnionRequest request = new DatasourceUnionRequest();
-        request.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
+        request.setUserId("1");
         request.setId(id);
         List<DatasourceDTO> datasourceList = datasourceService.getDatasourceList(request);
         return CollectionUtils.isNotEmpty(datasourceList) ? datasourceList.get(0) : null;

File: backend/src/main/java/io/dataease/controller/request/dataset/DataSetGroupRequest.java
Patch:
@@ -18,4 +18,6 @@ public class DataSetGroupRequest extends DatasetGroup {
     private String userId;
     @ApiModelProperty("ID集合")
     private Set<String> ids;
+    @ApiModelProperty("排除的ID")
+    private String excludedId;
 }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -90,7 +90,9 @@ public List<TableField> getTableFields(DatasourceRequest datasourceRequest) thro
             DatabaseMetaData databaseMetaData = connection.getMetaData();
             String tableNamePattern = datasourceRequest.getTable();
             if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mysql.name())){
-                tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                if(databaseMetaData.getDriverMajorVersion() < 8){
+                    tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                }
             }
             ResultSet resultSet = databaseMetaData.getColumns(null, "%", tableNamePattern, "%");
             while (resultSet.next()) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2382,7 +2382,7 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
             if (CollectionUtils.isNotEmpty(data)) {
                 jsonArray = data.stream().map(ele -> {
                     Map<String, Object> map = new HashMap<>();
-                    for (int i = 0; i < ele.size(); i++) {
+                    for (int i = 0; i < fieldArray.length; i++) {
                         map.put(fieldArray[i], ele.get(i));
                     }
                     return map;

File: backend/src/main/java/io/dataease/service/panel/applog/AppLogQueryParam.java
Patch:
@@ -7,5 +7,6 @@
 
 @Data
 public class AppLogQueryParam extends GridExample {
+    private String userId;
 
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -86,6 +86,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/auth/isOpenWecom", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenDingtalk", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenLark", ANON);
+        filterChainDefinitionMap.put("/api/auth/isOpenCas", ANON);
         filterChainDefinitionMap.put("/api/auth/isOpenLarksuite", ANON);
         filterChainDefinitionMap.put("/api/auth/getPublicKey", ANON);
         filterChainDefinitionMap.put("/api/pluginCommon/component/*", ANON);
@@ -106,6 +107,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/plugin/larksuite/bind*", ANON);
         filterChainDefinitionMap.put("/plugin/larksuite/getQrParam", ANON);
         filterChainDefinitionMap.put("/cas/reset/**", ANON);
+        filterChainDefinitionMap.put("/cas/loginPage", ANON);
 
         filterChainDefinitionMap.put("/unauth", ANON);
         filterChainDefinitionMap.put("/display/**", ANON);

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -86,7 +86,7 @@ public List<DatasourceDTO> getDatasourceList() throws Exception {
     @PostMapping("/get/{id}")
     public DatasourceDTO getDatasource(@PathVariable String id) throws Exception {
         DatasourceUnionRequest request = new DatasourceUnionRequest();
-        request.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
+        request.setUserId("1");
         request.setId(id);
         List<DatasourceDTO> datasourceList = datasourceService.getDatasourceList(request);
         return CollectionUtils.isNotEmpty(datasourceList) ? datasourceList.get(0) : null;

File: backend/src/main/java/io/dataease/controller/request/dataset/DataSetGroupRequest.java
Patch:
@@ -18,4 +18,6 @@ public class DataSetGroupRequest extends DatasetGroup {
     private String userId;
     @ApiModelProperty("ID集合")
     private Set<String> ids;
+    @ApiModelProperty("排除的ID")
+    private String excludedId;
 }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -90,7 +90,9 @@ public List<TableField> getTableFields(DatasourceRequest datasourceRequest) thro
             DatabaseMetaData databaseMetaData = connection.getMetaData();
             String tableNamePattern = datasourceRequest.getTable();
             if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mysql.name())){
-                tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                if(databaseMetaData.getDriverMajorVersion() < 8){
+                    tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                }
             }
             ResultSet resultSet = databaseMetaData.getColumns(null, "%", tableNamePattern, "%");
             while (resultSet.next()) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2382,7 +2382,7 @@ private List<ExcelSheetData> parseExcel(String filename, InputStream inputStream
             if (CollectionUtils.isNotEmpty(data)) {
                 jsonArray = data.stream().map(ele -> {
                     Map<String, Object> map = new HashMap<>();
-                    for (int i = 0; i < ele.size(); i++) {
+                    for (int i = 0; i < fieldArray.length; i++) {
                         map.put(fieldArray[i], ele.get(i));
                     }
                     return map;

File: backend/src/main/java/io/dataease/service/panel/applog/AppLogQueryParam.java
Patch:
@@ -7,5 +7,6 @@
 
 @Data
 public class AppLogQueryParam extends GridExample {
+    private String userId;
 
 }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -90,7 +90,9 @@ public List<TableField> getTableFields(DatasourceRequest datasourceRequest) thro
             DatabaseMetaData databaseMetaData = connection.getMetaData();
             String tableNamePattern = datasourceRequest.getTable();
             if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mysql.name())){
-                tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                if(databaseMetaData.getDriverMajorVersion() < 8){
+                    tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                }
             }
             ResultSet resultSet = databaseMetaData.getColumns(null, "%", tableNamePattern, "%");
             while (resultSet.next()) {

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -90,7 +90,9 @@ public List<TableField> getTableFields(DatasourceRequest datasourceRequest) thro
             DatabaseMetaData databaseMetaData = connection.getMetaData();
             String tableNamePattern = datasourceRequest.getTable();
             if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mysql.name())){
-                tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                if(databaseMetaData.getDriverMajorVersion() < 8){
+                    tableNamePattern = String.format(MySQLConstants.KEYWORD_TABLE, tableNamePattern);
+                }
             }
             ResultSet resultSet = databaseMetaData.getColumns(null, "%", tableNamePattern, "%");
             while (resultSet.next()) {

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -689,7 +689,7 @@ public String getViewSql(DatasourceRequest datasourceRequest) throws Exception {
                 if (StringUtils.isEmpty(sqlServerConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "SELECT TABLE_NAME FROM DATABASE.INFORMATION_SCHEMA.VIEWS WHERE  TABLE_SCHEMA = 'DS_SCHEMA' ;"
+                return "SELECT TABLE_NAME FROM \"DATABASE\".INFORMATION_SCHEMA.VIEWS WHERE  TABLE_SCHEMA = 'DS_SCHEMA' ;"
                         .replace("DATABASE", sqlServerConfiguration.getDataBase())
                         .replace("DS_SCHEMA", sqlServerConfiguration.getSchema());
             case oracle:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -689,7 +689,7 @@ public String getViewSql(DatasourceRequest datasourceRequest) throws Exception {
                 if (StringUtils.isEmpty(sqlServerConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "SELECT TABLE_NAME FROM DATABASE.INFORMATION_SCHEMA.VIEWS WHERE  TABLE_SCHEMA = 'DS_SCHEMA' ;"
+                return "SELECT TABLE_NAME FROM \"DATABASE\".INFORMATION_SCHEMA.VIEWS WHERE  TABLE_SCHEMA = 'DS_SCHEMA' ;"
                         .replace("DATABASE", sqlServerConfiguration.getDataBase())
                         .replace("DS_SCHEMA", sqlServerConfiguration.getSchema());
             case oracle:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -689,7 +689,7 @@ public String getViewSql(DatasourceRequest datasourceRequest) throws Exception {
                 if (StringUtils.isEmpty(sqlServerConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "SELECT TABLE_NAME FROM DATABASE.INFORMATION_SCHEMA.VIEWS WHERE  TABLE_SCHEMA = 'DS_SCHEMA' ;"
+                return "SELECT TABLE_NAME FROM \"DATABASE\".INFORMATION_SCHEMA.VIEWS WHERE  TABLE_SCHEMA = 'DS_SCHEMA' ;"
                         .replace("DATABASE", sqlServerConfiguration.getDataBase())
                         .replace("DS_SCHEMA", sqlServerConfiguration.getSchema());
             case oracle:

File: backend/src/main/java/io/dataease/ext/AuthMapper.java
Patch:
@@ -37,5 +37,6 @@ public interface AuthMapper {
     SysUserEntity findWecomUser(@Param("wecomId") String wecomId);
     SysUserEntity findDingtalkUser(@Param("dingtalkId") String dingtalkId);
     SysUserEntity findLarkUser(@Param("larkId") String larkId);
+    SysUserEntity findLarksuiteUser(@Param("larksuiteId") String larksuiteId);
 
 }

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -185,7 +185,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
                 sysUserAssist.setUserId(Long.parseLong(state));
             }
             sysUserAssist.setDingtalkId(userId);
-            sysUserService.saveAssist(sysUserAssist.getUserId(), sysUserAssist.getWecomId(), sysUserAssist.getDingtalkId(), sysUserAssist.getLarkId());
+            sysUserService.saveAssist(sysUserAssist.getUserId(), sysUserAssist.getWecomId(), sysUserAssist.getDingtalkId(), sysUserAssist.getLarkId(), sysUserAssist.getLarksuiteId());
             response.sendRedirect(url);
         } catch (Exception e) {
 

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -185,7 +185,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
                 sysUserAssist.setUserId(Long.parseLong(state));
             }
             sysUserAssist.setLarkId(userId);
-            sysUserService.saveAssist(sysUserAssist.getUserId(), sysUserAssist.getWecomId(), sysUserAssist.getDingtalkId(), sysUserAssist.getLarkId());
+            sysUserService.saveAssist(sysUserAssist.getUserId(), sysUserAssist.getWecomId(), sysUserAssist.getDingtalkId(), sysUserAssist.getLarkId(), sysUserAssist.getLarksuiteId());
             response.sendRedirect(url);
         } catch (Exception e) {
 

File: backend/src/main/java/io/dataease/plugins/server/XWecomServer.java
Patch:
@@ -193,7 +193,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
                 sysUserAssist.setUserId(Long.parseLong(state));
             }
             sysUserAssist.setWecomId(userId);
-            sysUserService.saveAssist(sysUserAssist.getUserId(), sysUserAssist.getWecomId(), sysUserAssist.getDingtalkId(), sysUserAssist.getLarkId());
+            sysUserService.saveAssist(sysUserAssist.getUserId(), sysUserAssist.getWecomId(), sysUserAssist.getDingtalkId(), sysUserAssist.getLarkId(), sysUserAssist.getLarksuiteId());
 
             response.sendRedirect(url);
         } catch (Exception e) {

File: backend/src/main/java/io/dataease/auth/service/impl/AuthUserServiceImpl.java
Patch:
@@ -182,7 +182,7 @@ public Boolean supportOidc() {
         if (beansOfType.keySet().size() == 0) return false;
         OidcXpackService oidcXpackService = SpringContextUtil.getBean(OidcXpackService.class);
         if (ObjectUtils.isEmpty(oidcXpackService)) return false;
-        return oidcXpackService.isSuuportOIDC();
+        return oidcXpackService.isSupportOIDC();
     }
 
     @Override
@@ -191,7 +191,7 @@ public Boolean supportCas() {
         if (beansOfType.keySet().size() == 0) return false;
         CasXpackService casXpackService = SpringContextUtil.getBean(CasXpackService.class);
         if (ObjectUtils.isEmpty(casXpackService)) return false;
-        return casXpackService.suuportCas();
+        return casXpackService.supportCas();
     }
 
     @Override

File: backend/src/main/java/io/dataease/auth/service/impl/ExtAuthServiceImpl.java
Patch:
@@ -127,7 +127,7 @@ public List<AuthItem> panelIdByDept(Long deptId) {
             @CacheEvict(value = AuthConstants.USER_PANEL_NAME, key = "'user' + #userId")
     })
     public void clearUserResource(Long userId) {
-        LogUtil.info("all permission resource of user {} is cleanning...", userId);
+        LogUtil.info("all permission resource of user {} is cleaning...", userId);
     }
 
     @Caching(evict = {
@@ -136,7 +136,7 @@ public void clearUserResource(Long userId) {
             @CacheEvict(value = AuthConstants.DEPT_PANEL_NAME, key = "'dept' + #deptId")
     })
     public void clearDeptResource(Long deptId) {
-        LogUtil.info("all permission resource of dept {} is cleanning...", deptId);
+        LogUtil.info("all permission resource of dept {} is cleaning...", deptId);
     }
 
     @Caching(evict = {
@@ -145,7 +145,7 @@ public void clearDeptResource(Long deptId) {
             @CacheEvict(value = AuthConstants.ROLE_PANEL_NAME, key = "'role' + #roleId")
     })
     public void clearRoleResource(Long roleId) {
-        LogUtil.info("all permission resource of role {} is cleanning...", roleId);
+        LogUtil.info("all permission resource of role {} is cleaning...", roleId);
     }
 
     @Override

File: backend/src/main/java/io/dataease/commons/model/excel/ExcelSheetModel.java
Patch:
@@ -11,6 +11,6 @@ public class ExcelSheetModel {
 
     private List<String> heads;
 
-    private List<List<String>> datas;
+    private List<List<String>> data;
 
 }

File: backend/src/main/java/io/dataease/commons/utils/AuthUtils.java
Patch:
@@ -131,7 +131,7 @@ else if (StringUtils.equals(DePermissionType.DATASET.name().toLowerCase(), type)
             result.addAll(roleSet);
             result.addAll(deptSet);
             Arrays.stream(defaultPanelPermissions).forEach(item -> {
-                result.add(new AuthItem(item, ResourceAuthLevel.PANNEL_LEVEL_MANAGE.getLevel()));
+                result.add(new AuthItem(item, ResourceAuthLevel.PANEL_LEVEL_MANAGE.getLevel()));
             });
             return result;
         }

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -28,7 +28,7 @@ public static CronTrigger getCronTrigger(String cron) {
         if (!CronExpression.isValidExpression(cron)) {
             throw new RuntimeException("cron :" + cron + "表达式解析错误");
         }
-        return TriggerBuilder.newTrigger().withIdentity("Caclulate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
+        return TriggerBuilder.newTrigger().withIdentity("Calculate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
     }
 
     /**

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -28,7 +28,7 @@ public static File exportExcel(List<ExcelSheetModel> sheets, String fileName) th
 
         sheets.forEach(sheet -> {
 
-            List<List<String>> details = sheet.getDatas();
+            List<List<String>> details = sheet.getData();
             details.add(0, sheet.getHeads());
             String sheetName = sheet.getSheetName();
             HSSFSheet curSheet = wb.createSheet(sheetName);

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -170,7 +170,7 @@ public int process(InputStream inputStream) throws Exception {
 
             ExcelSheetData excelSheetData = new ExcelSheetData();
             excelSheetData.setData(new ArrayList<>(data));
-            excelSheetData.setExcelLable(sheets.getSheetName());
+            excelSheetData.setExcelLabel(sheets.getSheetName());
             excelSheetData.setFields(new ArrayList<>(fields));
             totalSheets.add(excelSheetData);
 

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableFieldController.java
Patch:
@@ -62,7 +62,7 @@ public List<DatasetTableField> list(@PathVariable String tableId) {
         DatasetTableField datasetTableField = DatasetTableField.builder().build();
         datasetTableField.setTableId(tableId);
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
-        fields = permissionService.filterColumnPermissons(fields, new ArrayList<>(), tableId, null);
+        fields = permissionService.filterColumnPermissions(fields, new ArrayList<>(), tableId, null);
         return fields;
     }
 
@@ -74,7 +74,7 @@ public List<DatasetTableField> listWithPermission(@PathVariable String tableId)
         datasetTableField.setTableId(tableId);
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
         List<String> desensitizationList = new ArrayList<>();
-        fields = permissionService.filterColumnPermissons(fields, desensitizationList, tableId, null);
+        fields = permissionService.filterColumnPermissions(fields, desensitizationList, tableId, null);
         fields = fields.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName())).collect(Collectors.toList());
         return fields;
     }

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinition.java
Patch:
@@ -18,7 +18,7 @@ public class ApiDefinition {
     private ApiDefinitionRequest request;
     private String dataPath;
     private String status;
-    private List<Map<String,String>> datas = new ArrayList<>();
+    private List<Map<String,String>> data = new ArrayList<>();
     private List<JSONObject> jsonFields = new ArrayList<>();
     private int previewNum = 10;
     private int maxPreviewNum = 10;

File: backend/src/main/java/io/dataease/controller/request/datasource/es/EsResponse.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 
 @Data
-public class EsReponse {
+public class EsResponse {
     private List<Column> columns = new ArrayList<>();
     private List<String[]> rows = new ArrayList<>();
     private String cursor;

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -75,15 +75,15 @@ public Long unReadCount() {
     @PostMapping("/setReaded/{msgId}")
     @ApiImplicitParam(paramType = "path", name = "msgId", value = "消息ID", required = true, dataType = "Long")
     public void setReaded(@PathVariable Long msgId) {
-        sysMsgService.setReaded(msgId);
+        sysMsgService.setRead(msgId);
     }
 
 
     @ApiOperation("批量设置已读")
     @PostMapping("/batchRead")
     @ApiImplicitParam(name = "msgIds", value = "消息ID集合", required = true, dataType = "List")
     public void batchRead(@RequestBody List<Long> msgIds) {
-        sysMsgService.setBatchReaded(msgIds);
+        sysMsgService.setBatchRead(msgIds);
     }
 
     @ApiOperation("全部设置已读")

File: backend/src/main/java/io/dataease/controller/sys/SysMenuController.java
Patch:
@@ -78,8 +78,8 @@ public void update(@RequestBody MenuCreateRequest menu){
 
     @PostMapping("/childMenus/{pid}")
     public Set<Long> childMenus(@PathVariable Long pid){
-        List<MenuNodeResponse> childs = menuService.childs(pid);
-        Set<Long> sets = childs.stream().map(MenuNodeResponse::getMenuId).collect(Collectors.toSet());
+        List<MenuNodeResponse> children = menuService.children(pid);
+        Set<Long> sets = children.stream().map(MenuNodeResponse::getMenuId).collect(Collectors.toSet());
         sets.add(pid);
         return sets;
     }

File: backend/src/main/java/io/dataease/controller/sys/base/BaseGridRequest.java
Patch:
@@ -39,7 +39,7 @@ public GridExample convertExample(){
         GridExample gridExample = new GridExample();
         if (CollectionUtils.isNotEmpty(conditions)) {
             GridExample.Criteria criteria = gridExample.createCriteria();
-            conditions.forEach(criteria::addCondtion);
+            conditions.forEach(criteria::addCondition);
         }
 
         if (CollectionUtils.isNotEmpty(orders)){

File: backend/src/main/java/io/dataease/dto/dataset/ExcelFileData.java
Patch:
@@ -10,7 +10,7 @@ public class ExcelFileData {
     @ApiModelProperty("excelID")
     private String id;
     @ApiModelProperty("excel标签")
-    private String excelLable;
+    private String excelLabel;
     @ApiModelProperty("sheets")
     private List<ExcelSheetData> sheets;
     @ApiModelProperty("路径")

File: backend/src/main/java/io/dataease/dto/dataset/ExcelSheetData.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class ExcelSheetData {
     @ApiModelProperty("标签")
-    private String excelLable;
+    private String excelLabel;
     @ApiModelProperty("数据集合")
     private List<List<String>> data;
     @ApiModelProperty("字段集合")

File: backend/src/main/java/io/dataease/dto/datasource/RedshiftConfiguration.java
Patch:
@@ -6,7 +6,7 @@
 
 @Getter
 @Setter
-public class RedshiftConfigration extends JdbcConfiguration {
+public class RedshiftConfiguration extends JdbcConfiguration {
 
     private String driver = "com.amazon.redshift.jdbc42.Driver";
 

File: backend/src/main/java/io/dataease/ext/query/GridExample.java
Patch:
@@ -132,7 +132,7 @@ protected void addCriterion(String condition, Object value1, Object value2, Stri
 
 
 
-        public Criteria addCondtion(ConditionEntity conditionEntity){
+        public Criteria addCondition(ConditionEntity conditionEntity){
             String field = conditionEntity.getField();
             Object value = conditionEntity.getValue();
             String operator = conditionEntity.getOperator();

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -48,7 +48,7 @@
 @Service("emailTaskHandler")
 public class EmailTaskHandler extends TaskHandler implements Job {
 
-    private static final Integer RUNING = 0;
+    private static final Integer RUNNING = 0;
     private static final Integer SUCCESS = 1;
     private static final Integer ERROR = -1;
 
@@ -124,7 +124,7 @@ public Long saveInstance(GlobalTaskInstance taskInstance) {
     private GlobalTaskInstance buildInstance(GlobalTaskEntity taskEntity) {
         GlobalTaskInstance taskInstance = new GlobalTaskInstance();
         taskInstance.setTaskId(taskEntity.getTaskId());
-        taskInstance.setStatus(RUNING);
+        taskInstance.setStatus(RUNNING);
         taskInstance.setExecuteTime(System.currentTimeMillis());
         return taskInstance;
     }

File: backend/src/main/java/io/dataease/map/api/MapApi.java
Patch:
@@ -17,7 +17,7 @@ public interface MapApi {
 
 
     @GetMapping("/globalEntitys/{pcode}")
-    List<AreaEntity>  globalEntitys(@PathVariable String pcode);
+    List<AreaEntity>  globalEntities(@PathVariable String pcode);
 
     @PostMapping(value = "/saveMapNode", consumes = {"multipart/form-data"})
     void saveMapNode(MapNodeRequest request, MultipartFile file) throws Exception;

File: backend/src/main/java/io/dataease/map/dto/response/MapNodeReadResponse.java
Patch:
@@ -6,7 +6,7 @@
 import java.io.Serializable;
 
 @Data
-public class MapNodeReadReponse implements Serializable {
+public class MapNodeReadResponse implements Serializable {
 
     @ApiModelProperty("区域代码")
     private String code;
@@ -15,7 +15,7 @@ public class MapNodeReadReponse implements Serializable {
     @ApiModelProperty("区域级别")
     private Integer level;
     @ApiModelProperty("上级区域")
-    private MapNodeReadReponse parent;
+    private MapNodeReadResponse parent;
     @ApiModelProperty("geoGson")
     private String json;
 }

File: backend/src/main/java/io/dataease/map/server/MapServer.java
Patch:
@@ -26,16 +26,16 @@ public List<AreaEntity> areaEntitys(@PathVariable String pcode) {
         if (StringUtils.equals(pcode, "0")) {
             return areaEntities;
         }
-        return mapService.entitysByPid(areaEntities, pcode);
+        return mapService.entitiesByPid(areaEntities, pcode);
     }
 
     @Override
-    public List<AreaEntity> globalEntitys(String pcode) {
+    public List<AreaEntity> globalEntities(String pcode) {
         List<AreaEntity> areaEntities = mapService.globalEntities();
         if (StringUtils.equals(pcode, "0")) {
             return areaEntities;
         }
-        return mapService.entitysByPid(areaEntities, pcode);
+        return mapService.entitiesByPid(areaEntities, pcode);
     }
 
 

File: backend/src/main/java/io/dataease/map/service/MapService.java
Patch:
@@ -43,15 +43,15 @@ public List<AreaEntity> globalEntities() {
         return areaEntities;
     }
 
-    public List<AreaEntity> entitysByPid(List<AreaEntity> entities, String pid) {
+    public List<AreaEntity> entitiesByPid(List<AreaEntity> entities, String pid) {
         for (int i = 0; i < entities.size(); i++) {
             AreaEntity areaEntity = entities.get(i);
             if (StringUtils.equals(pid, areaEntity.getCode())) {
                 return areaEntity.getChildren();
             }
 
             if (CollectionUtil.isNotEmpty(areaEntity.getChildren())) {
-                List<AreaEntity> areaEntities = entitysByPid(areaEntity.getChildren(), pid);
+                List<AreaEntity> areaEntities = entitiesByPid(areaEntity.getChildren(), pid);
                 if (null != areaEntities) {
                     return areaEntities;
                 }
@@ -65,7 +65,7 @@ public String generateAreaCode(String pCode) {
         Long pValue = Long.parseLong(pCode);
         MapService mapService = CommonBeanFactory.getBean(MapService.class);
         List<AreaEntity> areaEntities = mapService.globalEntities();
-        List<AreaEntity> brothers = entitysByPid(areaEntities, pCode);
+        List<AreaEntity> brothers = entitiesByPid(areaEntities, pCode);
 
         brothers.sort(Comparator.comparing(item -> Long.parseLong(item.getCode())));
         AreaEntity lastBrother = brothers.get(brothers.size() - 1);

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -57,8 +57,8 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 DEException.throwException("缺少oidc插件");
             }
             oidcXpackService = SpringContextUtil.getBean(OidcXpackService.class);
-            Boolean suuportOIDC = oidcXpackService.isSuuportOIDC();
-            if (!suuportOIDC) {
+            Boolean supportOIDC = oidcXpackService.isSupportOIDC();
+            if (!supportOIDC) {
                 DEException.throwException("未开启oidc");
             }
             Map<String, String> config = config(oidcXpackService);

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -270,8 +270,8 @@ private ExcelSheetModel excelSheetModel(List<XpackTaskInstanceDTO> instanceDTOS)
         String[] headArr = new String[] {Translator.get("I18N_XPACKTASK_NAME"), Translator.get("I18N_XPACKTASK_EXEC_TIME"), Translator.get("I18N_XPACKTASK_STATUS")};
         List<String> head = Arrays.asList(headArr);
         excelSheetModel.setHeads(head);
-        List<List<String>> datas = instanceDTOS.stream().map(this::formatExcelData).collect(Collectors.toList());
-        excelSheetModel.setDatas(datas);
+        List<List<String>> data = instanceDTOS.stream().map(this::formatExcelData).collect(Collectors.toList());
+        excelSheetModel.setData(data);
         return excelSheetModel;
     }
 

File: backend/src/main/java/io/dataease/service/chart/ChartConstants.java
Patch:
@@ -10,4 +10,5 @@ public class ChartConstants {
     public static final String YEAR_YOY = "year_yoy";
     public static final String DAY_MOM = "day_mom";
     public static final String MONTH_YOY = "month_yoy";
+    public static final String[] M_Y = {YEAR_MOM, MONTH_MOM, YEAR_YOY, DAY_MOM, MONTH_YOY};
 }

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -114,7 +114,7 @@ private ExcelSheetModel viewFiles(String viewId, ChartExtRequest request) {
             return filterInvalidDecimal(val.toString());
         }).collect(Collectors.toList())).collect(Collectors.toList());
         result.setHeads(heads);
-        result.setDatas(details);
+        result.setData(details);
 
         result.setSheetName(title);
         return result;

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -73,7 +73,7 @@ public List<ChartFieldCustomFilterDTO> getCustomFilters(List<DatasetTableField>
         return customFilter;
     }
 
-    public List<DatasetTableField> filterColumnPermissons(List<DatasetTableField> fields, List<String> desensitizationList, String datasetTableId, Long user){
+    public List<DatasetTableField> filterColumnPermissions(List<DatasetTableField> fields, List<String> desensitizationList, String datasetTableId, Long user){
         List<DatasetTableField> result = new ArrayList<>();
         List<ColumnPermissionItem> allColumnPermissionItems = new ArrayList<>();
         for (DataSetColumnPermissionsDTO dataSetColumnPermissionsDTO : columnPermissions(datasetTableId, user)) {

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -104,7 +104,7 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
         if (userPermissions) {
             //列权限
             List<String> desensitizationList = new ArrayList<>();
-            fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), userId);
+            fields = permissionService.filterColumnPermissions(fields, desensitizationList, datasetTable.getId(), userId);
             Map<String, DatasetTableField> fieldMap = fields.stream().collect(Collectors.toMap(DatasetTableField::getId, node -> node));
             permissionFields = fieldIds.stream().map(fieldMap::get).collect(Collectors.toList());
             if (CollectionUtils.isEmpty(permissionFields) || permissionFields.get(0) == null) {

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -87,15 +87,15 @@ public Long queryCount(Long userId) {
         return sysMsgMapper.countByExample(example);
     }
 
-    public void setReaded(Long msgId) {
+    public void setRead(Long msgId) {
         SysMsg sysMsg = new SysMsg();
         sysMsg.setMsgId(msgId);
         sysMsg.setStatus(true);
         sysMsg.setReadTime(System.currentTimeMillis());
         sysMsgMapper.updateByPrimaryKeySelective(sysMsg);
     }
 
-    public void setBatchReaded(List<Long> msgIds) {
+    public void setBatchRead(List<Long> msgIds) {
         extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis());
     }
 

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -133,7 +133,7 @@ public List<String> syncPanelViews(PanelGroupWithBLOBs panelGroup) {
         return viewIds;
     }
 
-    public Boolean havaMobileLayout(String panelData){
+    public Boolean haveMobileLayout(String panelData){
         Boolean mobileLayout = false;
         if (StringUtils.isNotEmpty(panelData)) {
             JsonArray dataArray = JsonParser.parseString(panelData).getAsJsonArray();

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -75,15 +75,15 @@ public Long unReadCount() {
     @PostMapping("/setReaded/{msgId}")
     @ApiImplicitParam(paramType = "path", name = "msgId", value = "消息ID", required = true, dataType = "Long")
     public void setReaded(@PathVariable Long msgId) {
-        sysMsgService.setReaded(msgId);
+        sysMsgService.setRead(msgId);
     }
 
 
     @ApiOperation("批量设置已读")
     @PostMapping("/batchRead")
     @ApiImplicitParam(name = "msgIds", value = "消息ID集合", required = true, dataType = "List")
     public void batchRead(@RequestBody List<Long> msgIds) {
-        sysMsgService.setBatchReaded(msgIds);
+        sysMsgService.setBatchRead(msgIds);
     }
 
     @ApiOperation("全部设置已读")

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -48,7 +48,7 @@
 @Service("emailTaskHandler")
 public class EmailTaskHandler extends TaskHandler implements Job {
 
-    private static final Integer RUNING = 0;
+    private static final Integer RUNNING = 0;
     private static final Integer SUCCESS = 1;
     private static final Integer ERROR = -1;
 
@@ -124,7 +124,7 @@ public Long saveInstance(GlobalTaskInstance taskInstance) {
     private GlobalTaskInstance buildInstance(GlobalTaskEntity taskEntity) {
         GlobalTaskInstance taskInstance = new GlobalTaskInstance();
         taskInstance.setTaskId(taskEntity.getTaskId());
-        taskInstance.setStatus(RUNING);
+        taskInstance.setStatus(RUNNING);
         taskInstance.setExecuteTime(System.currentTimeMillis());
         return taskInstance;
     }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -278,8 +278,8 @@ private List<String[]> getDataResult(ResultSet rs, DatasourceRequest datasourceR
                             row[j] = rs.getBlob(j + 1) == null ? "" : rs.getBlob(j + 1).toString();
                         } else {
                             if (charset != null && StringUtils.isNotEmpty(rs.getString(j + 1))) {
-                                String orginStr = new String(rs.getString(j + 1).getBytes(charset), targetCharset);
-                                row[j] = new String(orginStr.getBytes("UTF-8"), "UTF-8");
+                                String originStr = new String(rs.getString(j + 1).getBytes(charset), targetCharset);
+                                row[j] = new String(originStr.getBytes("UTF-8"), "UTF-8");
                             } else {
                                 row[j] = rs.getString(j + 1);
                             }

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -87,15 +87,15 @@ public Long queryCount(Long userId) {
         return sysMsgMapper.countByExample(example);
     }
 
-    public void setReaded(Long msgId) {
+    public void setRead(Long msgId) {
         SysMsg sysMsg = new SysMsg();
         sysMsg.setMsgId(msgId);
         sysMsg.setStatus(true);
         sysMsg.setReadTime(System.currentTimeMillis());
         sysMsgMapper.updateByPrimaryKeySelective(sysMsg);
     }
 
-    public void setBatchReaded(List<Long> msgIds) {
+    public void setBatchRead(List<Long> msgIds) {
         extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis());
     }
 

File: backend/src/main/java/io/dataease/auth/service/impl/ExtAuthServiceImpl.java
Patch:
@@ -127,7 +127,7 @@ public List<AuthItem> panelIdByDept(Long deptId) {
             @CacheEvict(value = AuthConstants.USER_PANEL_NAME, key = "'user' + #userId")
     })
     public void clearUserResource(Long userId) {
-        LogUtil.info("all permission resource of user {} is cleanning...", userId);
+        LogUtil.info("all permission resource of user {} is cleaning...", userId);
     }
 
     @Caching(evict = {
@@ -136,7 +136,7 @@ public void clearUserResource(Long userId) {
             @CacheEvict(value = AuthConstants.DEPT_PANEL_NAME, key = "'dept' + #deptId")
     })
     public void clearDeptResource(Long deptId) {
-        LogUtil.info("all permission resource of dept {} is cleanning...", deptId);
+        LogUtil.info("all permission resource of dept {} is cleaning...", deptId);
     }
 
     @Caching(evict = {
@@ -145,7 +145,7 @@ public void clearDeptResource(Long deptId) {
             @CacheEvict(value = AuthConstants.ROLE_PANEL_NAME, key = "'role' + #roleId")
     })
     public void clearRoleResource(Long roleId) {
-        LogUtil.info("all permission resource of role {} is cleanning...", roleId);
+        LogUtil.info("all permission resource of role {} is cleaning...", roleId);
     }
 
     @Override

File: backend/src/main/java/io/dataease/commons/model/excel/ExcelSheetModel.java
Patch:
@@ -11,6 +11,6 @@ public class ExcelSheetModel {
 
     private List<String> heads;
 
-    private List<List<String>> datas;
+    private List<List<String>> data;
 
 }

File: backend/src/main/java/io/dataease/commons/utils/AuthUtils.java
Patch:
@@ -131,7 +131,7 @@ else if (StringUtils.equals(DePermissionType.DATASET.name().toLowerCase(), type)
             result.addAll(roleSet);
             result.addAll(deptSet);
             Arrays.stream(defaultPanelPermissions).forEach(item -> {
-                result.add(new AuthItem(item, ResourceAuthLevel.PANNEL_LEVEL_MANAGE.getLevel()));
+                result.add(new AuthItem(item, ResourceAuthLevel.PANEL_LEVEL_MANAGE.getLevel()));
             });
             return result;
         }

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -28,7 +28,7 @@ public static CronTrigger getCronTrigger(String cron) {
         if (!CronExpression.isValidExpression(cron)) {
             throw new RuntimeException("cron :" + cron + "表达式解析错误");
         }
-        return TriggerBuilder.newTrigger().withIdentity("Caclulate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
+        return TriggerBuilder.newTrigger().withIdentity("Calculate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
     }
 
     /**

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -28,7 +28,7 @@ public static File exportExcel(List<ExcelSheetModel> sheets, String fileName) th
 
         sheets.forEach(sheet -> {
 
-            List<List<String>> details = sheet.getDatas();
+            List<List<String>> details = sheet.getData();
             details.add(0, sheet.getHeads());
             String sheetName = sheet.getSheetName();
             HSSFSheet curSheet = wb.createSheet(sheetName);

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -170,7 +170,7 @@ public int process(InputStream inputStream) throws Exception {
 
             ExcelSheetData excelSheetData = new ExcelSheetData();
             excelSheetData.setData(new ArrayList<>(data));
-            excelSheetData.setExcelLable(sheets.getSheetName());
+            excelSheetData.setExcelLabel(sheets.getSheetName());
             excelSheetData.setFields(new ArrayList<>(fields));
             totalSheets.add(excelSheetData);
 

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableFieldController.java
Patch:
@@ -62,7 +62,7 @@ public List<DatasetTableField> list(@PathVariable String tableId) {
         DatasetTableField datasetTableField = DatasetTableField.builder().build();
         datasetTableField.setTableId(tableId);
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
-        fields = permissionService.filterColumnPermissons(fields, new ArrayList<>(), tableId, null);
+        fields = permissionService.filterColumnPermissions(fields, new ArrayList<>(), tableId, null);
         return fields;
     }
 
@@ -74,7 +74,7 @@ public List<DatasetTableField> listWithPermission(@PathVariable String tableId)
         datasetTableField.setTableId(tableId);
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
         List<String> desensitizationList = new ArrayList<>();
-        fields = permissionService.filterColumnPermissons(fields, desensitizationList, tableId, null);
+        fields = permissionService.filterColumnPermissions(fields, desensitizationList, tableId, null);
         fields = fields.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName())).collect(Collectors.toList());
         return fields;
     }

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinition.java
Patch:
@@ -18,7 +18,7 @@ public class ApiDefinition {
     private ApiDefinitionRequest request;
     private String dataPath;
     private String status;
-    private List<Map<String,String>> datas = new ArrayList<>();
+    private List<Map<String,String>> data = new ArrayList<>();
     private List<JSONObject> jsonFields = new ArrayList<>();
     private int previewNum = 10;
     private int maxPreviewNum = 10;

File: backend/src/main/java/io/dataease/controller/request/datasource/es/EsResponse.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 
 @Data
-public class EsReponse {
+public class EsResponse {
     private List<Column> columns = new ArrayList<>();
     private List<String[]> rows = new ArrayList<>();
     private String cursor;

File: backend/src/main/java/io/dataease/controller/sys/SysMenuController.java
Patch:
@@ -78,8 +78,8 @@ public void update(@RequestBody MenuCreateRequest menu){
 
     @PostMapping("/childMenus/{pid}")
     public Set<Long> childMenus(@PathVariable Long pid){
-        List<MenuNodeResponse> childs = menuService.childs(pid);
-        Set<Long> sets = childs.stream().map(MenuNodeResponse::getMenuId).collect(Collectors.toSet());
+        List<MenuNodeResponse> children = menuService.children(pid);
+        Set<Long> sets = children.stream().map(MenuNodeResponse::getMenuId).collect(Collectors.toSet());
         sets.add(pid);
         return sets;
     }

File: backend/src/main/java/io/dataease/controller/sys/base/BaseGridRequest.java
Patch:
@@ -39,7 +39,7 @@ public GridExample convertExample(){
         GridExample gridExample = new GridExample();
         if (CollectionUtils.isNotEmpty(conditions)) {
             GridExample.Criteria criteria = gridExample.createCriteria();
-            conditions.forEach(criteria::addCondtion);
+            conditions.forEach(criteria::addCondition);
         }
 
         if (CollectionUtils.isNotEmpty(orders)){

File: backend/src/main/java/io/dataease/dto/dataset/ExcelFileData.java
Patch:
@@ -10,7 +10,7 @@ public class ExcelFileData {
     @ApiModelProperty("excelID")
     private String id;
     @ApiModelProperty("excel标签")
-    private String excelLable;
+    private String excelLabel;
     @ApiModelProperty("sheets")
     private List<ExcelSheetData> sheets;
     @ApiModelProperty("路径")

File: backend/src/main/java/io/dataease/dto/dataset/ExcelSheetData.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class ExcelSheetData {
     @ApiModelProperty("标签")
-    private String excelLable;
+    private String excelLabel;
     @ApiModelProperty("数据集合")
     private List<List<String>> data;
     @ApiModelProperty("字段集合")

File: backend/src/main/java/io/dataease/dto/datasource/RedshiftConfiguration.java
Patch:
@@ -6,7 +6,7 @@
 
 @Getter
 @Setter
-public class RedshiftConfigration extends JdbcConfiguration {
+public class RedshiftConfiguration extends JdbcConfiguration {
 
     private String driver = "com.amazon.redshift.jdbc42.Driver";
 

File: backend/src/main/java/io/dataease/ext/query/GridExample.java
Patch:
@@ -132,7 +132,7 @@ protected void addCriterion(String condition, Object value1, Object value2, Stri
 
 
 
-        public Criteria addCondtion(ConditionEntity conditionEntity){
+        public Criteria addCondition(ConditionEntity conditionEntity){
             String field = conditionEntity.getField();
             Object value = conditionEntity.getValue();
             String operator = conditionEntity.getOperator();

File: backend/src/main/java/io/dataease/map/api/MapApi.java
Patch:
@@ -17,7 +17,7 @@ public interface MapApi {
 
 
     @GetMapping("/globalEntitys/{pcode}")
-    List<AreaEntity>  globalEntitys(@PathVariable String pcode);
+    List<AreaEntity>  globalEntities(@PathVariable String pcode);
 
     @PostMapping(value = "/saveMapNode", consumes = {"multipart/form-data"})
     void saveMapNode(MapNodeRequest request, MultipartFile file) throws Exception;

File: backend/src/main/java/io/dataease/map/dto/response/MapNodeReadResponse.java
Patch:
@@ -6,7 +6,7 @@
 import java.io.Serializable;
 
 @Data
-public class MapNodeReadReponse implements Serializable {
+public class MapNodeReadResponse implements Serializable {
 
     @ApiModelProperty("区域代码")
     private String code;
@@ -15,7 +15,7 @@ public class MapNodeReadReponse implements Serializable {
     @ApiModelProperty("区域级别")
     private Integer level;
     @ApiModelProperty("上级区域")
-    private MapNodeReadReponse parent;
+    private MapNodeReadResponse parent;
     @ApiModelProperty("geoGson")
     private String json;
 }

File: backend/src/main/java/io/dataease/map/server/MapServer.java
Patch:
@@ -26,16 +26,16 @@ public List<AreaEntity> areaEntitys(@PathVariable String pcode) {
         if (StringUtils.equals(pcode, "0")) {
             return areaEntities;
         }
-        return mapService.entitysByPid(areaEntities, pcode);
+        return mapService.entitiesByPid(areaEntities, pcode);
     }
 
     @Override
-    public List<AreaEntity> globalEntitys(String pcode) {
+    public List<AreaEntity> globalEntities(String pcode) {
         List<AreaEntity> areaEntities = mapService.globalEntities();
         if (StringUtils.equals(pcode, "0")) {
             return areaEntities;
         }
-        return mapService.entitysByPid(areaEntities, pcode);
+        return mapService.entitiesByPid(areaEntities, pcode);
     }
 
 

File: backend/src/main/java/io/dataease/map/service/MapService.java
Patch:
@@ -43,15 +43,15 @@ public List<AreaEntity> globalEntities() {
         return areaEntities;
     }
 
-    public List<AreaEntity> entitysByPid(List<AreaEntity> entities, String pid) {
+    public List<AreaEntity> entitiesByPid(List<AreaEntity> entities, String pid) {
         for (int i = 0; i < entities.size(); i++) {
             AreaEntity areaEntity = entities.get(i);
             if (StringUtils.equals(pid, areaEntity.getCode())) {
                 return areaEntity.getChildren();
             }
 
             if (CollectionUtil.isNotEmpty(areaEntity.getChildren())) {
-                List<AreaEntity> areaEntities = entitysByPid(areaEntity.getChildren(), pid);
+                List<AreaEntity> areaEntities = entitiesByPid(areaEntity.getChildren(), pid);
                 if (null != areaEntities) {
                     return areaEntities;
                 }
@@ -65,7 +65,7 @@ public String generateAreaCode(String pCode) {
         Long pValue = Long.parseLong(pCode);
         MapService mapService = CommonBeanFactory.getBean(MapService.class);
         List<AreaEntity> areaEntities = mapService.globalEntities();
-        List<AreaEntity> brothers = entitysByPid(areaEntities, pCode);
+        List<AreaEntity> brothers = entitiesByPid(areaEntities, pCode);
 
         brothers.sort(Comparator.comparing(item -> Long.parseLong(item.getCode())));
         AreaEntity lastBrother = brothers.get(brothers.size() - 1);

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -57,8 +57,8 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 DEException.throwException("缺少oidc插件");
             }
             oidcXpackService = SpringContextUtil.getBean(OidcXpackService.class);
-            Boolean suuportOIDC = oidcXpackService.isSupportOIDC();
-            if (!suuportOIDC) {
+            Boolean supportOIDC = oidcXpackService.isSupportOIDC();
+            if (!supportOIDC) {
                 DEException.throwException("未开启oidc");
             }
             Map<String, String> config = config(oidcXpackService);

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -270,8 +270,8 @@ private ExcelSheetModel excelSheetModel(List<XpackTaskInstanceDTO> instanceDTOS)
         String[] headArr = new String[] {Translator.get("I18N_XPACKTASK_NAME"), Translator.get("I18N_XPACKTASK_EXEC_TIME"), Translator.get("I18N_XPACKTASK_STATUS")};
         List<String> head = Arrays.asList(headArr);
         excelSheetModel.setHeads(head);
-        List<List<String>> datas = instanceDTOS.stream().map(this::formatExcelData).collect(Collectors.toList());
-        excelSheetModel.setDatas(datas);
+        List<List<String>> data = instanceDTOS.stream().map(this::formatExcelData).collect(Collectors.toList());
+        excelSheetModel.setData(data);
         return excelSheetModel;
     }
 

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -114,7 +114,7 @@ private ExcelSheetModel viewFiles(String viewId, ChartExtRequest request) {
             return filterInvalidDecimal(val.toString());
         }).collect(Collectors.toList())).collect(Collectors.toList());
         result.setHeads(heads);
-        result.setDatas(details);
+        result.setData(details);
 
         result.setSheetName(title);
         return result;

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -73,7 +73,7 @@ public List<ChartFieldCustomFilterDTO> getCustomFilters(List<DatasetTableField>
         return customFilter;
     }
 
-    public List<DatasetTableField> filterColumnPermissons(List<DatasetTableField> fields, List<String> desensitizationList, String datasetTableId, Long user){
+    public List<DatasetTableField> filterColumnPermissions(List<DatasetTableField> fields, List<String> desensitizationList, String datasetTableId, Long user){
         List<DatasetTableField> result = new ArrayList<>();
         List<ColumnPermissionItem> allColumnPermissionItems = new ArrayList<>();
         for (DataSetColumnPermissionsDTO dataSetColumnPermissionsDTO : columnPermissions(datasetTableId, user)) {

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -104,7 +104,7 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
         if (userPermissions) {
             //列权限
             List<String> desensitizationList = new ArrayList<>();
-            fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), userId);
+            fields = permissionService.filterColumnPermissions(fields, desensitizationList, datasetTable.getId(), userId);
             Map<String, DatasetTableField> fieldMap = fields.stream().collect(Collectors.toMap(DatasetTableField::getId, node -> node));
             permissionFields = fieldIds.stream().map(fieldMap::get).collect(Collectors.toList());
             if (CollectionUtils.isEmpty(permissionFields) || permissionFields.get(0) == null) {

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -133,7 +133,7 @@ public List<String> syncPanelViews(PanelGroupWithBLOBs panelGroup) {
         return viewIds;
     }
 
-    public Boolean havaMobileLayout(String panelData){
+    public Boolean haveMobileLayout(String panelData){
         Boolean mobileLayout = false;
         if (StringUtils.isNotEmpty(panelData)) {
             JsonArray dataArray = JsonParser.parseString(panelData).getAsJsonArray();

File: backend/src/main/java/io/dataease/auth/service/impl/ExtAuthServiceImpl.java
Patch:
@@ -127,7 +127,7 @@ public List<AuthItem> panelIdByDept(Long deptId) {
             @CacheEvict(value = AuthConstants.USER_PANEL_NAME, key = "'user' + #userId")
     })
     public void clearUserResource(Long userId) {
-        LogUtil.info("all permission resource of user {} is cleanning...", userId);
+        LogUtil.info("all permission resource of user {} is cleaning...", userId);
     }
 
     @Caching(evict = {
@@ -136,7 +136,7 @@ public void clearUserResource(Long userId) {
             @CacheEvict(value = AuthConstants.DEPT_PANEL_NAME, key = "'dept' + #deptId")
     })
     public void clearDeptResource(Long deptId) {
-        LogUtil.info("all permission resource of dept {} is cleanning...", deptId);
+        LogUtil.info("all permission resource of dept {} is cleaning...", deptId);
     }
 
     @Caching(evict = {
@@ -145,7 +145,7 @@ public void clearDeptResource(Long deptId) {
             @CacheEvict(value = AuthConstants.ROLE_PANEL_NAME, key = "'role' + #roleId")
     })
     public void clearRoleResource(Long roleId) {
-        LogUtil.info("all permission resource of role {} is cleanning...", roleId);
+        LogUtil.info("all permission resource of role {} is cleaning...", roleId);
     }
 
     @Override

File: backend/src/main/java/io/dataease/commons/model/excel/ExcelSheetModel.java
Patch:
@@ -11,6 +11,6 @@ public class ExcelSheetModel {
 
     private List<String> heads;
 
-    private List<List<String>> datas;
+    private List<List<String>> data;
 
 }

File: backend/src/main/java/io/dataease/commons/utils/AuthUtils.java
Patch:
@@ -131,7 +131,7 @@ else if (StringUtils.equals(DePermissionType.DATASET.name().toLowerCase(), type)
             result.addAll(roleSet);
             result.addAll(deptSet);
             Arrays.stream(defaultPanelPermissions).forEach(item -> {
-                result.add(new AuthItem(item, ResourceAuthLevel.PANNEL_LEVEL_MANAGE.getLevel()));
+                result.add(new AuthItem(item, ResourceAuthLevel.PANEL_LEVEL_MANAGE.getLevel()));
             });
             return result;
         }

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -28,7 +28,7 @@ public static CronTrigger getCronTrigger(String cron) {
         if (!CronExpression.isValidExpression(cron)) {
             throw new RuntimeException("cron :" + cron + "表达式解析错误");
         }
-        return TriggerBuilder.newTrigger().withIdentity("Caclulate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
+        return TriggerBuilder.newTrigger().withIdentity("Calculate Date").withSchedule(CronScheduleBuilder.cronSchedule(cron)).build();
     }
 
     /**

File: backend/src/main/java/io/dataease/commons/utils/ExcelUtils.java
Patch:
@@ -28,7 +28,7 @@ public static File exportExcel(List<ExcelSheetModel> sheets, String fileName) th
 
         sheets.forEach(sheet -> {
 
-            List<List<String>> details = sheet.getDatas();
+            List<List<String>> details = sheet.getData();
             details.add(0, sheet.getHeads());
             String sheetName = sheet.getSheetName();
             HSSFSheet curSheet = wb.createSheet(sheetName);

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -170,7 +170,7 @@ public int process(InputStream inputStream) throws Exception {
 
             ExcelSheetData excelSheetData = new ExcelSheetData();
             excelSheetData.setData(new ArrayList<>(data));
-            excelSheetData.setExcelLable(sheets.getSheetName());
+            excelSheetData.setExcelLabel(sheets.getSheetName());
             excelSheetData.setFields(new ArrayList<>(fields));
             totalSheets.add(excelSheetData);
 

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableFieldController.java
Patch:
@@ -62,7 +62,7 @@ public List<DatasetTableField> list(@PathVariable String tableId) {
         DatasetTableField datasetTableField = DatasetTableField.builder().build();
         datasetTableField.setTableId(tableId);
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
-        fields = permissionService.filterColumnPermissons(fields, new ArrayList<>(), tableId, null);
+        fields = permissionService.filterColumnPermissions(fields, new ArrayList<>(), tableId, null);
         return fields;
     }
 
@@ -74,7 +74,7 @@ public List<DatasetTableField> listWithPermission(@PathVariable String tableId)
         datasetTableField.setTableId(tableId);
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
         List<String> desensitizationList = new ArrayList<>();
-        fields = permissionService.filterColumnPermissons(fields, desensitizationList, tableId, null);
+        fields = permissionService.filterColumnPermissions(fields, desensitizationList, tableId, null);
         fields = fields.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName())).collect(Collectors.toList());
         return fields;
     }

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinition.java
Patch:
@@ -18,7 +18,7 @@ public class ApiDefinition {
     private ApiDefinitionRequest request;
     private String dataPath;
     private String status;
-    private List<Map<String,String>> datas = new ArrayList<>();
+    private List<Map<String,String>> data = new ArrayList<>();
     private List<JSONObject> jsonFields = new ArrayList<>();
     private int previewNum = 10;
     private int maxPreviewNum = 10;

File: backend/src/main/java/io/dataease/controller/request/datasource/es/EsResponse.java
Patch:
@@ -6,7 +6,7 @@
 import java.util.List;
 
 @Data
-public class EsReponse {
+public class EsResponse {
     private List<Column> columns = new ArrayList<>();
     private List<String[]> rows = new ArrayList<>();
     private String cursor;

File: backend/src/main/java/io/dataease/controller/sys/SysMenuController.java
Patch:
@@ -78,8 +78,8 @@ public void update(@RequestBody MenuCreateRequest menu){
 
     @PostMapping("/childMenus/{pid}")
     public Set<Long> childMenus(@PathVariable Long pid){
-        List<MenuNodeResponse> childs = menuService.childs(pid);
-        Set<Long> sets = childs.stream().map(MenuNodeResponse::getMenuId).collect(Collectors.toSet());
+        List<MenuNodeResponse> children = menuService.children(pid);
+        Set<Long> sets = children.stream().map(MenuNodeResponse::getMenuId).collect(Collectors.toSet());
         sets.add(pid);
         return sets;
     }

File: backend/src/main/java/io/dataease/controller/sys/base/BaseGridRequest.java
Patch:
@@ -39,7 +39,7 @@ public GridExample convertExample(){
         GridExample gridExample = new GridExample();
         if (CollectionUtils.isNotEmpty(conditions)) {
             GridExample.Criteria criteria = gridExample.createCriteria();
-            conditions.forEach(criteria::addCondtion);
+            conditions.forEach(criteria::addCondition);
         }
 
         if (CollectionUtils.isNotEmpty(orders)){

File: backend/src/main/java/io/dataease/dto/dataset/ExcelFileData.java
Patch:
@@ -10,7 +10,7 @@ public class ExcelFileData {
     @ApiModelProperty("excelID")
     private String id;
     @ApiModelProperty("excel标签")
-    private String excelLable;
+    private String excelLabel;
     @ApiModelProperty("sheets")
     private List<ExcelSheetData> sheets;
     @ApiModelProperty("路径")

File: backend/src/main/java/io/dataease/dto/dataset/ExcelSheetData.java
Patch:
@@ -9,7 +9,7 @@
 @Data
 public class ExcelSheetData {
     @ApiModelProperty("标签")
-    private String excelLable;
+    private String excelLabel;
     @ApiModelProperty("数据集合")
     private List<List<String>> data;
     @ApiModelProperty("字段集合")

File: backend/src/main/java/io/dataease/dto/datasource/RedshiftConfiguration.java
Patch:
@@ -6,7 +6,7 @@
 
 @Getter
 @Setter
-public class RedshiftConfigration extends JdbcConfiguration {
+public class RedshiftConfiguration extends JdbcConfiguration {
 
     private String driver = "com.amazon.redshift.jdbc42.Driver";
 

File: backend/src/main/java/io/dataease/ext/query/GridExample.java
Patch:
@@ -132,7 +132,7 @@ protected void addCriterion(String condition, Object value1, Object value2, Stri
 
 
 
-        public Criteria addCondtion(ConditionEntity conditionEntity){
+        public Criteria addCondition(ConditionEntity conditionEntity){
             String field = conditionEntity.getField();
             Object value = conditionEntity.getValue();
             String operator = conditionEntity.getOperator();

File: backend/src/main/java/io/dataease/map/api/MapApi.java
Patch:
@@ -17,7 +17,7 @@ public interface MapApi {
 
 
     @GetMapping("/globalEntitys/{pcode}")
-    List<AreaEntity>  globalEntitys(@PathVariable String pcode);
+    List<AreaEntity>  globalEntities(@PathVariable String pcode);
 
     @PostMapping(value = "/saveMapNode", consumes = {"multipart/form-data"})
     void saveMapNode(MapNodeRequest request, MultipartFile file) throws Exception;

File: backend/src/main/java/io/dataease/map/dto/response/MapNodeReadResponse.java
Patch:
@@ -6,7 +6,7 @@
 import java.io.Serializable;
 
 @Data
-public class MapNodeReadReponse implements Serializable {
+public class MapNodeReadResponse implements Serializable {
 
     @ApiModelProperty("区域代码")
     private String code;
@@ -15,7 +15,7 @@ public class MapNodeReadReponse implements Serializable {
     @ApiModelProperty("区域级别")
     private Integer level;
     @ApiModelProperty("上级区域")
-    private MapNodeReadReponse parent;
+    private MapNodeReadResponse parent;
     @ApiModelProperty("geoGson")
     private String json;
 }

File: backend/src/main/java/io/dataease/map/server/MapServer.java
Patch:
@@ -26,16 +26,16 @@ public List<AreaEntity> areaEntitys(@PathVariable String pcode) {
         if (StringUtils.equals(pcode, "0")) {
             return areaEntities;
         }
-        return mapService.entitysByPid(areaEntities, pcode);
+        return mapService.entitiesByPid(areaEntities, pcode);
     }
 
     @Override
-    public List<AreaEntity> globalEntitys(String pcode) {
+    public List<AreaEntity> globalEntities(String pcode) {
         List<AreaEntity> areaEntities = mapService.globalEntities();
         if (StringUtils.equals(pcode, "0")) {
             return areaEntities;
         }
-        return mapService.entitysByPid(areaEntities, pcode);
+        return mapService.entitiesByPid(areaEntities, pcode);
     }
 
 

File: backend/src/main/java/io/dataease/map/service/MapService.java
Patch:
@@ -43,15 +43,15 @@ public List<AreaEntity> globalEntities() {
         return areaEntities;
     }
 
-    public List<AreaEntity> entitysByPid(List<AreaEntity> entities, String pid) {
+    public List<AreaEntity> entitiesByPid(List<AreaEntity> entities, String pid) {
         for (int i = 0; i < entities.size(); i++) {
             AreaEntity areaEntity = entities.get(i);
             if (StringUtils.equals(pid, areaEntity.getCode())) {
                 return areaEntity.getChildren();
             }
 
             if (CollectionUtil.isNotEmpty(areaEntity.getChildren())) {
-                List<AreaEntity> areaEntities = entitysByPid(areaEntity.getChildren(), pid);
+                List<AreaEntity> areaEntities = entitiesByPid(areaEntity.getChildren(), pid);
                 if (null != areaEntities) {
                     return areaEntities;
                 }
@@ -65,7 +65,7 @@ public String generateAreaCode(String pCode) {
         Long pValue = Long.parseLong(pCode);
         MapService mapService = CommonBeanFactory.getBean(MapService.class);
         List<AreaEntity> areaEntities = mapService.globalEntities();
-        List<AreaEntity> brothers = entitysByPid(areaEntities, pCode);
+        List<AreaEntity> brothers = entitiesByPid(areaEntities, pCode);
 
         brothers.sort(Comparator.comparing(item -> Long.parseLong(item.getCode())));
         AreaEntity lastBrother = brothers.get(brothers.size() - 1);

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -57,8 +57,8 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 DEException.throwException("缺少oidc插件");
             }
             oidcXpackService = SpringContextUtil.getBean(OidcXpackService.class);
-            Boolean suuportOIDC = oidcXpackService.isSupportOIDC();
-            if (!suuportOIDC) {
+            Boolean supportOIDC = oidcXpackService.isSupportOIDC();
+            if (!supportOIDC) {
                 DEException.throwException("未开启oidc");
             }
             Map<String, String> config = config(oidcXpackService);

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -270,8 +270,8 @@ private ExcelSheetModel excelSheetModel(List<XpackTaskInstanceDTO> instanceDTOS)
         String[] headArr = new String[] {Translator.get("I18N_XPACKTASK_NAME"), Translator.get("I18N_XPACKTASK_EXEC_TIME"), Translator.get("I18N_XPACKTASK_STATUS")};
         List<String> head = Arrays.asList(headArr);
         excelSheetModel.setHeads(head);
-        List<List<String>> datas = instanceDTOS.stream().map(this::formatExcelData).collect(Collectors.toList());
-        excelSheetModel.setDatas(datas);
+        List<List<String>> data = instanceDTOS.stream().map(this::formatExcelData).collect(Collectors.toList());
+        excelSheetModel.setData(data);
         return excelSheetModel;
     }
 

File: backend/src/main/java/io/dataease/service/chart/ViewExportExcel.java
Patch:
@@ -114,7 +114,7 @@ private ExcelSheetModel viewFiles(String viewId, ChartExtRequest request) {
             return filterInvalidDecimal(val.toString());
         }).collect(Collectors.toList())).collect(Collectors.toList());
         result.setHeads(heads);
-        result.setDatas(details);
+        result.setData(details);
 
         result.setSheetName(title);
         return result;

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -73,7 +73,7 @@ public List<ChartFieldCustomFilterDTO> getCustomFilters(List<DatasetTableField>
         return customFilter;
     }
 
-    public List<DatasetTableField> filterColumnPermissons(List<DatasetTableField> fields, List<String> desensitizationList, String datasetTableId, Long user){
+    public List<DatasetTableField> filterColumnPermissions(List<DatasetTableField> fields, List<String> desensitizationList, String datasetTableId, Long user){
         List<DatasetTableField> result = new ArrayList<>();
         List<ColumnPermissionItem> allColumnPermissionItems = new ArrayList<>();
         for (DataSetColumnPermissionsDTO dataSetColumnPermissionsDTO : columnPermissions(datasetTableId, user)) {

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -104,7 +104,7 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
         if (userPermissions) {
             //列权限
             List<String> desensitizationList = new ArrayList<>();
-            fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), userId);
+            fields = permissionService.filterColumnPermissions(fields, desensitizationList, datasetTable.getId(), userId);
             Map<String, DatasetTableField> fieldMap = fields.stream().collect(Collectors.toMap(DatasetTableField::getId, node -> node));
             permissionFields = fieldIds.stream().map(fieldMap::get).collect(Collectors.toList());
             if (CollectionUtils.isEmpty(permissionFields) || permissionFields.get(0) == null) {

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -133,7 +133,7 @@ public List<String> syncPanelViews(PanelGroupWithBLOBs panelGroup) {
         return viewIds;
     }
 
-    public Boolean havaMobileLayout(String panelData){
+    public Boolean haveMobileLayout(String panelData){
         Boolean mobileLayout = false;
         if (StringUtils.isNotEmpty(panelData)) {
             JsonArray dataArray = JsonParser.parseString(panelData).getAsJsonArray();

File: backend/src/main/java/io/dataease/service/chart/build/TimeBuild.java
Patch:
@@ -199,9 +199,6 @@ public String labelFormat(Map<String, Object> component) {
         return result;
     }
 
-    /*public List<Long> add2List(Long ...elements) {
-        return Arrays.stream(elements).collect(Collectors.toList());
-    }*/
     public List add2List(Object... elements) {
         return Arrays.stream(elements).collect(Collectors.toList());
     }

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -100,7 +100,7 @@ public static String cron(GlobalTaskEntity taskEntity) {
     }
     private static String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        index = index + 1;
+        index = (index % 7) + 1;
         return String.valueOf(index);
     }
 

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -100,7 +100,7 @@ public static String cron(GlobalTaskEntity taskEntity) {
     }
     private static String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        index = index + 1;
+        index = (index % 7) + 1;
         return String.valueOf(index);
     }
 

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -100,7 +100,7 @@ public static String cron(GlobalTaskEntity taskEntity) {
     }
     private static String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        index = (index + 1) % 7;
+        index = index + 1;
         return String.valueOf(index);
     }
 

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -100,7 +100,7 @@ public static String cron(GlobalTaskEntity taskEntity) {
     }
     private static String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        index = (index + 1) % 7;
+        index = index + 1;
         return String.valueOf(index);
     }
 

File: backend/src/main/java/io/dataease/commons/utils/CronUtils.java
Patch:
@@ -100,7 +100,7 @@ public static String cron(GlobalTaskEntity taskEntity) {
     }
     private static String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        index = (index + 1) % 7;
+        index = index + 1;
         return String.valueOf(index);
     }
 

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -781,7 +781,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             StringBuilder stringBuilder = new StringBuilder();
             if (f.getDeExtractType() == 4) { // 处理 tinyint
                 stringBuilder.append("concat(`").append(f.getOriginName()).append("`,'') AS ").append(f.getDataeaseName());
-            } if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
+            } else if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
                 stringBuilder.append("").append(String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + f.getOriginName() + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT)).append(" AS ").append(f.getDataeaseName());
             } else {
                 stringBuilder.append("`").append(f.getOriginName()).append("` AS ").append(f.getDataeaseName());

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -781,7 +781,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             StringBuilder stringBuilder = new StringBuilder();
             if (f.getDeExtractType() == 4) { // 处理 tinyint
                 stringBuilder.append("concat(`").append(f.getOriginName()).append("`,'') AS ").append(f.getDataeaseName());
-            } if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
+            } else if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
                 stringBuilder.append("").append(String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + f.getOriginName() + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT)).append(" AS ").append(f.getDataeaseName());
             } else {
                 stringBuilder.append("`").append(f.getOriginName()).append("` AS ").append(f.getDataeaseName());

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -664,7 +664,7 @@ public void exportPanelViewDetails(PanelViewDetailsRequest request, HttpServletR
             }
             response.setContentType("application/vnd.ms-excel");
             //文件名称
-            response.setHeader("Content-disposition", "attachment;filename=" + request.getViewName() + ".xls");
+            response.setHeader("Content-disposition", "attachment;filename=" + request.getViewName() + ".xlsx");
             wb.write(outputStream);
             outputStream.flush();
             outputStream.close();

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -310,7 +310,7 @@ public ResultHolder validate(Datasource datasource) throws Exception {
             }
             return ResultHolder.success(datasourceDTO);
         } catch (Exception e) {
-            return ResultHolder.error(Translator.get("I18N_DS_INVALID"), e.getMessage());
+            return ResultHolder.error(Translator.get("I18N_DS_INVALID") + ": " + e.getMessage());
         }
     }
 
@@ -350,7 +350,7 @@ public ResultHolder validate(String datasourceId) {
             return ResultHolder.success("Success");
         } catch (Exception e) {
             datasourceStatus = "Error";
-            return ResultHolder.error(Translator.get("I18N_DS_INVALID"), e.getMessage());
+            return ResultHolder.error(Translator.get("I18N_DS_INVALID") + ": " + e.getMessage());
         } finally {
             Datasource record = new Datasource();
             record.setStatus(datasourceStatus);

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -781,6 +781,8 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             StringBuilder stringBuilder = new StringBuilder();
             if (f.getDeExtractType() == 4) { // 处理 tinyint
                 stringBuilder.append("concat(`").append(f.getOriginName()).append("`,'') AS ").append(f.getDataeaseName());
+            } if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
+                stringBuilder.append("").append(String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + f.getOriginName() + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT)).append(" AS ").append(f.getDataeaseName());
             } else {
                 stringBuilder.append("`").append(f.getOriginName()).append("` AS ").append(f.getDataeaseName());
             }

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -781,6 +781,8 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             StringBuilder stringBuilder = new StringBuilder();
             if (f.getDeExtractType() == 4) { // 处理 tinyint
                 stringBuilder.append("concat(`").append(f.getOriginName()).append("`,'') AS ").append(f.getDataeaseName());
+            } if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
+                stringBuilder.append("").append(String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + f.getOriginName() + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT)).append(" AS ").append(f.getDataeaseName());
             } else {
                 stringBuilder.append("`").append(f.getOriginName()).append("` AS ").append(f.getDataeaseName());
             }

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -781,6 +781,8 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             StringBuilder stringBuilder = new StringBuilder();
             if (f.getDeExtractType() == 4) { // 处理 tinyint
                 stringBuilder.append("concat(`").append(f.getOriginName()).append("`,'') AS ").append(f.getDataeaseName());
+            } if (f.getDeExtractType() == 1 && f.getType().equalsIgnoreCase("YEAR")) { // 处理 YEAR
+                stringBuilder.append("").append(String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + f.getOriginName() + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT)).append(" AS ").append(f.getDataeaseName());
             } else {
                 stringBuilder.append("`").append(f.getOriginName()).append("` AS ").append(f.getDataeaseName());
             }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1130,9 +1130,8 @@ public Map<String, Object> getDBPreview(DataSetTableRequest dataSetTableRequest)
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(ds);
         DataTableInfoDTO dataTableInfo = new Gson().fromJson(dataSetTableRequest.getInfo(), DataTableInfoDTO.class);
-        String sql = "SELECT * FROM " + dataTableInfo.getTable();
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-        String sqlAsTable = qp.createSQLPreview(sql, null);
+        String sqlAsTable = qp.createSQLPreview(qp.sqlForPreview(dataTableInfo.getTable(), ds), null);
         datasourceRequest.setQuery(sqlAsTable);
         datasourceRequest.setTable(dataTableInfo.getTable());
         Map<String, List> result = datasourceProvider.fetchResultAndField(datasourceRequest);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1130,9 +1130,8 @@ public Map<String, Object> getDBPreview(DataSetTableRequest dataSetTableRequest)
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(ds);
         DataTableInfoDTO dataTableInfo = new Gson().fromJson(dataSetTableRequest.getInfo(), DataTableInfoDTO.class);
-        String sql = "SELECT * FROM " + dataTableInfo.getTable();
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-        String sqlAsTable = qp.createSQLPreview(sql, null);
+        String sqlAsTable = qp.createSQLPreview(qp.sqlForPreview(dataTableInfo.getTable(), ds), null);
         datasourceRequest.setQuery(sqlAsTable);
         datasourceRequest.setTable(dataTableInfo.getTable());
         Map<String, List> result = datasourceProvider.fetchResultAndField(datasourceRequest);

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1123,7 +1123,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     String st = String.format(OracleConstants.TO_DATE, "'" + startTime + "'", OracleConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -124,10 +124,9 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     tableName = dataSetTableService.getCustomSQLDatasource(dataTableInfoDTO, list, ds);
                     break;
                 case UNION:
-                    Datasource datasource = new Datasource();
-                    datasource.setType(pluginViewSet.getDsType());
+                    Datasource datasource = ((PluginViewSetImpl) pluginViewSet).getDs();
                     Map<String, Object> sqlMap = dataSetTableService.getUnionSQLDatasource(dataTableInfoDTO, datasource);
-                    tableName = (String) sqlMap.get("sql");
+                    tableName = "(" + ((String) sqlMap.get("sql")) + ")";
                     break;
                 default:
                     tableName = dataTableInfoDTO.getTable();

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -124,10 +124,9 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     tableName = dataSetTableService.getCustomSQLDatasource(dataTableInfoDTO, list, ds);
                     break;
                 case UNION:
-                    Datasource datasource = new Datasource();
-                    datasource.setType(pluginViewSet.getDsType());
+                    Datasource datasource = ((PluginViewSetImpl) pluginViewSet).getDs();
                     Map<String, Object> sqlMap = dataSetTableService.getUnionSQLDatasource(dataTableInfoDTO, datasource);
-                    tableName = (String) sqlMap.get("sql");
+                    tableName = "(" + ((String) sqlMap.get("sql")) + ")";
                     break;
                 default:
                     tableName = dataTableInfoDTO.getTable();

File: backend/src/main/java/io/dataease/service/datasource/DriverService.java
Patch:
@@ -128,7 +128,7 @@ public DeDriverDetails saveJar(MultipartFile file, String driverId) throws Excep
         }
         String filename = file.getOriginalFilename();
         if(!filename.endsWith(".jar")){
-            throw new Exception("File is not jar!");
+            throw new Exception(Translator.get("I18N_NOT_JAR"));
         }
         String dirPath = DRIVER_PATH + driverId + "/";
         String filePath = dirPath + Md5Utils.md5(filename) + ".jar";

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -58,14 +58,14 @@ public void batchDelete(@RequestBody List<String> ids) {
     @DePermission(type = DePermissionType.DATASET, value = "tableId", level = ResourceAuthLevel.DATASET_LEVEL_MANAGE)
     @ApiOperation("查询")
     @PostMapping("list")
-    public List<DatasetTableTask> list(@RequestBody DatasetTableTask datasetTableTask) {
+    public List<DataSetTaskDTO> list(@RequestBody DatasetTableTask datasetTableTask) {
         return dataSetTableTaskService.list(datasetTableTask);
     }
 
     @DePermission(type = DePermissionType.DATASET, value = "tableId", level = ResourceAuthLevel.DATASET_LEVEL_MANAGE)
     @ApiOperation("分页查询")
     @PostMapping("list/{goPage}/{pageSize}")
-    public Pager<List<DatasetTableTask>> list(@RequestBody DatasetTableTask datasetTableTask, @PathVariable int goPage, @PathVariable int pageSize) {
+    public Pager<List<DataSetTaskDTO>> list(@RequestBody DatasetTableTask datasetTableTask, @PathVariable int goPage, @PathVariable int pageSize) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, dataSetTableTaskService.list(datasetTableTask));
     }

File: backend/src/main/java/io/dataease/listener/AppStartListener.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.listener;
 
 import io.dataease.commons.utils.LogUtil;
+import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.plugins.common.base.domain.DatasetTableTask;
 import io.dataease.commons.constants.ScheduleType;
 import io.dataease.service.ScheduleService;
@@ -26,7 +27,7 @@ public class AppStartListener implements ApplicationListener<ApplicationReadyEve
     public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         LogUtil.info("================= Application start =================");
         // 项目启动，从数据库读取任务加入到Quartz
-        List<DatasetTableTask> list = dataSetTableTaskService.list(new DatasetTableTask());
+        List<DataSetTaskDTO> list = dataSetTableTaskService.list(new DatasetTableTask());
         for (DatasetTableTask task : list) {
             try {
                 if (!StringUtils.equalsIgnoreCase(task.getRate(), ScheduleType.SIMPLE.toString())) {

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -360,7 +360,7 @@ static void mergeValue(JSONObject field, ApiDefinition apiDefinition, JSONObject
 
     private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
         List<String[]> dataList = new LinkedList<>();
-        if (StringUtils.isNotEmpty(apiDefinition.getDataPath()) && CollectionUtils.isNotEmpty(apiDefinition.getJsonFields())) {
+        if (StringUtils.isNotEmpty(apiDefinition.getDataPath()) && CollectionUtils.isEmpty(apiDefinition.getJsonFields())) {
             List<LinkedHashMap> datas = new ArrayList<>();
             Object object = JsonPath.read(result, apiDefinition.getDataPath());
             if (object instanceof List) {

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -58,14 +58,14 @@ public void batchDelete(@RequestBody List<String> ids) {
     @DePermission(type = DePermissionType.DATASET, value = "tableId", level = ResourceAuthLevel.DATASET_LEVEL_MANAGE)
     @ApiOperation("查询")
     @PostMapping("list")
-    public List<DatasetTableTask> list(@RequestBody DatasetTableTask datasetTableTask) {
+    public List<DataSetTaskDTO> list(@RequestBody DatasetTableTask datasetTableTask) {
         return dataSetTableTaskService.list(datasetTableTask);
     }
 
     @DePermission(type = DePermissionType.DATASET, value = "tableId", level = ResourceAuthLevel.DATASET_LEVEL_MANAGE)
     @ApiOperation("分页查询")
     @PostMapping("list/{goPage}/{pageSize}")
-    public Pager<List<DatasetTableTask>> list(@RequestBody DatasetTableTask datasetTableTask, @PathVariable int goPage, @PathVariable int pageSize) {
+    public Pager<List<DataSetTaskDTO>> list(@RequestBody DatasetTableTask datasetTableTask, @PathVariable int goPage, @PathVariable int pageSize) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, dataSetTableTaskService.list(datasetTableTask));
     }

File: backend/src/main/java/io/dataease/listener/AppStartListener.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.listener;
 
 import io.dataease.commons.utils.LogUtil;
+import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.plugins.common.base.domain.DatasetTableTask;
 import io.dataease.commons.constants.ScheduleType;
 import io.dataease.service.ScheduleService;
@@ -26,7 +27,7 @@ public class AppStartListener implements ApplicationListener<ApplicationReadyEve
     public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         LogUtil.info("================= Application start =================");
         // 项目启动，从数据库读取任务加入到Quartz
-        List<DatasetTableTask> list = dataSetTableTaskService.list(new DatasetTableTask());
+        List<DataSetTaskDTO> list = dataSetTableTaskService.list(new DatasetTableTask());
         for (DatasetTableTask task : list) {
             try {
                 if (!StringUtils.equalsIgnoreCase(task.getRate(), ScheduleType.SIMPLE.toString())) {

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -360,7 +360,7 @@ static void mergeValue(JSONObject field, ApiDefinition apiDefinition, JSONObject
 
     private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
         List<String[]> dataList = new LinkedList<>();
-        if (StringUtils.isNotEmpty(apiDefinition.getDataPath()) && CollectionUtils.isNotEmpty(apiDefinition.getJsonFields())) {
+        if (StringUtils.isNotEmpty(apiDefinition.getDataPath()) && CollectionUtils.isEmpty(apiDefinition.getJsonFields())) {
             List<LinkedHashMap> datas = new ArrayList<>();
             Object object = JsonPath.read(result, apiDefinition.getDataPath());
             if (object instanceof List) {

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -421,6 +421,7 @@ private void saveUserRoles(Long userId, List<Long> roleIds) {
     public int delete(Long userId) {
         extAuthService.clearUserResource(userId);
         deleteUserRoles(userId);
+        sysUserAssistMapper.deleteByPrimaryKey(userId);
         return sysUserMapper.deleteByPrimaryKey(userId);
     }
 

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -421,6 +421,7 @@ private void saveUserRoles(Long userId, List<Long> roleIds) {
     public int delete(Long userId) {
         extAuthService.clearUserResource(userId);
         deleteUserRoles(userId);
+        sysUserAssistMapper.deleteByPrimaryKey(userId);
         return sysUserMapper.deleteByPrimaryKey(userId);
     }
 

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -95,13 +95,12 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
             }
             DingUserEntity dingUserEntity = dingtalkXpackService.userInfo(code);
             String username = dingUserEntity.getUserid();
-            String unionid = dingUserEntity.getUnionid();
-            SysUserEntity sysUserEntity = authUserService.getUserByDingtalkId(unionid);
+            SysUserEntity sysUserEntity = authUserService.getUserByDingtalkId(username);
             if (null == sysUserEntity) {
                 String email = StringUtils.isNotBlank(dingUserEntity.getOrg_email()) ? dingUserEntity.getOrg_email() : StringUtils.isNotBlank(dingUserEntity.getEmail()) ? dingUserEntity.getEmail() : (username + "@dingtalk.work");
                 sysUserService.validateExistUser(username, dingUserEntity.getName(), email);
                 sysUserService.saveDingtalkCUser(dingUserEntity, email);
-                sysUserEntity = authUserService.getUserByDingtalkId(unionid);
+                sysUserEntity = authUserService.getUserByDingtalkId(username);
             }
             TokenInfo tokenInfo = TokenInfo.builder().userId(sysUserEntity.getUserId()).username(sysUserEntity.getUsername()).build();
             String realPwd = sysUserEntity.getPassword();

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -95,13 +95,12 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
             }
             DingUserEntity dingUserEntity = dingtalkXpackService.userInfo(code);
             String username = dingUserEntity.getUserid();
-            String unionid = dingUserEntity.getUnionid();
-            SysUserEntity sysUserEntity = authUserService.getUserByDingtalkId(unionid);
+            SysUserEntity sysUserEntity = authUserService.getUserByDingtalkId(username);
             if (null == sysUserEntity) {
                 String email = StringUtils.isNotBlank(dingUserEntity.getOrg_email()) ? dingUserEntity.getOrg_email() : StringUtils.isNotBlank(dingUserEntity.getEmail()) ? dingUserEntity.getEmail() : (username + "@dingtalk.work");
                 sysUserService.validateExistUser(username, dingUserEntity.getName(), email);
                 sysUserService.saveDingtalkCUser(dingUserEntity, email);
-                sysUserEntity = authUserService.getUserByDingtalkId(unionid);
+                sysUserEntity = authUserService.getUserByDingtalkId(username);
             }
             TokenInfo tokenInfo = TokenInfo.builder().userId(sysUserEntity.getUserId()).username(sysUserEntity.getUsername()).build();
             String realPwd = sysUserEntity.getPassword();

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -161,7 +161,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
                 return;
             }
             SysUserAssist sysUserAssist = sysUserService.assistInfo(Long.parseLong(state));
-            if (ObjectUtils.isNotEmpty(sysUserAssist) && StringUtils.isNotBlank(sysUserAssist.getWecomId())) {
+            if (ObjectUtils.isNotEmpty(sysUserAssist) && StringUtils.isNotBlank(sysUserAssist.getLarkId())) {
                 bindError(response, url, "目标用户已绑定其他飞书账号");
                 return;
             }

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -162,7 +162,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
                 return;
             }
             SysUserAssist sysUserAssist = sysUserService.assistInfo(Long.parseLong(state));
-            if (ObjectUtils.isNotEmpty(sysUserAssist) && StringUtils.isNotBlank(sysUserAssist.getWecomId())) {
+            if (ObjectUtils.isNotEmpty(sysUserAssist) && StringUtils.isNotBlank(sysUserAssist.getDingtalkId())) {
                 bindError(response, url, "目标用户已绑定其他钉钉账号");
                 return;
             }

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -159,10 +159,12 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
             SysUserEntity userEntity = authUserService.getUserById(Long.parseLong(state));
             if (ObjectUtils.isEmpty(userEntity)) {
                 bindError(response, url, "绑定用户不存在");
+                return;
             }
             SysUserAssist sysUserAssist = sysUserService.assistInfo(Long.parseLong(state));
             if (ObjectUtils.isNotEmpty(sysUserAssist) && StringUtils.isNotBlank(sysUserAssist.getWecomId())) {
                 bindError(response, url, "目标用户已绑定其他钉钉账号");
+                return;
             }
             Boolean isOpen = authUserService.supportDingtalk();
             if (!isOpen) {
@@ -177,6 +179,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
             SysUserEntity sysUserEntity = authUserService.getUserByDingtalkId(userId);
             if (null != sysUserEntity) {
                 bindError(response, url, "当前钉钉账号已绑定其他DE用户");
+                return;
             }
             if (ObjectUtils.isEmpty(sysUserAssist)) {
                 sysUserAssist = new SysUserAssist();

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -158,10 +158,12 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
             SysUserEntity userEntity = authUserService.getUserById(Long.parseLong(state));
             if (ObjectUtils.isEmpty(userEntity)) {
                 bindError(response, url, "绑定用户不存在");
+                return;
             }
             SysUserAssist sysUserAssist = sysUserService.assistInfo(Long.parseLong(state));
             if (ObjectUtils.isNotEmpty(sysUserAssist) && StringUtils.isNotBlank(sysUserAssist.getWecomId())) {
                 bindError(response, url, "目标用户已绑定其他飞书账号");
+                return;
             }
 
             Boolean isOpen = authUserService.supportLark();
@@ -176,6 +178,7 @@ public void bind(@RequestParam("code") String code, @RequestParam("state") Strin
             SysUserEntity sysUserEntity = authUserService.getUserByLarkId(userId);
             if (null != sysUserEntity) {
                 bindError(response, url, "当前飞书账号已绑定其他DE用户");
+                return;
             }
 
             if (ObjectUtils.isEmpty(sysUserAssist)) {

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -117,7 +117,7 @@ private SQLObj buildSortField(DeSortField f, SQLObj tableObj, int index) {
                 if (f.getType().equalsIgnoreCase("YEAR")) {
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originField + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT);
                 } else if (f.getType().equalsIgnoreCase("TIME")) {
-                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(1970-01-01 " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
+                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT('1970-01-01', " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
                 } else {
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -176,7 +176,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         if (f.getType().equalsIgnoreCase("YEAR")) {
                             fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originField + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT);
                         } else if (f.getType().equalsIgnoreCase("TIME")) {
-                            fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(1970-01-01 " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
+                            fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT('1970-01-01', " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
                         } else {
                             fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                         }
@@ -1140,7 +1140,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 if (x.getType().equalsIgnoreCase("YEAR")) {
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originField + ",'-01-01')", transDateFormat(x.getDateStyle(), x.getDatePattern()));
                 } else if (x.getType().equalsIgnoreCase("TIME")) {
-                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(1970-01-01 " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
+                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT('1970-01-01', " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
                 } else {
                     String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, format);

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -117,7 +117,7 @@ private SQLObj buildSortField(DeSortField f, SQLObj tableObj, int index) {
                 if (f.getType().equalsIgnoreCase("YEAR")) {
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originField + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT);
                 } else if (f.getType().equalsIgnoreCase("TIME")) {
-                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(1970-01-01 " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
+                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT('1970-01-01', " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
                 } else {
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -176,7 +176,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         if (f.getType().equalsIgnoreCase("YEAR")) {
                             fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originField + ",'-01-01')", MySQLConstants.DEFAULT_DATE_FORMAT);
                         } else if (f.getType().equalsIgnoreCase("TIME")) {
-                            fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(1970-01-01 " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
+                            fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT('1970-01-01', " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
                         } else {
                             fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                         }
@@ -1140,7 +1140,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 if (x.getType().equalsIgnoreCase("YEAR")) {
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(" + originField + ",'-01-01')", transDateFormat(x.getDateStyle(), x.getDatePattern()));
                 } else if (x.getType().equalsIgnoreCase("TIME")) {
-                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT(1970-01-01 " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
+                    fieldName = String.format(MySQLConstants.DATE_FORMAT, "CONCAT('1970-01-01', " + originField + ")", MySQLConstants.DEFAULT_DATE_FORMAT);
                 } else {
                     String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                     fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, format);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -1604,7 +1604,7 @@ private String handleVariable(String sql, ChartExtRequest requestList, QueryProv
                 }
 
                 for (String parameter : chartExtFilterRequest.getParameters()) {
-                    if(parameter.contains("|DE")){
+                    if(parameter.contains("|DE|")){
                         if(!parameter.split("|DE|")[0].equals(table.getId())){
                             continue;
                         }

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinitionRequest.java
Patch:
@@ -1,16 +1,15 @@
 package io.dataease.controller.request.datasource;
 
-import com.google.gson.JsonObject;
+import com.alibaba.fastjson.JSONObject;
 import lombok.Data;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
 @Data
 public class ApiDefinitionRequest {
     private List<Map<String, String>> headers = new ArrayList<>();
-    private Map<String, Object> body = new HashMap<>();
+    private JSONObject body = new JSONObject();
     private AuthManager authManager = new AuthManager();
 
 

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -113,7 +113,7 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     break;
                 case SQL:
                     String sql = dataTableInfoDTO.isBase64Encryption()? new String(java.util.Base64.getDecoder().decode(dataTableInfoDTO.getSql())): dataTableInfoDTO.getSql();
-                    tableName = dataSetTableService.handleVariableDefaultValue( sql, null);
+                    tableName = dataSetTableService.handleVariableDefaultValue(sql, null, pluginViewSet.getDsType());
 
                     tableName = "(" + sqlFix(tableName) + ")";
                     break;

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -148,7 +148,7 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
                 if(dataTableInfoDTO.isBase64Encryption()){
                     sql = new String(java.util.Base64.getDecoder().decode(sql));
                 }
-                sql = dataSetTableService.removeVariables(sql);
+                sql = dataSetTableService.removeVariables(sql, ds.getType());
                 datasourceRequest.setQuery(qp.createQuerySQLAsTmp(sql, permissionFields, !needSort, customFilter, rowPermissionsTree, deSortFields));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.CUSTOM.toString())) {
                 DataTableInfoDTO dt = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -113,7 +113,7 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     break;
                 case SQL:
                     String sql = dataTableInfoDTO.isBase64Encryption()? new String(java.util.Base64.getDecoder().decode(dataTableInfoDTO.getSql())): dataTableInfoDTO.getSql();
-                    tableName = dataSetTableService.handleVariableDefaultValue( sql, null);
+                    tableName = dataSetTableService.handleVariableDefaultValue(sql, null, pluginViewSet.getDsType());
 
                     tableName = "(" + sqlFix(tableName) + ")";
                     break;

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -148,7 +148,7 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
                 if(dataTableInfoDTO.isBase64Encryption()){
                     sql = new String(java.util.Base64.getDecoder().decode(sql));
                 }
-                sql = dataSetTableService.removeVariables(sql);
+                sql = dataSetTableService.removeVariables(sql, ds.getType());
                 datasourceRequest.setQuery(qp.createQuerySQLAsTmp(sql, permissionFields, !needSort, customFilter, rowPermissionsTree, deSortFields));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.CUSTOM.toString())) {
                 DataTableInfoDTO dt = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinitionRequest.java
Patch:
@@ -1,16 +1,15 @@
 package io.dataease.controller.request.datasource;
 
-import com.google.gson.JsonObject;
+import com.alibaba.fastjson.JSONObject;
 import lombok.Data;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
 @Data
 public class ApiDefinitionRequest {
     private List<Map<String, String>> headers = new ArrayList<>();
-    private Map<String, Object> body = new HashMap<>();
+    private JSONObject body = new JSONObject();
     private AuthManager authManager = new AuthManager();
 
 

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -155,6 +155,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
         result.put("token", token);
         ServletUtils.setToken(token);
         DeLogUtils.save(SysLogConstants.OPERATE_TYPE.LOGIN, SysLogConstants.SOURCE_TYPE.USER, user.getUserId(), null, null, null);
+        authUserService.unlockAccount(username, ObjectUtils.isEmpty(loginType) ? 0 : loginType);
         authUserService.clearCache(user.getUserId());
         return result;
     }

File: backend/src/main/java/io/dataease/auth/entity/AccountLockStatus.java
Patch:
@@ -10,4 +10,6 @@ public class AccountLockStatus {
     private String username;
 
     private Long unlockTime;
+
+    private Integer relieveTimes;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -72,7 +72,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
             AccountLockStatus accountLockStatus = authUserService.lockStatus(username, 1);
             if (accountLockStatus.getLocked()) {
                 String msg = Translator.get("I18N_ACCOUNT_LOCKED");
-                msg = String.format(msg, username);
+                msg = String.format(msg, username, accountLockStatus.getRelieveTimes().toString());
                 DataEaseException.throwException(msg);
             }
             LdapXpackService ldapXpackService = SpringContextUtil.getBean(LdapXpackService.class);
@@ -112,7 +112,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
         AccountLockStatus accountLockStatus = authUserService.lockStatus(username, 0);
         if (accountLockStatus.getLocked()) {
             String msg = Translator.get("I18N_ACCOUNT_LOCKED");
-            msg = String.format(msg, username);
+            msg = String.format(msg, username, accountLockStatus.getRelieveTimes().toString());
             DataEaseException.throwException(msg);
         }
 

File: backend/src/main/java/io/dataease/auth/service/impl/AuthUserServiceImpl.java
Patch:
@@ -298,6 +298,7 @@ public AccountLockStatus lockStatus(String username, Integer logintype) {
             if (needLock) {
                 long unlockTime = now + (longRelieveTimes * 60L * 1000L);
                 accountLockStatus.setUnlockTime(unlockTime);
+                accountLockStatus.setRelieveTimes(relieveTimes);
             }
 
         }

File: backend/src/main/java/io/dataease/auth/entity/AccountLockStatus.java
Patch:
@@ -10,4 +10,6 @@ public class AccountLockStatus {
     private String username;
 
     private Long unlockTime;
+
+    private Integer relieveTimes;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -72,7 +72,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
             AccountLockStatus accountLockStatus = authUserService.lockStatus(username, 1);
             if (accountLockStatus.getLocked()) {
                 String msg = Translator.get("I18N_ACCOUNT_LOCKED");
-                msg = String.format(msg, username);
+                msg = String.format(msg, username, accountLockStatus.getRelieveTimes().toString());
                 DataEaseException.throwException(msg);
             }
             LdapXpackService ldapXpackService = SpringContextUtil.getBean(LdapXpackService.class);
@@ -112,7 +112,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
         AccountLockStatus accountLockStatus = authUserService.lockStatus(username, 0);
         if (accountLockStatus.getLocked()) {
             String msg = Translator.get("I18N_ACCOUNT_LOCKED");
-            msg = String.format(msg, username);
+            msg = String.format(msg, username, accountLockStatus.getRelieveTimes().toString());
             DataEaseException.throwException(msg);
         }
 

File: backend/src/main/java/io/dataease/auth/service/impl/AuthUserServiceImpl.java
Patch:
@@ -298,6 +298,7 @@ public AccountLockStatus lockStatus(String username, Integer logintype) {
             if (needLock) {
                 long unlockTime = now + (longRelieveTimes * 60L * 1000L);
                 accountLockStatus.setUnlockTime(unlockTime);
+                accountLockStatus.setRelieveTimes(relieveTimes);
             }
 
         }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -155,6 +155,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
         result.put("token", token);
         ServletUtils.setToken(token);
         DeLogUtils.save(SysLogConstants.OPERATE_TYPE.LOGIN, SysLogConstants.SOURCE_TYPE.USER, user.getUserId(), null, null, null);
+        authUserService.unlockAccount(username, ObjectUtils.isEmpty(loginType) ? 0 : loginType);
         authUserService.clearCache(user.getUserId());
         return result;
     }

File: backend/src/main/java/io/dataease/commons/utils/TableUtils.java
Patch:
@@ -26,7 +26,7 @@ public static String fieldNameShort(String dorisName) {
         return "f_" + Md5Utils.md5(dorisName).substring(8, 24);
     }
 
-    public static String columnName(String filedName) {
-        return "C_" + Md5Utils.md5(filedName);
+    public static String columnName(String fieldName) {
+        return "C_" + Md5Utils.md5(fieldName);
     }
 }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -173,6 +173,9 @@ private TableField getTableFiled(ResultSet resultSet, DatasourceRequest datasour
                 }
             }
         }
+        if(StringUtils.isNotEmpty(tableField.getFieldType()) && tableField.getFieldType().equalsIgnoreCase("DECIMAL")){
+            tableField.setAccuracy(Integer.valueOf(resultSet.getString("DECIMAL_DIGITS")));
+        }
         return tableField;
     }
 

File: backend/src/main/java/io/dataease/commons/utils/TableUtils.java
Patch:
@@ -26,7 +26,7 @@ public static String fieldNameShort(String dorisName) {
         return "f_" + Md5Utils.md5(dorisName).substring(8, 24);
     }
 
-    public static String columnName(String filedName) {
-        return "C_" + Md5Utils.md5(filedName);
+    public static String columnName(String fieldName) {
+        return "C_" + Md5Utils.md5(fieldName);
     }
 }

File: backend/src/main/java/io/dataease/service/panel/PanelAppTemplateService.java
Patch:
@@ -168,6 +168,7 @@ public Map<String, String> applyDataset(List<DatasetTable> datasetTablesInfo, Ma
             DataSetTableRequest datasetRequest = new DataSetTableRequest();
             BeanUtils.copyBean(datasetRequest, datasetTable);
             datasetRequest.setOptFrom("appApply");
+            datasetRequest.setSyncType("sync_now");
             DatasetTable newDataset = dataSetTableService.save(datasetRequest);
             datasetsRelaMap.put(oldId, newDataset.getId());
         }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -173,6 +173,9 @@ private TableField getTableFiled(ResultSet resultSet, DatasourceRequest datasour
                 }
             }
         }
+        if(StringUtils.isNotEmpty(tableField.getFieldType()) && tableField.getFieldType().equalsIgnoreCase("DECIMAL")){
+            tableField.setAccuracy(Integer.valueOf(resultSet.getString("DECIMAL_DIGITS")));
+        }
         return tableField;
     }
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1947,6 +1947,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                     datasetTableField.setOriginName(filed.getFieldName());
                     datasetTableField.setType(filed.getFieldType());
                     datasetTableField.setSize(filed.getFieldSize());
+                    datasetTableField.setAccuracy(filed.getAccuracy());
                     if (ObjectUtils.isEmpty(ds)) {
                         datasetTableField.setDeExtractType(transFieldType(filed.getFieldType()));
                     } else {
@@ -1972,6 +1973,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                         datasetTableField.setDeExtractType(fieldType);
                     }
                     datasetTableField.setSize(filed.getFieldSize());
+                    datasetTableField.setAccuracy(filed.getAccuracy());
                     datasetTableField.setChecked(true);
                     datasetTableField.setLastSyncTime(syncTime);
                     datasetTableField.setExtField(0);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1111,6 +1111,7 @@ public Map<String, Object> getDBPreview(DataSetTableRequest dataSetTableRequest)
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);
+        datasourceRequest.setTable(dataTableInfo.getTable());
         Map<String, List> result = datasourceProvider.fetchResultAndField(datasourceRequest);
         List<String[]> data = result.get("dataList");
         List<TableField> fields = result.get("fieldList");

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1111,6 +1111,7 @@ public Map<String, Object> getDBPreview(DataSetTableRequest dataSetTableRequest)
         QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
         String sqlAsTable = qp.createSQLPreview(sql, null);
         datasourceRequest.setQuery(sqlAsTable);
+        datasourceRequest.setTable(dataTableInfo.getTable());
         Map<String, List> result = datasourceProvider.fetchResultAndField(datasourceRequest);
         List<String[]> data = result.get("dataList");
         List<TableField> fields = result.get("fieldList");

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -96,7 +96,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
             String sub = larkUserInfo.getSub();
             SysUserEntity sysUserEntity = authUserService.getUserBySub(sub, 6);
             if (null == sysUserEntity) {
-                String email = StringUtils.isNotBlank(larkUserInfo.getEmail()) ? larkUserInfo.getEmail() : "demo@lark.work";
+                String email = StringUtils.isNotBlank(larkUserInfo.getEmail()) ? larkUserInfo.getEmail() : (username + "@lark.work");
                 sysUserService.validateExistUser(username, larkUserInfo.getName(), email);
                 sysUserService.saveLarkCUser(larkUserInfo, email);
                 sysUserEntity = authUserService.getUserBySub(sub, 6);

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -96,7 +96,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
             String sub = larkUserInfo.getSub();
             SysUserEntity sysUserEntity = authUserService.getUserBySub(sub, 6);
             if (null == sysUserEntity) {
-                String email = StringUtils.isNotBlank(larkUserInfo.getEmail()) ? larkUserInfo.getEmail() : "demo@lark.work";
+                String email = StringUtils.isNotBlank(larkUserInfo.getEmail()) ? larkUserInfo.getEmail() : (username + "@lark.work");
                 sysUserService.validateExistUser(username, larkUserInfo.getName(), email);
                 sysUserService.saveLarkCUser(larkUserInfo, email);
                 sysUserEntity = authUserService.getUserBySub(sub, 6);

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -119,7 +119,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 LogUtil.error(e);
                 Cookie cookie_error = new Cookie("DingtalkError", msg);
                 cookie_error.setPath("/");
-
+                response.addCookie(cookie_error);
                 return modelAndView;
             } catch (UnsupportedEncodingException e1) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -123,7 +123,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 LogUtil.error(e);
                 Cookie cookie_error = new Cookie("LarkError", msg);
                 cookie_error.setPath("/");
-
+                response.addCookie(cookie_error);
                 return modelAndView;
             } catch (UnsupportedEncodingException e1) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/XWecomServer.java
Patch:
@@ -124,7 +124,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 LogUtil.error(e);
                 Cookie cookie_error = new Cookie("WecomError", msg);
                 cookie_error.setPath("/");
-
+                response.addCookie(cookie_error);
                 return modelAndView;
             } catch (UnsupportedEncodingException e1) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -119,7 +119,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 LogUtil.error(e);
                 Cookie cookie_error = new Cookie("DingtalkError", msg);
                 cookie_error.setPath("/");
-
+                response.addCookie(cookie_error);
                 return modelAndView;
             } catch (UnsupportedEncodingException e1) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/XLarkServer.java
Patch:
@@ -123,7 +123,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 LogUtil.error(e);
                 Cookie cookie_error = new Cookie("LarkError", msg);
                 cookie_error.setPath("/");
-
+                response.addCookie(cookie_error);
                 return modelAndView;
             } catch (UnsupportedEncodingException e1) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/XWecomServer.java
Patch:
@@ -124,7 +124,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 LogUtil.error(e);
                 Cookie cookie_error = new Cookie("WecomError", msg);
                 cookie_error.setPath("/");
-
+                response.addCookie(cookie_error);
                 return modelAndView;
             } catch (UnsupportedEncodingException e1) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -46,7 +46,7 @@ public class DataSetGroupService {
     @Resource
     private SysAuthService sysAuthService;
 
-//    @DeCleaner(value = DePermissionType.DATASET, key = "pid")
+    @DeCleaner(value = DePermissionType.DATASET, key = "pid")
     public DataSetGroupDTO save(DatasetGroup datasetGroup) throws Exception {
         checkName(datasetGroup);
         if (StringUtils.isEmpty(datasetGroup.getId())) {

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -88,7 +88,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 DEException.throwException("未开启钉钉");
             }
             DingUserEntity dingUserEntity = dingtalkXpackService.userInfo(code);
-            String username = dingUserEntity.getUserId();
+            String username = dingUserEntity.getUserid();
             String unionid = dingUserEntity.getUnionid();
             SysUserEntity sysUserEntity = authUserService.getUserBySub(unionid, 5);
             if (null == sysUserEntity) {

File: backend/src/main/java/io/dataease/plugins/server/XDingtalkServer.java
Patch:
@@ -88,7 +88,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 DEException.throwException("未开启钉钉");
             }
             DingUserEntity dingUserEntity = dingtalkXpackService.userInfo(code);
-            String username = dingUserEntity.getUserId();
+            String username = dingUserEntity.getUserid();
             String unionid = dingUserEntity.getUnionid();
             SysUserEntity sysUserEntity = authUserService.getUserBySub(unionid, 5);
             if (null == sysUserEntity) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1733,7 +1733,9 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
             DatasourceRequest datasourceRequest = new DatasourceRequest();
             datasourceRequest.setDatasource(ds);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-            String sql = handleVariableDefaultValue(new String(java.util.Base64.getDecoder().decode(new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getSql())), null);
+            DataTableInfoDTO dataTableInfo = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);
+            String sql = dataTableInfo.isBase64Encryption() ? new String(java.util.Base64.getDecoder().decode(dataTableInfo.getSql())) : dataTableInfo.getSql();
+            sql = handleVariableDefaultValue(sql, null);
             String sqlAsTable = qp.createSQLPreview(sql, null);
             datasourceRequest.setQuery(sqlAsTable);
             fields = datasourceProvider.fetchResultField(datasourceRequest);

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -390,7 +390,7 @@ private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
             }
             for (int i = 0; i < columnDataList.size(); i++) {
                 for (int j = 0; j < columnDataList.get(i).size(); j++) {
-                    dataList.get(j)[i] = Optional.ofNullable(columnDataList.get(i).get(j)).orElse("").replaceAll("\n", " ").replaceAll("\r", " ");
+                    dataList.get(j)[i] = Optional.ofNullable(String.valueOf(columnDataList.get(i).get(j))).orElse("").replaceAll("\n", " ").replaceAll("\r", " ");
                 }
             }
         }

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -374,7 +374,7 @@ private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
             for (int i = 0; i < jsonPaths.size(); i++) {
                 List<String> datas = new ArrayList<>();
                 Object object = JsonPath.read(result, jsonPaths.get(i));
-                if (object instanceof List) {
+                if (object instanceof List && jsonPaths.get(i).contains("[*]")) {
                     datas = (List<String>) object;
                 } else {
                     if (object != null) {
@@ -390,7 +390,7 @@ private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
             }
             for (int i = 0; i < columnDataList.size(); i++) {
                 for (int j = 0; j < columnDataList.get(i).size(); j++) {
-                    dataList.get(j)[i] = String.valueOf(columnDataList.get(i).get(j));
+                    dataList.get(j)[i] = Optional.ofNullable(columnDataList.get(i).get(j)).orElse("").replaceAll("\n", " ").replaceAll("\r", " ");
                 }
             }
         }

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -374,7 +374,7 @@ private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
             for (int i = 0; i < jsonPaths.size(); i++) {
                 List<String> datas = new ArrayList<>();
                 Object object = JsonPath.read(result, jsonPaths.get(i));
-                if (object instanceof List) {
+                if (object instanceof List && jsonPaths.get(i).contains("[*]")) {
                     datas = (List<String>) object;
                 } else {
                     if (object != null) {
@@ -390,7 +390,7 @@ private List<String[]> fetchResult(String result, ApiDefinition apiDefinition) {
             }
             for (int i = 0; i < columnDataList.size(); i++) {
                 for (int j = 0; j < columnDataList.get(i).size(); j++) {
-                    dataList.get(j)[i] = String.valueOf(columnDataList.get(i).get(j));
+                    dataList.get(j)[i] = Optional.ofNullable(columnDataList.get(i).get(j)).orElse("").replaceAll("\n", " ").replaceAll("\r", " ");
                 }
             }
         }

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -213,8 +213,8 @@ static private void handleStr(ApiDefinition apiDefinition, String jsonStr, List<
                 if (StringUtils.isNotEmpty(value) && value.startsWith("[")) {
 
                     JSONObject o = new JSONObject();
-                    JSONArray jsonArray = jsonObject.getJSONArray(s);
                     try {
+                        JSONArray jsonArray = jsonObject.getJSONArray(s);
                         List<JSONObject> childrenField = new ArrayList<>();
                         for (Object object: jsonArray) {
                             JSONObject.parseObject(object.toString());

File: backend/src/main/java/io/dataease/service/authModel/VAuthModelService.java
Patch:
@@ -41,6 +41,9 @@ public List<VAuthModelDTO> queryAuthModel(VAuthModelRequest request) {
     }
 
     private List<VAuthModelDTO> filterPrivileges(VAuthModelRequest request, List<VAuthModelDTO> result) {
+        if(AuthUtils.getUser().getIsAdmin()){
+            return result;
+        }
         if (request.getPrivileges() != null) {
             result = result.stream().filter(vAuthModelDTO -> {
                 if (vAuthModelDTO.getNodeType().equalsIgnoreCase("spine") || (vAuthModelDTO.getNodeType().equalsIgnoreCase("leaf") && vAuthModelDTO.getPrivileges() != null && vAuthModelDTO.getPrivileges().contains(request.getPrivileges()))) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1489,7 +1489,7 @@ private Map<String, Object> getUnionSQLDoris(DataTableInfoDTO dataTableInfoDTO)
                     TableUtils.tableName(union.get(0).getCurrentDs().getId()));
         }
         Map<String, Object> map = new HashMap<>();
-        map.put("sql", java.util.Base64.getEncoder().encodeToString(sql.getBytes()));
+        map.put("sql", sql);
         map.put("field", checkedFields);
         map.put("join", unionList);
         return map;
@@ -1806,7 +1806,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                 DataTableInfoDTO dataTableInfoDTO = new Gson().fromJson(dataSetTableRequest.getInfo(),
                         DataTableInfoDTO.class);
                 Map<String, Object> sqlMap = getUnionSQLDoris(dataTableInfoDTO);
-                String sql = new String(java.util.Base64.getDecoder().decode((String) sqlMap.get("sql")));
+                String sql = (String) sqlMap.get("sql");
                 List<DatasetTableField> fieldList = (List<DatasetTableField>) sqlMap.get("field");
                 List<UnionParamDTO> join = (List<UnionParamDTO>) sqlMap.get("join");
 

File: backend/src/main/java/io/dataease/plugins/server/CasServer.java
Patch:
@@ -64,7 +64,7 @@ public ModelAndView callBack() {
                 sysUserService.saveCASUser(name, email);
                 sysUserEntity = authUserService.getUserByName(name);
             }
-            String realPwd = CodingUtil.md5(sysUserService.defaultPWD());
+            String realPwd = sysUserEntity.getPassword();
             TokenInfo tokenInfo = TokenInfo.builder().userId(sysUserEntity.getUserId()).username(sysUserEntity.getUsername()).build();
             String token = JWTUtils.sign(tokenInfo, realPwd);
             ServletUtils.setToken(token);

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -78,7 +78,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 sysUserEntity = authUserService.getUserBySub(ssoUserInfo.getSub());
             }
             TokenInfo tokenInfo = TokenInfo.builder().userId(sysUserEntity.getUserId()).username(sysUserEntity.getUsername()).build();
-            String realPwd = CodingUtil.md5(sysUserService.defaultPWD());
+            String realPwd = sysUserEntity.getPassword();
             String token = JWTUtils.sign(tokenInfo, realPwd);
             ServletUtils.setToken(token);
 

File: backend/src/main/java/io/dataease/plugins/server/CasServer.java
Patch:
@@ -64,7 +64,7 @@ public ModelAndView callBack() {
                 sysUserService.saveCASUser(name, email);
                 sysUserEntity = authUserService.getUserByName(name);
             }
-            String realPwd = CodingUtil.md5(sysUserService.defaultPWD());
+            String realPwd = sysUserEntity.getPassword();
             TokenInfo tokenInfo = TokenInfo.builder().userId(sysUserEntity.getUserId()).username(sysUserEntity.getUsername()).build();
             String token = JWTUtils.sign(tokenInfo, realPwd);
             ServletUtils.setToken(token);

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -78,7 +78,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
                 sysUserEntity = authUserService.getUserBySub(ssoUserInfo.getSub());
             }
             TokenInfo tokenInfo = TokenInfo.builder().userId(sysUserEntity.getUserId()).username(sysUserEntity.getUsername()).build();
-            String realPwd = CodingUtil.md5(sysUserService.defaultPWD());
+            String realPwd = sysUserEntity.getPassword();
             String token = JWTUtils.sign(tokenInfo, realPwd);
             ServletUtils.setToken(token);
 

File: backend/src/main/java/io/dataease/service/sys/log/LogService.java
Patch:
@@ -77,7 +77,8 @@ public List<SysLogGridDTO> query(KeyGridRequest request) {
         List<String> ids = null;
         GridExample gridExample = request.convertExample();
         gridExample.setExtendCondition(keyWord);
-        LogQueryParam logQueryParam = BeanUtils.copyBean(new LogQueryParam(), gridExample);
+
+        LogQueryParam logQueryParam = gson.fromJson(gson.toJson(gridExample), LogQueryParam.class);
         if (StringUtils.isNotBlank(keyWord)) {
             List<FolderItem> types = types();
             ids = types.stream().filter(item -> item.getName().toLowerCase().contains(keyWord.toLowerCase())).map(FolderItem::getId).collect(Collectors.toList());
@@ -279,7 +280,7 @@ public void exportExcel(KeyGridRequest request) throws Exception {
         try {
             GridExample gridExample = request.convertExample();
             gridExample.setExtendCondition(keyWord);
-            LogQueryParam logQueryParam = BeanUtils.copyBean(new LogQueryParam(), gridExample);
+            LogQueryParam logQueryParam = gson.fromJson(gson.toJson(gridExample), LogQueryParam.class);
             if (StringUtils.isNotBlank(keyWord)) {
                 List<FolderItem> types = types();
                 ids = types.stream().filter(item -> item.getName().toLowerCase().contains(keyWord.toLowerCase())).map(FolderItem::getId).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -1213,7 +1213,7 @@ private String getYWheres(ChartViewFieldDTO y, String originField, String fieldA
                 } else if (StringUtils.containsIgnoreCase(f.getTerm(), "like")) {
                     whereValue = "'%" + f.getValue() + "%'";
                 } else {
-                    if (y.getDeExtractType() == DeTypeConstants.DE_INT || y.getDeExtractType() == DeTypeConstants.DE_FLOAT || y.getDeExtractType() == DeTypeConstants.DE_BOOL) {
+                    if (y.getDeExtractType() == DeTypeConstants.DE_INT || y.getDeExtractType() == DeTypeConstants.DE_FLOAT || y.getDeExtractType() == DeTypeConstants.DE_BOOL || StringUtils.equalsIgnoreCase(y.getId(), "count")) {
                         whereValue = String.format(ImpalaConstants.WHERE_NUMBER_VALUE_VALUE, f.getValue());
                     } else {
                         whereValue = String.format(ImpalaConstants.WHERE_VALUE_VALUE, f.getValue());

File: backend/src/main/java/io/dataease/controller/sys/SysLogController.java
Patch:
@@ -6,7 +6,7 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.handler.annotation.I18n;
-import io.dataease.controller.sys.base.BaseGridRequest;
+import io.dataease.controller.sys.request.KeyGridRequest;
 import io.dataease.dto.SysLogGridDTO;
 import io.dataease.dto.log.FolderItem;
 import io.dataease.service.sys.log.LogService;
@@ -37,7 +37,7 @@ public class SysLogController {
         @ApiImplicitParam(name = "request", value = "查询条件", required = true)
     })
     public Pager<List<SysLogGridDTO>> logGrid(@PathVariable int goPage, @PathVariable int pageSize,
-                                              @RequestBody BaseGridRequest request) {
+                                              @RequestBody KeyGridRequest request) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, logService.query(request));
     }
@@ -51,7 +51,7 @@ public List<FolderItem> types() {
     @ApiOperation("导出操作日志")
     @PostMapping("/export")
     @ApiImplicitParam(name = "request", value = "查询条件", required = true)
-    public void export(@RequestBody BaseGridRequest request) throws Exception{
+    public void export(@RequestBody KeyGridRequest request) throws Exception{
         logService.exportExcel(request);
     }
 }

File: backend/src/main/java/io/dataease/controller/sys/request/KeyGridRequest.java
Patch:
@@ -7,7 +7,7 @@
 import java.io.Serializable;
 
 @Data
-public class UserGridRequest extends BaseGridRequest implements Serializable {
+public class KeyGridRequest extends BaseGridRequest implements Serializable {
     @ApiModelProperty("关键字")
     private String keyWord;
 }

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -60,7 +60,7 @@ public class SysUserService {
     private AuthUserService authUserService;
 
 
-    public List<SysUserGridResponse> query(UserGridRequest request) {
+    public List<SysUserGridResponse> query(KeyGridRequest request) {
         String keyWord = request.getKeyWord();
         GridExample gridExample = request.convertExample();
         gridExample.setExtendCondition(keyWord);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2731,7 +2731,7 @@ private void visitBinaryExpr(BinaryExpression expr, String operator) {
                 boolean hasSubBinaryExpression = false;
                 try {
                     BinaryExpression leftBinaryExpression = (BinaryExpression) expr.getLeftExpression();
-                    hasSubBinaryExpression = leftBinaryExpression.getLeftExpression() instanceof Expression;
+                    hasSubBinaryExpression = leftBinaryExpression.getLeftExpression() instanceof BinaryExpression;
                 } catch (Exception e) {e.printStackTrace();}
 
                 if (expr.getLeftExpression() instanceof BinaryExpression && !hasSubBinaryExpression && hasVarible(expr.getLeftExpression().toString())) {

File: backend/src/main/java/io/dataease/service/datasource/DriverService.java
Patch:
@@ -109,7 +109,7 @@ public void deleteDriverFile(String driverFileId) throws Exception{
         if(deDriver == null){
             throw new Exception(Translator.get("I18N_DRIVER_NOT_FOUND"));
         }
-        if(deDriverDetails.getIsTransName()){
+        if(deDriverDetails.getIsTransName() == null || !deDriverDetails.getIsTransName()){
             DeFileUtils.deleteFile(DRIVER_PATH + deDriverDetails.getDeDriverId() + "/" + deDriverDetails.getFileName());
         }else {
             DeFileUtils.deleteFile(DRIVER_PATH + deDriverDetails.getDeDriverId() + "/" + deDriverDetails.getTransName());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1045,7 +1045,7 @@ public String removeVariables(String sql) throws Exception {
             builder.append(" ");
             for (Iterator<WithItem> iter = select.getWithItemsList().iterator(); iter.hasNext(); ) {
                 WithItem withItem = iter.next();
-                builder.append(withItem.toString());
+                builder.append(withItem.getName() + " AS ( " + removeVariables(withItem.getSubSelect().toString()) + " ) ");
                 if (iter.hasNext()) {
                     builder.append(",");
                 }

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -196,7 +196,7 @@ public List<String> ldapUserNames() {
     }
 
     /**
-     * 修改用户密码清楚缓存
+     * 修改用户密码清除缓存
      *
      * @param request
      * @return

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -196,7 +196,7 @@ public List<String> ldapUserNames() {
     }
 
     /**
-     * 修改用户密码清楚缓存
+     * 修改用户密码清除缓存
      *
      * @param request
      * @return

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -616,6 +616,9 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
                 // check doris table
                 if (!checkEngineTableIsExists(dataSetTableRequest.getId())) {
                     if (dataSetTableRequest.isPreviewForTask()) {
+                        map.put("fields", fields);
+                        map.put("data", new ArrayList<>());
+                        map.put("page", new DataSetPreviewPage());
                         return map;
                     } else {
                         throw new RuntimeException(Translator.get("i18n_data_not_sync"));

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -957,7 +957,6 @@ public List<SqlVariableDetails> paramsWithIds(List<String> viewIds) {
 
     public void checkVariable(final String sql) throws Exception {
         String tmpSql = removeVariables(sql);
-        System.out.println(tmpSql);
         if (tmpSql.contains(SubstitutedParams)) {
             throw new Exception(Translator.get("I18N_SQL_variable_limit"));
         }

File: backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -50,10 +50,10 @@ public Boolean unInstall(@PathVariable Long pluginId) {
     }
 
     @ApiOperation("更新插件")
-    @PostMapping("/update/id")
+    @PostMapping("/update/{pluginId}")
     @RequiresPermissions("plugin:upload")
-    public Map<String, Object> update(@PathVariable("id") Long id, @RequestParam("file") MultipartFile file) throws Exception{
-        if (pluginService.uninstall(id)) {
+    public Map<String, Object> update(@PathVariable("pluginId") Long pluginId, @RequestParam("file") MultipartFile file) throws Exception{
+        if (pluginService.uninstall(pluginId)) {
             return pluginService.localInstall(file);
         }
         return null;

File: backend/src/main/java/io/dataease/controller/sys/SysPluginController.java
Patch:
@@ -50,10 +50,10 @@ public Boolean unInstall(@PathVariable Long pluginId) {
     }
 
     @ApiOperation("更新插件")
-    @PostMapping("/update/id")
+    @PostMapping("/update/{pluginId}")
     @RequiresPermissions("plugin:upload")
-    public Map<String, Object> update(@PathVariable("id") Long id, @RequestParam("file") MultipartFile file) throws Exception{
-        if (pluginService.uninstall(id)) {
+    public Map<String, Object> update(@PathVariable("pluginId") Long pluginId, @RequestParam("file") MultipartFile file) throws Exception{
+        if (pluginService.uninstall(pluginId)) {
             return pluginService.localInstall(file);
         }
         return null;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1110,7 +1110,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
 
             String whereName = "";
             if (request.getIsTree()) {
-                whereName = "CONCAT(" + StringUtils.join(whereNameList, ",',',") + ")";
+                whereName = " (" + StringUtils.join(whereNameList, "||','||") + ") ";
             } else {
                 whereName = whereNameList.get(0);
             }

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1110,7 +1110,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
 
             String whereName = "";
             if (request.getIsTree()) {
-                whereName = "CONCAT(" + StringUtils.join(whereNameList, ",',',") + ")";
+                whereName = " (" + StringUtils.join(whereNameList, "||','||") + ") ";
             } else {
                 whereName = whereNameList.get(0);
             }

File: backend/src/main/java/io/dataease/plugins/server/XUserServer.java
Patch:
@@ -14,6 +14,7 @@
 
 import javax.servlet.http.HttpServletResponse;
 
+
 @Api(tags = "xpack：用户导入")
 @RequestMapping("/plugin/user")
 @RestController

File: backend/src/main/java/io/dataease/plugins/server/XUserServer.java
Patch:
@@ -14,6 +14,7 @@
 
 import javax.servlet.http.HttpServletResponse;
 
+
 @Api(tags = "xpack：用户导入")
 @RequestMapping("/plugin/user")
 @RestController

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -877,12 +877,11 @@ public static Map<String, Object> transTableNormal(List<ChartViewFieldDTO> xAxis
 
     // 表格
     public static Map<String, Object> transTableNormal(Map<String, List<ChartViewFieldDTO>> fieldMap, ChartViewWithBLOBs view, List<String[]> data, List<String> desensitizationList) {
-        // List<ChartViewFieldDTO> fields = fieldMap.entrySet().stream().map(Map.Entry::getValue).flatMap(List::stream).collect(Collectors.toList());
-        // 上面乱序了
+        
         List<ChartViewFieldDTO> fields = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(fieldMap.get("xAxis")))fields.addAll(fieldMap.get("xAxis"));
-        if (CollectionUtils.isNotEmpty(fieldMap.get("labelAxis")))fields.addAll(fieldMap.get("labelAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("tooltipAxis")))fields.addAll(fieldMap.get("tooltipAxis"));
+        if (CollectionUtils.isNotEmpty(fieldMap.get("labelAxis")))fields.addAll(fieldMap.get("labelAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("yAxis")))fields.addAll(fieldMap.get("yAxis"));
         return transTableNormal(fields, view, data, desensitizationList);
     }

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -877,12 +877,11 @@ public static Map<String, Object> transTableNormal(List<ChartViewFieldDTO> xAxis
 
     // 表格
     public static Map<String, Object> transTableNormal(Map<String, List<ChartViewFieldDTO>> fieldMap, ChartViewWithBLOBs view, List<String[]> data, List<String> desensitizationList) {
-        // List<ChartViewFieldDTO> fields = fieldMap.entrySet().stream().map(Map.Entry::getValue).flatMap(List::stream).collect(Collectors.toList());
-        // 上面乱序了
+        
         List<ChartViewFieldDTO> fields = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(fieldMap.get("xAxis")))fields.addAll(fieldMap.get("xAxis"));
-        if (CollectionUtils.isNotEmpty(fieldMap.get("labelAxis")))fields.addAll(fieldMap.get("labelAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("tooltipAxis")))fields.addAll(fieldMap.get("tooltipAxis"));
+        if (CollectionUtils.isNotEmpty(fieldMap.get("labelAxis")))fields.addAll(fieldMap.get("labelAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("yAxis")))fields.addAll(fieldMap.get("yAxis"));
         return transTableNormal(fields, view, data, desensitizationList);
     }

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -881,9 +881,9 @@ public static Map<String, Object> transTableNormal(Map<String, List<ChartViewFie
         // 上面乱序了
         List<ChartViewFieldDTO> fields = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(fieldMap.get("xAxis")))fields.addAll(fieldMap.get("xAxis"));
-        if (CollectionUtils.isNotEmpty(fieldMap.get("yAxis")))fields.addAll(fieldMap.get("yAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("labelAxis")))fields.addAll(fieldMap.get("labelAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("tooltipAxis")))fields.addAll(fieldMap.get("tooltipAxis"));
+        if (CollectionUtils.isNotEmpty(fieldMap.get("yAxis")))fields.addAll(fieldMap.get("yAxis"));
         return transTableNormal(fields, view, data, desensitizationList);
     }
 

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -881,9 +881,9 @@ public static Map<String, Object> transTableNormal(Map<String, List<ChartViewFie
         // 上面乱序了
         List<ChartViewFieldDTO> fields = new ArrayList<>();
         if (CollectionUtils.isNotEmpty(fieldMap.get("xAxis")))fields.addAll(fieldMap.get("xAxis"));
-        if (CollectionUtils.isNotEmpty(fieldMap.get("yAxis")))fields.addAll(fieldMap.get("yAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("labelAxis")))fields.addAll(fieldMap.get("labelAxis"));
         if (CollectionUtils.isNotEmpty(fieldMap.get("tooltipAxis")))fields.addAll(fieldMap.get("tooltipAxis"));
+        if (CollectionUtils.isNotEmpty(fieldMap.get("yAxis")))fields.addAll(fieldMap.get("yAxis"));
         return transTableNormal(fields, view, data, desensitizationList);
     }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -517,6 +517,7 @@ public List<String[]> sqlData(ChartViewDTO view, ChartExtRequest requestList, bo
             // 仪表板有参数不使用缓存
             if (!cache || CollectionUtils.isNotEmpty(requestList.getFilter())
                     || CollectionUtils.isNotEmpty(requestList.getLinkageFilters())
+                    || CollectionUtils.isNotEmpty(requestList.getOuterParamsFilters())
                     || CollectionUtils.isNotEmpty(requestList.getDrill()) || CollectionUtils.isNotEmpty(rowPermissionsTree) || fields.size() != columnPermissionFields.size()) {
                 data = datasourceProvider.getData(datasourceRequest);
             } else {
@@ -911,6 +912,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             // 仪表板有参数不使用缓存
             if (!cache || CollectionUtils.isNotEmpty(requestList.getFilter())
                     || CollectionUtils.isNotEmpty(requestList.getLinkageFilters())
+                    || CollectionUtils.isNotEmpty(requestList.getOuterParamsFilters())
                     || CollectionUtils.isNotEmpty(requestList.getDrill()) || CollectionUtils.isNotEmpty(rowPermissionsTree) || fields.size() != columnPermissionFields.size()) {
                 data = datasourceProvider.getData(datasourceRequest);
             } else {

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -142,7 +142,7 @@ static public String execHttpRequest(ApiDefinition apiDefinition, int socketTime
 
         switch (apiDefinition.getMethod()) {
             case "GET":
-                response = HttpClientUtil.get(apiDefinition.getUrl(), httpClientConfig);
+                response = HttpClientUtil.get(apiDefinition.getUrl().trim(), httpClientConfig);
                 break;
             case "POST":
                 if (apiDefinitionRequest.getBody().get("type") == null) {

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -175,15 +175,14 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
         dataSetColumnPermissionsDTO.setAuthTargetIds(Collections.singletonList(userId));
         dataSetColumnPermissionsDTO.setAuthTargetType("user");
         datasetColumnPermissions.addAll(columnPermissionService.searchPermissions(dataSetColumnPermissionsDTO));
-
         if(CollectionUtils.isNotEmpty(roleIds)){
             dataSetColumnPermissionsDTO.setAuthTargetIds(roleIds);
             dataSetColumnPermissionsDTO.setAuthTargetType("role");
             List<DataSetColumnPermissionsDTO> roleColumnPermissionsDTOS = new ArrayList<>();
             for (DataSetColumnPermissionsDTO columnPermissionsDTO : columnPermissionService.searchPermissions(dataSetColumnPermissionsDTO)) {
                 columnPermissionsDTO.getWhiteListUser();
                 List<Long> userIdList = new Gson().fromJson(columnPermissionsDTO.getWhiteListUser(), new TypeToken<List<Long>>() {}.getType());
-                if(CollectionUtils.isNotEmpty(userIdList) && !userIdList.contains(userId)){
+                if(CollectionUtils.isEmpty(userIdList) || !userIdList.contains(userId)){
                     roleColumnPermissionsDTOS.add(columnPermissionsDTO);
                 }
             }
@@ -196,7 +195,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();
             for (DataSetColumnPermissionsDTO columnPermissionsDTO : columnPermissionService.searchPermissions(dataSetColumnPermissionsDTO)) {
                 List<Long> userIdList = new Gson().fromJson(columnPermissionsDTO.getWhiteListUser(), new TypeToken<List<Long>>() {}.getType());
-                if(CollectionUtils.isNotEmpty(userIdList) && !userIdList.contains(userId)){
+                if(CollectionUtils.isEmpty(userIdList) || !userIdList.contains(userId)){
                     deptColumnPermissionsDTOS.add(columnPermissionsDTO);
                 }
             }

File: backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -349,7 +349,7 @@ public List<PanelShareDto> queryTree(BaseGridRequest request) {
         Map<String, Object> param = new HashMap<>();
         param.put("userId", userId);
         param.put("deptId", deptId);
-        param.put("roleIds", roleIds);
+        param.put("roleIds", CollectionUtils.isNotEmpty(roleIds)? roleIds: null);
 
         List<PanelSharePo> datas = extPanelShareMapper.query(param);
         List<PanelShareDto> dtoLists = datas.stream().map(po -> BeanUtils.copyBean(new PanelShareDto(), po))

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -183,7 +183,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             for (DataSetColumnPermissionsDTO columnPermissionsDTO : columnPermissionService.searchPermissions(dataSetColumnPermissionsDTO)) {
                 columnPermissionsDTO.getWhiteListUser();
                 List<Long> userIdList = new Gson().fromJson(columnPermissionsDTO.getWhiteListUser(), new TypeToken<List<Long>>() {}.getType());
-                if(!userIdList.contains(userId)){
+                if(CollectionUtils.isNotEmpty(userIdList) && !userIdList.contains(userId)){
                     roleColumnPermissionsDTOS.add(columnPermissionsDTO);
                 }
             }

File: backend/src/main/java/io/dataease/service/dataset/PermissionService.java
Patch:
@@ -196,7 +196,7 @@ private List<DataSetColumnPermissionsDTO> columnPermissions(String datasetId, Lo
             List<DataSetColumnPermissionsDTO> deptColumnPermissionsDTOS = new ArrayList<>();
             for (DataSetColumnPermissionsDTO columnPermissionsDTO : columnPermissionService.searchPermissions(dataSetColumnPermissionsDTO)) {
                 List<Long> userIdList = new Gson().fromJson(columnPermissionsDTO.getWhiteListUser(), new TypeToken<List<Long>>() {}.getType());
-                if(!userIdList.contains(userId)){
+                if(CollectionUtils.isNotEmpty(userIdList) && !userIdList.contains(userId)){
                     deptColumnPermissionsDTOS.add(columnPermissionsDTO);
                 }
             }

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1074,7 +1074,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(DorisConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -1130,7 +1130,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(CKConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -1124,7 +1124,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(Db2Constants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -1119,7 +1119,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(EsSqlLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -1055,7 +1055,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(HiveConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -1060,7 +1060,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(ImpalaConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -969,7 +969,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(MongoConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1060,7 +1060,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(MySQLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1123,7 +1123,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     String st = String.format(OracleConstants.TO_DATE, "'" + startTime + "'", OracleConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -1086,7 +1086,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(PgConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -1013,7 +1013,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(PgConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1118,7 +1118,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(SqlServerSQLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1074,7 +1074,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(DorisConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -1130,7 +1130,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(CKConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -1124,7 +1124,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(Db2Constants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -1119,7 +1119,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(EsSqlLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -1055,7 +1055,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(HiveConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -1060,7 +1060,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(ImpalaConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -969,7 +969,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(MongoConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -1060,7 +1060,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(MySQLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -1123,7 +1123,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     String st = String.format(OracleConstants.TO_DATE, "'" + startTime + "'", OracleConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -1086,7 +1086,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(PgConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -1013,7 +1013,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(PgConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1118,7 +1118,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
                 whereValue = "'%" + value.get(0) + "%'";
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == DeTypeConstants.DE_TIME) {
-                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(SqlServerSQLConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -78,7 +78,7 @@ public Integer transFieldType(String field) {
             case "UINT64":
                 return 2;// 整型
             case "FLOAT32":
-            case "Float64":
+            case "FLOAT64":
             case "DECIMAL":
                 return 3;// 浮点
             case "BIT":

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1075,6 +1075,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    simpleDateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(DorisConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1075,6 +1075,7 @@ public String transExtFilterList(SQLObj tableObj, List<ChartExtFilterRequest> re
             } else if (StringUtils.containsIgnoreCase(request.getOperator(), "between")) {
                 if (request.getDatasetTableField().getDeType() == 1) {
                     SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+                    simpleDateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
                     String startTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(0))));
                     String endTime = simpleDateFormat.format(new Date(Long.parseLong(value.get(1))));
                     whereValue = String.format(DorisConstants.WHERE_BETWEEN, startTime, endTime);

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -81,7 +81,7 @@ private List<TableField> getTableFileds(ApiDefinition apiDefinition, String resp
         List<TableField> tableFields = new ArrayList<>();
         for (DatasetTableFieldDTO field : checkApiDefinition(apiDefinition, response).getFields()) {
             TableField tableField = new TableField();
-            tableField.setFieldName(field.getOriginName());
+            tableField.setFieldName(field.getName());
             tableField.setRemarks(field.getName());
             tableField.setFieldSize(field.getSize());
             tableField.setFieldType(field.getDeExtractType().toString());

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinition.java
Patch:
@@ -22,5 +22,6 @@ public class ApiDefinition {
     private List<JSONObject> jsonFields = new ArrayList<>();
     private int previewNum = 10;
     private int maxPreviewNum = 10;
+    private int serialNumber;
 
 }

File: backend/src/main/java/io/dataease/service/wizard/ReptileService.java
Patch:
@@ -25,7 +25,7 @@ public List lastActive() {
         List result = new ArrayList();
         try {
             HttpClientConfig config = new HttpClientConfig();
-            config.setCocketTimeout(5000);
+            config.setSocketTimeout(5000);
             //爬取最新数据
             Document doc = Jsoup.parse(HttpClientUtil.get(blogUrl, config));
             Elements elementsContent = doc.getElementsByAttributeValue("rel", "bookmark");

File: backend/src/main/java/io/dataease/service/system/EmailService.java
Patch:
@@ -140,6 +140,7 @@ private MimeMultipart addFiles(MimeMultipart multipart, List<File> files) throws
             attach.setFileName(MimeUtility.encodeText(file.getName()));
             multipart.addBodyPart(attach);
         }
+        System.getProperties().setProperty("mail.mime.splitlongparameters", "false");
         multipart.setSubType("related");
         return multipart;
     }

File: backend/src/main/java/io/dataease/service/system/EmailService.java
Patch:
@@ -140,6 +140,7 @@ private MimeMultipart addFiles(MimeMultipart multipart, List<File> files) throws
             attach.setFileName(MimeUtility.encodeText(file.getName()));
             multipart.addBodyPart(attach);
         }
+        System.getProperties().setProperty("mail.mime.splitlongparameters", "false");
         multipart.setSubType("related");
         return multipart;
     }

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -263,7 +263,7 @@ static private void setProperty(ApiDefinition apiDefinition, JSONObject o, Strin
         o.put("extField", 0);
         o.put("checked", false);
         for (DatasetTableFieldDTO fieldDTO : apiDefinition.getFields()) {
-            if (fieldDTO.getJsonPath().equals(o.getString("jsonPath"))) {
+            if (StringUtils.isNotEmpty(o.getString("jsonPath")) && StringUtils.isNotEmpty(fieldDTO.getJsonPath()) && fieldDTO.getJsonPath().equals(o.getString("jsonPath"))) {
                 o.put("checked", true);
                 o.put("deExtractType", fieldDTO.getDeExtractType());
                 o.put("name", fieldDTO.getName());

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1196,7 +1196,8 @@ private StepMeta udjc(List<DatasetTableField> datasetTableFields, DatasourceType
                 targetCharset = jdbcConfiguration.getTargetCharset();
             }
             if (StringUtils.isNotEmpty(charset)) {
-                tmp_code = tmp_code.replace("handleCharset", handleCharset.replace("Datasource_Charset", charset).replace("Target_Charset", targetCharset));
+                String varcharFields = datasetTableFields.stream().filter(datasetTableField -> datasetTableField.getDeExtractType() == 0).map(DatasetTableField::getOriginName).collect(Collectors.joining(","));
+                tmp_code = tmp_code.replace("handleCharset", handleCharset.replace("Datasource_Charset", charset).replace("Target_Charset", targetCharset).replace("varcharFields", varcharFields));
             }else {
                 tmp_code = tmp_code.replace("handleCharset", "");
             }
@@ -1313,7 +1314,7 @@ private void deleteFile(String filePath) {
             "            get(Fields.Out, filed).setValue(r, tmp);\n" +
             "        } \n";
 
-    private final static String handleCharset = "\tif(tmp != null){\n" +
+    private final static String handleCharset = "\tif(tmp != null && Arrays.asList(\"varcharFields\".split(\",\")).contains(filed)){\n" +
             "  \t\t\ttry {\n" +
             "\t\t\t\tget(Fields.Out, filed).setValue(r, new String(tmp.getBytes(\"Datasource_Charset\"), \"Target_Charset\"));\n" +
             "       \t\t}catch (Exception e){}\n" +

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -47,8 +47,7 @@ public String deApi() {
             case valid:
                 return "doc.html";
             default:
-//                return "nolic.html";
-                return "doc.html";
+                return "nolic.html";
         }
     }
 

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -47,8 +47,7 @@ public String deApi() {
             case valid:
                 return "doc.html";
             default:
-//                return "nolic.html";
-                return "doc.html";
+                return "nolic.html";
         }
     }
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -2577,6 +2577,7 @@ public void visit(InExpression inExpression) {
                     stringBuilder.append(SubstitutedSql);
                     return;
                 }
+                inExpression.getLeftExpression().accept(this);
                 if (inExpression.isNot()) {
                     getBuffer().append(" " + " NOT IN " + " ");
                 } else {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -649,7 +649,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
                 boolean hasParameters = false;
                 if (StringUtils.isNotEmpty(table.getSqlVariableDetails())) {
                     List<SqlVariableDetails> sqlVariables = new Gson().fromJson(table.getSqlVariableDetails(), new TypeToken<List<SqlVariableDetails>>() {}.getType());
-                    for (String parameter : request.getParameters()) {
+                    for (String parameter : Optional.ofNullable(request.getParameters()).orElse(new ArrayList<>()) ) {
                         if (sqlVariables.stream().map(SqlVariableDetails::getVariableName).collect(Collectors.toList()).contains(parameter)) {
                             hasParameters = true;
                         }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -649,7 +649,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
                 boolean hasParameters = false;
                 if (StringUtils.isNotEmpty(table.getSqlVariableDetails())) {
                     List<SqlVariableDetails> sqlVariables = new Gson().fromJson(table.getSqlVariableDetails(), new TypeToken<List<SqlVariableDetails>>() {}.getType());
-                    for (String parameter : request.getParameters()) {
+                    for (String parameter : Optional.ofNullable(request.getParameters()).orElse(new ArrayList<>()) ) {
                         if (sqlVariables.stream().map(SqlVariableDetails::getVariableName).collect(Collectors.toList()).contains(parameter)) {
                             hasParameters = true;
                         }

File: backend/src/main/java/io/dataease/dto/authModel/VAuthModelDTO.java
Patch:
@@ -22,6 +22,8 @@ public class VAuthModelDTO extends VAuthModelWithBLOBs implements ITreeBase<VAut
 
     private String innerId;
 
+    private Boolean isPlugin = false;
+
     public String toString(){
         return this.getName();
     }

File: backend/src/main/java/io/dataease/dto/authModel/VAuthModelDTO.java
Patch:
@@ -22,6 +22,8 @@ public class VAuthModelDTO extends VAuthModelWithBLOBs implements ITreeBase<VAut
 
     private String innerId;
 
+    private Boolean isPlugin = false;
+
     public String toString(){
         return this.getName();
     }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -1121,9 +1121,9 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
                 }
             } else {
                 if (x.getDeType() == DeTypeConstants.DE_INT) {
-                    fieldName = String.format(SqlServerSQLConstants.CONVERT, originField, SqlServerSQLConstants.DEFAULT_INT_FORMAT);
+                    fieldName = String.format(SqlServerSQLConstants.CONVERT, SqlServerSQLConstants.DEFAULT_INT_FORMAT, originField);
                 } else if (x.getDeType() == DeTypeConstants.DE_FLOAT) {
-                    fieldName = String.format(SqlServerSQLConstants.CONVERT, originField, SqlServerSQLConstants.DEFAULT_FLOAT_FORMAT);
+                    fieldName = String.format(SqlServerSQLConstants.CONVERT, SqlServerSQLConstants.DEFAULT_FLOAT_FORMAT, originField);
                 } else {
                     fieldName = originField;
                 }

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisDDLProvider.java
Patch:
@@ -62,7 +62,7 @@ private String createDorisTableColumnSql(final List<DatasetTableField> datasetTa
             }
             switch (datasetTableField.getDeExtractType()) {
                 case 0:
-                    Column_Fields.append("varchar(length)".replace("length", String.valueOf(size))).append(",`");
+                    Column_Fields.append("STRING".replace("length", String.valueOf(size))).append(",`");
                     break;
                 case 1:
                     size  = size < 50? 50 : size;

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisDDLProvider.java
Patch:
@@ -66,7 +66,7 @@ private String createDorisTableColumnSql(final List<DatasetTableField> datasetTa
                     break;
                 case 1:
                     size  = size < 50? 50 : size;
-                    Column_Fields.append("varchar(length)".replace("length", String.valueOf(size))).append(",`");
+                    Column_Fields.append("STRING".replace("length", String.valueOf(size))).append(",`");
                     break;
                 case 2:
                     Column_Fields.append("bigint").append(",`");
@@ -78,7 +78,7 @@ private String createDorisTableColumnSql(final List<DatasetTableField> datasetTa
                     Column_Fields.append("TINYINT(length)".replace("length", String.valueOf(size))).append(",`");
                     break;
                 default:
-                    Column_Fields.append("varchar(length)".replace("length", String.valueOf(size))).append(",`");
+                    Column_Fields.append("STRING".replace("length", String.valueOf(size))).append(",`");
                     break;
             }
         }

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -142,9 +142,8 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
                 datasourceRequest.setQuery(qp.createQuerySQL(dataTableInfoDTO.getTable(), permissionFields, !needSort, ds, customFilter, deSortFields));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.SQL.toString())) {
                 String sql = dataTableInfoDTO.getSql();
-                if (rowAndColumnMgm) {
-                    sql = dataSetTableService.removeVariables(sql);
-                }
+
+                sql = dataSetTableService.removeVariables(sql);
                 datasourceRequest.setQuery(qp.createQuerySQLAsTmp(sql, permissionFields, !needSort, customFilter, deSortFields));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), DatasetType.CUSTOM.toString())) {
                 DataTableInfoDTO dt = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/service/chart/util/ChartDataBuild.java
Patch:
@@ -127,6 +127,7 @@ public static Map<String, Object> transStackChartDataAntV(List<ChartViewFieldDTO
                     }
                 }
                 axisChartDataDTO.setField(a.toString());
+                axisChartDataDTO.setName(a.toString());
                 axisChartDataDTO.setCategory(row[xAxis.size()]);
 
                 List<ChartDimensionDTO> dimensionList = new ArrayList<>();
@@ -177,6 +178,7 @@ public static Map<String, Object> transStackChartDataAntV(List<ChartViewFieldDTO
                 for (int i = xAxis.size(); i < xAxis.size() + yAxis.size(); i++) {
                     AxisChartDataAntVDTO axisChartDataDTO = new AxisChartDataAntVDTO();
                     axisChartDataDTO.setField(a.toString());
+                    axisChartDataDTO.setName(a.toString());
 
                     List<ChartDimensionDTO> dimensionList = new ArrayList<>();
                     List<ChartQuotaDTO> quotaList = new ArrayList<>();
@@ -232,6 +234,7 @@ public static Map<String, Object> transScatterDataAntV(List<ChartViewFieldDTO> x
             for (int i = xAxis.size(); i < xAxis.size() + yAxis.size(); i++) {
                 AxisChartDataAntVDTO axisChartDataDTO = new AxisChartDataAntVDTO();
                 axisChartDataDTO.setField(a.toString());
+                axisChartDataDTO.setName(a.toString());
 
                 List<ChartDimensionDTO> dimensionList = new ArrayList<>();
                 List<ChartQuotaDTO> quotaList = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1197,6 +1197,8 @@ private StepMeta udjc(List<DatasetTableField> datasetTableFields, DatasourceType
             }
             if (StringUtils.isNotEmpty(charset)) {
                 tmp_code = tmp_code.replace("handleCharset", handleCharset.replace("Datasource_Charset", charset).replace("Target_Charset", targetCharset));
+            }else {
+                tmp_code = tmp_code.replace("handleCharset", "");
             }
         } else {
             Column_Fields = datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.joining(","));

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1196,11 +1196,11 @@ private StepMeta udjc(List<DatasetTableField> datasetTableFields, DatasourceType
                 targetCharset = jdbcConfiguration.getTargetCharset();
             }
             if (StringUtils.isNotEmpty(charset)) {
-                tmp_code = code.replace("handleCharset", handleCharset.replace("Datasource_Charset", charset).replace("Target_Charset", targetCharset));
+                tmp_code = tmp_code.replace("handleCharset", handleCharset.replace("Datasource_Charset", charset).replace("Target_Charset", targetCharset));
             }
         } else {
             Column_Fields = datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.joining(","));
-            tmp_code = code.replace("handleCharset", "");
+            tmp_code = tmp_code.replace("handleCharset", "");
         }
 
         if (datasourceType.equals(DatasourceTypes.excel)) {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1313,8 +1313,7 @@ private void deleteFile(String filePath) {
 
     private final static String handleCharset = "\tif(tmp != null){\n" +
             "  \t\t\ttry {\n" +
-            "            \t\tSystem.out.println(new String(tmp.getBytes(\"Datasource_Charset\"), \"Target_Charset\"));\n" +
-            "\t\t\t\tget(Fields.Out, filed).setValue(r, new String(tmp.getBytes(\"ISO-8859-1\"), \"GBK\"));\n" +
+            "\t\t\t\tget(Fields.Out, filed).setValue(r, new String(tmp.getBytes(\"Datasource_Charset\"), \"Target_Charset\"));\n" +
             "       \t\t}catch (Exception e){}\n" +
             "\t\t}";
 

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -221,6 +221,8 @@ private List<String[]> getDataResult(ResultSet rs, DatasourceRequest datasourceR
             JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
             if (StringUtils.isNotEmpty(jdbcConfiguration.getCharset()) && !jdbcConfiguration.getCharset().equalsIgnoreCase("Default")) {
                 charset = jdbcConfiguration.getCharset();
+            }
+            if (StringUtils.isNotEmpty(jdbcConfiguration.getTargetCharset()) && !jdbcConfiguration.getTargetCharset().equalsIgnoreCase("Default")) {
                 targetCharset = jdbcConfiguration.getTargetCharset();
             }
         }

File: backend/src/main/java/io/dataease/provider/ProviderFactory.java
Patch:
@@ -27,6 +27,7 @@ public void setApplicationContext(final ApplicationContext ctx) {
                 DataSourceType dataSourceType = new DataSourceType(d.getType(), d.getName(), false, d.getExtraParams(), d.getCalculationMode(), d.isJdbc());
                 if(dataSourceType.getType().equalsIgnoreCase("oracle")){
                     dataSourceType.setCharset(d.getCharset());
+                    dataSourceType.setTargetCharset(d.getTargetCharset());
                 }
                 beanFactory.registerSingleton(d.getType(), dataSourceType);
             }

File: backend/src/main/java/io/dataease/dto/dataset/SqlVariableDetails.java
Patch:
@@ -2,11 +2,13 @@
 
 import lombok.Data;
 
+import java.util.List;
+
 @Data
 public class SqlVariableDetails {
     private String variableName;
     private String alias;
-    private String type;
+    private List<String> type;
     private String details;
     private String defaultValue;
 

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.commons.exception.DEException;
 import io.dataease.commons.model.BaseTreeNode;
 import io.dataease.commons.utils.BeanUtils;
+import io.dataease.commons.utils.LogUtil;
 import io.dataease.commons.utils.TreeUtils;
 import io.dataease.dto.dataset.DeSortDTO;
 import io.dataease.plugins.common.base.domain.DatasetTable;
@@ -164,9 +165,9 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
             String tableName = "ds_" + datasetTable.getId().replaceAll("-", "_");
             datasourceRequest.setTable(tableName);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-            datasourceRequest.setQuery(qp.createQuerySQL(tableName, permissionFields, !needSort, null, customFilter));
+            datasourceRequest.setQuery(qp.createQuerySQL(tableName, permissionFields, !needSort, null, customFilter, deSortFields));
         }
-        System.out.println(datasourceRequest.getQuery());
+        LogUtil.info(datasourceRequest.getQuery());
         List<String[]> rows = datasourceProvider.getData(datasourceRequest);
         if (!needMapping) {
             List<Object> results = rows.stream().map(row -> row[0]).distinct().collect(Collectors.toList());

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.commons.exception.DEException;
 import io.dataease.commons.model.BaseTreeNode;
 import io.dataease.commons.utils.BeanUtils;
+import io.dataease.commons.utils.LogUtil;
 import io.dataease.commons.utils.TreeUtils;
 import io.dataease.dto.dataset.DeSortDTO;
 import io.dataease.plugins.common.base.domain.DatasetTable;
@@ -164,9 +165,9 @@ public List<Object> fieldValues(List<String> fieldIds, DeSortDTO sortDTO, Long u
             String tableName = "ds_" + datasetTable.getId().replaceAll("-", "_");
             datasourceRequest.setTable(tableName);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-            datasourceRequest.setQuery(qp.createQuerySQL(tableName, permissionFields, !needSort, null, customFilter));
+            datasourceRequest.setQuery(qp.createQuerySQL(tableName, permissionFields, !needSort, null, customFilter, deSortFields));
         }
-        System.out.println(datasourceRequest.getQuery());
+        LogUtil.info(datasourceRequest.getQuery());
         List<String[]> rows = datasourceProvider.getData(datasourceRequest);
         if (!needMapping) {
             List<Object> results = rows.stream().map(row -> row[0]).distinct().collect(Collectors.toList());

File: backend/src/main/java/io/dataease/service/sys/log/LogService.java
Patch:
@@ -264,7 +264,7 @@ public void exportExcel(BaseGridRequest request) throws Exception {
             //文件名称
             String fileName = "DataEase操作日志";
             String encodeFileName = URLEncoder.encode(fileName, "UTF-8");
-            response.setHeader("Content-disposition", "attachment;filename="+encodeFileName+".xlsx");
+            response.setHeader("Content-disposition", "attachment;filename="+encodeFileName+".xls");
             wb.write(outputStream);
             outputStream.flush();
             outputStream.close();

File: backend/src/main/java/io/dataease/service/sys/log/LogService.java
Patch:
@@ -264,7 +264,7 @@ public void exportExcel(BaseGridRequest request) throws Exception {
             //文件名称
             String fileName = "DataEase操作日志";
             String encodeFileName = URLEncoder.encode(fileName, "UTF-8");
-            response.setHeader("Content-disposition", "attachment;filename="+encodeFileName+".xlsx");
+            response.setHeader("Content-disposition", "attachment;filename="+encodeFileName+".xls");
             wb.write(outputStream);
             outputStream.flush();
             outputStream.close();

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -74,6 +74,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
 
         filterChainDefinitionMap.put("/api/auth/login", ANON);
+        filterChainDefinitionMap.put("/api/auth/logout", ANON);
         filterChainDefinitionMap.put("/api/auth/isPluginLoaded", ANON);
         filterChainDefinitionMap.put("/system/requestTimeOut", ANON);
         filterChainDefinitionMap.put("/api/auth/validateName", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -74,6 +74,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
 
         filterChainDefinitionMap.put("/api/auth/login", ANON);
+        filterChainDefinitionMap.put("/api/auth/logout", ANON);
         filterChainDefinitionMap.put("/api/auth/isPluginLoaded", ANON);
         filterChainDefinitionMap.put("/system/requestTimeOut", ANON);
         filterChainDefinitionMap.put("/api/auth/validateName", ANON);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -1501,6 +1501,9 @@ private String handleVariable(String sql, ChartExtRequest requestList) throws Ex
                 if (CollectionUtils.isEmpty(chartExtFilterRequest.getValue())) {
                     continue;
                 }
+                if(CollectionUtils.isEmpty(chartExtFilterRequest.getParameters())){
+                    continue;
+                }
                 if (chartExtFilterRequest.getValue().size() > 1) {
                     for (String parameter : chartExtFilterRequest.getParameters()) {
                         sql = sql.replace("${" + parameter + "}", String.join(",", chartExtFilterRequest.getValue()));

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -107,6 +107,7 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     break;
                 case SQL:
                     tableName = dataSetTableService.handleVariableDefaultValue(dataTableInfoDTO.getSql(), pluginViewSet.getSqlVariableDetails());
+                    tableName = "(" + tableName + ")";
                     break;
                 case CUSTOM:
                     List<DataSetTableUnionDTO> list = dataSetTableUnionService.listByTableId(dataTableInfoDTO.getList().get(0).getTableId());

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -107,6 +107,7 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
                     break;
                 case SQL:
                     tableName = dataSetTableService.handleVariableDefaultValue(dataTableInfoDTO.getSql(), pluginViewSet.getSqlVariableDetails());
+                    tableName = "(" + tableName + ")";
                     break;
                 case CUSTOM:
                     List<DataSetTableUnionDTO> list = dataSetTableUnionService.listByTableId(dataTableInfoDTO.getList().get(0).getTableId());

File: backend/src/main/java/io/dataease/auth/aop/DePermissionProxyHandler.java
Patch:
@@ -44,7 +44,6 @@ public Object proxyAround(ProceedingJoinPoint point) {
             return point.proceed(args);
         } catch (Throwable throwable) {
             LogUtil.error(throwable.getMessage(), throwable);
-            /* throw new RuntimeException(throwable.getMessage()); */
             DataEaseException.throwException(throwable);
         } finally {
             AuthUtils.cleanProxyUser();

File: backend/src/main/java/io/dataease/auth/aop/DePermissionProxyHandler.java
Patch:
@@ -44,7 +44,6 @@ public Object proxyAround(ProceedingJoinPoint point) {
             return point.proceed(args);
         } catch (Throwable throwable) {
             LogUtil.error(throwable.getMessage(), throwable);
-            /* throw new RuntimeException(throwable.getMessage()); */
             DataEaseException.throwException(throwable);
         } finally {
             AuthUtils.cleanProxyUser();

File: backend/src/main/java/io/dataease/controller/dataset/DatasetFunctionController.java
Patch:
@@ -3,7 +3,6 @@
 import com.github.xiaoymin.knife4j.annotations.ApiSupport;
 import io.dataease.auth.annotation.DePermission;
 import io.dataease.commons.constants.DePermissionType;
-import io.dataease.commons.constants.ResourceAuthLevel;
 import io.dataease.plugins.common.base.domain.DatasetTableFunction;
 import io.dataease.service.dataset.DatasetFunctionService;
 import io.swagger.annotations.Api;
@@ -28,7 +27,7 @@ public class DatasetFunctionController {
     @Resource
     private DatasetFunctionService datasetFunctionService;
 
-    @DePermission(type = DePermissionType.DATASET, level = ResourceAuthLevel.DATASET_LEVEL_MANAGE)
+    @DePermission(type = DePermissionType.DATASET)
     @ApiOperation("查询")
     @PostMapping("listByTableId/{tableId}")
     public List<DatasetTableFunction> listByTableId(@PathVariable String tableId) {

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -101,7 +101,7 @@ public PluginViewSQL getTableObj(PluginViewSet pluginViewSet) {
         if (ObjectUtils.isNotEmpty(pluginViewSet.getMode()) && 1 == pluginViewSet.getMode()) {
             tableName = TableUtils.tableName(pluginViewSet.getTabelId());
         }else {
-            switch (DatasetType.valueOf(pluginViewSet.getType())) {
+            switch (DatasetType.getEnumObjByKey(pluginViewSet.getType())) {
                 case DB:
                     tableName = dataTableInfoDTO.getTable();
                     break;

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -143,7 +143,8 @@ public List<DatasourceDTO> getDatasourceList(DatasourceUnionRequest request) thr
             }
 
             if(datasourceDTO.getType().equalsIgnoreCase(DatasourceTypes.mysql.toString())){
-                datasourceDTO.setConfiguration(datasourceDTO.getConfiguration());
+                MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasourceDTO.getConfiguration(), MysqlConfiguration.class);
+                datasourceDTO.setConfiguration(new Gson().toJson(mysqlConfiguration));
             }
             if (datasourceDTO.getType().equalsIgnoreCase(DatasourceTypes.api.toString())) {
                List<ApiDefinition> apiDefinitionList = new Gson().fromJson(datasourceDTO.getConfiguration(), new TypeToken<ArrayList<ApiDefinition>>() {}.getType());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1814,11 +1814,11 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                     }
                     datasetTableField.setSize(filed.getFieldSize());
                     datasetTableField.setChecked(true);
-                    datasetTableField.setColumnIndex(i);
                     datasetTableField.setLastSyncTime(syncTime);
                     datasetTableField.setExtField(0);
                     datasetTableField.setGroupType((datasetTableField.getDeType() < 2 || datasetTableField.getDeType() == 6) ? "d" : "q");
                 }
+                datasetTableField.setColumnIndex(i);
                 dataSetTableFieldsService.save(datasetTableField);
             }
             // delete 数据库中多余的字段

File: backend/src/main/java/io/dataease/service/system/SystemParameterService.java
Patch:
@@ -26,7 +26,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.*;
-import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicReference;
 
 import io.dataease.ext.*;

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -93,7 +93,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/downline", ANON);
         filterChainDefinitionMap.put("/common-files/**", ANON);
         filterChainDefinitionMap.put("/linkage/getPanelAllLinkageInfo/**", ANON);
-        /*filterChainDefinitionMap.put("/api/auth/logout", "logout");*/
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");

File: backend/src/main/java/io/dataease/controller/request/panel/PanelTemplateRequest.java
Patch:
@@ -17,6 +17,8 @@ public class PanelTemplateRequest extends PanelTemplateWithBLOBs {
     private String withBlobs="Y";
     @ApiModelProperty("操作类型")
     private String optType;
+    @ApiModelProperty("静态文件")
+    private String staticResource;
     @ApiModelProperty("是否及联")
     private Boolean withChildren = false;
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -5,6 +5,7 @@
 import com.google.gson.reflect.TypeToken;
 import io.dataease.auth.entity.SysUserEntity;
 import io.dataease.auth.service.AuthUserService;
+import io.dataease.commons.model.PluginViewSetImpl;
 import io.dataease.ext.*;
 import io.dataease.commons.constants.CommonConstants;
 import io.dataease.commons.constants.JdbcConstants;
@@ -1094,9 +1095,10 @@ public ChartViewDTO uniteViewResult(String sql, Map<String, Object> chartData, M
 
     private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fieldMap, List<ChartFieldCustomFilterDTO> customFilters, List<ChartExtFilterRequest> extFilters, Datasource ds, DatasetTable table, ChartViewDTO view) {
         PluginViewParam pluginViewParam = new PluginViewParam();
-        PluginViewSet pluginViewSet = BeanUtils.copyBean(new PluginViewSet(), table);
+        PluginViewSetImpl pluginViewSet = BeanUtils.copyBean(new PluginViewSetImpl(), table);
         pluginViewSet.setDsType(ds.getType());
         pluginViewSet.setTabelId(table.getId());
+        pluginViewSet.setDs(ds);
         PluginViewLimit pluginViewLimit = BeanUtils.copyBean(new PluginViewLimit(), view);
 
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -5,6 +5,7 @@
 import com.google.gson.reflect.TypeToken;
 import io.dataease.auth.entity.SysUserEntity;
 import io.dataease.auth.service.AuthUserService;
+import io.dataease.commons.model.PluginViewSetImpl;
 import io.dataease.ext.*;
 import io.dataease.commons.constants.CommonConstants;
 import io.dataease.commons.constants.JdbcConstants;
@@ -1094,9 +1095,10 @@ public ChartViewDTO uniteViewResult(String sql, Map<String, Object> chartData, M
 
     private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fieldMap, List<ChartFieldCustomFilterDTO> customFilters, List<ChartExtFilterRequest> extFilters, Datasource ds, DatasetTable table, ChartViewDTO view) {
         PluginViewParam pluginViewParam = new PluginViewParam();
-        PluginViewSet pluginViewSet = BeanUtils.copyBean(new PluginViewSet(), table);
+        PluginViewSetImpl pluginViewSet = BeanUtils.copyBean(new PluginViewSetImpl(), table);
         pluginViewSet.setDsType(ds.getType());
         pluginViewSet.setTabelId(table.getId());
+        pluginViewSet.setDs(ds);
         PluginViewLimit pluginViewLimit = BeanUtils.copyBean(new PluginViewLimit(), view);
 
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -5,6 +5,7 @@
 import com.google.gson.reflect.TypeToken;
 import io.dataease.auth.entity.SysUserEntity;
 import io.dataease.auth.service.AuthUserService;
+import io.dataease.commons.model.PluginViewSetImpl;
 import io.dataease.ext.*;
 import io.dataease.commons.constants.CommonConstants;
 import io.dataease.commons.constants.JdbcConstants;
@@ -1094,9 +1095,10 @@ public ChartViewDTO uniteViewResult(String sql, Map<String, Object> chartData, M
 
     private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fieldMap, List<ChartFieldCustomFilterDTO> customFilters, List<ChartExtFilterRequest> extFilters, Datasource ds, DatasetTable table, ChartViewDTO view) {
         PluginViewParam pluginViewParam = new PluginViewParam();
-        PluginViewSet pluginViewSet = BeanUtils.copyBean(new PluginViewSet(), table);
+        PluginViewSetImpl pluginViewSet = BeanUtils.copyBean(new PluginViewSetImpl(), table);
         pluginViewSet.setDsType(ds.getType());
         pluginViewSet.setTabelId(table.getId());
+        pluginViewSet.setDs(ds);
         PluginViewLimit pluginViewLimit = BeanUtils.copyBean(new PluginViewLimit(), view);
 
 

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.plugins.common.base.domain.Datasource;
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.CKConstants;
+import io.dataease.plugins.common.constants.Db2Constants;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
@@ -1059,6 +1060,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(CKConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(CKConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(CKConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -9,6 +9,7 @@
 import io.dataease.dto.datasource.Db2Configuration;
 import io.dataease.plugins.common.constants.Db2Constants;
 import io.dataease.plugins.common.constants.DeTypeConstants;
+import io.dataease.plugins.common.constants.EsSqlLConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1029,6 +1030,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(Db2Constants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(Db2Constants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(Db2Constants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.EsSqlLConstants;
+import io.dataease.plugins.common.constants.HiveConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1052,6 +1053,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(EsSqlLConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.HiveConstants;
+import io.dataease.plugins.common.constants.ImpalaConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1027,6 +1028,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(HiveConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(HiveConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(HiveConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.ImpalaConstants;
+import io.dataease.plugins.common.constants.MongoConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -995,6 +996,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(ImpalaConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(ImpalaConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(ImpalaConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -936,6 +936,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(MongoConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(MongoConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(MongoConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -944,6 +944,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(PgConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(RedshiftConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(PgConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.domain.Datasource;
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
+import io.dataease.plugins.common.constants.ImpalaConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.constants.SqlServerSQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
@@ -1070,6 +1071,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(SqlServerSQLConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(SqlServerSQLConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(SqlServerSQLConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.plugins.common.base.domain.Datasource;
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.CKConstants;
+import io.dataease.plugins.common.constants.Db2Constants;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
@@ -1059,6 +1060,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(CKConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(CKConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(CKConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -9,6 +9,7 @@
 import io.dataease.dto.datasource.Db2Configuration;
 import io.dataease.plugins.common.constants.Db2Constants;
 import io.dataease.plugins.common.constants.DeTypeConstants;
+import io.dataease.plugins.common.constants.EsSqlLConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1029,6 +1030,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(Db2Constants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(Db2Constants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(Db2Constants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.EsSqlLConstants;
+import io.dataease.plugins.common.constants.HiveConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1052,6 +1053,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(EsSqlLConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.HiveConstants;
+import io.dataease.plugins.common.constants.ImpalaConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1027,6 +1028,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(HiveConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(HiveConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(HiveConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.ImpalaConstants;
+import io.dataease.plugins.common.constants.MongoConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -995,6 +996,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(ImpalaConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(ImpalaConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(ImpalaConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -936,6 +936,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(MongoConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(MongoConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(MongoConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -944,6 +944,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(PgConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(RedshiftConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(PgConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.domain.Datasource;
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
+import io.dataease.plugins.common.constants.ImpalaConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.constants.SqlServerSQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
@@ -1070,6 +1071,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(SqlServerSQLConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(SqlServerSQLConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(SqlServerSQLConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.plugins.common.base.domain.Datasource;
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.CKConstants;
+import io.dataease.plugins.common.constants.Db2Constants;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
@@ -1059,6 +1060,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(CKConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(CKConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(CKConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -9,6 +9,7 @@
 import io.dataease.dto.datasource.Db2Configuration;
 import io.dataease.plugins.common.constants.Db2Constants;
 import io.dataease.plugins.common.constants.DeTypeConstants;
+import io.dataease.plugins.common.constants.EsSqlLConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1029,6 +1030,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(Db2Constants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(Db2Constants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(Db2Constants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.EsSqlLConstants;
+import io.dataease.plugins.common.constants.HiveConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1052,6 +1053,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(EsSqlLConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.HiveConstants;
+import io.dataease.plugins.common.constants.ImpalaConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -1027,6 +1028,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(HiveConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(HiveConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(HiveConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
 import io.dataease.plugins.common.constants.ImpalaConstants;
+import io.dataease.plugins.common.constants.MongoConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
 import io.dataease.plugins.common.dto.chart.ChartFieldCustomFilterDTO;
@@ -995,6 +996,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(ImpalaConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(ImpalaConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(ImpalaConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -936,6 +936,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(MongoConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(MongoConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(MongoConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -944,6 +944,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(PgConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(RedshiftConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(PgConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.plugins.common.base.domain.Datasource;
 import io.dataease.plugins.common.base.mapper.DatasetTableFieldMapper;
 import io.dataease.plugins.common.constants.DeTypeConstants;
+import io.dataease.plugins.common.constants.ImpalaConstants;
 import io.dataease.plugins.common.constants.SQLConstants;
 import io.dataease.plugins.common.constants.SqlServerSQLConstants;
 import io.dataease.plugins.common.dto.chart.ChartCustomFilterItemDTO;
@@ -1070,6 +1071,8 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
         } else if (SQLConstants.DIMENSION_TYPE.contains(y.getDeType())) {
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "count_distinct")) {
                 fieldName = String.format(SqlServerSQLConstants.AGG_FIELD, "COUNT", "DISTINCT " + originField);
+            } else if (StringUtils.equalsIgnoreCase(y.getSummary(), "group_concat")) {
+                fieldName = String.format(SqlServerSQLConstants.GROUP_CONCAT, originField);
             } else {
                 fieldName = String.format(SqlServerSQLConstants.AGG_FIELD, y.getSummary(), originField);
             }

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -76,7 +76,7 @@ public List<Object> fieldValues(List<String> fieldIds, Long userId, Boolean user
             fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), userId);
             Map<String, DatasetTableField> fieldMap = fields.stream().collect(Collectors.toMap(DatasetTableField::getId, node -> node));
             permissionFields = fieldIds.stream().map(fieldMap::get).collect(Collectors.toList());
-            if (CollectionUtils.isEmpty(permissionFields)) {
+            if (CollectionUtils.isEmpty(permissionFields) || permissionFields.get(0) == null) {
                 return new ArrayList<>();
             }
             if (CollectionUtils.isNotEmpty(desensitizationList) && desensitizationList.contains(field.getDataeaseName())) {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -787,7 +787,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             data = datasourceProvider.getData(datasourceRequest);
 
             Map<String, Object> mapChart = pluginViewResult(pluginViewParam, view, data, isDrill);
-            Map<String, Object> mapTableNormal = ChartDataBuild.transTableNormal(xAxis, yAxis, view, data, extStack, desensitizationList);
+            Map<String, Object> mapTableNormal = ChartDataBuild.transTableNormal(fieldMap, view, data, desensitizationList);
 
             return uniteViewResult(datasourceRequest.getQuery(), mapChart, mapTableNormal, view, isDrill, drillFilters);
             // 如果是插件到此结束

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -787,7 +787,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             data = datasourceProvider.getData(datasourceRequest);
 
             Map<String, Object> mapChart = pluginViewResult(pluginViewParam, view, data, isDrill);
-            Map<String, Object> mapTableNormal = ChartDataBuild.transTableNormal(xAxis, yAxis, view, data, extStack, desensitizationList);
+            Map<String, Object> mapTableNormal = ChartDataBuild.transTableNormal(fieldMap, view, data, desensitizationList);
 
             return uniteViewResult(datasourceRequest.getQuery(), mapChart, mapTableNormal, view, isDrill, drillFilters);
             // 如果是插件到此结束

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -787,7 +787,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             data = datasourceProvider.getData(datasourceRequest);
 
             Map<String, Object> mapChart = pluginViewResult(pluginViewParam, view, data, isDrill);
-            Map<String, Object> mapTableNormal = ChartDataBuild.transTableNormal(xAxis, yAxis, view, data, extStack, desensitizationList);
+            Map<String, Object> mapTableNormal = ChartDataBuild.transTableNormal(fieldMap, view, data, desensitizationList);
 
             return uniteViewResult(datasourceRequest.getQuery(), mapChart, mapTableNormal, view, isDrill, drillFilters);
             // 如果是插件到此结束

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -111,7 +111,7 @@ public List<TableField> getTableFileds(DatasourceRequest datasourceRequest) thro
         } catch (SQLException e) {
             DataEaseException.throwException(e);
         } catch (Exception e) {
-            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase("ds_doris")) {
+            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase("ds_doris") || datasourceRequest.getDatasource().getType().equalsIgnoreCase("StarRocks")) {
                 datasourceRequest.setQuery("select * from " + datasourceRequest.getTable());
                 return fetchResultField(datasourceRequest);
             } else {

File: backend/src/main/java/io/dataease/service/dataset/DataSetFieldService.java
Patch:
@@ -5,7 +5,7 @@
 
 public interface DataSetFieldService {
 
-    List<Object> fieldValues(String fieldId, Long userId, Boolean userPermissions) throws Exception;
+    List<Object> fieldValues(String fieldId, Long userId, Boolean userPermissions, Boolean rowAndColumnMgm) throws Exception;
 
-    List<Object> fieldValues(List<String> fieldIds, Long userId, Boolean userPermissions, Boolean needMapping) throws Exception;
+    List<Object> fieldValues(List<String> fieldIds, Long userId, Boolean userPermissions, Boolean needMapping, Boolean rowAndColumnMgm) throws Exception;
 }

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -61,7 +61,7 @@ public Collection types() throws Exception{
 
     @ApiIgnore
     @PostMapping("/validate")
-    public ResultHolder validate(@RequestBody DatasourceDTO datasource) throws Exception {
+    public ResultHolder validate(@RequestBody Datasource datasource) throws Exception {
         return datasourceService.validate(datasource);
     }
 

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinition.java
Patch:
@@ -6,6 +6,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 @Data
 public class ApiDefinition {
@@ -14,8 +15,8 @@ public class ApiDefinition {
     private String url;
     private String method = "GET";
     private List<DatasetTableField> fields;
-    private String request;
+    private ApiDefinitionRequest request;
     private String dataPath;
     private String status;
-    private List<JsonObject> datas = new ArrayList<>();
+    private List<Map<String,String>> datas = new ArrayList<>();
 }

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -62,6 +62,7 @@ public Integer transFieldType(String field) {
             case "MEDIUMINT":
             case "INTEGER":
             case "BIGINT":
+            case "LONG":
                 return 2;// 整型
             case "FLOAT":
             case "DOUBLE":

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -63,6 +63,7 @@ public Integer transFieldType(String field) {
             case "MEDIUMINT":
             case "INTEGER":
             case "BIGINT":
+            case "LONG":
                 return 2;// 整型
             case "FLOAT":
             case "DOUBLE":

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1614,6 +1614,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                                 TableUtils.fieldName(field.getTableId() + "_" + field.getDataeaseName()),
                                 tableField.getFieldName())) {
                             tableField.setRemarks(field.getName());
+                            tableField.setFieldType(field.getType());
                             break;
                         }
                     }

File: backend/src/main/java/io/dataease/plugins/server/PluginCommonServer.java
Patch:
@@ -126,7 +126,8 @@ public void staticInfo(@PathVariable("name") String name, @PathVariable("suffix"
                         os.write(buffer, 0, i);
                         i = bis.read(buffer);
                     }
-                    response.setContentType("image/svg+xml");
+                    if (suffix.indexOf("svg") != -1)
+                        response.setContentType("image/svg+xml");
                     os.flush();
                 }catch (Exception e) {
                     e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/PluginCommonServer.java
Patch:
@@ -126,7 +126,8 @@ public void staticInfo(@PathVariable("name") String name, @PathVariable("suffix"
                         os.write(buffer, 0, i);
                         i = bis.read(buffer);
                     }
-                    response.setContentType("image/svg+xml");
+                    if (suffix.indexOf("svg") != -1)
+                        response.setContentType("image/svg+xml");
                     os.flush();
                 }catch (Exception e) {
                     e.printStackTrace();

File: backend/src/main/java/io/dataease/plugins/server/PluginCommonServer.java
Patch:
@@ -126,7 +126,8 @@ public void staticInfo(@PathVariable("name") String name, @PathVariable("suffix"
                         os.write(buffer, 0, i);
                         i = bis.read(buffer);
                     }
-                    response.setContentType("image/svg+xml");
+                    if (suffix.indexOf("svg") != -1)
+                        response.setContentType("image/svg+xml");
                     os.flush();
                 }catch (Exception e) {
                     e.printStackTrace();

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -26,6 +26,7 @@
 import io.swagger.annotations.ApiImplicitParams;
 import io.swagger.annotations.ApiOperation;
 
+import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
@@ -148,7 +149,7 @@ public void updatePersonInfo(@RequestBody SysUserCreateRequest request) {
             DataEaseException.throwException(Translator.get("i18n_wrong_content"));
         }
         // 再次验证，匹配格式
-        if (!request.getPhone().isEmpty() && !request.getPhone().matches("^1[3|4|5|7|8][0-9]{9}$")) {
+        if (StringUtils.isNotBlank(request.getPhone()) && !request.getPhone().matches("^1[3|4|5|7|8][0-9]{9}$")) {
             DataEaseException.throwException(Translator.get("i18n_wrong_tel"));
         }
         if (!request.getEmail().matches("^[a-zA-Z0-9_._-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$")) {

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -219,6 +219,8 @@ public int updatePersonInfo(SysUserCreateRequest request) {
     @CacheEvict(value = AuthConstants.USER_CACHE_NAME, key = "'user' + #request.userId")
     @Transactional
     public int updatePersonBasicInfo(SysUserCreateRequest request) {
+        checkEmail(request);
+        checkNickName(request);
         SysUser user = new SysUser();
         long now = System.currentTimeMillis();
         user.setUserId(request.getUserId());

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -26,6 +26,7 @@
 import io.swagger.annotations.ApiImplicitParams;
 import io.swagger.annotations.ApiOperation;
 
+import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
@@ -148,7 +149,7 @@ public void updatePersonInfo(@RequestBody SysUserCreateRequest request) {
             DataEaseException.throwException(Translator.get("i18n_wrong_content"));
         }
         // 再次验证，匹配格式
-        if (!request.getPhone().isEmpty() && !request.getPhone().matches("^1[3|4|5|7|8][0-9]{9}$")) {
+        if (StringUtils.isNotBlank(request.getPhone()) && !request.getPhone().matches("^1[3|4|5|7|8][0-9]{9}$")) {
             DataEaseException.throwException(Translator.get("i18n_wrong_tel"));
         }
         if (!request.getEmail().matches("^[a-zA-Z0-9_._-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$")) {

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -219,6 +219,8 @@ public int updatePersonInfo(SysUserCreateRequest request) {
     @CacheEvict(value = AuthConstants.USER_CACHE_NAME, key = "'user' + #request.userId")
     @Transactional
     public int updatePersonBasicInfo(SysUserCreateRequest request) {
+        checkEmail(request);
+        checkNickName(request);
         SysUser user = new SysUser();
         long now = System.currentTimeMillis();
         user.setUserId(request.getUserId());

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -26,6 +26,7 @@
 import io.swagger.annotations.ApiImplicitParams;
 import io.swagger.annotations.ApiOperation;
 
+import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authz.annotation.RequiresPermissions;
 import org.apache.shiro.authz.annotation.RequiresRoles;
 import org.springframework.web.bind.annotation.*;
@@ -148,7 +149,7 @@ public void updatePersonInfo(@RequestBody SysUserCreateRequest request) {
             DataEaseException.throwException(Translator.get("i18n_wrong_content"));
         }
         // 再次验证，匹配格式
-        if (!request.getPhone().isEmpty() && !request.getPhone().matches("^1[3|4|5|7|8][0-9]{9}$")) {
+        if (StringUtils.isNotBlank(request.getPhone()) && !request.getPhone().matches("^1[3|4|5|7|8][0-9]{9}$")) {
             DataEaseException.throwException(Translator.get("i18n_wrong_tel"));
         }
         if (!request.getEmail().matches("^[a-zA-Z0-9_._-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$")) {

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -219,6 +219,8 @@ public int updatePersonInfo(SysUserCreateRequest request) {
     @CacheEvict(value = AuthConstants.USER_CACHE_NAME, key = "'user' + #request.userId")
     @Transactional
     public int updatePersonBasicInfo(SysUserCreateRequest request) {
+        checkEmail(request);
+        checkNickName(request);
         SysUser user = new SysUser();
         long now = System.currentTimeMillis();
         user.setUserId(request.getUserId());

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -61,7 +61,7 @@ public Collection types() throws Exception{
 
     @ApiIgnore
     @PostMapping("/validate")
-    public ResultHolder validate(@RequestBody DatasourceDTO datasource) throws Exception {
+    public ResultHolder validate(@RequestBody Datasource datasource) throws Exception {
         return datasourceService.validate(datasource);
     }
 

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinition.java
Patch:
@@ -6,6 +6,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 @Data
 public class ApiDefinition {
@@ -14,8 +15,8 @@ public class ApiDefinition {
     private String url;
     private String method = "GET";
     private List<DatasetTableField> fields;
-    private String request;
+    private ApiDefinitionRequest request;
     private String dataPath;
     private String status;
-    private List<JsonObject> datas = new ArrayList<>();
+    private List<Map<String,String>> datas = new ArrayList<>();
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -53,6 +53,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.multipart.MultipartFile;
 
@@ -146,6 +147,7 @@ private void extractData(DataSetTableRequest datasetTable) throws Exception {
         }
     }
 
+    @Transactional(propagation = Propagation.NOT_SUPPORTED)
     @DeCleaner(value = DePermissionType.DATASET, key = "sceneId")
     public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
         List<String> datasetIdList = new ArrayList<>();
@@ -357,7 +359,7 @@ public List<DataSetTableDTO> list(DataSetTableRequest dataSetTableRequest) {
     public List<DatasetTable> list(List<String> datasetIds) {
         DatasetTableExample example = new DatasetTableExample();
         example.createCriteria().andIdIn(datasetIds);
-        return datasetTableMapper.selectByExample(example);
+        return datasetTableMapper.selectByExampleWithBLOBs(example);
     }
 
     public List<DataSetTableDTO> listAndGroup(DataSetTableRequest dataSetTableRequest) {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -432,7 +432,8 @@ private void extractData(DatasetTable datasetTable, Datasource datasource, List<
     }
 
     private void extractApiData(DatasetTable datasetTable, Datasource datasource, List<DatasetTableField> datasetTableFields, String extractType) throws Exception {
-        List<ApiDefinition> lists = new Gson().fromJson(datasource.getConfiguration(), new TypeToken<ArrayList<ApiDefinition>>(){}.getType());
+        List<ApiDefinition> lists = new Gson().fromJson(datasource.getConfiguration(), new TypeToken<ArrayList<ApiDefinition>>() {
+        }.getType());
         lists = lists.stream().filter(item -> item.getName().equalsIgnoreCase(new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getTable())).collect(Collectors.toList());
         if (CollectionUtils.isEmpty(lists)) {
             throw new Exception("未找到API数据表");

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -53,6 +53,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Propagation;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.multipart.MultipartFile;
 
@@ -146,6 +147,7 @@ private void extractData(DataSetTableRequest datasetTable) throws Exception {
         }
     }
 
+    @Transactional(propagation = Propagation.NOT_SUPPORTED)
     @DeCleaner(value = DePermissionType.DATASET, key = "sceneId")
     public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
         List<String> datasetIdList = new ArrayList<>();
@@ -357,7 +359,7 @@ public List<DataSetTableDTO> list(DataSetTableRequest dataSetTableRequest) {
     public List<DatasetTable> list(List<String> datasetIds) {
         DatasetTableExample example = new DatasetTableExample();
         example.createCriteria().andIdIn(datasetIds);
-        return datasetTableMapper.selectByExample(example);
+        return datasetTableMapper.selectByExampleWithBLOBs(example);
     }
 
     public List<DataSetTableDTO> listAndGroup(DataSetTableRequest dataSetTableRequest) {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -432,7 +432,8 @@ private void extractData(DatasetTable datasetTable, Datasource datasource, List<
     }
 
     private void extractApiData(DatasetTable datasetTable, Datasource datasource, List<DatasetTableField> datasetTableFields, String extractType) throws Exception {
-        List<ApiDefinition> lists = new Gson().fromJson(datasource.getConfiguration(), new TypeToken<ArrayList<ApiDefinition>>(){}.getType());
+        List<ApiDefinition> lists = new Gson().fromJson(datasource.getConfiguration(), new TypeToken<ArrayList<ApiDefinition>>() {
+        }.getType());
         lists = lists.stream().filter(item -> item.getName().equalsIgnoreCase(new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getTable())).collect(Collectors.toList());
         if (CollectionUtils.isEmpty(lists)) {
             throw new Exception("未找到API数据表");

File: backend/src/main/java/io/dataease/auth/aop/DeLogAnnotationHandler.java
Patch:
@@ -44,7 +44,6 @@ public void init() {
         befores.add(SysLogConstants.OPERATE_TYPE.DELETE.getValue());
         befores.add(SysLogConstants.OPERATE_TYPE.UNSHARE.getValue());
         befores.add(SysLogConstants.OPERATE_TYPE.UNAUTHORIZE.getValue());
-        befores.add(SysLogConstants.OPERATE_TYPE.UPLOADFILE.getValue());
     }
 
     private SysLogDTO exec(JoinPoint point, DeLog deLog) throws Exception{

File: backend/src/main/java/io/dataease/controller/sys/SysLogController.java
Patch:
@@ -17,7 +17,6 @@
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
-import javax.servlet.http.HttpServletResponse;
 import java.util.List;
 
 @RestController
@@ -51,7 +50,8 @@ public List<FolderItem> types() {
 
     @ApiOperation("导出操作日志")
     @PostMapping("/export")
-    public void export(HttpServletResponse response) throws Exception{
-        logService.exportExcel(response);
+    @ApiImplicitParam(name = "request", value = "查询条件", required = true)
+    public void export(@RequestBody BaseGridRequest request) throws Exception{
+        logService.exportExcel(request);
     }
 }

File: backend/src/main/java/io/dataease/controller/sys/SysLogController.java
Patch:
@@ -17,7 +17,6 @@
 import org.springframework.web.bind.annotation.*;
 
 import javax.annotation.Resource;
-import javax.servlet.http.HttpServletResponse;
 import java.util.List;
 
 @RestController
@@ -51,7 +50,8 @@ public List<FolderItem> types() {
 
     @ApiOperation("导出操作日志")
     @PostMapping("/export")
-    public void export(HttpServletResponse response) throws Exception{
-        logService.exportExcel(response);
+    @ApiImplicitParam(name = "request", value = "查询条件", required = true)
+    public void export(@RequestBody BaseGridRequest request) throws Exception{
+        logService.exportExcel(request);
     }
 }

File: backend/src/main/java/io/dataease/commons/constants/SysLogConstants.java
Patch:
@@ -55,7 +55,8 @@ public enum SOURCE_TYPE {
         DEPT(7, "SOURCE_TYPE_DEPT"),
         ROLE(8, "SOURCE_TYPE_ROLE"),
         DRIVER(9, "SOURCE_TYPE_DRIVER"),
-        DRIVER_FILE(10, "SOURCE_TYPE_DRIVER_FILE");
+        DRIVER_FILE(10, "SOURCE_TYPE_DRIVER_FILE"),
+        MENU(11, "SOURCE_TYPE_MENU");
         private Integer value;
         private String name;
 

File: backend/src/main/java/io/dataease/plugins/server/XAuthServer.java
Patch:
@@ -109,7 +109,7 @@ private SysLogConstants.SOURCE_TYPE sourceType(String sourceType) {
             return SysLogConstants.SOURCE_TYPE.DATASOURCE;
         }
         if (StringUtils.equals("menu", sourceType)) {
-            return SysLogConstants.SOURCE_TYPE.DATASOURCE;
+            return SysLogConstants.SOURCE_TYPE.MENU;
         }
         if (StringUtils.equals("dataset", sourceType)) {
             return SysLogConstants.SOURCE_TYPE.DATASET;

File: backend/src/main/java/io/dataease/service/sys/log/LogManager.java
Patch:
@@ -100,6 +100,9 @@ private LogTypeItem parentIds(String id, Integer value) {
             case 7:
                 typeValue = "dept";
                 break;
+            case 11:
+                typeValue = "menu";
+                break;
             default:
                 break;
         }

File: backend/src/main/java/io/dataease/controller/datasource/DatasourceController.java
Patch:
@@ -88,7 +88,7 @@ public List<DatasourceDTO> getDatasourceListByType(@PathVariable String type) th
     }
 
     @RequiresPermissions("datasource:read")
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_MANAGE)
+    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_MANAGE, value = "id")
     @ApiOperation("删除数据源")
     @PostMapping("/delete")
     @DeLog(

File: backend/src/main/java/io/dataease/controller/datasource/DriverMgmController.java
Patch:
@@ -45,7 +45,7 @@ public List<DriverDTO> listDeDriver() throws Exception{
             value = "id"
     )
     public void delete(@RequestBody DeDriver deDriver) throws Exception{
-        driverService.delete(deDriver.getId());
+        driverService.delete(deDriver);
     }
 
     @RequiresPermissions("datasource:read")

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -449,6 +449,9 @@ public Connection getConnection(DatasourceRequest datasourceRequest) throws Exce
             driverClassName = defaultDriver;
             jdbcClassLoader = extendedJdbcClassLoader;
         } else {
+            if(deDriver == null){
+                deDriver = deDriverMapper.selectByPrimaryKey(customDriver);
+            }
             driverClassName = deDriver.getDriverClass();
             jdbcClassLoader = getCustomJdbcClassLoader(deDriver);
         }

File: backend/src/main/java/io/dataease/controller/request/dataset/DataSetTableRequest.java
Patch:
@@ -6,6 +6,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Getter;
 import lombok.Setter;
+import springfox.documentation.annotations.ApiIgnore;
 
 import java.util.List;
 
@@ -38,4 +39,5 @@ public class DataSetTableRequest extends DatasetTable {
     private List<ExcelSheetData> sheets;
     @ApiModelProperty("是否合并sheet")
     private boolean mergeSheet = false;
+    private boolean previewForTask = false;
 }

File: backend/src/main/java/io/dataease/plugins/config/LoadjarUtil.java
Patch:
@@ -26,8 +26,7 @@ public class LoadjarUtil {
     public List<?> loadJar(String jarPath, MyPlugin myPlugin)  throws Exception{
         File jar = new File(jarPath);
         URI uri = jar.toURI();
-        String moduleName = jarPath.substring(jarPath.lastIndexOf("/")+1,jarPath.lastIndexOf("."));
-
+        String moduleName = myPlugin.getModuleName() + "-" + myPlugin.getVersion();
 
         if(ClassloaderResponsity.getInstance().containsClassLoader(moduleName)){
             ClassloaderResponsity.getInstance().removeClassLoader(moduleName);

File: backend/src/main/java/io/dataease/commons/constants/RedisConstants.java
Patch:
@@ -8,5 +8,7 @@ public class RedisConstants {
 
     public static final String WEBSOCKET_MSG = "wsMsgService";
 
+    public static final String DS_REDIS_TOPIC = "ds_redis_topic";
+
 
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -42,7 +42,8 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
         filterChainDefinitionMap.put("/board/**", ANON);
-        filterChainDefinitionMap.put("/websocket/**", "anon");
+        filterChainDefinitionMap.put("/websocket/**", ANON);
+        filterChainDefinitionMap.put("/system/defaultLoginType", ANON);
 
         // 获取主题信息
         filterChainDefinitionMap.put("/plugin/theme/themes", ANON);

File: backend/src/main/java/io/dataease/commons/constants/ParamConstants.java
Patch:
@@ -110,6 +110,7 @@ public String getValue() {
     enum BASIC implements ParamConstants {
         FRONT_TIME_OUT("basic.frontTimeOut"),
         MSG_TIME_OUT("basic.msgTimeOut"),
+        DEFAULT_LOGIN_TYPE("basic.loginType"),
         OPEN_HOME_PAGE("ui.openHomePage");
 
         private String value;

File: backend/src/main/java/io/dataease/controller/sys/response/BasicInfo.java
Patch:
@@ -14,5 +14,7 @@ public class BasicInfo implements Serializable {
     private String msgTimeOut;
     @ApiModelProperty("显示首页")
     private String openHomePage;
+    @ApiModelProperty("默认登录方式")
+    private Integer loginType = 0;
 
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1509,7 +1509,7 @@ public List<DatasetTableField> saveExcelTableField(String datasetTableId, List<T
 
     public void saveTableField(DatasetTable datasetTable) throws Exception {
         Datasource ds = datasourceMapper.selectByPrimaryKey(datasetTable.getDataSourceId());
-        if (ObjectUtils.isEmpty(ds)) {
+        if (ObjectUtils.isEmpty(ds) && !datasetTable.getType().equalsIgnoreCase("union")) {
             throw new RuntimeException(Translator.get("i18n_datasource_delete"));
         }
         DataSetTableRequest dataSetTableRequest = new DataSetTableRequest();

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsReader.java
Patch:
@@ -344,7 +344,9 @@ public void processRecord(Record record) {
                     if(obtainedNum != null && totalSheets.stream().filter(s->s.getExcelLable().equalsIgnoreCase(sheetName)).collect(Collectors.toList()).get(0).getData().size() < obtainedNum){
                         totalSheets.stream().filter(s->s.getExcelLable().equalsIgnoreCase(sheetName)).collect(Collectors.toList()).get(0).getData().add(tmp);
                     }
-
+                    if(obtainedNum == null){
+                        totalSheets.stream().filter(s->s.getExcelLable().equalsIgnoreCase(sheetName)).collect(Collectors.toList()).get(0).getData().add(tmp);
+                    }
                     totalRows++;
                 }
             }

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskLogController.java
Patch:
@@ -35,7 +35,7 @@ public class DataSetTableTaskLogController {
     @ApiOperation("保存")
     @PostMapping("save")
     public DatasetTableTaskLog save(@RequestBody DatasetTableTaskLog datasetTableTaskLog) {
-        return dataSetTableTaskLogService.save(datasetTableTaskLog);
+        return dataSetTableTaskLogService.save(datasetTableTaskLog, true);
     }
 
     @ApiOperation("分页查询")

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskLogService.java
Patch:
@@ -33,8 +33,8 @@ public class DataSetTableTaskLogService {
     @Resource
     private DatasetTableTaskMapper datasetTableTaskMapper;
 
-    public DatasetTableTaskLog save(DatasetTableTaskLog datasetTableTaskLog) {
-        if(datasetTableTaskMapper.selectByPrimaryKey(datasetTableTaskLog.getTaskId()) == null){
+    public DatasetTableTaskLog save(DatasetTableTaskLog datasetTableTaskLog, Boolean hasTask) {
+        if(hasTask && datasetTableTaskMapper.selectByPrimaryKey(datasetTableTaskLog.getTaskId()) == null){
             return datasetTableTaskLog;
         }
         if (StringUtils.isEmpty(datasetTableTaskLog.getId())) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -137,7 +137,7 @@ private synchronized boolean existSyncTask(String datasetTableId, String dataset
             datasetTableTaskLog.setStatus(JobStatus.Underway.name());
             datasetTableTaskLog.setStartTime(startTime);
             datasetTableTaskLog.setTriggerType(TriggerType.Custom.name());
-            dataSetTableTaskLogService.save(datasetTableTaskLog);
+            dataSetTableTaskLogService.save(datasetTableTaskLog, true);
         }
         return existSyncTask;
     }

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -473,7 +473,7 @@ private void extractApiData(DatasetTable datasetTable, Datasource datasource, Li
                 break;
             default:
                 dataFile = root_path + TableUtils.addName(TableUtils.tableName(datasetTable.getId())) + "." + extention;
-                script = String.format(streamLoadScript, dorisConfiguration.getUsername(), dorisConfiguration.getPassword(), System.currentTimeMillis(), separator, columns, "APPEND", dataFile, dorisConfiguration.getHost(), dorisConfiguration.getHttpPort(), dorisConfiguration.getDataBase(), TableUtils.tableName(datasetTable.getId()));
+                script = String.format(streamLoadScript, dorisConfiguration.getUsername(), dorisConfiguration.getPassword(), System.currentTimeMillis(), separator, columns, "APPEND", dataFile, dorisConfiguration.getHost(), dorisConfiguration.getHttpPort(), dorisConfiguration.getDataBase(), TableUtils.tableName(datasetTable.getId()), dataFile);
                 break;
         }
 

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -469,7 +469,7 @@ private void extractApiData(DatasetTable datasetTable, Datasource datasource, Li
         switch (extractType) {
             case "all_scope":
                 dataFile = root_path + TableUtils.tmpName(TableUtils.tableName(datasetTable.getId())) + "." + extention;
-                script = String.format(streamLoadScript, dorisConfiguration.getUsername(), dorisConfiguration.getPassword(), System.currentTimeMillis(), separator, columns, "APPEND", dataFile, dorisConfiguration.getHost(), dorisConfiguration.getHttpPort(), dorisConfiguration.getDataBase(), TableUtils.tmpName(TableUtils.tableName(datasetTable.getId())));
+                script = String.format(streamLoadScript, dorisConfiguration.getUsername(), dorisConfiguration.getPassword(), System.currentTimeMillis(), separator, columns, "APPEND", dataFile, dorisConfiguration.getHost(), dorisConfiguration.getHttpPort(), dorisConfiguration.getDataBase(), TableUtils.tmpName(TableUtils.tableName(datasetTable.getId())), dataFile);
                 break;
             default:
                 dataFile = root_path + TableUtils.addName(TableUtils.tableName(datasetTable.getId())) + "." + extention;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1509,6 +1509,9 @@ public List<DatasetTableField> saveExcelTableField(String datasetTableId, List<T
 
     public void saveTableField(DatasetTable datasetTable) throws Exception {
         Datasource ds = datasourceMapper.selectByPrimaryKey(datasetTable.getDataSourceId());
+        if (ObjectUtils.isEmpty(ds)) {
+            throw new RuntimeException(Translator.get("i18n_datasource_delete"));
+        }
         DataSetTableRequest dataSetTableRequest = new DataSetTableRequest();
         BeanUtils.copyBean(dataSetTableRequest, datasetTable);
 

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -107,7 +107,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     if (f.getDeType() == 2 || f.getDeType() == 3) {
                         fieldName = String.format(MySQLConstants.UNIX_TIMESTAMP, originField) + "*1000";
                     } else {
-                        fieldName = originField;
+                        fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                     }
                 } else if (f.getDeExtractType() == 0) {
                     if (f.getDeType() == 2) {

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -95,6 +95,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
+        filterChainDefinitionMap.put("/panel/group/exportDetails", ANON);
         filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
 
         filterChainDefinitionMap.put("/**", "authc");

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -95,6 +95,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
+        filterChainDefinitionMap.put("/panel/group/exportDetails", ANON);
         filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
 
         filterChainDefinitionMap.put("/**", "authc");

File: backend/src/main/java/io/dataease/auth/service/ExtAuthService.java
Patch:
@@ -28,5 +28,7 @@ public interface ExtAuthService {
     void clearDeptResource(Long deptId);
     void clearRoleResource(Long roleId);
 
+    List<String> parentResource(String resourceId, String type);
+
 
 }

File: backend/src/main/java/io/dataease/ext/ExtAuthMapper.java
Patch:
@@ -27,4 +27,6 @@ public interface ExtAuthMapper {
     List<AuthItem> dataSourceIdByDept(String deptId);
     List<AuthItem> dataSetIdByDept(String deptId);
     List<AuthItem> panelIdByDept(String deptId);
+
+    String parentResource(@Param("resourceId") String resourceId, @Param("type") String type);
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -44,7 +44,7 @@ public class DataSetGroupService {
     @Resource
     private SysAuthService sysAuthService;
 
-    @DeCleaner(DePermissionType.DATASET)
+    @DeCleaner(value = DePermissionType.DATASET, key = "pid")
     public DataSetGroupDTO save(DatasetGroup datasetGroup) throws Exception {
         checkName(datasetGroup);
         if (StringUtils.isEmpty(datasetGroup.getId())) {

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -112,7 +112,7 @@ public List<PanelGroupDTO> defaultTree(PanelGroupRequest panelGroupRequest) {
         return TreeUtils.mergeTree(panelGroupDTOList, "default_panel");
     }
 
-    @DeCleaner(DePermissionType.PANEL)
+    @DeCleaner(value = DePermissionType.PANEL, key = "pid")
     public PanelGroup saveOrUpdate(PanelGroupRequest request) {
         String panelId = request.getId();
         if (StringUtils.isNotEmpty(panelId)) {

File: backend/src/main/java/io/dataease/auth/service/ExtAuthService.java
Patch:
@@ -28,5 +28,7 @@ public interface ExtAuthService {
     void clearDeptResource(Long deptId);
     void clearRoleResource(Long roleId);
 
+    List<String> parentResource(String resourceId, String type);
+
 
 }

File: backend/src/main/java/io/dataease/ext/ExtAuthMapper.java
Patch:
@@ -27,4 +27,6 @@ public interface ExtAuthMapper {
     List<AuthItem> dataSourceIdByDept(String deptId);
     List<AuthItem> dataSetIdByDept(String deptId);
     List<AuthItem> panelIdByDept(String deptId);
+
+    String parentResource(@Param("resourceId") String resourceId, @Param("type") String type);
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -44,7 +44,7 @@ public class DataSetGroupService {
     @Resource
     private SysAuthService sysAuthService;
 
-    @DeCleaner(DePermissionType.DATASET)
+    @DeCleaner(value = DePermissionType.DATASET, key = "pid")
     public DataSetGroupDTO save(DatasetGroup datasetGroup) throws Exception {
         checkName(datasetGroup);
         if (StringUtils.isEmpty(datasetGroup.getId())) {

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -115,7 +115,7 @@ public List<PanelGroupDTO> defaultTree(PanelGroupRequest panelGroupRequest) {
         return TreeUtils.mergeTree(panelGroupDTOList, "default_panel");
     }
 
-    @DeCleaner(DePermissionType.PANEL)
+    @DeCleaner(value = DePermissionType.PANEL, key = "pid")
     public PanelGroup saveOrUpdate(PanelGroupRequest request) {
         String userName = AuthUtils.getUser().getUsername();
         String panelId = request.getId();

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -310,6 +310,9 @@ public void endElement(String uri, String localName, String name) throws SAXExce
                     maxRef = ref;
                 }
                 if(curRow>1){
+                    for (int i=cellList.size();i<this.fields.size();i++){
+                        cellList.add("");
+                    }
                     List<String> tmp = new ArrayList<>(cellList);
                     this.getData().add(tmp);
                 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1930,8 +1930,7 @@ private List<ExcelSheetData> parseExcel2(String filename, InputStream inputStrea
         inputStream.close();
         excelSheetDataList.forEach(excelSheetData -> {
             List<List<String>> data = excelSheetData.getData();
-            String[] fieldArray = excelSheetData.getFields().stream().map(TableField::getFieldName)
-                    .toArray(String[]::new);
+            String[] fieldArray = excelSheetData.getFields().stream().map(TableField::getFieldName).toArray(String[]::new);
             List<Map<String, Object>> jsonArray = new ArrayList<>();
             if (CollectionUtils.isNotEmpty(data)) {
                 jsonArray = data.stream().map(ele -> {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -115,6 +115,9 @@ public List<DatasourceDTO> getDatasourceList(DatasourceUnionRequest request) thr
                     datasourceDTO.setCalculationMode(dataSourceType.getCalculationMode());
                 }
             });
+            if(datasourceDTO.getType().equalsIgnoreCase(DatasourceTypes.mysql.toString())){
+                datasourceDTO.setConfiguration(JSONObject.toJSONString(new Gson().fromJson(datasourceDTO.getConfiguration(), MysqlConfiguration.class)) );
+            }
             if(datasourceDTO.getType().equalsIgnoreCase(DatasourceTypes.api.toString())){
                 JSONArray apiDefinitionList = JSONObject.parseArray(datasourceDTO.getConfiguration());
                 JSONArray apiDefinitionListWithStatus = new JSONArray();

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -114,7 +114,7 @@ public List<SettingTreeNode> treeNodes() {
         return buildTree(sysMsgTypes);
     }
 
-    @Cacheable(SysMsgConstants.SYS_MSG_TYPE)
+    /*@Cacheable(SysMsgConstants.SYS_MSG_TYPE)*/
     public List<SysMsgType> queryMsgTypes() {
         SysMsgTypeExample example = new SysMsgTypeExample();
         return sysMsgTypeMapper.selectByExample(example);

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -114,7 +114,7 @@ public List<SettingTreeNode> treeNodes() {
         return buildTree(sysMsgTypes);
     }
 
-    @Cacheable(SysMsgConstants.SYS_MSG_TYPE)
+    /*@Cacheable(SysMsgConstants.SYS_MSG_TYPE)*/
     public List<SysMsgType> queryMsgTypes() {
         SysMsgTypeExample example = new SysMsgTypeExample();
         return sysMsgTypeMapper.selectByExample(example);

File: backend/src/main/java/io/dataease/service/sys/PluginService.java
Patch:
@@ -249,7 +249,7 @@ private MyPluginDTO formatJsonFile(File file) {
             e.printStackTrace();
         }
         //BeanUtils.copyBean(result, myPlugin);
-        if(result.getCategory().equalsIgnoreCase("datasource")){
+        if(result.getCategory().equalsIgnoreCase("datasource") && (StringUtils.isEmpty(result.getStore()) || !result.getStore().equalsIgnoreCase("default"))){
             result.setStore("thirdpart");
         }
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1917,11 +1917,13 @@ private List<ExcelSheetData> parseExcel2(String filename, InputStream inputStrea
         String suffix = filename.substring(filename.lastIndexOf(".") + 1);
         if (StringUtils.equalsIgnoreCase(suffix, "xls")) {
             ExcelXlsReader excelXlsReader = new ExcelXlsReader();
+            excelXlsReader.setObtainedNum(100);
             excelXlsReader.process(inputStream);
             excelSheetDataList = excelXlsReader.totalSheets;
         }
         if (StringUtils.equalsIgnoreCase(suffix, "xlsx")) {
             ExcelXlsxReader excelXlsxReader = new ExcelXlsxReader();
+            excelXlsxReader.setObtainedNum(100);
             excelXlsxReader.process(inputStream);
             excelSheetDataList = excelXlsxReader.totalSheets;
         }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -34,7 +34,7 @@
 
 import static io.dataease.plugins.common.constants.SQLConstants.TABLE_ALIAS_PREFIX;
 
-@Service("sqlserverQueryProvider")
+@Service("sqlServerQueryProvider")
 public class SqlserverQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -285,7 +285,7 @@ public Connection getConnection(DatasourceRequest datasourceRequest) throws Exce
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), MysqlConfiguration.class);
                 username = mysqlConfiguration.getUsername();
                 password = mysqlConfiguration.getPassword();
-                driver = mysqlConfiguration.getDriver();
+                driver = "com.mysql.jdbc.Driver";
                 jdbcurl = mysqlConfiguration.getJdbc();
                 break;
             case sqlServer:
@@ -382,7 +382,7 @@ public JdbcConfiguration setCredential(DatasourceRequest datasourceRequest, Drui
             case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), MysqlConfiguration.class);
                 dataSource.setUrl(mysqlConfiguration.getJdbc());
-                dataSource.setDriverClassName(mysqlConfiguration.getDriver());
+                dataSource.setDriverClassName("com.mysql.jdbc.Driver");
                 dataSource.setValidationQuery("select 1");
                 jdbcConfiguration = mysqlConfiguration;
                 break;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -31,7 +31,7 @@ public class JdbcProvider extends DefaultJdbcProvider {
 
     @Override
     public boolean isUseDatasourcePool(){
-        return false;
+        return true;
     }
     @Override
     public String getType(){

File: backend/src/main/java/io/dataease/service/engine/EngineService.java
Patch:
@@ -150,10 +150,10 @@ private void checkValid(DeEngine engine)throws Exception{
     }
 
     private void setDs(DeEngine engine) {
-        CacheUtils.remove("ENGINE", "SimpleKey []");
+        CacheUtils.removeAll("ENGINE");
     }
 
-//    @Cacheable(value = "ENGINE")
+    @Cacheable(value = "ENGINE")
     public Datasource getDeEngine() throws Exception {
         Datasource datasource = new Datasource();
 

File: backend/src/main/java/io/dataease/controller/engine/KettleController.java
Patch:
@@ -34,8 +34,8 @@ public ResultHolder save(@RequestBody DeEngine engine) throws Exception{
 
     @ApiIgnore
     @PostMapping("validate")
-    public  ResultHolder validate(@RequestBody KettleDTO kettleDTO) throws Exception{
-         return kettleService.validate(kettleDTO);
+    public  void validate(@RequestBody KettleDTO kettleDTO) throws Exception{
+        kettleService.validate(kettleDTO);
     }
 
     @RequiresPermissions("sysparam:read")

File: backend/src/main/java/io/dataease/dto/datasource/MysqlConfiguration.java
Patch:
@@ -9,7 +9,7 @@
 @Setter
 public class MysqlConfiguration extends JdbcConfiguration {
 
-    private String driver = "com.mysql.cj.jdbc.Driver";
+    private String driver = "com.mysql.jdbc.Driver";
     private String extraParams = "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull";
 
     public String getJdbc() {

File: backend/src/main/java/io/dataease/provider/datasource/EsProvider.java
Patch:
@@ -290,7 +290,6 @@ private String exexQuery(DatasourceRequest datasourceRequest, String sql, String
         Request request = new Request();
         request.setQuery(sql);
         request.setFetch_size(datasourceRequest.getFetchSize());
-        System.out.println(new Gson().toJson(request));
         String url = esConfiguration.getUrl().endsWith("/") ? esConfiguration.getUrl() + uri : esConfiguration.getUrl() + "/" + uri;
         String response = HttpClientUtil.post(url, new Gson().toJson(request), httpClientConfig);
         return response;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -357,8 +357,6 @@ public Connection getConnection(DatasourceRequest datasourceRequest) throws Exce
         }
 
         Driver driverClass = (Driver) extendedJdbcClassLoader.loadClass(driver).newInstance();
-        System.out.println(driverClass.getMajorVersion());
-        System.out.println(driverClass.getMinorVersion());
         if (StringUtils.isNotBlank(username)) {
             props.setProperty("user", username);
             if (StringUtils.isNotBlank(password)) {

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -35,7 +35,7 @@
  * @Author gin
  * @Date 2021/5/17 4:11 下午
  */
-@Service("dorisEngineQuery")
+@Service("engine_dorisQueryProvider")
 public class DorisQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -35,7 +35,7 @@
  * @Author gin
  * @Date 2021/5/17 4:11 下午
  */
-@Service("mysqlEngineQuery")
+@Service("engine_mysqlQueryProvider")
 public class MysqlQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/api/ApiProvider.java
Patch:
@@ -11,7 +11,7 @@
 
 import java.util.List;
 
-@Service("apiQuery")
+@Service("apiQueryProvider")
 public class ApiProvider extends QueryProvider {
     @Override
     public Integer transFieldType(String field) {

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -36,7 +36,7 @@
  * @Author gin
  * @Date 2021/5/17 2:43 下午
  */
-@Service("ckQuery")
+@Service("ckQueryProvider")
 public class CKQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -34,7 +34,7 @@
 
 import static io.dataease.plugins.common.constants.SQLConstants.TABLE_ALIAS_PREFIX;
 
-@Service("db2Query")
+@Service("db2QueryProvider")
 public class Db2QueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -32,7 +32,7 @@
 
 import static io.dataease.plugins.common.constants.SQLConstants.TABLE_ALIAS_PREFIX;
 
-@Service("esQuery")
+@Service("esQueryProvider")
 public class EsQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -36,7 +36,7 @@
  * @Author gin
  * @Date 2021/5/17 2:43 下午
  */
-@Service("hiveQuery")
+@Service("hiveQueryProvider")
 public class HiveQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -34,7 +34,7 @@
 import static io.dataease.plugins.common.constants.SQLConstants.TABLE_ALIAS_PREFIX;
 
 
-@Service("impalaQuery")
+@Service("impalaQueryProvider")
 public class ImpalaQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -37,7 +37,7 @@
  * @Author gin
  * @Date 2021/5/17 2:43 下午
  */
-@Service("mongoQuery")
+@Service("mongoQueryProvider")
 public class MongoQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -36,7 +36,7 @@
  * @Author gin
  * @Date 2021/5/17 2:43 下午
  */
-@Service("mysqlQuery")
+@Service("mysqlQueryProvider")
 public class MysqlQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -38,7 +38,7 @@
  * @Author gin
  * @Date 2021/5/17 2:43 下午
  */
-@Service("oracleQuery")
+@Service("oracleQueryProvider")
 public class OracleQueryProvider extends QueryProvider {
 
     private static final Integer STRING = 0;

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -37,7 +37,7 @@
 import static io.dataease.plugins.common.constants.SQLConstants.TABLE_ALIAS_PREFIX;
 
 
-@Service("pgQuery")
+@Service("pgQueryProvider")
 public class PgQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -41,7 +41,7 @@
  * @author: Jiantao Yan
  * @date: 2021/10/11 17:12
  **/
-@Service("redshiftQuery")
+@Service("redshiftQueryProvider")
 public class RedshiftQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -34,7 +34,7 @@
 
 import static io.dataease.plugins.common.constants.SQLConstants.TABLE_ALIAS_PREFIX;
 
-@Service("sqlserverQuery")
+@Service("sqlserverQueryProvider")
 public class SqlserverQueryProvider extends QueryProvider {
     @Resource
     private DatasetTableFieldMapper datasetTableFieldMapper;

File: backend/src/main/java/io/dataease/service/engine/EngineService.java
Patch:
@@ -153,7 +153,7 @@ private void setDs(DeEngine engine) {
         CacheUtils.remove("ENGINE", "SimpleKey []");
     }
 
-    @Cacheable(value = "ENGINE")
+//    @Cacheable(value = "ENGINE")
     public Datasource getDeEngine() throws Exception {
         Datasource datasource = new Datasource();
 

File: backend/src/main/java/io/dataease/provider/ProviderFactory.java
Patch:
@@ -38,9 +38,9 @@ public static Provider getProvider(String type) {
             DatasourceTypes datasourceType = DatasourceTypes.valueOf(type);
             switch (datasourceType) {
                 case es:
-                    return context.getBean("es", Provider.class);
+                    return context.getBean("esProviders", Provider.class);
                 case api:
-                    return context.getBean("api", Provider.class);
+                    return context.getBean("apiProvider", Provider.class);
                 default:
                     return context.getBean("jdbc", Provider.class);
             }

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -22,7 +22,7 @@
 import java.util.*;
 import java.util.stream.Collectors;
 
-@Service("api")
+@Service("apiProvider")
 public class ApiProvider extends Provider{
 
 

File: backend/src/main/java/io/dataease/provider/datasource/EsProvider.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.*;
 import java.util.stream.Collectors;
 
-@Service("es")
+@Service("esProviders")
 public class EsProvider extends Provider {
 
 

File: backend/src/main/java/io/dataease/listener/util/CacheUtils.java
Patch:
@@ -38,7 +38,7 @@ public static void put(String cacheName, Object key, Object value, Integer ttl,
         if (getCacheManager() instanceof RedisCacheManager) {
             RedisTemplate redisTemplate = (RedisTemplate) CommonBeanFactory.getBean("redisTemplate");
             ValueOperations valueOperations = redisTemplate.opsForValue();
-            valueOperations.setIfPresent(cacheName + "::" + key , value );
+            valueOperations.set(cacheName + "::" + key , value );
             return;
         }
         Element e = new Element(key, value);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1758,7 +1758,8 @@ public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncr
 
     private void checkColumes(DatasetTableIncrementalConfig datasetTableIncrementalConfig) throws Exception {
         DatasetTable datasetTable = datasetTableMapper.selectByPrimaryKey(datasetTableIncrementalConfig.getTableId());
-        List<DatasetTableField> datasetTableFields = dataSetTableFieldsService.getFieldsByTableId(datasetTable.getId());
+        List<DatasetTableField> datasetTableFields = dataSetTableFieldsService.getFieldsByTableId(datasetTable.getId())
+                .stream().filter(datasetTableField -> datasetTableField.getExtField() == 0).collect(Collectors.toList());
         datasetTableFields.sort((o1, o2) -> {
             if (o1.getColumnIndex() == null) {
                 return -1;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1758,7 +1758,8 @@ public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncr
 
     private void checkColumes(DatasetTableIncrementalConfig datasetTableIncrementalConfig) throws Exception {
         DatasetTable datasetTable = datasetTableMapper.selectByPrimaryKey(datasetTableIncrementalConfig.getTableId());
-        List<DatasetTableField> datasetTableFields = dataSetTableFieldsService.getFieldsByTableId(datasetTable.getId());
+        List<DatasetTableField> datasetTableFields = dataSetTableFieldsService.getFieldsByTableId(datasetTable.getId())
+                .stream().filter(datasetTableField -> datasetTableField.getExtField() == 0).collect(Collectors.toList());
         datasetTableFields.sort((o1, o2) -> {
             if (o1.getColumnIndex() == null) {
                 return -1;

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -128,9 +128,9 @@ public List<String> syncPanelViews(PanelGroupWithBLOBs panelGroup) {
                 viewIds = panelViewInsertDTOList.stream().map(panelView ->panelView.getChartViewId()).collect(Collectors.toList());
                 extChartViewMapper.copyCacheToView(viewIds);
             }
+            extChartViewMapper.deleteCacheWithPanel(viewIds,panelId);
+            extChartViewMapper.deleteNoUseView(viewIds,panelId);
         }
-        extChartViewMapper.deleteCacheWithPanel(viewIds,panelId);
-        extChartViewMapper.deleteNoUseView(viewIds,panelId);
         panelGroup.setMobileLayout(mobileLayout);
         return viewIds;
     }

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -128,9 +128,9 @@ public List<String> syncPanelViews(PanelGroupWithBLOBs panelGroup) {
                 viewIds = panelViewInsertDTOList.stream().map(panelView ->panelView.getChartViewId()).collect(Collectors.toList());
                 extChartViewMapper.copyCacheToView(viewIds);
             }
+            extChartViewMapper.deleteCacheWithPanel(viewIds,panelId);
+            extChartViewMapper.deleteNoUseView(viewIds,panelId);
         }
-        extChartViewMapper.deleteCacheWithPanel(viewIds,panelId);
-        extChartViewMapper.deleteNoUseView(viewIds,panelId);
         panelGroup.setMobileLayout(mobileLayout);
         return viewIds;
     }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -524,6 +524,9 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             fieldMap.put("extBubble",extBubble);
             PluginViewParam pluginViewParam = buildPluginParam(fieldMap, fieldCustomFilter, extFilterList, ds, table, view);
             String sql = pluginViewSql(pluginViewParam, view);
+            if (StringUtils.isBlank(sql)) {
+                return emptyChartViewDTO(view);
+            }
             datasourceRequest.setQuery(sql);
             data = datasourceProvider.getData(datasourceRequest);
 

File: backend/src/main/java/io/dataease/service/sys/PluginService.java
Patch:
@@ -255,14 +255,14 @@ public Map<String, Object> remoteInstall(Map<String, Object> params) {
     }
 
     public boolean versionMatch(String pluginVersion) {
-        List<Integer> versionLists = Arrays.stream(version.split(".")).map(CodingUtil::string2Integer).collect(Collectors.toList());
-        List<Integer> requireVersionLists = Arrays.stream(pluginVersion.split(".")).map(CodingUtil::string2Integer).collect(Collectors.toList());
+        List<Integer> versionLists = Arrays.stream(version.split("\\.")).map(CodingUtil::string2Integer).collect(Collectors.toList());
+        List<Integer> requireVersionLists = Arrays.stream(pluginVersion.split("\\.")).map(CodingUtil::string2Integer).collect(Collectors.toList());
         int maxSize = Math.max(versionLists.size(), requireVersionLists.size());
         for (int i = 0; i < maxSize; i++) {
             Integer currentV = versionLists.size() == i ? 0 : versionLists.get(i);
             Integer requireV = requireVersionLists.size() == i ? 0 : requireVersionLists.get(i);
             if (requireV > currentV) return false;
         }
-        return false;
+        return true;
     }
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -524,6 +524,9 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             fieldMap.put("extBubble",extBubble);
             PluginViewParam pluginViewParam = buildPluginParam(fieldMap, fieldCustomFilter, extFilterList, ds, table, view);
             String sql = pluginViewSql(pluginViewParam, view);
+            if (StringUtils.isBlank(sql)) {
+                return emptyChartViewDTO(view);
+            }
             datasourceRequest.setQuery(sql);
             data = datasourceProvider.getData(datasourceRequest);
 

File: backend/src/main/java/io/dataease/service/sys/PluginService.java
Patch:
@@ -255,14 +255,14 @@ public Map<String, Object> remoteInstall(Map<String, Object> params) {
     }
 
     public boolean versionMatch(String pluginVersion) {
-        List<Integer> versionLists = Arrays.stream(version.split(".")).map(CodingUtil::string2Integer).collect(Collectors.toList());
-        List<Integer> requireVersionLists = Arrays.stream(pluginVersion.split(".")).map(CodingUtil::string2Integer).collect(Collectors.toList());
+        List<Integer> versionLists = Arrays.stream(version.split("\\.")).map(CodingUtil::string2Integer).collect(Collectors.toList());
+        List<Integer> requireVersionLists = Arrays.stream(pluginVersion.split("\\.")).map(CodingUtil::string2Integer).collect(Collectors.toList());
         int maxSize = Math.max(versionLists.size(), requireVersionLists.size());
         for (int i = 0; i < maxSize; i++) {
             Integer currentV = versionLists.size() == i ? 0 : versionLists.get(i);
             Integer requireV = requireVersionLists.size() == i ? 0 : requireVersionLists.get(i);
             if (requireV > currentV) return false;
         }
-        return false;
+        return true;
     }
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -524,6 +524,9 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             fieldMap.put("extBubble",extBubble);
             PluginViewParam pluginViewParam = buildPluginParam(fieldMap, fieldCustomFilter, extFilterList, ds, table, view);
             String sql = pluginViewSql(pluginViewParam, view);
+            if (StringUtils.isBlank(sql)) {
+                return emptyChartViewDTO(view);
+            }
             datasourceRequest.setQuery(sql);
             data = datasourceProvider.getData(datasourceRequest);
 

File: backend/src/main/java/io/dataease/service/sys/PluginService.java
Patch:
@@ -255,14 +255,14 @@ public Map<String, Object> remoteInstall(Map<String, Object> params) {
     }
 
     public boolean versionMatch(String pluginVersion) {
-        List<Integer> versionLists = Arrays.stream(version.split(".")).map(CodingUtil::string2Integer).collect(Collectors.toList());
-        List<Integer> requireVersionLists = Arrays.stream(pluginVersion.split(".")).map(CodingUtil::string2Integer).collect(Collectors.toList());
+        List<Integer> versionLists = Arrays.stream(version.split("\\.")).map(CodingUtil::string2Integer).collect(Collectors.toList());
+        List<Integer> requireVersionLists = Arrays.stream(pluginVersion.split("\\.")).map(CodingUtil::string2Integer).collect(Collectors.toList());
         int maxSize = Math.max(versionLists.size(), requireVersionLists.size());
         for (int i = 0; i < maxSize; i++) {
             Integer currentV = versionLists.size() == i ? 0 : versionLists.get(i);
             Integer requireV = requireVersionLists.size() == i ? 0 : requireVersionLists.get(i);
             if (requireV > currentV) return false;
         }
-        return false;
+        return true;
     }
 }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -406,7 +406,7 @@ public void handleDatasource(DatasourceRequest datasourceRequest, String type) t
     }
 
     private Connection getConnectionFromPool(DatasourceRequest datasourceRequest) throws Exception {
-        if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mongo.name())){
+        if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mongo.name()) || datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.impala.name())){
             return getConnection(datasourceRequest);
         }
         DruidDataSource dataSource = jdbcConnection.get(datasourceRequest.getDatasource().getId());

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -526,7 +526,7 @@ private void addToPool(DatasourceRequest datasourceRequest) throws PropertyVetoE
         druidDataSource.setInitialSize(jdbcConfiguration.getInitialPoolSize());// 初始连接数
         druidDataSource.setMinIdle(jdbcConfiguration.getMinPoolSize()); // 最小连接数
         druidDataSource.setMaxActive(jdbcConfiguration.getMaxPoolSize()); // 最大连接数
-        if (datasourceRequest.getDatasource().getType().equals(DatasourceTypes.mongo.name()) || datasourceRequest.getDatasource().getType().equals(DatasourceTypes.hive.name())) {
+        if (datasourceRequest.getDatasource().getType().equals(DatasourceTypes.mongo.name()) || datasourceRequest.getDatasource().getType().equals(DatasourceTypes.hive.name()) || datasourceRequest.getDatasource().getType().equals(DatasourceTypes.impala.name())) {
             WallFilter wallFilter = new WallFilter();
             wallFilter.setDbType(DatasourceTypes.mysql.name());
             druidDataSource.setProxyFilters(Arrays.asList(new Filter[]{wallFilter}));

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -672,7 +672,7 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
                 if (StringUtils.isEmpty(db2Configuration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'T';".replace("DE_SCHEMA", db2Configuration.getSchema());
+                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'T'".replace("DE_SCHEMA", db2Configuration.getSchema());
             default:
                 return "show tables;";
         }
@@ -722,7 +722,7 @@ private String getViewSql(DatasourceRequest datasourceRequest) throws Exception
                 if (StringUtils.isEmpty(db2Configuration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'V';".replace("DE_SCHEMA", db2Configuration.getSchema());
+                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'V'".replace("DE_SCHEMA", db2Configuration.getSchema());
 
             default:
                 return null;
@@ -738,7 +738,7 @@ private String getSchemaSql(DatasourceRequest datasourceRequest) {
             case sqlServer:
                 return "select name from sys.schemas;";
             case db2:
-                return "select SCHEMANAME from syscat.SCHEMATA   WHERE \"DEFINER\" ='USER';".replace("USER", db2Configuration.getUsername().toUpperCase()) ;
+                return "select SCHEMANAME from syscat.SCHEMATA   WHERE \"DEFINER\" ='USER'".replace("USER", db2Configuration.getUsername().toUpperCase()) ;
             case pg:
                 return "SELECT nspname FROM pg_namespace;";
             case redshift:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -672,7 +672,7 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
                 if (StringUtils.isEmpty(db2Configuration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'T';".replace("DE_SCHEMA", db2Configuration.getSchema());
+                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'T'".replace("DE_SCHEMA", db2Configuration.getSchema());
             default:
                 return "show tables;";
         }
@@ -722,7 +722,7 @@ private String getViewSql(DatasourceRequest datasourceRequest) throws Exception
                 if (StringUtils.isEmpty(db2Configuration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'V';".replace("DE_SCHEMA", db2Configuration.getSchema());
+                return "select TABNAME from syscat.tables  WHERE TABSCHEMA ='DE_SCHEMA' AND \"TYPE\" = 'V'".replace("DE_SCHEMA", db2Configuration.getSchema());
 
             default:
                 return null;
@@ -738,7 +738,7 @@ private String getSchemaSql(DatasourceRequest datasourceRequest) {
             case sqlServer:
                 return "select name from sys.schemas;";
             case db2:
-                return "select SCHEMANAME from syscat.SCHEMATA   WHERE \"DEFINER\" ='USER';".replace("USER", db2Configuration.getUsername().toUpperCase()) ;
+                return "select SCHEMANAME from syscat.SCHEMATA   WHERE \"DEFINER\" ='USER'".replace("USER", db2Configuration.getUsername().toUpperCase()) ;
             case pg:
                 return "SELECT nspname FROM pg_namespace;";
             case redshift:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -252,6 +252,7 @@ public List<TableField> fetchResultField(DatasourceRequest datasourceRequest) th
         } catch (SQLException e) {
             DataEaseException.throwException(e);
         } catch (Exception e) {
+            e.printStackTrace();
             DataEaseException.throwException(Translator.get("i18n_datasource_connect_error") + e.getMessage());
         }
         return new ArrayList<>();
@@ -285,7 +286,7 @@ private List<TableField> fetchResultField(ResultSet rs, DatasourceRequest dataso
             String l = StringUtils.isNotEmpty(metaData.getColumnLabel(j + 1)) ? metaData.getColumnLabel(j + 1) : f;
             String t = metaData.getColumnTypeName(j + 1);
             if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains(".")) {
-                l = l.split(".")[1];
+                l = l.split("\\.")[1];
             }
             TableField field = new TableField();
             field.setFieldName(l);

File: backend/src/main/java/io/dataease/provider/datasource/EsProvider.java
Patch:
@@ -13,6 +13,7 @@
 import io.dataease.dto.datasource.TableField;
 import io.dataease.exception.DataEaseException;
 import io.dataease.i18n.Translator;
+import io.dataease.plugins.common.constants.EsSqlLConstants;
 import io.dataease.provider.query.es.EsQueryProvider;
 import org.apache.commons.codec.binary.Base64;
 import org.apache.commons.lang.StringUtils;
@@ -97,7 +98,7 @@ public List<String[]> fetchResult(DatasourceRequest datasourceRequest) throws Ex
 
     @Override
     public List<TableField> getTableFileds(DatasourceRequest datasourceRequest) throws Exception {
-        datasourceRequest.setQuery("desc " + datasourceRequest.getTable());
+        datasourceRequest.setQuery("desc " + String.format(EsSqlLConstants.KEYWORD_TABLE, datasourceRequest.getTable()));
         List<TableField> tableFields = new ArrayList<>();
         try {
             String response = exexQuery(datasourceRequest, datasourceRequest.getQuery(), "?format=json");
@@ -292,6 +293,7 @@ private String exexQuery(DatasourceRequest datasourceRequest, String sql, String
         Request request = new Request();
         request.setQuery(sql);
         request.setFetch_size(datasourceRequest.getFetchSize());
+        System.out.println(new Gson().toJson(request));
         String url = esConfiguration.getUrl().endsWith("/") ? esConfiguration.getUrl() + uri : esConfiguration.getUrl() + "/" + uri;
         String response = HttpClientUtil.post(url, new Gson().toJson(request), httpClientConfig);
         return response;

File: backend/src/main/java/io/dataease/service/kettle/KettleService.java
Patch:
@@ -67,8 +67,7 @@ public ResultHolder validate(KettleDTO kettleDTO) throws Exception {
         httpClientConfig.addHeader("Authorization", authValue);
         try {
             String response = HttpClientUtil.get("http://" + kettleDTO.getCarte() + ":" + kettleDTO.getPort() + "/kettle/status/", httpClientConfig);
-
-            return ResultHolder.error("Kettle is valid.");
+            return ResultHolder.success("Kettle is valid.");
         }catch (Exception e){
             return ResultHolder.error("Kettle is invalid: " + e.getMessage());
         }

File: backend/src/main/java/io/dataease/service/kettle/KettleService.java
Patch:
@@ -67,8 +67,7 @@ public ResultHolder validate(KettleDTO kettleDTO) throws Exception {
         httpClientConfig.addHeader("Authorization", authValue);
         try {
             String response = HttpClientUtil.get("http://" + kettleDTO.getCarte() + ":" + kettleDTO.getPort() + "/kettle/status/", httpClientConfig);
-
-            return ResultHolder.error("Kettle is valid.");
+            return ResultHolder.success("Kettle is valid.");
         }catch (Exception e){
             return ResultHolder.error("Kettle is invalid: " + e.getMessage());
         }

File: backend/src/main/java/io/dataease/controller/engine/KettleController.java
Patch:
@@ -43,8 +43,8 @@ public ResultHolder save(@RequestBody DeEngine engine) throws Exception{
 
     @ApiIgnore
     @PostMapping("validate")
-    public  void validate(@RequestBody KettleDTO kettleDTO) throws Exception{
-         kettleService.validate(kettleDTO);
+    public  ResultHolder validate(@RequestBody KettleDTO kettleDTO) throws Exception{
+         return kettleService.validate(kettleDTO);
     }
 
     @RequiresPermissions("sysparam:read")

File: backend/src/main/java/io/dataease/listener/DataSourceInitStartListener.java
Patch:
@@ -19,8 +19,7 @@ public class DataSourceInitStartListener implements ApplicationListener<Applicat
     @Override
     public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
         datasourceService.initAllDataSourceConnectionPool();
-        dataSetTableService.updateDatasetTableStatus();
-
+//        dataSetTableService.updateDatasetTableStatus();
     }
 
 

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -872,6 +872,8 @@ private void generateTransFile(String extractType, DatasetTable datasetTable, Da
             case ds_doris:
             case mariadb:
             case mysql:
+            case TiDB:
+            case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 dataMeta = new DatabaseMeta("db", "MYSQL", "Native", mysqlConfiguration.getHost().trim(), mysqlConfiguration.getDataBase().trim(), mysqlConfiguration.getPort().toString(), mysqlConfiguration.getUsername(), mysqlConfiguration.getPassword());
                 dataMeta.addExtraOption("MYSQL", "characterEncoding", "UTF-8");

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -872,6 +872,8 @@ private void generateTransFile(String extractType, DatasetTable datasetTable, Da
             case ds_doris:
             case mariadb:
             case mysql:
+            case TiDB:
+            case StarRocks:
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasource.getConfiguration(), MysqlConfiguration.class);
                 dataMeta = new DatabaseMeta("db", "MYSQL", "Native", mysqlConfiguration.getHost().trim(), mysqlConfiguration.getDataBase().trim(), mysqlConfiguration.getPort().toString(), mysqlConfiguration.getUsername(), mysqlConfiguration.getPassword());
                 dataMeta.addExtraOption("MYSQL", "characterEncoding", "UTF-8");

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1101,10 +1101,10 @@ public String getCustomSQLDatasource(DataTableInfoDTO dataTableInfoDTO, List<Dat
         Map<String, String[]> customInfo = new TreeMap<>();
         for (DataTableInfoCustomUnion ele : dataTableInfoDTO.getList()) {
             DatasetTable datasetTable = datasetTableMapper.selectByPrimaryKey(ele.getTableId());
-            String table = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getTable();
             if (ObjectUtils.isEmpty(datasetTable)) {
                 throw new RuntimeException(Translator.get("i18n_custom_ds_delete"));
             }
+            String table = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getTable();
             List<DatasetTableField> fields = dataSetTableFieldsService.getListByIdsEach(ele.getCheckedFields());
             if (CollectionUtils.isEmpty(fields)) {
                 throw new RuntimeException(Translator.get("i18n_cst_ds_tb_or_field_deleted"));

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1101,10 +1101,10 @@ public String getCustomSQLDatasource(DataTableInfoDTO dataTableInfoDTO, List<Dat
         Map<String, String[]> customInfo = new TreeMap<>();
         for (DataTableInfoCustomUnion ele : dataTableInfoDTO.getList()) {
             DatasetTable datasetTable = datasetTableMapper.selectByPrimaryKey(ele.getTableId());
-            String table = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getTable();
             if (ObjectUtils.isEmpty(datasetTable)) {
                 throw new RuntimeException(Translator.get("i18n_custom_ds_delete"));
             }
+            String table = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getTable();
             List<DatasetTableField> fields = dataSetTableFieldsService.getListByIdsEach(ele.getCheckedFields());
             if (CollectionUtils.isEmpty(fields)) {
                 throw new RuntimeException(Translator.get("i18n_cst_ds_tb_or_field_deleted"));

File: backend/src/main/java/io/dataease/base/domain/MyPlugin.java
Patch:
@@ -35,5 +35,7 @@ public class MyPlugin implements Serializable {
 
     private String icon;
 
+    private String require = "1.9.0";
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/dataease/base/domain/MyPlugin.java
Patch:
@@ -35,5 +35,7 @@ public class MyPlugin implements Serializable {
 
     private String icon;
 
+    private String require = "1.9.0";
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/dataease/base/domain/MyPlugin.java
Patch:
@@ -35,5 +35,7 @@ public class MyPlugin implements Serializable {
 
     private String icon;
 
+    private String require = "1.9.0";
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -284,8 +284,8 @@ private List<TableField> fetchResultField(ResultSet rs, DatasourceRequest dataso
             String f = metaData.getColumnName(j + 1);
             String l = StringUtils.isNotEmpty(metaData.getColumnLabel(j + 1)) ? metaData.getColumnLabel(j + 1) : f;
             String t = metaData.getColumnTypeName(j + 1);
-            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains("\\.")) {
-                l = l.split("\\.")[1];
+            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains(".")) {
+                l = l.split(".")[1];
             }
             TableField field = new TableField();
             field.setFieldName(l);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -284,8 +284,8 @@ private List<TableField> fetchResultField(ResultSet rs, DatasourceRequest dataso
             String f = metaData.getColumnName(j + 1);
             String l = StringUtils.isNotEmpty(metaData.getColumnLabel(j + 1)) ? metaData.getColumnLabel(j + 1) : f;
             String t = metaData.getColumnTypeName(j + 1);
-            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains("\\.")) {
-                l = l.split("\\.")[1];
+            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains(".")) {
+                l = l.split(".")[1];
             }
             TableField field = new TableField();
             field.setFieldName(l);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -172,8 +172,8 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     DataTableInfoDTO info = new DataTableInfoDTO();
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
-                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     datasetTableMapper.insert(sheetTable);
+                    sysAuthService.copyAuth(sheetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     saveExcelTableField(sheetTable.getId(), excelSheetDataList.get(0).getFields(), true);
                     datasetIdList.add(sheetTable.getId());
                 }
@@ -203,7 +203,7 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
                     datasetTableMapper.insert(sheetTable);
-                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
+                    sysAuthService.copyAuth(sheetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     saveExcelTableField(sheetTable.getId(), sheet.getFields(), true);
                     datasetIdList.add(sheetTable.getId());
                 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -172,8 +172,8 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     DataTableInfoDTO info = new DataTableInfoDTO();
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
-                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     datasetTableMapper.insert(sheetTable);
+                    sysAuthService.copyAuth(sheetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     saveExcelTableField(sheetTable.getId(), excelSheetDataList.get(0).getFields(), true);
                     datasetIdList.add(sheetTable.getId());
                 }
@@ -203,7 +203,7 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
                     datasetTableMapper.insert(sheetTable);
-                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
+                    sysAuthService.copyAuth(sheetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     saveExcelTableField(sheetTable.getId(), sheet.getFields(), true);
                     datasetIdList.add(sheetTable.getId());
                 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -172,6 +172,7 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     DataTableInfoDTO info = new DataTableInfoDTO();
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
+                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     datasetTableMapper.insert(sheetTable);
                     saveExcelTableField(sheetTable.getId(), excelSheetDataList.get(0).getFields(), true);
                     datasetIdList.add(sheetTable.getId());
@@ -202,6 +203,7 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
                     datasetTableMapper.insert(sheetTable);
+                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     saveExcelTableField(sheetTable.getId(), sheet.getFields(), true);
                     datasetIdList.add(sheetTable.getId());
                 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -172,6 +172,7 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     DataTableInfoDTO info = new DataTableInfoDTO();
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
+                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     datasetTableMapper.insert(sheetTable);
                     saveExcelTableField(sheetTable.getId(), excelSheetDataList.get(0).getFields(), true);
                     datasetIdList.add(sheetTable.getId());
@@ -202,6 +203,7 @@ public void saveExcel(DataSetTableRequest datasetTable) throws Exception {
                     info.setExcelSheetDataList(excelSheetDataList);
                     sheetTable.setInfo(new Gson().toJson(info));
                     datasetTableMapper.insert(sheetTable);
+                    sysAuthService.copyAuth(datasetTable.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
                     saveExcelTableField(sheetTable.getId(), sheet.getFields(), true);
                     datasetIdList.add(sheetTable.getId());
                 }

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -965,7 +965,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == 1) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == 0) {
-                    fieldName = String.format(DorisConstants.DATE_FORMAT, originField, format);
+                    fieldName = String.format(DorisConstants.DATE_FORMAT, String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT), format);
                 } else {
                     String cast = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                     String from_unixtime = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtSysAuthMapper.java
Patch:
@@ -5,8 +5,8 @@
 
 public interface ExtSysAuthMapper {
 
-    Boolean checkTreeNoManageCount(@Param("userId") Long userId , @Param("modelType") String modelType, @Param("nodeId") String nodeId);
-
+    Boolean checkTreeNoManageCount(@Param("userId") Long userId, @Param("modelType") String modelType, @Param("nodeId") String nodeId);
 
+    String copyAuth(@Param("authSource") String authSource, @Param("authSourceType") String authSourceType, @Param("authUser") String authUser);
 
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.base.mapper.ext.ExtDataSetGroupMapper;
 import io.dataease.commons.constants.AuthConstants;
 import io.dataease.commons.constants.DePermissionType;
+import io.dataease.commons.constants.SysAuthConstants;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.commons.utils.TreeUtils;
@@ -54,8 +55,10 @@ public DataSetGroupDTO save(DatasetGroup datasetGroup) throws Exception {
             datasetGroup.setCreateBy(AuthUtils.getUser().getUsername());
             datasetGroup.setCreateTime(System.currentTimeMillis());
             datasetGroupMapper.insert(datasetGroup);
+            String userName = AuthUtils.getUser().getUsername();
             // 清理权限缓存
             CacheUtils.removeAll(AuthConstants.USER_PERMISSION_CACHE_NAME);
+            sysAuthService.copyAuth(datasetGroup.getId(), SysAuthConstants.AUTH_SOURCE_TYPE_DATASET);
         } else {
             datasetGroupMapper.updateByPrimaryKeySelective(datasetGroup);
         }

File: backend/src/main/java/io/dataease/provider/QueryProvider.java
Patch:
@@ -53,7 +53,7 @@ public abstract class QueryProvider {
 
     public abstract String searchTable(String table);
 
-    public abstract String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view);
+    public abstract String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds);
 
     public Integer transFieldSize(String type) {
         return 50;

File: backend/src/main/java/io/dataease/provider/QueryProviderImpl.java
Patch:
@@ -96,7 +96,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         return null;
     }
 

File: backend/src/main/java/io/dataease/provider/datasource/EsProvider.java
Patch:
@@ -266,7 +266,7 @@ public String checkStatus(DatasourceRequest datasourceRequest) throws Exception
         if (Integer.valueOf(versionList[0]) == 6) {
             esConfiguration.setUri("_xpack/sql");
         }
-        if (Integer.valueOf(versionList[0]) == 7) {
+        if (Integer.valueOf(versionList[0]) > 6) {
             esConfiguration.setUri("_sql");
         }
         datasourceRequest.getDatasource().setConfiguration(new Gson().toJson(esConfiguration));

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -590,7 +590,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(DorisConstants.KEYWORD_TABLE, table))
@@ -663,7 +663,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -590,7 +590,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(MysqlConstants.KEYWORD_TABLE, table))
@@ -663,7 +663,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -620,7 +620,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(CKConstants.KEYWORD_TABLE, table))
@@ -693,7 +693,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -597,12 +597,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(Db2Constants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(TABLE_ALIAS_PREFIX, 0))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -670,7 +671,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -644,7 +644,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(EsSqlLConstants.KEYWORD_TABLE, table))
@@ -721,7 +721,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -580,7 +580,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(HiveConstants.KEYWORD_TABLE, table))
@@ -653,7 +653,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -577,7 +577,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(ImpalaConstants.KEYWORD_TABLE, table))
@@ -650,7 +650,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -583,7 +583,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(MongoConstants.KEYWORD_TABLE, table))
@@ -659,7 +659,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -586,7 +586,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(MySQLConstants.KEYWORD_TABLE, table))
@@ -659,7 +659,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -633,12 +633,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(OracleConstants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(OracleConstants.ALIAS_FIX, String.format(TABLE_ALIAS_PREFIX, 0)))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -705,7 +706,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -549,12 +549,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(PgConstants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(TABLE_ALIAS_PREFIX, 0))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -622,7 +623,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -637,12 +637,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(SqlServerSQLConstants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(TABLE_ALIAS_PREFIX, 0))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -714,7 +715,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -559,7 +559,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             if (StringUtils.equalsIgnoreCase(table.getType(), "db")) {
                 datasourceRequest.setTable(dataTableInfoDTO.getTable());
                 if (StringUtils.equalsIgnoreCase("text", view.getType()) || StringUtils.equalsIgnoreCase("gauge", view.getType()) || StringUtils.equalsIgnoreCase("liquid", view.getType())) {
-                    datasourceRequest.setQuery(qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, extFilterList, view));
+                    datasourceRequest.setQuery(qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, extFilterList, view, ds));
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "stack")) {
                     datasourceRequest.setQuery(qp.getSQLStack(dataTableInfoDTO.getTable(), xAxis, yAxis, fieldCustomFilter, extFilterList, extStack, ds, view));
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "scatter")) {
@@ -623,7 +623,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             datasourceRequest.setTable(tableName);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
             if (StringUtils.equalsIgnoreCase("text", view.getType()) || StringUtils.equalsIgnoreCase("gauge", view.getType()) || StringUtils.equalsIgnoreCase("liquid", view.getType())) {
-                datasourceRequest.setQuery(qp.getSQLSummary(tableName, yAxis, fieldCustomFilter, extFilterList, view));
+                datasourceRequest.setQuery(qp.getSQLSummary(tableName, yAxis, fieldCustomFilter, extFilterList, view, ds));
             } else if (StringUtils.containsIgnoreCase(view.getType(), "stack")) {
                 datasourceRequest.setQuery(qp.getSQLStack(tableName, xAxis, yAxis, fieldCustomFilter, extFilterList, extStack, ds, view));
             } else if (StringUtils.containsIgnoreCase(view.getType(), "scatter")) {

File: backend/src/main/java/io/dataease/provider/QueryProvider.java
Patch:
@@ -53,7 +53,7 @@ public abstract class QueryProvider {
 
     public abstract String searchTable(String table);
 
-    public abstract String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view);
+    public abstract String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds);
 
     public Integer transFieldSize(String type) {
         return 50;

File: backend/src/main/java/io/dataease/provider/QueryProviderImpl.java
Patch:
@@ -96,7 +96,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         return null;
     }
 

File: backend/src/main/java/io/dataease/provider/datasource/EsProvider.java
Patch:
@@ -266,7 +266,7 @@ public String checkStatus(DatasourceRequest datasourceRequest) throws Exception
         if (Integer.valueOf(versionList[0]) == 6) {
             esConfiguration.setUri("_xpack/sql");
         }
-        if (Integer.valueOf(versionList[0]) == 7) {
+        if (Integer.valueOf(versionList[0]) > 6) {
             esConfiguration.setUri("_sql");
         }
         datasourceRequest.getDatasource().setConfiguration(new Gson().toJson(esConfiguration));

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -590,7 +590,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(DorisConstants.KEYWORD_TABLE, table))
@@ -663,7 +663,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -590,7 +590,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(MysqlConstants.KEYWORD_TABLE, table))
@@ -663,7 +663,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sql + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/ck/CKQueryProvider.java
Patch:
@@ -620,7 +620,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(CKConstants.KEYWORD_TABLE, table))
@@ -693,7 +693,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -597,12 +597,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(Db2Constants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(TABLE_ALIAS_PREFIX, 0))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -670,7 +671,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -644,7 +644,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(EsSqlLConstants.KEYWORD_TABLE, table))
@@ -721,7 +721,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -580,7 +580,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(HiveConstants.KEYWORD_TABLE, table))
@@ -653,7 +653,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -577,7 +577,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(ImpalaConstants.KEYWORD_TABLE, table))
@@ -650,7 +650,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -583,7 +583,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(MongoConstants.KEYWORD_TABLE, table))
@@ -659,7 +659,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -586,7 +586,7 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(MySQLConstants.KEYWORD_TABLE, table))
@@ -659,7 +659,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -633,12 +633,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(OracleConstants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(OracleConstants.ALIAS_FIX, String.format(TABLE_ALIAS_PREFIX, 0)))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -705,7 +706,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -549,12 +549,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(PgConstants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(TABLE_ALIAS_PREFIX, 0))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -622,7 +623,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -637,12 +637,13 @@ public String searchTable(String table) {
     }
 
     @Override
-    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
+    public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view, Datasource ds) {
         // 字段汇总 排序等
         SQLObj tableObj = SQLObj.builder()
                 .tableName((table.startsWith("(") && table.endsWith(")")) ? table : String.format(SqlServerSQLConstants.KEYWORD_TABLE, table))
                 .tableAlias(String.format(TABLE_ALIAS_PREFIX, 0))
                 .build();
+        setSchema(tableObj, ds);
         List<SQLObj> yFields = new ArrayList<>();
         List<String> yWheres = new ArrayList<>();
         List<SQLObj> yOrders = new ArrayList<>();
@@ -714,7 +715,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
 
     @Override
     public String getSQLSummaryAsTmp(String sql, List<ChartViewFieldDTO> yAxis, List<ChartFieldCustomFilterDTO> fieldCustomFilter, List<ChartExtFilterRequest> extFilterRequestList, ChartViewWithBLOBs view) {
-        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view);
+        return getSQLSummary("(" + sqlFix(sql) + ")", yAxis, fieldCustomFilter, extFilterRequestList, view, null);
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -559,7 +559,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             if (StringUtils.equalsIgnoreCase(table.getType(), "db")) {
                 datasourceRequest.setTable(dataTableInfoDTO.getTable());
                 if (StringUtils.equalsIgnoreCase("text", view.getType()) || StringUtils.equalsIgnoreCase("gauge", view.getType()) || StringUtils.equalsIgnoreCase("liquid", view.getType())) {
-                    datasourceRequest.setQuery(qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, extFilterList, view));
+                    datasourceRequest.setQuery(qp.getSQLSummary(dataTableInfoDTO.getTable(), yAxis, fieldCustomFilter, extFilterList, view, ds));
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "stack")) {
                     datasourceRequest.setQuery(qp.getSQLStack(dataTableInfoDTO.getTable(), xAxis, yAxis, fieldCustomFilter, extFilterList, extStack, ds, view));
                 } else if (StringUtils.containsIgnoreCase(view.getType(), "scatter")) {
@@ -623,7 +623,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             datasourceRequest.setTable(tableName);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
             if (StringUtils.equalsIgnoreCase("text", view.getType()) || StringUtils.equalsIgnoreCase("gauge", view.getType()) || StringUtils.equalsIgnoreCase("liquid", view.getType())) {
-                datasourceRequest.setQuery(qp.getSQLSummary(tableName, yAxis, fieldCustomFilter, extFilterList, view));
+                datasourceRequest.setQuery(qp.getSQLSummary(tableName, yAxis, fieldCustomFilter, extFilterList, view, ds));
             } else if (StringUtils.containsIgnoreCase(view.getType(), "stack")) {
                 datasourceRequest.setQuery(qp.getSQLStack(tableName, xAxis, yAxis, fieldCustomFilter, extFilterList, extStack, ds, view));
             } else if (StringUtils.containsIgnoreCase(view.getType(), "scatter")) {

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtChartViewMapper.java
Patch:
@@ -45,4 +45,7 @@ public interface ExtChartViewMapper {
 
     void copyCacheToView(@Param("viewIds") List<String> viewIds );
 
+    int updateToCache(@Param("viewId") String viewId );
+
+    void copyCache(@Param("sourceViewId") String sourceViewId,@Param("newViewId") String newViewId);
 }

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtChartViewMapper.java
Patch:
@@ -45,4 +45,7 @@ public interface ExtChartViewMapper {
 
     void copyCacheToView(@Param("viewIds") List<String> viewIds );
 
+    int updateToCache(@Param("viewId") String viewId );
+
+    void copyCache(@Param("sourceViewId") String sourceViewId,@Param("newViewId") String newViewId);
 }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -367,11 +367,10 @@ public List<String> getSchema(DatasourceRequest datasourceRequest) throws Except
     public String checkStatus(DatasourceRequest datasourceRequest) throws Exception {
         String queryStr = getTablesSql(datasourceRequest);
         try (Connection con = getConnection(datasourceRequest); Statement statement = con.createStatement(); ResultSet resultSet = statement.executeQuery(queryStr)) {
-            return "Success";
         } catch (Exception e) {
             DataEaseException.throwException(e.getMessage());
         }
-        return "Error";
+        return "Success";
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -191,6 +191,7 @@ public void updateDatasource(UpdataDsRequest updataDsRequest)throws Exception{
         datasource.setDesc(updataDsRequest.getDesc());
         datasource.setConfiguration(updataDsRequest.getConfiguration());
         datasource.setCreateTime(null);
+        datasource.setType(updataDsRequest.getType());
         datasource.setUpdateTime(System.currentTimeMillis());
         checkAndUpdateDatasourceStatus(datasource);
         DatasourceExample example = new DatasourceExample();

File: backend/src/main/java/io/dataease/controller/dataset/DataSetGroupController.java
Patch:
@@ -32,8 +32,6 @@ public class DataSetGroupController {
     @Resource
     private DataSetGroupService dataSetGroupService;
     @Resource
-    private ExtractDataService extractDataService;
-    @Resource
     private KettleService kettleService;
 
     @DePermissions(value = {

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -812,8 +812,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -858,8 +858,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -794,8 +794,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/impala/ImpalaQueryProvider.java
Patch:
@@ -791,8 +791,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/mongodb/MongoQueryProvider.java
Patch:
@@ -776,8 +776,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -799,8 +799,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/oracle/OracleQueryProvider.java
Patch:
@@ -850,8 +850,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -825,8 +825,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -758,8 +758,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = PgConstants.WHERE_VALUE_NULL;
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_null")) {
                         whereTerm = String.format(whereTerm, originName);
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -859,8 +859,8 @@ public String transCustomFilterList(SQLObj tableObj, List<ChartFieldCustomFilter
                         whereValue = "''";
                     } else if (StringUtils.equalsIgnoreCase(filterItemDTO.getTerm(), "not_empty")) {
                         whereValue = "''";
-                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in")) {
-                        whereValue = "('" + StringUtils.join(value, "','") + "')";
+                    } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "in") || StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "not in")) {
+                        whereValue = "('" + String.join("','", value.split(",")) + "')";
                     } else if (StringUtils.containsIgnoreCase(filterItemDTO.getTerm(), "like")) {
                         whereValue = "'%" + value + "%'";
                     } else {

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -45,11 +45,11 @@ public class DataSetGroupService {
 
     @DeCleaner(DePermissionType.DATASET)
     public DataSetGroupDTO save(DatasetGroup datasetGroup) throws Exception {
-        if (StringUtils.isEmpty(datasetGroup.getType())) {
-            throw new Exception("type can not be empty");
-        }
         checkName(datasetGroup);
         if (StringUtils.isEmpty(datasetGroup.getId())) {
+            if (StringUtils.isEmpty(datasetGroup.getType())) {
+                throw new Exception("type can not be empty");
+            }
             datasetGroup.setId(UUID.randomUUID().toString());
             datasetGroup.setCreateBy(AuthUtils.getUser().getUsername());
             datasetGroup.setCreateTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -57,7 +57,7 @@ public class DatasourceService {
     private DataSetGroupService dataSetGroupService;
     @Resource
     private CommonThreadPool commonThreadPool;
-    private static List<String> dsTypes = Arrays.asList("excel", "mysql", "hive", "impala", "mariadb", "ds_doris", "pg", "sqlServer", "oracle", "mongo", "ck", "db2", "es", "redshift", "api");
+    private static List<String> dsTypes = Arrays.asList("TiDB", "StarRocks", "excel", "mysql", "hive", "impala", "mariadb", "ds_doris", "pg", "sqlServer", "oracle", "mongo", "ck", "db2", "es", "redshift", "api");
 
     @DeCleaner(DePermissionType.DATASOURCE)
     public Datasource addDatasource(Datasource datasource) throws Exception{

File: backend/src/main/java/io/dataease/provider/DDLProviderImpl.java
Patch:
@@ -2,10 +2,10 @@
 
 import io.dataease.base.domain.DatasetTableField;
 import io.dataease.base.domain.Datasource;
-import io.dataease.commons.utils.Md5Utils;
 
 import java.util.Arrays;
 import java.util.List;
+import java.util.UUID;
 
 public class DDLProviderImpl extends DDLProvider {
     @Override
@@ -40,7 +40,7 @@ public String insertSql(String name, List<String[]> dataList, int page, int page
 
         Integer realSize = page * pageNumber < dataList.size() ? page * pageNumber : dataList.size();
         for (String[] strings : dataList.subList((page - 1) * pageNumber, realSize)) {
-            values.append("('").append(Md5Utils.md5(String.join(",", Arrays.asList(strings))))
+            values.append("('").append(UUID.randomUUID())
                     .append("','" ).append(String.join("','", Arrays.asList(strings)))
                     .append("'),");
         }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -291,6 +291,8 @@ public String panelGroupCopy(PanelGroupRequest request, String newPanelId, boole
         extChartViewMapper.chartCopyWithPanel(copyId);
         //TODO 替换panel_data viewId 数据
         List<PanelView> panelViewList = panelViewService.findPanelViews(copyId);
+        //TODO 复制模板缓存数据
+        extPanelGroupExtendDataMapper.copyWithCopyId(copyId);
         if (CollectionUtils.isNotEmpty(panelViewList)) {
             String panelData = newPanel.getPanelData();
             //TODO 替换panel_data viewId 数据  并保存

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -291,6 +291,8 @@ public String panelGroupCopy(PanelGroupRequest request, String newPanelId, boole
         extChartViewMapper.chartCopyWithPanel(copyId);
         //TODO 替换panel_data viewId 数据
         List<PanelView> panelViewList = panelViewService.findPanelViews(copyId);
+        //TODO 复制模板缓存数据
+        extPanelGroupExtendDataMapper.copyWithCopyId(copyId);
         if (CollectionUtils.isNotEmpty(panelViewList)) {
             String panelData = newPanel.getPanelData();
             //TODO 替换panel_data viewId 数据  并保存

File: backend/src/main/java/io/dataease/auth/aop/DePermissionAnnotationHandler.java
Patch:
@@ -41,6 +41,7 @@ public Object PermissionsAround(ProceedingJoinPoint point) throws Throwable{
             DePermission[] dePermissions = annotation.value();
             Object[] args = point.getArgs();
             if (logical == Logical.AND) {
+                access = true;
                 for (int i = 0; i < dePermissions.length; i++) {
                     DePermission permission = dePermissions[i];
                     boolean currentAccess = access(args[permission.paramIndex()], permission, 0);

File: backend/src/main/java/io/dataease/auth/aop/DePermissionAnnotationHandler.java
Patch:
@@ -41,6 +41,7 @@ public Object PermissionsAround(ProceedingJoinPoint point) throws Throwable{
             DePermission[] dePermissions = annotation.value();
             Object[] args = point.getArgs();
             if (logical == Logical.AND) {
+                access = true;
                 for (int i = 0; i < dePermissions.length; i++) {
                     DePermission permission = dePermissions[i];
                     boolean currentAccess = access(args[permission.paramIndex()], permission, 0);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -803,7 +803,7 @@ private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fi
         pluginViewParam.setPluginChartFieldCustomFilters(fieldFilters);
         pluginViewParam.setPluginChartExtFilters(panelFilters);
         pluginViewParam.setPluginViewLimit(pluginViewLimit);
-        pluginViewParam.setUserId(AuthUtils.getUser().getUserId());
+        // pluginViewParam.setUserId(AuthUtils.getUser().getUserId());
         return pluginViewParam;
     }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -803,7 +803,7 @@ private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fi
         pluginViewParam.setPluginChartFieldCustomFilters(fieldFilters);
         pluginViewParam.setPluginChartExtFilters(panelFilters);
         pluginViewParam.setPluginViewLimit(pluginViewLimit);
-        pluginViewParam.setUserId(AuthUtils.getUser().getUserId());
+        // pluginViewParam.setUserId(AuthUtils.getUser().getUserId());
         return pluginViewParam;
     }
 

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1078,6 +1078,9 @@ private String getYWheres(ChartViewFieldDTO y, String originField, String fieldA
         return CollectionUtils.isNotEmpty(list) ? "(" + String.join(" " + getLogic(y.getLogic()) + " ", strList) + ")" : null;
     }
 
+    private String reflectFieldName(DatasetTableField field) {
+        return field.getDataeaseName();
+    }
     private String calcFieldRegex(String originField, SQLObj tableObj) {
         originField = originField.replaceAll("[\\t\\n\\r]]", "");
         // 正则提取[xxx]

File: backend/src/main/java/io/dataease/provider/engine/doris/DorisQueryProvider.java
Patch:
@@ -1078,6 +1078,9 @@ private String getYWheres(ChartViewFieldDTO y, String originField, String fieldA
         return CollectionUtils.isNotEmpty(list) ? "(" + String.join(" " + getLogic(y.getLogic()) + " ", strList) + ")" : null;
     }
 
+    private String reflectFieldName(DatasetTableField field) {
+        return field.getDataeaseName();
+    }
     private String calcFieldRegex(String originField, SQLObj tableObj) {
         originField = originField.replaceAll("[\\t\\n\\r]]", "");
         // 正则提取[xxx]

File: backend/src/main/java/io/dataease/controller/dataset/DataSetGroupController.java
Patch:
@@ -42,7 +42,7 @@ public class DataSetGroupController {
     }, logical = Logical.AND)
     @ApiOperation("保存")
     @PostMapping("/save")
-    public DataSetGroupDTO save(@RequestBody DatasetGroup datasetGroup) {
+    public DataSetGroupDTO save(@RequestBody DatasetGroup datasetGroup) throws Exception {
         return dataSetGroupService.save(datasetGroup);
     }
 

File: backend/src/main/java/io/dataease/controller/dataset/DataSetGroupController.java
Patch:
@@ -42,7 +42,7 @@ public class DataSetGroupController {
     }, logical = Logical.AND)
     @ApiOperation("保存")
     @PostMapping("/save")
-    public DataSetGroupDTO save(@RequestBody DatasetGroup datasetGroup) {
+    public DataSetGroupDTO save(@RequestBody DatasetGroup datasetGroup) throws Exception {
         return dataSetGroupService.save(datasetGroup);
     }
 

File: backend/src/main/java/io/dataease/base/domain/Datasource.java
Patch:
@@ -9,11 +9,11 @@
 public class Datasource implements Serializable {
     @ApiModelProperty("ID")
     private String id;
-    @ApiModelProperty("名称")
+    @ApiModelProperty(value = "名称",required = true)
     private String name;
     @ApiModelProperty("描述")
     private String desc;
-    @ApiModelProperty("类型")
+    @ApiModelProperty(value = "类型", required = true)
     private String type;
     @ApiModelProperty("创建时间")
     private Long createTime;
@@ -23,7 +23,7 @@ public class Datasource implements Serializable {
     private String createBy;
     @ApiModelProperty("状态")
     private String status;
-    @ApiModelProperty("配置详情")
+    @ApiModelProperty(value = "配置详情", required = true)
     private String configuration;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/dataease/base/domain/DeEngine.java
Patch:
@@ -1,6 +1,8 @@
 package io.dataease.base.domain;
 
 import java.io.Serializable;
+
+import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 @Data
@@ -21,6 +23,7 @@ public class DeEngine implements Serializable {
 
     private String status;
 
+    @ApiModelProperty(value = "详细信息", required = true)
     private String configuration;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -853,6 +853,9 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
 
     public Map<String, Object> getSQLPreview(DataSetTableRequest dataSetTableRequest) throws Exception {
         Datasource ds = datasourceMapper.selectByPrimaryKey(dataSetTableRequest.getDataSourceId());
+        if(ds == null){
+            throw new Exception(Translator.get("i18n_invalid_ds"));
+        }
         DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(ds);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -784,6 +784,7 @@ private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fi
         PluginViewParam pluginViewParam = new PluginViewParam();
         PluginViewSet pluginViewSet = BeanUtils.copyBean(new PluginViewSet(), table);
         pluginViewSet.setDsType(ds.getType());
+        pluginViewSet.setTabelId(table.getId());
         PluginViewLimit pluginViewLimit = BeanUtils.copyBean(new PluginViewLimit(), view);
 
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -784,6 +784,7 @@ private PluginViewParam buildPluginParam(Map<String, List<ChartViewFieldDTO>> fi
         PluginViewParam pluginViewParam = new PluginViewParam();
         PluginViewSet pluginViewSet = BeanUtils.copyBean(new PluginViewSet(), table);
         pluginViewSet.setDsType(ds.getType());
+        pluginViewSet.setTabelId(table.getId());
         PluginViewLimit pluginViewLimit = BeanUtils.copyBean(new PluginViewLimit(), view);
 
 

File: backend/src/main/java/io/dataease/dto/datasource/MysqlConfiguration.java
Patch:
@@ -9,7 +9,7 @@
 public class MysqlConfiguration extends JdbcConfiguration {
 
     private String driver = "com.mysql.jdbc.Driver";
-    private String extraParams = "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true";
+    private String extraParams = "characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull";
 
     public String getJdbc() {
         if(StringUtils.isEmpty(extraParams.trim())){

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlDDLProvider.java
Patch:
@@ -22,7 +22,7 @@ public class MysqlDDLProvider extends DDLProviderImpl {
 
     @Override
     public String createView(String name, String viewSQL) {
-        return "CREATE VIEW IF NOT EXISTS " + name + " AS (" + viewSQL + ")";
+        return "CREATE or replace view " + name + " AS (" + viewSQL + ")";
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -603,7 +603,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             } else {
                 datasourceRequest.setQuery(qp.getSQL(tableName, xAxis, yAxis, fieldCustomFilter, extFilterList, ds, view));
             }
-            // 仪表板有参数不实用缓存
+            // 仪表板有参数不使用缓存
             if (!cache || CollectionUtils.isNotEmpty(requestList.getFilter())
                     || CollectionUtils.isNotEmpty(requestList.getLinkageFilters())
                     || CollectionUtils.isNotEmpty(requestList.getDrill()) || CollectionUtils.isNotEmpty(rowPermissionFields) || fields.size() != columnPermissionFields.size()) {

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Collectors;
@@ -113,7 +114,8 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
     }
     private Map<String, String> config(OidcXpackService oidcXpackService) {
         List<SysSettingDto> sysSettingDtos = oidcXpackService.oidcSettings();
-        Map<String, String> config = sysSettingDtos.stream().collect(Collectors.toMap(SysSettingDto::getParamKey, SysSettingDto::getParamValue));
+        Map<String, String> config = sysSettingDtos.stream().collect(HashMap::new,(m, v)->m.put(v.getParamKey(), v.getParamValue()), HashMap::putAll);
+
         return config;
     }
     

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Collectors;
@@ -113,7 +114,8 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
     }
     private Map<String, String> config(OidcXpackService oidcXpackService) {
         List<SysSettingDto> sysSettingDtos = oidcXpackService.oidcSettings();
-        Map<String, String> config = sysSettingDtos.stream().collect(Collectors.toMap(SysSettingDto::getParamKey, SysSettingDto::getParamValue));
+        Map<String, String> config = sysSettingDtos.stream().collect(HashMap::new,(m, v)->m.put(v.getParamKey(), v.getParamValue()), HashMap::putAll);
+
         return config;
     }
     

File: backend/src/main/java/io/dataease/base/mapper/ext/HomeMapper.java
Patch:
@@ -1,15 +1,16 @@
 package io.dataease.base.mapper.ext;
 
 import io.dataease.mobile.dto.HomeItemDTO;
+import io.dataease.mobile.dto.HomeItemShareDTO;
+
 import java.util.List;
 import java.util.Map;
 
 public interface HomeMapper {
 
-
     List<HomeItemDTO> queryStore(Map<String, Object> param);
 
     List<HomeItemDTO> queryHistory();
 
-    List<HomeItemDTO> queryShare(Map<String, Object> param);
+    List<HomeItemShareDTO> queryShare(Map<String, Object> param);
 }

File: backend/src/main/java/io/dataease/mobile/api/HomeApi.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.commons.utils.Pager;
 import io.dataease.mobile.dto.HomeItemDTO;
+import io.dataease.mobile.dto.HomeItemShareDTO;
 import io.dataease.mobile.dto.HomeRequest;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
@@ -15,6 +16,8 @@ public interface HomeApi {
     @PostMapping("/query")
     Pager<List<HomeItemDTO>> query(@RequestBody HomeRequest request);
 
+    @PostMapping("/queryShares")
+    Pager<List<HomeItemShareDTO>> queryShares(@RequestBody HomeRequest request);
 
     @PostMapping("/detail/{id}")
     Object detail(@PathVariable String id);

File: backend/src/main/java/io/dataease/base/mapper/ext/HomeMapper.java
Patch:
@@ -1,15 +1,16 @@
 package io.dataease.base.mapper.ext;
 
 import io.dataease.mobile.dto.HomeItemDTO;
+import io.dataease.mobile.dto.HomeItemShareDTO;
+
 import java.util.List;
 import java.util.Map;
 
 public interface HomeMapper {
 
-
     List<HomeItemDTO> queryStore(Map<String, Object> param);
 
     List<HomeItemDTO> queryHistory();
 
-    List<HomeItemDTO> queryShare(Map<String, Object> param);
+    List<HomeItemShareDTO> queryShare(Map<String, Object> param);
 }

File: backend/src/main/java/io/dataease/mobile/api/HomeApi.java
Patch:
@@ -2,6 +2,7 @@
 
 import io.dataease.commons.utils.Pager;
 import io.dataease.mobile.dto.HomeItemDTO;
+import io.dataease.mobile.dto.HomeItemShareDTO;
 import io.dataease.mobile.dto.HomeRequest;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
@@ -15,6 +16,8 @@ public interface HomeApi {
     @PostMapping("/query")
     Pager<List<HomeItemDTO>> query(@RequestBody HomeRequest request);
 
+    @PostMapping("/queryShares")
+    Pager<List<HomeItemShareDTO>> queryShares(@RequestBody HomeRequest request);
 
     @PostMapping("/detail/{id}")
     Object detail(@PathVariable String id);

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -10,6 +10,7 @@
 import io.dataease.dto.chart.ChartFieldCustomFilterDTO;
 import io.dataease.dto.chart.ChartViewFieldDTO;
 import io.dataease.dto.sqlObj.SQLObj;
+import io.dataease.plugins.common.constants.engine.MysqlConstants;
 import io.dataease.provider.QueryProvider;
 import io.dataease.plugins.common.constants.SQLConstants;
 import org.apache.commons.collections4.CollectionUtils;

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -32,6 +32,7 @@
 @Service
 public class ViewPluginBaseServiceImpl implements ViewPluginBaseService {
 
+    private static Gson gson = new Gson();
 
     @Resource
     private DataSetTableUnionService dataSetTableUnionService;
@@ -67,7 +68,7 @@ public String customWhere(String dsType, List<PluginChartFieldCustomFilter> list
         QueryProvider queryProvider = ProviderFactory.getQueryProvider(dsType);
         String methodName = "transCustomFilterList";
         SQLObj sqlObj = BeanUtils.copyBean(SQLObj.builder().build(), pluginViewSQL);
-        List<ChartFieldCustomFilterDTO> filters = list.stream().map(item -> BeanUtils.copyBean(new ChartFieldCustomFilterDTO(), item)).collect(Collectors.toList());
+        List<ChartFieldCustomFilterDTO> filters = list.stream().map(item -> gson.fromJson(gson.toJson(item), ChartFieldCustomFilterDTO.class)).collect(Collectors.toList());
         Object o ;
         if ((o = execProviderMethod(queryProvider, methodName, sqlObj, filters)) != null) {
             return (String)o;
@@ -80,7 +81,7 @@ public String panelWhere(String dsType, List<PluginChartExtFilter> list, PluginV
         QueryProvider queryProvider = ProviderFactory.getQueryProvider(dsType);
         String methodName = "transExtFilterList";
         SQLObj sqlObj = BeanUtils.copyBean(SQLObj.builder().build(), pluginViewSQL);
-        List<ChartExtFilterRequest> filters = list.stream().map(item -> BeanUtils.copyBean(new ChartExtFilterRequest(), item)).collect(Collectors.toList());
+        List<ChartExtFilterRequest> filters = list.stream().map(item -> gson.fromJson(gson.toJson(item), ChartExtFilterRequest.class)).collect(Collectors.toList());
         Object o;
         if ((o = execProviderMethod(queryProvider, methodName, sqlObj, filters)) != null) {
             return (String)o;

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlQueryProvider.java
Patch:
@@ -10,6 +10,7 @@
 import io.dataease.dto.chart.ChartFieldCustomFilterDTO;
 import io.dataease.dto.chart.ChartViewFieldDTO;
 import io.dataease.dto.sqlObj.SQLObj;
+import io.dataease.plugins.common.constants.engine.MysqlConstants;
 import io.dataease.provider.QueryProvider;
 import io.dataease.plugins.common.constants.SQLConstants;
 import org.apache.commons.collections4.CollectionUtils;

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -32,6 +32,7 @@
 @Service
 public class ViewPluginBaseServiceImpl implements ViewPluginBaseService {
 
+    private static Gson gson = new Gson();
 
     @Resource
     private DataSetTableUnionService dataSetTableUnionService;
@@ -67,7 +68,7 @@ public String customWhere(String dsType, List<PluginChartFieldCustomFilter> list
         QueryProvider queryProvider = ProviderFactory.getQueryProvider(dsType);
         String methodName = "transCustomFilterList";
         SQLObj sqlObj = BeanUtils.copyBean(SQLObj.builder().build(), pluginViewSQL);
-        List<ChartFieldCustomFilterDTO> filters = list.stream().map(item -> BeanUtils.copyBean(new ChartFieldCustomFilterDTO(), item)).collect(Collectors.toList());
+        List<ChartFieldCustomFilterDTO> filters = list.stream().map(item -> gson.fromJson(gson.toJson(item), ChartFieldCustomFilterDTO.class)).collect(Collectors.toList());
         Object o ;
         if ((o = execProviderMethod(queryProvider, methodName, sqlObj, filters)) != null) {
             return (String)o;
@@ -80,7 +81,7 @@ public String panelWhere(String dsType, List<PluginChartExtFilter> list, PluginV
         QueryProvider queryProvider = ProviderFactory.getQueryProvider(dsType);
         String methodName = "transExtFilterList";
         SQLObj sqlObj = BeanUtils.copyBean(SQLObj.builder().build(), pluginViewSQL);
-        List<ChartExtFilterRequest> filters = list.stream().map(item -> BeanUtils.copyBean(new ChartExtFilterRequest(), item)).collect(Collectors.toList());
+        List<ChartExtFilterRequest> filters = list.stream().map(item -> gson.fromJson(gson.toJson(item), ChartExtFilterRequest.class)).collect(Collectors.toList());
         Object o;
         if ((o = execProviderMethod(queryProvider, methodName, sqlObj, filters)) != null) {
             return (String)o;

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -16,7 +16,6 @@
 import io.dataease.plugins.view.service.ViewPluginBaseService;
 import io.dataease.provider.ProviderFactory;
 import io.dataease.provider.QueryProvider;
-import io.dataease.provider.datasource.DatasourceProvider;
 import io.dataease.service.dataset.DataSetTableService;
 import io.dataease.service.dataset.DataSetTableUnionService;
 import org.apache.commons.lang3.ObjectUtils;

File: backend/src/main/java/io/dataease/service/chart/ViewPluginBaseServiceImpl.java
Patch:
@@ -16,7 +16,6 @@
 import io.dataease.plugins.view.service.ViewPluginBaseService;
 import io.dataease.provider.ProviderFactory;
 import io.dataease.provider.QueryProvider;
-import io.dataease.provider.datasource.DatasourceProvider;
 import io.dataease.service.dataset.DataSetTableService;
 import io.dataease.service.dataset.DataSetTableUnionService;
 import org.apache.commons.lang3.ObjectUtils;

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -100,6 +100,8 @@ enum CellDataType {
      */
     private String formatString;
 
+
+
     //定义前一个元素和当前元素的位置，用来计算其中空的单元格数量，如A6和A8等
     private String preRef = null, ref = null;
 

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -172,7 +172,7 @@ public ExcelFileData excelUpload(@RequestParam("file") MultipartFile file, @Requ
     @ApiOperation("检测doris")
     @PostMapping("checkDorisTableIsExists/{id}")
     public Boolean checkDorisTableIsExists(@PathVariable String id) throws Exception {
-        return dataSetTableService.checkDorisTableIsExists(id);
+        return dataSetTableService.checkEngineTableIsExists(id);
     }
 
     @ApiOperation("搜索")

File: backend/src/main/java/io/dataease/provider/DDLProviderImpl.java
Patch:
@@ -39,9 +39,9 @@ public String insertSql(String name, List<String[]> dataList, int page, int page
 
         Integer realSize = page * pageNumber < dataList.size() ? page * pageNumber : dataList.size();
         for (String[] strings : dataList.subList((page - 1) * pageNumber, realSize)) {
-            values.append("(").append(Md5Utils.md5(String.join(",", Arrays.asList(strings))))
-                    .append("," ).append(String.join(",", Arrays.asList(strings)))
-                    .append("),");
+            values.append("('").append(Md5Utils.md5(String.join(",", Arrays.asList(strings))))
+                    .append("','" ).append(String.join("','", Arrays.asList(strings)))
+                    .append("'),");
         }
         return insertSql + values.substring(0, values.length() - 1);
     }

File: backend/src/main/java/io/dataease/provider/engine/mysql/MysqlConstants.java
Patch:
@@ -25,7 +25,7 @@ public class MysqlConstants extends SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";
 
-    public static final String DEFAULT_INT_FORMAT = "BIGINT";
+    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(20,2)";
 

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -323,7 +323,6 @@ public void initAllDataSourceConnectionPool() {
         List<Datasource> datasources = datasourceMapper.selectByExampleWithBLOBs(new DatasourceExample());
         datasources.forEach(datasource -> {
             commonThreadPool.addTask(()->{
-                System.out.println(System.currentTimeMillis());
                 try {
                     handleConnectionPool(datasource, "add");
                 } catch (Exception e) {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -119,9 +119,9 @@ public class ExtractDataService {
 
     private static final String dropTableSql = "DROP TABLE IF EXISTS TABLE_NAME;";
     private static final String shellScript = "result=`curl --location-trusted -u %s:%s -H \"label:%s\" -H \"column_separator:%s\" -H \"columns:%s\" -H \"merge_type: %s\" -T %s -XPUT http://%s:%s/api/%s/%s/_stream_load`\n" +
-            "if [ $? == 0 ] ; then\n" +
+            "if [ $? -eq 0 ] ; then\n" +
             "  failstatus=$(echo $result | grep '\"Status\": \"Fail\"')\n" +
-            "  if [[ \"$failstatus\" != \"\" ]]; then\n" +
+            "  if [ \"x${failstatus}\" != \"x\" ];then" +
             "     echo $result\n" +
             "     exit 1\n" +
             "  fi\n" +

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -119,9 +119,9 @@ public class ExtractDataService {
 
     private static final String dropTableSql = "DROP TABLE IF EXISTS TABLE_NAME;";
     private static final String shellScript = "result=`curl --location-trusted -u %s:%s -H \"label:%s\" -H \"column_separator:%s\" -H \"columns:%s\" -H \"merge_type: %s\" -T %s -XPUT http://%s:%s/api/%s/%s/_stream_load`\n" +
-            "if [ $? == 0 ] ; then\n" +
+            "if [ $? -eq 0 ] ; then\n" +
             "  failstatus=$(echo $result | grep '\"Status\": \"Fail\"')\n" +
-            "  if [[ \"$failstatus\" != \"\" ]]; then\n" +
+            "  if [ \"x${failstatus}\" != \"x\" ];then" +
             "     echo $result\n" +
             "     exit 1\n" +
             "  fi\n" +

File: backend/src/main/java/io/dataease/auth/entity/SysUserEntity.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.auth.entity;
 
-
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
@@ -39,4 +38,7 @@ public class SysUserEntity implements Serializable {
 
     @ApiModelProperty(hidden = true)
     private Boolean isAdmin;
+
+    @ApiModelProperty(hidden = true)
+    private Integer from;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -141,7 +141,7 @@ public CurrentUserDto userInfo() {
     @Override
     public Boolean useInitPwd() {
         CurrentUserDto user = AuthUtils.getUser();
-        if (null == user) {
+        if (null == user || 0 != user.getFrom()) {
             return false;
         }
         String md5 = CodingUtil.md5(DEFAULT_PWD);

File: backend/src/main/java/io/dataease/auth/entity/SysUserEntity.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.auth.entity;
 
-
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
@@ -39,4 +38,7 @@ public class SysUserEntity implements Serializable {
 
     @ApiModelProperty(hidden = true)
     private Boolean isAdmin;
+
+    @ApiModelProperty(hidden = true)
+    private Integer from;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -141,7 +141,7 @@ public CurrentUserDto userInfo() {
     @Override
     public Boolean useInitPwd() {
         CurrentUserDto user = AuthUtils.getUser();
-        if (null == user) {
+        if (null == user || 0 != user.getFrom()) {
             return false;
         }
         String md5 = CodingUtil.md5(DEFAULT_PWD);

File: backend/src/main/java/io/dataease/auth/entity/SysUserEntity.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.auth.entity;
 
-
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
@@ -39,4 +38,7 @@ public class SysUserEntity implements Serializable {
 
     @ApiModelProperty(hidden = true)
     private Boolean isAdmin;
+
+    @ApiModelProperty(hidden = true)
+    private Integer from;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -141,7 +141,7 @@ public CurrentUserDto userInfo() {
     @Override
     public Boolean useInitPwd() {
         CurrentUserDto user = AuthUtils.getUser();
-        if (null == user) {
+        if (null == user || 0 != user.getFrom()) {
             return false;
         }
         String md5 = CodingUtil.md5(DEFAULT_PWD);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -606,7 +606,7 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
             case mysql:
             case mariadb:
                 JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
-                return String.format("SELECT TABLE_NAME,TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
+                return String.format("SELECT TABLE_NAME,TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
             case de_doris:
             case ds_doris:
             case hive:
@@ -658,8 +658,6 @@ private String getViewSql(DatasourceRequest datasourceRequest) throws Exception
             case mariadb:
             case de_doris:
             case ds_doris:
-                JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
-                return String.format("SELECT TABLE_NAME,'' FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
             case ck:
                 return null;
             case sqlServer:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -606,7 +606,7 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
             case mysql:
             case mariadb:
                 JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
-                return String.format("SELECT TABLE_NAME,TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
+                return String.format("SELECT TABLE_NAME,TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
             case de_doris:
             case ds_doris:
             case hive:
@@ -658,8 +658,6 @@ private String getViewSql(DatasourceRequest datasourceRequest) throws Exception
             case mariadb:
             case de_doris:
             case ds_doris:
-                JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
-                return String.format("SELECT TABLE_NAME,'' FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
             case ck:
                 return null;
             case sqlServer:

File: backend/src/main/java/io/dataease/auth/aop/DePermissionAnnotationHandler.java
Patch:
@@ -68,7 +68,7 @@ public Object PermissionsAround(ProceedingJoinPoint point) {
             return point.proceed(point.getArgs());
         } catch (Throwable throwable) {
             LogUtil.error(throwable.getMessage(), throwable);
-            throw new RuntimeException(throwable);
+            throw new RuntimeException(throwable.getMessage());
         }
     }
 

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -658,6 +658,8 @@ private String getViewSql(DatasourceRequest datasourceRequest) throws Exception
             case mariadb:
             case de_doris:
             case ds_doris:
+                JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
+                return String.format("SELECT TABLE_NAME,'' FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
             case ck:
                 return null;
             case sqlServer:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -658,6 +658,8 @@ private String getViewSql(DatasourceRequest datasourceRequest) throws Exception
             case mariadb:
             case de_doris:
             case ds_doris:
+                JdbcConfiguration jdbcConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), JdbcConfiguration.class);
+                return String.format("SELECT TABLE_NAME,'' FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '%s' ;", jdbcConfiguration.getDataBase());
             case ck:
                 return null;
             case sqlServer:

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -104,7 +104,6 @@ public DataSetTableDTO getWithPermission(@PathVariable String id) {
         return dataSetTableService.getWithPermission(id, null);
     }
 
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_USE, value = "dataSourceId")
     @ApiOperation("查询原始字段")
     @PostMapping("getFields")
     public List<TableField> getFields(@RequestBody DatasetTable datasetTable) throws Exception {
@@ -125,14 +124,12 @@ public Map<String, Object> getPreviewData(@RequestBody DataSetTableRequest dataS
         return dataSetTableService.getPreviewData(dataSetTableRequest, page, pageSize, null);
     }
 
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_USE, value = "dataSourceId")
     @ApiOperation("根据sql查询预览数据")
     @PostMapping("sqlPreview")
     public Map<String, Object> getSQLPreview(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {
         return dataSetTableService.getSQLPreview(dataSetTableRequest);
     }
 
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_USE, value = "dataSourceId")
     @ApiOperation("预览自定义数据数据")
     @PostMapping("customPreview")
     public Map<String, Object> customPreview(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -104,7 +104,6 @@ public DataSetTableDTO getWithPermission(@PathVariable String id) {
         return dataSetTableService.getWithPermission(id, null);
     }
 
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_USE, value = "dataSourceId")
     @ApiOperation("查询原始字段")
     @PostMapping("getFields")
     public List<TableField> getFields(@RequestBody DatasetTable datasetTable) throws Exception {
@@ -125,14 +124,12 @@ public Map<String, Object> getPreviewData(@RequestBody DataSetTableRequest dataS
         return dataSetTableService.getPreviewData(dataSetTableRequest, page, pageSize, null);
     }
 
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_USE, value = "dataSourceId")
     @ApiOperation("根据sql查询预览数据")
     @PostMapping("sqlPreview")
     public Map<String, Object> getSQLPreview(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {
         return dataSetTableService.getSQLPreview(dataSetTableRequest);
     }
 
-    @DePermission(type = DePermissionType.DATASOURCE, level = ResourceAuthLevel.DATASOURCE_LEVEL_USE, value = "dataSourceId")
     @ApiOperation("预览自定义数据数据")
     @PostMapping("customPreview")
     public Map<String, Object> customPreview(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -283,7 +283,6 @@ public String panelGroupCopy(PanelGroupRequest request, String newPanelId, boole
                 panelData = panelData.replaceAll(panelView.getCopyFromView(), panelView.getChartViewId());
             }
             newPanel.setPanelData(panelData);
-            panelGroupMapper.insertSelective(newPanel);
             //TODO 复制跳转信息 copy panel_link_jump panel_link_jump_info  panel_link_jump_target_view_info
             extPanelLinkJumpMapper.copyLinkJump(copyId);
             extPanelLinkJumpMapper.copyLinkJumpInfo(copyId);
@@ -292,6 +291,7 @@ public String panelGroupCopy(PanelGroupRequest request, String newPanelId, boole
             extPanelViewLinkageMapper.copyViewLinkage(copyId);
             extPanelViewLinkageMapper.copyViewLinkageField(copyId);
         }
+        panelGroupMapper.insertSelective(newPanel);
         return newPanelId;
     }
 

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -20,7 +20,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         // ----------------------------------------------------------
         // 放行Swagger2页面，需要放行这些
 
-        filterChainDefinitionMap.put("/api/data/demo", ANON);
         filterChainDefinitionMap.put("/doc.html**", "doc");
         filterChainDefinitionMap.put("/deApi**", ANON);
         filterChainDefinitionMap.put("/swagger-ui.html", ANON);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -624,7 +624,7 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
                 if (StringUtils.isEmpty(oracleConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "select table_name, owner, comments from all_tab_comments where owner='" + oracleConfiguration.getSchema() + "' AND table_type = 'TABLE'";
+                return "select table_name, owner, comments from all_tab_comments where owner='OWNER' AND table_type = 'TABLE' AND table_name in (select table_name from all_tables where owner='OWNER')".replaceAll("OWNER", oracleConfiguration.getSchema());
             case pg:
                 PgConfiguration pgConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), PgConfiguration.class);
                 if (StringUtils.isEmpty(pgConfiguration.getSchema())) {

File: backend/src/main/java/io/dataease/controller/panel/PanelGroupController.java
Patch:
@@ -68,7 +68,7 @@ public void deleteCircle(@PathVariable String id) {
     @ApiOperation("详细信息")
     @DePermission(type = DePermissionType.PANEL, level = ResourceAuthLevel.PANNEL_LEVEL_VIEW)
     @GetMapping("/findOne/{id}")
-    public PanelGroupWithBLOBs findOne(@PathVariable String id) throws Exception {
+    public PanelGroupDTO findOne(@PathVariable String id) throws Exception {
         return panelGroupService.findOne(id);
     }
 

File: backend/src/main/java/io/dataease/auth/aop/DePermissionProxyHandler.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.auth.aop;
 
-import java.lang.reflect.Array;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.util.Arrays;
@@ -60,7 +59,7 @@ public Object proxyAround(ProceedingJoinPoint point) {
     }
 
     private PermissionProxy getProxy(Object arg, DePermissionProxy annotation, int layer) throws Exception {
-        PermissionProxy result = null;
+        if(null == arg) return null;
         String value = annotation.value();
         Class<?> parameterType = arg.getClass();
         if (arg instanceof PermissionProxy) {

File: backend/src/main/java/io/dataease/auth/aop/DePermissionProxyHandler.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.auth.aop;
 
-import java.lang.reflect.Array;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.util.Arrays;
@@ -60,7 +59,7 @@ public Object proxyAround(ProceedingJoinPoint point) {
     }
 
     private PermissionProxy getProxy(Object arg, DePermissionProxy annotation, int layer) throws Exception {
-        PermissionProxy result = null;
+        if(null == arg) return null;
         String value = annotation.value();
         Class<?> parameterType = arg.getClass();
         if (arg instanceof PermissionProxy) {

File: backend/src/main/java/io/dataease/auth/aop/DePermissionProxyHandler.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.auth.aop;
 
-import java.lang.reflect.Array;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.util.Arrays;
@@ -60,7 +59,7 @@ public Object proxyAround(ProceedingJoinPoint point) {
     }
 
     private PermissionProxy getProxy(Object arg, DePermissionProxy annotation, int layer) throws Exception {
-        PermissionProxy result = null;
+        if(null == arg) return null;
         String value = annotation.value();
         Class<?> parameterType = arg.getClass();
         if (arg instanceof PermissionProxy) {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -264,7 +264,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
 
 
         //行权限
-        List<ChartFieldCustomFilterDTO> rowPermissionFields = permissionService.getCustomFilters(columnPermissionFields, table, requestList.getUser());
+        List<ChartFieldCustomFilterDTO> rowPermissionFields = permissionService.getCustomFilters(fields, table, requestList.getUser());
         fieldCustomFilter.addAll(rowPermissionFields);
 
         for (ChartFieldCustomFilterDTO ele : fieldCustomFilter) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -479,6 +479,8 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
             return map;
         }
         DatasetTable datasetTable = datasetTableMapper.selectByPrimaryKey(dataSetTableRequest.getId());
+        // 行权限
+        List<ChartFieldCustomFilterDTO> customFilter = permissionService.getCustomFilters(fields, datasetTable, null);
         // 列权限
         List<String> desensitizationList = new ArrayList<>();
         fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), null);
@@ -488,8 +490,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
             map.put("page", new DataSetPreviewPage());
             return map;
         }
-        // 行权限
-        List<ChartFieldCustomFilterDTO> customFilter = permissionService.getCustomFilters(fields, datasetTable, null);
+
         String[] fieldArray = fields.stream().map(DatasetTableField::getDataeaseName).toArray(String[]::new);
 
         DataTableInfoDTO dataTableInfoDTO = new Gson().fromJson(dataSetTableRequest.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/auth/aop/DePermissionAnnotationHandler.java
Patch:
@@ -90,7 +90,7 @@ public Object PermissionAround(ProceedingJoinPoint point) {
 
         } catch (Throwable throwable) {
             LogUtil.error(throwable.getMessage(), throwable);
-            throw new RuntimeException(throwable);
+            throw new RuntimeException(throwable.getMessage());
         }
     }
 

File: backend/src/main/java/io/dataease/dto/datasource/MongodbConfiguration.java
Patch:
@@ -12,13 +12,14 @@ public class MongodbConfiguration extends JdbcConfiguration {
     private String connectionType;
     private String extraParams = "rebuildschema=true";
 
-    public String getJdbc() {
-        if(StringUtils.isEmpty(extraParams.trim())){
+    public String getJdbc(String dsId) {
+        if(StringUtils.isEmpty(extraParams.trim()) && StringUtils.isEmpty(dsId)){
             return "jdbc:mongodb://HOSTNAME:PORT/DATABASE"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())
                     .replace("DATABASE", getDataBase().trim());
         }else {
+            this.extraParams = StringUtils.isEmpty(dsId) ? getExtraParams().trim() : getExtraParams().trim() + "&schema=" + dsId +".xml";
             return "jdbc:mongodb://HOSTNAME:PORT/DATABASE?EXTRA_PARAMS"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -467,7 +467,7 @@ private Connection getConnection(DatasourceRequest datasourceRequest) throws Exc
                 username = mongodbConfiguration.getUsername();
                 password = mongodbConfiguration.getPassword();
                 driver = mongodbConfiguration.getDriver();
-                jdbcurl = mongodbConfiguration.getJdbc();
+                jdbcurl = mongodbConfiguration.getJdbc(datasourceRequest.getDatasource().getId());
                 break;
             case redshift:
                 RedshiftConfigration redshiftConfigration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), RedshiftConfigration.class);
@@ -566,7 +566,7 @@ private JdbcConfiguration setCredential(DatasourceRequest datasourceRequest, Dru
             case mongo:
                 MongodbConfiguration mongodbConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), MongodbConfiguration.class);
                 dataSource.setDriverClassName(mongodbConfiguration.getDriver());
-                dataSource.setUrl(mongodbConfiguration.getJdbc());
+                dataSource.setUrl(mongodbConfiguration.getJdbc(datasourceRequest.getDatasource().getId()));
                 jdbcConfiguration = mongodbConfiguration;
                 break;
             case redshift:

File: backend/src/main/java/io/dataease/dto/datasource/MongodbConfiguration.java
Patch:
@@ -12,13 +12,14 @@ public class MongodbConfiguration extends JdbcConfiguration {
     private String connectionType;
     private String extraParams = "rebuildschema=true";
 
-    public String getJdbc() {
-        if(StringUtils.isEmpty(extraParams.trim())){
+    public String getJdbc(String dsId) {
+        if(StringUtils.isEmpty(extraParams.trim()) && StringUtils.isEmpty(dsId)){
             return "jdbc:mongodb://HOSTNAME:PORT/DATABASE"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())
                     .replace("DATABASE", getDataBase().trim());
         }else {
+            this.extraParams = StringUtils.isEmpty(dsId) ? getExtraParams().trim() : getExtraParams().trim() + "&schema=" + dsId +".xml";
             return "jdbc:mongodb://HOSTNAME:PORT/DATABASE?EXTRA_PARAMS"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -467,7 +467,7 @@ private Connection getConnection(DatasourceRequest datasourceRequest) throws Exc
                 username = mongodbConfiguration.getUsername();
                 password = mongodbConfiguration.getPassword();
                 driver = mongodbConfiguration.getDriver();
-                jdbcurl = mongodbConfiguration.getJdbc();
+                jdbcurl = mongodbConfiguration.getJdbc(datasourceRequest.getDatasource().getId());
                 break;
             case redshift:
                 RedshiftConfigration redshiftConfigration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), RedshiftConfigration.class);
@@ -566,7 +566,7 @@ private JdbcConfiguration setCredential(DatasourceRequest datasourceRequest, Dru
             case mongo:
                 MongodbConfiguration mongodbConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), MongodbConfiguration.class);
                 dataSource.setDriverClassName(mongodbConfiguration.getDriver());
-                dataSource.setUrl(mongodbConfiguration.getJdbc());
+                dataSource.setUrl(mongodbConfiguration.getJdbc(datasourceRequest.getDatasource().getId()));
                 jdbcConfiguration = mongodbConfiguration;
                 break;
             case redshift:

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -86,6 +86,8 @@ public Integer transFieldType(String field) {
                 return DeTypeConstants.DE_FLOAT;// 浮点
             case "TINYINT":
                 return DeTypeConstants.DE_BOOL;// 布尔
+            case "bytea":
+                return DeTypeConstants.DE_BINARY;// 二进制
             default:
                 return DeTypeConstants.DE_STRING;
         }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1629,15 +1629,15 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                         datasetTableField.setDeExtractType(transFieldType(filed.getFieldType()));
                     } else {
                         Integer fieldType = qp.transFieldType(filed.getFieldType());
-                        datasetTableField.setDeType(fieldType == 4 ? 2 : fieldType);
+                        datasetTableField.setDeType(fieldType == 4 ? 2 : (fieldType == 6 ? 0 : fieldType));
                         datasetTableField.setDeExtractType(fieldType);
                     }
                     datasetTableField.setSize(filed.getFieldSize());
                     datasetTableField.setChecked(true);
                     datasetTableField.setColumnIndex(i);
                     datasetTableField.setLastSyncTime(syncTime);
                     datasetTableField.setExtField(0);
-                    datasetTableField.setGroupType(datasetTableField.getDeType() < 2 ? "d" : "q");
+                    datasetTableField.setGroupType((datasetTableField.getDeType() < 2 || datasetTableField.getDeType() == 6) ? "d" : "q");
                 }
                 dataSetTableFieldsService.save(datasetTableField);
             }

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -86,8 +86,6 @@ public Integer transFieldType(String field) {
                 return DeTypeConstants.DE_FLOAT;// 浮点
             case "TINYINT":
                 return DeTypeConstants.DE_BOOL;// 布尔
-            case "bytea":
-                return DeTypeConstants.DE_BINARY;// 二进制
             default:
                 return DeTypeConstants.DE_STRING;
         }

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -403,6 +403,9 @@ public void handleDatasource(DatasourceRequest datasourceRequest, String type) t
     }
 
     private Connection getConnectionFromPool(DatasourceRequest datasourceRequest) throws Exception {
+        if(datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.mongo.name())){
+            return getConnection(datasourceRequest);
+        }
         DruidDataSource dataSource = jdbcConnection.get(datasourceRequest.getDatasource().getId());
         if (dataSource == null) {
             handleDatasource(datasourceRequest, "add");

File: backend/src/main/java/io/dataease/controller/request/datasource/es/Requst.java
Patch:
@@ -6,4 +6,5 @@
 public class Requst {
     private String query;
     private Integer fetch_size = 10000;
+    private boolean field_multi_value_leniency = true;
 }

File: backend/src/main/java/io/dataease/controller/request/datasource/es/Requst.java
Patch:
@@ -6,4 +6,5 @@
 public class Requst {
     private String query;
     private Integer fetch_size = 10000;
+    private boolean field_multi_value_leniency = true;
 }

File: backend/src/main/java/io/dataease/config/Knife4jConfiguration.java
Patch:
@@ -74,7 +74,7 @@ private ApiInfo apiInfo(){
                 .title("DataEase")
                 .description("人人可用的开源数据可视化分析工具")
                 .termsOfServiceUrl("https://dataease.io")
-                .contact(new Contact("fit2cloud","https://www.fit2cloud.com/dataease/index.html","dataease@fit2cloud.com"))
+                .contact(new Contact("Dataease","https://www.fit2cloud.com/dataease/index.html","dataease@fit2cloud.com"))
                 .version(version)
                 .build();
     }

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtPanelGroupMapper.java
Patch:
@@ -15,7 +15,7 @@ public interface ExtPanelGroupMapper {
     //会级联删除pid 下的所有数据
     int deleteCircle(@Param("pid") String pid);
 
-    PanelGroupDTO panelGroup(String id);
+    PanelGroupDTO findOneWithPrivileges(@Param("panelId") String panelId,@Param("userId") String userId);
 
     void copyPanelView(@Param("pid") String panelId);
 
@@ -24,4 +24,6 @@ public interface ExtPanelGroupMapper {
 
     List<PanelGroupDTO> panelGroupInit();
 
+
+
 }

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -206,9 +206,9 @@ public void deleteCircle(String id) {
 
 
     public PanelGroupWithBLOBs findOne(String panelId) {
-        PanelGroupWithBLOBs panelGroupWithBLOBs = panelGroupMapper.selectByPrimaryKey(panelId);
+        PanelGroupWithBLOBs panelGroupWithBLOBs = extPanelGroupMapper.findOneWithPrivileges(panelId,String.valueOf(AuthUtils.getUser().getUserId()));
         if (panelGroupWithBLOBs != null && StringUtils.isNotEmpty(panelGroupWithBLOBs.getSource())) {
-            return panelGroupMapper.selectByPrimaryKey(panelGroupWithBLOBs.getSource());
+            return extPanelGroupMapper.findOneWithPrivileges(panelGroupWithBLOBs.getSource(),String.valueOf(AuthUtils.getUser().getUserId()));
         }
         return panelGroupWithBLOBs;
     }

File: backend/src/main/java/io/dataease/config/Knife4jConfiguration.java
Patch:
@@ -74,7 +74,7 @@ private ApiInfo apiInfo(){
                 .title("DataEase")
                 .description("人人可用的开源数据可视化分析工具")
                 .termsOfServiceUrl("https://dataease.io")
-                .contact(new Contact("fit2cloud","https://www.fit2cloud.com/dataease/index.html","dataease@fit2cloud.com"))
+                .contact(new Contact("Dataease","https://www.fit2cloud.com/dataease/index.html","dataease@fit2cloud.com"))
                 .version(version)
                 .build();
     }

File: backend/src/main/java/io/dataease/auth/aop/DePermissionAnnotationHandler.java
Patch:
@@ -134,7 +134,7 @@ private Boolean access(Object arg, DePermission annotation, int layer) throws Ex
             return access(o, annotation, ++layer);
         } else {
             // 当作自定义类处理
-            String[] values = value.split("u002E");
+            String[] values = value.split("\\.");
             String fieldName = values[layer];
 
             Object fieldValue = getFieldValue(arg, fieldName);

File: backend/src/main/java/io/dataease/controller/dataset/DataSetGroupController.java
Patch:
@@ -72,7 +72,7 @@ public DatasetGroup getScene(@PathVariable String id) {
         return dataSetGroupService.getScene(id);
     }
 
-    @ApiOperation("检测kettle")
+    @ApiIgnore
     @PostMapping("/isKettleRunning")
     public boolean isKettleRunning() {
         return extractDataService.isKettleRunning();

File: backend/src/main/java/io/dataease/auth/aop/DePermissionAnnotationHandler.java
Patch:
@@ -134,7 +134,7 @@ private Boolean access(Object arg, DePermission annotation, int layer) throws Ex
             return access(o, annotation, ++layer);
         } else {
             // 当作自定义类处理
-            String[] values = value.split("u002E");
+            String[] values = value.split("\\.");
             String fieldName = values[layer];
 
             Object fieldValue = getFieldValue(arg, fieldName);

File: backend/src/main/java/io/dataease/controller/dataset/DataSetGroupController.java
Patch:
@@ -72,7 +72,7 @@ public DatasetGroup getScene(@PathVariable String id) {
         return dataSetGroupService.getScene(id);
     }
 
-    @ApiOperation("检测kettle")
+    @ApiIgnore
     @PostMapping("/isKettleRunning")
     public boolean isKettleRunning() {
         return extractDataService.isKettleRunning();

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -131,7 +131,7 @@ public PanelGroup saveOrUpdate(PanelGroupRequest request) {
             panelGroupMapper.insertSelective(newDefaultPanel);
         } else if ("copy".equals(request.getOptType())) {
             try {
-                this.panelGroupCopy(request, null, true);
+                panelId =  this.panelGroupCopy(request, null, true);
             } catch (Exception e) {
                 e.printStackTrace();
                 LOGGER.error("更新panelView出错panelId：{}", request.getId());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -405,7 +405,7 @@ public DatasetTable get(String id) {
 
     public DataSetTableDTO getWithPermission(String id, Long user) {
         CurrentUserDto currentUserDto = AuthUtils.getUser();
-        Long userId = user != null ? user : currentUserDto.getUserId();
+        Long userId = currentUserDto != null ? currentUserDto.getUserId() : user;
 
         DataSetTableRequest dataSetTableRequest = new DataSetTableRequest();
         dataSetTableRequest.setId(id);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -405,7 +405,7 @@ public DatasetTable get(String id) {
 
     public DataSetTableDTO getWithPermission(String id, Long user) {
         CurrentUserDto currentUserDto = AuthUtils.getUser();
-        Long userId = user != null ? currentUserDto.getUserId() : user;
+        Long userId = currentUserDto != null ? currentUserDto.getUserId() : user;
 
         DataSetTableRequest dataSetTableRequest = new DataSetTableRequest();
         dataSetTableRequest.setId(id);

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -105,7 +105,7 @@ public DatasetTable get(@ApiParam(name = "id", value = "数据集ID", required =
     @ApiOperation("带权限查询")
     @PostMapping("getWithPermission/{id}")
     public DataSetTableDTO getWithPermission(@PathVariable String id) {
-        return dataSetTableService.getWithPermission(id);
+        return dataSetTableService.getWithPermission(id, null);
     }
 
     @ApiOperation("查询原始字段")

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -248,7 +248,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
         DatasetTableField datasetTableFieldObj = DatasetTableField.builder().tableId(view.getTableId()).checked(Boolean.TRUE).build();
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableFieldObj);
         // 获取数据集,需校验权限
-        DataSetTableDTO table = dataSetTableService.getWithPermission(view.getTableId());
+        DataSetTableDTO table = dataSetTableService.getWithPermission(view.getTableId(), requestList.getUser());
         checkPermission("use", table, requestList.getUser());
 
         //列权限

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -681,7 +681,7 @@ public String wrapSql(String sql) {
     public String createRawQuerySQL(String table, List<DatasetTableField> fields, Datasource ds) {
         String[] array = fields.stream().map(f -> {
             StringBuilder stringBuilder = new StringBuilder();
-            stringBuilder.append("\"").append(f.getOriginName()).append("\" AS ").append(f.getDataeaseName());
+            stringBuilder.append(" \"").append(f.getOriginName()).append("\"");
             return stringBuilder.toString();
         }).toArray(String[]::new);
         if(ds!= null){

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -185,7 +185,7 @@ private List<String[]> fetchResult(String result, String path){
             int i = 0;
             while (it.hasNext()){
                 Map.Entry entry = (Map.Entry)it.next();
-                row[i] = Optional.ofNullable(entry.getValue()).orElse("").toString();
+                row[i] = Optional.ofNullable(entry.getValue()).orElse("").toString().replaceAll("\n", " ").replaceAll("\r", " ");
                 i++;
             }
             dataList.add(row);

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -310,7 +310,7 @@ public ApiDefinition checkApiDatasource(ApiDefinition apiDefinition) throws Exce
             Iterator it = data.entrySet().iterator();
             while (it.hasNext()){
                 Map.Entry entry = (Map.Entry)it.next();
-                jsonObject.put((String) entry.getKey(), entry.getValue());
+                jsonObject.put((String) entry.getKey(), Optional.ofNullable(entry.getValue()).orElse("").toString().replaceAll("\n", " ").replaceAll("\r", " "));
                 if(getFileds) {
                     DatasetTableField tableField = new DatasetTableField();
                     tableField.setOriginName((String) entry.getKey());

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -367,7 +367,6 @@ public String checkStatus(DatasourceRequest datasourceRequest) throws Exception
         try (Connection con = getConnection(datasourceRequest); Statement statement = con.createStatement(); ResultSet resultSet = statement.executeQuery(queryStr)) {
             return "Success";
         } catch (Exception e) {
-            e.printStackTrace();
             DataEaseException.throwException(e.getMessage());
         }
         return "Error";

File: backend/src/main/java/io/dataease/controller/request/datasource/ApiDefinitionRequest.java
Patch:
@@ -13,7 +13,7 @@ public class ApiDefinitionRequest {
 
 
     @Data
-    public class AuthManager{
+    public static class AuthManager{
         private String password;
         private String username;
         private String verification = "";

File: backend/src/main/java/io/dataease/provider/datasource/ApiProvider.java
Patch:
@@ -124,7 +124,6 @@ static public String execHttpRequest(ApiDefinition apiDefinition) throws Excepti
         String response = "";
         HttpClientConfig httpClientConfig = new HttpClientConfig();
         ApiDefinitionRequest apiDefinitionRequest = JSONObject.parseObject(apiDefinition.getRequest(), ApiDefinitionRequest.class);
-        System.out.println(new Gson().toJson(apiDefinitionRequest.getAuthManager()));
         //headers
         for (JSONObject header : apiDefinitionRequest.getHeaders()) {
             if(StringUtils.isNotEmpty(header.getString("name")) && StringUtils.isNotEmpty(header.getString("value"))){
@@ -174,7 +173,6 @@ static public String execHttpRequest(ApiDefinition apiDefinition) throws Excepti
             default:
                 break;
         }
-        System.out.println("response: " + response);
         return response;
     }
 
@@ -187,7 +185,7 @@ private List<String[]> fetchResult(String result, String path){
             int i = 0;
             while (it.hasNext()){
                 Map.Entry entry = (Map.Entry)it.next();
-                row[i] = entry.getValue().toString();
+                row[i] = Optional.ofNullable(entry.getValue()).orElse("").toString();
                 i++;
             }
             dataList.add(row);

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -74,11 +74,12 @@ public List<PanelViewDto> buildTree(List<PanelViewPo> groups, List<PanelViewPo>
 
     @Transactional(propagation=Propagation.REQUIRES_NEW)
     public Boolean syncPanelViews(PanelGroupWithBLOBs panelGroup){
-        Boolean mobileLayout = false;
+        Boolean mobileLayout = null;
         String panelId = panelGroup.getId();
         Assert.notNull(panelId, "panelId cannot be null");
         String panelData = panelGroup.getPanelData();
         if(StringUtils.isNotEmpty(panelData)){
+            mobileLayout = false;
             JSONArray dataArray = JSON.parseArray(panelData);
             List<PanelViewInsertDTO> panelViewInsertDTOList = new ArrayList<>();
             for(int i=0;i<dataArray.size();i++){

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -74,11 +74,12 @@ public List<PanelViewDto> buildTree(List<PanelViewPo> groups, List<PanelViewPo>
 
     @Transactional(propagation=Propagation.REQUIRES_NEW)
     public Boolean syncPanelViews(PanelGroupWithBLOBs panelGroup){
-        Boolean mobileLayout = false;
+        Boolean mobileLayout = null;
         String panelId = panelGroup.getId();
         Assert.notNull(panelId, "panelId cannot be null");
         String panelData = panelGroup.getPanelData();
         if(StringUtils.isNotEmpty(panelData)){
+            mobileLayout = false;
             JSONArray dataArray = JSON.parseArray(panelData);
             List<PanelViewInsertDTO> panelViewInsertDTOList = new ArrayList<>();
             for(int i=0;i<dataArray.size();i++){

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -142,6 +142,9 @@ public int process(InputStream inputStream) throws Exception {
         stylesTable = xssfReader.getStylesTable();
         SharedStringsTable sst = xssfReader.getSharedStringsTable();
         XMLReader parser = XMLReaderFactory.createXMLReader("org.apache.xerces.parsers.SAXParser");
+        parser.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+        parser.setFeature("http://xml.org/sax/features/external-general-entities", false);
+        parser.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
         this.sst = sst;
         parser.setContentHandler(this);
         XSSFReader.SheetIterator sheets = (XSSFReader.SheetIterator) xssfReader.getSheetsData();

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -447,8 +447,8 @@ private void  extractDataByDE(DatasetTable datasetTable, Datasource datasource,
         bw.close();
 
         File scriptFile = new File(root_path + datasetTable.getId() + ".sh");
-        scriptFile.setExecutable(true);
         scriptFile.createNewFile();
+        scriptFile.setExecutable(true);
 
         BufferedWriter scriptFileBw = new BufferedWriter(new FileWriter(root_path + datasetTable.getId() + ".sh"));
         scriptFileBw.write("#!/bin/sh");

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -20,6 +20,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         // ----------------------------------------------------------
         // 放行Swagger2页面，需要放行这些
 
+        filterChainDefinitionMap.put("/api/data/demo", ANON);
         filterChainDefinitionMap.put("/doc.html**", "doc");
         filterChainDefinitionMap.put("/deApi**", ANON);
         filterChainDefinitionMap.put("/swagger-ui.html", ANON);

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -53,7 +53,7 @@ public void link(@PathVariable(value = "index", required = true) String index) {
         String url;
         if (CodingUtil.isNumeric(index)) {
             url = panelLinkService.getUrlByIndex(Long.parseLong(index));
-        }else {
+        } else {
             url = panelLinkService.getUrlByUuid(index);
         }
         HttpServletResponse response = ServletUtils.response();
@@ -65,8 +65,6 @@ public void link(@PathVariable(value = "index", required = true) String index) {
         }
     }
 
-
-
     @GetMapping("/tempMobileLink/{id}/{token}")
     public void tempMobileLink(@PathVariable("id") String id, @PathVariable("token") String token) {
         String url = "/#preview/" + id;

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -53,7 +53,7 @@ public void link(@PathVariable(value = "index", required = true) String index) {
         String url;
         if (CodingUtil.isNumeric(index)) {
             url = panelLinkService.getUrlByIndex(Long.parseLong(index));
-        }else {
+        } else {
             url = panelLinkService.getUrlByUuid(index);
         }
         HttpServletResponse response = ServletUtils.response();
@@ -65,8 +65,6 @@ public void link(@PathVariable(value = "index", required = true) String index) {
         }
     }
 
-
-
     @GetMapping("/tempMobileLink/{id}/{token}")
     public void tempMobileLink(@PathVariable("id") String id, @PathVariable("token") String token) {
         String url = "/#preview/" + id;

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -238,7 +238,9 @@ public String getUrlByUuid(String uuid) {
         example.createCriteria().andUuidEqualTo(uuid);
         List<PanelLinkMapping> mappings = panelLinkMappingMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(mappings)) {
-            DEException.throwException("link is not exist");
+            PanelLink panelLink = new PanelLink();
+            panelLink.setResourceId("error-resource-id");
+            return BASEURL + buildLinkParam(panelLink);
         }
         PanelLinkMapping mapping = mappings.get(0);
         String resourceId = mapping.getResourceId();

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -238,7 +238,9 @@ public String getUrlByUuid(String uuid) {
         example.createCriteria().andUuidEqualTo(uuid);
         List<PanelLinkMapping> mappings = panelLinkMappingMapper.selectByExample(example);
         if (CollectionUtils.isEmpty(mappings)) {
-            DEException.throwException("link is not exist");
+            PanelLink panelLink = new PanelLink();
+            panelLink.setResourceId("error-resource-id");
+            return BASEURL + buildLinkParam(panelLink);
         }
         PanelLinkMapping mapping = mappings.get(0);
         String resourceId = mapping.getResourceId();

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -1,9 +1,11 @@
 package io.dataease.service.dataset;
 
+import io.dataease.auth.annotation.DeCleaner;
 import io.dataease.base.domain.DatasetGroup;
 import io.dataease.base.domain.DatasetGroupExample;
 import io.dataease.base.mapper.DatasetGroupMapper;
 import io.dataease.base.mapper.ext.ExtDataSetGroupMapper;
+import io.dataease.commons.constants.DePermissionType;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.commons.utils.TreeUtils;
@@ -39,6 +41,7 @@ public class DataSetGroupService {
     @Resource
     private SysAuthService sysAuthService;
 
+    @DeCleaner(DePermissionType.DATASET)
     public DataSetGroupDTO save(DatasetGroup datasetGroup) {
         checkName(datasetGroup);
         if (StringUtils.isEmpty(datasetGroup.getId())) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -2,10 +2,12 @@
 
 import com.alibaba.fastjson.JSONObject;
 import com.google.gson.Gson;
+import io.dataease.auth.annotation.DeCleaner;
 import io.dataease.base.domain.*;
 import io.dataease.base.mapper.*;
 import io.dataease.base.mapper.ext.ExtDataSourceMapper;
 import io.dataease.base.mapper.ext.query.GridExample;
+import io.dataease.commons.constants.DePermissionType;
 import io.dataease.commons.exception.DEException;
 import io.dataease.commons.model.AuthURD;
 import io.dataease.commons.utils.AuthUtils;
@@ -51,6 +53,7 @@ public class DatasourceService {
     @Resource
     private CommonThreadPool commonThreadPool;
 
+    @DeCleaner(DePermissionType.DATASOURCE)
     public Datasource addDatasource(Datasource datasource) throws Exception{
         checkName(datasource);
         long currentTimeMillis = System.currentTimeMillis();

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -1,10 +1,12 @@
 package io.dataease.service.panel;
 
+import io.dataease.auth.annotation.DeCleaner;
 import io.dataease.base.domain.*;
 import io.dataease.base.mapper.ChartViewMapper;
 import io.dataease.base.mapper.PanelGroupMapper;
 import io.dataease.base.mapper.ext.ExtPanelGroupMapper;
 import io.dataease.base.mapper.ext.ExtPanelLinkJumpMapper;
+import io.dataease.commons.constants.DePermissionType;
 import io.dataease.commons.constants.PanelConstants;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.TreeUtils;
@@ -75,6 +77,7 @@ public List<PanelGroupDTO> defaultTree(PanelGroupRequest panelGroupRequest) {
         return TreeUtils.mergeTree(panelGroupDTOList, "default_panel");
     }
 
+    @DeCleaner(DePermissionType.PANEL)
     @Transactional
     public PanelGroup saveOrUpdate(PanelGroupRequest request) {
         try {

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -1,9 +1,11 @@
 package io.dataease.service.dataset;
 
+import io.dataease.auth.annotation.DeCleaner;
 import io.dataease.base.domain.DatasetGroup;
 import io.dataease.base.domain.DatasetGroupExample;
 import io.dataease.base.mapper.DatasetGroupMapper;
 import io.dataease.base.mapper.ext.ExtDataSetGroupMapper;
+import io.dataease.commons.constants.DePermissionType;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.commons.utils.TreeUtils;
@@ -39,6 +41,7 @@ public class DataSetGroupService {
     @Resource
     private SysAuthService sysAuthService;
 
+    @DeCleaner(DePermissionType.DATASET)
     public DataSetGroupDTO save(DatasetGroup datasetGroup) {
         checkName(datasetGroup);
         if (StringUtils.isEmpty(datasetGroup.getId())) {

File: backend/src/main/java/io/dataease/service/datasource/DatasourceService.java
Patch:
@@ -2,10 +2,12 @@
 
 import com.alibaba.fastjson.JSONObject;
 import com.google.gson.Gson;
+import io.dataease.auth.annotation.DeCleaner;
 import io.dataease.base.domain.*;
 import io.dataease.base.mapper.*;
 import io.dataease.base.mapper.ext.ExtDataSourceMapper;
 import io.dataease.base.mapper.ext.query.GridExample;
+import io.dataease.commons.constants.DePermissionType;
 import io.dataease.commons.exception.DEException;
 import io.dataease.commons.model.AuthURD;
 import io.dataease.commons.utils.AuthUtils;
@@ -51,6 +53,7 @@ public class DatasourceService {
     @Resource
     private CommonThreadPool commonThreadPool;
 
+    @DeCleaner(DePermissionType.DATASOURCE)
     public Datasource addDatasource(Datasource datasource) throws Exception{
         checkName(datasource);
         long currentTimeMillis = System.currentTimeMillis();

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -1,10 +1,12 @@
 package io.dataease.service.panel;
 
+import io.dataease.auth.annotation.DeCleaner;
 import io.dataease.base.domain.*;
 import io.dataease.base.mapper.ChartViewMapper;
 import io.dataease.base.mapper.PanelGroupMapper;
 import io.dataease.base.mapper.ext.ExtPanelGroupMapper;
 import io.dataease.base.mapper.ext.ExtPanelLinkJumpMapper;
+import io.dataease.commons.constants.DePermissionType;
 import io.dataease.commons.constants.PanelConstants;
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.TreeUtils;
@@ -75,6 +77,7 @@ public List<PanelGroupDTO> defaultTree(PanelGroupRequest panelGroupRequest) {
         return TreeUtils.mergeTree(panelGroupDTOList, "default_panel");
     }
 
+    @DeCleaner(DePermissionType.PANEL)
     @Transactional
     public PanelGroup saveOrUpdate(PanelGroupRequest request) {
         try {

File: backend/src/main/java/io/dataease/plugins/server/ColumnPermissionsController.java
Patch:
@@ -29,7 +29,7 @@ public class ColumnPermissionsController {
 
     @ApiOperation("保存")
     @PostMapping("save")
-    public void save(@RequestBody DatasetColumnPermissions datasetColumnPermissions) throws Exception {
+    public DatasetColumnPermissions save(@RequestBody DatasetColumnPermissions datasetColumnPermissions) throws Exception {
         ColumnPermissionService columnPermissionService = SpringContextUtil.getBean(ColumnPermissionService.class);
         DataSetColumnPermissionsDTO request = new DataSetColumnPermissionsDTO();
         request.setAuthTargetType(datasetColumnPermissions.getAuthTargetType());
@@ -48,7 +48,7 @@ public void save(@RequestBody DatasetColumnPermissions datasetColumnPermissions)
                 throw new Exception(Translator.get("i18n_cp_exist"));
             }
         }
-        columnPermissionService.save(datasetColumnPermissions);
+        return columnPermissionService.save(datasetColumnPermissions);
     }
 
     @ApiOperation("查询")

File: backend/src/main/java/io/dataease/provider/query/es/EsSqlLConstants.java
Patch:
@@ -21,7 +21,7 @@ public class EsSqlLConstants extends SQLConstants {
 
     public static final String ROUND = "ROUND(%s, %s)";
 
-    public static final String DEFAULT_DATE_FORMAT = "YYYY-MM-dd HH:mm:ss";
+    public static final String DEFAULT_DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";
 
     public static final String WHERE_VALUE_NULL = "(NULL,'')";
 

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -282,7 +282,7 @@ private List<TableFiled> fetchResultField(ResultSet rs, DatasourceRequest dataso
             String f = metaData.getColumnName(j + 1);
             String l = StringUtils.isNotEmpty(metaData.getColumnLabel(j + 1)) ? metaData.getColumnLabel(j + 1) : f;
             String t = metaData.getColumnTypeName(j + 1);
-            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name())) {
+            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains("\\.")) {
                 l = l.split("\\.")[1];
             }
             TableFiled field = new TableFiled();

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1697,6 +1697,8 @@ public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncr
         if (datasetTableIncrementalConfig == null || StringUtils.isEmpty(datasetTableIncrementalConfig.getTableId())) {
             return;
         }
+        datasetTableIncrementalConfig.setIncrementalAdd(datasetTableIncrementalConfig.getIncrementalAdd().trim());
+        datasetTableIncrementalConfig.setIncrementalDelete(datasetTableIncrementalConfig.getIncrementalDelete().trim());
         if (StringUtils.isEmpty(datasetTableIncrementalConfig.getId())) {
             datasetTableIncrementalConfig.setId(UUID.randomUUID().toString());
             datasetTableIncrementalConfigMapper.insertSelective(datasetTableIncrementalConfig);

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -282,7 +282,7 @@ private List<TableFiled> fetchResultField(ResultSet rs, DatasourceRequest dataso
             String f = metaData.getColumnName(j + 1);
             String l = StringUtils.isNotEmpty(metaData.getColumnLabel(j + 1)) ? metaData.getColumnLabel(j + 1) : f;
             String t = metaData.getColumnTypeName(j + 1);
-            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name())) {
+            if (datasourceRequest.getDatasource().getType().equalsIgnoreCase(DatasourceTypes.hive.name()) && l.contains("\\.")) {
                 l = l.split("\\.")[1];
             }
             TableFiled field = new TableFiled();

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1697,6 +1697,8 @@ public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncr
         if (datasetTableIncrementalConfig == null || StringUtils.isEmpty(datasetTableIncrementalConfig.getTableId())) {
             return;
         }
+        datasetTableIncrementalConfig.setIncrementalAdd(datasetTableIncrementalConfig.getIncrementalAdd().trim());
+        datasetTableIncrementalConfig.setIncrementalDelete(datasetTableIncrementalConfig.getIncrementalDelete().trim());
         if (StringUtils.isEmpty(datasetTableIncrementalConfig.getId())) {
             datasetTableIncrementalConfig.setId(UUID.randomUUID().toString());
             datasetTableIncrementalConfigMapper.insertSelective(datasetTableIncrementalConfig);

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -172,7 +172,7 @@ public String createQueryTableWithPage(String table, List<DatasetTableField> fie
     @Override
     public String createQueryTableWithLimit(String table, List<DatasetTableField> fields, Integer limit, boolean isGroup, Datasource ds, List<ChartFieldCustomFilterDTO> fieldCustomFilter) {
         String schema = new Gson().fromJson(ds.getConfiguration(), JdbcConfiguration.class).getSchema();
-        return String.format("SELECT top %s * from %s ", limit.toString(), schema + "." + table);
+        return String.format("SELECT top %s * from %s ", limit.toString(), schema + "." + String.format(SqlServerSQLConstants.KEYWORD_TABLE, table));
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -157,12 +157,12 @@ public String createQuerySQLAsTmp(String sql, List<DatasetTableField> fields, bo
     @Override
     public String createQueryTableWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds, List<ChartFieldCustomFilterDTO> fieldCustomFilter) {
         Integer size = (page - 1) * pageSize + realSize;
-        return createQuerySQL(table, fields, isGroup, null, fieldCustomFilter) + String.format(" fetch first %s rows only; ", size);
+        return createQuerySQL(table, fields, isGroup, ds, fieldCustomFilter) + String.format(" fetch first %s rows only; ", size);
     }
 
     @Override
     public String createQueryTableWithLimit(String table, List<DatasetTableField> fields, Integer limit, boolean isGroup, Datasource ds, List<ChartFieldCustomFilterDTO> fieldCustomFilter) {
-        return createQuerySQL(table, fields, isGroup, null, fieldCustomFilter) + String.format(" fetch first %s rows only; ", limit);
+        return createQuerySQL(table, fields, isGroup, ds, fieldCustomFilter) + String.format(" fetch first %s rows only; ", limit);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/query/db2/Db2QueryProvider.java
Patch:
@@ -157,12 +157,12 @@ public String createQuerySQLAsTmp(String sql, List<DatasetTableField> fields, bo
     @Override
     public String createQueryTableWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds, List<ChartFieldCustomFilterDTO> fieldCustomFilter) {
         Integer size = (page - 1) * pageSize + realSize;
-        return createQuerySQL(table, fields, isGroup, null, fieldCustomFilter) + String.format(" fetch first %s rows only; ", size);
+        return createQuerySQL(table, fields, isGroup, ds, fieldCustomFilter) + String.format(" fetch first %s rows only; ", size);
     }
 
     @Override
     public String createQueryTableWithLimit(String table, List<DatasetTableField> fields, Integer limit, boolean isGroup, Datasource ds, List<ChartFieldCustomFilterDTO> fieldCustomFilter) {
-        return createQuerySQL(table, fields, isGroup, null, fieldCustomFilter) + String.format(" fetch first %s rows only; ", limit);
+        return createQuerySQL(table, fields, isGroup, ds, fieldCustomFilter) + String.format(" fetch first %s rows only; ", limit);
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/dataset/DataSetFieldService.java
Patch:
@@ -5,5 +5,5 @@
 
 public interface DataSetFieldService {
 
-    List<Object> fieldValues(String fieldId, Long userId) throws Exception;
+    List<Object> fieldValues(String fieldId, Long userId, Boolean userPermissions) throws Exception;
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -245,7 +245,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
         fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), requestList.getUser());
         //将没有权限的列删掉
         List<String> dataeaseNames = fields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList());
-        dataeaseNames.add("count");
+        dataeaseNames.add("*");
         fieldCustomFilter = fieldCustomFilter.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
         extStack = extStack.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
         extBubble = extBubble.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -245,7 +245,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
         fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), requestList.getUser());
         //将没有权限的列删掉
         List<String> dataeaseNames = fields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList());
-        dataeaseNames.add("count");
+        dataeaseNames.add("*");
         fieldCustomFilter = fieldCustomFilter.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
         extStack = extStack.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
         extBubble = extBubble.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -242,6 +242,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
         fields = permissionService.filterColumnPermissons(fields, desensitizationList, datasetTable.getId(), requestList.getUser());
         //将没有权限的列删掉
         List<String> dataeaseNames = fields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList());
+        dataeaseNames.add("count");
         fieldCustomFilter = fieldCustomFilter.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
         extStack = extStack.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());
         extBubble = extBubble.stream().filter(item -> !desensitizationList.contains(item.getDataeaseName()) && dataeaseNames.contains(item.getDataeaseName())).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/plugins/server/ColumnPermissionsController.java
Patch:
@@ -38,14 +38,14 @@ public void save(@RequestBody DatasetColumnPermissions datasetColumnPermissions)
         List<DataSetColumnPermissionsDTO> columnPermissionsDTOS = columnPermissionService.searchPermissions(request);
         if(StringUtils.isEmpty(datasetColumnPermissions.getId())){
             if(!CollectionUtils.isEmpty(columnPermissionsDTOS)){
-                throw new Exception(Translator.get("i18n_rp_exist"));
+                throw new Exception(Translator.get("i18n_cp_exist"));
             }
         }else {
             if(!CollectionUtils.isEmpty(columnPermissionsDTOS) && columnPermissionsDTOS.size() > 1){
-                throw new Exception(Translator.get("i18n_rp_exist"));
+                throw new Exception(Translator.get("i18n_cp_exist"));
             }
             if(columnPermissionsDTOS.size() == 1 && !columnPermissionsDTOS.get(0).getId().equalsIgnoreCase(datasetColumnPermissions.getId())){
-                throw new Exception(Translator.get("i18n_rp_exist"));
+                throw new Exception(Translator.get("i18n_cp_exist"));
             }
         }
         columnPermissionService.save(datasetColumnPermissions);

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -117,6 +117,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
         // 记录token操作时间
         result.put("token", token);
         ServletUtils.setToken(token);
+        authUserService.clearCache(user.getUserId());
         return result;
     }
 

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -117,6 +117,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
         // 记录token操作时间
         result.put("token", token);
         ServletUtils.setToken(token);
+        authUserService.clearCache(user.getUserId());
         return result;
     }
 

File: backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -315,7 +315,9 @@ public List<PanelShare> queryWithResource(BaseGridRequest request){
     }
 
     public List<PanelShareOutDTO> queryTargets(String panelId) {
-        return extPanelShareMapper.queryTargets(panelId);
+        List<PanelShareOutDTO> targets = extPanelShareMapper.queryTargets(panelId);
+        if (CollectionUtils.isEmpty(targets)) return new ArrayList<>();
+        return targets.stream().filter(item -> StringUtils.isNotEmpty(item.getTargetName())).collect(Collectors.toList());
     }
 
     public void removeShares(PanelShareRemoveRequest removeRequest) {

File: backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -315,7 +315,9 @@ public List<PanelShare> queryWithResource(BaseGridRequest request){
     }
 
     public List<PanelShareOutDTO> queryTargets(String panelId) {
-        return extPanelShareMapper.queryTargets(panelId);
+        List<PanelShareOutDTO> targets = extPanelShareMapper.queryTargets(panelId);
+        if (CollectionUtils.isEmpty(targets)) return new ArrayList<>();
+        return targets.stream().filter(item -> StringUtils.isNotEmpty(item.getTargetName())).collect(Collectors.toList());
     }
 
     public void removeShares(PanelShareRemoveRequest removeRequest) {

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -34,7 +34,7 @@ public class XEmailTaskServer {
 
     @PostMapping("/queryTasks/{goPage}/{pageSize}")
     public Pager<List<XpackTaskGridDTO>> queryTask(@PathVariable int goPage, @PathVariable int pageSize,
-                                                   @RequestBody XpackGridRequest request) {
+            @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskGridDTO> tasks = emailXpackService.taskGrid(request);
@@ -87,7 +87,7 @@ public String preview(@RequestBody XpackEmailViewRequest request) {
         try {
             fileId = emailXpackService.print(url, token, buildPixel(request.getPixel()));
         } catch (Exception e) {
-            LogUtil.error(e);
+            LogUtil.error(e.getMessage(), e);
             DEException.throwException("预览失败，请联系管理员");
         }
         String imageUrl = "/system/ui/image/" + fileId;
@@ -116,7 +116,7 @@ public void delete(@PathVariable Long taskId) {
 
     @PostMapping("/queryInstancies/{goPage}/{pageSize}")
     public Pager<List<XpackTaskInstanceDTO>> instancesGrid(@PathVariable int goPage, @PathVariable int pageSize,
-                                                           @RequestBody XpackGridRequest request) {
+            @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskInstanceDTO> instances = emailXpackService.taskInstanceGrid(request);

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -34,7 +34,7 @@ public class XEmailTaskServer {
 
     @PostMapping("/queryTasks/{goPage}/{pageSize}")
     public Pager<List<XpackTaskGridDTO>> queryTask(@PathVariable int goPage, @PathVariable int pageSize,
-                                                   @RequestBody XpackGridRequest request) {
+            @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskGridDTO> tasks = emailXpackService.taskGrid(request);
@@ -87,7 +87,7 @@ public String preview(@RequestBody XpackEmailViewRequest request) {
         try {
             fileId = emailXpackService.print(url, token, buildPixel(request.getPixel()));
         } catch (Exception e) {
-            LogUtil.error(e);
+            LogUtil.error(e.getMessage(), e);
             DEException.throwException("预览失败，请联系管理员");
         }
         String imageUrl = "/system/ui/image/" + fileId;
@@ -116,7 +116,7 @@ public void delete(@PathVariable Long taskId) {
 
     @PostMapping("/queryInstancies/{goPage}/{pageSize}")
     public Pager<List<XpackTaskInstanceDTO>> instancesGrid(@PathVariable int goPage, @PathVariable int pageSize,
-                                                           @RequestBody XpackGridRequest request) {
+            @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskInstanceDTO> instances = emailXpackService.taskInstanceGrid(request);

File: backend/src/main/java/io/dataease/job/sechedule/strategy/TaskHandler.java
Patch:
@@ -79,7 +79,8 @@ private String cron(GlobalTaskEntity taskEntity) {
 
     private String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        return week[index];
+         index = (index + 1) % 7;
+        return String.valueOf(index);
     }
 
 

File: backend/src/main/java/io/dataease/job/sechedule/strategy/TaskHandler.java
Patch:
@@ -79,7 +79,8 @@ private String cron(GlobalTaskEntity taskEntity) {
 
     private String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        return week[index];
+         index = (index + 1) % 7;
+        return String.valueOf(index);
     }
 
 

File: backend/src/main/java/io/dataease/job/sechedule/strategy/TaskHandler.java
Patch:
@@ -79,7 +79,8 @@ private String cron(GlobalTaskEntity taskEntity) {
 
     private String getDayOfWeek(Calendar instance) {
         int index = instance.get(Calendar.DAY_OF_WEEK);
-        return week[index];
+         index = (index + 1) % 7;
+        return String.valueOf(index);
     }
 
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -344,7 +344,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             if (ObjectUtils.isEmpty(ds)) {
                 throw new RuntimeException(Translator.get("i18n_datasource_delete"));
             }
-            if(ds.getStatus().equalsIgnoreCase("Error")){
+            if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                 throw new Exception(Translator.get("i18n_invalid_ds"));
             }
             DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -578,7 +578,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
                 if (ObjectUtils.isEmpty(ds)) {
                     throw new RuntimeException(Translator.get("i18n_datasource_delete"));
                 }
-                if(ds.getStatus().equalsIgnoreCase("Error")){
+                if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                     throw new Exception(Translator.get("i18n_invalid_ds"));
                 }
                 DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());
@@ -646,7 +646,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
                 if (ObjectUtils.isEmpty(ds)) {
                     throw new RuntimeException(Translator.get("i18n_datasource_delete"));
                 }
-                if(ds.getStatus().equalsIgnoreCase("Error")){
+                if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                     throw new Exception(Translator.get("i18n_invalid_ds"));
                 }
                 DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -65,7 +65,7 @@ public List<Object> fieldValues(String fieldId, Long userId) throws Exception{
         if (datasetTable.getMode() == 0) {// 直连
             if (StringUtils.isEmpty(datasetTable.getDataSourceId())) return null;
             Datasource ds = datasourceService.get(datasetTable.getDataSourceId());
-            if(ds.getStatus().equalsIgnoreCase("Error")){
+            if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                 throw new Exception(Translator.get("i18n_invalid_ds"));
             }
             datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -344,7 +344,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             if (ObjectUtils.isEmpty(ds)) {
                 throw new RuntimeException(Translator.get("i18n_datasource_delete"));
             }
-            if(ds.getStatus().equalsIgnoreCase("Error")){
+            if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                 throw new Exception(Translator.get("i18n_invalid_ds"));
             }
             DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -578,7 +578,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
                 if (ObjectUtils.isEmpty(ds)) {
                     throw new RuntimeException(Translator.get("i18n_datasource_delete"));
                 }
-                if(ds.getStatus().equalsIgnoreCase("Error")){
+                if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                     throw new Exception(Translator.get("i18n_invalid_ds"));
                 }
                 DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());
@@ -646,7 +646,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
                 if (ObjectUtils.isEmpty(ds)) {
                     throw new RuntimeException(Translator.get("i18n_datasource_delete"));
                 }
-                if(ds.getStatus().equalsIgnoreCase("Error")){
+                if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                     throw new Exception(Translator.get("i18n_invalid_ds"));
                 }
                 DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -65,7 +65,7 @@ public List<Object> fieldValues(String fieldId, Long userId) throws Exception{
         if (datasetTable.getMode() == 0) {// 直连
             if (StringUtils.isEmpty(datasetTable.getDataSourceId())) return null;
             Datasource ds = datasourceService.get(datasetTable.getDataSourceId());
-            if(ds.getStatus().equalsIgnoreCase("Error")){
+            if(StringUtils.isNotEmpty(ds.getStatus()) && ds.getStatus().equalsIgnoreCase("Error")){
                 throw new Exception(Translator.get("i18n_invalid_ds"));
             }
             datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -84,7 +84,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
-        filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", ANON);
+        filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -84,7 +84,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
-        filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", ANON);
+        filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", "link");
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -344,6 +344,9 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             if (ObjectUtils.isEmpty(ds)) {
                 throw new RuntimeException(Translator.get("i18n_datasource_delete"));
             }
+            if(ds.getStatus().equalsIgnoreCase("Error")){
+                throw new Exception(Translator.get("i18n_invalid_ds"));
+            }
             DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());
             datasourceRequest.setDatasource(ds);
             DataTableInfoDTO dataTableInfoDTO = new Gson().fromJson(table.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -344,6 +344,9 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
             if (ObjectUtils.isEmpty(ds)) {
                 throw new RuntimeException(Translator.get("i18n_datasource_delete"));
             }
+            if(ds.getStatus().equalsIgnoreCase("Error")){
+                throw new Exception(Translator.get("i18n_invalid_ds"));
+            }
             DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());
             datasourceRequest.setDatasource(ds);
             DataTableInfoDTO dataTableInfoDTO = new Gson().fromJson(table.getInfo(), DataTableInfoDTO.class);

File: backend/src/main/java/io/dataease/base/mapper/ext/HomeMapper.java
Patch:
@@ -7,7 +7,7 @@
 public interface HomeMapper {
 
 
-    List<HomeItemDTO> queryStore(Long userId);
+    List<HomeItemDTO> queryStore(Map<String, Object> param);
 
     List<HomeItemDTO> queryHistory();
 

File: backend/src/main/java/io/dataease/job/sechedule/strategy/TaskHandler.java
Patch:
@@ -78,7 +78,7 @@ private String cron(GlobalTaskEntity taskEntity) {
     }
 
     private String getDayOfWeek(Calendar instance) {
-        int index = instance.get(Calendar.DAY_OF_WEEK) - 1;
+        int index = instance.get(Calendar.DAY_OF_WEEK);
         return week[index];
     }
 

File: backend/src/main/java/io/dataease/mobile/dto/DirRequest.java
Patch:
@@ -7,13 +7,10 @@
 import java.io.Serializable;
 
 @Data
-@ApiModel("目录查询条件")
 public class DirRequest implements Serializable {
 
-    @ApiModelProperty("父ID")
     private String pid;
 
-    @ApiModelProperty("名称")
     private String name;
 
 }

File: backend/src/main/java/io/dataease/base/mapper/ext/HomeMapper.java
Patch:
@@ -7,7 +7,7 @@
 public interface HomeMapper {
 
 
-    List<HomeItemDTO> queryStore(Long userId);
+    List<HomeItemDTO> queryStore(Map<String, Object> param);
 
     List<HomeItemDTO> queryHistory();
 

File: backend/src/main/java/io/dataease/job/sechedule/strategy/TaskHandler.java
Patch:
@@ -78,7 +78,7 @@ private String cron(GlobalTaskEntity taskEntity) {
     }
 
     private String getDayOfWeek(Calendar instance) {
-        int index = instance.get(Calendar.DAY_OF_WEEK) - 1;
+        int index = instance.get(Calendar.DAY_OF_WEEK);
         return week[index];
     }
 

File: backend/src/main/java/io/dataease/mobile/dto/DirRequest.java
Patch:
@@ -7,13 +7,10 @@
 import java.io.Serializable;
 
 @Data
-@ApiModel("目录查询条件")
 public class DirRequest implements Serializable {
 
-    @ApiModelProperty("父ID")
     private String pid;
 
-    @ApiModelProperty("名称")
     private String name;
 
 }

File: backend/src/main/java/io/dataease/base/mapper/ext/HomeMapper.java
Patch:
@@ -7,7 +7,7 @@
 public interface HomeMapper {
 
 
-    List<HomeItemDTO> queryStore(Long userId);
+    List<HomeItemDTO> queryStore(Map<String, Object> param);
 
     List<HomeItemDTO> queryHistory();
 

File: backend/src/main/java/io/dataease/job/sechedule/strategy/TaskHandler.java
Patch:
@@ -78,7 +78,7 @@ private String cron(GlobalTaskEntity taskEntity) {
     }
 
     private String getDayOfWeek(Calendar instance) {
-        int index = instance.get(Calendar.DAY_OF_WEEK) - 1;
+        int index = instance.get(Calendar.DAY_OF_WEEK);
         return week[index];
     }
 

File: backend/src/main/java/io/dataease/mobile/dto/DirRequest.java
Patch:
@@ -7,13 +7,10 @@
 import java.io.Serializable;
 
 @Data
-@ApiModel("目录查询条件")
 public class DirRequest implements Serializable {
 
-    @ApiModelProperty("父ID")
     private String pid;
 
-    @ApiModelProperty("名称")
     private String name;
 
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -51,6 +51,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
         filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
+        filterChainDefinitionMap.put("/linkJump/queryTargetPanelJumpInfo", ANON);
 
         filterChainDefinitionMap.put("/tempMobileLink/**", ANON);
         filterChainDefinitionMap.put("/de-app/**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -51,6 +51,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
         filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
+        filterChainDefinitionMap.put("/linkJump/queryTargetPanelJumpInfo", ANON);
 
         filterChainDefinitionMap.put("/tempMobileLink/**", ANON);
         filterChainDefinitionMap.put("/de-app/**", ANON);

File: backend/src/main/java/io/dataease/auth/filter/F2CLinkFilter.java
Patch:
@@ -16,7 +16,7 @@
 
 public class F2CLinkFilter extends AnonymousFilter {
 
-    private static final String LINK_TOKEN_KEY = "LINK-PWD-TOKEN";
+    public static final String LINK_TOKEN_KEY = "LINK-PWD-TOKEN";
 
     @Override
     protected boolean onPreHandle(ServletRequest request, ServletResponse response, Object mappedValue) {

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -50,7 +50,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
-        filterChainDefinitionMap.put("/dataset/field/multFieldValues", ANON);
         filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
 
         filterChainDefinitionMap.put("/tempMobileLink/**", ANON);
@@ -84,6 +83,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
+        filterChainDefinitionMap.put("/dataset/field/linkMultFieldValues", ANON);
 
         filterChainDefinitionMap.put("/**", "authc");
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetFieldService.java
Patch:
@@ -5,5 +5,5 @@
 
 public interface DataSetFieldService {
 
-    List<Object> fieldValues(String fieldId) throws Exception;
+    List<Object> fieldValues(String fieldId, Long userId) throws Exception;
 }

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -42,7 +42,7 @@ public class DirectFieldService implements DataSetFieldService {
     private DataSetTableUnionService dataSetTableUnionService;
 
     @Override
-    public List<Object> fieldValues(String fieldId) throws Exception{
+    public List<Object> fieldValues(String fieldId, Long userId) throws Exception{
         List<DatasetTableField> list = dataSetTableFieldsService.getListByIds(new ArrayList<String>() {{
             add(fieldId);
         }});
@@ -58,7 +58,7 @@ public List<Object> fieldValues(String fieldId) throws Exception{
 
         DatasetTableField datasetTableField = DatasetTableField.builder().tableId(tableId).checked(Boolean.TRUE).build();
         List<DatasetTableField> fields = dataSetTableFieldsService.list(datasetTableField);
-        List<ChartFieldCustomFilterDTO> customFilter = dataSetTableService.getCustomFilters(fields, datasetTable, null);
+        List<ChartFieldCustomFilterDTO> customFilter = dataSetTableService.getCustomFilters(fields, datasetTable, userId);
 
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         DatasourceProvider datasourceProvider = null;

File: backend/src/main/java/io/dataease/provider/query/doris/DorisQueryProvider.java
Patch:
@@ -114,7 +114,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     } else if (f.getDeType() == 3) {
                         fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_FLOAT_FORMAT);
                     } else if (f.getDeType() == 1) {
-                        fieldName = String.format(DorisConstants.DATE_FORMAT, originField, DorisConstants.DEFAULT_DATE_FORMAT);
+                        fieldName = String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -106,7 +106,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     } else if (f.getDeType() == DeTypeConstants.DE_FLOAT) {
                         fieldName = String.format(HiveConstants.CAST, originField, HiveConstants.DEFAULT_FLOAT_FORMAT);
                     } else if (f.getDeType() == DeTypeConstants.DE_TIME) {
-                        fieldName = String.format(HiveConstants.DATE_FORMAT, originField, HiveConstants.DEFAULT_DATE_FORMAT);
+                        fieldName = String.format(HiveConstants.STR_TO_DATE, originField, HiveConstants.DEFAULT_DATE_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -113,7 +113,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     } else if (f.getDeType() == 3) {
                         fieldName = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_FLOAT_FORMAT);
                     } else if (f.getDeType() == 1) {
-                        fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
+                        fieldName = String.format(MySQLConstants.STR_TO_DATE, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/query/doris/DorisQueryProvider.java
Patch:
@@ -114,7 +114,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     } else if (f.getDeType() == 3) {
                         fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_FLOAT_FORMAT);
                     } else if (f.getDeType() == 1) {
-                        fieldName = String.format(DorisConstants.DATE_FORMAT, originField, DorisConstants.DEFAULT_DATE_FORMAT);
+                        fieldName = String.format(DorisConstants.STR_TO_DATE, originField, DorisConstants.DEFAULT_DATE_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -106,7 +106,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     } else if (f.getDeType() == DeTypeConstants.DE_FLOAT) {
                         fieldName = String.format(HiveConstants.CAST, originField, HiveConstants.DEFAULT_FLOAT_FORMAT);
                     } else if (f.getDeType() == DeTypeConstants.DE_TIME) {
-                        fieldName = String.format(HiveConstants.DATE_FORMAT, originField, HiveConstants.DEFAULT_DATE_FORMAT);
+                        fieldName = String.format(HiveConstants.STR_TO_DATE, originField, HiveConstants.DEFAULT_DATE_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/query/mysql/MysqlQueryProvider.java
Patch:
@@ -113,7 +113,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                     } else if (f.getDeType() == 3) {
                         fieldName = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_FLOAT_FORMAT);
                     } else if (f.getDeType() == 1) {
-                        fieldName = String.format(MySQLConstants.DATE_FORMAT, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
+                        fieldName = String.format(MySQLConstants.STR_TO_DATE, originField, MySQLConstants.DEFAULT_DATE_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -118,6 +118,7 @@ public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO em
         } catch (Exception e) {
             error(taskInstance, e);
             LogUtil.error(e.getMessage(), e);
+            e.printStackTrace();
         }
     }
 

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -118,6 +118,7 @@ public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO em
         } catch (Exception e) {
             error(taskInstance, e);
             LogUtil.error(e.getMessage(), e);
+            e.printStackTrace();
         }
     }
 

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -50,6 +50,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
+        filterChainDefinitionMap.put("/dataset/field/multFieldValues", ANON);
         filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
 
         filterChainDefinitionMap.put("/tempMobileLink/**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -50,6 +50,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
+        filterChainDefinitionMap.put("/dataset/field/multFieldValues", ANON);
         filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
 
         filterChainDefinitionMap.put("/tempMobileLink/**", ANON);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -304,7 +304,7 @@ public ChartViewDTO calcData(ChartViewDTO view, ChartExtRequest requestList, boo
                     if (StringUtils.equalsIgnoreCase(dto.getId(), chartViewFieldDTO.getId())) {
                         isDrill = true;
                         DatasetTableField datasetTableField = dataSetTableFieldsService.get(dto.getId());
-                        if (ObjectUtils.isNotEmpty(datasetTableField)) {
+                        if (ObjectUtils.isEmpty(datasetTableField)) {
                             DEException.throwException(Translator.get("i18n_drill_field_not_exist"));
                         }
                         ChartViewFieldDTO d = new ChartViewFieldDTO();

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -15,7 +15,6 @@
 import io.dataease.dto.sqlObj.SQLObj;
 import io.dataease.provider.query.QueryProvider;
 import io.dataease.provider.query.SQLConstants;
-import io.dataease.provider.query.oracle.OracleConstants;
 import io.dataease.provider.query.sqlserver.SqlServerSQLConstants;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -582,7 +582,7 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
                 if (StringUtils.isEmpty(sqlServerConfiguration.getSchema())) {
                     throw new Exception(Translator.get("i18n_schema_is_empty"));
                 }
-                return "SELECT TABLE_NAME FROM DATABASE.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'DS_SCHEMA' ;"
+                return "SELECT TABLE_NAME FROM \"DATABASE\".INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'DS_SCHEMA' ;"
                         .replace("DATABASE", sqlServerConfiguration.getDataBase())
                         .replace("DS_SCHEMA", sqlServerConfiguration.getSchema());
             case oracle:

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -79,9 +79,9 @@ public List<String[]> getData(DatasourceRequest dsr) throws Exception {
             }
 
         } catch (SQLException e) {
-            DataEaseException.throwException(e);
+            DataEaseException.throwException(Translator.get("i18n_sql_error") + e.getMessage());
         } catch (Exception e) {
-            DataEaseException.throwException(e);
+            DataEaseException.throwException(Translator.get("i18n_datasource_connect_error") + e.getMessage());
         }
         return list;
     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetFieldService.java
Patch:
@@ -5,5 +5,5 @@
 
 public interface DataSetFieldService {
 
-    List<Object> fieldValues(String fieldId);
+    List<Object> fieldValues(String fieldId) throws Exception;
 }

File: backend/src/main/java/io/dataease/dto/datasource/HiveConfiguration.java
Patch:
@@ -18,7 +18,7 @@ public String getJdbc() {
                     .replace("PORT", getPort().toString().trim())
                     .replace("DATABASE", getDataBase().trim());
         }else {
-            return "jdbc:hive2://HOSTNAME:PORT/DATABASE?EXTRA_PARAMS"
+            return "jdbc:hive2://HOSTNAME:PORT/DATABASE;EXTRA_PARAMS"
                     .replace("HOSTNAME", getHost().trim())
                     .replace("PORT", getPort().toString().trim())
                     .replace("DATABASE", getDataBase().trim())

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -104,7 +104,7 @@ private void error(GlobalTaskInstance taskInstance, Throwable t) {
 
     @Async
     public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO emailTemplateDTO,
-            SysUserEntity user) {
+                           SysUserEntity user) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         try {
             byte[] bytes = emailXpackService.printData(panelUrl(emailTemplateDTO.getPanelId()), tokenByUser(user),
@@ -153,7 +153,7 @@ private String tokenByUser(SysUserEntity user) {
 
     private String panelUrl(String panelId) {
         String domain = ServletUtils.domain();
-        return domain + "/#/preview/" + panelId;
+        return domain + "/#/previewScreenShot/" + panelId + "/true";
     }
 
 }

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -34,7 +34,7 @@ public class XEmailTaskServer {
 
     @PostMapping("/queryTasks/{goPage}/{pageSize}")
     public Pager<List<XpackTaskGridDTO>> queryTask(@PathVariable int goPage, @PathVariable int pageSize,
-            @RequestBody XpackGridRequest request) {
+                                                   @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskGridDTO> tasks = emailXpackService.taskGrid(request);
@@ -80,7 +80,7 @@ public String preview(@RequestBody XpackEmailViewRequest request) {
         String panelId = request.getPanelId();
         String content = request.getContent();
 
-        String url = ServletUtils.domain() + "/#/preview/" + panelId;
+        String url = ServletUtils.domain() + "/#/previewScreenShot/" + panelId + "/true";
 
         String token = ServletUtils.getToken();
         String fileId = null;
@@ -116,7 +116,7 @@ public void delete(@PathVariable Long taskId) {
 
     @PostMapping("/queryInstancies/{goPage}/{pageSize}")
     public Pager<List<XpackTaskInstanceDTO>> instancesGrid(@PathVariable int goPage, @PathVariable int pageSize,
-            @RequestBody XpackGridRequest request) {
+                                                           @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskInstanceDTO> instances = emailXpackService.taskInstanceGrid(request);

File: backend/src/main/java/io/dataease/job/sechedule/strategy/impl/EmailTaskHandler.java
Patch:
@@ -104,7 +104,7 @@ private void error(GlobalTaskInstance taskInstance, Throwable t) {
 
     @Async
     public void sendReport(GlobalTaskInstance taskInstance, XpackEmailTemplateDTO emailTemplateDTO,
-            SysUserEntity user) {
+                           SysUserEntity user) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         try {
             byte[] bytes = emailXpackService.printData(panelUrl(emailTemplateDTO.getPanelId()), tokenByUser(user),
@@ -153,7 +153,7 @@ private String tokenByUser(SysUserEntity user) {
 
     private String panelUrl(String panelId) {
         String domain = ServletUtils.domain();
-        return domain + "/#/preview/" + panelId;
+        return domain + "/#/previewScreenShot/" + panelId + "/true";
     }
 
 }

File: backend/src/main/java/io/dataease/plugins/server/XEmailTaskServer.java
Patch:
@@ -34,7 +34,7 @@ public class XEmailTaskServer {
 
     @PostMapping("/queryTasks/{goPage}/{pageSize}")
     public Pager<List<XpackTaskGridDTO>> queryTask(@PathVariable int goPage, @PathVariable int pageSize,
-            @RequestBody XpackGridRequest request) {
+                                                   @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskGridDTO> tasks = emailXpackService.taskGrid(request);
@@ -80,7 +80,7 @@ public String preview(@RequestBody XpackEmailViewRequest request) {
         String panelId = request.getPanelId();
         String content = request.getContent();
 
-        String url = ServletUtils.domain() + "/#/preview/" + panelId;
+        String url = ServletUtils.domain() + "/#/previewScreenShot/" + panelId + "/true";
 
         String token = ServletUtils.getToken();
         String fileId = null;
@@ -116,7 +116,7 @@ public void delete(@PathVariable Long taskId) {
 
     @PostMapping("/queryInstancies/{goPage}/{pageSize}")
     public Pager<List<XpackTaskInstanceDTO>> instancesGrid(@PathVariable int goPage, @PathVariable int pageSize,
-            @RequestBody XpackGridRequest request) {
+                                                           @RequestBody XpackGridRequest request) {
         EmailXpackService emailXpackService = SpringContextUtil.getBean(EmailXpackService.class);
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         List<XpackTaskInstanceDTO> instances = emailXpackService.taskInstanceGrid(request);

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtDataSetTableMapper.java
Patch:
@@ -9,4 +9,5 @@ public interface ExtDataSetTableMapper {
     List<DataSetTableDTO> search(DataSetTableRequest request);
 
     DataSetTableDTO searchOne(DataSetTableRequest request);
+
 }

File: backend/src/main/java/io/dataease/dto/panel/linkJump/PanelLinkJumpInfoDTO.java
Patch:
@@ -19,6 +19,9 @@ public class PanelLinkJumpInfoDTO extends PanelLinkJumpInfo {
 
     private String sourceJumpInfo;
 
+    //存在公共链接的目标仪表板
+    private String publicJumpId;
+
     private List<PanelLinkJumpTargetViewInfo> targetViewInfoList=new ArrayList<>();// linkType = inner 时使用
 
 

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -992,7 +992,7 @@ private StepMeta udjc(List<DatasetTableField> datasetTableFields, DatasourceType
         String tmp_code = code.replace("handleWraps", handleWraps).replace("handleBinaryType", handleBinaryTypeCode.toString());
 
         String Column_Fields;
-        if (datasourceType.equals(DatasourceTypes.oracle)) {
+        if (datasourceType.equals(DatasourceTypes.oracle) || datasourceType.equals(DatasourceTypes.db2)) {
             Column_Fields = datasetTableFields.stream().map(DatasetTableField::getOriginName).collect(Collectors.joining(","));
         } else {
             Column_Fields = datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.joining(","));

File: backend/src/main/java/io/dataease/dto/panel/linkJump/PanelLinkJumpInfoDTO.java
Patch:
@@ -19,6 +19,9 @@ public class PanelLinkJumpInfoDTO extends PanelLinkJumpInfo {
 
     private String sourceJumpInfo;
 
+    //存在公共链接的目标仪表板
+    private String publicJumpId;
+
     private List<PanelLinkJumpTargetViewInfo> targetViewInfoList=new ArrayList<>();// linkType = inner 时使用
 
 

File: backend/src/main/java/io/dataease/dto/chart/ChartViewFieldDTO.java
Patch:
@@ -46,4 +46,6 @@ public class ChartViewFieldDTO implements Serializable {
     private Integer extField;
 
     private String chartType;
+
+    private ChartFieldCompareDTO compareCalc;
 }

File: backend/src/main/java/io/dataease/dto/sqlObj/SQLObj.java
Patch:
@@ -26,4 +26,6 @@ public class SQLObj {
     private String whereField;
     private String whereAlias;
     private String whereTermAndValue;
+
+    private String limitFiled;
 }

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -898,7 +898,7 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "avg") || StringUtils.containsIgnoreCase(y.getSummary(), "pop")) {
                 String cast = String.format(EsSqlLConstants.CAST, originField, y.getDeType() == DeTypeConstants.DE_INT ? "bigint" : "double");
                 String agg = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), cast);
-                fieldName = String.format(EsSqlLConstants.CAST, agg, EsSqlLConstants.DEFAULT_FLOAT_FORMAT);
+                fieldName = String.format(EsSqlLConstants.ROUND, agg, "2");
             } else {
                 String cast = String.format(EsSqlLConstants.CAST, originField, y.getDeType() == DeTypeConstants.DE_INT ? "bigint" : "double");
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), cast);

File: backend/src/main/java/io/dataease/provider/query/es/EsQueryProvider.java
Patch:
@@ -898,7 +898,7 @@ private SQLObj getYFields(ChartViewFieldDTO y, String originField, String fieldA
             if (StringUtils.equalsIgnoreCase(y.getSummary(), "avg") || StringUtils.containsIgnoreCase(y.getSummary(), "pop")) {
                 String cast = String.format(EsSqlLConstants.CAST, originField, y.getDeType() == DeTypeConstants.DE_INT ? "bigint" : "double");
                 String agg = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), cast);
-                fieldName = String.format(EsSqlLConstants.CAST, agg, EsSqlLConstants.DEFAULT_FLOAT_FORMAT);
+                fieldName = String.format(EsSqlLConstants.ROUND, agg, "2");
             } else {
                 String cast = String.format(EsSqlLConstants.CAST, originField, y.getDeType() == DeTypeConstants.DE_INT ? "bigint" : "double");
                 fieldName = String.format(EsSqlLConstants.AGG_FIELD, y.getSummary(), cast);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1263,7 +1263,7 @@ public ExcelFileData excelSaveAndParse(MultipartFile file, String tableId, Integ
         } else {
             retrunSheetDataList = excelSheetDataList;
         }
-
+        retrunSheetDataList = retrunSheetDataList.stream().filter(excelSheetData -> CollectionUtils.isNotEmpty(excelSheetData.getFields())).collect(Collectors.toList());
         // save file
         String excelId = UUID.randomUUID().toString();
         String filePath = saveFile(file, excelId);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1263,7 +1263,7 @@ public ExcelFileData excelSaveAndParse(MultipartFile file, String tableId, Integ
         } else {
             retrunSheetDataList = excelSheetDataList;
         }
-
+        retrunSheetDataList = retrunSheetDataList.stream().filter(excelSheetData -> CollectionUtils.isNotEmpty(excelSheetData.getFields())).collect(Collectors.toList());
         // save file
         String excelId = UUID.randomUUID().toString();
         String filePath = saveFile(file, excelId);

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtVAuthModelMapper.java
Patch:
@@ -8,6 +8,6 @@
 
 public interface ExtVAuthModelMapper {
 
-    List<VAuthModelDTO> queryAuthModel (@Param("record") VAuthModelRequest request);
+    List<VAuthModelDTO> queryAuthModel (@Param("record") VAuthModelRequest record);
 
 }

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtVAuthModelMapper.java
Patch:
@@ -8,6 +8,6 @@
 
 public interface ExtVAuthModelMapper {
 
-    List<VAuthModelDTO> queryAuthModel (@Param("record") VAuthModelRequest request);
+    List<VAuthModelDTO> queryAuthModel (@Param("record") VAuthModelRequest record);
 
 }

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -700,7 +700,7 @@ public String wrapSql(String sql) {
         if (sql.lastIndexOf(";") == (sql.length() - 1)) {
             sql = sql.substring(0, sql.length() - 1);
         }
-        String tmpSql = "SELECT * FROM (" + sql + ") AS tmp " + " LIMIT 0";
+        String tmpSql = "SELECT TOP 0 * FROM (" + sql + ") AS DE_SQLSERVER_TMP ";
         return tmpSql;
     }
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -980,6 +980,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                     datasetTableField.setTableId(datasetTable.getId());
                     datasetTableField.setColumnIndex(i);
                 }
+                dataSetTableFieldsService.deleteByTableId(datasetTable.getId());
                 dataSetTableFieldsService.batchEdit(fieldList);
                 // custom 创建doris视图
                 if (datasetTable.getMode() == 1) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -980,6 +980,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                     datasetTableField.setTableId(datasetTable.getId());
                     datasetTableField.setColumnIndex(i);
                 }
+                dataSetTableFieldsService.deleteByTableId(datasetTable.getId());
                 dataSetTableFieldsService.batchEdit(fieldList);
                 // custom 创建doris视图
                 if (datasetTable.getMode() == 1) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -980,6 +980,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                     datasetTableField.setTableId(datasetTable.getId());
                     datasetTableField.setColumnIndex(i);
                 }
+                dataSetTableFieldsService.deleteByTableId(datasetTable.getId());
                 dataSetTableFieldsService.batchEdit(fieldList);
                 // custom 创建doris视图
                 if (datasetTable.getMode() == 1) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -980,6 +980,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                     datasetTableField.setTableId(datasetTable.getId());
                     datasetTableField.setColumnIndex(i);
                 }
+                dataSetTableFieldsService.deleteByTableId(datasetTable.getId());
                 dataSetTableFieldsService.batchEdit(fieldList);
                 // custom 创建doris视图
                 if (datasetTable.getMode() == 1) {

File: backend/src/main/java/io/dataease/base/domain/VAuthModel.java
Patch:
@@ -21,5 +21,7 @@ public class VAuthModel implements Serializable {
 
     private Long level;
 
+    private Long mode;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.auth.filter;
 
+import com.auth0.jwt.algorithms.Algorithm;
 import io.dataease.auth.entity.ASKToken;
 import io.dataease.auth.entity.JWTToken;
 import io.dataease.auth.entity.SysUserEntity;
@@ -115,9 +116,9 @@ private String refreshToken(ServletRequest request, ServletResponse response) th
             DataEaseException.throwException(Translator.get("i18n_not_find_user"));
         }
         String password = user.getPassword();
-
+        Algorithm algorithm = Algorithm.HMAC256(password);
+        JWTUtils.verifySign(algorithm, token);
         String newToken = JWTUtils.sign(tokenInfo, password);
-
         // 设置响应的Header头新Token
         HttpServletResponse httpServletResponse = (HttpServletResponse) response;
         httpServletResponse.addHeader("Access-Control-Expose-Headers", "RefreshAuthorization");

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.auth.filter;
 
+import com.auth0.jwt.algorithms.Algorithm;
 import io.dataease.auth.entity.ASKToken;
 import io.dataease.auth.entity.JWTToken;
 import io.dataease.auth.entity.SysUserEntity;
@@ -115,9 +116,9 @@ private String refreshToken(ServletRequest request, ServletResponse response) th
             DataEaseException.throwException(Translator.get("i18n_not_find_user"));
         }
         String password = user.getPassword();
-
+        Algorithm algorithm = Algorithm.HMAC256(password);
+        JWTUtils.verifySign(algorithm, token);
         String newToken = JWTUtils.sign(tokenInfo, password);
-
         // 设置响应的Header头新Token
         HttpServletResponse httpServletResponse = (HttpServletResponse) response;
         httpServletResponse.addHeader("Access-Control-Expose-Headers", "RefreshAuthorization");

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.auth.filter;
 
+import com.auth0.jwt.algorithms.Algorithm;
 import io.dataease.auth.entity.ASKToken;
 import io.dataease.auth.entity.JWTToken;
 import io.dataease.auth.entity.SysUserEntity;
@@ -115,9 +116,9 @@ private String refreshToken(ServletRequest request, ServletResponse response) th
             DataEaseException.throwException(Translator.get("i18n_not_find_user"));
         }
         String password = user.getPassword();
-
+        Algorithm algorithm = Algorithm.HMAC256(password);
+        JWTUtils.verifySign(algorithm, token);
         String newToken = JWTUtils.sign(tokenInfo, password);
-
         // 设置响应的Header头新Token
         HttpServletResponse httpServletResponse = (HttpServletResponse) response;
         httpServletResponse.addHeader("Access-Control-Expose-Headers", "RefreshAuthorization");

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -41,7 +41,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
-        filterChainDefinitionMap.put("/xggznb/**", ANON);
 
 
         //获取主题信息

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -32,7 +32,7 @@
 public class PanelLinkService {
 
     private static final String BASEURL = "/link.html?link=";
-    private static final String SHORT_URL_PREFIX = "/xggznb/";
+    private static final String SHORT_URL_PREFIX = "/link/";
 
     @Resource
     private PanelLinkMapper mapper;

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -41,7 +41,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
-        filterChainDefinitionMap.put("/xggznb/**", ANON);
 
 
         //获取主题信息

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -32,7 +32,7 @@
 public class PanelLinkService {
 
     private static final String BASEURL = "/link.html?link=";
-    private static final String SHORT_URL_PREFIX = "/xggznb/";
+    private static final String SHORT_URL_PREFIX = "/link/";
 
     @Resource
     private PanelLinkMapper mapper;

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -41,7 +41,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
-        filterChainDefinitionMap.put("/xggznb/**", ANON);
 
 
         //获取主题信息

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -32,7 +32,7 @@
 public class PanelLinkService {
 
     private static final String BASEURL = "/link.html?link=";
-    private static final String SHORT_URL_PREFIX = "/xggznb/";
+    private static final String SHORT_URL_PREFIX = "/link/";
 
     @Resource
     private PanelLinkMapper mapper;

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -121,6 +121,9 @@ private List<String[]> fetchResult(ResultSet rs) throws Exception {
                             row[j] = rs.getDate(j + 1).toString();
                         }
                         break;
+                    case Types.BOOLEAN:
+                        row[j] = rs.getBoolean(j + 1) ? "1" : "0";
+                        break;
                     default:
                         row[j] = rs.getString(j + 1);
                         break;

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -40,6 +40,7 @@ public class HiveQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toLowerCase();
         switch (field) {
             case "varchar":
             case "string":

File: backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java
Patch:
@@ -121,6 +121,9 @@ private List<String[]> fetchResult(ResultSet rs) throws Exception {
                             row[j] = rs.getDate(j + 1).toString();
                         }
                         break;
+                    case Types.BOOLEAN:
+                        row[j] = rs.getBoolean(j + 1) ? "1" : "0";
+                        break;
                     default:
                         row[j] = rs.getString(j + 1);
                         break;

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -40,6 +40,7 @@ public class HiveQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toLowerCase();
         switch (field) {
             case "varchar":
             case "string":

File: backend/src/main/java/io/dataease/provider/query/hive/HiveQueryProvider.java
Patch:
@@ -49,6 +49,7 @@ public Integer transFieldType(String field) {
             case "date":
                 return 1;// 时间
             case "tinyint":
+            case "smallint":
             case "int":
             case "bigint":
                 return 2;// 整型

File: backend/src/main/java/io/dataease/provider/query/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -8,13 +8,12 @@
 import io.dataease.base.mapper.DatasetTableFieldMapper;
 import io.dataease.commons.constants.DeTypeConstants;
 import io.dataease.controller.request.chart.ChartExtFilterRequest;
-import io.dataease.dto.datasource.JdbcConfiguration;
 import io.dataease.dto.chart.ChartCustomFilterDTO;
 import io.dataease.dto.chart.ChartViewFieldDTO;
+import io.dataease.dto.datasource.JdbcConfiguration;
 import io.dataease.dto.sqlObj.SQLObj;
 import io.dataease.provider.query.QueryProvider;
 import io.dataease.provider.query.SQLConstants;
-import io.dataease.provider.query.mysql.MySQLConstants;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
 import org.apache.commons.lang3.StringUtils;

File: backend/src/main/java/io/dataease/provider/query/pg/PgConstants.java
Patch:
@@ -19,8 +19,6 @@ public class PgConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
-    public static final String TO_DATE = "to_date(%s,'%s')";
-
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "YYYY-MM-DD HH24:MI:SS";

File: backend/src/main/java/io/dataease/provider/query/pg/PgQueryProvider.java
Patch:
@@ -790,7 +790,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
             }
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                    whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
+                    whereName = String.format(PgConstants.CAST, originName, "timestamp");
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -854,7 +854,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
 
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                    whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
+                    whereName = String.format(PgConstants.CAST, originName, "timestamp");
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -945,7 +945,7 @@ private SQLObj getXFields(ChartViewFieldDTO x, String originField, String fieldA
             if (x.getDeType() == DeTypeConstants.DE_TIME) {
                 String format = transDateFormat(x.getDateStyle(), x.getDatePattern());
                 if (x.getDeExtractType() == DeTypeConstants.DE_STRING) {
-                    fieldName = String.format(PgConstants.DATE_FORMAT, String.format(PgConstants.TO_DATE, originField, "YYYY-MM-DD HH24:MI:SS"), format);
+                    fieldName = String.format(PgConstants.DATE_FORMAT, String.format(PgConstants.CAST, originField, "timestamp"), format);
                 } else {
                     String cast = String.format(PgConstants.CAST, originField, "bigint");
                     String from_unixtime = String.format(PgConstants.FROM_UNIXTIME, cast);

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -727,7 +727,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
             }
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                    whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
+                    whereName = String.format(PgConstants.CAST, originName, "timestamp");
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
@@ -785,7 +785,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
 
             if (field.getDeType() == 1) {
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
-                    whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
+                    whereName = String.format(PgConstants.CAST, originName, "timestamp");
                 }
                 if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");

File: backend/src/main/java/io/dataease/provider/query/redshift/RedshiftQueryProvider.java
Patch:
@@ -183,7 +183,7 @@ public String createQueryTableWithPage(String table, List<DatasetTableField> fie
 
     @Override
     public String createQuerySQLWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
-        return createQuerySQL(sql, fields, isGroup, null) + " LIMIT " + realSize + " offset " + (page - 1) * pageSize;
+        return createQuerySQLAsTmp(sql, fields, isGroup) + " LIMIT " + realSize + " offset " + (page - 1) * pageSize;
     }
 
     @Override

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -53,7 +53,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
 
         //未读消息数量
-        filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);
+        // filterChainDefinitionMap.put("/api/sys_msg/unReadCount/**", ANON);
 
         filterChainDefinitionMap.put("/**/*.json", ANON);
         filterChainDefinitionMap.put("/system/ui/**", ANON);

File: backend/src/main/java/io/dataease/base/domain/SysMsgChannel.java
Patch:
@@ -2,10 +2,12 @@
 
 import java.io.Serializable;
 
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 @Data
+@ApiModel("消息渠道")
 public class SysMsgChannel implements Serializable {
 
     @ApiModelProperty("消息渠道ID")

File: backend/src/main/java/io/dataease/base/domain/SysMsgSetting.java
Patch:
@@ -2,10 +2,12 @@
 
 import java.io.Serializable;
 
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 @Data
+@ApiModel("订阅信息")
 public class SysMsgSetting implements Serializable {
     @ApiModelProperty(hidden = true)
     private Long msgSettingId;

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                return "nolic.html";
-                // return "doc.html";
+                /* return "nolic.html"; */
+                return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/sys/request/MsgRequest.java
Patch:
@@ -1,12 +1,14 @@
 package io.dataease.controller.sys.request;
 
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.io.Serializable;
 import java.util.List;
 
 @Data
+@ApiModel("消息条件")
 public class MsgRequest implements Serializable {
 
     private static final long serialVersionUID = 1920091635946508658L;

File: backend/src/main/java/io/dataease/controller/sys/request/SysUserCreateRequest.java
Patch:
@@ -1,12 +1,14 @@
 package io.dataease.controller.sys.request;
 
 import io.dataease.base.domain.SysUser;
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.util.List;
 
 @Data
+@ApiModel("用户信息")
 public class SysUserCreateRequest extends SysUser {
 
     @ApiModelProperty(value = "角色ID集合", required = true, position = 7)

File: backend/src/main/java/io/dataease/controller/sys/request/SysUserPwdRequest.java
Patch:
@@ -1,12 +1,14 @@
 package io.dataease.controller.sys.request;
 
 
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.io.Serializable;
 
 @Data
+@ApiModel("更新密码参数")
 public class SysUserPwdRequest implements Serializable {
 
     @ApiModelProperty(value = "用户ID", required = true)

File: backend/src/main/java/io/dataease/controller/sys/request/SysUserStateRequest.java
Patch:
@@ -1,16 +1,18 @@
 package io.dataease.controller.sys.request;
 
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.io.Serializable;
 
 @Data
+@ApiModel("更新状态参数")
 public class SysUserStateRequest implements Serializable {
 
     @ApiModelProperty(value = "用户ID", required = true)
     private Long userId;
 
-    @ApiModelProperty(value = "状态", required = true, allowableValues = "1,0")
+    @ApiModelProperty(value = "状态{1:可用, 0:禁用}", required = true, allowableValues = "1,0")
     private Long enabled;
 }

File: backend/src/main/java/io/dataease/controller/sys/response/SettingTreeNode.java
Patch:
@@ -1,13 +1,15 @@
 package io.dataease.controller.sys.response;
 
 
+import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.io.Serializable;
 import java.util.List;
 
 @Data
+@ApiModel("消息类型节点")
 public class SettingTreeNode implements Serializable {
 
     private static final long serialVersionUID = -2416283978185545199L;

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -144,6 +144,7 @@ public void saveLdapUsers(LdapAddRequest request) {
         List<SysUser> sysUsers = users.stream().map(user -> {
             SysUser sysUser = BeanUtils.copyBean(new SysUser(), user);
             sysUser.setUsername(user.getUsername());
+            sysUser.setNickName(user.getNickname());
             sysUser.setDeptId(request.getDeptId());
             sysUser.setPassword(CodingUtil.md5(DEFAULT_PWD));
             sysUser.setCreateTime(now);

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -73,11 +73,11 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
                 ldapAddRequest.setEnabled(1L);
                 // ldapAddRequest.setDeptId(1L);
                 ldapAddRequest.setRoleIds(new ArrayList<Long>(){{add(2L);}});
-                sysUserService.validateExistUser(ldapUserEntity.getUserName(),  ldapUserEntity.getEmail());
+                sysUserService.validateExistUser(ldapUserEntity.getUsername(),  ldapUserEntity.getEmail());
                 sysUserService.saveLdapUsers(ldapAddRequest);
             }
             
-            username = validateResult.getData().getUserName();
+            username = validateResult.getData().getUsername();
         }
         // 增加ldap登录方式
 

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -143,7 +143,7 @@ public void saveLdapUsers(LdapAddRequest request) {
         List<XpackLdapUserEntity> users = request.getUsers();
         List<SysUser> sysUsers = users.stream().map(user -> {
             SysUser sysUser = BeanUtils.copyBean(new SysUser(), user);
-            sysUser.setUsername(user.getUserName());
+            sysUser.setUsername(user.getUsername());
             sysUser.setDeptId(request.getDeptId());
             sysUser.setPassword(CodingUtil.md5(DEFAULT_PWD));
             sysUser.setCreateTime(now);

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtPanelGroupMapper.java
Patch:
@@ -20,4 +20,7 @@ public interface ExtPanelGroupMapper {
     PanelGroupDTO panelGroup(String id);
 
 
+    void copyPanelView(@Param("pid") String panelId);
+
+
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -50,6 +50,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
+        filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
 
         //未读消息数量
         filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -50,6 +50,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
         filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
+        filterChainDefinitionMap.put("/linkJump/queryPanelJumpInfo/**", ANON);
 
         //未读消息数量
         filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -49,6 +49,8 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
+        filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
+
         //未读消息数量
         filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);
 

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -45,6 +45,8 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
+        filterChainDefinitionMap.put("/dataset/field/fieldValues/**", ANON);
+
         //未读消息数量
         filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);
 

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -42,8 +42,9 @@ public Pager<List<MsgGridDto>> messages(@PathVariable int goPage, @PathVariable
             List<SysMsgType> sysMsgTypes = sysMsgService.queryMsgTypes();
             typeIds = sysMsgTypes.stream().filter(sysMsgType -> msgRequest.getType() == sysMsgType.getPid()).map(SysMsgType::getMsgTypeId).collect(Collectors.toList());
         }
+        Long overTime = sysMsgService.overTime();
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        Pager<List<MsgGridDto>> listPager = PageUtils.setPageInfo(page, sysMsgService.queryGrid(userId, msgRequest, typeIds));
+        Pager<List<MsgGridDto>> listPager = PageUtils.setPageInfo(page, sysMsgService.queryGrid(userId, msgRequest, typeIds, overTime));
         return listPager;
     }
 

File: backend/src/main/java/io/dataease/controller/sys/MsgController.java
Patch:
@@ -42,8 +42,9 @@ public Pager<List<MsgGridDto>> messages(@PathVariable int goPage, @PathVariable
             List<SysMsgType> sysMsgTypes = sysMsgService.queryMsgTypes();
             typeIds = sysMsgTypes.stream().filter(sysMsgType -> msgRequest.getType() == sysMsgType.getPid()).map(SysMsgType::getMsgTypeId).collect(Collectors.toList());
         }
+        Long overTime = sysMsgService.overTime();
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        Pager<List<MsgGridDto>> listPager = PageUtils.setPageInfo(page, sysMsgService.queryGrid(userId, msgRequest, typeIds));
+        Pager<List<MsgGridDto>> listPager = PageUtils.setPageInfo(page, sysMsgService.queryGrid(userId, msgRequest, typeIds, overTime));
         return listPager;
     }
 

File: backend/src/main/java/io/dataease/datasource/provider/EsProvider.java
Patch:
@@ -20,6 +20,7 @@
 
 import java.nio.charset.StandardCharsets;
 import java.util.*;
+import java.util.stream.Collectors;
 
 @Service("es")
 public class EsProvider extends DatasourceProvider {
@@ -181,6 +182,7 @@ public List<String> getTables(DatasourceRequest datasourceRequest) throws Except
         try {
             String response = exexQuery(datasourceRequest, "show tables", "?format=json");
             tables = fetchTables(response);
+            tables = tables.stream().filter(table -> !table.startsWith(".")).collect(Collectors.toList());
         } catch (Exception e) {
             DataEaseException.throwException(e);
         }

File: backend/src/main/java/io/dataease/datasource/provider/EsProvider.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.nio.charset.StandardCharsets;
 import java.util.*;
+import java.util.stream.Collectors;
 
 @Service("es")
 public class EsProvider extends DatasourceProvider {
@@ -177,6 +178,7 @@ public List<String> getTables(DatasourceRequest datasourceRequest) throws Except
         try {
             String response = exexQuery(datasourceRequest, "show tables", "?format=json");
             tables = fetchTables(response);
+            tables = tables.stream().filter(table -> !table.startsWith(".")).collect(Collectors.toList());
         } catch (Exception e) {
             DataEaseException.throwException(e);
         }

File: backend/src/main/java/io/dataease/provider/pg/PgConstants.java
Patch:
@@ -15,15 +15,15 @@ public class PgConstants extends SQLConstants {
 
     public static final String UNIX_TIMESTAMP = "floor(extract(epoch from(( %s - timestamp '1970-01-01 00:00:00')*1000))) ";
 
-    public static final String DATE_FORMAT = "to_char(%s, %s)";
+    public static final String DATE_FORMAT = "to_char(%s, '%s')";
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
     public static final String TO_DATE = "to_date(%s,'%s')";
 
     public static final String CAST = "CAST(%s AS %s)";
 
-    public static final String DEFAULT_DATE_FORMAT = "'YYYY-MM-DD HH24:MI:SS'";
+    public static final String DEFAULT_DATE_FORMAT = "YYYY-MM-DD HH24:MI:SS";
 
     public static final String DEFAULT_INT_FORMAT = "numeric(18,0)";
 

File: backend/src/main/java/io/dataease/provider/pg/PgConstants.java
Patch:
@@ -15,15 +15,15 @@ public class PgConstants extends SQLConstants {
 
     public static final String UNIX_TIMESTAMP = "floor(extract(epoch from(( %s - timestamp '1970-01-01 00:00:00')*1000))) ";
 
-    public static final String DATE_FORMAT = "to_char(%s, %s)";
+    public static final String DATE_FORMAT = "to_char(%s, '%s')";
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
     public static final String TO_DATE = "to_date(%s,'%s')";
 
     public static final String CAST = "CAST(%s AS %s)";
 
-    public static final String DEFAULT_DATE_FORMAT = "'YYYY-MM-DD HH24:MI:SS'";
+    public static final String DEFAULT_DATE_FORMAT = "YYYY-MM-DD HH24:MI:SS";
 
     public static final String DEFAULT_INT_FORMAT = "numeric(18,0)";
 

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsReader.java
Patch:
@@ -23,8 +23,6 @@
  **/
 public class ExcelXlsReader implements HSSFListener {
 
-    public ExcelReaderUtil excelReaderUtil = new ExcelReaderUtil();
-
     private int minColums = -1;
 
     private POIFSFileSystem fs;

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -727,7 +727,7 @@ public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields)
 
     @Override
     public String convertTableToSql(String tableName, Datasource ds) {
-        return "SELECT * FROM " + String.format(CKConstants.KEYWORD_TABLE, tableName);
+        return createSQLPreview("SELECT * FROM " + String.format(CKConstants.KEYWORD_TABLE, tableName), null);
     }
 
     public String transMysqlFilterTerm(String term) {

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -727,7 +727,7 @@ public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields)
 
     @Override
     public String convertTableToSql(String tableName, Datasource ds) {
-        return "SELECT * FROM " + String.format(CKConstants.KEYWORD_TABLE, tableName);
+        return createSQLPreview("SELECT * FROM " + String.format(CKConstants.KEYWORD_TABLE, tableName), null);
     }
 
     public String transMysqlFilterTerm(String term) {

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -39,6 +39,7 @@ public class CKQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toUpperCase();
         if (field.indexOf("ARRAY") > -1) {
             field = "ARRAY";
         }

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -39,6 +39,7 @@ public class CKQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toUpperCase();
         if (field.indexOf("ARRAY") > -1) {
             field = "ARRAY";
         }

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -319,6 +319,7 @@ public void setNextDataType(Attributes attributes) {
         nextDataType = CellDataType.NUMBER; //cellType为空，则表示该单元格类型为数字
         formatIndex = -1;
         formatString = null;
+        isDateFormat = false;
         String cellType = attributes.getValue("t"); //单元格类型
         if ("b".equals(cellType)) { //处理布尔值
             nextDataType = CellDataType.BOOL;

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                 //return "nolic.html";
-                return "doc.html";
+                return "nolic.html";
+                // return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                 //return "nolic.html";
-                return "doc.html";
+                return "nolic.html";
+                // return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                 //return "nolic.html";
-                return "doc.html";
+                return "nolic.html";
+                // return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/datasource/provider/JdbcProvider.java
Patch:
@@ -417,7 +417,7 @@ private Connection getConnection(DatasourceRequest datasourceRequest) throws Exc
                 MysqlConfiguration mysqlConfiguration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), MysqlConfiguration.class);
                 username = mysqlConfiguration.getUsername();
                 password = mysqlConfiguration.getPassword();
-                driver = mysqlConfiguration.getDriver();
+                driver = "com.mysql.jdbc.Driver";
                 jdbcurl = mysqlConfiguration.getJdbc();
                 break;
             case sqlServer:

File: backend/src/main/java/io/dataease/auth/api/dto/LoginDto.java
Patch:
@@ -19,6 +19,6 @@ public class LoginDto implements Serializable {
      * 1：ldap登录
      * 2：单点登录
      */
-    @ApiModelProperty(value = "登录方式", required = true, allowableValues = "0, 1, 2")
+    @ApiModelProperty(value = "登录方式{0:普通登录, 1:ldap登录}", required = true, allowableValues = "0, 1")
     private int loginType;
 }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                 return "nolic.html";
-                // return "doc.html";
+                 //return "nolic.html";
+                return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -10,7 +10,6 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.sys.base.BaseGridRequest;
-import io.dataease.controller.sys.request.LdapAddRequest;
 import io.dataease.controller.sys.request.SysUserCreateRequest;
 import io.dataease.controller.sys.request.SysUserPwdRequest;
 import io.dataease.controller.sys.request.SysUserStateRequest;
@@ -130,11 +129,11 @@ public Pager<List<SysRole>> roleGrid(@PathVariable int goPage, @PathVariable int
     }
 
 
-    @ApiOperation("同步用户")
+    /* @ApiOperation("同步用户")
     @PostMapping("/sync")
     public void importLdap(@RequestBody LdapAddRequest request) {
         sysUserService.saveLdapUsers(request);
-    }
+    } */
 
     @ApiOperation("已同步用户")
     @PostMapping("/existLdapUsers")

File: backend/src/main/java/io/dataease/auth/api/dto/LoginDto.java
Patch:
@@ -19,6 +19,6 @@ public class LoginDto implements Serializable {
      * 1：ldap登录
      * 2：单点登录
      */
-    @ApiModelProperty(value = "登录方式", required = true, allowableValues = "0, 1, 2")
+    @ApiModelProperty(value = "登录方式{0:普通登录, 1:ldap登录}", required = true, allowableValues = "0, 1")
     private int loginType;
 }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                 return "nolic.html";
-                // return "doc.html";
+                 //return "nolic.html";
+                return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -10,7 +10,6 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.sys.base.BaseGridRequest;
-import io.dataease.controller.sys.request.LdapAddRequest;
 import io.dataease.controller.sys.request.SysUserCreateRequest;
 import io.dataease.controller.sys.request.SysUserPwdRequest;
 import io.dataease.controller.sys.request.SysUserStateRequest;
@@ -130,11 +129,11 @@ public Pager<List<SysRole>> roleGrid(@PathVariable int goPage, @PathVariable int
     }
 
 
-    @ApiOperation("同步用户")
+    /* @ApiOperation("同步用户")
     @PostMapping("/sync")
     public void importLdap(@RequestBody LdapAddRequest request) {
         sysUserService.saveLdapUsers(request);
-    }
+    } */
 
     @ApiOperation("已同步用户")
     @PostMapping("/existLdapUsers")

File: backend/src/main/java/io/dataease/auth/api/dto/LoginDto.java
Patch:
@@ -19,6 +19,6 @@ public class LoginDto implements Serializable {
      * 1：ldap登录
      * 2：单点登录
      */
-    @ApiModelProperty(value = "登录方式", required = true, allowableValues = "0, 1, 2")
+    @ApiModelProperty(value = "登录方式{0:普通登录, 1:ldap登录}", required = true, allowableValues = "0, 1")
     private int loginType;
 }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                 return "nolic.html";
-                // return "doc.html";
+                 //return "nolic.html";
+                return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/sys/SysUserController.java
Patch:
@@ -10,7 +10,6 @@
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.sys.base.BaseGridRequest;
-import io.dataease.controller.sys.request.LdapAddRequest;
 import io.dataease.controller.sys.request.SysUserCreateRequest;
 import io.dataease.controller.sys.request.SysUserPwdRequest;
 import io.dataease.controller.sys.request.SysUserStateRequest;
@@ -130,11 +129,11 @@ public Pager<List<SysRole>> roleGrid(@PathVariable int goPage, @PathVariable int
     }
 
 
-    @ApiOperation("同步用户")
+    /* @ApiOperation("同步用户")
     @PostMapping("/sync")
     public void importLdap(@RequestBody LdapAddRequest request) {
         sysUserService.saveLdapUsers(request);
-    }
+    } */
 
     @ApiOperation("已同步用户")
     @PostMapping("/existLdapUsers")

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -959,12 +959,12 @@ private StepMeta outputStep(String dorisOutputTable, List<DatasetTableField> dat
             outputFields[datasetTableFields.size()] = textFileField;
 
             textFileOutputMeta.setOutputFields(outputFields);
-        }else if (datasource.getType().equalsIgnoreCase(DatasourceTypes.sqlServer.name()) || datasource.getType().equalsIgnoreCase(DatasourceTypes.pg.name())){
+        }else if (datasource.getType().equalsIgnoreCase(DatasourceTypes.sqlServer.name()) || datasource.getType().equalsIgnoreCase(DatasourceTypes.pg.name()) || datasource.getType().equalsIgnoreCase(DatasourceTypes.mysql.name())){
             TextFileField[] outputFields = new TextFileField[datasetTableFields.size() + 1];
             for(int i=0;i< datasetTableFields.size();i++){
                 TextFileField textFileField = new TextFileField();
                 textFileField.setName(datasetTableFields.get(i).getDataeaseName());
-                if (datasetTableFields.get(i).getDeExtractType() == 1) {
+                if (datasetTableFields.get(i).getDeExtractType() == DeTypeConstants.DE_TIME) {
                     textFileField.setType("String");
                     textFileField.setFormat("yyyy-MM-dd HH:mm:ss");
                 } else {
@@ -984,7 +984,7 @@ private StepMeta outputStep(String dorisOutputTable, List<DatasetTableField> dat
             for(int i=0;i< datasetTableFields.size();i++){
                 TextFileField textFileField = new TextFileField();
                 textFileField.setName(datasetTableFields.get(i).getDataeaseName());
-                if (datasetTableFields.get(i).getDeExtractType() == 2) {
+                if (datasetTableFields.get(i).getDeExtractType() == DeTypeConstants.DE_INT) {
                     textFileField.setType("Integer");
                     textFileField.setFormat("0");
                 } else {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -959,12 +959,12 @@ private StepMeta outputStep(String dorisOutputTable, List<DatasetTableField> dat
             outputFields[datasetTableFields.size()] = textFileField;
 
             textFileOutputMeta.setOutputFields(outputFields);
-        }else if (datasource.getType().equalsIgnoreCase(DatasourceTypes.sqlServer.name()) || datasource.getType().equalsIgnoreCase(DatasourceTypes.pg.name())){
+        }else if (datasource.getType().equalsIgnoreCase(DatasourceTypes.sqlServer.name()) || datasource.getType().equalsIgnoreCase(DatasourceTypes.pg.name()) || datasource.getType().equalsIgnoreCase(DatasourceTypes.mysql.name())){
             TextFileField[] outputFields = new TextFileField[datasetTableFields.size() + 1];
             for(int i=0;i< datasetTableFields.size();i++){
                 TextFileField textFileField = new TextFileField();
                 textFileField.setName(datasetTableFields.get(i).getDataeaseName());
-                if (datasetTableFields.get(i).getDeExtractType() == 1) {
+                if (datasetTableFields.get(i).getDeExtractType() == DeTypeConstants.DE_TIME) {
                     textFileField.setType("String");
                     textFileField.setFormat("yyyy-MM-dd HH:mm:ss");
                 } else {
@@ -984,7 +984,7 @@ private StepMeta outputStep(String dorisOutputTable, List<DatasetTableField> dat
             for(int i=0;i< datasetTableFields.size();i++){
                 TextFileField textFileField = new TextFileField();
                 textFileField.setName(datasetTableFields.get(i).getDataeaseName());
-                if (datasetTableFields.get(i).getDeExtractType() == 2) {
+                if (datasetTableFields.get(i).getDeExtractType() == DeTypeConstants.DE_INT) {
                     textFileField.setType("Integer");
                     textFileField.setFormat("0");
                 } else {

File: backend/src/main/java/io/dataease/datasource/provider/DatasourceProvider.java
Patch:
@@ -15,9 +15,9 @@ public abstract class DatasourceProvider {
 
     abstract public List<String> getTables(DatasourceRequest datasourceRequest) throws Exception;
 
-    public List<TableFiled> getTableFileds(DatasourceRequest datasourceRequest) throws Exception {
-        return new ArrayList<>();
-    };
+//    public List<TableFiled> getTableFileds(DatasourceRequest datasourceRequest) throws Exception {
+//        return new ArrayList<>();
+//    };
 
     public void checkStatus(DatasourceRequest datasourceRequest) throws Exception {
         getData(datasourceRequest);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -387,8 +387,9 @@ public List<TableFiled> getFields(DataSetTableRequest dataSetTableRequest) throw
         DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());
         DatasourceRequest datasourceRequest = new DatasourceRequest();
         datasourceRequest.setDatasource(ds);
-        datasourceRequest.setTable(new Gson().fromJson(dataSetTableRequest.getInfo(), DataTableInfoDTO.class).getTable());
-        return datasourceProvider.getTableFileds(datasourceRequest);
+        QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
+        datasourceRequest.setQuery(qp.convertTableToSql(new Gson().fromJson(dataSetTableRequest.getInfo(), DataTableInfoDTO.class).getTable(), ds));
+        return datasourceProvider.fetchResultField(datasourceRequest);
     }
 
     public Map<String, List<DatasetTableField>> getFieldsFromDE(DataSetTableRequest dataSetTableRequest) throws Exception {

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -101,7 +101,7 @@ public Integer transFieldSize(String field){
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 0,1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp " + " LIMIT 0,1000";
     }
 
     @Override
@@ -716,7 +716,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/es/EsQueryProvider.java
Patch:
@@ -105,7 +105,7 @@ public static Integer transFieldTypeSize(String field) {
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp " + " LIMIT 1000";
     }
 
     @Override
@@ -645,7 +645,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             stringBuilder.append("\"").append(f.getOriginName()).append("\" AS ").append(f.getDataeaseName());
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -73,7 +73,7 @@ public Integer transFieldType(String field) {
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 0,1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp " + " LIMIT 0,1000";
     }
 
     @Override
@@ -684,7 +684,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -730,7 +730,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             return stringBuilder.toString();
         }).toArray(String[]::new);
         OracleConfigration oracleConfigration = new Gson().fromJson(ds.getConfiguration(), OracleConfigration.class);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), oracleConfigration.getSchema() + ".\"" + table + "\"");
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), oracleConfigration.getSchema() + ".\"" + table + "\"");
     }
 
     @Override
@@ -740,7 +740,7 @@ public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields)
             stringBuilder.append(" \"").append(f.getOriginName()).append("\"");
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), " (" + sqlFix(sql) + ") DE_TMP ");
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), " (" + sqlFix(sql) + ") DE_TMP ");
     }
 
     public String transMysqlFilterTerm(String term) {

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -101,7 +101,7 @@ public Integer transFieldSize(String field){
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 0,1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp " + " LIMIT 0,1000";
     }
 
     @Override
@@ -716,7 +716,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/es/EsQueryProvider.java
Patch:
@@ -105,7 +105,7 @@ public static Integer transFieldTypeSize(String field) {
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp " + " LIMIT 1000";
     }
 
     @Override
@@ -645,7 +645,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             stringBuilder.append("\"").append(f.getOriginName()).append("\" AS ").append(f.getDataeaseName());
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -73,7 +73,7 @@ public Integer transFieldType(String field) {
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 0,1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp " + " LIMIT 0,1000";
     }
 
     @Override
@@ -684,7 +684,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             }
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -730,7 +730,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             return stringBuilder.toString();
         }).toArray(String[]::new);
         OracleConfigration oracleConfigration = new Gson().fromJson(ds.getConfiguration(), OracleConfigration.class);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), oracleConfigration.getSchema() + ".\"" + table + "\"");
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), oracleConfigration.getSchema() + ".\"" + table + "\"");
     }
 
     @Override
@@ -740,7 +740,7 @@ public String createRawQuerySQLAsTmp(String sql, List<DatasetTableField> fields)
             stringBuilder.append(" \"").append(f.getOriginName()).append("\"");
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), " (" + sqlFix(sql) + ") DE_TMP ");
+        return MessageFormat.format("SELECT {0} FROM {1}", StringUtils.join(array, ","), " (" + sqlFix(sql) + ") DE_TMP ");
     }
 
     public String transMysqlFilterTerm(String term) {

File: backend/src/main/java/io/dataease/datasource/dto/EsConfigDTO.java
Patch:
@@ -8,8 +8,8 @@
 @Setter
 public class EsConfigDTO {
     private String url;
-    private String username;
-    private String password;
+    private String esUsername;
+    private String esPassword;
     private String version;
     private String uri;
     private String dataSourceType = "es";

File: backend/src/main/java/io/dataease/datasource/dto/MysqlConfigration.java
Patch:
@@ -11,7 +11,7 @@ public class MysqlConfigration extends JdbcDTO {
 
     public String getJdbc() {
         // 连接参数先写死，后边要把编码、时区等参数放到数据源的设置中
-        return "jdbc:mysql://HOSTNAME:PORT/DATABASE?characterEncoding=UTF-8&connectTimeout=5000&useSSL=false"
+        return "jdbc:mysql://HOSTNAME:PORT/DATABASE?characterEncoding=UTF-8&connectTimeout=5000&useSSL=false&allowPublicKeyRetrieval=true"
                 .replace("HOSTNAME", getHost().trim())
                 .replace("PORT", getPort().toString().trim())
                 .replace("DATABASE", getDataBase().trim());

File: backend/src/main/java/io/dataease/provider/ck/CKQueryProvider.java
Patch:
@@ -177,7 +177,7 @@ public String createQuerySQLAsTmp(String sql, List<DatasetTableField> fields, bo
     }
 
     @Override
-    public String createQuerySQLWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
+    public String createQueryTableWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
         return createQuerySQL(table, fields, isGroup, null) + " LIMIT " + (page - 1) * pageSize + "," + realSize;
     }
 
@@ -192,7 +192,7 @@ public String createQuerySqlWithLimit(String sql, List<DatasetTableField> fields
     }
 
     @Override
-    public String createQuerySQLAsTmpWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
+    public String createQuerySQLWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
         return createQuerySQLAsTmp(sql, fields, isGroup) + " LIMIT " + (page - 1) * pageSize + "," + realSize;
     }
 

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -156,7 +156,7 @@ public String createQuerySQLAsTmp(String sql, List<DatasetTableField> fields, bo
     }
 
     @Override
-    public String createQuerySQLWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
+    public String createQueryTableWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
         return createQuerySQL(table, fields, isGroup, null) + " LIMIT " + (page - 1) * pageSize + "," + realSize;
     }
 
@@ -171,7 +171,7 @@ public String createQuerySqlWithLimit(String sql, List<DatasetTableField> fields
     }
 
     @Override
-    public String createQuerySQLAsTmpWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
+    public String createQuerySQLWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
         return createQuerySQLAsTmp(sql, fields, isGroup) + " LIMIT " + (page - 1) * pageSize + "," + realSize;
     }
 

File: backend/src/main/java/io/dataease/provider/es/EsQueryProvider.java
Patch:
@@ -177,7 +177,7 @@ public String createQuerySQLAsTmp(String sql, List<DatasetTableField> fields, bo
     }
 
     @Override
-    public String createQuerySQLWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
+    public String createQueryTableWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
         return createQuerySQL(table, fields, isGroup, null);
     }
 
@@ -192,7 +192,7 @@ public String createQuerySqlWithLimit(String sql, List<DatasetTableField> fields
     }
 
     @Override
-    public String createQuerySQLAsTmpWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
+    public String createQuerySQLWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
         return createQuerySQLAsTmp(sql, fields, isGroup);
     }
 

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -145,7 +145,7 @@ public String createQuerySQLAsTmp(String sql, List<DatasetTableField> fields, bo
     }
 
     @Override
-    public String createQuerySQLWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
+    public String createQueryTableWithPage(String table, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup, Datasource ds) {
         return createQuerySQL(table, fields, isGroup, null) + " LIMIT " + (page - 1) * pageSize + "," + realSize;
     }
 
@@ -160,7 +160,7 @@ public String createQuerySqlWithLimit(String sql, List<DatasetTableField> fields
     }
 
     @Override
-    public String createQuerySQLAsTmpWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
+    public String createQuerySQLWithPage(String sql, List<DatasetTableField> fields, Integer page, Integer pageSize, Integer realSize, boolean isGroup) {
         return createQuerySQLAsTmp(sql, fields, isGroup) + " LIMIT " + (page - 1) * pageSize + "," + realSize;
     }
 

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -70,12 +70,12 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
                 DataEaseException.throwException(validateResult.getMsg());
             }
             XpackLdapUserEntity ldapUserEntity = validateResult.getData();
-            SysUserEntity user = authUserService.getUserByName(username);
+            SysUserEntity user = authUserService.getLdapUserByName(username);
             if(ObjectUtils.isEmpty(user) || ObjectUtils.isEmpty(user.getUserId())) {
                 LdapAddRequest ldapAddRequest = new LdapAddRequest();
                 ldapAddRequest.setUsers(new ArrayList<XpackLdapUserEntity>(){{add(ldapUserEntity);}});
                 ldapAddRequest.setEnabled(1L);
-                ldapAddRequest.setDeptId(1L);
+                // ldapAddRequest.setDeptId(1L);
                 ldapAddRequest.setRoleIds(new ArrayList<Long>(){{add(2L);}});
                 sysUserService.validateExistUser(ldapUserEntity.getUserName(),  ldapUserEntity.getEmail());
                 sysUserService.saveLdapUsers(ldapAddRequest);

File: backend/src/main/java/io/dataease/auth/service/AuthUserService.java
Patch:
@@ -13,6 +13,8 @@ public interface AuthUserService {
 
     SysUserEntity getUserByName(String username);
 
+    SysUserEntity getLdapUserByName(String username);
+
     SysUserEntity getUserBySub(String sub);
 
     List<String> roles(Long userId);

File: backend/src/main/java/io/dataease/base/mapper/ext/AuthMapper.java
Patch:
@@ -25,6 +25,8 @@ public interface AuthMapper {
 
     SysUserEntity findUserByName(@Param("username") String username);
 
+    SysUserEntity findLdapUserByName(@Param("username") String username);
+
     SysUserEntity findUserBySub(@Param("sub") String sub);
 
 

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -70,12 +70,12 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
                 DataEaseException.throwException(validateResult.getMsg());
             }
             XpackLdapUserEntity ldapUserEntity = validateResult.getData();
-            SysUserEntity user = authUserService.getUserByName(username);
+            SysUserEntity user = authUserService.getLdapUserByName(username);
             if(ObjectUtils.isEmpty(user) || ObjectUtils.isEmpty(user.getUserId())) {
                 LdapAddRequest ldapAddRequest = new LdapAddRequest();
                 ldapAddRequest.setUsers(new ArrayList<XpackLdapUserEntity>(){{add(ldapUserEntity);}});
                 ldapAddRequest.setEnabled(1L);
-                ldapAddRequest.setDeptId(1L);
+                // ldapAddRequest.setDeptId(1L);
                 ldapAddRequest.setRoleIds(new ArrayList<Long>(){{add(2L);}});
                 sysUserService.validateExistUser(ldapUserEntity.getUserName(),  ldapUserEntity.getEmail());
                 sysUserService.saveLdapUsers(ldapAddRequest);

File: backend/src/main/java/io/dataease/auth/service/AuthUserService.java
Patch:
@@ -13,6 +13,8 @@ public interface AuthUserService {
 
     SysUserEntity getUserByName(String username);
 
+    SysUserEntity getLdapUserByName(String username);
+
     SysUserEntity getUserBySub(String sub);
 
     List<String> roles(Long userId);

File: backend/src/main/java/io/dataease/base/mapper/ext/AuthMapper.java
Patch:
@@ -25,6 +25,8 @@ public interface AuthMapper {
 
     SysUserEntity findUserByName(@Param("username") String username);
 
+    SysUserEntity findLdapUserByName(@Param("username") String username);
+
     SysUserEntity findUserBySub(@Param("sub") String sub);
 
 

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -77,6 +77,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
                 ldapAddRequest.setEnabled(1L);
                 ldapAddRequest.setDeptId(1L);
                 ldapAddRequest.setRoleIds(new ArrayList<Long>(){{add(2L);}});
+                sysUserService.validateExistUser(ldapUserEntity.getUserName(),  ldapUserEntity.getEmail());
                 sysUserService.saveLdapUsers(ldapAddRequest);
             }
             

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -54,6 +54,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
         SSOUserInfo ssoUserInfo = oidcXpackService.requestUserInfo(config, ssoToken.getAccessToken());
         SysUserEntity sysUserEntity = authUserService.getUserBySub(ssoUserInfo.getSub());
         if(null == sysUserEntity){
+            sysUserService.validateExistUser(ssoUserInfo.getUsername(), ssoUserInfo.getEmail());
             sysUserService.saveOIDCUser(ssoUserInfo);
             sysUserEntity = authUserService.getUserBySub(ssoUserInfo.getSub());
         }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -77,6 +77,7 @@ public Object login(@RequestBody LoginDto loginDto) throws Exception {
                 ldapAddRequest.setEnabled(1L);
                 ldapAddRequest.setDeptId(1L);
                 ldapAddRequest.setRoleIds(new ArrayList<Long>(){{add(2L);}});
+                sysUserService.validateExistUser(ldapUserEntity.getUserName(),  ldapUserEntity.getEmail());
                 sysUserService.saveLdapUsers(ldapAddRequest);
             }
             

File: backend/src/main/java/io/dataease/plugins/server/SSOServer.java
Patch:
@@ -54,6 +54,7 @@ public ModelAndView callBack(@RequestParam("code") String code, @RequestParam("s
         SSOUserInfo ssoUserInfo = oidcXpackService.requestUserInfo(config, ssoToken.getAccessToken());
         SysUserEntity sysUserEntity = authUserService.getUserBySub(ssoUserInfo.getSub());
         if(null == sysUserEntity){
+            sysUserService.validateExistUser(ssoUserInfo.getUsername(), ssoUserInfo.getEmail());
             sysUserService.saveOIDCUser(ssoUserInfo);
             sysUserEntity = authUserService.getUserBySub(ssoUserInfo.getSub());
         }

File: backend/src/main/java/io/dataease/provider/es/EsQueryProvider.java
Patch:
@@ -151,7 +151,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         String cast = String.format(EsSqlLConstants.CAST, originField, "timestamp");
                         fieldName = String.format(EsSqlLConstants.DATETIME_FORMAT, cast, EsSqlLConstants.DEFAULT_DATE_FORMAT);
                     } else if (f.getDeType() == DeTypeConstants.DE_INT) {
-                        fieldName = String.format(EsSqlLConstants.CAST, originField, "timestamp");
+                        fieldName = String.format(EsSqlLConstants.CAST, originField, "bigint");
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/es/EsQueryProvider.java
Patch:
@@ -36,6 +36,7 @@ public class EsQueryProvider extends QueryProvider {
     @Override
     public Integer transFieldType(String field) {
         field = field.toLowerCase();
+        field = field.contains("date") ? "datetime" : field;
         switch (field) {
             case "keyword":
             case "text":
@@ -66,6 +67,7 @@ public Integer transFieldType(String field) {
 
     public static Integer transFieldTypeSize(String field) {
         field = field.toLowerCase();
+        field = field.contains("date") ? "datetime" : field;
         switch (field) {
             case "null":
                 return 1;

File: backend/src/main/java/io/dataease/provider/es/EsQueryProvider.java
Patch:
@@ -35,6 +35,7 @@ public class EsQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toLowerCase();
         switch (field) {
             case "keyword":
             case "text":
@@ -64,6 +65,7 @@ public Integer transFieldType(String field) {
     }
 
     public static Integer transFieldTypeSize(String field) {
+        field = field.toLowerCase();
         switch (field) {
             case "null":
                 return 1;

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -33,6 +33,8 @@ public class DorisConstants extends SQLConstants {
 
     public static final String WHERE_VALUE_VALUE = "'%s'";
 
+    public static final String WHERE_NUMBER_VALUE = "%s";
+
     public static final String AGG_COUNT = "COUNT(*)";
 
     public static final String AGG_FIELD = "%s(%s)";

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -33,6 +33,8 @@ public class DorisConstants extends SQLConstants {
 
     public static final String WHERE_VALUE_VALUE = "'%s'";
 
+    public static final String WHERE_NUMBER_VALUE = "%s";
+
     public static final String AGG_COUNT = "COUNT(*)";
 
     public static final String AGG_FIELD = "%s(%s)";

File: backend/src/main/java/io/dataease/datasource/dto/MysqlConfigration.java
Patch:
@@ -11,7 +11,7 @@ public class MysqlConfigration extends JdbcDTO {
 
     public String getJdbc() {
         // 连接参数先写死，后边要把编码、时区等参数放到数据源的设置中
-        return "jdbc:mysql://HOSTNAME:PORT/DATABASE?characterEncoding=UTF-8&connectTimeout=5000"
+        return "jdbc:mysql://HOSTNAME:PORT/DATABASE?characterEncoding=UTF-8&connectTimeout=5000&useSSL=false"
                 .replace("HOSTNAME", getHost().trim())
                 .replace("PORT", getPort().toString().trim())
                 .replace("DATABASE", getDataBase().trim());

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -120,6 +120,7 @@ public void saveOIDCUser(SSOUserInfo ssoUserInfo) {
         sysUser.setEnabled(1L);
         sysUser.setLanguage("zh_CN");
         sysUser.setFrom(2);
+        sysUser.setIsAdmin(false);
         sysUser.setSub(ssoUserInfo.getSub());
         sysUserMapper.insert(sysUser);
         SysUser dbUser = findOne(sysUser);
@@ -149,6 +150,7 @@ public void saveLdapUsers(LdapAddRequest request) {
             sysUser.setUpdateTime(now);
             sysUser.setEnabled(request.getEnabled());
             sysUser.setLanguage("zh_CN");
+            sysUser.setIsAdmin(false);
             sysUser.setFrom(1);
             return sysUser;
         }).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -120,6 +120,7 @@ public void saveOIDCUser(SSOUserInfo ssoUserInfo) {
         sysUser.setEnabled(1L);
         sysUser.setLanguage("zh_CN");
         sysUser.setFrom(2);
+        sysUser.setIsAdmin(false);
         sysUser.setSub(ssoUserInfo.getSub());
         sysUserMapper.insert(sysUser);
         SysUser dbUser = findOne(sysUser);
@@ -149,6 +150,7 @@ public void saveLdapUsers(LdapAddRequest request) {
             sysUser.setUpdateTime(now);
             sysUser.setEnabled(request.getEnabled());
             sysUser.setLanguage("zh_CN");
+            sysUser.setIsAdmin(false);
             sysUser.setFrom(1);
             return sysUser;
         }).collect(Collectors.toList());

File: backend/src/main/java/io/dataease/commons/utils/DateUtils.java
Patch:
@@ -95,7 +95,7 @@ public static Map<String, Date> getWeedFirstTimeAndLastTime(Date date) {
     }
 
 
-    public static void main(String[] args) throws Exception {
+    /* public static void main(String[] args) throws Exception {
 //        System.out.println("start:");
         Date paramTime = getTime(getTimeString(new Long("1607672440731")));
 
@@ -110,7 +110,7 @@ public static void main(String[] args) throws Exception {
 
 //        System.out.println(getTimeString(--countTimeLong));
 
-    }
+    } */
 
 
     /**

File: backend/src/main/java/io/dataease/commons/utils/ExcelReaderUtil.java
Patch:
@@ -68,8 +68,8 @@ public static void readExcel(String fileName, InputStream inputStream) throws Ex
         }
     }
 
-    public static void main(String[] args) throws Exception {
+    /* public static void main(String[] args) throws Exception {
         String file ="Metersphere_case_DataEase功能用例.xlsx";
         ExcelReaderUtil.readExcel(file, new FileInputStream("/Users/taojinlong/Desktop/" + file));
-    }
+    } */
 }

File: backend/src/main/java/io/dataease/service/system/SystemParameterService.java
Patch:
@@ -229,9 +229,9 @@ public void saveUIInfo(Map<String,List<SystemParameterDTO>> request, List<Multip
 
     }
 
-    public static void main(String[] args) {
+    /* public static void main(String[] args) {
         String info="[{\"paramKey\":\"base.url\",\"paramValue\":null,\"type\":\"text\",\"sort\":1,\"file\":null,\"fileName\":null},{\"paramKey\":\"base.title\",\"paramValue\":\"DataEase Title\",\"type\":\"text\",\"sort\":3,\"file\":null,\"fileName\":null},{\"paramKey\":\"base.logo\",\"paramValue\":\"DataEase\",\"type\":\"text\",\"sort\":4,\"file\":null,\"fileName\":\"favicon.icon.png\"}]";
         List<SystemParameterDTO> temp = JSON.parseArray(info,SystemParameterDTO.class);
 //        System.out.println("===>");
-    }
+    } */
 }

File: backend/src/main/java/io/dataease/commons/utils/DateUtils.java
Patch:
@@ -95,7 +95,7 @@ public static Map<String, Date> getWeedFirstTimeAndLastTime(Date date) {
     }
 
 
-    public static void main(String[] args) throws Exception {
+    /* public static void main(String[] args) throws Exception {
 //        System.out.println("start:");
         Date paramTime = getTime(getTimeString(new Long("1607672440731")));
 
@@ -110,7 +110,7 @@ public static void main(String[] args) throws Exception {
 
 //        System.out.println(getTimeString(--countTimeLong));
 
-    }
+    } */
 
 
     /**

File: backend/src/main/java/io/dataease/commons/utils/ExcelReaderUtil.java
Patch:
@@ -68,8 +68,8 @@ public static void readExcel(String fileName, InputStream inputStream) throws Ex
         }
     }
 
-    public static void main(String[] args) throws Exception {
+    /* public static void main(String[] args) throws Exception {
         String file ="Metersphere_case_DataEase功能用例.xlsx";
         ExcelReaderUtil.readExcel(file, new FileInputStream("/Users/taojinlong/Desktop/" + file));
-    }
+    } */
 }

File: backend/src/main/java/io/dataease/service/system/SystemParameterService.java
Patch:
@@ -229,9 +229,9 @@ public void saveUIInfo(Map<String,List<SystemParameterDTO>> request, List<Multip
 
     }
 
-    public static void main(String[] args) {
+    /* public static void main(String[] args) {
         String info="[{\"paramKey\":\"base.url\",\"paramValue\":null,\"type\":\"text\",\"sort\":1,\"file\":null,\"fileName\":null},{\"paramKey\":\"base.title\",\"paramValue\":\"DataEase Title\",\"type\":\"text\",\"sort\":3,\"file\":null,\"fileName\":null},{\"paramKey\":\"base.logo\",\"paramValue\":\"DataEase\",\"type\":\"text\",\"sort\":4,\"file\":null,\"fileName\":\"favicon.icon.png\"}]";
         List<SystemParameterDTO> temp = JSON.parseArray(info,SystemParameterDTO.class);
 //        System.out.println("===>");
-    }
+    } */
 }

File: backend/src/main/java/io/dataease/plugins/server/XLdapServer.java
Patch:
@@ -10,7 +10,7 @@
 
 import java.util.List;
 
-@RequestMapping("/api/ldap")
+@RequestMapping("/plugin/ldap")
 @RestController
 public class XLdapServer {
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -460,6 +460,9 @@ else if ((cache = CacheUtils.get(JdbcConstants.VIEW_CACHE_KEY, id)) == null) {
         map.putAll(mapChart);
         map.putAll(mapTableNormal);
 
+        List<DatasetTableField>  sourceFields = dataSetTableFieldsService.getFieldsByTableId(view.getTableId());
+        map.put("sourceFields",sourceFields);
+
         ChartViewDTO dto = new ChartViewDTO();
         BeanUtils.copyBean(dto, view);
         dto.setData(map);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -460,6 +460,9 @@ else if ((cache = CacheUtils.get(JdbcConstants.VIEW_CACHE_KEY, id)) == null) {
         map.putAll(mapChart);
         map.putAll(mapTableNormal);
 
+        List<DatasetTableField>  sourceFields = dataSetTableFieldsService.getFieldsByTableId(view.getTableId());
+        map.put("sourceFields",sourceFields);
+
         ChartViewDTO dto = new ChartViewDTO();
         BeanUtils.copyBean(dto, view);
         dto.setData(map);

File: backend/src/main/java/io/dataease/auth/service/impl/AuthUserServiceImpl.java
Patch:
@@ -19,6 +19,7 @@
 import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 import java.util.Optional;
 import java.util.stream.Collectors;
 
@@ -107,6 +108,8 @@ public void clearCache(Long userId) {
 
     @Override
     public boolean supportLdap() {
+        Map<String, LdapXpackService> beansOfType = SpringContextUtil.getApplicationContext().getBeansOfType((LdapXpackService.class));
+        if(beansOfType.keySet().size() == 0) return false;
         LdapXpackService ldapXpackService = SpringContextUtil.getBean(LdapXpackService.class);
         if(ObjectUtils.isEmpty(ldapXpackService)) return false;
         return ldapXpackService.isOpen();

File: backend/src/main/java/io/dataease/auth/service/impl/AuthUserServiceImpl.java
Patch:
@@ -19,6 +19,7 @@
 import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 import java.util.Optional;
 import java.util.stream.Collectors;
 
@@ -107,6 +108,8 @@ public void clearCache(Long userId) {
 
     @Override
     public boolean supportLdap() {
+        Map<String, LdapXpackService> beansOfType = SpringContextUtil.getApplicationContext().getBeansOfType((LdapXpackService.class));
+        if(beansOfType.keySet().size() == 0) return false;
         LdapXpackService ldapXpackService = SpringContextUtil.getBean(LdapXpackService.class);
         if(ObjectUtils.isEmpty(ldapXpackService)) return false;
         return ldapXpackService.isOpen();

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -1006,7 +1006,7 @@ private StepMeta udjc(List<DatasetTableField> datasetTableFields, DatasourceType
         String excelCompletion = "";
 
         for (DatasetTableField datasetTableField : datasetTableFields) {
-            if(datasetTableField.getDeExtractType() == 5){
+            if(datasetTableField.getDeExtractType() == DeTypeConstants.DE_BINARY){
                 handleBinaryTypeCode = handleBinaryTypeCode + "\n" + this.handleBinaryType.replace("FEILD", datasetTableField.getDataeaseName());
             }
         }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -690,7 +690,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
                     whereName = String.format(DorisConstants.STR_TO_DATE, originName, DorisConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -747,7 +747,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
                     whereName = String.format(DorisConstants.STR_TO_DATE, originName, DorisConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                 }

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -675,7 +675,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(MySQLConstants.STR_TO_DATE, originName, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(MySQLConstants.CAST, originName, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -733,7 +733,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(MySQLConstants.STR_TO_DATE, originName, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(MySQLConstants.CAST, originName, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -710,7 +710,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(OracleConstants.TO_DATE, originName, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(OracleConstants.CAST, originName, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -772,7 +772,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(OracleConstants.TO_DATE, originName, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(OracleConstants.CAST, originName, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, OracleConstants.DEFAULT_DATE_FORMAT);
                 }

File: backend/src/main/java/io/dataease/provider/pg/PgQueryProvider.java
Patch:
@@ -702,7 +702,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
                     whereName = String.format(PgConstants.FROM_UNIXTIME, cast);
                 }
@@ -760,7 +760,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
                     whereName = String.format(PgConstants.FROM_UNIXTIME, cast);
                 }

File: backend/src/main/java/io/dataease/provider/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -657,7 +657,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(SqlServerSQLConstants.STRING_TO_DATE, originName);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(SqlServerSQLConstants.LONG_TO_DATE, originName + "/1000");
                     whereName = String.format(SqlServerSQLConstants.FROM_UNIXTIME, cast);
                 }
@@ -706,7 +706,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(SqlServerSQLConstants.STRING_TO_DATE, originName);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(SqlServerSQLConstants.LONG_TO_DATE, originName + "/1000");
                     whereName = String.format(SqlServerSQLConstants.FROM_UNIXTIME, cast);
                 }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -690,7 +690,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
                     whereName = String.format(DorisConstants.STR_TO_DATE, originName, DorisConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -747,7 +747,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5 || field.getDeExtractType() == 1) {
                     whereName = String.format(DorisConstants.STR_TO_DATE, originName, DorisConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(DorisConstants.CAST, originName, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                 }

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -675,7 +675,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(MySQLConstants.STR_TO_DATE, originName, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(MySQLConstants.CAST, originName, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -733,7 +733,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(MySQLConstants.STR_TO_DATE, originName, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(MySQLConstants.CAST, originName, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);
                 }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -710,7 +710,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(OracleConstants.TO_DATE, originName, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(OracleConstants.CAST, originName, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
@@ -772,7 +772,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(OracleConstants.TO_DATE, originName, OracleConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(OracleConstants.CAST, originName, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                     whereName = String.format(OracleConstants.FROM_UNIXTIME, cast, OracleConstants.DEFAULT_DATE_FORMAT);
                 }

File: backend/src/main/java/io/dataease/provider/pg/PgQueryProvider.java
Patch:
@@ -702,7 +702,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
                     whereName = String.format(PgConstants.FROM_UNIXTIME, cast);
                 }
@@ -760,7 +760,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(PgConstants.TO_DATE, originName, PgConstants.DEFAULT_DATE_FORMAT);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(PgConstants.CAST, originName, "bigint");
                     whereName = String.format(PgConstants.FROM_UNIXTIME, cast);
                 }

File: backend/src/main/java/io/dataease/provider/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -657,7 +657,7 @@ public List<SQLObj> transCustomFilterList(SQLObj tableObj, List<ChartCustomFilte
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(SqlServerSQLConstants.STRING_TO_DATE, originName);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(SqlServerSQLConstants.LONG_TO_DATE, originName + "/1000");
                     whereName = String.format(SqlServerSQLConstants.FROM_UNIXTIME, cast);
                 }
@@ -706,7 +706,7 @@ public List<SQLObj> transExtFilterList(SQLObj tableObj, List<ChartExtFilterReque
                 if (field.getDeExtractType() == 0 || field.getDeExtractType() == 5) {
                     whereName = String.format(SqlServerSQLConstants.STRING_TO_DATE, originName);
                 }
-                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3) {
+                if (field.getDeExtractType() == 2 || field.getDeExtractType() == 3 || field.getDeExtractType() == 4) {
                     String cast = String.format(SqlServerSQLConstants.LONG_TO_DATE, originName + "/1000");
                     whereName = String.format(SqlServerSQLConstants.FROM_UNIXTIME, cast);
                 }

File: backend/src/main/java/io/dataease/datasource/provider/JdbcProvider.java
Patch:
@@ -528,6 +528,9 @@ private String getTablesSql(DatasourceRequest datasourceRequest) throws Exceptio
                 return "show tables;";
             case sqlServer:
                 SqlServerConfigration sqlServerConfigration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), SqlServerConfigration.class);
+                if(StringUtils.isEmpty(sqlServerConfigration.getSchema())){
+                    throw new Exception(Translator.get("i18n_schema_is_empty"));
+                }
                 return "SELECT TABLE_NAME FROM DATABASE.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'DS_SCHEMA' ;"
                         .replace("DATABASE", sqlServerConfigration.getDataBase())
                         .replace("DS_SCHEMA", sqlServerConfigration.getSchema());

File: backend/src/main/java/io/dataease/commons/constants/DeTypeConstants.java
Patch:
@@ -7,6 +7,7 @@ public class DeTypeConstants {
     public final static Integer DE_INT = 2;
     public final static Integer DE_FLOAT = 3;
     public final static Integer DE_BOOL = 4;
-    public final static Integer DE_Binary = 5;
+    public final static Integer DE_LOCATION = 5;
+    public final static Integer DE_BINARY = 6;
 
 }

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -19,6 +19,8 @@ public class DorisConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/mysql/MySQLConstants.java
Patch:
@@ -19,6 +19,8 @@ public class MySQLConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/pg/PgConstants.java
Patch:
@@ -19,6 +19,8 @@ public class PgConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
+    public static final String TO_DATE = "to_date(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "'YYYY-MM-DD HH24:MI:SS'";

File: backend/src/main/java/io/dataease/commons/constants/DeTypeConstants.java
Patch:
@@ -7,6 +7,7 @@ public class DeTypeConstants {
     public final static Integer DE_INT = 2;
     public final static Integer DE_FLOAT = 3;
     public final static Integer DE_BOOL = 4;
-    public final static Integer DE_Binary = 5;
+    public final static Integer DE_LOCATION = 5;
+    public final static Integer DE_BINARY = 6;
 
 }

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -19,6 +19,8 @@ public class DorisConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/mysql/MySQLConstants.java
Patch:
@@ -19,6 +19,8 @@ public class MySQLConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/pg/PgConstants.java
Patch:
@@ -19,6 +19,8 @@ public class PgConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
+    public static final String TO_DATE = "to_date(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "'YYYY-MM-DD HH24:MI:SS'";

File: backend/src/main/java/io/dataease/commons/constants/DeTypeConstants.java
Patch:
@@ -7,6 +7,7 @@ public class DeTypeConstants {
     public final static Integer DE_INT = 2;
     public final static Integer DE_FLOAT = 3;
     public final static Integer DE_BOOL = 4;
-    public final static Integer DE_Binary = 5;
+    public final static Integer DE_LOCATION = 5;
+    public final static Integer DE_BINARY = 6;
 
 }

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -19,6 +19,8 @@ public class DorisConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/mysql/MySQLConstants.java
Patch:
@@ -19,6 +19,8 @@ public class MySQLConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/pg/PgConstants.java
Patch:
@@ -19,6 +19,8 @@ public class PgConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
+    public static final String TO_DATE = "to_date(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "'YYYY-MM-DD HH24:MI:SS'";

File: backend/src/main/java/io/dataease/commons/constants/DeTypeConstants.java
Patch:
@@ -7,6 +7,7 @@ public class DeTypeConstants {
     public final static Integer DE_INT = 2;
     public final static Integer DE_FLOAT = 3;
     public final static Integer DE_BOOL = 4;
-    public final static Integer DE_Binary = 5;
+    public final static Integer DE_LOCATION = 5;
+    public final static Integer DE_BINARY = 6;
 
 }

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -19,6 +19,8 @@ public class DorisConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/mysql/MySQLConstants.java
Patch:
@@ -19,6 +19,8 @@ public class MySQLConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 
+    public static final String STR_TO_DATE = "STR_TO_DATE(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";

File: backend/src/main/java/io/dataease/provider/pg/PgConstants.java
Patch:
@@ -19,6 +19,8 @@ public class PgConstants extends SQLConstants {
 
     public static final String FROM_UNIXTIME = "to_timestamp(%s)";
 
+    public static final String TO_DATE = "to_date(%s,'%s')";
+
     public static final String CAST = "CAST(%s AS %s)";
 
     public static final String DEFAULT_DATE_FORMAT = "'YYYY-MM-DD HH24:MI:SS'";

File: backend/src/main/java/io/dataease/provider/oracle/OracleConstants.java
Patch:
@@ -17,7 +17,7 @@ public class OracleConstants extends SQLConstants {
 
     public static final String UNIX_TIMESTAMP = "UNIX_TIMESTAMP(%s)";
 
-    public static final String DATE_FORMAT = "DATE_FORMAT(%s,'%s')";
+    public static final String DATE_FORMAT = "to_timestamp(%s,'%s')";
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 

File: backend/src/main/java/io/dataease/provider/oracle/OracleConstants.java
Patch:
@@ -17,7 +17,7 @@ public class OracleConstants extends SQLConstants {
 
     public static final String UNIX_TIMESTAMP = "UNIX_TIMESTAMP(%s)";
 
-    public static final String DATE_FORMAT = "DATE_FORMAT(%s,'%s')";
+    public static final String DATE_FORMAT = "to_timestamp(%s,'%s')";
 
     public static final String FROM_UNIXTIME = "FROM_UNIXTIME(%s,'%s')";
 

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -235,7 +235,7 @@ public static boolean checkSqlInjection(Object obj){
             if (Arrays.stream(whiteLists.split(",")).anyMatch(item -> url.indexOf(item) != -1)) return false;
         }
         Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
-                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\\b.*)");
+                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand)\\b.*)");
         Matcher matcher=pattern.matcher(orders.toLowerCase());
         return matcher.find();
     }

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -235,7 +235,7 @@ public static boolean checkSqlInjection(Object obj){
             if (Arrays.stream(whiteLists.split(",")).anyMatch(item -> url.indexOf(item) != -1)) return false;
         }
         Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
-                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\\b.*)");
+                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand)\\b.*)");
         Matcher matcher=pattern.matcher(orders.toLowerCase());
         return matcher.find();
     }

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -235,7 +235,7 @@ public static boolean checkSqlInjection(Object obj){
             if (Arrays.stream(whiteLists.split(",")).anyMatch(item -> url.indexOf(item) != -1)) return false;
         }
         Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
-                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\\b.*)");
+                "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|sleep|extractvalue|updatexml|substring|database|concat|rand)\\b.*)");
         Matcher matcher=pattern.matcher(orders.toLowerCase());
         return matcher.find();
     }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -635,7 +635,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             stringBuilder.append(" \"").append(f.getOriginName()).append("\"");
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), "\"" + table + "\"");
+        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table );
     }
 
     @Override

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -635,7 +635,7 @@ public String createRawQuerySQL(String table, List<DatasetTableField> fields, Da
             stringBuilder.append(" \"").append(f.getOriginName()).append("\"");
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), "\"" + table + "\"");
+        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table );
     }
 
     @Override

File: backend/src/main/java/io/dataease/map/utils/MapUtils.java
Patch:
@@ -121,7 +121,7 @@ public static List<AreaEntity> readAreaEntity() {
     }
 
     private static AreaEntity root() {
-        return AreaEntity.builder().code("100000").name("中华人名共和国").build();
+        return AreaEntity.builder().code("100000").name("中华人民共和国").build();
     }
 
     public static void recursionWrite(List<AreaEntity> areaEntityList) {

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -121,6 +121,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         fieldName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                     } else if (f.getDeType() == 2) {
                         fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT);
+                    } else if (f.getDeType() == 3) {
+                        fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_FLOAT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -121,6 +121,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         fieldName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                     } else if (f.getDeType() == 2) {
                         fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT);
+                    } else if (f.getDeType() == 3) {
+                        fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_FLOAT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -121,6 +121,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         fieldName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                     } else if (f.getDeType() == 2) {
                         fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT);
+                    } else if (f.getDeType() == 3) {
+                        fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_FLOAT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -121,6 +121,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
                         fieldName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
                     } else if (f.getDeType() == 2) {
                         fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT);
+                    } else if (f.getDeType() == 3) {
+                        fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_FLOAT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -37,6 +37,7 @@ public class SqlserverQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toUpperCase();
         switch (field) {
             case "CHAR":
             case "NCHAR":

File: backend/src/main/java/io/dataease/provider/sqlserver/SqlserverQueryProvider.java
Patch:
@@ -37,6 +37,7 @@ public class SqlserverQueryProvider extends QueryProvider {
 
     @Override
     public Integer transFieldType(String field) {
+        field = field.toUpperCase();
         switch (field) {
             case "CHAR":
             case "NCHAR":

File: backend/src/main/java/io/dataease/map/utils/MapUtils.java
Patch:
@@ -121,7 +121,7 @@ public static List<AreaEntity> readAreaEntity() {
     }
 
     private static AreaEntity root() {
-        return AreaEntity.builder().code("100000").name("中华人名共和国").build();
+        return AreaEntity.builder().code("100000").name("中华人民共和国").build();
     }
 
     public static void recursionWrite(List<AreaEntity> areaEntityList) {

File: backend/src/main/java/io/dataease/map/utils/MapUtils.java
Patch:
@@ -121,7 +121,7 @@ public static List<AreaEntity> readAreaEntity() {
     }
 
     private static AreaEntity root() {
-        return AreaEntity.builder().code("100000").name("中华人名共和国").build();
+        return AreaEntity.builder().code("100000").name("中华人民共和国").build();
     }
 
     public static void recursionWrite(List<AreaEntity> areaEntityList) {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -885,12 +885,14 @@ private StepMeta excelInputStep(String Info, List<DatasetTableField> datasetTabl
 
         List<String> sheetNames = new ArrayList<>();
         List<String> files = new ArrayList<>();
+        List<String> filesRequired = new ArrayList<>();
         for (ExcelSheetData excelSheetData : excelSheetDataList) {
             if(!sheetNames.contains(excelSheetData.getExcelLable())){
                 sheetNames.add(excelSheetData.getExcelLable());
             }
             if(!files.contains(excelSheetData.getPath())){
                 files.add(excelSheetData.getPath());
+                filesRequired.add("Y");
             }
         }
         if (StringUtils.equalsIgnoreCase(suffix, "xlsx")) {
@@ -903,6 +905,7 @@ private StepMeta excelInputStep(String Info, List<DatasetTableField> datasetTabl
         }
         excelInputMeta.setPassword("Encrypted");
         excelInputMeta.setFileName( files.toArray(new String[files.size()]));
+        excelInputMeta.setFileRequired(filesRequired.toArray(new String[filesRequired.size()]));
         excelInputMeta.setStartsWithHeader(true);
         excelInputMeta.setIgnoreEmptyRows(true);
         ExcelInputField[] fields = new ExcelInputField[datasetTableFields.size()];

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -885,12 +885,14 @@ private StepMeta excelInputStep(String Info, List<DatasetTableField> datasetTabl
 
         List<String> sheetNames = new ArrayList<>();
         List<String> files = new ArrayList<>();
+        List<String> filesRequired = new ArrayList<>();
         for (ExcelSheetData excelSheetData : excelSheetDataList) {
             if(!sheetNames.contains(excelSheetData.getExcelLable())){
                 sheetNames.add(excelSheetData.getExcelLable());
             }
             if(!files.contains(excelSheetData.getPath())){
                 files.add(excelSheetData.getPath());
+                filesRequired.add("Y");
             }
         }
         if (StringUtils.equalsIgnoreCase(suffix, "xlsx")) {
@@ -903,6 +905,7 @@ private StepMeta excelInputStep(String Info, List<DatasetTableField> datasetTabl
         }
         excelInputMeta.setPassword("Encrypted");
         excelInputMeta.setFileName( files.toArray(new String[files.size()]));
+        excelInputMeta.setFileRequired(filesRequired.toArray(new String[filesRequired.size()]));
         excelInputMeta.setStartsWithHeader(true);
         excelInputMeta.setIgnoreEmptyRows(true);
         ExcelInputField[] fields = new ExcelInputField[datasetTableFields.size()];

File: backend/src/main/java/io/dataease/dto/dataset/ExcelFileData.java
Patch:
@@ -8,7 +8,7 @@
 @Data
 public class ExcelFileData {
     @ApiModelProperty("excelID")
-    private String excelId;
+    private String id;
     @ApiModelProperty("excel标签")
     private String excelLable;
     @ApiModelProperty("sheets")

File: backend/src/main/java/io/dataease/dto/dataset/ExcelSheetData.java
Patch:
@@ -24,7 +24,7 @@ public class ExcelSheetData {
     @ApiModelProperty("excelID")
     private String sheetExcelId;
     @ApiModelProperty("sheetId")
-    private String sheetId;
+    private String id;
     @ApiModelProperty("路径")
     private String path;
     @ApiModelProperty("字段MD5")

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1214,20 +1214,20 @@ public ExcelFileData excelSaveAndParse(MultipartFile file, String tableId, Integ
         String filePath = saveFile(file, excelId);
         ExcelFileData excelFileData = new ExcelFileData();
         excelFileData.setExcelLable(filename);
-        excelFileData.setExcelId(excelId);
+        excelFileData.setId(excelId);
         excelFileData.setPath(filePath);
 
         filename = filename.substring(0, filename.lastIndexOf('.'));
         if(retrunSheetDataList.size() == 1){
             retrunSheetDataList.get(0).setDatasetName(filename);
             retrunSheetDataList.get(0).setSheetExcelId(excelId);
-            retrunSheetDataList.get(0).setSheetId(UUID.randomUUID().toString());
+            retrunSheetDataList.get(0).setId(UUID.randomUUID().toString());
             retrunSheetDataList.get(0).setPath(filePath);
         }else {
             for (ExcelSheetData excelSheetData : retrunSheetDataList) {
                 excelSheetData.setDatasetName(filename + "-" + excelSheetData.getExcelLable());
                 excelSheetData.setSheetExcelId(excelId);
-                excelSheetData.setSheetId(UUID.randomUUID().toString());
+                excelSheetData.setId(UUID.randomUUID().toString());
                 excelSheetData.setPath(filePath);
             }
         }

File: backend/src/main/java/io/dataease/datasource/controller/DatasourceController.java
Patch:
@@ -38,8 +38,8 @@ public Datasource addDatasource(@RequestBody Datasource datasource) {
 
     @ApiOperation("验证数据源")
     @PostMapping("/validate")
-    public void validate(@RequestBody Datasource datasource) throws Exception {
-        datasourceService.validate(datasource);
+    public ResultHolder validate(@RequestBody Datasource datasource) throws Exception {
+        return datasourceService.validate(datasource);
     }
 
     @ApiOperation("验证数据源")

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -572,7 +572,9 @@ private DatasetTableTaskLog getDatasetTableTaskLog(String datasetTableId, String
     }
 
     private void extractData(DatasetTable datasetTable, String extractType) throws Exception {
-        datasourceService.validate(datasetTable.getDataSourceId());
+        if(StringUtils.isNotEmpty(datasetTable.getDataSourceId())){
+            datasourceService.validate(datasetTable.getDataSourceId());
+        }
         KettleFileRepository repository = CommonBeanFactory.getBean(KettleFileRepository.class);
         RepositoryDirectoryInterface repositoryDirectoryInterface = repository.loadRepositoryDirectoryTree();
         TransMeta transMeta = null;

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -464,6 +464,7 @@ private String createDorisTablColumnSql(final List<DatasetTableField> datasetTab
                     Column_Fields = Column_Fields + "varchar(lenth)".replace("lenth", String.valueOf(size)) + ",`";
                     break;
                 case 1:
+                    size  = size < 50? 50 : size;
                     Column_Fields = Column_Fields + "varchar(lenth)".replace("lenth", String.valueOf(size)) + ",`";
                     break;
                 case 2:

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -63,12 +63,13 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/tokenExpired", ANON);
         filterChainDefinitionMap.put("/downline", ANON);
         filterChainDefinitionMap.put("/common-files/**", ANON);
-
+        filterChainDefinitionMap.put("/linkage/getPanelAllLinkageInfo/**", ANON);
         filterChainDefinitionMap.put("/api/auth/logout", "logout");
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
 
+
         filterChainDefinitionMap.put("/**", "authc");
 
         filterChainDefinitionMap.put("/**", "jwt");

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -63,12 +63,13 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/tokenExpired", ANON);
         filterChainDefinitionMap.put("/downline", ANON);
         filterChainDefinitionMap.put("/common-files/**", ANON);
-
+        filterChainDefinitionMap.put("/linkage/getPanelAllLinkageInfo/**", ANON);
         filterChainDefinitionMap.put("/api/auth/logout", "logout");
 
         filterChainDefinitionMap.put("/api/link/resourceDetail/**", "link");
         filterChainDefinitionMap.put("/api/link/viewDetail/**", "link");
 
+
         filterChainDefinitionMap.put("/**", "authc");
 
         filterChainDefinitionMap.put("/**", "jwt");

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -329,7 +329,7 @@ public void setNextDataType(Attributes attributes) {
             formatString = style.getDataFormatString();
             short format = this.formatIndex;
             if (format == 14 || format == 31 || format == 57 ||format == 59||
-                    format == 58 || (176 < format && format < 178)
+                    format == 58 || (176 <= format && format < 178)
                     || (182 <= format && format <= 196) ||
                     (210 <= format && format <= 213) || (208 == format))
             { // 日期

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                // return "nolic.html";
-                return "doc.html";
+                 return "nolic.html";
+                // return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -43,8 +43,8 @@ public String deApi() {
                 return "doc.html";
             default:
                 // DataEaseException.throwException("Invalid License.");
-                // return "nolic.html";
-                return "doc.html";
+                 return "nolic.html";
+                // return "doc.html";
         }
         // return "index.html";
     }

File: backend/src/main/java/io/dataease/job/sechedule/Schedular.java
Patch:
@@ -3,9 +3,11 @@
 import com.fit2cloud.quartz.anno.QuartzScheduled;
 import io.dataease.datasource.service.DatasourceService;
 import io.dataease.service.dataset.DataSetTableService;
+import org.springframework.stereotype.Component;
 
 import javax.annotation.Resource;
 
+@Component
 public class Schedular {
     @Resource
     private DataSetTableService dataSetTableService;

File: backend/src/main/java/io/dataease/job/sechedule/Schedular.java
Patch:
@@ -3,9 +3,11 @@
 import com.fit2cloud.quartz.anno.QuartzScheduled;
 import io.dataease.datasource.service.DatasourceService;
 import io.dataease.service.dataset.DataSetTableService;
+import org.springframework.stereotype.Component;
 
 import javax.annotation.Resource;
 
+@Component
 public class Schedular {
     @Resource
     private DataSetTableService dataSetTableService;

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -668,8 +668,8 @@ private void generateJobFile(String extractType, DatasetTable datasetTable, Stri
         //trans
         JobEntryTrans transrans = new JobEntryTrans();
         transrans.clearResultFiles = true;
-        transrans.execPerRow = true;
         transrans.clearResultRows = true;
+        transrans.followingAbortRemotely = true;
         transrans.setTransname(transName);
         transrans.setName("Transformation");
         JobEntryCopy transEntry = new JobEntryCopy(transrans);

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -667,6 +667,9 @@ private void generateJobFile(String extractType, DatasetTable datasetTable, Stri
 
         //trans
         JobEntryTrans transrans = new JobEntryTrans();
+        transrans.clearResultFiles = true;
+        transrans.execPerRow = true;
+        transrans.clearResultRows = true;
         transrans.setTransname(transName);
         transrans.setName("Transformation");
         JobEntryCopy transEntry = new JobEntryCopy(transrans);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableFieldsService.java
Patch:
@@ -34,7 +34,7 @@ public DatasetTableField save(DatasetTableField datasetTableField) {
             datasetTableField.setId(UUID.randomUUID().toString());
             // 若dataeasename为空，则用MD5(id)作为dataeasename
             if (StringUtils.isEmpty(datasetTableField.getDataeaseName())) {
-                datasetTableField.setDataeaseName(DorisTableUtils.dorisFieldName(datasetTableField.getId()));
+                datasetTableField.setDataeaseName(DorisTableUtils.columnName(datasetTableField.getId()));
             }
             if (ObjectUtils.isEmpty(datasetTableField.getLastSyncTime())) {
                 datasetTableField.setLastSyncTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableFieldsService.java
Patch:
@@ -34,7 +34,7 @@ public DatasetTableField save(DatasetTableField datasetTableField) {
             datasetTableField.setId(UUID.randomUUID().toString());
             // 若dataeasename为空，则用MD5(id)作为dataeasename
             if (StringUtils.isEmpty(datasetTableField.getDataeaseName())) {
-                datasetTableField.setDataeaseName(DorisTableUtils.dorisFieldName(datasetTableField.getId()));
+                datasetTableField.setDataeaseName(DorisTableUtils.columnName(datasetTableField.getId()));
             }
             if (ObjectUtils.isEmpty(datasetTableField.getLastSyncTime())) {
                 datasetTableField.setLastSyncTime(System.currentTimeMillis());

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -45,6 +45,8 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
+        //未读消息数量
+        filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);
 
         filterChainDefinitionMap.put("/**/*.json", ANON);
         filterChainDefinitionMap.put("/system/ui/**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -45,6 +45,8 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);
         filterChainDefinitionMap.put("/api/map/areaEntitys/**", ANON);
+        //未读消息数量
+        filterChainDefinitionMap.put("/api/sys_msg/unReadCount", ANON);
 
         filterChainDefinitionMap.put("/**/*.json", ANON);
         filterChainDefinitionMap.put("/system/ui/**", ANON);

File: backend/src/main/java/io/dataease/map/utils/MapUtils.java
Patch:
@@ -68,7 +68,7 @@ public static List<AreaEntity> readAreaEntity() {
 
         AreaEntity china = root();
 
-        maps.parallelStream().forEach(map -> {
+        maps.stream().forEach(map -> {
             // maps.stream().forEach(map -> {
             String province_code = map.get(Constants.PROVINCE_CODE).toString();
             String city_code = map.get(Constants.CITY_CODE).toString();

File: backend/src/main/java/io/dataease/map/utils/MapUtils.java
Patch:
@@ -68,7 +68,7 @@ public static List<AreaEntity> readAreaEntity() {
 
         AreaEntity china = root();
 
-        maps.parallelStream().forEach(map -> {
+        maps.stream().forEach(map -> {
             // maps.stream().forEach(map -> {
             String province_code = map.get(Constants.PROVINCE_CODE).toString();
             String city_code = map.get(Constants.CITY_CODE).toString();

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtAuthMapper.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.base.mapper.ext;
 
 
+import io.dataease.base.domain.SysAuth;
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
@@ -12,6 +13,6 @@ public interface ExtAuthMapper {
 
     List<Long> queryUserIdWithDeptIds(@Param("deptIds") List<Long> deptIds);
 
-
+    List<SysAuth> queryByResource(@Param("resourceId") String resourceId);
     // Set<Long> queryUserIdWithRD(@Param("roleIds") List<Long> roleIds, @Param("deptIds") List<Long> deptIds);
 }

File: backend/src/main/java/io/dataease/config/Knife4jConfiguration.java
Patch:
@@ -64,12 +64,11 @@ public Docket sysApi() {
         return defaultApi("系统管理", "io.dataease.controller.sys");
     }
 
-    @Bean(value = "pluginsApi")
-    /*@DependsOn(value = "licStatusCondition")*/
+    /*@Bean(value = "pluginsApi")
     @Conditional(LicStatusCondition.class)
     public Docket pluginsApi() {
         return defaultApi("插件管理", "io.dataease.plugins.server");
-    }
+    }*/
 
 
     private ApiInfo apiInfo(){

File: backend/src/main/java/io/dataease/config/Knife4jConfiguration.java
Patch:
@@ -64,12 +64,11 @@ public Docket sysApi() {
         return defaultApi("系统管理", "io.dataease.controller.sys");
     }
 
-    @Bean(value = "pluginsApi")
-    /*@DependsOn(value = "licStatusCondition")*/
+    /*@Bean(value = "pluginsApi")
     @Conditional(LicStatusCondition.class)
     public Docket pluginsApi() {
         return defaultApi("插件管理", "io.dataease.plugins.server");
-    }
+    }*/
 
 
     private ApiInfo apiInfo(){

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -632,10 +632,10 @@ public String wrapSql(String sql) {
     public String createRawQuerySQL(String table, List<DatasetTableField> fields) {
         String[] array = fields.stream().map(f -> {
             StringBuilder stringBuilder = new StringBuilder();
-            stringBuilder.append(" ").append(f.getOriginName());
+            stringBuilder.append(" \"").append(f.getOriginName()).append("\"");
             return stringBuilder.toString();
         }).toArray(String[]::new);
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), "\"" + table + "\"");
     }
 
     @Override

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtPanelViewLinkageMapper.java
Patch:
@@ -7,6 +7,6 @@
 
 public interface ExtPanelViewLinkageMapper {
 
-    List<PanelViewLinkageDTO> getViewLinkageGather(@Param("panelId") String panelId,@Param("sourceViewId") String sourceViewId);
+    List<PanelViewLinkageDTO> getViewLinkageGather(@Param("panelId") String panelId,@Param("sourceViewId") String sourceViewId,@Param("targetViewIds") List<String> targetViewIds);
 
 }

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -215,7 +215,7 @@ public static String stripXSSAndSql(String value) {
     }
 
     public static boolean checkSqlInjection(Object obj){
-        Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+|\\-).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
+        Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
                 "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\\b.*)");
         Matcher matcher=pattern.matcher(obj.toString().toLowerCase());
         return matcher.find();

File: backend/src/main/java/io/dataease/commons/wrapper/XssAndSqlHttpServletRequestWrapper.java
Patch:
@@ -215,7 +215,7 @@ public static String stripXSSAndSql(String value) {
     }
 
     public static boolean checkSqlInjection(Object obj){
-        Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+|\\-).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
+        Pattern pattern= Pattern.compile("(.*\\=.*\\-\\-.*)|(.*(\\+).*)|(.*\\w+(%|\\$|#|&)\\w+.*)|(.*\\|\\|.*)|(.*\\s+(and|or)\\s+.*)" +
                 "|(.*\\b(select|update|union|and|or|delete|insert|trancate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute)\\b.*)");
         Matcher matcher=pattern.matcher(obj.toString().toLowerCase());
         return matcher.find();

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -283,7 +283,7 @@ public void extractData(String datasetTableId, String taskId, String type, JobEx
                     createDorisTable(DorisTableUtils.dorisTmpName(DorisTableUtils.dorisName(datasetTableId)), dorisTablColumnSql);
                     generateTransFile("all_scope", datasetTable, datasource, datasetTableFields, null);
                     if (datasetTable.getType().equalsIgnoreCase("sql")) {
-                        generateJobFile("all_scope", datasetTable, fetchSqlField(new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getSql(), datasource));
+                        generateJobFile("all_scope", datasetTable, String.join(",", datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList())));
                     } else {
                         generateJobFile("all_scope", datasetTable, String.join(",", datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList())));
                     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -4,7 +4,6 @@
 import io.dataease.base.mapper.DatasetTableMapper;
 import io.dataease.base.mapper.DatasetTableTaskMapper;
 import io.dataease.base.mapper.ext.ExtDataSetTaskMapper;
-import io.dataease.base.mapper.ext.UtilMapper;
 import io.dataease.base.mapper.ext.query.GridExample;
 import io.dataease.commons.constants.JobStatus;
 import io.dataease.commons.constants.ScheduleType;
@@ -93,13 +92,15 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
             datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);
         }
 
+        scheduleService.addSchedule(datasetTableTask);
+
         // simple
         if (datasetTableTask.getRate().equalsIgnoreCase(ScheduleType.SIMPLE.toString())) { // SIMPLE 类型，提前占位
             execNow(datasetTableTask);
         }else {
             checkTaskIsStopped(datasetTableTask);
         }
-        scheduleService.addSchedule(datasetTableTask);
+
         return datasetTableTask;
     }
 

File: backend/src/main/java/io/dataease/auth/service/impl/ExtAuthServiceImpl.java
Patch:
@@ -52,11 +52,11 @@ public AuthURD resourceTarget(String resourceId) {
         }
 
         if (!CollectionUtils.isEmpty(authMap.get("role"))) {
-            authURD.setUserIds(authMap.get("role").stream().map(item -> Long.parseLong(item.getAuthTarget())).collect(Collectors.toList()));
+            authURD.setRoleIds(authMap.get("role").stream().map(item -> Long.parseLong(item.getAuthTarget())).collect(Collectors.toList()));
         }
 
         if (!CollectionUtils.isEmpty(authMap.get("dept"))) {
-            authURD.setUserIds(authMap.get("dept").stream().map(item -> Long.parseLong(item.getAuthTarget())).collect(Collectors.toList()));
+            authURD.setDeptIds(authMap.get("dept").stream().map(item -> Long.parseLong(item.getAuthTarget())).collect(Collectors.toList()));
         }
         return authURD;
     }

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -49,6 +49,9 @@ protected boolean isLoginAttempt(ServletRequest request, ServletResponse respons
     protected boolean executeLogin(ServletRequest request, ServletResponse response) throws Exception {
         HttpServletRequest httpServletRequest = (HttpServletRequest) request;
         String authorization = httpServletRequest.getHeader("Authorization");
+        if (StringUtils.startsWith(authorization, "Basic")) {
+            return false;
+        }
         // 当没有出现登录超时 且需要刷新token 则执行刷新token
         if (JWTUtils.loginExpire(authorization)){
             throw new AuthenticationException(expireMessage);

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -49,6 +49,9 @@ protected boolean isLoginAttempt(ServletRequest request, ServletResponse respons
     protected boolean executeLogin(ServletRequest request, ServletResponse response) throws Exception {
         HttpServletRequest httpServletRequest = (HttpServletRequest) request;
         String authorization = httpServletRequest.getHeader("Authorization");
+        if (StringUtils.startsWith(authorization, "Basic")) {
+            return false;
+        }
         // 当没有出现登录超时 且需要刷新token 则执行刷新token
         if (JWTUtils.loginExpire(authorization)){
             throw new AuthenticationException(expireMessage);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1449,7 +1449,6 @@ public void updateDatasetTableStatus() {
         datasetTableTaskLogMapper.updateByExampleSelective(datasetTableTaskLog, datasetTableTaskLogExample);
 
         dataSetTableTaskService.updateTaskStatus(taskIds, JobStatus.Error);
-        //TODO check task status
 
         for (DatasetTable jobStoppeddDatasetTable : jobStoppeddDatasetTables) {
             extractDataService.deleteFile("all_scope", jobStoppeddDatasetTable.getId());

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -200,6 +200,7 @@ public void updateTaskStatus(DatasetTableTask datasetTableTask, JobStatus lastEx
             datasetTableTask.setStatus(TaskStatus.Stopped.name());
         }else {
             datasetTableTask = datasetTableTaskMapper.selectByPrimaryKey(datasetTableTask.getId());
+            datasetTableTask.setLastExecStatus(lastExecStatus.name());
             if(StringUtils.isNotEmpty(datasetTableTask.getEnd()) && datasetTableTask.getEnd().equalsIgnoreCase("1")){
                 BaseGridRequest request = new BaseGridRequest();
                 ConditionEntity conditionEntity = new ConditionEntity();

File: backend/src/main/java/io/dataease/commons/utils/ExcelReaderUtil.java
Patch:
@@ -68,6 +68,7 @@ public static void readExcel(String fileName, InputStream inputStream) throws Ex
     }
 
     public static void main(String[] args) throws Exception {
-        ExcelReaderUtil.readExcel("根据前100行判断数据类型.xls", new FileInputStream("/Users/taojinlong/Desktop/根据前100行判断数据类型.xls"));
+        String file ="全国现有确诊趋势.xlsx";
+        ExcelReaderUtil.readExcel(file, new FileInputStream("/Users/taojinlong/Desktop/" + file));
     }
 }

File: backend/src/main/java/io/dataease/auth/api/dto/LoginDto.java
Patch:
@@ -1,13 +1,16 @@
 package io.dataease.auth.api.dto;
 
+import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.io.Serializable;
 
 @Data
 public class LoginDto implements Serializable {
 
+    @ApiModelProperty(value = "账号", required = true)
     private String username;
 
+    @ApiModelProperty(value = "密码", required = true)
     private String password;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -98,10 +98,10 @@ public Boolean validateName(@RequestBody Map<String, String> nameDto) {
         return true;
     }
 
-    @Override
+    /*@Override
     public Boolean isLogin() {
         return null;
-    }
+    }*/
 
 
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -20,13 +20,15 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         // 配置过滤:不会被拦截的链接 -> 放行 start ----------------------------------------------------------
         // 放行Swagger2页面，需要放行这些
 
+        filterChainDefinitionMap.put("/doc.html",ANON);
         filterChainDefinitionMap.put("/swagger-ui.html",ANON);
         filterChainDefinitionMap.put("/swagger-ui/**",ANON);
         filterChainDefinitionMap.put("/swagger/**",ANON);
         filterChainDefinitionMap.put("/webjars/**", ANON);
         filterChainDefinitionMap.put("/swagger-resources/**",ANON);
         filterChainDefinitionMap.put("/v2/**",ANON);
         filterChainDefinitionMap.put("/v3/**",ANON);
+
         filterChainDefinitionMap.put("/static/**", ANON);
         filterChainDefinitionMap.put("/css/**", ANON);
         filterChainDefinitionMap.put("/js/**", ANON);

File: backend/src/main/java/io/dataease/controller/sys/AboutController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 
 import io.dataease.commons.license.F2CLicenseResponse;

File: backend/src/main/java/io/dataease/controller/sys/CommonFilesController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 import io.dataease.service.CommonFilesService;
 import org.springframework.http.ResponseEntity;

File: backend/src/main/java/io/dataease/controller/sys/DisplayController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 import io.dataease.service.BaseDisplayService;
 import org.springframework.http.ResponseEntity;

File: backend/src/main/java/io/dataease/controller/sys/I18nController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 
 import io.dataease.commons.constants.I18nConstants;

File: backend/src/main/java/io/dataease/controller/sys/LicenseController.java
Patch:
@@ -1,10 +1,11 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 
 
 import com.google.gson.Gson;
 import io.dataease.commons.license.DefaultLicenseService;
 import io.dataease.commons.license.F2CLicenseResponse;
+import io.dataease.controller.ResultHolder;
 import io.dataease.exception.DataEaseException;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.web.bind.annotation.GetMapping;

File: backend/src/main/java/io/dataease/auth/api/dto/LoginDto.java
Patch:
@@ -1,13 +1,16 @@
 package io.dataease.auth.api.dto;
 
+import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
 import java.io.Serializable;
 
 @Data
 public class LoginDto implements Serializable {
 
+    @ApiModelProperty(value = "账号", required = true)
     private String username;
 
+    @ApiModelProperty(value = "密码", required = true)
     private String password;
 }

File: backend/src/main/java/io/dataease/auth/server/AuthServer.java
Patch:
@@ -98,10 +98,10 @@ public Boolean validateName(@RequestBody Map<String, String> nameDto) {
         return true;
     }
 
-    @Override
+    /*@Override
     public Boolean isLogin() {
         return null;
-    }
+    }*/
 
 
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -20,13 +20,15 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         // 配置过滤:不会被拦截的链接 -> 放行 start ----------------------------------------------------------
         // 放行Swagger2页面，需要放行这些
 
+        filterChainDefinitionMap.put("/doc.html",ANON);
         filterChainDefinitionMap.put("/swagger-ui.html",ANON);
         filterChainDefinitionMap.put("/swagger-ui/**",ANON);
         filterChainDefinitionMap.put("/swagger/**",ANON);
         filterChainDefinitionMap.put("/webjars/**", ANON);
         filterChainDefinitionMap.put("/swagger-resources/**",ANON);
         filterChainDefinitionMap.put("/v2/**",ANON);
         filterChainDefinitionMap.put("/v3/**",ANON);
+
         filterChainDefinitionMap.put("/static/**", ANON);
         filterChainDefinitionMap.put("/css/**", ANON);
         filterChainDefinitionMap.put("/js/**", ANON);

File: backend/src/main/java/io/dataease/controller/sys/AboutController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 
 import io.dataease.commons.license.F2CLicenseResponse;

File: backend/src/main/java/io/dataease/controller/sys/CommonFilesController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 import io.dataease.service.CommonFilesService;
 import org.springframework.http.ResponseEntity;

File: backend/src/main/java/io/dataease/controller/sys/DisplayController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 import io.dataease.service.BaseDisplayService;
 import org.springframework.http.ResponseEntity;

File: backend/src/main/java/io/dataease/controller/sys/I18nController.java
Patch:
@@ -1,4 +1,4 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 
 import io.dataease.commons.constants.I18nConstants;

File: backend/src/main/java/io/dataease/controller/sys/LicenseController.java
Patch:
@@ -1,10 +1,11 @@
-package io.dataease.controller;
+package io.dataease.controller.sys;
 
 
 
 import com.google.gson.Gson;
 import io.dataease.commons.license.DefaultLicenseService;
 import io.dataease.commons.license.F2CLicenseResponse;
+import io.dataease.controller.ResultHolder;
 import io.dataease.exception.DataEaseException;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.web.bind.annotation.GetMapping;

File: backend/src/main/java/io/dataease/controller/request/chart/ChartGroupRequest.java
Patch:
@@ -3,9 +3,12 @@
 import io.dataease.base.domain.ChartGroup;
 import lombok.Data;
 
+import java.util.Set;
+
 
 @Data
 public class ChartGroupRequest extends ChartGroup {
     private String sort;
     private String userId;
+    private Set<String> ids;
 }

File: backend/src/main/java/io/dataease/controller/request/chart/ChartGroupRequest.java
Patch:
@@ -3,9 +3,12 @@
 import io.dataease.base.domain.ChartGroup;
 import lombok.Data;
 
+import java.util.Set;
+
 
 @Data
 public class ChartGroupRequest extends ChartGroup {
     private String sort;
     private String userId;
+    private Set<String> ids;
 }

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -41,4 +41,6 @@ public class DorisConstants extends SQLConstants {
     public static final String BRACKETS = "(%s)";
 
     public static final String ROUND = "ROUND(%s,%s)";
+
+    public static final String VARCHAR = "VARCHAR";
 }

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -41,4 +41,6 @@ public class DorisConstants extends SQLConstants {
     public static final String BRACKETS = "(%s)";
 
     public static final String ROUND = "ROUND(%s,%s)";
+
+    public static final String VARCHAR = "VARCHAR";
 }

File: backend/src/main/java/io/dataease/commons/utils/ExcelReaderUtil.java
Patch:
@@ -68,6 +68,6 @@ public static void readExcel(String fileName, InputStream inputStream) throws Ex
     }
 
     public static void main(String[] args) throws Exception {
-        ExcelReaderUtil.readExcel("111.xls", new FileInputStream("/Users/taojinlong/Desktop/111.xls"));
+        ExcelReaderUtil.readExcel("跑步数据汇总——万马奔腾版0729.xlsx", new FileInputStream("/Users/taojinlong/Desktop/跑步数据汇总——万马奔腾版0729.xlsx"));
     }
 }

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtSysMsgMapper.java
Patch:
@@ -16,13 +16,13 @@ public interface ExtSysMsgMapper {
 
     @Update({
         "<script>",
-            "update sys_msg set status = 1 where msg_id in ",
+            "update sys_msg set status = 1, read_time = #{time} where msg_id in ",
             "<foreach collection='msgIds' item='msgId' open='(' separator=',' close=')' >",
                 " #{msgId}",
             "</foreach>",
         "</script>"
     })
-    int batchStatus(@Param("msgIds") List<Long> msgIds);
+    int batchStatus(@Param("msgIds") List<Long> msgIds, @Param("time") Long time);
 
 
     @Delete({

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -109,7 +109,7 @@ public void setReaded(Long msgId) {
     }
 
     public void setBatchReaded(List<Long> msgIds) {
-        extSysMsgMapper.batchStatus(msgIds);
+        extSysMsgMapper.batchStatus(msgIds, System.currentTimeMillis());
     }
 
     public void batchDelete(List<Long> msgIds) {

File: backend/src/main/java/io/dataease/base/mapper/ext/query/GridExample.java
Patch:
@@ -171,6 +171,9 @@ public Criteria addCondtion(ConditionEntity conditionEntity){
                 case "not null":
                     addNotNullCriterion(field + " is not null ");
                     break;
+                case "extra":
+                    addCriterion(field);
+                    break;
             }
             return (Criteria) this;
         }

File: backend/src/main/java/io/dataease/dto/dataset/DataSetTaskDTO.java
Patch:
@@ -15,4 +15,5 @@ public class DataSetTaskDTO extends DatasetTableTask {
     private Long nextExecTime;
     private String taskStatus;
     private String msg;
+    private String privileges;
 }

File: backend/src/main/java/io/dataease/commons/utils/ExcelXlsxReader.java
Patch:
@@ -250,7 +250,7 @@ public void endElement(String uri, String localName, String name) throws SAXExce
                 preRef = ref;
             }
             //补全单元格之间的空单元格
-            if (!"A".equals(preRef.substring(0, 1)) && curRow==1) {
+            if (!"A".equals(preRef.substring(0, 1)) && curRow==1 && preRef.equalsIgnoreCase(ref)) {
                 throw new RuntimeException(Translator.get("i18n_excel_empty_column"));
             }else if (!ref.equals(preRef)) {
                 int len = countNullCell(ref, preRef);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -117,15 +117,16 @@ private synchronized boolean existSyncTask(DatasetTable  datasetTable,  DatasetT
         example.or(example.createCriteria().andIdEqualTo(datasetTable.getId()).andSyncStatusIsNull());
         Boolean existSyncTask = datasetTableMapper.updateByExampleSelective(datasetTable, example) == 0;
         if(!existSyncTask){
-            datasetTableTask.setLastExecTime(System.currentTimeMillis());
+            Long startTime = System.currentTimeMillis();
+            datasetTableTask.setLastExecTime(startTime);
             datasetTableTask.setLastExecStatus(JobStatus.Underway.name());
             datasetTableTask.setStatus(TaskStatus.Exec.name());
             update(datasetTableTask);
             DatasetTableTaskLog datasetTableTaskLog = new DatasetTableTaskLog();
             datasetTableTaskLog.setTableId(datasetTableTask.getTableId());
             datasetTableTaskLog.setTaskId(datasetTableTask.getId());
             datasetTableTaskLog.setStatus(JobStatus.Underway.name());
-            datasetTableTaskLog.setStartTime(System.currentTimeMillis());
+            datasetTableTaskLog.setStartTime(startTime);
             datasetTableTaskLog.setTriggerType(TriggerType.Custom.name());
             dataSetTableTaskLogService.save(datasetTableTaskLog);
         }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -129,7 +129,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
         }
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
-        ST st_sql = stg.getInstanceOf("querySql");
+        ST st_sql = stg.getInstanceOf("previewSql");
         st_sql.add("isGroup", isGroup);
         if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -127,7 +127,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
         }
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
-        ST st_sql = stg.getInstanceOf("querySql");
+        ST st_sql = stg.getInstanceOf("previewSql");
         st_sql.add("isGroup", isGroup);
         if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -101,7 +101,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
         List<SQLObj> xFields = xFields(table, fields);
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
-        ST st_sql = stg.getInstanceOf("querySql");
+        ST st_sql = stg.getInstanceOf("previewSql");
         st_sql.add("isGroup", isGroup);
         if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -129,7 +129,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
         }
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
-        ST st_sql = stg.getInstanceOf("querySql");
+        ST st_sql = stg.getInstanceOf("previewSql");
         st_sql.add("isGroup", isGroup);
         if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -127,7 +127,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
         }
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
-        ST st_sql = stg.getInstanceOf("querySql");
+        ST st_sql = stg.getInstanceOf("previewSql");
         st_sql.add("isGroup", isGroup);
         if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -101,7 +101,7 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
         List<SQLObj> xFields = xFields(table, fields);
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
-        ST st_sql = stg.getInstanceOf("querySql");
+        ST st_sql = stg.getInstanceOf("previewSql");
         st_sql.add("isGroup", isGroup);
         if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -130,7 +130,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
         ST st_sql = stg.getInstanceOf("querySql");
-        if (isGroup && CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
+        st_sql.add("isGroup", isGroup);
+        if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);
         if ((fields.size() > 0)) {
             xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -128,7 +128,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
         ST st_sql = stg.getInstanceOf("querySql");
-        if (isGroup && CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
+        st_sql.add("isGroup", isGroup);
+        if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);
         return st_sql.render();
     }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -102,7 +102,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
         ST st_sql = stg.getInstanceOf("querySql");
-        if (isGroup && CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
+        st_sql.add("isGroup", isGroup);
+        if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);
         return st_sql.render();
     }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -130,7 +130,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
         ST st_sql = stg.getInstanceOf("querySql");
-        if (isGroup && CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
+        st_sql.add("isGroup", isGroup);
+        if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);
         if ((fields.size() > 0)) {
             xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -128,7 +128,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
         ST st_sql = stg.getInstanceOf("querySql");
-        if (isGroup && CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
+        st_sql.add("isGroup", isGroup);
+        if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);
         return st_sql.render();
     }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -102,7 +102,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields, boole
 
         STGroup stg = new STGroupFile(SQLConstants.SQL_TEMPLATE);
         ST st_sql = stg.getInstanceOf("querySql");
-        if (isGroup && CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
+        st_sql.add("isGroup", isGroup);
+        if (CollectionUtils.isNotEmpty(xFields)) st_sql.add("groups", xFields);
         if (ObjectUtils.isNotEmpty(tableObj)) st_sql.add("table", tableObj);
         return st_sql.render();
     }

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -68,9 +68,9 @@ public List<Object> fieldValues(String fieldId) {
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
             if (StringUtils.equalsIgnoreCase(datasetTable.getType(), "db")) {
                 datasourceRequest.setTable(dataTableInfoDTO.getTable());
-                datasourceRequest.setQuery(qp.createQuerySQL(dataTableInfoDTO.getTable(), Collections.singletonList(field)));
+                datasourceRequest.setQuery(qp.createQuerySQL(dataTableInfoDTO.getTable(), Collections.singletonList(field), true));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), "sql")) {
-                datasourceRequest.setQuery(qp.createQuerySQLAsTmp(dataTableInfoDTO.getSql(), Collections.singletonList(field)));
+                datasourceRequest.setQuery(qp.createQuerySQLAsTmp(dataTableInfoDTO.getSql(), Collections.singletonList(field), true));
             }
         } else if (datasetTable.getMode() == 1) {// 抽取
             // 连接doris，构建doris数据源查询
@@ -81,7 +81,7 @@ public List<Object> fieldValues(String fieldId) {
             tableName = "ds_" + datasetTable.getId().replaceAll("-", "_");
             datasourceRequest.setTable(tableName);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-            datasourceRequest.setQuery(qp.createQuerySQL(tableName, Collections.singletonList(field)));
+            datasourceRequest.setQuery(qp.createQuerySQL(tableName, Collections.singletonList(field), true));
         }
 
         try {

File: backend/src/main/java/io/dataease/service/dataset/impl/direct/DirectFieldService.java
Patch:
@@ -68,9 +68,9 @@ public List<Object> fieldValues(String fieldId) {
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
             if (StringUtils.equalsIgnoreCase(datasetTable.getType(), "db")) {
                 datasourceRequest.setTable(dataTableInfoDTO.getTable());
-                datasourceRequest.setQuery(qp.createQuerySQL(dataTableInfoDTO.getTable(), Collections.singletonList(field)));
+                datasourceRequest.setQuery(qp.createQuerySQL(dataTableInfoDTO.getTable(), Collections.singletonList(field), true));
             } else if (StringUtils.equalsIgnoreCase(datasetTable.getType(), "sql")) {
-                datasourceRequest.setQuery(qp.createQuerySQLAsTmp(dataTableInfoDTO.getSql(), Collections.singletonList(field)));
+                datasourceRequest.setQuery(qp.createQuerySQLAsTmp(dataTableInfoDTO.getSql(), Collections.singletonList(field), true));
             }
         } else if (datasetTable.getMode() == 1) {// 抽取
             // 连接doris，构建doris数据源查询
@@ -81,7 +81,7 @@ public List<Object> fieldValues(String fieldId) {
             tableName = "ds_" + datasetTable.getId().replaceAll("-", "_");
             datasourceRequest.setTable(tableName);
             QueryProvider qp = ProviderFactory.getQueryProvider(ds.getType());
-            datasourceRequest.setQuery(qp.createQuerySQL(tableName, Collections.singletonList(field)));
+            datasourceRequest.setQuery(qp.createQuerySQL(tableName, Collections.singletonList(field), true));
         }
 
         try {

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -273,10 +273,12 @@ public void sendMsg(Long userId, Long typeId, Long channelId, String content, St
     @Cacheable(value = SysMsgConstants.SYS_MSG_USER_SUBSCRIBE, key = "#userId")
     public List<SubscribeNode> subscribes(Long userId) {
         SysMsgSettingExample example = new SysMsgSettingExample();
-        example.createCriteria().andUserIdEqualTo(userId).andEnableEqualTo(true);
+        /*example.createCriteria().andUserIdEqualTo(userId).andEnableEqualTo(true);*/
+        example.createCriteria().andUserIdEqualTo(userId);
         List<SysMsgSetting> sysMsgSettings = sysMsgSettingMapper.selectByExample(example);
         // 添加默认订阅
         sysMsgSettings = addDefault(sysMsgSettings);
+        sysMsgSettings = sysMsgSettings.stream().filter(SysMsgSetting::getEnable).collect(Collectors.toList());
         // sysMsgSettings.addAll(defaultSettings());
         List<SubscribeNode> resultLists = sysMsgSettings.stream().map(item -> {
             SubscribeNode subscribeNode = new SubscribeNode();

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -185,7 +185,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()
@@ -283,7 +283,7 @@ public String getSQLStack(String table, List<ChartViewFieldDTO> xAxis, List<Char
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -175,7 +175,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()
@@ -274,7 +274,7 @@ public String getSQLStack(String table, List<ChartViewFieldDTO> xAxis, List<Char
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -210,7 +210,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()
@@ -308,7 +308,7 @@ public String getSQLStack(String table, List<ChartViewFieldDTO> xAxis, List<Char
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -185,7 +185,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()
@@ -283,7 +283,7 @@ public String getSQLStack(String table, List<ChartViewFieldDTO> xAxis, List<Char
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -175,7 +175,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()
@@ -274,7 +274,7 @@ public String getSQLStack(String table, List<ChartViewFieldDTO> xAxis, List<Char
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -210,7 +210,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()
@@ -308,7 +308,7 @@ public String getSQLStack(String table, List<ChartViewFieldDTO> xAxis, List<Char
                 // 处理横轴字段
                 xFields.add(getXFields(x, originField, fieldAlias));
                 // 处理横轴过滤
-                xWheres.addAll(getXWheres(x, originField, fieldAlias));
+//                xWheres.addAll(getXWheres(x, originField, fieldAlias));
                 // 处理横轴排序
                 if (StringUtils.isNotEmpty(x.getSort()) && !StringUtils.equalsIgnoreCase(x.getSort(), "none")) {
                     xOrders.add(SQLObj.builder()

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtDataSetTaskMapper.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.base.mapper.ext;
 
-import io.dataease.base.domain.DatasetTableTaskLog;
 import io.dataease.base.mapper.ext.query.GridExample;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.dto.dataset.DataSetTaskLogDTO;

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -7,7 +7,6 @@
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.request.dataset.DataSetTaskRequest;
 import io.dataease.controller.sys.base.BaseGridRequest;
-import io.dataease.controller.sys.response.SysUserGridResponse;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.service.dataset.DataSetTableTaskLogService;
 import io.dataease.service.dataset.DataSetTableTaskService;

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtDataSetTaskMapper.java
Patch:
@@ -1,6 +1,5 @@
 package io.dataease.base.mapper.ext;
 
-import io.dataease.base.domain.DatasetTableTaskLog;
 import io.dataease.base.mapper.ext.query.GridExample;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.dto.dataset.DataSetTaskLogDTO;

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskController.java
Patch:
@@ -7,7 +7,6 @@
 import io.dataease.commons.utils.Pager;
 import io.dataease.controller.request.dataset.DataSetTaskRequest;
 import io.dataease.controller.sys.base.BaseGridRequest;
-import io.dataease.controller.sys.response.SysUserGridResponse;
 import io.dataease.dto.dataset.DataSetTaskDTO;
 import io.dataease.service.dataset.DataSetTableTaskLogService;
 import io.dataease.service.dataset.DataSetTableTaskService;

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtChartViewMapper.java
Patch:
@@ -12,6 +12,8 @@
 public interface ExtChartViewMapper {
     List<ChartViewDTO> search(ChartViewRequest request);
 
+    ChartViewDTO searchOne(ChartViewRequest request);
+
     void chartCopy(@Param("newChartId")String newChartId,@Param("oldChartId")String oldChartId);
 
     @Select("select id from chart_view where table_id = #{tableId}")

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtChartViewMapper.java
Patch:
@@ -12,6 +12,8 @@
 public interface ExtChartViewMapper {
     List<ChartViewDTO> search(ChartViewRequest request);
 
+    ChartViewDTO searchOne(ChartViewRequest request);
+
     void chartCopy(@Param("newChartId")String newChartId,@Param("oldChartId")String oldChartId);
 
     @Select("select id from chart_view where table_id = #{tableId}")

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -1402,6 +1402,9 @@ public void updateDatasetTableStatus() {
     public static boolean checkIsRepeat(String[] array) {
         HashSet<String> hashSet = new HashSet<String>();
         for (int i = 0; i < array.length; i++) {
+            if(StringUtils.isEmpty(array[i])){
+                throw new RuntimeException(Translator.get("i18n_excel_empty_column"));
+            }
             hashSet.add(array[i]);
         }
         if (hashSet.size() == array.length) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -433,7 +433,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
             }
             try {
                 datasourceRequest.setQuery(qp.createQueryTableWithLimit(table, fields, Integer.valueOf(dataSetTableRequest.getRow())));
-                dataSetPreviewPage.setTotal(Integer.valueOf(jdbcProvider.getData(datasourceRequest).get(0)[0]));
+                dataSetPreviewPage.setTotal(jdbcProvider.getData(datasourceRequest).size());
             } catch (Exception e) {
                 e.printStackTrace();
             }
@@ -480,7 +480,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
 
                 try {
                     datasourceRequest.setQuery(qp.createQueryTableWithLimit(table, fields, Integer.valueOf(dataSetTableRequest.getRow())));
-                    dataSetPreviewPage.setTotal(Integer.valueOf(jdbcProvider.getData(datasourceRequest).get(0)[0]));
+                    dataSetPreviewPage.setTotal(jdbcProvider.getData(datasourceRequest).size());
                 } catch (Exception e) {
                     e.printStackTrace();
                 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -433,7 +433,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
             }
             try {
                 datasourceRequest.setQuery(qp.createQueryTableWithLimit(table, fields, Integer.valueOf(dataSetTableRequest.getRow())));
-                dataSetPreviewPage.setTotal(Integer.valueOf(jdbcProvider.getData(datasourceRequest).get(0)[0]));
+                dataSetPreviewPage.setTotal(jdbcProvider.getData(datasourceRequest).size());
             } catch (Exception e) {
                 e.printStackTrace();
             }
@@ -480,7 +480,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
 
                 try {
                     datasourceRequest.setQuery(qp.createQueryTableWithLimit(table, fields, Integer.valueOf(dataSetTableRequest.getRow())));
-                    dataSetPreviewPage.setTotal(Integer.valueOf(jdbcProvider.getData(datasourceRequest).get(0)[0]));
+                    dataSetPreviewPage.setTotal(jdbcProvider.getData(datasourceRequest).size());
                 } catch (Exception e) {
                     e.printStackTrace();
                 }

File: backend/src/main/java/io/dataease/dto/dataset/DataSetTaskLogDTO.java
Patch:
@@ -12,4 +12,5 @@
 @Setter
 public class DataSetTaskLogDTO extends DatasetTableTaskLog {
     private String name;
+    private String datasetName;
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskLogService.java
Patch:
@@ -51,7 +51,9 @@ public List<DataSetTaskLogDTO> list(BaseGridRequest request, String type) {
         if(!type.equalsIgnoreCase("excel")){
             ConditionEntity entity = new ConditionEntity();
             entity.setField("task_id");
-            entity.setOperator("not null");
+            entity.setOperator("not in");
+            List<String>status = new ArrayList<>();status.add("初始导入");status.add("替换");status.add("追加");
+            entity.setValue(status);
             List<ConditionEntity> conditionEntities = request.getConditions();
             if(CollectionUtils.isEmpty(conditionEntities)){
                 conditionEntities = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -181,7 +181,6 @@ public List<SysMsgSetting> settingList() {
     }
 
     public List<SysMsgSetting> defaultSettings() {
-        // Long userId = AuthUtils.getUser().getUserId();
         SysMsgSetting sysMsgSetting1 = new SysMsgSetting();
         sysMsgSetting1.setTypeId(2L);
         sysMsgSetting1.setChannelId(1L);

File: backend/src/main/java/io/dataease/dto/dataset/DataSetTaskLogDTO.java
Patch:
@@ -12,4 +12,5 @@
 @Setter
 public class DataSetTaskLogDTO extends DatasetTableTaskLog {
     private String name;
+    private String datasetName;
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskLogService.java
Patch:
@@ -51,7 +51,9 @@ public List<DataSetTaskLogDTO> list(BaseGridRequest request, String type) {
         if(!type.equalsIgnoreCase("excel")){
             ConditionEntity entity = new ConditionEntity();
             entity.setField("task_id");
-            entity.setOperator("not null");
+            entity.setOperator("not in");
+            List<String>status = new ArrayList<>();status.add("初始导入");status.add("替换");status.add("追加");
+            entity.setValue(status);
             List<ConditionEntity> conditionEntities = request.getConditions();
             if(CollectionUtils.isEmpty(conditionEntities)){
                 conditionEntities = new ArrayList<>();

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -181,7 +181,7 @@ public List<SysMsgSetting> settingList() {
     }
 
     public List<SysMsgSetting> defaultSettings() {
-        Long userId = AuthUtils.getUser().getUserId();
+//        Long userId = AuthUtils.getUser().getUserId();
         SysMsgSetting sysMsgSetting1 = new SysMsgSetting();
         sysMsgSetting1.setTypeId(2L);
         sysMsgSetting1.setChannelId(1L);

File: backend/src/main/java/io/dataease/service/message/SysMsgService.java
Patch:
@@ -181,7 +181,7 @@ public List<SysMsgSetting> settingList() {
     }
 
     public List<SysMsgSetting> defaultSettings() {
-        Long userId = AuthUtils.getUser().getUserId();
+        // Long userId = AuthUtils.getUser().getUserId();
         SysMsgSetting sysMsgSetting1 = new SysMsgSetting();
         sysMsgSetting1.setTypeId(2L);
         sysMsgSetting1.setChannelId(1L);

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskLogController.java
Patch:
@@ -33,10 +33,10 @@ public void delete(@PathVariable String id) {
         dataSetTableTaskLogService.delete(id);
     }
 
-    @PostMapping("list/{goPage}/{pageSize}")
-    public Pager<List<DataSetTaskLogDTO>> list(@RequestBody BaseGridRequest request, @PathVariable int goPage, @PathVariable int pageSize) {
+    @PostMapping("list/{type}/{goPage}/{pageSize}")
+    public Pager<List<DataSetTaskLogDTO>> list(@RequestBody BaseGridRequest request, @PathVariable String type, @PathVariable int goPage, @PathVariable int pageSize) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
-        return PageUtils.setPageInfo(page, dataSetTableTaskLogService.list(request));
+        return PageUtils.setPageInfo(page, dataSetTableTaskLogService.list(request, type));
     }
 
 }

File: backend/src/main/java/io/dataease/dto/dataset/DataTableInfoDTO.java
Patch:
@@ -14,6 +14,7 @@
 public class DataTableInfoDTO {
     private String table;
     private String sql;
+    private List<String> sheets;
     private String data;// file path
     private List<DataTableInfoCustomUnion> list;
 }

File: backend/src/main/java/io/dataease/commons/constants/TaskStatus.java
Patch:
@@ -1,5 +1,5 @@
 package io.dataease.commons.constants;
 
 public enum TaskStatus {
-    Underway, Stopped
+    Underway, Stopped, Pending, Exec
 }

File: backend/src/main/java/io/dataease/datasource/dto/MysqlConfigration.java
Patch:
@@ -11,9 +11,9 @@ public class MysqlConfigration extends JdbcDTO {
 
     public String getJdbc() {
         // 连接参数先写死，后边要把编码、时区等参数放到数据源的设置中
-        return "jdbc:mysql://HOSTNAME:PORT/DATABASE?characterEncoding=UTF-8"
+        return "jdbc:mysql://HOSTNAME:PORT/DATABASE?characterEncoding=UTF-8&connectTimeout=5000&socketTimeout=5000"
                 .replace("HOSTNAME", getHost())
                 .replace("PORT", getPort().toString())
                 .replace("DATABASE", getDataBase());
     }
-}
+}
\ No newline at end of file

File: backend/src/main/java/io/dataease/datasource/provider/JdbcProvider.java
Patch:
@@ -401,6 +401,7 @@ private static Connection getConnection(DatasourceRequest datasourceRequest) thr
         String driver = null;
         String jdbcurl = null;
         DatasourceTypes datasourceType = DatasourceTypes.valueOf(datasourceRequest.getDatasource().getType());
+        Properties props = new Properties();
         switch (datasourceType) {
             case mysql:
                 MysqlConfigration mysqlConfigration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), MysqlConfigration.class);
@@ -429,13 +430,14 @@ private static Connection getConnection(DatasourceRequest datasourceRequest) thr
                 password = oracleConfigration.getPassword();
                 driver = oracleConfigration.getDriver();
                 jdbcurl = oracleConfigration.getJdbc();
+                props.put( "oracle.net.CONNECT_TIMEOUT" , "5000") ;
+                props.put( "oracle.jdbc.ReadTimeout" , "5000" ) ;
                 break;
             default:
                 break;
         }
 
         Class.forName(driver);
-        Properties props = new Properties();
         props.setProperty("user", username);
         if (StringUtils.isNotBlank(password)) {
             props.setProperty("password", password);

File: backend/src/main/java/io/dataease/dto/dataset/DataSetTaskDTO.java
Patch:
@@ -15,4 +15,5 @@ public class DataSetTaskDTO extends DatasetTableTask {
     private String datasetName;
     private Long nextExecTime;
     private String taskStatus;
+    private String msg;
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -180,10 +180,10 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             }
         }
 
-        // 获取数据集
+        // 获取数据集,需校验权限
         DatasetTable table = dataSetTableService.get(view.getTableId());
         if (ObjectUtils.isEmpty(table)) {
-            throw new RuntimeException(Translator.get("i18n_dataset_delete"));
+            throw new RuntimeException(Translator.get("i18n_dataset_delete_or_no_permission"));
         }
         // 判断连接方式，直连或者定时抽取 table.mode
         DatasourceRequest datasourceRequest = new DatasourceRequest();

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskLogService.java
Patch:
@@ -95,6 +95,7 @@ public DataSetTaskDTO lastExecStatus(DataSetTaskDTO dataSetTaskDTO){
         if(CollectionUtils.isNotEmpty(datasetTableTaskLogs)){
             dataSetTaskDTO.setLastExecStatus(datasetTableTaskLogs.get(0).getStatus());
             dataSetTaskDTO.setLastExecTime(datasetTableTaskLogs.get(0).getCreateTime());
+            dataSetTaskDTO.setMsg(datasetTableTaskLogs.get(0).getInfo());
         }
         return dataSetTaskDTO;
     }

File: backend/src/main/java/io/dataease/base/domain/ChartViewWithBLOBs.java
Patch:
@@ -13,6 +13,8 @@ public class ChartViewWithBLOBs extends ChartView implements Serializable {
 
     private String yAxis;
 
+    private String extStack;
+
     private String customAttr;
 
     private String customStyle;

File: backend/src/main/java/io/dataease/map/dto/entity/AreaEntity.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.map.dto.entity;
 
+import com.fasterxml.jackson.annotation.JsonInclude;
 import lombok.Builder;
 import lombok.Data;
 
@@ -10,6 +11,7 @@
 
 @Data
 @Builder
+@JsonInclude(JsonInclude.Include.NON_NULL)
 public class AreaEntity implements Serializable {
 
     private static final long serialVersionUID = -1326667005437020282L;

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -181,7 +181,7 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
         }
 
         // 获取数据集,需校验权限
-        DatasetTable table = dataSetTableService.getWithPermission(view.getTableId());
+        DatasetTable table = dataSetTableService.get(view.getTableId());
         if (ObjectUtils.isEmpty(table)) {
             throw new RuntimeException(Translator.get("i18n_dataset_delete_or_no_permission"));
         }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -181,7 +181,7 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
         }
 
         // 获取数据集,需校验权限
-        DatasetTable table = dataSetTableService.getWithPermission(view.getTableId());
+        DatasetTable table = dataSetTableService.get(view.getTableId());
         if (ObjectUtils.isEmpty(table)) {
             throw new RuntimeException(Translator.get("i18n_dataset_delete_or_no_permission"));
         }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -180,10 +180,10 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             }
         }
 
-        // 获取数据集
-        DatasetTable table = dataSetTableService.get(view.getTableId());
+        // 获取数据集,需校验权限
+        DatasetTable table = dataSetTableService.getWithPermission(view.getTableId());
         if (ObjectUtils.isEmpty(table)) {
-            throw new RuntimeException(Translator.get("i18n_dataset_delete"));
+            throw new RuntimeException(Translator.get("i18n_dataset_delete_or_no_permission"));
         }
         // 判断连接方式，直连或者定时抽取 table.mode
         DatasourceRequest datasourceRequest = new DatasourceRequest();

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -180,10 +180,10 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             }
         }
 
-        // 获取数据集
-        DatasetTable table = dataSetTableService.get(view.getTableId());
+        // 获取数据集,需校验权限
+        DatasetTable table = dataSetTableService.getWithPermission(view.getTableId());
         if (ObjectUtils.isEmpty(table)) {
-            throw new RuntimeException(Translator.get("i18n_dataset_delete"));
+            throw new RuntimeException(Translator.get("i18n_dataset_delete_or_no_permission"));
         }
         // 判断连接方式，直连或者定时抽取 table.mode
         DatasourceRequest datasourceRequest = new DatasourceRequest();

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -313,7 +313,7 @@ else if ((cache = CacheUtils.get(JdbcConstants.VIEW_CACHE_KEY, id)) == null) {
         // table组件
         List<ChartViewFieldDTO> fields = new ArrayList<>();
         List<Map<String, Object>> tableRow = new ArrayList<>();
-        if (ObjectUtils.isNotEmpty(xAxis)) {
+        if (ObjectUtils.isNotEmpty(xAxis) && !StringUtils.equalsIgnoreCase("text", view.getType()) && !StringUtils.equalsIgnoreCase("gauge", view.getType())) {
             fields.addAll(xAxis);
         }
         fields.addAll(yAxis);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -313,7 +313,7 @@ else if ((cache = CacheUtils.get(JdbcConstants.VIEW_CACHE_KEY, id)) == null) {
         // table组件
         List<ChartViewFieldDTO> fields = new ArrayList<>();
         List<Map<String, Object>> tableRow = new ArrayList<>();
-        if (ObjectUtils.isNotEmpty(xAxis)) {
+        if (ObjectUtils.isNotEmpty(xAxis) && !StringUtils.equalsIgnoreCase("text", view.getType()) && !StringUtils.equalsIgnoreCase("gauge", view.getType())) {
             fields.addAll(xAxis);
         }
         fields.addAll(yAxis);

File: backend/src/main/java/io/dataease/map/service/MapService.java
Patch:
@@ -48,4 +48,6 @@ public List<AreaEntity> entitysByPid(List<AreaEntity> entities, String pid) {
 
     }
 
+
+
 }

File: backend/src/main/java/io/dataease/map/utils/MapUtils.java
Patch:
@@ -16,8 +16,6 @@
 import org.springframework.stereotype.Component;
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicReference;
 import java.util.stream.Collectors;
 
 @Component

File: backend/src/main/java/io/dataease/map/service/MapService.java
Patch:
@@ -48,4 +48,6 @@ public List<AreaEntity> entitysByPid(List<AreaEntity> entities, String pid) {
 
     }
 
+
+
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -58,7 +58,7 @@ public class DataSetTableTaskService {
     public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Exception {
         checkName(dataSetTaskRequest);
         DatasetTableTask datasetTableTask = dataSetTaskRequest.getDatasetTableTask();
-        if(!datasetTableTask.getType().equalsIgnoreCase("add_scope")){
+        if(datasetTableTask.getType().equalsIgnoreCase("add_scope")){
             dataSetTableService.saveIncrementalConfig(dataSetTaskRequest.getDatasetTableIncrementalConfig());
         }
         // check

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -583,7 +583,7 @@ private void extractData(DatasetTable datasetTable, String extractType) throws E
         if (jobStatus.getStatusDescription().equals("Finished")) {
             return;
         } else {
-            DataEaseException.throwException((jobStatus.getErrorDescription()));
+            DataEaseException.throwException((jobStatus.getLoggingString()));
         }
     }
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -58,7 +58,7 @@ public class DataSetTableTaskService {
     public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Exception {
         checkName(dataSetTaskRequest);
         DatasetTableTask datasetTableTask = dataSetTaskRequest.getDatasetTableTask();
-        if(!datasetTableTask.getType().equalsIgnoreCase("add_scope")){
+        if(datasetTableTask.getType().equalsIgnoreCase("add_scope")){
             dataSetTableService.saveIncrementalConfig(dataSetTaskRequest.getDatasetTableIncrementalConfig());
         }
         // check

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -583,7 +583,7 @@ private void extractData(DatasetTable datasetTable, String extractType) throws E
         if (jobStatus.getStatusDescription().equals("Finished")) {
             return;
         } else {
-            DataEaseException.throwException((jobStatus.getErrorDescription()));
+            DataEaseException.throwException((jobStatus.getLoggingString()));
         }
     }
 

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -24,7 +24,7 @@ public class DorisConstants extends SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
+    public static final String DEFAULT_INT_FORMAT = "BIGINT";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(20,2)";
 

File: backend/src/main/java/io/dataease/provider/doris/DorisConstants.java
Patch:
@@ -24,7 +24,7 @@ public class DorisConstants extends SQLConstants {
 
     public static final String DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%i:%S";
 
-    public static final String DEFAULT_INT_FORMAT = "DECIMAL(20,0)";
+    public static final String DEFAULT_INT_FORMAT = "BIGINT";
 
     public static final String DEFAULT_FLOAT_FORMAT = "DECIMAL(20,2)";
 

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.dto.sqlObj.SQLObj;
 import io.dataease.provider.QueryProvider;
 import io.dataease.provider.SQLConstants;
+import io.dataease.provider.mysql.MySQLConstants;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -114,6 +115,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
                     if (f.getDeType() == 1) {
                         String cast = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                         fieldName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
+                    } else if (f.getDeType() == 2) {
+                        fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -113,6 +113,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
                     if (f.getDeType() == 1) {
                         String cast = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                         fieldName = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);
+                    } else if (f.getDeType() == 2) {
+                        fieldName = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_INT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -125,6 +125,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
                     if (f.getDeType() == 1) {
                         String cast = String.format(OracleConstants.CAST, originField, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                         fieldName = String.format(OracleConstants.FROM_UNIXTIME, cast, OracleConstants.DEFAULT_DATE_FORMAT);
+                    } else if (f.getDeType() == 2) {
+                        fieldName = String.format(OracleConstants.CAST, originField, OracleConstants.DEFAULT_INT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -7,6 +7,7 @@
 import io.dataease.dto.sqlObj.SQLObj;
 import io.dataease.provider.QueryProvider;
 import io.dataease.provider.SQLConstants;
+import io.dataease.provider.mysql.MySQLConstants;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.ObjectUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -114,6 +115,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
                     if (f.getDeType() == 1) {
                         String cast = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT) + "/1000";
                         fieldName = String.format(DorisConstants.FROM_UNIXTIME, cast, DorisConstants.DEFAULT_DATE_FORMAT);
+                    } else if (f.getDeType() == 2) {
+                        fieldName = String.format(DorisConstants.CAST, originField, DorisConstants.DEFAULT_INT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -113,6 +113,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
                     if (f.getDeType() == 1) {
                         String cast = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_INT_FORMAT) + "/1000";
                         fieldName = String.format(MySQLConstants.FROM_UNIXTIME, cast, MySQLConstants.DEFAULT_DATE_FORMAT);
+                    } else if (f.getDeType() == 2) {
+                        fieldName = String.format(MySQLConstants.CAST, originField, MySQLConstants.DEFAULT_INT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/provider/oracle/OracleQueryProvider.java
Patch:
@@ -125,6 +125,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
                     if (f.getDeType() == 1) {
                         String cast = String.format(OracleConstants.CAST, originField, OracleConstants.DEFAULT_INT_FORMAT) + "/1000";
                         fieldName = String.format(OracleConstants.FROM_UNIXTIME, cast, OracleConstants.DEFAULT_DATE_FORMAT);
+                    } else if (f.getDeType() == 2) {
+                        fieldName = String.format(OracleConstants.CAST, originField, OracleConstants.DEFAULT_INT_FORMAT);
                     } else {
                         fieldName = originField;
                     }

File: backend/src/main/java/io/dataease/base/domain/SysMsg.java
Patch:
@@ -9,12 +9,10 @@ public class SysMsg implements Serializable {
 
     private Long userId;
 
-    private Integer type;
+    private Long typeId;
 
     private Boolean status;
 
-    private String router;
-
     private String param;
 
     private Long createTime;

File: backend/src/main/java/io/dataease/controller/message/dto/MsgRequest.java
Patch:
@@ -10,7 +10,7 @@ public class MsgRequest implements Serializable {
 
     private static final long serialVersionUID = 1920091635946508658L;
 
-    private Integer type;
+    private Long type;
 
     private Boolean status;
 

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -112,6 +112,8 @@ private void extractData(DataSetTableRequest datasetTable) throws Exception{
             datasetTableTask.setType("all_scope");
             datasetTableTask.setName(datasetTable.getName() + " 更新设置");
             datasetTableTask.setEnd("0");
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
+            datasetTableTask.setStartTime(System.currentTimeMillis());
             dataSetTaskRequest.setDatasetTableTask(datasetTableTask);
             dataSetTableTaskService.save(dataSetTaskRequest);
         }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -112,6 +112,8 @@ private void extractData(DataSetTableRequest datasetTable) throws Exception{
             datasetTableTask.setType("all_scope");
             datasetTableTask.setName(datasetTable.getName() + " 更新设置");
             datasetTableTask.setEnd("0");
+            datasetTableTask.setStatus(TaskStatus.Underway.name());
+            datasetTableTask.setStartTime(System.currentTimeMillis());
             dataSetTaskRequest.setDatasetTableTask(datasetTableTask);
             dataSetTableTaskService.save(dataSetTaskRequest);
         }

File: backend/src/main/java/io/dataease/base/domain/DatasetTableTaskLog.java
Patch:
@@ -19,6 +19,8 @@ public class DatasetTableTaskLog implements Serializable {
 
     private Long createTime;
 
+    private String triggerType;
+
     private String info;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/dataease/commons/constants/ScheduleType.java
Patch:
@@ -1,5 +1,5 @@
 package io.dataease.commons.constants;
 
 public enum ScheduleType {
-    CRON, SIMPLE, SIMPLE_COMPLETE
+    CRON, SIMPLE
 }

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableTaskLogController.java
Patch:
@@ -5,6 +5,7 @@
 import io.dataease.base.domain.DatasetTableTaskLog;
 import io.dataease.commons.utils.PageUtils;
 import io.dataease.commons.utils.Pager;
+import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.dto.dataset.DataSetTaskLogDTO;
 import io.dataease.service.dataset.DataSetTableTaskLogService;
 import org.springframework.web.bind.annotation.*;
@@ -33,7 +34,7 @@ public void delete(@PathVariable String id) {
     }
 
     @PostMapping("list/{goPage}/{pageSize}")
-    public Pager<List<DataSetTaskLogDTO>> list(@RequestBody DatasetTableTaskLog request, @PathVariable int goPage, @PathVariable int pageSize) {
+    public Pager<List<DataSetTaskLogDTO>> list(@RequestBody BaseGridRequest request, @PathVariable int goPage, @PathVariable int pageSize) {
         Page<Object> page = PageHelper.startPage(goPage, pageSize, true);
         return PageUtils.setPageInfo(page, dataSetTableTaskLogService.list(request));
     }

File: backend/src/main/java/io/dataease/dto/chart/ChartViewDTO.java
Patch:
@@ -19,4 +19,5 @@ public class ChartViewDTO extends ChartViewWithBLOBs {
 
     private Boolean isLeaf;
     private String pid;
+    private String sql;
 }

File: backend/src/main/java/io/dataease/listener/AppStartListener.java
Patch:
@@ -1,7 +1,9 @@
 package io.dataease.listener;
 
 import io.dataease.base.domain.DatasetTableTask;
+import io.dataease.commons.constants.NoticeConstants;
 import io.dataease.commons.constants.ScheduleType;
+import io.dataease.commons.constants.TaskStatus;
 import io.dataease.service.ScheduleService;
 import io.dataease.service.dataset.DataSetTableTaskService;
 import org.apache.commons.lang3.StringUtils;
@@ -40,8 +42,6 @@ public void onApplicationEvent(ApplicationReadyEvent applicationReadyEvent) {
                     } else {
                         scheduleService.addSchedule(task);
                     }
-                } else {
-                    scheduleService.addSchedule(task);
                 }
             } catch (Exception e) {
                 e.printStackTrace();

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -890,7 +890,7 @@ private Map<String, Object> parseExcel(String filename, InputStream inputStream,
                     if (row == null) {
                         throw new RuntimeException(Translator.get("i18n_excel_header_empty"));
                     }
-                    columnNum = row.getPhysicalNumberOfCells();
+                    columnNum = row.getLastCellNum();
                 }
                 String[] r = new String[columnNum];
                 for (int j = 0; j < columnNum; j++) {
@@ -902,6 +902,7 @@ private Map<String, Object> parseExcel(String filename, InputStream inputStream,
                         if (StringUtils.isEmpty(columnName)) {
                             columnName = "NONE_" + String.valueOf(j);
                         }
+
                         tableFiled.setFieldName(columnName);
                         tableFiled.setRemarks(columnName);
                         fields.add(tableFiled);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -890,7 +890,7 @@ private Map<String, Object> parseExcel(String filename, InputStream inputStream,
                     if (row == null) {
                         throw new RuntimeException(Translator.get("i18n_excel_header_empty"));
                     }
-                    columnNum = row.getPhysicalNumberOfCells();
+                    columnNum = row.getLastCellNum();
                 }
                 String[] r = new String[columnNum];
                 for (int j = 0; j < columnNum; j++) {
@@ -902,6 +902,7 @@ private Map<String, Object> parseExcel(String filename, InputStream inputStream,
                         if (StringUtils.isEmpty(columnName)) {
                             columnName = "NONE_" + String.valueOf(j);
                         }
+
                         tableFiled.setFieldName(columnName);
                         tableFiled.setRemarks(columnName);
                         fields.add(tableFiled);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -38,7 +38,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
-        filterChainDefinitionMap.put("/axios.map", ANON);
 
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -38,7 +38,6 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
-        filterChainDefinitionMap.put("/axios.map", ANON);
 
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -38,6 +38,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
+        filterChainDefinitionMap.put("/axios.map", ANON);
 
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -38,6 +38,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         filterChainDefinitionMap.put("/link/**", ANON);
         filterChainDefinitionMap.put("/index.html", ANON);
         filterChainDefinitionMap.put("/link.html", ANON);
+        filterChainDefinitionMap.put("/axios.map", ANON);
 
         //验证链接
         filterChainDefinitionMap.put("/api/link/validate**", ANON);

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -237,7 +237,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(yOrder, ","));
+                    ObjectUtils.isNotEmpty(yOrder) ? StringUtils.join(yOrder, ",") : "null");
             return filterSql;
         }
     }
@@ -318,7 +318,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(order, ","));
+                    ObjectUtils.isNotEmpty(order) ? StringUtils.join(order, ",") : "null");
             return filterSql;
         }
     }

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -245,7 +245,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(yOrder, ","));
+                    ObjectUtils.isNotEmpty(yOrder) ? StringUtils.join(yOrder, ",") : "null");
             return filterSql;
         }
     }
@@ -326,7 +326,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(order, ","));
+                    ObjectUtils.isNotEmpty(order) ? StringUtils.join(order, ",") : "null");
             return filterSql;
         }
     }

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -237,7 +237,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(yOrder, ","));
+                    ObjectUtils.isNotEmpty(yOrder) ? StringUtils.join(yOrder, ",") : "null");
             return filterSql;
         }
     }
@@ -318,7 +318,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(order, ","));
+                    ObjectUtils.isNotEmpty(order) ? StringUtils.join(order, ",") : "null");
             return filterSql;
         }
     }

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -245,7 +245,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(yOrder, ","));
+                    ObjectUtils.isNotEmpty(yOrder) ? StringUtils.join(yOrder, ",") : "null");
             return filterSql;
         }
     }
@@ -326,7 +326,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
             String filterSql = MessageFormat.format("SELECT * FROM {0} WHERE 1=1 {1} ORDER BY {2}",
                     "(" + sql + ") AS tmp",
                     StringUtils.join(resultFilter, " "),
-                    StringUtils.join(order, ","));
+                    ObjectUtils.isNotEmpty(order) ? StringUtils.join(order, ",") : "null");
             return filterSql;
         }
     }

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -33,6 +33,7 @@
 import org.apache.http.HttpResponse;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.poi.hssf.usermodel.HSSFSheet;
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFSheet;
@@ -838,7 +839,7 @@ public boolean isKettleRunning() {
             if (!InetAddress.getByName(carte).isReachable(1000)) {
                 return false;
             }
-            HttpClient httpClient;
+            CloseableHttpClient httpClient;
             HttpGet getMethod = new HttpGet("http://" + carte + ":" + port);
             HttpClientManager.HttpClientBuilderFacade clientBuilder = HttpClientManager.getInstance().createBuilder();
             clientBuilder.setConnectionTimeout(1);

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -30,6 +30,7 @@
 import org.apache.http.HttpResponse;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.CloseableHttpClient;
 import org.apache.poi.hssf.usermodel.HSSFSheet;
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 import org.apache.poi.xssf.usermodel.XSSFSheet;
@@ -824,7 +825,7 @@ public boolean isKettleRunning() {
             if (!InetAddress.getByName(carte).isReachable(1000)) {
                 return false;
             }
-            HttpClient httpClient;
+            CloseableHttpClient httpClient;
             HttpGet getMethod = new HttpGet("http://" + carte + ":" + port);
             HttpClientManager.HttpClientBuilderFacade clientBuilder = HttpClientManager.getInstance().createBuilder();
             clientBuilder.setConnectionTimeout(1);

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -128,7 +128,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
         String[] field = yAxis.stream().map(y -> {
             StringBuilder f = new StringBuilder();
             if (StringUtils.equalsIgnoreCase(y.getOriginName(), "*")) {
-                f.append(y.getSummary()).append("(`").append(y.getOriginName()).append("`)");
+                f.append(y.getSummary()).append("(").append(y.getOriginName()).append(")");
             } else {
                 if (StringUtils.equalsIgnoreCase(y.getSummary(), "avg") || StringUtils.containsIgnoreCase(y.getSummary(), "pop")) {
                     f.append("CAST(")
@@ -266,7 +266,7 @@ public String getSQLSummary(String table, List<ChartViewFieldDTO> yAxis, List<Ch
         String[] field = yAxis.stream().map(y -> {
             StringBuilder f = new StringBuilder();
             if (StringUtils.equalsIgnoreCase(y.getOriginName(), "*")) {
-                f.append(y.getSummary()).append("(`").append(y.getOriginName()).append("`)");
+                f.append(y.getSummary()).append("(").append(y.getOriginName()).append(")");
             } else {
                 if (StringUtils.equalsIgnoreCase(y.getSummary(), "avg") || StringUtils.containsIgnoreCase(y.getSummary(), "pop")) {
                     f.append("CAST(")

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -24,8 +24,7 @@
 @Service
 public class PanelLinkService {
 
-    @Value("${public-link-url:http://localhost:9528/link.html?link=}")
-    private String baseUrl;
+    private static final String baseUrl = "/link.html?link=";
 
     @Value("${public-link-salt:DataEaseLinkSalt}")
     private String salt;

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -30,6 +30,7 @@
 
 import javax.annotation.Resource;
 import java.util.List;
+import java.util.Optional;
 import java.util.stream.Collectors;
 
 @Service
@@ -117,6 +118,7 @@ public int update(SysUserCreateRequest request) {
         user.setUpdateTime(now);
         deleteUserRoles(user.getUserId());//先删除用户角色关联
         saveUserRoles(user.getUserId(), request.getRoleIds());//再插入角色关联
+        if (ObjectUtils.isEmpty(user.getDeptId())) user.setDeptId(0L);
         return sysUserMapper.updateByPrimaryKeySelective(user);
     }
 

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -108,7 +108,7 @@ public PanelGroup saveOrUpdate(PanelGroupRequest request) {
         authRequest.setId(panelId);
         authRequest.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
         List<PanelGroupDTO> panelGroupDTOList = extPanelGroupMapper.panelGroupList(authRequest);
-        if(CollectionUtils.isNotEmpty(panelGroupDTOList)){
+        if(!CollectionUtils.isNotEmpty(panelGroupDTOList)){
             DataEaseException.throwException("未查询到用户对应的资源权限，请尝试刷新重新保存");
         }
 

File: backend/src/main/java/io/dataease/service/panel/PanelGroupService.java
Patch:
@@ -92,6 +92,7 @@ public PanelGroup saveOrUpdate(PanelGroupRequest request) {
             newDefaultPanel.setPid(PanelConstants.PANEL_GATHER_DEFAULT_PANEL);
             newDefaultPanel.setLevel(0);
             newDefaultPanel.setSource(request.getId());
+            newDefaultPanel.setCreateBy(AuthUtils.getUser().getUsername());
             checkPanelName(newDefaultPanel.getName(), newDefaultPanel.getPid(), PanelConstants.OPT_TYPE_INSERT, newDefaultPanel.getId());
             panelGroupMapper.insertSelective(newDefaultPanel);
         } else {

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -321,10 +321,10 @@ private String createDorisTablColumnSql(List<DatasetTableField> datasetTableFiel
             Column_Fields = Column_Fields + datasetTableField.getDataeaseName() + "` ";
             switch (datasetTableField.getDeExtractType()) {
                 case 0:
-                    if (datasetTableField.getSize() > 65533) {
+                    if (datasetTableField.getSize() > 65533 || datasetTableField.getSize() * 3 > 65533) {
                         Column_Fields = Column_Fields + "varchar(65533)" + ",`";
                     } else {
-                        Column_Fields = Column_Fields + "varchar(lenth)".replace("lenth", String.valueOf(datasetTableField.getSize())) + ",`";
+                        Column_Fields = Column_Fields + "varchar(lenth)".replace("lenth", String.valueOf(datasetTableField.getSize()*3)) + ",`";
                     }
                     break;
                 case 1:

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtPluginSysMenuMapper.java
Patch:
@@ -11,5 +11,5 @@ public interface ExtPluginSysMenuMapper {
 
     void savePluginMenu(@Param("menuList") List<PluginSysMenu> menuList);
 
-    void deletePluginMenu();
+    int deletePluginMenu();
 }

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtSysAuthMapper.java
Patch:
@@ -16,5 +16,8 @@ String findAuthId(@Param("authSource") String authSource,
                       @Param("authTarget") String authTarget,
                       @Param("authTargetType") String authTargetType);
 
+    Boolean checkTreeNoManageCount(@Param("userId") Long userId , @Param("modelType") String modelType, @Param("nodeId") String nodeId);
+
+
 
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -90,11 +90,9 @@ public List<ChartViewDTO> listAndGroup(ChartViewRequest chartViewRequest) {
         List<ChartGroupDTO> groups = extChartGroupMapper.search(chartGroupRequest);
         List<ChartViewDTO> group = groups.stream().map(ele -> {
             ChartViewDTO dto = new ChartViewDTO();
-            dto.setId(ele.getId());
-            dto.setName(ele.getName());
+            BeanUtils.copyBean(dto, ele);
             dto.setIsLeaf(false);
             dto.setType("group");
-            dto.setPid(ele.getPid());
             return dto;
         }).collect(Collectors.toList());
         group.addAll(charts);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -201,11 +201,9 @@ public List<DataSetTableDTO> listAndGroup(DataSetTableRequest dataSetTableReques
         List<DataSetGroupDTO> groups = extDataSetGroupMapper.search(datasetGroup);
         List<DataSetTableDTO> group = groups.stream().map(ele -> {
             DataSetTableDTO dto = new DataSetTableDTO();
-            dto.setId(ele.getId());
-            dto.setName(ele.getName());
+            BeanUtils.copyBean(dto, ele);
             dto.setIsLeaf(false);
             dto.setType("group");
-            dto.setPid(ele.getPid());
             return dto;
         }).collect(Collectors.toList());
         group.addAll(ds);

File: backend/src/main/java/io/dataease/service/chart/ChartGroupService.java
Patch:
@@ -82,8 +82,7 @@ public ChartGroup getScene(String id) {
 
     public List<ChartGroupDTO> tree(ChartGroupRequest chartGroup) {
         chartGroup.setLevel(null);
-        chartGroup.setPid("0");
-        chartGroup.setType("group");
+        chartGroup.setPid(null);
         chartGroup.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
         List<ChartGroupDTO> treeInfo = extChartGroupMapper.search(chartGroup);
         List<ChartGroupDTO> result = TreeUtils.mergeTree(treeInfo);
@@ -92,7 +91,8 @@ public List<ChartGroupDTO> tree(ChartGroupRequest chartGroup) {
 
     public List<ChartGroupDTO> treeNode(ChartGroupRequest chartGroup) {
         chartGroup.setLevel(null);
-        chartGroup.setPid(null);
+        chartGroup.setPid("0");
+        chartGroup.setType("group");
         chartGroup.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
         List<ChartGroupDTO> treeInfo = extChartGroupMapper.search(chartGroup);
         List<ChartGroupDTO> result = TreeUtils.mergeTree(treeInfo);

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -496,7 +496,7 @@ private void generateJobFile(String extractType, DatasetTable datasetTable, Stri
                 break;
             case "incremental_add":
                 transName = "trans_add_" + DorisTableUtils.dorisName(datasetTable.getId());
-                outFile = DorisTableUtils.dorisName(datasetTable.getId());
+                outFile = DorisTableUtils.dorisAddName(datasetTable.getId());
                 jobName = "job_add_" + DorisTableUtils.dorisName(datasetTable.getId());
                 script = String.format(shellScript, dorisConfigration.getUsername(), dorisConfigration.getPassword(), String.valueOf(System.currentTimeMillis()), separator, columns, "APPEND", root_path + outFile + "." + extention, dorisConfigration.getHost(), dorisConfigration.getHttpPort(), dorisConfigration.getDataBase(), DorisTableUtils.dorisName(datasetTable.getId()), root_path + outFile + "." + extention);
                 break;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -703,7 +703,7 @@ private void checkColumes(DatasetTableIncrementalConfig datasetTableIncrementalC
         if (StringUtils.isNotEmpty(datasetTableIncrementalConfig.getIncrementalAdd()) && StringUtils.isNotEmpty(datasetTableIncrementalConfig.getIncrementalAdd().replace(" ", ""))) {// 增量添加
             String sql = datasetTableIncrementalConfig.getIncrementalAdd().replace(lastUpdateTime, Long.valueOf(System.currentTimeMillis()).toString())
                     .replace(currentUpdateTime, Long.valueOf(System.currentTimeMillis()).toString());
-            datasourceRequest.setQuery(sql);
+            datasourceRequest.setQuery(extractDataService.sqlFix(sql));
             List<String> sqlFileds = new ArrayList<>();
             datasourceProvider.fetchResultField(datasourceRequest).stream().map(TableFiled::getFieldName).forEach(filed -> {
                 sqlFileds.add(filed);
@@ -716,7 +716,7 @@ private void checkColumes(DatasetTableIncrementalConfig datasetTableIncrementalC
         if (StringUtils.isNotEmpty(datasetTableIncrementalConfig.getIncrementalDelete()) && StringUtils.isNotEmpty(datasetTableIncrementalConfig.getIncrementalDelete().replace(" ", ""))) {// 增量删除
             String sql = datasetTableIncrementalConfig.getIncrementalDelete().replace(lastUpdateTime, Long.valueOf(System.currentTimeMillis()).toString())
                     .replace(currentUpdateTime, Long.valueOf(System.currentTimeMillis()).toString());
-            datasourceRequest.setQuery(sql);
+            datasourceRequest.setQuery(extractDataService.sqlFix(sql));
             List<String> sqlFileds = new ArrayList<>();
             datasourceProvider.fetchResultField(datasourceRequest).stream().map(TableFiled::getFieldName).forEach(filed -> {
                 sqlFileds.add(filed);

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -492,7 +492,7 @@ private void generateJobFile(String extractType, DatasetTable datasetTable, Stri
                 transName = "trans_" + DorisTableUtils.dorisName(datasetTable.getId());
                 outFile = DorisTableUtils.dorisTmpName(DorisTableUtils.dorisName(datasetTable.getId()));
                 jobName = "job_" + DorisTableUtils.dorisName(datasetTable.getId());
-                script = String.format(shellScript, dorisConfigration.getUsername(), dorisConfigration.getPassword(), String.valueOf(System.currentTimeMillis()), separator, columns, "APPEND", root_path + outFile + "." + extention, dorisConfigration.getHost(), dorisConfigration.getHttpPort(), dorisConfigration.getDataBase(), DorisTableUtils.dorisName(datasetTable.getId()), root_path + outFile + "." + extention);
+                script = String.format(shellScript, dorisConfigration.getUsername(), dorisConfigration.getPassword(), String.valueOf(System.currentTimeMillis()), separator, columns, "APPEND", root_path + outFile + "." + extention, dorisConfigration.getHost(), dorisConfigration.getHttpPort(), dorisConfigration.getDataBase(), DorisTableUtils.dorisTmpName(DorisTableUtils.dorisName(datasetTable.getId())), root_path + outFile + "." + extention);
                 break;
             case "incremental_add":
                 transName = "trans_add_" + DorisTableUtils.dorisName(datasetTable.getId());

File: backend/src/main/java/io/dataease/base/mapper/ext/query/GridExample.java
Patch:
@@ -136,7 +136,7 @@ public Criteria addCondtion(ConditionEntity conditionEntity){
                     addCriterion(field+" like ", "%"+value+"%", field);
                     break;
                 case "not like":
-                    addCriterion(field+" not like ", value, field);
+                    addCriterion(field+" not like ", "%"+value+"%", field);
                     break;
                 case "in":
                     List<Object> invalues = (List<Object>)value;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -567,7 +567,7 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
             List<DataTableInfoCustomUnion> list = dataTableInfoDTO.getList();
             List<DatasetTableField> fieldList = new ArrayList<>();
             list.forEach(ele -> {
-                List<DatasetTableField> listByIds = dataSetTableFieldsService.getListByIds(ele.getCheckedFields());
+                List<DatasetTableField> listByIds = dataSetTableFieldsService.getListByIdsEach(ele.getCheckedFields());
                 listByIds.forEach(f -> {
                     f.setDataeaseName(DorisTableUtils.dorisFieldName(ele.getTableId() + "_" + f.getDataeaseName()));
                 });

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -180,6 +180,9 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             }
             data = datasourceProvider.getData(datasourceRequest);
         }
+        if (StringUtils.containsIgnoreCase(view.getType(), "pie") && data.size() > 1000) {
+            data = data.subList(0, 1000);
+        }
 
         // 图表组件可再扩展
         List<String> x = new ArrayList<>();

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -68,7 +68,7 @@ public String createQueryCountSQLAsTmp(String sql) {
 
     @Override
     public String createSQLPreview(String sql, String orderBy) {
-        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY " + orderBy + " LIMIT 0,1000";
+        return "SELECT * FROM (" + sqlFix(sql) + ") AS tmp ORDER BY null " + " LIMIT 0,1000";
     }
 
     @Override
@@ -102,7 +102,8 @@ public String createQuerySQL(String table, List<DatasetTableField> fields) {
             return stringBuilder.toString();
         }).toArray(String[]::new);
 
-        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY " + (fields.size() > 0 ? fields.get(0).getOriginName() : "null"), StringUtils.join(array, ","), table);
+//        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY " + (fields.size() > 0 ? fields.get(0).getOriginName() : "null"), StringUtils.join(array, ","), table);
+        return MessageFormat.format("SELECT {0} FROM {1} ORDER BY null", StringUtils.join(array, ","), table);
     }
 
     @Override

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -477,7 +477,7 @@ private String getCustomSQL(DataTableInfoDTO dataTableInfoDTO, List<DataSetTable
         Map<String, String[]> customInfo = new TreeMap<>();
         dataTableInfoDTO.getList().forEach(ele -> {
             String table = DorisTableUtils.dorisName(ele.getTableId());
-            List<DatasetTableField> fields = dataSetTableFieldsService.getListByIds(ele.getCheckedFields());
+            List<DatasetTableField> fields = dataSetTableFieldsService.getListByIdsEach(ele.getCheckedFields());
             String[] array = fields.stream().map(f -> table + "." + f.getDataeaseName() + " AS " + DorisTableUtils.dorisFieldName(ele.getTableId() + "_" + f.getDataeaseName())).toArray(String[]::new);
             customInfo.put(table, array);
         });

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -100,7 +100,8 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
         customFilter.forEach(ele -> ele.setField(dataSetTableFieldsService.get(ele.getFieldId())));
 
         if (StringUtils.equalsIgnoreCase("text", view.getType()) || StringUtils.equalsIgnoreCase("gauge", view.getType())) {
-            if (CollectionUtils.isEmpty(xAxis) && CollectionUtils.isEmpty(yAxis)) {
+            xAxis = new ArrayList<>();
+            if (CollectionUtils.isEmpty(yAxis)) {
                 ChartViewDTO dto = new ChartViewDTO();
                 BeanUtils.copyBean(dto, view);
                 return dto;

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -226,13 +226,15 @@ public void extractData(String datasetTableId, String taskId, String type, JobEx
                     }else {
                         DatasetTableIncrementalConfig datasetTableIncrementalConfig = dataSetTableService.incrementalConfig(datasetTableId);
                         if (datasetTableIncrementalConfig == null || StringUtils.isEmpty(datasetTableIncrementalConfig.getTableId())) {
+                            updateTableStatus(datasetTableId, datasetTable, JobStatus.Completed);
                             return;
                         }
                         DatasetTableTaskLog request = new DatasetTableTaskLog();
                         request.setTableId(datasetTableId);
                         request.setStatus(JobStatus.Completed.name());
                         List<DatasetTableTaskLog> datasetTableTaskLogs = dataSetTableTaskLogService.select(request);
                         if (CollectionUtils.isEmpty(datasetTableTaskLogs)) {
+                            updateTableStatus(datasetTableId, datasetTable, JobStatus.Completed);
                             return;
                         }
 

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -192,9 +192,9 @@ public void extractData(String datasetTableId, String taskId, String type, JobEx
                     createDorisTable(DorisTableUtils.dorisTmpName(DorisTableUtils.dorisName(datasetTableId)), dorisTablColumnSql);
                     generateTransFile("all_scope", datasetTable, datasource, datasetTableFields, null);
                     if(datasetTable.getType().equalsIgnoreCase("sql")){
-                        generateJobFile("all_scope", datasetTable, String.join(",", datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList())));
-                    }else {
                         generateJobFile("all_scope", datasetTable, fetchSqlField(new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class).getSql(), datasource));
+                    }else {
+                        generateJobFile("all_scope", datasetTable, String.join(",", datasetTableFields.stream().map(DatasetTableField::getDataeaseName).collect(Collectors.toList())));
                     }
                     extractData(datasetTable, "all_scope");
                     replaceTable(DorisTableUtils.dorisName(datasetTableId));

File: backend/src/main/java/io/dataease/provider/doris/DorisQueryProvider.java
Patch:
@@ -295,7 +295,8 @@ public String transCustomFilter(List<ChartCustomFilterDTO> requestList) {
             filter.append(" ")
                     .append(transMysqlFilterTerm(request.getTerm()))
                     .append(" ");
-            if (StringUtils.containsIgnoreCase(request.getTerm(), "in")) {
+            if (StringUtils.containsIgnoreCase(request.getTerm(), "null")) {
+            } else if (StringUtils.containsIgnoreCase(request.getTerm(), "in")) {
                 filter.append("('").append(StringUtils.join(value, "','")).append("')");
             } else if (StringUtils.containsIgnoreCase(request.getTerm(), "like")) {
                 filter.append("'%").append(value).append("%'");

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -302,7 +302,8 @@ public String transCustomFilter(List<ChartCustomFilterDTO> requestList) {
             filter.append(" ")
                     .append(transMysqlFilterTerm(request.getTerm()))
                     .append(" ");
-            if (StringUtils.containsIgnoreCase(request.getTerm(), "in")) {
+            if (StringUtils.containsIgnoreCase(request.getTerm(), "null")) {
+            } else if (StringUtils.containsIgnoreCase(request.getTerm(), "in")) {
                 filter.append("('").append(StringUtils.join(value, "','")).append("')");
             } else if (StringUtils.containsIgnoreCase(request.getTerm(), "like")) {
                 filter.append("'%").append(value).append("%'");

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -697,7 +697,7 @@ private StepMeta excelInputStep(String filePath, List<DatasetTableField> dataset
             ExcelInputField field = new ExcelInputField();
             field.setName(datasetTableFields.get(i).getOriginName());
             if(datasetTableFields.get(i).getDeExtractType() == 1){
-                field.setType("Date");
+                field.setType("String");
                 field.setFormat("yyyy-MM-dd HH:mm:ss");
             }else {
                 field.setType("String");

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -692,6 +692,7 @@ private StepMeta udjc(List<DatasetTableField> datasetTableFields, boolean isExce
             tmp_code = tmp_code.replace("handleExcelWraps", handleExcelWraps);
         }else {
             tmp_code = tmp_code.replace("handleExcelIntColumn", "");
+            tmp_code = tmp_code.replace("handleExcelWraps", "");
         }
         UserDefinedJavaClassDef userDefinedJavaClassDef = new UserDefinedJavaClassDef(UserDefinedJavaClassDef.ClassType.TRANSFORM_CLASS, "Processor", tmp_code);
 

File: backend/src/main/java/io/dataease/auth/api/dto/DynamicMenuDto.java
Patch:
@@ -29,6 +29,8 @@ public class DynamicMenuDto implements Serializable {
 
     private Integer type;
 
+    private Integer menuSort;
+
     private Boolean isPlugin;
 
     private Boolean noLayout;

File: backend/src/main/java/io/dataease/auth/service/impl/AuthUserServiceImpl.java
Patch:
@@ -8,6 +8,7 @@
 import io.dataease.auth.service.AuthUserService;
 import io.dataease.base.mapper.ext.ExtPluginSysMenuMapper;
 import io.dataease.commons.constants.AuthConstants;
+import io.dataease.commons.utils.LogUtil;
 import io.dataease.plugins.common.dto.PluginSysMenu;
 import io.dataease.plugins.util.PluginUtils;
 import org.apache.commons.collections4.CollectionUtils;
@@ -17,7 +18,6 @@
 import org.springframework.cache.annotation.Caching;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
-
 import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
@@ -99,7 +99,7 @@ public List<CurrentRoleDto> roleInfos(Long userId) {
     })
     @Override
     public void clearCache(Long userId) {
-
+        LogUtil.info("正在清除用户缓存【{}】",userId);
     }
 
     @Transactional

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtPanelViewMapper.java
Patch:
@@ -1,12 +1,13 @@
 package io.dataease.base.mapper.ext;
 
+import io.dataease.dto.panel.PanelViewDto;
 import io.dataease.dto.panel.po.PanelViewPo;
 
 import java.util.List;
 
 public interface ExtPanelViewMapper {
 
-    List<PanelViewPo> groups(String userId);
+    List<PanelViewDto> groups(String userId);
 
-    List<PanelViewPo> views(String userId);
+    List<PanelViewDto> views(String userId);
 }

File: backend/src/main/java/io/dataease/dto/panel/PanelViewDto.java
Patch:
@@ -1,13 +1,14 @@
 package io.dataease.dto.panel;
 
+import io.dataease.commons.model.ITreeBase;
 import lombok.Data;
 
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Optional;
 
 @Data
-public class PanelViewDto {
+public class PanelViewDto implements ITreeBase<PanelViewDto> {
 
     private String id;
 

File: backend/src/main/java/io/dataease/dto/panel/po/PanelViewPo.java
Patch:
@@ -1,9 +1,10 @@
 package io.dataease.dto.panel.po;
 
+import io.dataease.commons.model.ITreeBase;
 import lombok.Data;
 
 @Data
-public class PanelViewPo {
+public class PanelViewPo{
 
     private String id;
 

File: backend/src/main/java/io/dataease/service/panel/PanelViewService.java
Patch:
@@ -26,11 +26,11 @@ public class PanelViewService {
 
     private final static String SCENE_TYPE = "scene";
 
-    public List<PanelViewPo> groups(){
+    public List<PanelViewDto> groups(){
         return extPanelViewMapper.groups(String.valueOf(AuthUtils.getUser().getUserId()));
     }
 
-    public List<PanelViewPo> views(){
+    public List<PanelViewDto> views(){
         return extPanelViewMapper.views(String.valueOf(AuthUtils.getUser().getUserId()));
     }
 

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -14,7 +14,7 @@ public String index() {
         return "index.html";
     }
 
-    @GetMapping(value = "/llogin")
+    @GetMapping(value = "/login")
     public String login() {
         return "index.html";
     }

File: backend/src/main/java/io/dataease/auth/api/AuthApi.java
Patch:
@@ -31,7 +31,4 @@ public interface AuthApi {
     @PostMapping("/validateName")
     Boolean validateName(Map<String, String> nameDto);
 
-
-    @GetMapping("/test")
-    String test();
 }

File: backend/src/main/java/io/dataease/auth/config/F2CRealm.java
Patch:
@@ -19,7 +19,6 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Component;
-
 import java.util.List;
 import java.util.Set;
 import java.util.stream.Collectors;

File: backend/src/main/java/io/dataease/auth/entity/TokenInfo.java
Patch:
@@ -13,8 +13,6 @@ public class TokenInfo implements Serializable {
 
     private Long userId;
 
-    private Long lastLoginTime;
-
     public String format(){
         return username + "," +userId;
     }

File: backend/src/main/java/io/dataease/controller/IndexController.java
Patch:
@@ -14,7 +14,7 @@ public String index() {
         return "index.html";
     }
 
-    @GetMapping(value = "/login")
+    @GetMapping(value = "/llogin")
     public String login() {
         return "index.html";
     }

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.auth.service.AuthUserService;
 import io.dataease.auth.util.JWTUtils;
 import io.dataease.commons.utils.CommonBeanFactory;
+import io.dataease.commons.utils.ServletUtils;
 import io.dataease.i18n.Translator;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authc.AuthenticationException;
@@ -111,7 +112,7 @@ private String refreshToken(ServletRequest request, ServletResponse response) th
         // JWTUtils.removeTokenExpire(token);
         String newToken = JWTUtils.sign(tokenInfo, password);
         // 记录新token操作时间
-         JWTUtils.addTokenExpire(newToken);
+        // JWTUtils.addTokenExpire(newToken);
 
         JWTToken jwtToken = new JWTToken(newToken);
         this.getSubject(request, response).login(jwtToken);

File: backend/src/main/java/io/dataease/plugins/server/XAuthServer.java
Patch:
@@ -8,6 +8,7 @@
 import io.dataease.plugins.xpack.auth.dto.request.XpackBaseTreeRequest;
 import io.dataease.plugins.xpack.auth.dto.request.XpackSysAuthRequest;
 import io.dataease.plugins.xpack.auth.dto.response.XpackSysAuthDetail;
+import io.dataease.plugins.xpack.auth.dto.response.XpackSysAuthDetailDTO;
 import io.dataease.plugins.xpack.auth.dto.response.XpackVAuthModelDTO;
 import org.springframework.web.bind.annotation.*;
 import io.dataease.plugins.xpack.auth.service.AuthXpackService;
@@ -27,7 +28,7 @@ public List<XpackVAuthModelDTO> authModels(@RequestBody XpackBaseTreeRequest req
     }
 
     @PostMapping("/authDetails")
-    public Map<String,List<XpackSysAuthDetail>> authDetails(@RequestBody XpackSysAuthRequest request){
+    public Map<String,List<XpackSysAuthDetailDTO>> authDetails(@RequestBody XpackSysAuthRequest request){
         AuthXpackService sysAuthService = SpringContextUtil.getBean(AuthXpackService.class);
         return sysAuthService.searchAuthDetails(request);
     }

File: backend/src/main/java/io/dataease/plugins/server/XAuthServer.java
Patch:
@@ -8,6 +8,7 @@
 import io.dataease.plugins.xpack.auth.dto.request.XpackBaseTreeRequest;
 import io.dataease.plugins.xpack.auth.dto.request.XpackSysAuthRequest;
 import io.dataease.plugins.xpack.auth.dto.response.XpackSysAuthDetail;
+import io.dataease.plugins.xpack.auth.dto.response.XpackSysAuthDetailDTO;
 import io.dataease.plugins.xpack.auth.dto.response.XpackVAuthModelDTO;
 import org.springframework.web.bind.annotation.*;
 import io.dataease.plugins.xpack.auth.service.AuthXpackService;
@@ -27,7 +28,7 @@ public List<XpackVAuthModelDTO> authModels(@RequestBody XpackBaseTreeRequest req
     }
 
     @PostMapping("/authDetails")
-    public Map<String,List<XpackSysAuthDetail>> authDetails(@RequestBody XpackSysAuthRequest request){
+    public Map<String,List<XpackSysAuthDetailDTO>> authDetails(@RequestBody XpackSysAuthRequest request){
         AuthXpackService sysAuthService = SpringContextUtil.getBean(AuthXpackService.class);
         return sysAuthService.searchAuthDetails(request);
     }

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -111,7 +111,7 @@ private String refreshToken(ServletRequest request, ServletResponse response) th
         // JWTUtils.removeTokenExpire(token);
         String newToken = JWTUtils.sign(tokenInfo, password);
         // 记录新token操作时间
-        // JWTUtils.addTokenExpire(newToken);
+         JWTUtils.addTokenExpire(newToken);
 
         JWTToken jwtToken = new JWTToken(newToken);
         this.getSubject(request, response).login(jwtToken);

File: backend/src/main/java/io/dataease/auth/util/JWTUtils.java
Patch:
@@ -158,10 +158,12 @@ public static Long tokenLastOperateTime(String token){
         CacheManager cacheManager = CommonBeanFactory.getBean(CacheManager.class);
         Cache tokens_expire = cacheManager.getCache("tokens_expire");
         Long expTime = tokens_expire.get(token, Long.class);
+        // System.out.println("get-------"+token+"  :"+expTime);
         return expTime;
     }
 
     public static void removeTokenExpire(String token){
+        // System.out.println("remove----"+token);
         CacheManager cacheManager = CommonBeanFactory.getBean(CacheManager.class);
         Cache tokens_expire = cacheManager.getCache("tokens_expire");
         tokens_expire.evict(token);
@@ -171,6 +173,7 @@ public static void addTokenExpire(String token){
         CacheManager cacheManager = CommonBeanFactory.getBean(CacheManager.class);
         Cache tokens_expire = cacheManager.getCache("tokens_expire");
         long now = System.currentTimeMillis();
+        // System.out.println("add-------"+token+"  :"+now);
         tokens_expire.put(token, now);
     }
 

File: backend/src/main/java/io/dataease/auth/filter/JWTFilter.java
Patch:
@@ -6,7 +6,6 @@
 import io.dataease.auth.service.AuthUserService;
 import io.dataease.auth.util.JWTUtils;
 import io.dataease.commons.utils.CommonBeanFactory;
-import io.dataease.commons.utils.ServletUtils;
 import io.dataease.i18n.Translator;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.shiro.authc.AuthenticationException;

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtPanelShareMapper.java
Patch:
@@ -7,12 +7,13 @@
 import org.apache.ibatis.annotations.Param;
 
 import java.util.List;
+import java.util.Map;
 
 public interface ExtPanelShareMapper {
 
     int batchInsert(@Param("shares") List<PanelShare> shares);
 
-    List<PanelSharePo> query(GridExample example);
+    List<PanelSharePo> query(Map<String, Object> param);
 
     List<PanelShare> queryWithResource(GridExample example);
 }

File: backend/src/main/java/io/dataease/controller/request/panel/PanelTemplateRequest.java
Patch:
@@ -12,6 +12,8 @@
 public class PanelTemplateRequest extends PanelTemplateWithBLOBs {
     private String sort;
 
+    private String withBlobs="Y";
+
     private String optType;
 
     private Boolean withChildren = false;
@@ -21,5 +23,6 @@ public PanelTemplateRequest() {
 
     public PanelTemplateRequest(String pid) {
         super.setPid(pid);
+        withBlobs="N";
     }
 }

File: backend/src/main/java/io/dataease/service/panel/PanelTemplateService.java
Patch:
@@ -39,6 +39,7 @@ public class PanelTemplateService {
     private ExtPanelTemplateMapper extPanelTemplateMapper;
 
     public List<PanelTemplateDTO> templateList(PanelTemplateRequest panelTemplateRequest) {
+        panelTemplateRequest.setWithBlobs("N");
         List<PanelTemplateDTO> panelTemplateList = extPanelTemplateMapper.panelTemplateList(panelTemplateRequest);
         if(panelTemplateRequest.getWithChildren()){
             getTreeChildren(panelTemplateList);

File: backend/src/main/java/io/dataease/service/ScheduleService.java
Patch:
@@ -34,9 +34,9 @@ public void addSchedule(DatasetTableTask datasetTableTask) throws Exception {
                 endTime = null;
             } else {
                 endTime = new Date(datasetTableTask.getEndTime());
-                if (endTime.before(new Date())) {
-                    return;
-                }
+//                if (endTime.before(new Date())) {
+//                    return;
+//                }
             }
 
             scheduleManager.addOrUpdateCronJob(new JobKey(datasetTableTask.getId(), datasetTableTask.getTableId()),

File: backend/src/main/java/io/dataease/provider/DDLProvider.java
Patch:
@@ -7,5 +7,7 @@
 public abstract class DDLProvider {
     public abstract String createView(String name, String viewSQL);
 
-    public abstract String dropTableOrView(String name);
+    public abstract String dropTable(String name);
+
+    public abstract String dropView(String name);
 }

File: backend/src/main/java/io/dataease/datasource/provider/JdbcProvider.java
Patch:
@@ -186,7 +186,7 @@ public List<TableFiled> getTableFileds(DatasourceRequest datasourceRequest) thro
         try {
             connection = getConnectionFromPool(datasourceRequest);
             DatabaseMetaData databaseMetaData = connection.getMetaData();
-            ResultSet resultSet = databaseMetaData.getColumns(null, "%", datasourceRequest.getTable().toUpperCase(), "%");
+            ResultSet resultSet = databaseMetaData.getColumns(null, "%", datasourceRequest.getTable(), "%");
             while (resultSet.next()) {
                 String tableName = resultSet.getString("TABLE_NAME");
                 String database = resultSet.getString("TABLE_CAT");

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -208,8 +208,8 @@ public void extractData(String datasetTableId, String taskId, String type, JobEx
             LogUtil.error("Can not find DatasetTable: " + datasetTableId);
         }
         DatasetTableTask datasetTableTask = datasetTableTaskMapper.selectByPrimaryKey(taskId);
-        boolean isSIMPLEJob = (datasetTableTask != null && datasetTableTask.getRate().equalsIgnoreCase(ScheduleType.SIMPLE.toString()));
-        if(updateSyncStatus(datasetTable) && !isSIMPLEJob){
+        boolean isCronJob = (datasetTableTask != null && datasetTableTask.getRate().equalsIgnoreCase(ScheduleType.CRON.toString()));
+        if(updateSyncStatus(datasetTable) && isCronJob){
             LogUtil.info("Skip synchronization task for table : " + datasetTableId);
             return;
         }

File: backend/src/main/java/io/dataease/service/panel/PanelLinkService.java
Patch:
@@ -119,7 +119,7 @@ private GenerateDto convertDto(PanelLink linl){
     public Boolean validateHeads(PanelLink panelLink) throws Exception{
         HttpServletRequest request = ServletUtils.request();
         String token = request.getHeader("LINK-PWD-TOKEN");
-        if (StringUtils.isEmpty(token)) return false;
+        if (StringUtils.isEmpty(token) || StringUtils.equals("undefined", token) || StringUtils.equals("null", token)) return false;
         boolean verify = JWTUtils.verifyLink(token, panelLink.getResourceId(), decryptParam(panelLink.getPwd()));
         return verify;
     }

File: backend/src/main/java/io/dataease/datasource/provider/JdbcProvider.java
Patch:
@@ -232,7 +232,7 @@ public void test(DatasourceRequest datasourceRequest) throws Exception {
         } catch (Exception e) {
             throw new Exception("ERROR: " + e.getMessage(), e);
         } finally {
-            con.close();
+            if(con != null){con.close();}
         }
     }
 

File: backend/src/main/java/io/dataease/auth/api/dto/DynamicMenuDto.java
Patch:
@@ -29,6 +29,8 @@ public class DynamicMenuDto implements Serializable {
 
     private Integer type;
 
+    private Boolean isPlugin;
+
     private List<DynamicMenuDto> children;
 
 }

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -47,7 +47,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
 
 
         filterChainDefinitionMap.put("/system/ui/**", ANON);
-        filterChainDefinitionMap.put("/PluginDemo.js", ANON);
+        filterChainDefinitionMap.put("/SystemParam.js", ANON);
         filterChainDefinitionMap.put("/DeXPack.js", ANON);
 
         filterChainDefinitionMap.put("/api/auth/test", ANON);

File: backend/src/main/java/io/dataease/base/domain/MyPlugin.java
Patch:
@@ -21,6 +21,8 @@ public class MyPlugin implements Serializable {
 
     private String creator;
 
+    private Boolean loadMybatis;
+
     private Long releaseTime;
 
     private Long installTime;

File: backend/src/main/java/io/dataease/base/mapper/ext/AuthMapper.java
Patch:
@@ -16,6 +16,8 @@ public interface AuthMapper {
 
     List<String> permissions(@Param("userId") Long userId);
 
+    List<Long> userMenuIds(@Param("userId") Long userId);
+
 
     SysUserEntity findUser(@Param("userId") Long userId);
 

File: backend/src/main/java/io/dataease/config/MybatisConfig.java
Patch:
@@ -17,7 +17,7 @@
 import java.util.Properties;
 
 @Configuration
-@MapperScan(basePackages = {"io.dataease.base.mapper", "io.dataease.xpack.mapper"}, sqlSessionFactoryRef = "sqlSessionFactory")
+@MapperScan(basePackages = {"io.dataease.base.mapper", "io.dataease.plugins"}, sqlSessionFactoryRef = "sqlSessionFactory")
 @EnableTransactionManagement
 public class MybatisConfig {
 

File: backend/src/main/java/io/dataease/service/FileService.java
Patch:
@@ -66,9 +66,9 @@ public void deleteFileByIds(List<String> ids) {
         example2.createCriteria().andFileIdIn(ids);
         fileContentMapper.deleteByExample(example2);
 
-        LoadTestFileExample example3 = new LoadTestFileExample();
+       /* LoadTestFileExample example3 = new LoadTestFileExample();
         example3.createCriteria().andFileIdIn(ids);
-        loadTestFileMapper.deleteByExample(example3);
+        loadTestFileMapper.deleteByExample(example3);*/
     }
 
     public void deleteFileRelatedByIds(List<String> ids) {

File: backend/src/main/java/io/dataease/base/domain/DatasetTable.java
Patch:
@@ -21,6 +21,8 @@ public class DatasetTable implements Serializable {
 
     private Long createTime;
 
+    private String qrtzInstance;
+
     private String syncStatus;
 
     private String info;

File: backend/src/main/java/io/dataease/datasource/service/DatasourceService.java
Patch:
@@ -145,7 +145,7 @@ public void initAllDataSourceConnectionPool(){
                         DatasourceRequest datasourceRequest = new DatasourceRequest();
                         datasourceRequest.setDatasource(datasource);
                         datasourceProvider.initDataSource(datasourceRequest);
-                        LogUtil.error("Succsss to init datasource connection pool: " + datasource.getName());
+                        LogUtil.info("Succsss to init datasource connection pool: " + datasource.getName());
                     }catch (Exception e){
                         LogUtil.error("Failed to init datasource connection pool: " + datasource.getName(), e);
                     }

File: backend/src/main/java/io/dataease/job/sechedule/DeScheduleJob.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.job.sechedule;
 
+import com.google.gson.Gson;
 import io.dataease.commons.utils.LogUtil;
 import org.quartz.*;
 

File: backend/src/main/java/io/dataease/job/sechedule/ExtractDataJob.java
Patch:
@@ -15,7 +15,7 @@ public ExtractDataJob() {
 
     @Override
     void businessExecute(JobExecutionContext context) {
-        extractDataService.extractData(datasetTableId, taskId, updateType);
+        extractDataService.extractData(datasetTableId, taskId, updateType, context);
     }
 
 }

File: backend/src/main/java/io/dataease/datasource/service/DatasourceService.java
Patch:
@@ -18,6 +18,7 @@
 import io.dataease.datasource.request.DatasourceRequest;
 import io.dataease.dto.DatasourceDTO;
 import io.dataease.dto.dataset.DataTableInfoDTO;
+import io.dataease.i18n.Translator;
 import io.dataease.service.dataset.DataSetGroupService;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -49,7 +50,7 @@ public Datasource addDatasource(Datasource datasource) {
         DatasourceExample example = new DatasourceExample();
         example.createCriteria().andNameEqualTo(datasource.getName());
         if (CollectionUtils.isNotEmpty(datasourceMapper.selectByExample(example))) {
-            DEException.throwException("Exist data connection with the same name ");
+            DEException.throwException(Translator.get("i18n_ds_name_exists"));
         }
         long currentTimeMillis = System.currentTimeMillis();
         datasource.setId(UUID.randomUUID().toString());

File: backend/src/main/java/io/dataease/base/domain/DatasetTable.java
Patch:
@@ -21,6 +21,8 @@ public class DatasetTable implements Serializable {
 
     private Long createTime;
 
+    private String qrtzInstance;
+
     private String syncStatus;
 
     private String info;

File: backend/src/main/java/io/dataease/datasource/service/DatasourceService.java
Patch:
@@ -145,7 +145,7 @@ public void initAllDataSourceConnectionPool(){
                         DatasourceRequest datasourceRequest = new DatasourceRequest();
                         datasourceRequest.setDatasource(datasource);
                         datasourceProvider.initDataSource(datasourceRequest);
-                        LogUtil.error("Succsss to init datasource connection pool: " + datasource.getName());
+                        LogUtil.info("Succsss to init datasource connection pool: " + datasource.getName());
                     }catch (Exception e){
                         LogUtil.error("Failed to init datasource connection pool: " + datasource.getName(), e);
                     }

File: backend/src/main/java/io/dataease/job/sechedule/DeScheduleJob.java
Patch:
@@ -1,5 +1,6 @@
 package io.dataease.job.sechedule;
 
+import com.google.gson.Gson;
 import io.dataease.commons.utils.LogUtil;
 import org.quartz.*;
 

File: backend/src/main/java/io/dataease/job/sechedule/ExtractDataJob.java
Patch:
@@ -15,7 +15,7 @@ public ExtractDataJob() {
 
     @Override
     void businessExecute(JobExecutionContext context) {
-        extractDataService.extractData(datasetTableId, taskId, updateType);
+        extractDataService.extractData(datasetTableId, taskId, updateType, context);
     }
 
 }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -46,6 +46,8 @@ public DatasetTableTask save(DataSetTaskRequest dataSetTaskRequest) throws Excep
         // check start time and end time
         if (ObjectUtils.isNotEmpty(datasetTableTask.getStartTime())
                 && ObjectUtils.isNotEmpty(datasetTableTask.getEndTime())
+                && datasetTableTask.getStartTime() != 0
+                && datasetTableTask.getEndTime() != 0
                 && datasetTableTask.getStartTime() > datasetTableTask.getEndTime()) {
             throw new RuntimeException(Translator.get("i18n_cron_time_error"));
         }

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtSysUserMapper.java
Patch:
@@ -9,6 +9,5 @@
 import java.util.List;
 
 public interface ExtSysUserMapper {
-
     List<SysUserGridResponse> query(GridExample example);
 }

File: backend/src/main/java/io/dataease/service/ScheduleService.java
Patch:
@@ -34,6 +34,9 @@ public void addSchedule(DatasetTableTask datasetTableTask) throws Exception {
                 endTime = null;
             } else {
                 endTime = new Date(datasetTableTask.getEndTime());
+                if (endTime.before(new Date())) {
+                    return;
+                }
             }
 
             scheduleManager.addOrUpdateCronJob(new JobKey(datasetTableTask.getId(), datasetTableTask.getTableId()),

File: backend/src/main/java/io/dataease/base/domain/DatasetTable.java
Patch:
@@ -21,6 +21,8 @@ public class DatasetTable implements Serializable {
 
     private Long createTime;
 
+    private String syncStatus;
+
     private String info;
 
     private static final long serialVersionUID = 1L;

File: backend/src/main/java/io/dataease/controller/request/BaseTreeRequest.java
Patch:
@@ -22,7 +22,7 @@ public class BaseTreeRequest {
     private String pid;
 
     //now 返回当前条件查询的数据 parent 返回当前数据查询的数据同时递归父节点数据; children 返回当前数据查询的数据同时递归子节点数据
-    private String withExtend= SystemConstants.WITH_EXTEND_NOW;
+    private String withExtend= SystemConstants.WITH_EXTEND.NOW;
 
     private String createBy;
 

File: backend/src/main/java/io/dataease/controller/request/panel/PanelTemplateRequest.java
Patch:
@@ -12,6 +12,8 @@
 public class PanelTemplateRequest extends PanelTemplateWithBLOBs {
     private String sort;
 
+    private String optType;
+
     private Boolean withChildren = false;
 
     public PanelTemplateRequest() {

File: backend/src/main/java/io/dataease/service/sys/SysAuthService.java
Patch:
@@ -103,7 +103,7 @@ public void authChange(SysAuthRequest request) {
     }
 
     private List<String> getAuthModels(String id, String type) {
-        List<VAuthModelDTO> vAuthModelDTOS = searchAuthModelTree(new BaseTreeRequest(id,type, SystemConstants.WITH_EXTEND_CHILDREN));
+        List<VAuthModelDTO> vAuthModelDTOS = searchAuthModelTree(new BaseTreeRequest(id,type, SystemConstants.WITH_EXTEND.CHILDREN));
         List<String> authSources = Optional.ofNullable(vAuthModelDTOS).orElse(new ArrayList<>()).stream().map(VAuthModelDTO::getId)
                 .collect(Collectors.toList());
         return authSources;

File: backend/src/main/java/io/dataease/service/panel/ShareService.java
Patch:
@@ -17,6 +17,7 @@
 import io.dataease.dto.panel.PanelShareDto;
 import io.dataease.dto.panel.PanelSharePo;
 import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
@@ -111,7 +112,7 @@ public List<PanelShareDto> queryTree(BaseGridRequest request){
 
     //List构建Tree
     private List<PanelShareDto> convertTree(List<PanelShareDto> datas){
-        Map<String, List<PanelShareDto>> map = datas.stream().collect(Collectors.groupingBy(PanelShareDto::getCreator));
+        Map<String, List<PanelShareDto>> map = datas.stream().filter(panelShareDto -> StringUtils.isNotEmpty(panelShareDto.getCreator())).collect(Collectors.groupingBy(PanelShareDto::getCreator));
         return map.entrySet().stream().map(entry -> {
             PanelShareDto panelShareDto = new PanelShareDto();
             panelShareDto.setName(entry.getKey());

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -639,7 +639,7 @@ public boolean isKettleRunning() {
 
     private static String handleExcelIntColumn = " \t\tif(tmp != null && tmp.endsWith(\".0\")){\n" +
             "            try {\n" +
-            "                Integer.valueOf(tmp.substring(0, tmp.length()-2));\n" +
+            "                Long.valueOf(tmp.substring(0, tmp.length()-2));\n" +
             "                get(Fields.Out, filed).setValue(r, tmp.substring(0, tmp.length()-2));\n" +
             "                get(Fields.Out, filed).getValueMeta().setType(2);\n" +
             "            }catch (Exception e){}\n" +

File: backend/src/main/java/io/dataease/base/mapper/ext/ExtDataSetGroupMapper.java
Patch:
@@ -4,7 +4,10 @@
 import io.dataease.dto.dataset.DataSetGroupDTO;
 
 import java.util.List;
+import java.util.Map;
 
 public interface ExtDataSetGroupMapper {
     List<DataSetGroupDTO> search(DataSetGroupRequest ChartGroup);
+
+    Map<String, String> searchIds(String id, String type);
 }

File: backend/src/main/java/io/dataease/job/sechedule/ExtractDataJob.java
Patch:
@@ -13,7 +13,6 @@ public ExtractDataJob() {
         extractDataService = (ExtractDataService) CommonBeanFactory.getBean(ExtractDataService.class);
     }
 
-
     @Override
     void businessExecute(JobExecutionContext context) {
         extractDataService.extractData(datasetTableId, taskId, updateType);

File: backend/src/main/java/io/dataease/service/chart/ChartGroupService.java
Patch:
@@ -72,6 +72,7 @@ public ChartGroup getScene(String id) {
     }
 
     public List<ChartGroupDTO> tree(ChartGroupRequest chartGroup) {
+        chartGroup.setLevel(null);
         chartGroup.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
         List<ChartGroupDTO> treeInfo = extChartGroupMapper.search(chartGroup);
         List<ChartGroupDTO> result = TreeUtils.mergeTree(treeInfo);

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -85,6 +85,7 @@ public void deleteTableAndField(List<String> sceneIds) throws Exception {
     }
 
     public List<DataSetGroupDTO> tree(DataSetGroupRequest datasetGroup) {
+        datasetGroup.setLevel(null);
         datasetGroup.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
         List<DataSetGroupDTO> treeInfo = extDataSetGroupMapper.search(datasetGroup);
         List<DataSetGroupDTO> result = TreeUtils.mergeTree(treeInfo);

File: backend/src/main/java/io/dataease/controller/sys/SysAuthController.java
Patch:
@@ -36,6 +36,7 @@ public class SysAuthController {
 
     @ApiOperation("查询视图")
     @PostMapping("/authModels")
+    @I18n
     public  List<VAuthModelDTO> authModels(@RequestBody BaseTreeRequest request){
         return sysAuthService.searchAuthModelTree(request);
     }

File: backend/src/main/java/io/dataease/dto/chart/ChartGroupDTO.java
Patch:
@@ -1,13 +1,14 @@
 package io.dataease.dto.chart;
 
 import io.dataease.base.domain.DatasetGroup;
+import io.dataease.commons.model.ITreeBase;
 import lombok.Data;
 
 import java.util.List;
 
 
 @Data
-public class ChartGroupDTO extends DatasetGroup {
+public class ChartGroupDTO extends DatasetGroup implements ITreeBase<ChartGroupDTO> {
     private String label;
 
     private List<ChartGroupDTO> children;

File: backend/src/main/java/io/dataease/dto/dataset/DataSetGroupDTO.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.dto.dataset;
 
 import io.dataease.base.domain.DatasetGroup;
+import io.dataease.commons.model.ITreeBase;
 import lombok.Data;
 
 import java.util.List;
@@ -10,7 +11,7 @@
  * @Date 2021/2/20 8:17 下午
  */
 @Data
-public class DataSetGroupDTO extends DatasetGroup {
+public class DataSetGroupDTO extends DatasetGroup implements ITreeBase<DataSetGroupDTO> {
     private String label;
     private List<DataSetGroupDTO> children;
 

File: backend/src/main/java/io/dataease/datasource/service/DatasourceService.java
Patch:
@@ -141,7 +141,6 @@ public void initAllDataSourceConnectionPool(){
             try {
                 commonThreadPool.addTask(() ->{
                     try {
-                        System.out.println(new Gson().toJson(datasource));
                         DatasourceProvider datasourceProvider = ProviderFactory.getProvider(datasource.getType());
                         DatasourceRequest datasourceRequest = new DatasourceRequest();
                         datasourceRequest.setDatasource(datasource);

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -14,6 +14,7 @@
 import io.dataease.i18n.Translator;
 import org.apache.commons.collections4.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
+import org.springframework.context.annotation.Lazy;
 import org.springframework.stereotype.Service;
 
 import javax.annotation.Resource;
@@ -32,6 +33,7 @@ public class DataSetGroupService {
     @Resource
     private DatasetGroupMapper datasetGroupMapper;
     @Resource
+    @Lazy
     private DataSetTableService dataSetTableService;
     @Resource
     private ExtDataSetGroupMapper extDataSetGroupMapper;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -35,6 +35,7 @@
 import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.web.multipart.MultipartFile;
 
 import javax.annotation.Resource;
@@ -50,6 +51,7 @@
  * @Date 2021/2/23 2:54 下午
  */
 @Service
+@Transactional(rollbackFor = Exception.class)
 public class DataSetTableService {
     @Resource
     private DatasetTableMapper datasetTableMapper;

File: backend/src/main/java/io/dataease/controller/request/panel/PanelGroupRequest.java
Patch:
@@ -15,6 +15,8 @@ public class PanelGroupRequest extends PanelGroupDTO {
 
     private String userId;
 
+    private String optType;
+
     public PanelGroupRequest() {
     }
 

File: backend/src/main/java/io/dataease/service/sys/MenuService.java
Patch:
@@ -157,7 +157,7 @@ private Set<SysMenu> getChilds(List<SysMenu> lists, Set<SysMenu> sets){
     private MenuTreeNode format(SysMenu sysMenu) {
         MenuTreeNode menuTreeNode = new MenuTreeNode();
         menuTreeNode.setId(sysMenu.getMenuId());
-        menuTreeNode.setLabel(sysMenu.getName());
+        menuTreeNode.setLabel(sysMenu.getTitle());
         menuTreeNode.setHasChildren(false);
         Optional.ofNullable(sysMenu.getMenuSort()).ifPresent(num -> menuTreeNode.setHasChildren(num > 0));
         return menuTreeNode;

File: backend/src/main/java/io/dataease/controller/panel/PanelTemplateController.java
Patch:
@@ -1,6 +1,7 @@
 package io.dataease.controller.panel;
 
 import io.dataease.base.domain.PanelTemplateWithBLOBs;
+import io.dataease.controller.handler.annotation.I18n;
 import io.dataease.controller.request.panel.PanelTemplateRequest;
 import io.dataease.dto.panel.PanelTemplateDTO;
 import io.dataease.service.panel.PanelTemplateService;
@@ -22,6 +23,7 @@ public class PanelTemplateController {
     private PanelTemplateService panelTemplateService;
 
     @PostMapping("/templateList")
+    @I18n
     public List<PanelTemplateDTO> templateList(@RequestBody PanelTemplateRequest request) {
         return panelTemplateService.templateList(request);
     }
@@ -31,7 +33,7 @@ public PanelTemplateDTO save(@RequestBody PanelTemplateRequest request) {
         return panelTemplateService.save(request);
     }
 
-    @PostMapping("/delete/{id}")
+    @DeleteMapping("/delete/{id}")
     public void delete(@PathVariable String id) {
         panelTemplateService.delete(id);
     }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -205,9 +205,9 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
     }
 
     private void checkName(ChartViewWithBLOBs chartView) {
-        if (StringUtils.isEmpty(chartView.getId())) {
-            return;
-        }
+//        if (StringUtils.isEmpty(chartView.getId())) {
+//            return;
+//        }
         ChartViewExample chartViewExample = new ChartViewExample();
         ChartViewExample.Criteria criteria = chartViewExample.createCriteria();
         if (StringUtils.isNotEmpty(chartView.getId())) {

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -595,9 +595,9 @@ public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncr
     }
 
     private void checkName(DatasetTable datasetTable) {
-        if (StringUtils.isEmpty(datasetTable.getId()) && StringUtils.equalsIgnoreCase("db", datasetTable.getType())) {
-            return;
-        }
+//        if (StringUtils.isEmpty(datasetTable.getId()) && StringUtils.equalsIgnoreCase("db", datasetTable.getType())) {
+//            return;
+//        }
         DatasetTableExample datasetTableExample = new DatasetTableExample();
         DatasetTableExample.Criteria criteria = datasetTableExample.createCriteria();
         if (StringUtils.isNotEmpty(datasetTable.getId())) {

File: backend/src/main/java/io/dataease/provider/mysql/MysqlQueryProvider.java
Patch:
@@ -184,7 +184,7 @@ public String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartView
                 StringUtils.join(groupField, ","),
                 StringUtils.join(field, ","),
                 table,
-                xFilter.length > 0 ? StringUtils.join(xFilter, " ") : "" + transMysqlExtFilter(extFilterRequestList),// origin field filter and panel field filter
+                (xFilter.length > 0 ? StringUtils.join(xFilter, " ") : "") + transMysqlExtFilter(extFilterRequestList),// origin field filter and panel field filter
                 StringUtils.join(group, ","),
                 StringUtils.join(order, ","));
         if (sql.endsWith(",")) {

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -59,7 +59,7 @@ public ChartViewWithBLOBs save(ChartViewWithBLOBs chartView) {
             chartView.setCreateBy(AuthUtils.getUser().getUsername());
             chartView.setCreateTime(timestamp);
             chartView.setUpdateTime(timestamp);
-            chartViewMapper.insert(chartView);
+            chartViewMapper.insertSelective(chartView);
         }
         return chartView;
     }

File: backend/src/main/java/io/dataease/datasource/service/DatasourceService.java
Patch:
@@ -51,7 +51,7 @@ public Datasource addDatasource(Datasource datasource) {
         datasource.setId(UUID.randomUUID().toString());
         datasource.setUpdateTime(currentTimeMillis);
         datasource.setCreateTime(currentTimeMillis);
-        datasource.setCreateBy(String.valueOf(AuthUtils.getUser().getUserId()));
+        datasource.setCreateBy(String.valueOf(AuthUtils.getUser().getUsername()));
         datasourceMapper.insertSelective(datasource);
         return datasource;
     }

File: backend/src/main/java/io/dataease/service/chart/ChartGroupService.java
Patch:
@@ -46,8 +46,9 @@ public ChartGroupDTO save(ChartGroup chartGroup) {
     }
 
     public void delete(String id) {
+        ChartGroup cg = chartGroupMapper.selectByPrimaryKey(id);
         ChartGroupRequest ChartGroup = new ChartGroupRequest();
-        ChartGroup.setId(id);
+        BeanUtils.copyBean(ChartGroup, cg);
         List<ChartGroupDTO> tree = tree(ChartGroup);
         List<String> ids = new ArrayList<>();
         getAllId(tree, ids);
@@ -70,7 +71,7 @@ public ChartGroup getScene(String id) {
 
     public List<ChartGroupDTO> tree(ChartGroupRequest chartGroup) {
         chartGroup.setUserId(String.valueOf(AuthUtils.getUser().getUserId()));
-        if(chartGroup.getLevel() == null){
+        if (chartGroup.getLevel() == null) {
             chartGroup.setLevel(0);
         }
         List<ChartGroupDTO> treeInfo = extChartGroupMapper.search(chartGroup);

File: backend/src/main/java/io/dataease/controller/sys/SysMenuController.java
Patch:
@@ -4,6 +4,7 @@
 import io.dataease.base.domain.SysMenu;
 import io.dataease.commons.utils.BeanUtils;
 
+import io.dataease.controller.handler.annotation.I18n;
 import io.dataease.controller.sys.request.MenuCreateRequest;
 import io.dataease.controller.sys.request.MenuDeleteRequest;
 import io.dataease.controller.sys.response.MenuNodeResponse;
@@ -28,6 +29,7 @@ public class SysMenuController {
     private MenuService menuService;
 
     @ApiOperation("查询跟节点菜单")
+    @I18n
     @PostMapping("/childNodes/{pid}")
     public List<MenuNodeResponse> childNodes(@PathVariable("pid") Long pid){
         List<SysMenu> nodes = menuService.nodesByPid(pid);

File: backend/src/main/java/io/dataease/i18n/Translator.java
Patch:
@@ -36,7 +36,6 @@ public void setMessageSource(MessageSource messageSource) {
      * 单Key翻译
      */
     public static String get(String key) {
-        System.out.println(LocaleContextHolder.getLocale());
         return messageSource.getMessage(key, null, key, LocaleContextHolder.getLocale());
     }
 

File: backend/src/main/java/io/dataease/service/AboutService.java
Patch:
@@ -15,8 +15,8 @@
 
 @Service
 public class AboutService {
-    private static final String BUILD_VERSION = "/opt/fit2cloud/conf/version";
-    private static final String product = "dataease";
+    private static final String BUILD_VERSION = "/opt/dataease/conf/version";
+    private static final String product = "DataEase";
 
     @Resource
     private DefaultLicenseService defaultLicenseService;

File: backend/src/main/java/io/dataease/datasource/provider/JdbcProvider.java
Patch:
@@ -382,9 +382,10 @@ private String getTablesSql(DatasourceRequest datasourceRequest) {
             case doris:
                 return "show tables;";
             case sqlServer:
-                return "SELECT TABLE_NAME FROM fit2cloud2.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE';";
+                SqlServerConfigration sqlServerConfigration = new Gson().fromJson(datasourceRequest.getDatasource().getConfiguration(), SqlServerConfigration.class);
+                return "SELECT TABLE_NAME FROM DATABASE.INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE';".replace("DATABASE", sqlServerConfigration.getDataBase());
             default:
                 return "show tables;";
         }
     }
-}
+}
\ No newline at end of file

File: backend/src/main/java/io/dataease/commons/license/DefaultLicenseService.java
Patch:
@@ -21,7 +21,7 @@ public class DefaultLicenseService {
 
     private static final String LICENSE_ID = "fit2cloud_license";
     private static final String validatorUtil = "/usr/bin/validator";
-    private static final String product = "dataease";
+    private static final String product = "DataEase";
     /*private static final String[] NO_PLU_LIMIT_MODULES = new String[]{"dashboard", "gateway"};*/
 
     public F2CLicenseResponse validateLicense(String product, String licenseKey){

File: backend/src/main/java/io/dataease/controller/panel/api/StoreApi.java
Patch:
@@ -31,6 +31,6 @@ public interface StoreApi {
 
     @ApiOperation("移除收藏")
     @PostMapping("/remove/{storeId}")
-    void remove(@PathVariable("storeId") Long storeId);
+    void remove(@PathVariable("storeId") String storeId);
 
 }

File: backend/src/main/java/io/dataease/datasource/service/DatasourceService.java
Patch:
@@ -6,6 +6,7 @@
 import io.dataease.base.mapper.ext.ExtDataSourceMapper;
 import io.dataease.base.mapper.ext.query.GridExample;
 import io.dataease.commons.exception.DEException;
+import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.CommonThreadPool;
 import io.dataease.controller.sys.base.BaseGridRequest;
 import io.dataease.datasource.dto.DBTableDTO;
@@ -108,7 +109,7 @@ public List<DBTableDTO> getTables(Datasource datasource) throws Exception {
             dbTableDTO.setDatasetPath(null);
             for (DatasetTable datasetTable : datasetTables) {
                 DataTableInfoDTO dataTableInfoDTO = new Gson().fromJson(datasetTable.getInfo(), DataTableInfoDTO.class);
-                if (StringUtils.equals(name, dataTableInfoDTO.getTable())) {
+                if (StringUtils.equals(name, dataTableInfoDTO.getTable()) && StringUtils.equals(datasetTable.getCreateBy(), AuthUtils.getUser().getUsername())) {
                     dbTableDTO.setEnableCheck(false);
 
                     List<DatasetGroup> parents = dataSetGroupService.getParents(datasetTable.getSceneId());

File: backend/src/main/java/io/dataease/provider/QueryProvider.java
Patch:
@@ -11,7 +11,7 @@
  * @Date 2021/5/17 2:42 下午
  */
 public abstract class QueryProvider {
-    public abstract Integer transFieldType( String field);
+    public abstract Integer transFieldType(String field);
 
     public abstract String createQueryCountSQL(String table);
 
@@ -30,4 +30,6 @@ public abstract class QueryProvider {
     public abstract String getSQL(String table, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, List<ChartExtFilterRequest> extFilterRequestList);
 
     public abstract String getSQLAsTmp(String table, List<ChartViewFieldDTO> xAxis, List<ChartViewFieldDTO> yAxis, List<ChartExtFilterRequest> extFilterRequestList);
+
+    public abstract String searchTable(String table);
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -310,7 +310,7 @@ public String transMysqlSQL(String table, List<ChartViewFieldDTO> xAxis, List<Ch
                         } else if (StringUtils.containsIgnoreCase(f.getTerm(), "like")) {
                             filter.append("%").append(f.getValue()).append("%");
                         } else {
-                            filter.append(f.getValue());
+                            filter.append("'" + f.getValue() + "'");
                         }
                         return filter.toString();
                     }).toArray(String[]::new);
@@ -339,7 +339,7 @@ public String transMysqlSQL(String table, List<ChartViewFieldDTO> xAxis, List<Ch
                         } else if (StringUtils.containsIgnoreCase(f.getTerm(), "like")) {
                             filter.append("%").append(f.getValue()).append("%");
                         } else {
-                            filter.append(f.getValue());
+                            filter.append("'" + f.getValue() + "'");
                         }
                         return filter.toString();
                     }).toArray(String[]::new);

File: backend/src/main/java/io/dataease/base/domain/DatasetTableField.java
Patch:
@@ -24,6 +24,8 @@ public class DatasetTableField implements Serializable {
 
     private Integer deType;
 
+    private Integer deExtractType;
+
     private Boolean checked;
 
     private Integer columnIndex;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -514,8 +514,10 @@ public void saveTableField(DatasetTable datasetTable) throws Exception {
                 datasetTableField.setType(filed.getFieldType());
                 if (ObjectUtils.isEmpty(ds)) {
                     datasetTableField.setDeType(transFieldType(filed.getFieldType()));
+                    datasetTableField.setDeExtractType(transFieldType(filed.getFieldType()));
                 } else {
                     datasetTableField.setDeType(transFieldType(ds.getType(), filed.getFieldType()));
+                    datasetTableField.setDeExtractType(transFieldType(ds.getType(), filed.getFieldType()));
                 }
                 datasetTableField.setSize(filed.getFieldSize());
                 datasetTableField.setChecked(true);

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -113,7 +113,7 @@ private String createDorisTablColumnSql( List<DatasetTableField> datasetTableFie
         String Column_Fields = "dataease_uuid  varchar(50), `";
         for (DatasetTableField datasetTableField : datasetTableFields) {
             Column_Fields = Column_Fields + datasetTableField.getDataeaseName() + "` ";
-            switch (datasetTableField.getDeType()){
+            switch (datasetTableField.getDeExtractType()){
                 case 0:
                     if(datasetTableField.getSize() > 65533){
                         Column_Fields = Column_Fields + "String" + ",`";
@@ -531,7 +531,7 @@ private StepMeta outputStep(String dorisOutputTable){
     private StepMeta udjc(List<DatasetTableField> datasetTableFields){
         String needToChangeolumnType = "";
         for (DatasetTableField datasetTableField : datasetTableFields) {
-            if(datasetTableField.getDeType() != null && datasetTableField.getDeType() == 4){
+            if(datasetTableField.getDeExtractType() != null && datasetTableField.getDeExtractType() == 4){
                 needToChangeolumnType = needToChangeolumnType + alterColumnTypeCode.replace("FILED", datasetTableField.getOriginName());
             }
         }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -619,8 +619,6 @@ public Integer transMysqlField(String field) {
             case "TIMESTAMP":
                 return 1;// 时间
             case "INT":
-            case "BIT":
-            case "TINYINT":
             case "SMALLINT":
             case "MEDIUMINT":
             case "INTEGER":
@@ -630,6 +628,9 @@ public Integer transMysqlField(String field) {
             case "DOUBLE":
             case "DECIMAL":
                 return 3;// 浮点
+            case "BIT":
+            case "TINYINT":
+                return 4;// 布尔
             default:
                 return 0;
         }

File: backend/src/main/java/io/dataease/base/domain/DatasetTableTaskLog.java
Patch:
@@ -17,9 +17,9 @@ public class DatasetTableTaskLog implements Serializable {
 
     private String status;
 
-    private String info;
-
     private Long createTime;
 
+    private String info;
+
     private static final long serialVersionUID = 1L;
 }
\ No newline at end of file

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -664,9 +664,7 @@ public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncr
             datasetTableIncrementalConfig.setId(UUID.randomUUID().toString());
             datasetTableIncrementalConfigMapper.insertSelective(datasetTableIncrementalConfig);
         } else {
-            DatasetTableIncrementalConfigExample example = new DatasetTableIncrementalConfigExample();
-            example.createCriteria().andTableIdEqualTo(datasetTableIncrementalConfig.getTableId());
-            datasetTableIncrementalConfigMapper.updateByExample(datasetTableIncrementalConfig, example);
+            datasetTableIncrementalConfigMapper.updateByPrimaryKey(datasetTableIncrementalConfig);
         }
     }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -144,7 +144,6 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             } else if (StringUtils.equalsIgnoreCase(table.getType(), "sql")) {
                 datasourceRequest.setQuery(getSQL(ds.getType(), " (" + dataTableInfoDTO.getSql() + ") AS tmp ", xAxis, yAxis, extFilterList));
             }
-            LogUtil.info(datasourceRequest.getQuery());
             data = datasourceProvider.getData(datasourceRequest);
         } else if (table.getMode() == 1) {// 抽取
             // 获取数据集de字段
@@ -159,7 +158,6 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             String tableName = "ds_" + table.getId().replaceAll("-", "_");
             datasourceRequest.setTable(tableName);
             datasourceRequest.setQuery(getSQL(ds.getType(), tableName, xAxis, yAxis, extFilterList));
-            LogUtil.info(datasourceRequest.getQuery());
             data = datasourceProvider.getData(datasourceRequest);
         }
 

File: backend/src/main/java/io/dataease/service/dataset/ExtractDataService.java
Patch:
@@ -494,6 +494,7 @@ private StepMeta excelInputStep(String filePath, List<DatasetTableField> dataset
         excelInputMeta.setPassword("Encrypted");
         excelInputMeta.setFileName(new String[]{filePath});
         excelInputMeta.setStartsWithHeader(true);
+        excelInputMeta.setIgnoreEmptyRows(true);
         ExcelInputField[] fields = new ExcelInputField[datasetTableFields.size()];
         for (int i=0; i<datasetTableFields.size();i++) {
             ExcelInputField field = new ExcelInputField();

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -8,6 +8,7 @@
 import io.dataease.commons.utils.AuthUtils;
 import io.dataease.commons.utils.BeanUtils;
 import io.dataease.commons.utils.CommonBeanFactory;
+import io.dataease.commons.utils.LogUtil;
 import io.dataease.controller.request.chart.ChartExtFilterRequest;
 import io.dataease.controller.request.chart.ChartExtRequest;
 import io.dataease.controller.request.chart.ChartViewRequest;
@@ -143,6 +144,7 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             } else if (StringUtils.equalsIgnoreCase(table.getType(), "sql")) {
                 datasourceRequest.setQuery(getSQL(ds.getType(), " (" + dataTableInfoDTO.getSql() + ") AS tmp ", xAxis, yAxis, extFilterList));
             }
+            LogUtil.info(datasourceRequest.getQuery());
             data = datasourceProvider.getData(datasourceRequest);
         } else if (table.getMode() == 1) {// 抽取
             // 获取数据集de字段
@@ -157,6 +159,7 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             String tableName = "ds_" + table.getId().replaceAll("-", "_");
             datasourceRequest.setTable(tableName);
             datasourceRequest.setQuery(getSQL(ds.getType(), tableName, xAxis, yAxis, extFilterList));
+            LogUtil.info(datasourceRequest.getQuery());
             data = datasourceProvider.getData(datasourceRequest);
         }
 

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -199,9 +199,9 @@ public ChartViewDTO getData(String id, ChartExtRequest requestList) throws Excep
             for (int i = 0; i < fields.size(); i++) {
                 ChartViewFieldDTO chartViewFieldDTO = fields.get(i);
                 if (chartViewFieldDTO.getDeType() == 0 || chartViewFieldDTO.getDeType() == 1) {
-                    d.put(fields.get(i).getDataeaseName(), ele[i]);
+                    d.put(fields.get(i).getDataeaseName(), StringUtils.isEmpty(ele[i]) ? "" : ele[i]);
                 } else if (chartViewFieldDTO.getDeType() == 2 || chartViewFieldDTO.getDeType() == 3) {
-                    d.put(fields.get(i).getDataeaseName(), new BigDecimal(ele[i]).setScale(2, RoundingMode.HALF_UP));
+                    d.put(fields.get(i).getDataeaseName(), new BigDecimal(StringUtils.isEmpty(ele[i]) ? "0" : ele[i]).setScale(2, RoundingMode.HALF_UP));
                 }
             }
             tableRow.add(d);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -32,7 +32,6 @@
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Service;
 import org.springframework.web.multipart.MultipartFile;
-import sun.rmi.runtime.Log;
 
 import javax.annotation.Resource;
 import java.io.*;
@@ -169,6 +168,7 @@ public Map<String, List<DatasetTableField>> getFieldsFromDE(DataSetTableRequest
                 .tableId(dataSetTableRequest.getId())
                 .originName("*")
                 .name("记录数*")
+                .dataeaseName("*")
                 .type("INT")
                 .checked(true)
                 .columnIndex(999)

File: backend/src/main/java/io/dataease/dto/chart/ChartViewFieldDTO.java
Patch:
@@ -17,6 +17,8 @@ public class ChartViewFieldDTO implements Serializable {
 
     private String originName;
 
+    private String dataeaseName;
+
     private String name;
 
     private String type;

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -480,6 +480,9 @@ public DatasetTableIncrementalConfig incrementalConfig(String datasetTableId) {
 
 
     public void saveIncrementalConfig(DatasetTableIncrementalConfig datasetTableIncrementalConfig) {
+        if(datasetTableIncrementalConfig == null || StringUtils.isEmpty(datasetTableIncrementalConfig.getTableId())){
+            return;
+        }
         if (StringUtils.isEmpty(datasetTableIncrementalConfig.getId())) {
             datasetTableIncrementalConfig.setId(UUID.randomUUID().toString());
             datasetTableIncrementalConfigMapper.insertSelective(datasetTableIncrementalConfig);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -206,7 +206,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
             datasourceRequest.setDatasource(ds);
 
             String table = dataTableInfoDTO.getTable();
-            datasourceRequest.setQuery(createQuerySQL(ds.getType(), table, fieldArray) + " LIMIT " + (page - 1) * realSize + "," + realSize);
+            datasourceRequest.setQuery(createQuerySQL(ds.getType(), table, fieldArray) + " LIMIT " + (page - 1) * pageSize + "," + realSize);
 
             try {
                 data.addAll(datasourceProvider.getData(datasourceRequest));
@@ -226,7 +226,7 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
             datasourceRequest.setDatasource(ds);
 
             String sql = dataTableInfoDTO.getSql();
-            datasourceRequest.setQuery(createQuerySQL(ds.getType(), " (" + sql + ") AS tmp ", fieldArray) + " LIMIT " + (page - 1) * realSize + "," + realSize);
+            datasourceRequest.setQuery(createQuerySQL(ds.getType(), " (" + sql + ") AS tmp ", fieldArray) + " LIMIT " + (page - 1) * pageSize + "," + realSize);
 
             try {
                 data.addAll(datasourceProvider.getData(datasourceRequest));

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -188,6 +188,9 @@ public Map<String, Object> getPreviewData(DataSetTableRequest dataSetTableReques
         dataSetPreviewPage.setPage(page);
         dataSetPreviewPage.setPageSize(pageSize);
         int realSize = Integer.parseInt(dataSetTableRequest.getRow()) < pageSize ? Integer.parseInt(dataSetTableRequest.getRow()) : pageSize;
+        if (page == Integer.parseInt(dataSetTableRequest.getRow()) / pageSize + 1) {
+            realSize = Integer.parseInt(dataSetTableRequest.getRow()) % pageSize;
+        }
         if (StringUtils.equalsIgnoreCase(datasetTable.getType(), "db")) {
             Datasource ds = datasourceMapper.selectByPrimaryKey(dataSetTableRequest.getDataSourceId());
             DatasourceProvider datasourceProvider = ProviderFactory.getProvider(ds.getType());

File: backend/src/main/java/io/dataease/controller/dataset/DataSetTableController.java
Patch:
@@ -63,9 +63,9 @@ public List<String[]> getData(@RequestBody DataSetTableRequest dataSetTableReque
         return dataSetTableService.getData(dataSetTableRequest);
     }
 
-    @PostMapping("getPreviewData")
-    public Map<String, Object> getPreviewData(@RequestBody DataSetTableRequest dataSetTableRequest) throws Exception {
-        return dataSetTableService.getPreviewData(dataSetTableRequest);
+    @PostMapping("getPreviewData/{page}/{pageSize}")
+    public Map<String, Object> getPreviewData(@RequestBody DataSetTableRequest dataSetTableRequest, @PathVariable Integer page, @PathVariable Integer pageSize) throws Exception {
+        return dataSetTableService.getPreviewData(dataSetTableRequest, page, pageSize);
     }
 
     @PostMapping("sqlPreview")

File: backend/src/main/java/io/dataease/auth/config/F2CRealm.java
Patch:
@@ -68,6 +68,9 @@ protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken auth) t
         if (user == null) {
             throw new AuthenticationException("User didn't existed!");
         }
+        if (user.getEnabled()==0) {
+            throw new AuthenticationException("User is valid!");
+        }
         String pass = null;
         try {
             pass = user.getPassword();

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -294,7 +294,7 @@ public String transMysqlSQL(String table, List<ChartViewFieldDTO> xAxis, List<Ch
         // 如果是对结果字段过滤，则再包裹一层sql
         String[] resultFilter = yAxis.stream().filter(y -> CollectionUtils.isNotEmpty(y.getFilter()) && y.getFilter().size() > 0)
                 .map(y -> {
-                    String[] s = y.getFilter().stream().map(f -> "AND _" + y.getSummary() + "_" + y.getOriginName() + transMysqlFilterTerm(f.getTerm()) + f.getValue()).toArray(String[]::new);
+                    String[] s = y.getFilter().stream().map(f -> "AND _" + y.getSummary() + "_" + (StringUtils.equalsIgnoreCase(y.getOriginName(), "*") ? "" : y.getOriginName()) + transMysqlFilterTerm(f.getTerm()) + f.getValue()).toArray(String[]::new);
                     return StringUtils.join(s, " ");
                 }).toArray(String[]::new);
         if (resultFilter.length == 0) {

File: backend/src/main/java/io/dataease/service/spark/SparkCalc.java
Patch:
@@ -147,7 +147,7 @@ public List<String[]> getData(String hTable, List<ChartViewFieldDTO> xAxis, List
         for (Row row : list) {
             String[] r = new String[row.length()];
             for (int i = 0; i < row.length(); i++) {
-                r[i] = row.get(i).toString();
+                r[i] = row.get(i) == null ? "null" : row.get(i).toString();
             }
             data.add(r);
         }

File: backend/src/main/java/io/dataease/service/spark/SparkCalc.java
Patch:
@@ -81,7 +81,7 @@ public List<String[]> getData(String hTable, List<ChartViewFieldDTO> xAxis, List
                         if (StringUtils.isEmpty(l)) {
                             l = "0";
                         }
-                        list.add(new BigDecimal(l));
+                        list.add(l.contains(".") ? Double.parseDouble(l) : Long.parseLong(l));
                     }
                 });
                 yAxis.forEach(y -> {
@@ -92,7 +92,7 @@ public List<String[]> getData(String hTable, List<ChartViewFieldDTO> xAxis, List
                         if (StringUtils.isEmpty(l)) {
                             l = "0";
                         }
-                        list.add(new BigDecimal(l));
+                        list.add(l.contains(".") ? Double.parseDouble(l) : Long.parseLong(l));
                     }
                 });
                 iterator.add(RowFactory.create(list.toArray()));

File: backend/src/main/java/io/dataease/service/spark/SparkCalc.java
Patch:
@@ -25,6 +25,7 @@
 import scala.Tuple2;
 
 import javax.annotation.Resource;
+import java.math.BigDecimal;
 import java.text.MessageFormat;
 import java.util.ArrayList;
 import java.util.Base64;
@@ -80,7 +81,7 @@ public List<String[]> getData(String hTable, List<ChartViewFieldDTO> xAxis, List
                         if (StringUtils.isEmpty(l)) {
                             l = "0";
                         }
-                        list.add(Long.valueOf(l));
+                        list.add(new BigDecimal(l));
                     }
                 });
                 yAxis.forEach(y -> {
@@ -91,7 +92,7 @@ public List<String[]> getData(String hTable, List<ChartViewFieldDTO> xAxis, List
                         if (StringUtils.isEmpty(l)) {
                             l = "0";
                         }
-                        list.add(Long.valueOf(l));
+                        list.add(new BigDecimal(l));
                     }
                 });
                 iterator.add(RowFactory.create(list.toArray()));

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -146,7 +146,7 @@ public ChartViewDTO getData(String id) throws Exception {
             x.add(a.toString());
             for (int i = xAxis.size(); i < xAxis.size() + yAxis.size(); i++) {
                 int j = i - xAxis.size();
-                series.get(j).getData().add(new BigDecimal(d[i] == null ? "0" : d[i]));
+                series.get(j).getData().add(new BigDecimal(StringUtils.isEmpty(d[i]) ? "0" : d[i]));
             }
         }
         Map<String, Object> map = new HashMap<>();

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -136,7 +136,6 @@ public ChartViewDTO getData(String id) throws Exception {
         }
         for (String[] d : data) {
             StringBuilder a = new StringBuilder();
-            BigDecimal b = new BigDecimal("0");
             for (int i = 0; i < xAxis.size(); i++) {
                 if (i == xAxis.size() - 1) {
                     a.append(d[i]);
@@ -147,7 +146,7 @@ public ChartViewDTO getData(String id) throws Exception {
             x.add(a.toString());
             for (int i = xAxis.size(); i < xAxis.size() + yAxis.size(); i++) {
                 int j = i - xAxis.size();
-                series.get(j).getData().add(new BigDecimal(d[i]));
+                series.get(j).getData().add(new BigDecimal(d[i] == null ? "0" : d[i]));
             }
         }
         Map<String, Object> map = new HashMap<>();

File: backend/src/main/java/io/dataease/controller/request/dataset/DataSetTableRequest.java
Patch:
@@ -15,5 +15,5 @@
 public class DataSetTableRequest extends DatasetTable {
     private String sort;
     private List<String> tableNames;
-    private String row;
+    private String row = "1000";
 }

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -119,7 +119,8 @@ public ChartViewDTO getData(String id) throws Exception {
             data = datasourceProvider.getData(datasourceRequest);
         } else if (table.getMode() == 1) {// 抽取
             DataTableInfoDTO dataTableInfoDTO = new Gson().fromJson(table.getInfo(), DataTableInfoDTO.class);
-            data = sparkCalc.getData(dataTableInfoDTO.getTable() + "-" + table.getDataSourceId(), xAxis, yAxis, "tmp");// todo hBase table name maybe change
+            String tableName = dataTableInfoDTO.getTable() + "-" + table.getDataSourceId();// todo hBase table name maybe change
+            data = sparkCalc.getData(tableName, xAxis, yAxis, view.getId().split("-")[0]);
         }
 
         // 图表组件可再扩展

File: backend/src/main/java/io/dataease/config/CommonConfig.java
Patch:
@@ -37,6 +37,7 @@ public JavaSparkContext javaSparkContext() {
         SparkSession spark = SparkSession.builder()
                 .appName(env.getProperty("spark.appName", "DataeaseJob"))
                 .master(env.getProperty("spark.master", "local[*]"))
+                .config("spark.scheduler.mode", "FAIR")
                 .getOrCreate();
         JavaSparkContext sc = new JavaSparkContext(spark.sparkContext());
         return sc;

File: backend/src/main/java/io/dataease/service/chart/ChartGroupService.java
Patch:
@@ -33,7 +33,7 @@ public ChartGroupDTO save(ChartGroup chartGroup) {
             chartGroup.setCreateTime(System.currentTimeMillis());
             chartGroupMapper.insert(chartGroup);
         } else {
-            chartGroupMapper.updateByPrimaryKey(chartGroup);
+            chartGroupMapper.updateByPrimaryKeySelective(chartGroup);
         }
         ChartGroupDTO ChartGroupDTO = new ChartGroupDTO();
         BeanUtils.copyBean(ChartGroupDTO, chartGroup);

File: backend/src/main/java/io/dataease/service/chart/ChartViewService.java
Patch:
@@ -45,7 +45,7 @@ public class ChartViewService {
     public ChartViewWithBLOBs save(ChartViewWithBLOBs chartView) {
         long timestamp = System.currentTimeMillis();
         chartView.setUpdateTime(timestamp);
-        int i = chartViewMapper.updateByPrimaryKeyWithBLOBs(chartView);
+        int i = chartViewMapper.updateByPrimaryKeySelective(chartView);
         if (i == 0) {
             chartView.setId(UUID.randomUUID().toString());
             chartView.setCreateTime(timestamp);

File: backend/src/main/java/io/dataease/service/dataset/DataSetGroupService.java
Patch:
@@ -35,7 +35,7 @@ public DataSetGroupDTO save(DatasetGroup datasetGroup) {
             datasetGroup.setCreateTime(System.currentTimeMillis());
             datasetGroupMapper.insert(datasetGroup);
         } else {
-            datasetGroupMapper.updateByPrimaryKey(datasetGroup);
+            datasetGroupMapper.updateByPrimaryKeySelective(datasetGroup);
         }
         DataSetGroupDTO dataSetGroupDTO = new DataSetGroupDTO();
         BeanUtils.copyBean(dataSetGroupDTO, datasetGroup);

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableFieldsService.java
Patch:
@@ -31,7 +31,7 @@ public DatasetTableField save(DatasetTableField datasetTableField) {
             datasetTableField.setId(UUID.randomUUID().toString());
             datasetTableFieldMapper.insert(datasetTableField);
         } else {
-            datasetTableFieldMapper.updateByPrimaryKey(datasetTableField);
+            datasetTableFieldMapper.updateByPrimaryKeySelective(datasetTableField);
         }
         return datasetTableField;
     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableService.java
Patch:
@@ -62,7 +62,7 @@ public DatasetTable save(DatasetTable datasetTable) throws Exception {
                 saveTableField(datasetTable);
             }
         } else {
-            datasetTableMapper.updateByPrimaryKeyWithBLOBs(datasetTable);
+            datasetTableMapper.updateByPrimaryKeySelective(datasetTable);
         }
         return datasetTable;
     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskLogService.java
Patch:
@@ -29,7 +29,7 @@ public DatasetTableTaskLog save(DatasetTableTaskLog datasetTableTaskLog) {
             datasetTableTaskLog.setCreateTime(System.currentTimeMillis());
             datasetTableTaskLogMapper.insert(datasetTableTaskLog);
         } else {
-            datasetTableTaskLogMapper.updateByPrimaryKey(datasetTableTaskLog);
+            datasetTableTaskLogMapper.updateByPrimaryKeySelective(datasetTableTaskLog);
         }
         return datasetTableTaskLog;
     }

File: backend/src/main/java/io/dataease/service/dataset/DataSetTableTaskService.java
Patch:
@@ -39,7 +39,7 @@ public DatasetTableTask save(DatasetTableTask datasetTableTask) throws Exception
             datasetTableTask.setCreateTime(System.currentTimeMillis());
             datasetTableTaskMapper.insert(datasetTableTask);
         } else {
-            datasetTableTaskMapper.updateByPrimaryKey(datasetTableTask);
+            datasetTableTaskMapper.updateByPrimaryKeySelective(datasetTableTask);
         }
         scheduleService.addSchedule(datasetTableTask);
         return datasetTableTask;

File: backend/src/main/java/io/dataease/auth/config/ShiroConfig.java
Patch:
@@ -53,7 +53,8 @@ public ShiroFilterFactoryBean factory(DefaultWebSecurityManager securityManager,
         /*filterMap.put("jwt", jwtFilter);*/
         filterMap.put("logout", new F2CLogoutFilter());
         factoryBean.setSecurityManager(securityManager);
-        factoryBean.setUnauthorizedUrl("/permissionMiss");
+        factoryBean.setLoginUrl("/index.html");
+        factoryBean.setUnauthorizedUrl("/index.html");
         factoryBean.setFilterChainDefinitionMap(shiroService.loadFilterChainDefinitionMap());
         factoryBean.setFilters(filterMap);
         return factoryBean;

File: backend/src/main/java/io/dataease/auth/util/JWTUtils.java
Patch:
@@ -20,9 +20,9 @@ public class JWTUtils {
 
 
     // token过期时间1min (过期会自动刷新续命 目的是避免一直都是同一个token )
-    private static final long EXPIRE_TIME = 1*60*1000/2;
+    private static final long EXPIRE_TIME = 5*60*1000;
     // 登录间隔时间10min 超过这个时间强制重新登录
-    private static final long Login_Interval = 20*60*1000;
+    private static final long Login_Interval = 30*60*1000;
 
 
     /**
@@ -81,6 +81,7 @@ public static boolean needRefresh(String token){
     public static boolean loginExpire(String token){
         Long now = System.currentTimeMillis();
         Long lastOperateTime = tokenLastOperateTime(token);
+        if (lastOperateTime == null) return true;
         return now - lastOperateTime > Login_Interval;
     }
 

File: backend/src/main/java/io/dataease/auth/service/impl/ShiroServiceImpl.java
Patch:
@@ -35,6 +35,7 @@ public Map<String, String> loadFilterChainDefinitionMap() {
         // filterChainDefinitionMap.put("/404", "anon");
         // 登陆
         // filterChainDefinitionMap.put("/api/auth/logout", "anon");
+        filterChainDefinitionMap.put("/api/auth/test", "anon");
         filterChainDefinitionMap.put("/api/auth/login", "anon");
         // 退出
 

File: backend/src/main/java/io/dataease/service/sys/SysUserService.java
Patch:
@@ -111,6 +111,7 @@ public int updatePwd(SysUserPwdRequest request) {
         return sysUserMapper.updateByPrimaryKeySelective(sysUser);
     }
 
+    @CacheEvict(value = USER_CACHE_NAME, key = "'user' + #request.userId")
     public int adminUpdatePwd(SysUserPwdRequest request){
         SysUser sysUser = new SysUser();
         sysUser.setUserId(request.getUserId());

File: backend/src/main/java/io/dataease/controller/handler/ResultResponseBodyAdvice.java
Patch:
@@ -16,7 +16,7 @@
 /**
  * 统一处理返回结果集
  */
-@RestControllerAdvice(value = {"io.metersphere"})
+@RestControllerAdvice(value = {"io.dataease"})
 public class ResultResponseBodyAdvice implements ResponseBodyAdvice<Object> {
 
     @Override

